var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2311";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__10674__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__10674 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10674__delegate.call(this, args);
    };
    G__10674.cljs$lang$maxFixedArity = 0;
    G__10674.cljs$lang$applyTo = function(arglist__10675) {
      var args = cljs.core.seq(arglist__10675);
      return G__10674__delegate(args);
    };
    G__10674.cljs$core$IFn$_invoke$arity$variadic = G__10674__delegate;
    return G__10674;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3541__auto__ = ty;
    if (cljs.core.truth_(and__3541__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3541__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4409__auto___10676 = len;
  var i_10677 = 0;
  while (true) {
    if (i_10677 < n__4409__auto___10676) {
      new_arr[i_10677] = arr[i_10677];
      var G__10678 = i_10677 + 1;
      i_10677 = G__10678;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__10679__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__10679 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10679__delegate.call(this, array, i, idxs);
    };
    G__10679.cljs$lang$maxFixedArity = 2;
    G__10679.cljs$lang$applyTo = function(arglist__10680) {
      var array = cljs.core.first(arglist__10680);
      arglist__10680 = cljs.core.next(arglist__10680);
      var i = cljs.core.first(arglist__10680);
      var idxs = cljs.core.rest(arglist__10680);
      return G__10679__delegate(array, i, idxs);
    };
    G__10679.cljs$core$IFn$_invoke$arity$variadic = G__10679__delegate;
    return G__10679;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__10681__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__10681 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10681__delegate.call(this, array, idx, idx2, idxv);
    };
    G__10681.cljs$lang$maxFixedArity = 3;
    G__10681.cljs$lang$applyTo = function(arglist__10682) {
      var array = cljs.core.first(arglist__10682);
      arglist__10682 = cljs.core.next(arglist__10682);
      var idx = cljs.core.first(arglist__10682);
      arglist__10682 = cljs.core.next(arglist__10682);
      var idx2 = cljs.core.first(arglist__10682);
      var idxv = cljs.core.rest(arglist__10682);
      return G__10681__delegate(array, idx, idx2, idxv);
    };
    G__10681.cljs$core$IFn$_invoke$arity$variadic = G__10681__delegate;
    return G__10681;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj10684 = {};
  return obj10684;
}();
cljs.core.IFn = function() {
  var obj10686 = {};
  return obj10686;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj10688 = {};
  return obj10688;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3541__auto__ = value;
    if (and__3541__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4180__auto__ = value == null ? null : value;
    return function() {
      var or__3553__auto__ = cljs.core._clone[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._clone["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj10690 = {};
  return obj10690;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._count[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._count["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj10692 = {};
  return obj10692;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._empty[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._empty["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj10694 = {};
  return obj10694;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._conj[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._conj["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj10696 = {};
  return obj10696;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3541__auto__ = coll;
      if (and__3541__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4180__auto__ = coll == null ? null : coll;
      return function() {
        var or__3553__auto__ = cljs.core._nth[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._nth["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3541__auto__ = coll;
      if (and__3541__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4180__auto__ = coll == null ? null : coll;
      return function() {
        var or__3553__auto__ = cljs.core._nth[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._nth["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj10698 = {};
  return obj10698;
}();
cljs.core.ISeq = function() {
  var obj10700 = {};
  return obj10700;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._first[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._first["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._rest[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._rest["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj10702 = {};
  return obj10702;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._next[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._next["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj10704 = {};
  return obj10704;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._lookup[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._lookup["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._lookup[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._lookup["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj10706 = {};
  return obj10706;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._assoc[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._assoc["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj10708 = {};
  return obj10708;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._dissoc[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._dissoc["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj10710 = {};
  return obj10710;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._key[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._key["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._val[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._val["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj10712 = {};
  return obj10712;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._disjoin[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._disjoin["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj10714 = {};
  return obj10714;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._peek[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._peek["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._pop[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._pop["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj10716 = {};
  return obj10716;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._assoc_n[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj10718 = {};
  return obj10718;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._deref[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._deref["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj10720 = {};
  return obj10720;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj10722 = {};
  return obj10722;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._meta[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._meta["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj10724 = {};
  return obj10724;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._with_meta[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._with_meta["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj10726 = {};
  return obj10726;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3541__auto__ = coll;
      if (and__3541__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4180__auto__ = coll == null ? null : coll;
      return function() {
        var or__3553__auto__ = cljs.core._reduce[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._reduce["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3541__auto__ = coll;
      if (and__3541__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4180__auto__ = coll == null ? null : coll;
      return function() {
        var or__3553__auto__ = cljs.core._reduce[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._reduce["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj10728 = {};
  return obj10728;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj10730 = {};
  return obj10730;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._equiv[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._equiv["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj10732 = {};
  return obj10732;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._hash[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._hash["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj10734 = {};
  return obj10734;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._seq[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._seq["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj10736 = {};
  return obj10736;
}();
cljs.core.IList = function() {
  var obj10738 = {};
  return obj10738;
}();
cljs.core.IRecord = function() {
  var obj10740 = {};
  return obj10740;
}();
cljs.core.IReversible = function() {
  var obj10742 = {};
  return obj10742;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._rseq[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._rseq["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj10744 = {};
  return obj10744;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._entry_key[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._entry_key["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._comparator[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._comparator["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj10746 = {};
  return obj10746;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3541__auto__ = writer;
    if (and__3541__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4180__auto__ = writer == null ? null : writer;
    return function() {
      var or__3553__auto__ = cljs.core._write[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._write["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3541__auto__ = writer;
    if (and__3541__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4180__auto__ = writer == null ? null : writer;
    return function() {
      var or__3553__auto__ = cljs.core._flush[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._flush["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj10748 = {};
  return obj10748;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._pr_writer[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj10750 = {};
  return obj10750;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3541__auto__ = d;
    if (and__3541__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4180__auto__ = d == null ? null : d;
    return function() {
      var or__3553__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj10752 = {};
  return obj10752;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = cljs.core._notify_watches[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = cljs.core._add_watch[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._add_watch["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = cljs.core._remove_watch[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj10754 = {};
  return obj10754;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._as_transient[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._as_transient["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj10756 = {};
  return obj10756;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj10758 = {};
  return obj10758;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj10760 = {};
  return obj10760;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj10762 = {};
  return obj10762;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj10764 = {};
  return obj10764;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj10766 = {};
  return obj10766;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._compare[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._compare["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj10768 = {};
  return obj10768;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._drop_first[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._drop_first["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj10770 = {};
  return obj10770;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._chunked_first[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj10772 = {};
  return obj10772;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._chunked_next[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj10774 = {};
  return obj10774;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._name[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._name["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._namespace[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._namespace["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj10776 = {};
  return obj10776;
}();
cljs.core.IReset = function() {
  var obj10778 = {};
  return obj10778;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj10780 = {};
  return obj10780;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__10781 = i + 2;
        var G__10782 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__10781;
        h1 = G__10782;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj10784 = {};
  return obj10784;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__10785 = i + 1;
          var G__10786 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__10785;
          hash = G__10786;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj10790 = {};
      return obj10790;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__10792 = o;
    if (G__10792) {
      var bit__4196__auto__ = G__10792.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4196__auto__ || G__10792.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o == null) {
              return 0;
            } else {
              return cljs.core._hash.call(null, o);
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3541__auto__) {
        return b.ns;
      } else {
        return and__3541__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.compare.call(null, a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3964__auto__ = self__._hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__10794 = null;
  var G__10794__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__10794__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__10794 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10794__2.call(this, self__, coll);
      case 3:
        return G__10794__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10794.cljs$core$IFn$_invoke$arity$2 = G__10794__2;
  G__10794.cljs$core$IFn$_invoke$arity$3 = G__10794__3;
  return G__10794;
}();
cljs.core.Symbol.prototype.apply = function(self__, args10793) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10793)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__10796 = value;
  if (G__10796) {
    var bit__4203__auto__ = G__10796.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4203__auto__ || G__10796.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__10796.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10796);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10796);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10798 = coll;
      if (G__10798) {
        var bit__4196__auto__ = G__10798.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4196__auto__ || G__10798.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll) + " is not ISeqable");
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10800 = coll;
      if (G__10800) {
        var bit__4196__auto__ = G__10800.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4196__auto__ || G__10800.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__10802 = coll;
      if (G__10802) {
        var bit__4196__auto__ = G__10802.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4196__auto__ || G__10802.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10804 = coll;
      if (G__10804) {
        var bit__4196__auto__ = G__10804.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4196__auto__ || G__10804.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__10805__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__10806 = y;
            var G__10807 = cljs.core.first.call(null, more);
            var G__10808 = cljs.core.next.call(null, more);
            x = G__10806;
            y = G__10807;
            more = G__10808;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10805 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10805__delegate.call(this, x, y, more);
    };
    G__10805.cljs$lang$maxFixedArity = 2;
    G__10805.cljs$lang$applyTo = function(arglist__10809) {
      var x = cljs.core.first(arglist__10809);
      arglist__10809 = cljs.core.next(arglist__10809);
      var y = cljs.core.first(arglist__10809);
      var more = cljs.core.rest(arglist__10809);
      return G__10805__delegate(x, y, more);
    };
    G__10805.cljs$core$IFn$_invoke$arity$variadic = G__10805__delegate;
    return G__10805;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__10810 = n + 1;
      var G__10811 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__10812 = cljs.core.next.call(null, coll__$1);
      n = G__10810;
      hash_code = G__10811;
      coll__$1 = G__10812;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__10813 = n + 1;
      var G__10814 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__10815 = cljs.core.next.call(null, coll__$1);
      n = G__10813;
      hash_code = G__10814;
      coll__$1 = G__10815;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__10816 = nval;
            var G__10817 = n + 1;
            val = G__10816;
            n = G__10817;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10818 = nval;
          var G__10819 = n + 1;
          val__$1 = G__10818;
          n = G__10819;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10820 = nval;
          var G__10821 = n + 1;
          val__$1 = G__10820;
          n = G__10821;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__10822 = nval;
            var G__10823 = n + 1;
            val = G__10822;
            n = G__10823;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10824 = nval;
          var G__10825 = n + 1;
          val__$1 = G__10824;
          n = G__10825;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10826 = nval;
          var G__10827 = n + 1;
          val__$1 = G__10826;
          n = G__10827;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__10829 = x;
  if (G__10829) {
    var bit__4203__auto__ = G__10829.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4203__auto__ || G__10829.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__10829.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__10829);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__10829);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__10831 = x;
  if (G__10831) {
    var bit__4203__auto__ = G__10831.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4203__auto__ || G__10831.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__10831.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__10831);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__10831);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__10832 = sn;
      s = G__10832;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__10833__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__10834 = conj.call(null, coll, x);
          var G__10835 = cljs.core.first.call(null, xs);
          var G__10836 = cljs.core.next.call(null, xs);
          coll = G__10834;
          x = G__10835;
          xs = G__10836;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__10833 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10833__delegate.call(this, coll, x, xs);
    };
    G__10833.cljs$lang$maxFixedArity = 2;
    G__10833.cljs$lang$applyTo = function(arglist__10837) {
      var coll = cljs.core.first(arglist__10837);
      arglist__10837 = cljs.core.next(arglist__10837);
      var x = cljs.core.first(arglist__10837);
      var xs = cljs.core.rest(arglist__10837);
      return G__10833__delegate(coll, x, xs);
    };
    G__10833.cljs$core$IFn$_invoke$arity$variadic = G__10833__delegate;
    return G__10833;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__10838 = cljs.core.next.call(null, s);
      var G__10839 = acc + 1;
      s = G__10838;
      acc = G__10839;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__10841 = coll;
      if (G__10841) {
        var bit__4196__auto__ = G__10841.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4196__auto__ || G__10841.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__10842 = cljs.core.next.call(null, coll);
              var G__10843 = n - 1;
              coll = G__10842;
              n = G__10843;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__10844 = cljs.core.next.call(null, coll);
              var G__10845 = n - 1;
              var G__10846 = not_found;
              coll = G__10844;
              n = G__10845;
              not_found = G__10846;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__10851 = coll;
          if (G__10851) {
            var bit__4196__auto__ = G__10851.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4196__auto__ || G__10851.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__10852 = coll;
                  if (G__10852) {
                    var bit__4203__auto__ = G__10852.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4203__auto__ || G__10852.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__10852.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10852);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10852);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__10853 = coll;
          if (G__10853) {
            var bit__4196__auto__ = G__10853.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4196__auto__ || G__10853.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__10854 = coll;
                  if (G__10854) {
                    var bit__4203__auto__ = G__10854.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4203__auto__ || G__10854.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__10854.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10854);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10854);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__10857 = o;
        if (G__10857) {
          var bit__4196__auto__ = G__10857.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4196__auto__ || G__10857.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__10858 = o;
        if (G__10858) {
          var bit__4196__auto__ = G__10858.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4196__auto__ || G__10858.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__10859__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__10860 = ret;
          var G__10861 = cljs.core.first.call(null, kvs);
          var G__10862 = cljs.core.second.call(null, kvs);
          var G__10863 = cljs.core.nnext.call(null, kvs);
          coll = G__10860;
          k = G__10861;
          v = G__10862;
          kvs = G__10863;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__10859 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10859__delegate.call(this, coll, k, v, kvs);
    };
    G__10859.cljs$lang$maxFixedArity = 3;
    G__10859.cljs$lang$applyTo = function(arglist__10864) {
      var coll = cljs.core.first(arglist__10864);
      arglist__10864 = cljs.core.next(arglist__10864);
      var k = cljs.core.first(arglist__10864);
      arglist__10864 = cljs.core.next(arglist__10864);
      var v = cljs.core.first(arglist__10864);
      var kvs = cljs.core.rest(arglist__10864);
      return G__10859__delegate(coll, k, v, kvs);
    };
    G__10859.cljs$core$IFn$_invoke$arity$variadic = G__10859__delegate;
    return G__10859;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__10865__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__10866 = ret;
            var G__10867 = cljs.core.first.call(null, ks);
            var G__10868 = cljs.core.next.call(null, ks);
            coll = G__10866;
            k = G__10867;
            ks = G__10868;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__10865 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10865__delegate.call(this, coll, k, ks);
    };
    G__10865.cljs$lang$maxFixedArity = 2;
    G__10865.cljs$lang$applyTo = function(arglist__10869) {
      var coll = cljs.core.first(arglist__10869);
      arglist__10869 = cljs.core.next(arglist__10869);
      var k = cljs.core.first(arglist__10869);
      var ks = cljs.core.rest(arglist__10869);
      return G__10865__delegate(coll, k, ks);
    };
    G__10865.cljs$core$IFn$_invoke$arity$variadic = G__10865__delegate;
    return G__10865;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3553__auto__ = goog.isFunction(f);
  if (or__3553__auto__) {
    return or__3553__auto__;
  } else {
    var G__10873 = f;
    if (G__10873) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto____$1 = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto____$1)) {
          return or__3553__auto____$1;
        } else {
          return G__10873.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__10873.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__10873);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__10873);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/MetaFn");
};
cljs.core.MetaFn.prototype.call = function() {
  var G__10875 = null;
  var G__10875__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__10875__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__10875__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__10875__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__10875__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__10875__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__10875__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__10875__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__10875__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__10875__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__10875__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__10875__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__10875__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__10875__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__10875__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__10875__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__10875__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__10875__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__10875__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__10875__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__10875__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__10875__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__10875 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__10875__1.call(this, self__);
      case 2:
        return G__10875__2.call(this, self__, a);
      case 3:
        return G__10875__3.call(this, self__, a, b);
      case 4:
        return G__10875__4.call(this, self__, a, b, c);
      case 5:
        return G__10875__5.call(this, self__, a, b, c, d);
      case 6:
        return G__10875__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__10875__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__10875__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__10875__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__10875__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__10875__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__10875__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__10875__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__10875__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__10875__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__10875__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__10875__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__10875__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__10875__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__10875__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__10875__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__10875__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10875.cljs$core$IFn$_invoke$arity$1 = G__10875__1;
  G__10875.cljs$core$IFn$_invoke$arity$2 = G__10875__2;
  G__10875.cljs$core$IFn$_invoke$arity$3 = G__10875__3;
  G__10875.cljs$core$IFn$_invoke$arity$4 = G__10875__4;
  G__10875.cljs$core$IFn$_invoke$arity$5 = G__10875__5;
  G__10875.cljs$core$IFn$_invoke$arity$6 = G__10875__6;
  G__10875.cljs$core$IFn$_invoke$arity$7 = G__10875__7;
  G__10875.cljs$core$IFn$_invoke$arity$8 = G__10875__8;
  G__10875.cljs$core$IFn$_invoke$arity$9 = G__10875__9;
  G__10875.cljs$core$IFn$_invoke$arity$10 = G__10875__10;
  G__10875.cljs$core$IFn$_invoke$arity$11 = G__10875__11;
  G__10875.cljs$core$IFn$_invoke$arity$12 = G__10875__12;
  G__10875.cljs$core$IFn$_invoke$arity$13 = G__10875__13;
  G__10875.cljs$core$IFn$_invoke$arity$14 = G__10875__14;
  G__10875.cljs$core$IFn$_invoke$arity$15 = G__10875__15;
  G__10875.cljs$core$IFn$_invoke$arity$16 = G__10875__16;
  G__10875.cljs$core$IFn$_invoke$arity$17 = G__10875__17;
  G__10875.cljs$core$IFn$_invoke$arity$18 = G__10875__18;
  G__10875.cljs$core$IFn$_invoke$arity$19 = G__10875__19;
  G__10875.cljs$core$IFn$_invoke$arity$20 = G__10875__20;
  G__10875.cljs$core$IFn$_invoke$arity$21 = G__10875__21;
  G__10875.cljs$core$IFn$_invoke$arity$22 = G__10875__22;
  return G__10875;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args10874) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10874)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__10879 = o;
    if (G__10879) {
      var bit__4203__auto__ = G__10879.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4203__auto__ || G__10879.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__10879.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__10879);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__10879);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3541__auto__ = !(o == null);
    if (and__3541__auto__) {
      var G__10883 = o;
      if (G__10883) {
        var bit__4203__auto__ = G__10883.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4203__auto__ || G__10883.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__10883.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10883);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10883);
      }
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__10884__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__10885 = ret;
            var G__10886 = cljs.core.first.call(null, ks);
            var G__10887 = cljs.core.next.call(null, ks);
            coll = G__10885;
            k = G__10886;
            ks = G__10887;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__10884 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10884__delegate.call(this, coll, k, ks);
    };
    G__10884.cljs$lang$maxFixedArity = 2;
    G__10884.cljs$lang$applyTo = function(arglist__10888) {
      var coll = cljs.core.first(arglist__10888);
      arglist__10888 = cljs.core.next(arglist__10888);
      var k = cljs.core.first(arglist__10888);
      var ks = cljs.core.rest(arglist__10888);
      return G__10884__delegate(coll, k, ks);
    };
    G__10884.cljs$core$IFn$_invoke$arity$variadic = G__10884__delegate;
    return G__10884;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10890 = x;
    if (G__10890) {
      var bit__4203__auto__ = G__10890.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4203__auto__ || G__10890.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__10890.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__10890);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__10890);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10892 = x;
    if (G__10892) {
      var bit__4203__auto__ = G__10892.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4203__auto__ || G__10892.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__10892.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__10892);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__10892);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__10894 = x;
  if (G__10894) {
    var bit__4203__auto__ = G__10894.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4203__auto__ || G__10894.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__10894.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__10894);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__10894);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__10896 = x;
  if (G__10896) {
    var bit__4203__auto__ = G__10896.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4203__auto__ || G__10896.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__10896.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__10896);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__10896);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__10898 = x;
  if (G__10898) {
    var bit__4203__auto__ = G__10898.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4203__auto__ || G__10898.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__10898.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__10898);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__10898);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__10900 = x;
  if (G__10900) {
    var bit__4203__auto__ = G__10900.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4203__auto__ || G__10900.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__10900.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__10900);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__10900);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10902 = x;
    if (G__10902) {
      var bit__4203__auto__ = G__10902.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4203__auto__ || G__10902.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__10902.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__10902);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__10902);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__10904 = x;
  if (G__10904) {
    var bit__4203__auto__ = G__10904.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4203__auto__ || G__10904.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__10904.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__10904);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__10904);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__10906 = x;
  if (G__10906) {
    var bit__4196__auto__ = G__10906.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4196__auto__ || G__10906.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj10910 = {};
    return obj10910;
  };
  var js_obj__1 = function() {
    var G__10911__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__10911 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10911__delegate.call(this, keyvals);
    };
    G__10911.cljs$lang$maxFixedArity = 0;
    G__10911.cljs$lang$applyTo = function(arglist__10912) {
      var keyvals = cljs.core.seq(arglist__10912);
      return G__10911__delegate(keyvals);
    };
    G__10911.cljs$core$IFn$_invoke$arity$variadic = G__10911__delegate;
    return G__10911;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__10913 = i__$1 + 1;
      var G__10914 = j__$1 + 1;
      var G__10915 = len__$1 - 1;
      i__$1 = G__10913;
      j__$1 = G__10914;
      len__$1 = G__10915;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__10916 = i__$1 - 1;
      var G__10917 = j__$1 - 1;
      var G__10918 = len__$1 - 1;
      i__$1 = G__10916;
      j__$1 = G__10917;
      len__$1 = G__10918;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj10920 = {};
  return obj10920;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__10922 = s;
    if (G__10922) {
      var bit__4203__auto__ = G__10922.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4203__auto__ || G__10922.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__10922.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10922);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10922);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__10924 = s;
  if (G__10924) {
    var bit__4203__auto__ = G__10924.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4203__auto__ || G__10924.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__10924.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__10924);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__10924);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3553__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3553__auto__) {
    return or__3553__auto__;
  } else {
    var G__10928 = f;
    if (G__10928) {
      var bit__4203__auto__ = G__10928.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4203__auto__ || G__10928.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__10928.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__10928);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__10928);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__10929__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__10930 = cljs.core.conj.call(null, s, x__$1);
              var G__10931 = etc;
              s = G__10930;
              xs = G__10931;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__10929 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10929__delegate.call(this, x, y, more);
    };
    G__10929.cljs$lang$maxFixedArity = 2;
    G__10929.cljs$lang$applyTo = function(arglist__10932) {
      var x = cljs.core.first(arglist__10932);
      arglist__10932 = cljs.core.next(arglist__10932);
      var y = cljs.core.first(arglist__10932);
      var more = cljs.core.rest(arglist__10932);
      return G__10929__delegate(x, y, more);
    };
    G__10929.cljs$core$IFn$_invoke$arity$variadic = G__10929__delegate;
    return G__10929;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3553__auto__ = cljs.core.seq.call(null, coll);
    if (or__3553__auto__) {
      return or__3553__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__10934 = x;
            if (G__10934) {
              var bit__4196__auto__ = G__10934.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4196__auto__ || G__10934.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__10935 = xs;
        var G__10936 = ys;
        var G__10937 = len;
        var G__10938 = n + 1;
        xs = G__10935;
        ys = G__10936;
        len = G__10937;
        n = G__10938;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10939 = nval;
          var G__10940 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__10939;
          coll__$1 = G__10940;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__10943 = coll;
      if (G__10943) {
        var bit__4196__auto__ = G__10943.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4196__auto__ || G__10943.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__10944 = coll;
      if (G__10944) {
        var bit__4196__auto__ = G__10944.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4196__auto__ || G__10944.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.completing = function completing(f) {
  return function() {
    var G__10945 = null;
    var G__10945__0 = function() {
      return f.call(null);
    };
    var G__10945__1 = function(x) {
      return x;
    };
    var G__10945__2 = function(x, y) {
      return f.call(null, x, y);
    };
    G__10945 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__10945__0.call(this);
        case 1:
          return G__10945__1.call(this, x);
        case 2:
          return G__10945__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10945.cljs$core$IFn$_invoke$arity$0 = G__10945__0;
    G__10945.cljs$core$IFn$_invoke$arity$1 = G__10945__1;
    G__10945.cljs$core$IFn$_invoke$arity$2 = G__10945__2;
    return G__10945;
  }();
};
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, cljs.core.completing.call(null, f));
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    var ret__$1 = f__$1.call(null, cljs.core.reduced_QMARK_.call(null, ret) ? cljs.core.deref.call(null, ret) : ret);
    if (cljs.core.reduced_QMARK_.call(null, ret__$1)) {
      return cljs.core.deref.call(null, ret__$1);
    } else {
      return ret__$1;
    }
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__10946__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__10946 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10946__delegate.call(this, x, y, more);
    };
    G__10946.cljs$lang$maxFixedArity = 2;
    G__10946.cljs$lang$applyTo = function(arglist__10947) {
      var x = cljs.core.first(arglist__10947);
      arglist__10947 = cljs.core.next(arglist__10947);
      var y = cljs.core.first(arglist__10947);
      var more = cljs.core.rest(arglist__10947);
      return G__10946__delegate(x, y, more);
    };
    G__10946.cljs$core$IFn$_invoke$arity$variadic = G__10946__delegate;
    return G__10946;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__10948__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__10948 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10948__delegate.call(this, x, y, more);
    };
    G__10948.cljs$lang$maxFixedArity = 2;
    G__10948.cljs$lang$applyTo = function(arglist__10949) {
      var x = cljs.core.first(arglist__10949);
      arglist__10949 = cljs.core.next(arglist__10949);
      var y = cljs.core.first(arglist__10949);
      var more = cljs.core.rest(arglist__10949);
      return G__10948__delegate(x, y, more);
    };
    G__10948.cljs$core$IFn$_invoke$arity$variadic = G__10948__delegate;
    return G__10948;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__10950__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__10950 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10950__delegate.call(this, x, y, more);
    };
    G__10950.cljs$lang$maxFixedArity = 2;
    G__10950.cljs$lang$applyTo = function(arglist__10951) {
      var x = cljs.core.first(arglist__10951);
      arglist__10951 = cljs.core.next(arglist__10951);
      var y = cljs.core.first(arglist__10951);
      var more = cljs.core.rest(arglist__10951);
      return G__10950__delegate(x, y, more);
    };
    G__10950.cljs$core$IFn$_invoke$arity$variadic = G__10950__delegate;
    return G__10950;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__10952__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__10952 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10952__delegate.call(this, x, y, more);
    };
    G__10952.cljs$lang$maxFixedArity = 2;
    G__10952.cljs$lang$applyTo = function(arglist__10953) {
      var x = cljs.core.first(arglist__10953);
      arglist__10953 = cljs.core.next(arglist__10953);
      var y = cljs.core.first(arglist__10953);
      var more = cljs.core.rest(arglist__10953);
      return G__10952__delegate(x, y, more);
    };
    G__10952.cljs$core$IFn$_invoke$arity$variadic = G__10952__delegate;
    return G__10952;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__10954__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__10955 = y;
            var G__10956 = cljs.core.first.call(null, more);
            var G__10957 = cljs.core.next.call(null, more);
            x = G__10955;
            y = G__10956;
            more = G__10957;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10954 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10954__delegate.call(this, x, y, more);
    };
    G__10954.cljs$lang$maxFixedArity = 2;
    G__10954.cljs$lang$applyTo = function(arglist__10958) {
      var x = cljs.core.first(arglist__10958);
      arglist__10958 = cljs.core.next(arglist__10958);
      var y = cljs.core.first(arglist__10958);
      var more = cljs.core.rest(arglist__10958);
      return G__10954__delegate(x, y, more);
    };
    G__10954.cljs$core$IFn$_invoke$arity$variadic = G__10954__delegate;
    return G__10954;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__10959__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__10960 = y;
            var G__10961 = cljs.core.first.call(null, more);
            var G__10962 = cljs.core.next.call(null, more);
            x = G__10960;
            y = G__10961;
            more = G__10962;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10959 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10959__delegate.call(this, x, y, more);
    };
    G__10959.cljs$lang$maxFixedArity = 2;
    G__10959.cljs$lang$applyTo = function(arglist__10963) {
      var x = cljs.core.first(arglist__10963);
      arglist__10963 = cljs.core.next(arglist__10963);
      var y = cljs.core.first(arglist__10963);
      var more = cljs.core.rest(arglist__10963);
      return G__10959__delegate(x, y, more);
    };
    G__10959.cljs$core$IFn$_invoke$arity$variadic = G__10959__delegate;
    return G__10959;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__10964__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__10965 = y;
            var G__10966 = cljs.core.first.call(null, more);
            var G__10967 = cljs.core.next.call(null, more);
            x = G__10965;
            y = G__10966;
            more = G__10967;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10964 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10964__delegate.call(this, x, y, more);
    };
    G__10964.cljs$lang$maxFixedArity = 2;
    G__10964.cljs$lang$applyTo = function(arglist__10968) {
      var x = cljs.core.first(arglist__10968);
      arglist__10968 = cljs.core.next(arglist__10968);
      var y = cljs.core.first(arglist__10968);
      var more = cljs.core.rest(arglist__10968);
      return G__10964__delegate(x, y, more);
    };
    G__10964.cljs$core$IFn$_invoke$arity$variadic = G__10964__delegate;
    return G__10964;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__10969__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__10970 = y;
            var G__10971 = cljs.core.first.call(null, more);
            var G__10972 = cljs.core.next.call(null, more);
            x = G__10970;
            y = G__10971;
            more = G__10972;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10969 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10969__delegate.call(this, x, y, more);
    };
    G__10969.cljs$lang$maxFixedArity = 2;
    G__10969.cljs$lang$applyTo = function(arglist__10973) {
      var x = cljs.core.first(arglist__10973);
      arglist__10973 = cljs.core.next(arglist__10973);
      var y = cljs.core.first(arglist__10973);
      var more = cljs.core.rest(arglist__10973);
      return G__10969__delegate(x, y, more);
    };
    G__10969.cljs$core$IFn$_invoke$arity$variadic = G__10969__delegate;
    return G__10969;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3860__auto__ = x;
    var y__3861__auto__ = y;
    return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
  };
  var max__3 = function() {
    var G__10974__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3860__auto__ = x;
        var y__3861__auto__ = y;
        return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
      }(), more);
    };
    var G__10974 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10974__delegate.call(this, x, y, more);
    };
    G__10974.cljs$lang$maxFixedArity = 2;
    G__10974.cljs$lang$applyTo = function(arglist__10975) {
      var x = cljs.core.first(arglist__10975);
      arglist__10975 = cljs.core.next(arglist__10975);
      var y = cljs.core.first(arglist__10975);
      var more = cljs.core.rest(arglist__10975);
      return G__10974__delegate(x, y, more);
    };
    G__10974.cljs$core$IFn$_invoke$arity$variadic = G__10974__delegate;
    return G__10974;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3867__auto__ = x;
    var y__3868__auto__ = y;
    return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
  };
  var min__3 = function() {
    var G__10976__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3867__auto__ = x;
        var y__3868__auto__ = y;
        return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
      }(), more);
    };
    var G__10976 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10976__delegate.call(this, x, y, more);
    };
    G__10976.cljs$lang$maxFixedArity = 2;
    G__10976.cljs$lang$applyTo = function(arglist__10977) {
      var x = cljs.core.first(arglist__10977);
      arglist__10977 = cljs.core.next(arglist__10977);
      var y = cljs.core.first(arglist__10977);
      var more = cljs.core.rest(arglist__10977);
      return G__10976__delegate(x, y, more);
    };
    G__10976.cljs$core$IFn$_invoke$arity$variadic = G__10976__delegate;
    return G__10976;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__10978__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__10978 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10978__delegate.call(this, x, y, more);
    };
    G__10978.cljs$lang$maxFixedArity = 2;
    G__10978.cljs$lang$applyTo = function(arglist__10979) {
      var x = cljs.core.first(arglist__10979);
      arglist__10979 = cljs.core.next(arglist__10979);
      var y = cljs.core.first(arglist__10979);
      var more = cljs.core.rest(arglist__10979);
      return G__10978__delegate(x, y, more);
    };
    G__10978.cljs$core$IFn$_invoke$arity$variadic = G__10978__delegate;
    return G__10978;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__10980__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__10980 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10980__delegate.call(this, x, y, more);
    };
    G__10980.cljs$lang$maxFixedArity = 2;
    G__10980.cljs$lang$applyTo = function(arglist__10981) {
      var x = cljs.core.first(arglist__10981);
      arglist__10981 = cljs.core.next(arglist__10981);
      var y = cljs.core.first(arglist__10981);
      var more = cljs.core.rest(arglist__10981);
      return G__10980__delegate(x, y, more);
    };
    G__10980.cljs$core$IFn$_invoke$arity$variadic = G__10980__delegate;
    return G__10980;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__10982__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__10982 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10982__delegate.call(this, x, y, more);
    };
    G__10982.cljs$lang$maxFixedArity = 2;
    G__10982.cljs$lang$applyTo = function(arglist__10983) {
      var x = cljs.core.first(arglist__10983);
      arglist__10983 = cljs.core.next(arglist__10983);
      var y = cljs.core.first(arglist__10983);
      var more = cljs.core.rest(arglist__10983);
      return G__10982__delegate(x, y, more);
    };
    G__10982.cljs$core$IFn$_invoke$arity$variadic = G__10982__delegate;
    return G__10982;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__10984__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__10984 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10984__delegate.call(this, x, y, more);
    };
    G__10984.cljs$lang$maxFixedArity = 2;
    G__10984.cljs$lang$applyTo = function(arglist__10985) {
      var x = cljs.core.first(arglist__10985);
      arglist__10985 = cljs.core.next(arglist__10985);
      var y = cljs.core.first(arglist__10985);
      var more = cljs.core.rest(arglist__10985);
      return G__10984__delegate(x, y, more);
    };
    G__10984.cljs$core$IFn$_invoke$arity$variadic = G__10984__delegate;
    return G__10984;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__10986__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__10986 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10986__delegate.call(this, x, y, more);
    };
    G__10986.cljs$lang$maxFixedArity = 2;
    G__10986.cljs$lang$applyTo = function(arglist__10987) {
      var x = cljs.core.first(arglist__10987);
      arglist__10987 = cljs.core.next(arglist__10987);
      var y = cljs.core.first(arglist__10987);
      var more = cljs.core.rest(arglist__10987);
      return G__10986__delegate(x, y, more);
    };
    G__10986.cljs$core$IFn$_invoke$arity$variadic = G__10986__delegate;
    return G__10986;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__10988__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__10988 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10988__delegate.call(this, x, y, more);
    };
    G__10988.cljs$lang$maxFixedArity = 2;
    G__10988.cljs$lang$applyTo = function(arglist__10989) {
      var x = cljs.core.first(arglist__10989);
      arglist__10989 = cljs.core.next(arglist__10989);
      var y = cljs.core.first(arglist__10989);
      var more = cljs.core.rest(arglist__10989);
      return G__10988__delegate(x, y, more);
    };
    G__10988.cljs$core$IFn$_invoke$arity$variadic = G__10988__delegate;
    return G__10988;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__10990__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__10990 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10990__delegate.call(this, x, y, more);
    };
    G__10990.cljs$lang$maxFixedArity = 2;
    G__10990.cljs$lang$applyTo = function(arglist__10991) {
      var x = cljs.core.first(arglist__10991);
      arglist__10991 = cljs.core.next(arglist__10991);
      var y = cljs.core.first(arglist__10991);
      var more = cljs.core.rest(arglist__10991);
      return G__10990__delegate(x, y, more);
    };
    G__10990.cljs$core$IFn$_invoke$arity$variadic = G__10990__delegate;
    return G__10990;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__10992__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__10993 = y;
            var G__10994 = cljs.core.first.call(null, more);
            var G__10995 = cljs.core.next.call(null, more);
            x = G__10993;
            y = G__10994;
            more = G__10995;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10992 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10992__delegate.call(this, x, y, more);
    };
    G__10992.cljs$lang$maxFixedArity = 2;
    G__10992.cljs$lang$applyTo = function(arglist__10996) {
      var x = cljs.core.first(arglist__10996);
      arglist__10996 = cljs.core.next(arglist__10996);
      var y = cljs.core.first(arglist__10996);
      var more = cljs.core.rest(arglist__10996);
      return G__10992__delegate(x, y, more);
    };
    G__10992.cljs$core$IFn$_invoke$arity$variadic = G__10992__delegate;
    return G__10992;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__10997 = n__$1 - 1;
      var G__10998 = cljs.core.next.call(null, xs);
      n__$1 = G__10997;
      xs = G__10998;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__10999__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__11000 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__11001 = cljs.core.next.call(null, more);
          sb = G__11000;
          more = G__11001;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__10999 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10999__delegate.call(this, x, ys);
    };
    G__10999.cljs$lang$maxFixedArity = 1;
    G__10999.cljs$lang$applyTo = function(arglist__11002) {
      var x = cljs.core.first(arglist__11002);
      var ys = cljs.core.rest(arglist__11002);
      return G__10999__delegate(x, ys);
    };
    G__10999.cljs$core$IFn$_invoke$arity$variadic = G__10999__delegate;
    return G__10999;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__11003 = cljs.core.next.call(null, xs);
            var G__11004 = cljs.core.next.call(null, ys);
            xs = G__11003;
            ys = G__11004;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__11005 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__11006 = cljs.core.next.call(null, s);
        res = G__11005;
        s = G__11006;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__11007 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__11008 = cljs.core.next.call(null, s);
      h = G__11007;
      s = G__11008;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__11009 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__11010 = cljs.core.next.call(null, s__$1);
      h = G__11009;
      s__$1 = G__11010;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__11017_11023 = cljs.core.seq.call(null, fn_map);
  var chunk__11018_11024 = null;
  var count__11019_11025 = 0;
  var i__11020_11026 = 0;
  while (true) {
    if (i__11020_11026 < count__11019_11025) {
      var vec__11021_11027 = cljs.core._nth.call(null, chunk__11018_11024, i__11020_11026);
      var key_name_11028 = cljs.core.nth.call(null, vec__11021_11027, 0, null);
      var f_11029 = cljs.core.nth.call(null, vec__11021_11027, 1, null);
      var str_name_11030 = cljs.core.name.call(null, key_name_11028);
      obj[str_name_11030] = f_11029;
      var G__11031 = seq__11017_11023;
      var G__11032 = chunk__11018_11024;
      var G__11033 = count__11019_11025;
      var G__11034 = i__11020_11026 + 1;
      seq__11017_11023 = G__11031;
      chunk__11018_11024 = G__11032;
      count__11019_11025 = G__11033;
      i__11020_11026 = G__11034;
      continue;
    } else {
      var temp__4126__auto___11035 = cljs.core.seq.call(null, seq__11017_11023);
      if (temp__4126__auto___11035) {
        var seq__11017_11036__$1 = temp__4126__auto___11035;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11017_11036__$1)) {
          var c__4309__auto___11037 = cljs.core.chunk_first.call(null, seq__11017_11036__$1);
          var G__11038 = cljs.core.chunk_rest.call(null, seq__11017_11036__$1);
          var G__11039 = c__4309__auto___11037;
          var G__11040 = cljs.core.count.call(null, c__4309__auto___11037);
          var G__11041 = 0;
          seq__11017_11023 = G__11038;
          chunk__11018_11024 = G__11039;
          count__11019_11025 = G__11040;
          i__11020_11026 = G__11041;
          continue;
        } else {
          var vec__11022_11042 = cljs.core.first.call(null, seq__11017_11036__$1);
          var key_name_11043 = cljs.core.nth.call(null, vec__11022_11042, 0, null);
          var f_11044 = cljs.core.nth.call(null, vec__11022_11042, 1, null);
          var str_name_11045 = cljs.core.name.call(null, key_name_11043);
          obj[str_name_11045] = f_11044;
          var G__11046 = cljs.core.next.call(null, seq__11017_11036__$1);
          var G__11047 = null;
          var G__11048 = 0;
          var G__11049 = 0;
          seq__11017_11023 = G__11046;
          chunk__11018_11024 = G__11047;
          count__11019_11025 = G__11048;
          i__11020_11026 = G__11049;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__11051 = coll;
  if (G__11051) {
    var bit__4203__auto__ = G__11051.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4203__auto__ || G__11051.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__11051.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__11051);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__11051);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__11052 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__11052;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__11053 = i - 1;
        var G__11054 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__11053;
        r = G__11054;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__11055) {
    var xs = cljs.core.seq(arglist__11055);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3553__auto__ = coll == null;
    if (or__3553__auto__) {
      return or__3553__auto__;
    } else {
      var G__11059 = coll;
      if (G__11059) {
        var bit__4196__auto__ = G__11059.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4196__auto__ || G__11059.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__11061 = x;
  if (G__11061) {
    var bit__4203__auto__ = G__11061.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4203__auto__ || G__11061.cljs$core$IList$) {
      return true;
    } else {
      if (!G__11061.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__11061);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__11061);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__3964__auto__ = self__._hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__11063 = null;
  var G__11063__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__11063__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__11063 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11063__2.call(this, self__, coll);
      case 3:
        return G__11063__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11063.cljs$core$IFn$_invoke$arity$2 = G__11063__2;
  G__11063.cljs$core$IFn$_invoke$arity$3 = G__11063__3;
  return G__11063;
}();
cljs.core.Keyword.prototype.apply = function(self__, args11062) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11062)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn);
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__11065 = x;
    if (G__11065) {
      var bit__4196__auto__ = G__11065.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4196__auto__ || G__11065.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error("Doesn't support namespace: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" : null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__11066 = ls.sval();
        ls = G__11066;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__11068 = s;
    if (G__11068) {
      var bit__4196__auto__ = G__11068.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4196__auto__ || G__11068.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__11069 = cljs.core.next.call(null, s__$1);
      s__$1 = G__11069;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_11070 = 0;
  var xs_11071 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_11071) {
      ret[i_11070] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_11071));
      var G__11072 = i_11070 + 1;
      var G__11073 = cljs.core.next.call(null, xs_11071);
      i_11070 = G__11072;
      xs_11071 = G__11073;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__11074 = i + 1;
          var G__11075 = cljs.core.next.call(null, s__$1);
          i = G__11074;
          s__$1 = G__11075;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4409__auto___11076 = size;
      var i_11077 = 0;
      while (true) {
        if (i_11077 < n__4409__auto___11076) {
          a[i_11077] = init_val_or_seq;
          var G__11078 = i_11077 + 1;
          i_11077 = G__11078;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__11079 = i + 1;
          var G__11080 = cljs.core.next.call(null, s__$1);
          i = G__11079;
          s__$1 = G__11080;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4409__auto___11081 = size;
      var i_11082 = 0;
      while (true) {
        if (i_11082 < n__4409__auto___11081) {
          a[i_11082] = init_val_or_seq;
          var G__11083 = i_11082 + 1;
          i_11082 = G__11083;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__11084 = i + 1;
          var G__11085 = cljs.core.next.call(null, s__$1);
          i = G__11084;
          s__$1 = G__11085;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4409__auto___11086 = size;
      var i_11087 = 0;
      while (true) {
        if (i_11087 < n__4409__auto___11086) {
          a[i_11087] = init_val_or_seq;
          var G__11088 = i_11087 + 1;
          i_11087 = G__11088;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__11089 = i + 1;
          var G__11090 = cljs.core.next.call(null, s__$1);
          i = G__11089;
          s__$1 = G__11090;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4409__auto___11091 = size;
      var i_11092 = 0;
      while (true) {
        if (i_11092 < n__4409__auto___11091) {
          a[i_11092] = init_val_or_seq;
          var G__11093 = i_11092 + 1;
          i_11092 = G__11093;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__11094 = cljs.core.next.call(null, s__$1);
        var G__11095 = i - 1;
        var G__11096 = sum + 1;
        s__$1 = G__11094;
        i = G__11095;
        sum = G__11096;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__11097__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__11097 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11097__delegate.call(this, x, y, zs);
    };
    G__11097.cljs$lang$maxFixedArity = 2;
    G__11097.cljs$lang$applyTo = function(arglist__11098) {
      var x = cljs.core.first(arglist__11098);
      arglist__11098 = cljs.core.next(arglist__11098);
      var y = cljs.core.first(arglist__11098);
      var zs = cljs.core.rest(arglist__11098);
      return G__11097__delegate(x, y, zs);
    };
    G__11097.cljs$core$IFn$_invoke$arity$variadic = G__11097__delegate;
    return G__11097;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__11099__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__11099 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11099__delegate.call(this, a, b, c, d, more);
    };
    G__11099.cljs$lang$maxFixedArity = 4;
    G__11099.cljs$lang$applyTo = function(arglist__11100) {
      var a = cljs.core.first(arglist__11100);
      arglist__11100 = cljs.core.next(arglist__11100);
      var b = cljs.core.first(arglist__11100);
      arglist__11100 = cljs.core.next(arglist__11100);
      var c = cljs.core.first(arglist__11100);
      arglist__11100 = cljs.core.next(arglist__11100);
      var d = cljs.core.first(arglist__11100);
      var more = cljs.core.rest(arglist__11100);
      return G__11099__delegate(a, b, c, d, more);
    };
    G__11099.cljs$core$IFn$_invoke$arity$variadic = G__11099__delegate;
    return G__11099;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__11101__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__11102 = ntcoll;
          var G__11103 = cljs.core.first.call(null, vals);
          var G__11104 = cljs.core.next.call(null, vals);
          tcoll = G__11102;
          val = G__11103;
          vals = G__11104;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11101 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11101__delegate.call(this, tcoll, val, vals);
    };
    G__11101.cljs$lang$maxFixedArity = 2;
    G__11101.cljs$lang$applyTo = function(arglist__11105) {
      var tcoll = cljs.core.first(arglist__11105);
      arglist__11105 = cljs.core.next(arglist__11105);
      var val = cljs.core.first(arglist__11105);
      var vals = cljs.core.rest(arglist__11105);
      return G__11101__delegate(tcoll, val, vals);
    };
    G__11101.cljs$core$IFn$_invoke$arity$variadic = G__11101__delegate;
    return G__11101;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__11106__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__11107 = ntcoll;
          var G__11108 = cljs.core.first.call(null, kvs);
          var G__11109 = cljs.core.second.call(null, kvs);
          var G__11110 = cljs.core.nnext.call(null, kvs);
          tcoll = G__11107;
          key = G__11108;
          val = G__11109;
          kvs = G__11110;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11106 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11106__delegate.call(this, tcoll, key, val, kvs);
    };
    G__11106.cljs$lang$maxFixedArity = 3;
    G__11106.cljs$lang$applyTo = function(arglist__11111) {
      var tcoll = cljs.core.first(arglist__11111);
      arglist__11111 = cljs.core.next(arglist__11111);
      var key = cljs.core.first(arglist__11111);
      arglist__11111 = cljs.core.next(arglist__11111);
      var val = cljs.core.first(arglist__11111);
      var kvs = cljs.core.rest(arglist__11111);
      return G__11106__delegate(tcoll, key, val, kvs);
    };
    G__11106.cljs$core$IFn$_invoke$arity$variadic = G__11106__delegate;
    return G__11106;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__11112__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__11113 = ntcoll;
          var G__11114 = cljs.core.first.call(null, ks);
          var G__11115 = cljs.core.next.call(null, ks);
          tcoll = G__11113;
          key = G__11114;
          ks = G__11115;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11112 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11112__delegate.call(this, tcoll, key, ks);
    };
    G__11112.cljs$lang$maxFixedArity = 2;
    G__11112.cljs$lang$applyTo = function(arglist__11116) {
      var tcoll = cljs.core.first(arglist__11116);
      arglist__11116 = cljs.core.next(arglist__11116);
      var key = cljs.core.first(arglist__11116);
      var ks = cljs.core.rest(arglist__11116);
      return G__11112__delegate(tcoll, key, ks);
    };
    G__11112.cljs$core$IFn$_invoke$arity$variadic = G__11112__delegate;
    return G__11112;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__11117__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__11118 = ntcoll;
          var G__11119 = cljs.core.first.call(null, vals);
          var G__11120 = cljs.core.next.call(null, vals);
          tcoll = G__11118;
          val = G__11119;
          vals = G__11120;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11117 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11117__delegate.call(this, tcoll, val, vals);
    };
    G__11117.cljs$lang$maxFixedArity = 2;
    G__11117.cljs$lang$applyTo = function(arglist__11121) {
      var tcoll = cljs.core.first(arglist__11121);
      arglist__11121 = cljs.core.next(arglist__11121);
      var val = cljs.core.first(arglist__11121);
      var vals = cljs.core.rest(arglist__11121);
      return G__11117__delegate(tcoll, val, vals);
    };
    G__11117.cljs$core$IFn$_invoke$arity$variadic = G__11117__delegate;
    return G__11117;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4453 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4453);
      } else {
        return f.call(null, a4453);
      }
    } else {
      var b4454 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4453, b4454);
        } else {
          return f.call(null, a4453, b4454);
        }
      } else {
        var c4455 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4453, b4454, c4455);
          } else {
            return f.call(null, a4453, b4454, c4455);
          }
        } else {
          var d4456 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4453, b4454, c4455, d4456);
            } else {
              return f.call(null, a4453, b4454, c4455, d4456);
            }
          } else {
            var e4457 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4453, b4454, c4455, d4456, e4457);
              } else {
                return f.call(null, a4453, b4454, c4455, d4456, e4457);
              }
            } else {
              var f4458 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4453, b4454, c4455, d4456, e4457, f4458);
                } else {
                  return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458);
                }
              } else {
                var g4459 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4453, b4454, c4455, d4456, e4457, f4458, g4459);
                  } else {
                    return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459);
                  }
                } else {
                  var h4460 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460);
                    } else {
                      return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460);
                    }
                  } else {
                    var i4461 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461);
                      } else {
                        return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461);
                      }
                    } else {
                      var j4462 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462);
                        } else {
                          return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462);
                        }
                      } else {
                        var k4463 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463);
                          } else {
                            return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463);
                          }
                        } else {
                          var l4464 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464);
                            } else {
                              return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464);
                            }
                          } else {
                            var m4465 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465);
                              } else {
                                return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465);
                              }
                            } else {
                              var n4466 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466);
                                } else {
                                  return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466);
                                }
                              } else {
                                var o4467 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467);
                                  } else {
                                    return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467);
                                  }
                                } else {
                                  var p4468 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468);
                                    } else {
                                      return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468);
                                    }
                                  } else {
                                    var q4469 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469);
                                      } else {
                                        return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469);
                                      }
                                    } else {
                                      var r4470 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470);
                                        } else {
                                          return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470);
                                        }
                                      } else {
                                        var s4471 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470, s4471);
                                          } else {
                                            return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470, s4471);
                                          }
                                        } else {
                                          var t4472 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470, s4471, t4472);
                                            } else {
                                              return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470, s4471, t4472);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__11122__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__11122 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__11122__delegate.call(this, f, a, b, c, d, args);
    };
    G__11122.cljs$lang$maxFixedArity = 5;
    G__11122.cljs$lang$applyTo = function(arglist__11123) {
      var f = cljs.core.first(arglist__11123);
      arglist__11123 = cljs.core.next(arglist__11123);
      var a = cljs.core.first(arglist__11123);
      arglist__11123 = cljs.core.next(arglist__11123);
      var b = cljs.core.first(arglist__11123);
      arglist__11123 = cljs.core.next(arglist__11123);
      var c = cljs.core.first(arglist__11123);
      arglist__11123 = cljs.core.next(arglist__11123);
      var d = cljs.core.first(arglist__11123);
      var args = cljs.core.rest(arglist__11123);
      return G__11122__delegate(f, a, b, c, d, args);
    };
    G__11122.cljs$core$IFn$_invoke$arity$variadic = G__11122__delegate;
    return G__11122;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__11124__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__11124 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__11124__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__11124.cljs$lang$maxFixedArity = 6;
    G__11124.cljs$lang$applyTo = function(arglist__11125) {
      var obj = cljs.core.first(arglist__11125);
      arglist__11125 = cljs.core.next(arglist__11125);
      var f = cljs.core.first(arglist__11125);
      arglist__11125 = cljs.core.next(arglist__11125);
      var a = cljs.core.first(arglist__11125);
      arglist__11125 = cljs.core.next(arglist__11125);
      var b = cljs.core.first(arglist__11125);
      arglist__11125 = cljs.core.next(arglist__11125);
      var c = cljs.core.first(arglist__11125);
      arglist__11125 = cljs.core.next(arglist__11125);
      var d = cljs.core.first(arglist__11125);
      var args = cljs.core.rest(arglist__11125);
      return G__11124__delegate(obj, f, a, b, c, d, args);
    };
    G__11124.cljs$core$IFn$_invoke$arity$variadic = G__11124__delegate;
    return G__11124;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__11126__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__11126 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11126__delegate.call(this, x, y, more);
    };
    G__11126.cljs$lang$maxFixedArity = 2;
    G__11126.cljs$lang$applyTo = function(arglist__11127) {
      var x = cljs.core.first(arglist__11127);
      arglist__11127 = cljs.core.next(arglist__11127);
      var y = cljs.core.first(arglist__11127);
      var more = cljs.core.rest(arglist__11127);
      return G__11126__delegate(x, y, more);
    };
    G__11126.cljs$core$IFn$_invoke$arity$variadic = G__11126__delegate;
    return G__11126;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t11131 !== "undefined") {
  } else {
    cljs.core.t11131 = function(nil_iter, meta11132) {
      this.nil_iter = nil_iter;
      this.meta11132 = meta11132;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t11131.cljs$lang$type = true;
    cljs.core.t11131.cljs$lang$ctorStr = "cljs.core/t11131";
    cljs.core.t11131.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/t11131");
    };
    cljs.core.t11131.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t11131.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t11131.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t11131.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11133) {
      var self__ = this;
      var _11133__$1 = this;
      return self__.meta11132;
    };
    cljs.core.t11131.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11133, meta11132__$1) {
      var self__ = this;
      var _11133__$1 = this;
      return new cljs.core.t11131(self__.nil_iter, meta11132__$1);
    };
    cljs.core.__GT_t11131 = function __GT_t11131(nil_iter__$1, meta11132) {
      return new cljs.core.t11131(nil_iter__$1, meta11132);
    };
  }
  return new cljs.core.t11131(nil_iter, null);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/StringIter");
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayIter");
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/SeqIter");
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq.call(null, self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next.call(null, self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not.call(null, this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first.call(null, self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        return cljs.core.seq_iter.call(null, coll);
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Stepper");
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = !(lt.stepper == null);
      if (and__3541__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3541__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/MultiStepper");
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__11134 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__11134;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4409__auto___11135 = self__.iters.length;
  var i_11136 = 0;
  while (true) {
    if (i_11136 < n__4409__auto___11135) {
      cljs.core.next[i_11136] = self__.iters[i_11136].next();
      var G__11137 = i_11136 + 1;
      i_11136 = G__11137;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var _ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = !(lt.stepper == null);
      if (and__3541__auto__) {
        return cljs.core.iter.hasNext();
      } else {
        return and__3541__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, cljs.core.apply.call(null, self__.xform, cljs.core.cons.call(null, lt, cljs.core.iter.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform, iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/LazyTransformer");
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__11138_11142 = cljs.core.seq.call(null, colls);
  var chunk__11139_11143 = null;
  var count__11140_11144 = 0;
  var i__11141_11145 = 0;
  while (true) {
    if (i__11141_11145 < count__11140_11144) {
      var coll_11146 = cljs.core._nth.call(null, chunk__11139_11143, i__11141_11145);
      iters.push(cljs.core.iter.call(null, coll_11146));
      var G__11147 = seq__11138_11142;
      var G__11148 = chunk__11139_11143;
      var G__11149 = count__11140_11144;
      var G__11150 = i__11141_11145 + 1;
      seq__11138_11142 = G__11147;
      chunk__11139_11143 = G__11148;
      count__11140_11144 = G__11149;
      i__11141_11145 = G__11150;
      continue;
    } else {
      var temp__4126__auto___11151 = cljs.core.seq.call(null, seq__11138_11142);
      if (temp__4126__auto___11151) {
        var seq__11138_11152__$1 = temp__4126__auto___11151;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11138_11152__$1)) {
          var c__4309__auto___11153 = cljs.core.chunk_first.call(null, seq__11138_11152__$1);
          var G__11154 = cljs.core.chunk_rest.call(null, seq__11138_11152__$1);
          var G__11155 = c__4309__auto___11153;
          var G__11156 = cljs.core.count.call(null, c__4309__auto___11153);
          var G__11157 = 0;
          seq__11138_11142 = G__11154;
          chunk__11139_11143 = G__11155;
          count__11140_11144 = G__11156;
          i__11141_11145 = G__11157;
          continue;
        } else {
          var coll_11158 = cljs.core.first.call(null, seq__11138_11152__$1);
          iters.push(cljs.core.iter.call(null, coll_11158));
          var G__11159 = cljs.core.next.call(null, seq__11138_11152__$1);
          var G__11160 = null;
          var G__11161 = 0;
          var G__11162 = 0;
          seq__11138_11142 = G__11159;
          chunk__11139_11143 = G__11160;
          count__11140_11144 = G__11161;
          i__11141_11145 = G__11162;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3553__auto__ = cljs.core.seq.call(null, coll);
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__11163__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__11163 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11163__delegate.call(this, xform, coll, colls);
    };
    G__11163.cljs$lang$maxFixedArity = 2;
    G__11163.cljs$lang$applyTo = function(arglist__11164) {
      var xform = cljs.core.first(arglist__11164);
      arglist__11164 = cljs.core.next(arglist__11164);
      var coll = cljs.core.first(arglist__11164);
      var colls = cljs.core.rest(arglist__11164);
      return G__11163__delegate(xform, coll, colls);
    };
    G__11163.cljs$core$IFn$_invoke$arity$variadic = G__11163__delegate;
    return G__11163;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__11165 = pred;
        var G__11166 = cljs.core.next.call(null, coll);
        pred = G__11165;
        coll = G__11166;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3553__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        var G__11167 = pred;
        var G__11168 = cljs.core.next.call(null, coll);
        pred = G__11167;
        coll = G__11168;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error("Argument must be an integer: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__11169 = null;
    var G__11169__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__11169__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__11169__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__11169__3 = function() {
      var G__11170__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__11170 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__11170__delegate.call(this, x, y, zs);
      };
      G__11170.cljs$lang$maxFixedArity = 2;
      G__11170.cljs$lang$applyTo = function(arglist__11171) {
        var x = cljs.core.first(arglist__11171);
        arglist__11171 = cljs.core.next(arglist__11171);
        var y = cljs.core.first(arglist__11171);
        var zs = cljs.core.rest(arglist__11171);
        return G__11170__delegate(x, y, zs);
      };
      G__11170.cljs$core$IFn$_invoke$arity$variadic = G__11170__delegate;
      return G__11170;
    }();
    G__11169 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__11169__0.call(this);
        case 1:
          return G__11169__1.call(this, x);
        case 2:
          return G__11169__2.call(this, x, y);
        default:
          return G__11169__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11169.cljs$lang$maxFixedArity = 2;
    G__11169.cljs$lang$applyTo = G__11169__3.cljs$lang$applyTo;
    G__11169.cljs$core$IFn$_invoke$arity$0 = G__11169__0;
    G__11169.cljs$core$IFn$_invoke$arity$1 = G__11169__1;
    G__11169.cljs$core$IFn$_invoke$arity$2 = G__11169__2;
    G__11169.cljs$core$IFn$_invoke$arity$variadic = G__11169__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__11169;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__11172__delegate = function(args) {
      return x;
    };
    var G__11172 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__11172__delegate.call(this, args);
    };
    G__11172.cljs$lang$maxFixedArity = 0;
    G__11172.cljs$lang$applyTo = function(arglist__11173) {
      var args = cljs.core.seq(arglist__11173);
      return G__11172__delegate(args);
    };
    G__11172.cljs$core$IFn$_invoke$arity$variadic = G__11172__delegate;
    return G__11172;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__11174 = null;
      var G__11174__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__11174__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__11174__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__11174__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__11174__4 = function() {
        var G__11175__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__11175 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11175__delegate.call(this, x, y, z, args);
        };
        G__11175.cljs$lang$maxFixedArity = 3;
        G__11175.cljs$lang$applyTo = function(arglist__11176) {
          var x = cljs.core.first(arglist__11176);
          arglist__11176 = cljs.core.next(arglist__11176);
          var y = cljs.core.first(arglist__11176);
          arglist__11176 = cljs.core.next(arglist__11176);
          var z = cljs.core.first(arglist__11176);
          var args = cljs.core.rest(arglist__11176);
          return G__11175__delegate(x, y, z, args);
        };
        G__11175.cljs$core$IFn$_invoke$arity$variadic = G__11175__delegate;
        return G__11175;
      }();
      G__11174 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11174__0.call(this);
          case 1:
            return G__11174__1.call(this, x);
          case 2:
            return G__11174__2.call(this, x, y);
          case 3:
            return G__11174__3.call(this, x, y, z);
          default:
            return G__11174__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11174.cljs$lang$maxFixedArity = 3;
      G__11174.cljs$lang$applyTo = G__11174__4.cljs$lang$applyTo;
      G__11174.cljs$core$IFn$_invoke$arity$0 = G__11174__0;
      G__11174.cljs$core$IFn$_invoke$arity$1 = G__11174__1;
      G__11174.cljs$core$IFn$_invoke$arity$2 = G__11174__2;
      G__11174.cljs$core$IFn$_invoke$arity$3 = G__11174__3;
      G__11174.cljs$core$IFn$_invoke$arity$variadic = G__11174__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11174;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__11177 = null;
      var G__11177__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__11177__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__11177__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__11177__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__11177__4 = function() {
        var G__11178__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__11178 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11178__delegate.call(this, x, y, z, args);
        };
        G__11178.cljs$lang$maxFixedArity = 3;
        G__11178.cljs$lang$applyTo = function(arglist__11179) {
          var x = cljs.core.first(arglist__11179);
          arglist__11179 = cljs.core.next(arglist__11179);
          var y = cljs.core.first(arglist__11179);
          arglist__11179 = cljs.core.next(arglist__11179);
          var z = cljs.core.first(arglist__11179);
          var args = cljs.core.rest(arglist__11179);
          return G__11178__delegate(x, y, z, args);
        };
        G__11178.cljs$core$IFn$_invoke$arity$variadic = G__11178__delegate;
        return G__11178;
      }();
      G__11177 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11177__0.call(this);
          case 1:
            return G__11177__1.call(this, x);
          case 2:
            return G__11177__2.call(this, x, y);
          case 3:
            return G__11177__3.call(this, x, y, z);
          default:
            return G__11177__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11177.cljs$lang$maxFixedArity = 3;
      G__11177.cljs$lang$applyTo = G__11177__4.cljs$lang$applyTo;
      G__11177.cljs$core$IFn$_invoke$arity$0 = G__11177__0;
      G__11177.cljs$core$IFn$_invoke$arity$1 = G__11177__1;
      G__11177.cljs$core$IFn$_invoke$arity$2 = G__11177__2;
      G__11177.cljs$core$IFn$_invoke$arity$3 = G__11177__3;
      G__11177.cljs$core$IFn$_invoke$arity$variadic = G__11177__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11177;
    }();
  };
  var comp__4 = function() {
    var G__11180__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__11181__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__11182 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__11183 = cljs.core.next.call(null, fs__$2);
                ret = G__11182;
                fs__$2 = G__11183;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__11181 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__11181__delegate.call(this, args);
          };
          G__11181.cljs$lang$maxFixedArity = 0;
          G__11181.cljs$lang$applyTo = function(arglist__11184) {
            var args = cljs.core.seq(arglist__11184);
            return G__11181__delegate(args);
          };
          G__11181.cljs$core$IFn$_invoke$arity$variadic = G__11181__delegate;
          return G__11181;
        }();
      }(fs__$1);
    };
    var G__11180 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11180__delegate.call(this, f1, f2, f3, fs);
    };
    G__11180.cljs$lang$maxFixedArity = 3;
    G__11180.cljs$lang$applyTo = function(arglist__11185) {
      var f1 = cljs.core.first(arglist__11185);
      arglist__11185 = cljs.core.next(arglist__11185);
      var f2 = cljs.core.first(arglist__11185);
      arglist__11185 = cljs.core.next(arglist__11185);
      var f3 = cljs.core.first(arglist__11185);
      var fs = cljs.core.rest(arglist__11185);
      return G__11180__delegate(f1, f2, f3, fs);
    };
    G__11180.cljs$core$IFn$_invoke$arity$variadic = G__11180__delegate;
    return G__11180;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__11186__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__11186 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__11186__delegate.call(this, args);
      };
      G__11186.cljs$lang$maxFixedArity = 0;
      G__11186.cljs$lang$applyTo = function(arglist__11187) {
        var args = cljs.core.seq(arglist__11187);
        return G__11186__delegate(args);
      };
      G__11186.cljs$core$IFn$_invoke$arity$variadic = G__11186__delegate;
      return G__11186;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__11188__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__11188 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__11188__delegate.call(this, args);
      };
      G__11188.cljs$lang$maxFixedArity = 0;
      G__11188.cljs$lang$applyTo = function(arglist__11189) {
        var args = cljs.core.seq(arglist__11189);
        return G__11188__delegate(args);
      };
      G__11188.cljs$core$IFn$_invoke$arity$variadic = G__11188__delegate;
      return G__11188;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__11190__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__11190 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__11190__delegate.call(this, args);
      };
      G__11190.cljs$lang$maxFixedArity = 0;
      G__11190.cljs$lang$applyTo = function(arglist__11191) {
        var args = cljs.core.seq(arglist__11191);
        return G__11190__delegate(args);
      };
      G__11190.cljs$core$IFn$_invoke$arity$variadic = G__11190__delegate;
      return G__11190;
    }();
  };
  var partial__5 = function() {
    var G__11192__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__11193__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__11193 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__11193__delegate.call(this, args);
        };
        G__11193.cljs$lang$maxFixedArity = 0;
        G__11193.cljs$lang$applyTo = function(arglist__11194) {
          var args = cljs.core.seq(arglist__11194);
          return G__11193__delegate(args);
        };
        G__11193.cljs$core$IFn$_invoke$arity$variadic = G__11193__delegate;
        return G__11193;
      }();
    };
    var G__11192 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11192__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__11192.cljs$lang$maxFixedArity = 4;
    G__11192.cljs$lang$applyTo = function(arglist__11195) {
      var f = cljs.core.first(arglist__11195);
      arglist__11195 = cljs.core.next(arglist__11195);
      var arg1 = cljs.core.first(arglist__11195);
      arglist__11195 = cljs.core.next(arglist__11195);
      var arg2 = cljs.core.first(arglist__11195);
      arglist__11195 = cljs.core.next(arglist__11195);
      var arg3 = cljs.core.first(arglist__11195);
      var more = cljs.core.rest(arglist__11195);
      return G__11192__delegate(f, arg1, arg2, arg3, more);
    };
    G__11192.cljs$core$IFn$_invoke$arity$variadic = G__11192__delegate;
    return G__11192;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__11196 = null;
      var G__11196__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__11196__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__11196__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__11196__4 = function() {
        var G__11197__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__11197 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11197__delegate.call(this, a, b, c, ds);
        };
        G__11197.cljs$lang$maxFixedArity = 3;
        G__11197.cljs$lang$applyTo = function(arglist__11198) {
          var a = cljs.core.first(arglist__11198);
          arglist__11198 = cljs.core.next(arglist__11198);
          var b = cljs.core.first(arglist__11198);
          arglist__11198 = cljs.core.next(arglist__11198);
          var c = cljs.core.first(arglist__11198);
          var ds = cljs.core.rest(arglist__11198);
          return G__11197__delegate(a, b, c, ds);
        };
        G__11197.cljs$core$IFn$_invoke$arity$variadic = G__11197__delegate;
        return G__11197;
      }();
      G__11196 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__11196__1.call(this, a);
          case 2:
            return G__11196__2.call(this, a, b);
          case 3:
            return G__11196__3.call(this, a, b, c);
          default:
            return G__11196__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11196.cljs$lang$maxFixedArity = 3;
      G__11196.cljs$lang$applyTo = G__11196__4.cljs$lang$applyTo;
      G__11196.cljs$core$IFn$_invoke$arity$1 = G__11196__1;
      G__11196.cljs$core$IFn$_invoke$arity$2 = G__11196__2;
      G__11196.cljs$core$IFn$_invoke$arity$3 = G__11196__3;
      G__11196.cljs$core$IFn$_invoke$arity$variadic = G__11196__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11196;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__11199 = null;
      var G__11199__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__11199__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__11199__4 = function() {
        var G__11200__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__11200 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11200__delegate.call(this, a, b, c, ds);
        };
        G__11200.cljs$lang$maxFixedArity = 3;
        G__11200.cljs$lang$applyTo = function(arglist__11201) {
          var a = cljs.core.first(arglist__11201);
          arglist__11201 = cljs.core.next(arglist__11201);
          var b = cljs.core.first(arglist__11201);
          arglist__11201 = cljs.core.next(arglist__11201);
          var c = cljs.core.first(arglist__11201);
          var ds = cljs.core.rest(arglist__11201);
          return G__11200__delegate(a, b, c, ds);
        };
        G__11200.cljs$core$IFn$_invoke$arity$variadic = G__11200__delegate;
        return G__11200;
      }();
      G__11199 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__11199__2.call(this, a, b);
          case 3:
            return G__11199__3.call(this, a, b, c);
          default:
            return G__11199__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11199.cljs$lang$maxFixedArity = 3;
      G__11199.cljs$lang$applyTo = G__11199__4.cljs$lang$applyTo;
      G__11199.cljs$core$IFn$_invoke$arity$2 = G__11199__2;
      G__11199.cljs$core$IFn$_invoke$arity$3 = G__11199__3;
      G__11199.cljs$core$IFn$_invoke$arity$variadic = G__11199__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11199;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__11202 = null;
      var G__11202__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__11202__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__11202__4 = function() {
        var G__11203__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__11203 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11203__delegate.call(this, a, b, c, ds);
        };
        G__11203.cljs$lang$maxFixedArity = 3;
        G__11203.cljs$lang$applyTo = function(arglist__11204) {
          var a = cljs.core.first(arglist__11204);
          arglist__11204 = cljs.core.next(arglist__11204);
          var b = cljs.core.first(arglist__11204);
          arglist__11204 = cljs.core.next(arglist__11204);
          var c = cljs.core.first(arglist__11204);
          var ds = cljs.core.rest(arglist__11204);
          return G__11203__delegate(a, b, c, ds);
        };
        G__11203.cljs$core$IFn$_invoke$arity$variadic = G__11203__delegate;
        return G__11203;
      }();
      G__11202 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__11202__2.call(this, a, b);
          case 3:
            return G__11202__3.call(this, a, b, c);
          default:
            return G__11202__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11202.cljs$lang$maxFixedArity = 3;
      G__11202.cljs$lang$applyTo = G__11202__4.cljs$lang$applyTo;
      G__11202.cljs$core$IFn$_invoke$arity$2 = G__11202__2;
      G__11202.cljs$core$IFn$_invoke$arity$3 = G__11202__3;
      G__11202.cljs$core$IFn$_invoke$arity$variadic = G__11202__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11202;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4409__auto___11205 = size;
          var i_11206 = 0;
          while (true) {
            if (i_11206 < n__4409__auto___11205) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_11206, cljs.core._nth.call(null, c, i_11206)));
              var G__11207 = i_11206 + 1;
              i_11206 = G__11207;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(f1) {
      return function() {
        var G__11208 = null;
        var G__11208__0 = function() {
          return f1.call(null);
        };
        var G__11208__1 = function(result) {
          return f1.call(null, result);
        };
        var G__11208__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return f1.call(null, result, v);
          }
        };
        G__11208 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11208__0.call(this);
            case 1:
              return G__11208__1.call(this, result);
            case 2:
              return G__11208__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11208.cljs$core$IFn$_invoke$arity$0 = G__11208__0;
        G__11208.cljs$core$IFn$_invoke$arity$1 = G__11208__1;
        G__11208.cljs$core$IFn$_invoke$arity$2 = G__11208__2;
        return G__11208;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4409__auto___11209 = size;
          var i_11210 = 0;
          while (true) {
            if (i_11210 < n__4409__auto___11209) {
              var x_11211 = f.call(null, cljs.core._nth.call(null, c, i_11210));
              if (x_11211 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_11211);
              }
              var G__11212 = i_11210 + 1;
              i_11210 = G__11212;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__11213 = cljs.core.seq.call(null, self__.watches);
  var chunk__11214 = null;
  var count__11215 = 0;
  var i__11216 = 0;
  while (true) {
    if (i__11216 < count__11215) {
      var vec__11217 = cljs.core._nth.call(null, chunk__11214, i__11216);
      var key = cljs.core.nth.call(null, vec__11217, 0, null);
      var f = cljs.core.nth.call(null, vec__11217, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__11219 = seq__11213;
      var G__11220 = chunk__11214;
      var G__11221 = count__11215;
      var G__11222 = i__11216 + 1;
      seq__11213 = G__11219;
      chunk__11214 = G__11220;
      count__11215 = G__11221;
      i__11216 = G__11222;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11213);
      if (temp__4126__auto__) {
        var seq__11213__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11213__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__11213__$1);
          var G__11223 = cljs.core.chunk_rest.call(null, seq__11213__$1);
          var G__11224 = c__4309__auto__;
          var G__11225 = cljs.core.count.call(null, c__4309__auto__);
          var G__11226 = 0;
          seq__11213 = G__11223;
          chunk__11214 = G__11224;
          count__11215 = G__11225;
          i__11216 = G__11226;
          continue;
        } else {
          var vec__11218 = cljs.core.first.call(null, seq__11213__$1);
          var key = cljs.core.nth.call(null, vec__11218, 0, null);
          var f = cljs.core.nth.call(null, vec__11218, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__11227 = cljs.core.next.call(null, seq__11213__$1);
          var G__11228 = null;
          var G__11229 = 0;
          var G__11230 = 0;
          seq__11213 = G__11227;
          chunk__11214 = G__11228;
          count__11215 = G__11229;
          i__11216 = G__11230;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__11234__delegate = function(x, p__11231) {
      var map__11233 = p__11231;
      var map__11233__$1 = cljs.core.seq_QMARK_.call(null, map__11233) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11233) : map__11233;
      var validator = cljs.core.get.call(null, map__11233__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__11233__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__11234 = function(x, var_args) {
      var p__11231 = null;
      if (arguments.length > 1) {
        p__11231 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11234__delegate.call(this, x, p__11231);
    };
    G__11234.cljs$lang$maxFixedArity = 1;
    G__11234.cljs$lang$applyTo = function(arglist__11235) {
      var x = cljs.core.first(arglist__11235);
      var p__11231 = cljs.core.rest(arglist__11235);
      return G__11234__delegate(x, p__11231);
    };
    G__11234.cljs$core$IFn$_invoke$arity$variadic = G__11234__delegate;
    return G__11234;
  }();
  atom = function(x, var_args) {
    var p__11231 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error("Assert failed: Validator rejected reference state\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null)))));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__11236__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__11236 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11236__delegate.call(this, a, f, x, y, more);
    };
    G__11236.cljs$lang$maxFixedArity = 4;
    G__11236.cljs$lang$applyTo = function(arglist__11237) {
      var a = cljs.core.first(arglist__11237);
      arglist__11237 = cljs.core.next(arglist__11237);
      var f = cljs.core.first(arglist__11237);
      arglist__11237 = cljs.core.next(arglist__11237);
      var x = cljs.core.first(arglist__11237);
      arglist__11237 = cljs.core.next(arglist__11237);
      var y = cljs.core.first(arglist__11237);
      var more = cljs.core.rest(arglist__11237);
      return G__11236__delegate(a, f, x, y, more);
    };
    G__11236.cljs$core$IFn$_invoke$arity$variadic = G__11236__delegate;
    return G__11236;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__11238 = null;
          var G__11238__0 = function() {
            return f1.call(null);
          };
          var G__11238__1 = function(result) {
            return f1.call(null, result);
          };
          var G__11238__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return f1.call(null, result, v);
            }
          };
          G__11238 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11238__0.call(this);
              case 1:
                return G__11238__1.call(this, result);
              case 2:
                return G__11238__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11238.cljs$core$IFn$_invoke$arity$0 = G__11238__0;
          G__11238.cljs$core$IFn$_invoke$arity$1 = G__11238__1;
          G__11238.cljs$core$IFn$_invoke$arity$2 = G__11238__2;
          return G__11238;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4409__auto___11239 = size;
            var i_11240 = 0;
            while (true) {
              if (i_11240 < n__4409__auto___11239) {
                var x_11241 = f.call(null, idx + i_11240, cljs.core._nth.call(null, c, i_11240));
                if (x_11241 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_11241);
                }
                var G__11242 = i_11240 + 1;
                i_11240 = G__11242;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            return p.call(null, y);
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__11249__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__11249 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11249__delegate.call(this, x, y, z, args);
        };
        G__11249.cljs$lang$maxFixedArity = 3;
        G__11249.cljs$lang$applyTo = function(arglist__11250) {
          var x = cljs.core.first(arglist__11250);
          arglist__11250 = cljs.core.next(arglist__11250);
          var y = cljs.core.first(arglist__11250);
          arglist__11250 = cljs.core.next(arglist__11250);
          var z = cljs.core.first(arglist__11250);
          var args = cljs.core.rest(arglist__11250);
          return G__11249__delegate(x, y, z, args);
        };
        G__11249.cljs$core$IFn$_invoke$arity$variadic = G__11249__delegate;
        return G__11249;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              var and__3541__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3541__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3541__auto____$2;
              }
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              var and__3541__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3541__auto____$2)) {
                var and__3541__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3541__auto____$3)) {
                  var and__3541__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3541__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3541__auto____$4;
                  }
                } else {
                  return and__3541__auto____$3;
                }
              } else {
                return and__3541__auto____$2;
              }
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__11251__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__11243_SHARP_) {
            var and__3541__auto__ = p1.call(null, p1__11243_SHARP_);
            if (cljs.core.truth_(and__3541__auto__)) {
              return p2.call(null, p1__11243_SHARP_);
            } else {
              return and__3541__auto__;
            }
          }, args));
        };
        var G__11251 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11251__delegate.call(this, x, y, z, args);
        };
        G__11251.cljs$lang$maxFixedArity = 3;
        G__11251.cljs$lang$applyTo = function(arglist__11252) {
          var x = cljs.core.first(arglist__11252);
          arglist__11252 = cljs.core.next(arglist__11252);
          var y = cljs.core.first(arglist__11252);
          arglist__11252 = cljs.core.next(arglist__11252);
          var z = cljs.core.first(arglist__11252);
          var args = cljs.core.rest(arglist__11252);
          return G__11251__delegate(x, y, z, args);
        };
        G__11251.cljs$core$IFn$_invoke$arity$variadic = G__11251__delegate;
        return G__11251;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              var and__3541__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3541__auto____$2)) {
                var and__3541__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3541__auto____$3)) {
                  var and__3541__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3541__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3541__auto____$4;
                  }
                } else {
                  return and__3541__auto____$3;
                }
              } else {
                return and__3541__auto____$2;
              }
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              var and__3541__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3541__auto____$2)) {
                var and__3541__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3541__auto____$3)) {
                  var and__3541__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3541__auto____$4)) {
                    var and__3541__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3541__auto____$5)) {
                      var and__3541__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3541__auto____$6)) {
                        var and__3541__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3541__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3541__auto____$7;
                        }
                      } else {
                        return and__3541__auto____$6;
                      }
                    } else {
                      return and__3541__auto____$5;
                    }
                  } else {
                    return and__3541__auto____$4;
                  }
                } else {
                  return and__3541__auto____$3;
                }
              } else {
                return and__3541__auto____$2;
              }
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__11253__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__11244_SHARP_) {
            var and__3541__auto__ = p1.call(null, p1__11244_SHARP_);
            if (cljs.core.truth_(and__3541__auto__)) {
              var and__3541__auto____$1 = p2.call(null, p1__11244_SHARP_);
              if (cljs.core.truth_(and__3541__auto____$1)) {
                return p3.call(null, p1__11244_SHARP_);
              } else {
                return and__3541__auto____$1;
              }
            } else {
              return and__3541__auto__;
            }
          }, args));
        };
        var G__11253 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11253__delegate.call(this, x, y, z, args);
        };
        G__11253.cljs$lang$maxFixedArity = 3;
        G__11253.cljs$lang$applyTo = function(arglist__11254) {
          var x = cljs.core.first(arglist__11254);
          arglist__11254 = cljs.core.next(arglist__11254);
          var y = cljs.core.first(arglist__11254);
          arglist__11254 = cljs.core.next(arglist__11254);
          var z = cljs.core.first(arglist__11254);
          var args = cljs.core.rest(arglist__11254);
          return G__11253__delegate(x, y, z, args);
        };
        G__11253.cljs$core$IFn$_invoke$arity$variadic = G__11253__delegate;
        return G__11253;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__11255__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__11245_SHARP_) {
                return p1__11245_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__11246_SHARP_) {
                var and__3541__auto__ = p1__11246_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3541__auto__)) {
                  return p1__11246_SHARP_.call(null, y);
                } else {
                  return and__3541__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__11247_SHARP_) {
                var and__3541__auto__ = p1__11247_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3541__auto__)) {
                  var and__3541__auto____$1 = p1__11247_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3541__auto____$1)) {
                    return p1__11247_SHARP_.call(null, z);
                  } else {
                    return and__3541__auto____$1;
                  }
                } else {
                  return and__3541__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__11256__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__11248_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__11248_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__11256 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__11256__delegate.call(this, x, y, z, args);
            };
            G__11256.cljs$lang$maxFixedArity = 3;
            G__11256.cljs$lang$applyTo = function(arglist__11257) {
              var x = cljs.core.first(arglist__11257);
              arglist__11257 = cljs.core.next(arglist__11257);
              var y = cljs.core.first(arglist__11257);
              arglist__11257 = cljs.core.next(arglist__11257);
              var z = cljs.core.first(arglist__11257);
              var args = cljs.core.rest(arglist__11257);
              return G__11256__delegate(x, y, z, args);
            };
            G__11256.cljs$core$IFn$_invoke$arity$variadic = G__11256__delegate;
            return G__11256;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__11255 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11255__delegate.call(this, p1, p2, p3, ps);
    };
    G__11255.cljs$lang$maxFixedArity = 3;
    G__11255.cljs$lang$applyTo = function(arglist__11258) {
      var p1 = cljs.core.first(arglist__11258);
      arglist__11258 = cljs.core.next(arglist__11258);
      var p2 = cljs.core.first(arglist__11258);
      arglist__11258 = cljs.core.next(arglist__11258);
      var p3 = cljs.core.first(arglist__11258);
      var ps = cljs.core.rest(arglist__11258);
      return G__11255__delegate(p1, p2, p3, ps);
    };
    G__11255.cljs$core$IFn$_invoke$arity$variadic = G__11255__delegate;
    return G__11255;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3553__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3553__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__11265__delegate = function(x, y, z, args) {
          var or__3553__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__11265 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11265__delegate.call(this, x, y, z, args);
        };
        G__11265.cljs$lang$maxFixedArity = 3;
        G__11265.cljs$lang$applyTo = function(arglist__11266) {
          var x = cljs.core.first(arglist__11266);
          arglist__11266 = cljs.core.next(arglist__11266);
          var y = cljs.core.first(arglist__11266);
          arglist__11266 = cljs.core.next(arglist__11266);
          var z = cljs.core.first(arglist__11266);
          var args = cljs.core.rest(arglist__11266);
          return G__11265__delegate(x, y, z, args);
        };
        G__11265.cljs$core$IFn$_invoke$arity$variadic = G__11265__delegate;
        return G__11265;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            var or__3553__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3553__auto____$2)) {
              return or__3553__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            var or__3553__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3553__auto____$2)) {
              return or__3553__auto____$2;
            } else {
              var or__3553__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3553__auto____$3)) {
                return or__3553__auto____$3;
              } else {
                var or__3553__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3553__auto____$4)) {
                  return or__3553__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__11267__delegate = function(x, y, z, args) {
          var or__3553__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3553__auto__) {
              return function(p1__11259_SHARP_) {
                var or__3553__auto____$1 = p1.call(null, p1__11259_SHARP_);
                if (cljs.core.truth_(or__3553__auto____$1)) {
                  return or__3553__auto____$1;
                } else {
                  return p2.call(null, p1__11259_SHARP_);
                }
              };
            }(or__3553__auto__), args);
          }
        };
        var G__11267 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11267__delegate.call(this, x, y, z, args);
        };
        G__11267.cljs$lang$maxFixedArity = 3;
        G__11267.cljs$lang$applyTo = function(arglist__11268) {
          var x = cljs.core.first(arglist__11268);
          arglist__11268 = cljs.core.next(arglist__11268);
          var y = cljs.core.first(arglist__11268);
          arglist__11268 = cljs.core.next(arglist__11268);
          var z = cljs.core.first(arglist__11268);
          var args = cljs.core.rest(arglist__11268);
          return G__11267__delegate(x, y, z, args);
        };
        G__11267.cljs$core$IFn$_invoke$arity$variadic = G__11267__delegate;
        return G__11267;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            var or__3553__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3553__auto____$2)) {
              return or__3553__auto____$2;
            } else {
              var or__3553__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3553__auto____$3)) {
                return or__3553__auto____$3;
              } else {
                var or__3553__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3553__auto____$4)) {
                  return or__3553__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            var or__3553__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3553__auto____$2)) {
              return or__3553__auto____$2;
            } else {
              var or__3553__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3553__auto____$3)) {
                return or__3553__auto____$3;
              } else {
                var or__3553__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3553__auto____$4)) {
                  return or__3553__auto____$4;
                } else {
                  var or__3553__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3553__auto____$5)) {
                    return or__3553__auto____$5;
                  } else {
                    var or__3553__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3553__auto____$6)) {
                      return or__3553__auto____$6;
                    } else {
                      var or__3553__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3553__auto____$7)) {
                        return or__3553__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__11269__delegate = function(x, y, z, args) {
          var or__3553__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3553__auto__) {
              return function(p1__11260_SHARP_) {
                var or__3553__auto____$1 = p1.call(null, p1__11260_SHARP_);
                if (cljs.core.truth_(or__3553__auto____$1)) {
                  return or__3553__auto____$1;
                } else {
                  var or__3553__auto____$2 = p2.call(null, p1__11260_SHARP_);
                  if (cljs.core.truth_(or__3553__auto____$2)) {
                    return or__3553__auto____$2;
                  } else {
                    return p3.call(null, p1__11260_SHARP_);
                  }
                }
              };
            }(or__3553__auto__), args);
          }
        };
        var G__11269 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11269__delegate.call(this, x, y, z, args);
        };
        G__11269.cljs$lang$maxFixedArity = 3;
        G__11269.cljs$lang$applyTo = function(arglist__11270) {
          var x = cljs.core.first(arglist__11270);
          arglist__11270 = cljs.core.next(arglist__11270);
          var y = cljs.core.first(arglist__11270);
          arglist__11270 = cljs.core.next(arglist__11270);
          var z = cljs.core.first(arglist__11270);
          var args = cljs.core.rest(arglist__11270);
          return G__11269__delegate(x, y, z, args);
        };
        G__11269.cljs$core$IFn$_invoke$arity$variadic = G__11269__delegate;
        return G__11269;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__11271__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__11261_SHARP_) {
                return p1__11261_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__11262_SHARP_) {
                var or__3553__auto__ = p1__11262_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3553__auto__)) {
                  return or__3553__auto__;
                } else {
                  return p1__11262_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__11263_SHARP_) {
                var or__3553__auto__ = p1__11263_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3553__auto__)) {
                  return or__3553__auto__;
                } else {
                  var or__3553__auto____$1 = p1__11263_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3553__auto____$1)) {
                    return or__3553__auto____$1;
                  } else {
                    return p1__11263_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__11272__delegate = function(x, y, z, args) {
              var or__3553__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3553__auto__)) {
                return or__3553__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3553__auto__, ps__$1) {
                  return function(p1__11264_SHARP_) {
                    return cljs.core.some.call(null, p1__11264_SHARP_, args);
                  };
                }(or__3553__auto__, ps__$1), ps__$1);
              }
            };
            var G__11272 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__11272__delegate.call(this, x, y, z, args);
            };
            G__11272.cljs$lang$maxFixedArity = 3;
            G__11272.cljs$lang$applyTo = function(arglist__11273) {
              var x = cljs.core.first(arglist__11273);
              arglist__11273 = cljs.core.next(arglist__11273);
              var y = cljs.core.first(arglist__11273);
              arglist__11273 = cljs.core.next(arglist__11273);
              var z = cljs.core.first(arglist__11273);
              var args = cljs.core.rest(arglist__11273);
              return G__11272__delegate(x, y, z, args);
            };
            G__11272.cljs$core$IFn$_invoke$arity$variadic = G__11272__delegate;
            return G__11272;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__11271 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11271__delegate.call(this, p1, p2, p3, ps);
    };
    G__11271.cljs$lang$maxFixedArity = 3;
    G__11271.cljs$lang$applyTo = function(arglist__11274) {
      var p1 = cljs.core.first(arglist__11274);
      arglist__11274 = cljs.core.next(arglist__11274);
      var p2 = cljs.core.first(arglist__11274);
      arglist__11274 = cljs.core.next(arglist__11274);
      var p3 = cljs.core.first(arglist__11274);
      var ps = cljs.core.rest(arglist__11274);
      return G__11271__delegate(p1, p2, p3, ps);
    };
    G__11271.cljs$core$IFn$_invoke$arity$variadic = G__11271__delegate;
    return G__11271;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(f1) {
      return function() {
        var G__11276 = null;
        var G__11276__0 = function() {
          return f1.call(null);
        };
        var G__11276__1 = function(result) {
          return f1.call(null, result);
        };
        var G__11276__2 = function(result, input) {
          return f1.call(null, result, f.call(null, input));
        };
        var G__11276__3 = function() {
          var G__11277__delegate = function(result, input, inputs) {
            return f1.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__11277 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__11277__delegate.call(this, result, input, inputs);
          };
          G__11277.cljs$lang$maxFixedArity = 2;
          G__11277.cljs$lang$applyTo = function(arglist__11278) {
            var result = cljs.core.first(arglist__11278);
            arglist__11278 = cljs.core.next(arglist__11278);
            var input = cljs.core.first(arglist__11278);
            var inputs = cljs.core.rest(arglist__11278);
            return G__11277__delegate(result, input, inputs);
          };
          G__11277.cljs$core$IFn$_invoke$arity$variadic = G__11277__delegate;
          return G__11277;
        }();
        G__11276 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__11276__0.call(this);
            case 1:
              return G__11276__1.call(this, result);
            case 2:
              return G__11276__2.call(this, result, input);
            default:
              return G__11276__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11276.cljs$lang$maxFixedArity = 2;
        G__11276.cljs$lang$applyTo = G__11276__3.cljs$lang$applyTo;
        G__11276.cljs$core$IFn$_invoke$arity$0 = G__11276__0;
        G__11276.cljs$core$IFn$_invoke$arity$1 = G__11276__1;
        G__11276.cljs$core$IFn$_invoke$arity$2 = G__11276__2;
        G__11276.cljs$core$IFn$_invoke$arity$variadic = G__11276__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__11276;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4409__auto___11279 = size;
          var i_11280 = 0;
          while (true) {
            if (i_11280 < n__4409__auto___11279) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_11280)));
              var G__11281 = i_11280 + 1;
              i_11280 = G__11281;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__11282__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__11275_SHARP_) {
          return cljs.core.apply.call(null, f, p1__11275_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__11282 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11282__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__11282.cljs$lang$maxFixedArity = 4;
    G__11282.cljs$lang$applyTo = function(arglist__11283) {
      var f = cljs.core.first(arglist__11283);
      arglist__11283 = cljs.core.next(arglist__11283);
      var c1 = cljs.core.first(arglist__11283);
      arglist__11283 = cljs.core.next(arglist__11283);
      var c2 = cljs.core.first(arglist__11283);
      arglist__11283 = cljs.core.next(arglist__11283);
      var c3 = cljs.core.first(arglist__11283);
      var colls = cljs.core.rest(arglist__11283);
      return G__11282__delegate(f, c1, c2, c3, colls);
    };
    G__11282.cljs$core$IFn$_invoke$arity$variadic = G__11282__delegate;
    return G__11282;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__11284 = null;
          var G__11284__0 = function() {
            return f1.call(null);
          };
          var G__11284__1 = function(result) {
            return f1.call(null, result);
          };
          var G__11284__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            var result__$1 = n__$1 > 0 ? f1.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__11284 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11284__0.call(this);
              case 1:
                return G__11284__1.call(this, result);
              case 2:
                return G__11284__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11284.cljs$core$IFn$_invoke$arity$0 = G__11284__0;
          G__11284.cljs$core$IFn$_invoke$arity$1 = G__11284__1;
          G__11284.cljs$core$IFn$_invoke$arity$2 = G__11284__2;
          return G__11284;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__11285 = null;
          var G__11285__0 = function() {
            return f1.call(null);
          };
          var G__11285__1 = function(result) {
            return f1.call(null, result);
          };
          var G__11285__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            if (n__$1 > 0) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__11285 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11285__0.call(this);
              case 1:
                return G__11285__1.call(this, result);
              case 2:
                return G__11285__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11285.cljs$core$IFn$_invoke$arity$0 = G__11285__0;
          G__11285.cljs$core$IFn$_invoke$arity$1 = G__11285__1;
          G__11285.cljs$core$IFn$_invoke$arity$2 = G__11285__2;
          return G__11285;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__11286 = n__$1 - 1;
          var G__11287 = cljs.core.rest.call(null, s);
          n__$1 = G__11286;
          coll__$1 = G__11287;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__11288 = cljs.core.next.call(null, s);
      var G__11289 = cljs.core.next.call(null, lead);
      s = G__11288;
      lead = G__11289;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(f1) {
      var da = cljs.core.atom.call(null, true);
      return function(da) {
        return function() {
          var G__11290 = null;
          var G__11290__0 = function() {
            return f1.call(null);
          };
          var G__11290__1 = function(result) {
            return f1.call(null, result);
          };
          var G__11290__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3541__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3541__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3541__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.reset_BANG_.call(null, da, null);
              return f1.call(null, result, input);
            }
          };
          G__11290 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11290__0.call(this);
              case 1:
                return G__11290__1.call(this, result);
              case 2:
                return G__11290__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11290.cljs$core$IFn$_invoke$arity$0 = G__11290__0;
          G__11290.cljs$core$IFn$_invoke$arity$1 = G__11290__1;
          G__11290.cljs$core$IFn$_invoke$arity$2 = G__11290__2;
          return G__11290;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3541__auto__ = s;
          if (and__3541__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3541__auto__;
          }
        }())) {
          var G__11291 = pred__$1;
          var G__11292 = cljs.core.rest.call(null, s);
          pred__$1 = G__11291;
          coll__$1 = G__11292;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__11293__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__11293 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11293__delegate.call(this, c1, c2, colls);
    };
    G__11293.cljs$lang$maxFixedArity = 2;
    G__11293.cljs$lang$applyTo = function(arglist__11294) {
      var c1 = cljs.core.first(arglist__11294);
      arglist__11294 = cljs.core.next(arglist__11294);
      var c2 = cljs.core.first(arglist__11294);
      var colls = cljs.core.rest(arglist__11294);
      return G__11293__delegate(c1, c2, colls);
    };
    G__11293.cljs$core$IFn$_invoke$arity$variadic = G__11293__delegate;
    return G__11293;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__11295__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__11295 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11295__delegate.call(this, f, coll, colls);
    };
    G__11295.cljs$lang$maxFixedArity = 2;
    G__11295.cljs$lang$applyTo = function(arglist__11296) {
      var f = cljs.core.first(arglist__11296);
      arglist__11296 = cljs.core.next(arglist__11296);
      var coll = cljs.core.first(arglist__11296);
      var colls = cljs.core.rest(arglist__11296);
      return G__11295__delegate(f, coll, colls);
    };
    G__11295.cljs$core$IFn$_invoke$arity$variadic = G__11295__delegate;
    return G__11295;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__11297 = null;
        var G__11297__0 = function() {
          return f1.call(null);
        };
        var G__11297__1 = function(result) {
          return f1.call(null, result);
        };
        var G__11297__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return result;
          }
        };
        G__11297 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11297__0.call(this);
            case 1:
              return G__11297__1.call(this, result);
            case 2:
              return G__11297__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11297.cljs$core$IFn$_invoke$arity$0 = G__11297__0;
        G__11297.cljs$core$IFn$_invoke$arity$1 = G__11297__1;
        G__11297.cljs$core$IFn$_invoke$arity$2 = G__11297__2;
        return G__11297;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4409__auto___11298 = size;
          var i_11299 = 0;
          while (true) {
            if (i_11299 < n__4409__auto___11298) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_11299)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_11299));
              } else {
              }
              var G__11300 = i_11299 + 1;
              i_11299 = G__11300;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__11301_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__11301_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__11304 = to;
        if (G__11304) {
          var bit__4196__auto__ = G__11304.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4196__auto__ || G__11304.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__11305 = to;
      if (G__11305) {
        var bit__4196__auto__ = G__11305.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4196__auto__ || G__11305.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__11306__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__11306 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11306__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__11306.cljs$lang$maxFixedArity = 4;
    G__11306.cljs$lang$applyTo = function(arglist__11307) {
      var f = cljs.core.first(arglist__11307);
      arglist__11307 = cljs.core.next(arglist__11307);
      var c1 = cljs.core.first(arglist__11307);
      arglist__11307 = cljs.core.next(arglist__11307);
      var c2 = cljs.core.first(arglist__11307);
      arglist__11307 = cljs.core.next(arglist__11307);
      var c3 = cljs.core.first(arglist__11307);
      var colls = cljs.core.rest(arglist__11307);
      return G__11306__delegate(f, c1, c2, c3, colls);
    };
    G__11306.cljs$core$IFn$_invoke$arity$variadic = G__11306__delegate;
    return G__11306;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__11309 = m__$1;
          if (G__11309) {
            var bit__4203__auto__ = G__11309.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4203__auto__ || G__11309.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__11309.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__11309);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__11309);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__11310 = sentinel;
            var G__11311 = m__$2;
            var G__11312 = cljs.core.next.call(null, ks__$1);
            sentinel = G__11310;
            m__$1 = G__11311;
            ks__$1 = G__11312;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__11313, v) {
  var vec__11315 = p__11313;
  var k = cljs.core.nth.call(null, vec__11315, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__11315, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__11316, f) {
    var vec__11326 = p__11316;
    var k = cljs.core.nth.call(null, vec__11326, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11326, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__11317, f, a) {
    var vec__11327 = p__11317;
    var k = cljs.core.nth.call(null, vec__11327, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11327, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__11318, f, a, b) {
    var vec__11328 = p__11318;
    var k = cljs.core.nth.call(null, vec__11328, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11328, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__11319, f, a, b, c) {
    var vec__11329 = p__11319;
    var k = cljs.core.nth.call(null, vec__11329, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11329, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__11331__delegate = function(m, p__11320, f, a, b, c, args) {
      var vec__11330 = p__11320;
      var k = cljs.core.nth.call(null, vec__11330, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__11330, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__11331 = function(m, p__11320, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__11331__delegate.call(this, m, p__11320, f, a, b, c, args);
    };
    G__11331.cljs$lang$maxFixedArity = 6;
    G__11331.cljs$lang$applyTo = function(arglist__11332) {
      var m = cljs.core.first(arglist__11332);
      arglist__11332 = cljs.core.next(arglist__11332);
      var p__11320 = cljs.core.first(arglist__11332);
      arglist__11332 = cljs.core.next(arglist__11332);
      var f = cljs.core.first(arglist__11332);
      arglist__11332 = cljs.core.next(arglist__11332);
      var a = cljs.core.first(arglist__11332);
      arglist__11332 = cljs.core.next(arglist__11332);
      var b = cljs.core.first(arglist__11332);
      arglist__11332 = cljs.core.next(arglist__11332);
      var c = cljs.core.first(arglist__11332);
      var args = cljs.core.rest(arglist__11332);
      return G__11331__delegate(m, p__11320, f, a, b, c, args);
    };
    G__11331.cljs$core$IFn$_invoke$arity$variadic = G__11331__delegate;
    return G__11331;
  }();
  update_in = function(m, p__11320, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__11320, f);
      case 4:
        return update_in__4.call(this, m, p__11320, f, a);
      case 5:
        return update_in__5.call(this, m, p__11320, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__11320, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__11320, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4123__auto__, writer__4124__auto__, opts__4125__auto__) {
  return cljs.core._write.call(null, writer__4124__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__11333 = ll - 5;
      var G__11334 = r;
      ll = G__11333;
      ret = G__11334;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error("No item " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i) + " in vector of length " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__11335 = cljs.core.pv_aget.call(null, node, 0);
      var G__11336 = level - 5;
      node = G__11335;
      level = G__11336;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__11337 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__11338 = level - 5;
        node = G__11337;
        level = G__11338;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__11340 = j + 1;
              var G__11341 = init__$2;
              j = G__11340;
              init__$1 = G__11341;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__11342 = i + step_init[0];
        i = G__11342;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds  [0," + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt) + "]");
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4409__auto___11343 = len;
    var i_11344 = 0;
    while (true) {
      if (i_11344 < n__4409__auto___11343) {
        new_tail[i_11344] = self__.tail[i_11344];
        var G__11345 = i_11344 + 1;
        i_11344 = G__11345;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__11346 = null;
  var G__11346__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__11346__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__11346 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11346__2.call(this, self__, k);
      case 3:
        return G__11346__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11346.cljs$core$IFn$_invoke$arity$2 = G__11346__2;
  G__11346.cljs$core$IFn$_invoke$arity$3 = G__11346__3;
  return G__11346;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args11339) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11339)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__11347 = i + 1;
        var G__11348 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__11347;
        out = G__11348;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__11349) {
    var args = cljs.core.seq(arglist__11349);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3860__auto__ = self__.end;
    var y__3861__auto__ = v_pos + 1;
    return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__11351 = null;
  var G__11351__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__11351__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__11351 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11351__2.call(this, self__, k);
      case 3:
        return G__11351__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11351.cljs$core$IFn$_invoke$arity$2 = G__11351__2;
  G__11351.cljs$core$IFn$_invoke$arity$3 = G__11351__3;
  return G__11351;
}();
cljs.core.Subvec.prototype.apply = function(self__, args11350) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11350)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__11352 = meta;
      var G__11353 = v.v;
      var G__11354 = v.start + start;
      var G__11355 = v.start + end;
      var G__11356 = __hash;
      meta = G__11352;
      v = G__11353;
      start = G__11354;
      end = G__11355;
      __hash = G__11356;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj11360 = {};
    return obj11360;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__11361 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__11362 = level - 5;
        node = G__11361;
        level = G__11362;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__11364 = null;
  var G__11364__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11364__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11364 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11364__2.call(this, self__, k);
      case 3:
        return G__11364__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11364.cljs$core$IFn$_invoke$arity$2 = G__11364__2;
  G__11364.cljs$core$IFn$_invoke$arity$3 = G__11364__3;
  return G__11364;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args11363) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11363)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds for TransientVector of length" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3553__auto__ = self__.front;
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3553__auto__ = self__.rear;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__11365 = i + incr;
        i = G__11365;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__11366 = i + 1;
      var G__11367 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__11366;
      out = G__11367;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj11371 = {};
    return obj11371;
  }();
  var l = ks.length;
  var i_11372 = 0;
  while (true) {
    if (i_11372 < l) {
      var k_11373 = ks[i_11372];
      new_obj[k_11373] = obj[k_11373];
      var G__11374 = i_11372 + 1;
      i_11372 = G__11374;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11377 = cljs.core.rest.call(null, keys__$1);
        var G__11378 = init__$2;
        keys__$1 = G__11377;
        init__$1 = G__11378;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__11375_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__11375_SHARP_, self__.strobj[p1__11375_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__11379 = null;
  var G__11379__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11379__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11379 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11379__2.call(this, self__, k);
      case 3:
        return G__11379__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11379.cljs$core$IFn$_invoke$arity$2 = G__11379__2;
  G__11379.cljs$core$IFn$_invoke$arity$3 = G__11379__3;
  return G__11379;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args11376) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11376)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj11381 = {};
  return obj11381;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.Iterator = function(s) {
  this.s = s;
};
cljs.core.Iterator.cljs$lang$type = true;
cljs.core.Iterator.cljs$lang$ctorStr = "cljs.core/Iterator";
cljs.core.Iterator.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Iterator");
};
cljs.core.Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_Iterator = function __GT_Iterator(s) {
  return new cljs.core.Iterator(s);
};
cljs.core.iterator = function iterator(coll) {
  return new cljs.core.Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.EntriesIterator.cljs$lang$type = true;
cljs.core.EntriesIterator.cljs$lang$ctorStr = "cljs.core/EntriesIterator";
cljs.core.EntriesIterator.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/EntriesIterator");
};
cljs.core.EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__11382 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__11382, 0, null);
    var v = cljs.core.nth.call(null, vec__11382, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_EntriesIterator = function __GT_EntriesIterator(s) {
  return new cljs.core.EntriesIterator(s);
};
cljs.core.entries_iterator = function entries_iterator(coll) {
  return new cljs.core.EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.SetEntriesIterator.cljs$lang$type = true;
cljs.core.SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/SetEntriesIterator";
cljs.core.SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/SetEntriesIterator");
};
cljs.core.SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_SetEntriesIterator = function __GT_SetEntriesIterator(s) {
  return new cljs.core.SetEntriesIterator(s);
};
cljs.core.set_entries_iterator = function set_entries_iterator(coll) {
  return new cljs.core.SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__11383 = i + 2;
        i = G__11383;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__11384 = i + 2;
        i = G__11384;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__11385 = i + 2;
        i = G__11385;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__11386 = i + 2;
        i = G__11386;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__11387 = i + 2;
        i = G__11387;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_11388 = 0;
  while (true) {
    if (i_11388 < l) {
      narr[i_11388] = arr[i_11388];
      var G__11389 = i_11388 + 1;
      i_11388 = G__11389;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11391 = cljs.core.seq.call(null, coll);
  var chunk__11392 = null;
  var count__11393 = 0;
  var i__11394 = 0;
  while (true) {
    if (i__11394 < count__11393) {
      var vec__11395 = cljs.core._nth.call(null, chunk__11392, i__11394);
      var k = cljs.core.nth.call(null, vec__11395, 0, null);
      var v = cljs.core.nth.call(null, vec__11395, 1, null);
      f.call(null, v, k);
      var G__11400 = seq__11391;
      var G__11401 = chunk__11392;
      var G__11402 = count__11393;
      var G__11403 = i__11394 + 1;
      seq__11391 = G__11400;
      chunk__11392 = G__11401;
      count__11393 = G__11402;
      i__11394 = G__11403;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11391);
      if (temp__4126__auto__) {
        var seq__11391__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11391__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__11391__$1);
          var G__11404 = cljs.core.chunk_rest.call(null, seq__11391__$1);
          var G__11405 = c__4309__auto__;
          var G__11406 = cljs.core.count.call(null, c__4309__auto__);
          var G__11407 = 0;
          seq__11391 = G__11404;
          chunk__11392 = G__11405;
          count__11393 = G__11406;
          i__11394 = G__11407;
          continue;
        } else {
          var vec__11396 = cljs.core.first.call(null, seq__11391__$1);
          var k = cljs.core.nth.call(null, vec__11396, 0, null);
          var v = cljs.core.nth.call(null, vec__11396, 1, null);
          f.call(null, v, k);
          var G__11408 = cljs.core.next.call(null, seq__11391__$1);
          var G__11409 = null;
          var G__11410 = 0;
          var G__11411 = 0;
          seq__11391 = G__11408;
          chunk__11392 = G__11409;
          count__11393 = G__11410;
          i__11394 = G__11411;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11412 = i + 2;
        var G__11413 = init__$2;
        i = G__11412;
        init__$1 = G__11413;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj11398 = {};
    return obj11398;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__11414 = s + 2;
            var G__11415 = d;
            s = G__11414;
            d = G__11415;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__11416 = s + 2;
            var G__11417 = d + 2;
            s = G__11416;
            d = G__11417;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__11399 = cljs.core.aclone.call(null, self__.arr);
        G__11399[idx + 1] = v;
        return G__11399;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__11418 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__11419 = cljs.core.next.call(null, es);
          ret = G__11418;
          es = G__11419;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__11420 = null;
  var G__11420__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11420__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11420 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11420__2.call(this, self__, k);
      case 3:
        return G__11420__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11420.cljs$core$IFn$_invoke$arity$2 = G__11420__2;
  G__11420.cljs$core$IFn$_invoke$arity$3 = G__11420__3;
  return G__11420;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args11390) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11390)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__11421 = i + 2;
        var G__11422 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__11421;
        ret = G__11422;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__11423_11425 = self__.arr;
      G__11423_11425.pop();
      G__11423_11425.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__11424 = o;
      if (G__11424) {
        var bit__4203__auto__ = G__11424.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4203__auto__ || G__11424.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__11424.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11424);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11424);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__11426 = cljs.core.next.call(null, es);
          var G__11427 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__11426;
          tcoll__$2 = G__11427;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__11428 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__11429 = i + 2;
      out = G__11428;
      i = G__11429;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4123__auto__, writer__4124__auto__, opts__4125__auto__) {
  return cljs.core._write.call(null, writer__4124__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__11432 = cljs.core.aclone.call(null, arr);
    G__11432[i] = a;
    return G__11432;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__11433 = cljs.core.aclone.call(null, arr);
    G__11433[i] = a;
    G__11433[j] = b;
    return G__11433;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11434 = i + 2;
        var G__11435 = init__$2;
        i = G__11434;
        init__$1 = G__11435;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_11436 = 0;
        var j_11437 = 0;
        while (true) {
          if (i_11436 < 32) {
            if ((self__.bitmap >>> i_11436 & 1) === 0) {
              var G__11438 = i_11436 + 1;
              var G__11439 = j_11437;
              i_11436 = G__11438;
              j_11437 = G__11439;
              continue;
            } else {
              nodes[i_11436] = !(self__.arr[j_11437] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_11437]), self__.arr[j_11437], self__.arr[j_11437 + 1], added_leaf_QMARK_) : self__.arr[j_11437 + 1];
              var G__11440 = i_11436 + 1;
              var G__11441 = j_11437 + 2;
              i_11436 = G__11440;
              j_11437 = G__11441;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_11442 = 0;
      var j_11443 = 0;
      while (true) {
        if (i_11442 < 32) {
          if ((self__.bitmap >>> i_11442 & 1) === 0) {
            var G__11444 = i_11442 + 1;
            var G__11445 = j_11443;
            i_11442 = G__11444;
            j_11443 = G__11445;
            continue;
          } else {
            nodes[i_11442] = !(self__.arr[j_11443] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_11443]), self__.arr[j_11443], self__.arr[j_11443 + 1], added_leaf_QMARK_) : self__.arr[j_11443 + 1];
            var G__11446 = i_11442 + 1;
            var G__11447 = j_11443 + 2;
            i_11442 = G__11446;
            j_11443 = G__11447;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__11448 = i + 1;
        var G__11449 = j + 2;
        var G__11450 = bitmap | 1 << i;
        i = G__11448;
        j = G__11449;
        bitmap = G__11450;
        continue;
      } else {
        var G__11451 = i + 1;
        var G__11452 = j;
        var G__11453 = bitmap;
        i = G__11451;
        j = G__11452;
        bitmap = G__11453;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__11454 = i + 1;
          var G__11455 = init__$2;
          i = G__11454;
          init__$1 = G__11455;
          continue;
        }
      } else {
        var G__11456 = i + 1;
        var G__11457 = init__$1;
        i = G__11456;
        init__$1 = G__11457;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__11458 = i + 2;
        i = G__11458;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__11459 = j + 2;
                j = G__11459;
                continue;
              }
            } else {
              var G__11460 = j + 2;
              j = G__11460;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__11461 = j + 1;
              j = G__11461;
              continue;
            }
          } else {
            var G__11462 = j + 1;
            j = G__11462;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11464 = cljs.core.seq.call(null, coll);
  var chunk__11465 = null;
  var count__11466 = 0;
  var i__11467 = 0;
  while (true) {
    if (i__11467 < count__11466) {
      var vec__11468 = cljs.core._nth.call(null, chunk__11465, i__11467);
      var k = cljs.core.nth.call(null, vec__11468, 0, null);
      var v = cljs.core.nth.call(null, vec__11468, 1, null);
      f.call(null, v, k);
      var G__11472 = seq__11464;
      var G__11473 = chunk__11465;
      var G__11474 = count__11466;
      var G__11475 = i__11467 + 1;
      seq__11464 = G__11472;
      chunk__11465 = G__11473;
      count__11466 = G__11474;
      i__11467 = G__11475;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11464);
      if (temp__4126__auto__) {
        var seq__11464__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11464__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__11464__$1);
          var G__11476 = cljs.core.chunk_rest.call(null, seq__11464__$1);
          var G__11477 = c__4309__auto__;
          var G__11478 = cljs.core.count.call(null, c__4309__auto__);
          var G__11479 = 0;
          seq__11464 = G__11476;
          chunk__11465 = G__11477;
          count__11466 = G__11478;
          i__11467 = G__11479;
          continue;
        } else {
          var vec__11469 = cljs.core.first.call(null, seq__11464__$1);
          var k = cljs.core.nth.call(null, vec__11469, 0, null);
          var v = cljs.core.nth.call(null, vec__11469, 1, null);
          f.call(null, v, k);
          var G__11480 = cljs.core.next.call(null, seq__11464__$1);
          var G__11481 = null;
          var G__11482 = 0;
          var G__11483 = 0;
          seq__11464 = G__11480;
          chunk__11465 = G__11481;
          count__11466 = G__11482;
          i__11467 = G__11483;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj11471 = {};
    return obj11471;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__11484 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__11485 = cljs.core.next.call(null, es);
          ret = G__11484;
          es = G__11485;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__11486 = null;
  var G__11486__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11486__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11486 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11486__2.call(this, self__, k);
      case 3:
        return G__11486__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11486.cljs$core$IFn$_invoke$arity$2 = G__11486__2;
  G__11486.cljs$core$IFn$_invoke$arity$3 = G__11486__3;
  return G__11486;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args11463) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11463)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__11487 = i + 1;
      var G__11488 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__11487;
      out = G__11488;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__11489 = o;
      if (G__11489) {
        var bit__4203__auto__ = G__11489.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4203__auto__ || G__11489.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__11489.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11489);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11489);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__11490 = cljs.core.next.call(null, es);
          var G__11491 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__11490;
          tcoll__$1 = G__11491;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__11492 = ascending_QMARK_ ? t.left : t.right;
      var G__11493 = cljs.core.conj.call(null, stack__$1, t);
      t = G__11492;
      stack__$1 = G__11493;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__11495 = null;
  var G__11495__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11495__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11495 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11495__2.call(this, self__, k);
      case 3:
        return G__11495__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11495.cljs$core$IFn$_invoke$arity$2 = G__11495__2;
  G__11495.cljs$core$IFn$_invoke$arity$3 = G__11495__3;
  return G__11495;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args11494) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11494)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__11497 = null;
  var G__11497__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11497__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11497 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11497__2.call(this, self__, k);
      case 3:
        return G__11497__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11497.cljs$core$IFn$_invoke$arity$2 = G__11497__2;
  G__11497.cljs$core$IFn$_invoke$arity$3 = G__11497__3;
  return G__11497;
}();
cljs.core.RedNode.prototype.apply = function(self__, args11496) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11496)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11499 = cljs.core.seq.call(null, coll);
  var chunk__11500 = null;
  var count__11501 = 0;
  var i__11502 = 0;
  while (true) {
    if (i__11502 < count__11501) {
      var vec__11503 = cljs.core._nth.call(null, chunk__11500, i__11502);
      var k = cljs.core.nth.call(null, vec__11503, 0, null);
      var v = cljs.core.nth.call(null, vec__11503, 1, null);
      f.call(null, v, k);
      var G__11505 = seq__11499;
      var G__11506 = chunk__11500;
      var G__11507 = count__11501;
      var G__11508 = i__11502 + 1;
      seq__11499 = G__11505;
      chunk__11500 = G__11506;
      count__11501 = G__11507;
      i__11502 = G__11508;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11499);
      if (temp__4126__auto__) {
        var seq__11499__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11499__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__11499__$1);
          var G__11509 = cljs.core.chunk_rest.call(null, seq__11499__$1);
          var G__11510 = c__4309__auto__;
          var G__11511 = cljs.core.count.call(null, c__4309__auto__);
          var G__11512 = 0;
          seq__11499 = G__11509;
          chunk__11500 = G__11510;
          count__11501 = G__11511;
          i__11502 = G__11512;
          continue;
        } else {
          var vec__11504 = cljs.core.first.call(null, seq__11499__$1);
          var k = cljs.core.nth.call(null, vec__11504, 0, null);
          var v = cljs.core.nth.call(null, vec__11504, 1, null);
          f.call(null, v, k);
          var G__11513 = cljs.core.next.call(null, seq__11499__$1);
          var G__11514 = null;
          var G__11515 = 0;
          var G__11516 = 0;
          seq__11499 = G__11513;
          chunk__11500 = G__11514;
          count__11501 = G__11515;
          i__11502 = G__11516;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__11517 = t.left;
          t = G__11517;
          continue;
        } else {
          var G__11518 = t.right;
          t = G__11518;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__11519 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__11520 = cljs.core.next.call(null, es);
          ret = G__11519;
          es = G__11520;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__11521 = null;
  var G__11521__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11521__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11521 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11521__2.call(this, self__, k);
      case 3:
        return G__11521__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11521.cljs$core$IFn$_invoke$arity$2 = G__11521__2;
  G__11521.cljs$core$IFn$_invoke$arity$3 = G__11521__3;
  return G__11521;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args11498) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11498)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__11522 = cljs.core.conj.call(null, stack, t);
              var G__11523 = t.left;
              stack = G__11522;
              t = G__11523;
              continue;
            } else {
              var G__11524 = stack;
              var G__11525 = t.right;
              stack = G__11524;
              t = G__11525;
              continue;
            }
          } else {
            if (c > 0) {
              var G__11526 = cljs.core.conj.call(null, stack, t);
              var G__11527 = t.right;
              stack = G__11526;
              t = G__11527;
              continue;
            } else {
              var G__11528 = stack;
              var G__11529 = t.left;
              stack = G__11528;
              t = G__11529;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__11530 = cljs.core.nnext.call(null, in$);
        var G__11531 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11530;
        out = G__11531;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__11532) {
    var keyvals = cljs.core.seq(arglist__11532);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__11533) {
    var keyvals = cljs.core.seq(arglist__11533);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj11537 = {};
      return obj11537;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__11538 = cljs.core.nnext.call(null, kvs);
        kvs = G__11538;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__11539) {
    var keyvals = cljs.core.seq(arglist__11539);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__11540 = cljs.core.nnext.call(null, in$);
        var G__11541 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11540;
        out = G__11541;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__11542) {
    var keyvals = cljs.core.seq(arglist__11542);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__11543 = cljs.core.nnext.call(null, in$);
        var G__11544 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11543;
        out = G__11544;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__11545) {
    var comparator = cljs.core.first(arglist__11545);
    var keyvals = cljs.core.rest(arglist__11545);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11546 = self__.mseq;
    if (G__11546) {
      var bit__4203__auto__ = G__11546.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4203__auto__ || G__11546.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11546.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11546);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11546);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11547 = self__.mseq;
    if (G__11547) {
      var bit__4203__auto__ = G__11547.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4203__auto__ || G__11547.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11547.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11547);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11547);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11548 = self__.mseq;
    if (G__11548) {
      var bit__4203__auto__ = G__11548.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4203__auto__ || G__11548.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11548.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11548);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11548);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11549 = self__.mseq;
    if (G__11549) {
      var bit__4203__auto__ = G__11549.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4203__auto__ || G__11549.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11549.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11549);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11549);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__11550_SHARP_, p2__11551_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3553__auto__ = p1__11550_SHARP_;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__11551_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__11552) {
    var maps = cljs.core.seq(arglist__11552);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3553__auto__ = m1;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__11553) {
    var f = cljs.core.first(arglist__11553);
    var maps = cljs.core.rest(arglist__11553);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__11554 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__11555 = cljs.core.next.call(null, keys);
      ret = G__11554;
      keys = G__11555;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11558 = cljs.core.seq.call(null, coll);
  var chunk__11559 = null;
  var count__11560 = 0;
  var i__11561 = 0;
  while (true) {
    if (i__11561 < count__11560) {
      var vec__11562 = cljs.core._nth.call(null, chunk__11559, i__11561);
      var k = cljs.core.nth.call(null, vec__11562, 0, null);
      var v = cljs.core.nth.call(null, vec__11562, 1, null);
      f.call(null, v, k);
      var G__11564 = seq__11558;
      var G__11565 = chunk__11559;
      var G__11566 = count__11560;
      var G__11567 = i__11561 + 1;
      seq__11558 = G__11564;
      chunk__11559 = G__11565;
      count__11560 = G__11566;
      i__11561 = G__11567;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11558);
      if (temp__4126__auto__) {
        var seq__11558__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11558__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__11558__$1);
          var G__11568 = cljs.core.chunk_rest.call(null, seq__11558__$1);
          var G__11569 = c__4309__auto__;
          var G__11570 = cljs.core.count.call(null, c__4309__auto__);
          var G__11571 = 0;
          seq__11558 = G__11568;
          chunk__11559 = G__11569;
          count__11560 = G__11570;
          i__11561 = G__11571;
          continue;
        } else {
          var vec__11563 = cljs.core.first.call(null, seq__11558__$1);
          var k = cljs.core.nth.call(null, vec__11563, 0, null);
          var v = cljs.core.nth.call(null, vec__11563, 1, null);
          f.call(null, v, k);
          var G__11572 = cljs.core.next.call(null, seq__11558__$1);
          var G__11573 = null;
          var G__11574 = 0;
          var G__11575 = 0;
          seq__11558 = G__11572;
          chunk__11559 = G__11573;
          count__11560 = G__11574;
          i__11561 = G__11575;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__11556_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__11556_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__11576 = null;
  var G__11576__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11576__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11576 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11576__2.call(this, self__, k);
      case 3:
        return G__11576__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11576.cljs$core$IFn$_invoke$arity$2 = G__11576__2;
  G__11576.cljs$core$IFn$_invoke$arity$3 = G__11576__3;
  return G__11576;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args11557) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11557)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__11577 = i + 1;
        var G__11578 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__11577;
        out = G__11578;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__11579 = i + 1;
        var G__11580 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__11579;
        out = G__11580;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__11582 = null;
  var G__11582__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__11582__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__11582 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11582__2.call(this, self__, k);
      case 3:
        return G__11582__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11582.cljs$core$IFn$_invoke$arity$2 = G__11582__2;
  G__11582.cljs$core$IFn$_invoke$arity$3 = G__11582__3;
  return G__11582;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args11581) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11581)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11585 = cljs.core.seq.call(null, coll);
  var chunk__11586 = null;
  var count__11587 = 0;
  var i__11588 = 0;
  while (true) {
    if (i__11588 < count__11587) {
      var vec__11589 = cljs.core._nth.call(null, chunk__11586, i__11588);
      var k = cljs.core.nth.call(null, vec__11589, 0, null);
      var v = cljs.core.nth.call(null, vec__11589, 1, null);
      f.call(null, v, k);
      var G__11591 = seq__11585;
      var G__11592 = chunk__11586;
      var G__11593 = count__11587;
      var G__11594 = i__11588 + 1;
      seq__11585 = G__11591;
      chunk__11586 = G__11592;
      count__11587 = G__11593;
      i__11588 = G__11594;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11585);
      if (temp__4126__auto__) {
        var seq__11585__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11585__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__11585__$1);
          var G__11595 = cljs.core.chunk_rest.call(null, seq__11585__$1);
          var G__11596 = c__4309__auto__;
          var G__11597 = cljs.core.count.call(null, c__4309__auto__);
          var G__11598 = 0;
          seq__11585 = G__11595;
          chunk__11586 = G__11596;
          count__11587 = G__11597;
          i__11588 = G__11598;
          continue;
        } else {
          var vec__11590 = cljs.core.first.call(null, seq__11585__$1);
          var k = cljs.core.nth.call(null, vec__11590, 0, null);
          var v = cljs.core.nth.call(null, vec__11590, 1, null);
          f.call(null, v, k);
          var G__11599 = cljs.core.next.call(null, seq__11585__$1);
          var G__11600 = null;
          var G__11601 = 0;
          var G__11602 = 0;
          seq__11585 = G__11599;
          chunk__11586 = G__11600;
          count__11587 = G__11601;
          i__11588 = G__11602;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__11583_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__11583_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__11603 = null;
  var G__11603__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11603__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11603 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11603__2.call(this, self__, k);
      case 3:
        return G__11603__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11603.cljs$core$IFn$_invoke$arity$2 = G__11603__2;
  G__11603.cljs$core$IFn$_invoke$arity$3 = G__11603__3;
  return G__11603;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args11584) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11584)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4403__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4403__auto__.length) {
        var G__11604 = i + 1;
        var G__11605 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__11604;
        res = G__11605;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__11606 = cljs.core._next.call(null, in$__$1);
          var G__11607 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__11606;
          out = G__11607;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__11608__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__11608 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__11608__delegate.call(this, keys);
    };
    G__11608.cljs$lang$maxFixedArity = 0;
    G__11608.cljs$lang$applyTo = function(arglist__11609) {
      var keys = cljs.core.seq(arglist__11609);
      return G__11608__delegate(keys);
    };
    G__11608.cljs$core$IFn$_invoke$arity$variadic = G__11608__delegate;
    return G__11608;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__11610) {
    var keys = cljs.core.seq(arglist__11610);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__11611) {
    var comparator = cljs.core.first(arglist__11611);
    var keys = cljs.core.rest(arglist__11611);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__11612_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__11612_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__11612_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__11613_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__11613_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__11613_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__11620, seen__$1) {
        while (true) {
          var vec__11621 = p__11620;
          var f = cljs.core.nth.call(null, vec__11621, 0, null);
          var xs__$1 = vec__11621;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__11622 = cljs.core.rest.call(null, s);
              var G__11623 = seen__$1;
              p__11620 = G__11622;
              seen__$1 = G__11623;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__11624 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__11625 = cljs.core.next.call(null, s__$1);
      ret = G__11624;
      s__$1 = G__11625;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__11627 = x;
    if (G__11627) {
      var bit__4196__auto__ = G__11627.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4196__auto__ || G__11627.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error("Doesn't support name: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__11628 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__11629 = cljs.core.next.call(null, ks);
      var G__11630 = cljs.core.next.call(null, vs);
      map = G__11628;
      ks = G__11629;
      vs = G__11630;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__11633__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11631_SHARP_, p2__11632_SHARP_) {
        return max_key.call(null, k, p1__11631_SHARP_, p2__11632_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__11633 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11633__delegate.call(this, k, x, y, more);
    };
    G__11633.cljs$lang$maxFixedArity = 3;
    G__11633.cljs$lang$applyTo = function(arglist__11634) {
      var k = cljs.core.first(arglist__11634);
      arglist__11634 = cljs.core.next(arglist__11634);
      var x = cljs.core.first(arglist__11634);
      arglist__11634 = cljs.core.next(arglist__11634);
      var y = cljs.core.first(arglist__11634);
      var more = cljs.core.rest(arglist__11634);
      return G__11633__delegate(k, x, y, more);
    };
    G__11633.cljs$core$IFn$_invoke$arity$variadic = G__11633__delegate;
    return G__11633;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__11637__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11635_SHARP_, p2__11636_SHARP_) {
        return min_key.call(null, k, p1__11635_SHARP_, p2__11636_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__11637 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11637__delegate.call(this, k, x, y, more);
    };
    G__11637.cljs$lang$maxFixedArity = 3;
    G__11637.cljs$lang$applyTo = function(arglist__11638) {
      var k = cljs.core.first(arglist__11638);
      arglist__11638 = cljs.core.next(arglist__11638);
      var x = cljs.core.first(arglist__11638);
      arglist__11638 = cljs.core.next(arglist__11638);
      var y = cljs.core.first(arglist__11638);
      var more = cljs.core.rest(arglist__11638);
      return G__11637__delegate(k, x, y, more);
    };
    G__11637.cljs$core$IFn$_invoke$arity$variadic = G__11637__delegate;
    return G__11637;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayList");
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__11639 = null;
          var G__11639__0 = function() {
            return f1.call(null);
          };
          var G__11639__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__11639__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            } else {
              return result;
            }
          };
          G__11639 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11639__0.call(this);
              case 1:
                return G__11639__1.call(this, result);
              case 2:
                return G__11639__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11639.cljs$core$IFn$_invoke$arity$0 = G__11639__0;
          G__11639.cljs$core$IFn$_invoke$arity$1 = G__11639__1;
          G__11639.cljs$core$IFn$_invoke$arity$2 = G__11639__2;
          return G__11639;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__11640 = null;
        var G__11640__0 = function() {
          return f1.call(null);
        };
        var G__11640__1 = function(result) {
          return f1.call(null, result);
        };
        var G__11640__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__11640 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11640__0.call(this);
            case 1:
              return G__11640__1.call(this, result);
            case 2:
              return G__11640__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11640.cljs$core$IFn$_invoke$arity$0 = G__11640__0;
        G__11640.cljs$core$IFn$_invoke$arity$1 = G__11640__1;
        G__11640.cljs$core$IFn$_invoke$arity$2 = G__11640__2;
        return G__11640;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__11643 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__11643, 0, null);
        var s = vec__11643;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__11644 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__11644, 0, null);
      var s = vec__11644;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__11647 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__11647, 0, null);
        var s = vec__11647;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__11648 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__11648, 0, null);
      var s = vec__11648;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__11649 = null;
          var G__11649__0 = function() {
            return f1.call(null);
          };
          var G__11649__1 = function(result) {
            return f1.call(null, result);
          };
          var G__11649__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return f1.call(null, result, input);
            } else {
              return result;
            }
          };
          G__11649 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11649__0.call(this);
              case 1:
                return G__11649__1.call(this, result);
              case 2:
                return G__11649__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11649.cljs$core$IFn$_invoke$arity$0 = G__11649__0;
          G__11649.cljs$core$IFn$_invoke$arity$1 = G__11649__1;
          G__11649.cljs$core$IFn$_invoke$arity$2 = G__11649__2;
          return G__11649;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__11651 = null;
          var G__11651__0 = function() {
            return f1.call(null);
          };
          var G__11651__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__11651__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.reset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              a.add(input);
              return f1.call(null, result, v);
            }
          };
          G__11651 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11651__0.call(this);
              case 1:
                return G__11651__1.call(this, result);
              case 2:
                return G__11651__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11651.cljs$core$IFn$_invoke$arity$0 = G__11651__0;
          G__11651.cljs$core$IFn$_invoke$arity$1 = G__11651__1;
          G__11651.cljs$core$IFn$_invoke$arity$2 = G__11651__2;
          return G__11651;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__11650_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__11650_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__11662 = null;
      var G__11662__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__11662__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__11662__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__11662__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__11662__4 = function() {
        var G__11663__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__11663 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11663__delegate.call(this, x, y, z, args);
        };
        G__11663.cljs$lang$maxFixedArity = 3;
        G__11663.cljs$lang$applyTo = function(arglist__11664) {
          var x = cljs.core.first(arglist__11664);
          arglist__11664 = cljs.core.next(arglist__11664);
          var y = cljs.core.first(arglist__11664);
          arglist__11664 = cljs.core.next(arglist__11664);
          var z = cljs.core.first(arglist__11664);
          var args = cljs.core.rest(arglist__11664);
          return G__11663__delegate(x, y, z, args);
        };
        G__11663.cljs$core$IFn$_invoke$arity$variadic = G__11663__delegate;
        return G__11663;
      }();
      G__11662 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11662__0.call(this);
          case 1:
            return G__11662__1.call(this, x);
          case 2:
            return G__11662__2.call(this, x, y);
          case 3:
            return G__11662__3.call(this, x, y, z);
          default:
            return G__11662__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11662.cljs$lang$maxFixedArity = 3;
      G__11662.cljs$lang$applyTo = G__11662__4.cljs$lang$applyTo;
      G__11662.cljs$core$IFn$_invoke$arity$0 = G__11662__0;
      G__11662.cljs$core$IFn$_invoke$arity$1 = G__11662__1;
      G__11662.cljs$core$IFn$_invoke$arity$2 = G__11662__2;
      G__11662.cljs$core$IFn$_invoke$arity$3 = G__11662__3;
      G__11662.cljs$core$IFn$_invoke$arity$variadic = G__11662__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11662;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__11665 = null;
      var G__11665__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__11665__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__11665__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__11665__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__11665__4 = function() {
        var G__11666__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__11666 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11666__delegate.call(this, x, y, z, args);
        };
        G__11666.cljs$lang$maxFixedArity = 3;
        G__11666.cljs$lang$applyTo = function(arglist__11667) {
          var x = cljs.core.first(arglist__11667);
          arglist__11667 = cljs.core.next(arglist__11667);
          var y = cljs.core.first(arglist__11667);
          arglist__11667 = cljs.core.next(arglist__11667);
          var z = cljs.core.first(arglist__11667);
          var args = cljs.core.rest(arglist__11667);
          return G__11666__delegate(x, y, z, args);
        };
        G__11666.cljs$core$IFn$_invoke$arity$variadic = G__11666__delegate;
        return G__11666;
      }();
      G__11665 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11665__0.call(this);
          case 1:
            return G__11665__1.call(this, x);
          case 2:
            return G__11665__2.call(this, x, y);
          case 3:
            return G__11665__3.call(this, x, y, z);
          default:
            return G__11665__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11665.cljs$lang$maxFixedArity = 3;
      G__11665.cljs$lang$applyTo = G__11665__4.cljs$lang$applyTo;
      G__11665.cljs$core$IFn$_invoke$arity$0 = G__11665__0;
      G__11665.cljs$core$IFn$_invoke$arity$1 = G__11665__1;
      G__11665.cljs$core$IFn$_invoke$arity$2 = G__11665__2;
      G__11665.cljs$core$IFn$_invoke$arity$3 = G__11665__3;
      G__11665.cljs$core$IFn$_invoke$arity$variadic = G__11665__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11665;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__11668 = null;
      var G__11668__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__11668__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__11668__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__11668__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__11668__4 = function() {
        var G__11669__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__11669 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11669__delegate.call(this, x, y, z, args);
        };
        G__11669.cljs$lang$maxFixedArity = 3;
        G__11669.cljs$lang$applyTo = function(arglist__11670) {
          var x = cljs.core.first(arglist__11670);
          arglist__11670 = cljs.core.next(arglist__11670);
          var y = cljs.core.first(arglist__11670);
          arglist__11670 = cljs.core.next(arglist__11670);
          var z = cljs.core.first(arglist__11670);
          var args = cljs.core.rest(arglist__11670);
          return G__11669__delegate(x, y, z, args);
        };
        G__11669.cljs$core$IFn$_invoke$arity$variadic = G__11669__delegate;
        return G__11669;
      }();
      G__11668 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11668__0.call(this);
          case 1:
            return G__11668__1.call(this, x);
          case 2:
            return G__11668__2.call(this, x, y);
          case 3:
            return G__11668__3.call(this, x, y, z);
          default:
            return G__11668__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11668.cljs$lang$maxFixedArity = 3;
      G__11668.cljs$lang$applyTo = G__11668__4.cljs$lang$applyTo;
      G__11668.cljs$core$IFn$_invoke$arity$0 = G__11668__0;
      G__11668.cljs$core$IFn$_invoke$arity$1 = G__11668__1;
      G__11668.cljs$core$IFn$_invoke$arity$2 = G__11668__2;
      G__11668.cljs$core$IFn$_invoke$arity$3 = G__11668__3;
      G__11668.cljs$core$IFn$_invoke$arity$variadic = G__11668__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11668;
    }();
  };
  var juxt__4 = function() {
    var G__11671__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__11672 = null;
          var G__11672__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__11652_SHARP_, p2__11653_SHARP_) {
                return cljs.core.conj.call(null, p1__11652_SHARP_, p2__11653_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__11672__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__11654_SHARP_, p2__11655_SHARP_) {
                return cljs.core.conj.call(null, p1__11654_SHARP_, p2__11655_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__11672__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__11656_SHARP_, p2__11657_SHARP_) {
                return cljs.core.conj.call(null, p1__11656_SHARP_, p2__11657_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__11672__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__11658_SHARP_, p2__11659_SHARP_) {
                return cljs.core.conj.call(null, p1__11658_SHARP_, p2__11659_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__11672__4 = function() {
            var G__11673__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__11660_SHARP_, p2__11661_SHARP_) {
                  return cljs.core.conj.call(null, p1__11660_SHARP_, cljs.core.apply.call(null, p2__11661_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__11673 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__11673__delegate.call(this, x, y, z, args);
            };
            G__11673.cljs$lang$maxFixedArity = 3;
            G__11673.cljs$lang$applyTo = function(arglist__11674) {
              var x = cljs.core.first(arglist__11674);
              arglist__11674 = cljs.core.next(arglist__11674);
              var y = cljs.core.first(arglist__11674);
              arglist__11674 = cljs.core.next(arglist__11674);
              var z = cljs.core.first(arglist__11674);
              var args = cljs.core.rest(arglist__11674);
              return G__11673__delegate(x, y, z, args);
            };
            G__11673.cljs$core$IFn$_invoke$arity$variadic = G__11673__delegate;
            return G__11673;
          }();
          G__11672 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__11672__0.call(this);
              case 1:
                return G__11672__1.call(this, x);
              case 2:
                return G__11672__2.call(this, x, y);
              case 3:
                return G__11672__3.call(this, x, y, z);
              default:
                return G__11672__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11672.cljs$lang$maxFixedArity = 3;
          G__11672.cljs$lang$applyTo = G__11672__4.cljs$lang$applyTo;
          G__11672.cljs$core$IFn$_invoke$arity$0 = G__11672__0;
          G__11672.cljs$core$IFn$_invoke$arity$1 = G__11672__1;
          G__11672.cljs$core$IFn$_invoke$arity$2 = G__11672__2;
          G__11672.cljs$core$IFn$_invoke$arity$3 = G__11672__3;
          G__11672.cljs$core$IFn$_invoke$arity$variadic = G__11672__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__11672;
        }();
      }(fs__$1);
    };
    var G__11671 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11671__delegate.call(this, f, g, h, fs);
    };
    G__11671.cljs$lang$maxFixedArity = 3;
    G__11671.cljs$lang$applyTo = function(arglist__11675) {
      var f = cljs.core.first(arglist__11675);
      arglist__11675 = cljs.core.next(arglist__11675);
      var g = cljs.core.first(arglist__11675);
      arglist__11675 = cljs.core.next(arglist__11675);
      var h = cljs.core.first(arglist__11675);
      var fs = cljs.core.rest(arglist__11675);
      return G__11671__delegate(f, g, h, fs);
    };
    G__11671.cljs$core$IFn$_invoke$arity$variadic = G__11671__delegate;
    return G__11671;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__11676 = cljs.core.next.call(null, coll);
        coll = G__11676;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__11677 = n - 1;
        var G__11678 = cljs.core.next.call(null, coll);
        n = G__11677;
        coll = G__11678;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__11680 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__11680, 0, null);
  var flags = cljs.core.nth.call(null, vec__11680, 1, null);
  var pattern = cljs.core.nth.call(null, vec__11680, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_11682 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_11683__$1 = cljs.core.next.call(null, coll);
      var n_11684 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_11683__$1 && (n_11684 == null || !(n_11684 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_11683__$1), writer, opts);
          var G__11685 = cljs.core.next.call(null, coll_11683__$1);
          var G__11686 = n_11684 - 1;
          coll_11683__$1 = G__11685;
          n_11684 = G__11686;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_11683__$1) && n_11684 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_11682;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__11691 = cljs.core.seq.call(null, ss);
    var chunk__11692 = null;
    var count__11693 = 0;
    var i__11694 = 0;
    while (true) {
      if (i__11694 < count__11693) {
        var s = cljs.core._nth.call(null, chunk__11692, i__11694);
        cljs.core._write.call(null, writer, s);
        var G__11695 = seq__11691;
        var G__11696 = chunk__11692;
        var G__11697 = count__11693;
        var G__11698 = i__11694 + 1;
        seq__11691 = G__11695;
        chunk__11692 = G__11696;
        count__11693 = G__11697;
        i__11694 = G__11698;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__11691);
        if (temp__4126__auto__) {
          var seq__11691__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__11691__$1)) {
            var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__11691__$1);
            var G__11699 = cljs.core.chunk_rest.call(null, seq__11691__$1);
            var G__11700 = c__4309__auto__;
            var G__11701 = cljs.core.count.call(null, c__4309__auto__);
            var G__11702 = 0;
            seq__11691 = G__11699;
            chunk__11692 = G__11700;
            count__11693 = G__11701;
            i__11694 = G__11702;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__11691__$1);
            cljs.core._write.call(null, writer, s);
            var G__11703 = cljs.core.next.call(null, seq__11691__$1);
            var G__11704 = null;
            var G__11705 = 0;
            var G__11706 = 0;
            seq__11691 = G__11703;
            chunk__11692 = G__11704;
            count__11693 = G__11705;
            i__11694 = G__11706;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__11707) {
    var writer = cljs.core.first(arglist__11707);
    var ss = cljs.core.rest(arglist__11707);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj11709 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj11709;
}();
cljs.core.quote_string = function quote_string(s) {
  return'"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })) + '"';
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3541__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3541__auto__)) {
          var and__3541__auto____$1 = function() {
            var G__11715 = obj;
            if (G__11715) {
              var bit__4203__auto__ = G__11715.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4203__auto__ || G__11715.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__11715.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__11715);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__11715);
            }
          }();
          if (and__3541__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3541__auto____$1;
          }
        } else {
          return and__3541__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__11716 = obj;
            if (G__11716) {
              var bit__4196__auto__ = G__11716.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4196__auto__ || G__11716.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__11718 = "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
                              ns = G__11718;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__11717 = obj;
                            if (G__11717) {
                              var bit__4203__auto__ = G__11717.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4203__auto__ || G__11717.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__11717.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__11717);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__11717);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__11723 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__11724 = null;
  var count__11725 = 0;
  var i__11726 = 0;
  while (true) {
    if (i__11726 < count__11725) {
      var obj = cljs.core._nth.call(null, chunk__11724, i__11726);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__11727 = seq__11723;
      var G__11728 = chunk__11724;
      var G__11729 = count__11725;
      var G__11730 = i__11726 + 1;
      seq__11723 = G__11727;
      chunk__11724 = G__11728;
      count__11725 = G__11729;
      i__11726 = G__11730;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11723);
      if (temp__4126__auto__) {
        var seq__11723__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11723__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__11723__$1);
          var G__11731 = cljs.core.chunk_rest.call(null, seq__11723__$1);
          var G__11732 = c__4309__auto__;
          var G__11733 = cljs.core.count.call(null, c__4309__auto__);
          var G__11734 = 0;
          seq__11723 = G__11731;
          chunk__11724 = G__11732;
          count__11725 = G__11733;
          i__11726 = G__11734;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__11723__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__11735 = cljs.core.next.call(null, seq__11723__$1);
          var G__11736 = null;
          var G__11737 = 0;
          var G__11738 = 0;
          seq__11723 = G__11735;
          chunk__11724 = G__11736;
          count__11725 = G__11737;
          i__11726 = G__11738;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts.call(null, objs, opts));
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__11739) {
    var objs = cljs.core.seq(arglist__11739);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__11740) {
    var objs = cljs.core.seq(arglist__11740);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__11741) {
    var objs = cljs.core.seq(arglist__11741);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__11742) {
    var objs = cljs.core.seq(arglist__11742);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__11743) {
    var objs = cljs.core.seq(arglist__11743);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__11744) {
    var objs = cljs.core.seq(arglist__11744);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__11745) {
    var objs = cljs.core.seq(arglist__11745);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__11746) {
    var objs = cljs.core.seq(arglist__11746);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__11747) {
    var iref = cljs.core.first(arglist__11747);
    arglist__11747 = cljs.core.next(arglist__11747);
    var f = cljs.core.first(arglist__11747);
    var args = cljs.core.rest(arglist__11747);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc)));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(f1) {
  return function(p1__11748_SHARP_, p2__11749_SHARP_) {
    var ret = f1.call(null, p1__11748_SHARP_, p2__11749_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.flatmap = function() {
  var flatmap = null;
  var flatmap__1 = function(f) {
    return function(f1) {
      return function() {
        var G__11750 = null;
        var G__11750__0 = function() {
          return f1.call(null);
        };
        var G__11750__1 = function(result) {
          return f1.call(null, result);
        };
        var G__11750__2 = function(result, input) {
          return cljs.core.reduce.call(null, cljs.core.preserving_reduced.call(null, f1), result, f.call(null, input));
        };
        G__11750 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11750__0.call(this);
            case 1:
              return G__11750__1.call(this, result);
            case 2:
              return G__11750__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11750.cljs$core$IFn$_invoke$arity$0 = G__11750__0;
        G__11750.cljs$core$IFn$_invoke$arity$1 = G__11750__1;
        G__11750.cljs$core$IFn$_invoke$arity$2 = G__11750__2;
        return G__11750;
      }();
    };
  };
  var flatmap__2 = function(f, coll) {
    return cljs.core.sequence.call(null, flatmap.call(null, f), coll);
  };
  flatmap = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return flatmap__1.call(this, f);
      case 2:
        return flatmap__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  flatmap.cljs$core$IFn$_invoke$arity$1 = flatmap__1;
  flatmap.cljs$core$IFn$_invoke$arity$2 = flatmap__2;
  return flatmap;
}();
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(f1) {
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__11751 = null;
          var G__11751__0 = function() {
            return f1.call(null);
          };
          var G__11751__1 = function(result) {
            return f1.call(null, result);
          };
          var G__11751__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.reset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__11751 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11751__0.call(this);
              case 1:
                return G__11751__1.call(this, result);
              case 2:
                return G__11751__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11751.cljs$core$IFn$_invoke$arity$0 = G__11751__0;
          G__11751.cljs$core$IFn$_invoke$arity$1 = G__11751__1;
          G__11751.cljs$core$IFn$_invoke$arity$2 = G__11751__2;
          return G__11751;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Iteration = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Iteration.cljs$lang$type = true;
cljs.core.Iteration.cljs$lang$ctorStr = "cljs.core/Iteration";
cljs.core.Iteration.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Iteration");
};
cljs.core.Iteration.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Iteration.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Iteration.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.__GT_Iteration = function __GT_Iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.iteration = function iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__11753_SHARP_, p2__11752_SHARP_) {
    return proc.call(null, p2__11752_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj11755 = {};
  return obj11755;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__11757 = k;
    if (G__11757) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__11757.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__11757.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11757);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11757);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__11771 = x;
      if (G__11771) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto__ = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return G__11771.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__11771.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11771);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11771);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj11773 = {};
              return obj11773;
            }();
            var seq__11774_11784 = cljs.core.seq.call(null, x);
            var chunk__11775_11785 = null;
            var count__11776_11786 = 0;
            var i__11777_11787 = 0;
            while (true) {
              if (i__11777_11787 < count__11776_11786) {
                var vec__11778_11788 = cljs.core._nth.call(null, chunk__11775_11785, i__11777_11787);
                var k_11789 = cljs.core.nth.call(null, vec__11778_11788, 0, null);
                var v_11790 = cljs.core.nth.call(null, vec__11778_11788, 1, null);
                m[cljs.core.key__GT_js.call(null, k_11789)] = clj__GT_js.call(null, v_11790);
                var G__11791 = seq__11774_11784;
                var G__11792 = chunk__11775_11785;
                var G__11793 = count__11776_11786;
                var G__11794 = i__11777_11787 + 1;
                seq__11774_11784 = G__11791;
                chunk__11775_11785 = G__11792;
                count__11776_11786 = G__11793;
                i__11777_11787 = G__11794;
                continue;
              } else {
                var temp__4126__auto___11795 = cljs.core.seq.call(null, seq__11774_11784);
                if (temp__4126__auto___11795) {
                  var seq__11774_11796__$1 = temp__4126__auto___11795;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__11774_11796__$1)) {
                    var c__4309__auto___11797 = cljs.core.chunk_first.call(null, seq__11774_11796__$1);
                    var G__11798 = cljs.core.chunk_rest.call(null, seq__11774_11796__$1);
                    var G__11799 = c__4309__auto___11797;
                    var G__11800 = cljs.core.count.call(null, c__4309__auto___11797);
                    var G__11801 = 0;
                    seq__11774_11784 = G__11798;
                    chunk__11775_11785 = G__11799;
                    count__11776_11786 = G__11800;
                    i__11777_11787 = G__11801;
                    continue;
                  } else {
                    var vec__11779_11802 = cljs.core.first.call(null, seq__11774_11796__$1);
                    var k_11803 = cljs.core.nth.call(null, vec__11779_11802, 0, null);
                    var v_11804 = cljs.core.nth.call(null, vec__11779_11802, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_11803)] = clj__GT_js.call(null, v_11804);
                    var G__11805 = cljs.core.next.call(null, seq__11774_11796__$1);
                    var G__11806 = null;
                    var G__11807 = 0;
                    var G__11808 = 0;
                    seq__11774_11784 = G__11805;
                    chunk__11775_11785 = G__11806;
                    count__11776_11786 = G__11807;
                    i__11777_11787 = G__11808;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__11780_11809 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__11781_11810 = null;
              var count__11782_11811 = 0;
              var i__11783_11812 = 0;
              while (true) {
                if (i__11783_11812 < count__11782_11811) {
                  var x_11813__$1 = cljs.core._nth.call(null, chunk__11781_11810, i__11783_11812);
                  arr.push(x_11813__$1);
                  var G__11814 = seq__11780_11809;
                  var G__11815 = chunk__11781_11810;
                  var G__11816 = count__11782_11811;
                  var G__11817 = i__11783_11812 + 1;
                  seq__11780_11809 = G__11814;
                  chunk__11781_11810 = G__11815;
                  count__11782_11811 = G__11816;
                  i__11783_11812 = G__11817;
                  continue;
                } else {
                  var temp__4126__auto___11818 = cljs.core.seq.call(null, seq__11780_11809);
                  if (temp__4126__auto___11818) {
                    var seq__11780_11819__$1 = temp__4126__auto___11818;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__11780_11819__$1)) {
                      var c__4309__auto___11820 = cljs.core.chunk_first.call(null, seq__11780_11819__$1);
                      var G__11821 = cljs.core.chunk_rest.call(null, seq__11780_11819__$1);
                      var G__11822 = c__4309__auto___11820;
                      var G__11823 = cljs.core.count.call(null, c__4309__auto___11820);
                      var G__11824 = 0;
                      seq__11780_11809 = G__11821;
                      chunk__11781_11810 = G__11822;
                      count__11782_11811 = G__11823;
                      i__11783_11812 = G__11824;
                      continue;
                    } else {
                      var x_11825__$1 = cljs.core.first.call(null, seq__11780_11819__$1);
                      arr.push(x_11825__$1);
                      var G__11826 = cljs.core.next.call(null, seq__11780_11819__$1);
                      var G__11827 = null;
                      var G__11828 = 0;
                      var G__11829 = 0;
                      seq__11780_11809 = G__11826;
                      chunk__11781_11810 = G__11827;
                      count__11782_11811 = G__11828;
                      i__11783_11812 = G__11829;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj11831 = {};
  return obj11831;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__11852__delegate = function(x, opts) {
      if (function() {
        var G__11842 = x;
        if (G__11842) {
          var bit__4203__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3553__auto__ = bit__4203__auto__;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return G__11842.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__11842.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__11842);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__11842);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__11843 = opts;
          var map__11843__$1 = cljs.core.seq_QMARK_.call(null, map__11843) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11843) : map__11843;
          var keywordize_keys = cljs.core.get.call(null, map__11843__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__11843, map__11843__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4278__auto__ = function(map__11843, map__11843__$1, keywordize_keys, keyfn) {
                          return function iter__11848(s__11849) {
                            return new cljs.core.LazySeq(null, function(map__11843, map__11843__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__11849__$1 = s__11849;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__11849__$1);
                                  if (temp__4126__auto__) {
                                    var s__11849__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__11849__$2)) {
                                      var c__4276__auto__ = cljs.core.chunk_first.call(null, s__11849__$2);
                                      var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                      var b__11851 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                      if (function() {
                                        var i__11850 = 0;
                                        while (true) {
                                          if (i__11850 < size__4277__auto__) {
                                            var k = cljs.core._nth.call(null, c__4276__auto__, i__11850);
                                            cljs.core.chunk_append.call(null, b__11851, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__11853 = i__11850 + 1;
                                            i__11850 = G__11853;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11851), iter__11848.call(null, cljs.core.chunk_rest.call(null, s__11849__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11851), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__11849__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__11848.call(null, cljs.core.rest.call(null, s__11849__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__11843, map__11843__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__11843, map__11843__$1, keywordize_keys, keyfn);
                        return iter__4278__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      return x__$1;
                    }
                  }
                }
              }
            };
          }(map__11843, map__11843__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__11852 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11852__delegate.call(this, x, opts);
    };
    G__11852.cljs$lang$maxFixedArity = 1;
    G__11852.cljs$lang$applyTo = function(arglist__11854) {
      var x = cljs.core.first(arglist__11854);
      var opts = cljs.core.rest(arglist__11854);
      return G__11852__delegate(x, opts);
    };
    G__11852.cljs$core$IFn$_invoke$arity$variadic = G__11852__delegate;
    return G__11852;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__11855__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__11855 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__11855__delegate.call(this, args);
      };
      G__11855.cljs$lang$maxFixedArity = 0;
      G__11855.cljs$lang$applyTo = function(arglist__11856) {
        var args = cljs.core.seq(arglist__11856);
        return G__11855__delegate(args);
      };
      G__11855.cljs$core$IFn$_invoke$arity$variadic = G__11855__delegate;
      return G__11855;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__11857 = ret;
        f = G__11857;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__11858__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__11858 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11858__delegate.call(this, f, args);
    };
    G__11858.cljs$lang$maxFixedArity = 1;
    G__11858.cljs$lang$applyTo = function(arglist__11859) {
      var f = cljs.core.first(arglist__11859);
      var args = cljs.core.rest(arglist__11859);
      return G__11858__delegate(f, args);
    };
    G__11858.cljs$core$IFn$_invoke$arity$variadic = G__11858__delegate;
    return G__11858;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__11860) {
    var f = cljs.core.first(arglist__11860);
    var args = cljs.core.rest(arglist__11860);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3553__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3553__auto__) {
      return or__3553__auto__;
    } else {
      var or__3553__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3553__auto____$1) {
        return or__3553__auto____$1;
      } else {
        var and__3541__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3541__auto__) {
          var and__3541__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3541__auto____$1) {
            var and__3541__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3541__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__11861 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__11862 = i + 1;
                  ret = G__11861;
                  i = G__11862;
                  continue;
                }
                break;
              }
            } else {
              return and__3541__auto____$2;
            }
          } else {
            return and__3541__auto____$1;
          }
        } else {
          return and__3541__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3553__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "already has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "as ancestor");
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error("Cyclic derivation:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "as ancestor");
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__11863_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11863_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11863_SHARP_), cljs.core.second.call(null, p1__11863_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__11864_SHARP_, p2__11865_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__11864_SHARP_, p2__11865_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3553__auto__ = cljs.core.truth_(function() {
    var and__3541__auto__ = xprefs;
    if (cljs.core.truth_(and__3541__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3541__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    var or__3553__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__11866 = cljs.core.rest.call(null, ps);
          ps = G__11866;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3553__auto____$1)) {
      return or__3553__auto____$1;
    } else {
      var or__3553__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__11867 = cljs.core.rest.call(null, ps);
            ps = G__11867;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3553__auto____$2)) {
        return or__3553__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3553__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__11870) {
    var vec__11871 = p__11870;
    var k = cljs.core.nth.call(null, vec__11871, 0, null);
    var _ = cljs.core.nth.call(null, vec__11871, 1, null);
    var e = vec__11871;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3553__auto__ = be == null;
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error("Multiple methods in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' match dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val) + " -\x3e " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(k) + " and " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, be2)) + ", and neither is preferred");
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj11873 = {};
  return obj11873;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._reset[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._reset["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._add_method[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._add_method["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._remove_method[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._remove_method["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._prefer_method[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._get_method[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._get_method["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._methods[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._methods["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._prefers[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._prefers["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error("No method in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' for dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error("Preference conflict in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + "': " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y) + " is already preferred to " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__11875 = null;
  var G__11875__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__11875__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__11875__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__11875__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__11875__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__11875__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__11875__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__11875__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__11875__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__11875__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__11875__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__11875__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__11875__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__11875__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__11875__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__11875__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__11875__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__11875__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__11875__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__11875__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__11875__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__11875 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 2:
        return G__11875__2.call(this, self__, a);
      case 3:
        return G__11875__3.call(this, self__, a, b);
      case 4:
        return G__11875__4.call(this, self__, a, b, c);
      case 5:
        return G__11875__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11875__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11875__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11875__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11875__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11875__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11875__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11875__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11875__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11875__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11875__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11875__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11875__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11875__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11875__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11875__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11875__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11875__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11875.cljs$core$IFn$_invoke$arity$2 = G__11875__2;
  G__11875.cljs$core$IFn$_invoke$arity$3 = G__11875__3;
  G__11875.cljs$core$IFn$_invoke$arity$4 = G__11875__4;
  G__11875.cljs$core$IFn$_invoke$arity$5 = G__11875__5;
  G__11875.cljs$core$IFn$_invoke$arity$6 = G__11875__6;
  G__11875.cljs$core$IFn$_invoke$arity$7 = G__11875__7;
  G__11875.cljs$core$IFn$_invoke$arity$8 = G__11875__8;
  G__11875.cljs$core$IFn$_invoke$arity$9 = G__11875__9;
  G__11875.cljs$core$IFn$_invoke$arity$10 = G__11875__10;
  G__11875.cljs$core$IFn$_invoke$arity$11 = G__11875__11;
  G__11875.cljs$core$IFn$_invoke$arity$12 = G__11875__12;
  G__11875.cljs$core$IFn$_invoke$arity$13 = G__11875__13;
  G__11875.cljs$core$IFn$_invoke$arity$14 = G__11875__14;
  G__11875.cljs$core$IFn$_invoke$arity$15 = G__11875__15;
  G__11875.cljs$core$IFn$_invoke$arity$16 = G__11875__16;
  G__11875.cljs$core$IFn$_invoke$arity$17 = G__11875__17;
  G__11875.cljs$core$IFn$_invoke$arity$18 = G__11875__18;
  G__11875.cljs$core$IFn$_invoke$arity$19 = G__11875__19;
  G__11875.cljs$core$IFn$_invoke$arity$20 = G__11875__20;
  G__11875.cljs$core$IFn$_invoke$arity$21 = G__11875__21;
  G__11875.cljs$core$IFn$_invoke$arity$22 = G__11875__22;
  return G__11875;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args11874) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11874)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, '#uuid "' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid) + '"');
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4123__auto__, writer__4124__auto__, opts__4125__auto__) {
  return cljs.core._write.call(null, writer__4124__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
goog.provide("t3tr0s_slides.syntax_highlight");
goog.require("cljs.core");
t3tr0s_slides.syntax_highlight.core = function() {
  var core__delegate = function(s) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.syntax-core-4c264", "span.syntax-core-4c264", 422234275), s], null);
  };
  var core = function(var_args) {
    var s = null;
    if (arguments.length > 0) {
      s = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return core__delegate.call(this, s);
  };
  core.cljs$lang$maxFixedArity = 0;
  core.cljs$lang$applyTo = function(arglist__16495) {
    var s = cljs.core.seq(arglist__16495);
    return core__delegate(s);
  };
  core.cljs$core$IFn$_invoke$arity$variadic = core__delegate;
  return core;
}();
t3tr0s_slides.syntax_highlight.kw = function() {
  var kw__delegate = function(s) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.syntax-kw-18cc2", "span.syntax-kw-18cc2", 511214197), s], null);
  };
  var kw = function(var_args) {
    var s = null;
    if (arguments.length > 0) {
      s = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return kw__delegate.call(this, s);
  };
  kw.cljs$lang$maxFixedArity = 0;
  kw.cljs$lang$applyTo = function(arglist__16496) {
    var s = cljs.core.seq(arglist__16496);
    return kw__delegate(s);
  };
  kw.cljs$core$IFn$_invoke$arity$variadic = kw__delegate;
  return kw;
}();
t3tr0s_slides.syntax_highlight.lit = function() {
  var lit__delegate = function(s) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.syntax-lit-60e83", "span.syntax-lit-60e83", 413499826), s], null);
  };
  var lit = function(var_args) {
    var s = null;
    if (arguments.length > 0) {
      s = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return lit__delegate.call(this, s);
  };
  lit.cljs$lang$maxFixedArity = 0;
  lit.cljs$lang$applyTo = function(arglist__16497) {
    var s = cljs.core.seq(arglist__16497);
    return lit__delegate(s);
  };
  lit.cljs$core$IFn$_invoke$arity$variadic = lit__delegate;
  return lit;
}();
t3tr0s_slides.syntax_highlight.cmt = function() {
  var cmt__delegate = function(s) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.syntax-cmt-d159d", "span.syntax-cmt-d159d", -80604452), s], null);
  };
  var cmt = function(var_args) {
    var s = null;
    if (arguments.length > 0) {
      s = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cmt__delegate.call(this, s);
  };
  cmt.cljs$lang$maxFixedArity = 0;
  cmt.cljs$lang$applyTo = function(arglist__16498) {
    var s = cljs.core.seq(arglist__16498);
    return cmt__delegate(s);
  };
  cmt.cljs$core$IFn$_invoke$arity$variadic = cmt__delegate;
  return cmt;
}();
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw "Invalid match arg: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(match);
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)));
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__10421 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__10421;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__10425 = cljs.core._EQ_;
    var expr__10426 = limit;
    if (cljs.core.truth_(pred__10425.call(null, 1, expr__10426))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__10425.call(null, 2, expr__10426))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(re), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)).split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__10428 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__10429 = limit__$1 - 1;
            var G__10430 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__10428;
            limit__$1 = G__10429;
            parts = G__10430;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__10431 = index - 1;
        index = G__10431;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___10432 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___10432)) {
        var replacement_10433 = temp__4124__auto___10432;
        buffer.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement_10433));
      } else {
        buffer.append(ch);
      }
      var G__10434 = index + 1;
      index = G__10434;
      continue;
    }
    break;
  }
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("schema.utils");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
goog.require("goog.string.format");
schema.utils.assoc_when = function() {
  var assoc_when__delegate = function(m, kvs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null))))));
    }
    return cljs.core.into.call(null, function() {
      var or__3553__auto__ = m;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), function() {
      var iter__4278__auto__ = function iter__10152(s__10153) {
        return new cljs.core.LazySeq(null, function() {
          var s__10153__$1 = s__10153;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__10153__$1);
            if (temp__4126__auto__) {
              var s__10153__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__10153__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__10153__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__10155 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__10154 = 0;
                  while (true) {
                    if (i__10154 < size__4277__auto__) {
                      var vec__10158 = cljs.core._nth.call(null, c__4276__auto__, i__10154);
                      var k = cljs.core.nth.call(null, vec__10158, 0, null);
                      var v = cljs.core.nth.call(null, vec__10158, 1, null);
                      if (cljs.core.truth_(v)) {
                        cljs.core.chunk_append.call(null, b__10155, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                        var G__10160 = i__10154 + 1;
                        i__10154 = G__10160;
                        continue;
                      } else {
                        var G__10161 = i__10154 + 1;
                        i__10154 = G__10161;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10155), iter__10152.call(null, cljs.core.chunk_rest.call(null, s__10153__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10155), null);
                }
              } else {
                var vec__10159 = cljs.core.first.call(null, s__10153__$2);
                var k = cljs.core.nth.call(null, vec__10159, 0, null);
                var v = cljs.core.nth.call(null, vec__10159, 1, null);
                if (cljs.core.truth_(v)) {
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__10152.call(null, cljs.core.rest.call(null, s__10153__$2)));
                } else {
                  var G__10162 = cljs.core.rest.call(null, s__10153__$2);
                  s__10153__$1 = G__10162;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4278__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
    }());
  };
  var assoc_when = function(m, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return assoc_when__delegate.call(this, m, kvs);
  };
  assoc_when.cljs$lang$maxFixedArity = 1;
  assoc_when.cljs$lang$applyTo = function(arglist__10163) {
    var m = cljs.core.first(arglist__10163);
    var kvs = cljs.core.rest(arglist__10163);
    return assoc_when__delegate(m, kvs);
  };
  assoc_when.cljs$core$IFn$_invoke$arity$variadic = assoc_when__delegate;
  return assoc_when;
}();
schema.utils.type_of = function type_of(x) {
  return typeof x;
};
schema.utils.fn_schema_bearer = function fn_schema_bearer(f) {
  return f;
};
schema.utils.format_STAR_ = function() {
  var format_STAR___delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args);
  };
  var format_STAR_ = function(fmt, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return format_STAR___delegate.call(this, fmt, args);
  };
  format_STAR_.cljs$lang$maxFixedArity = 1;
  format_STAR_.cljs$lang$applyTo = function(arglist__10164) {
    var fmt = cljs.core.first(arglist__10164);
    var args = cljs.core.rest(arglist__10164);
    return format_STAR___delegate(fmt, args);
  };
  format_STAR_.cljs$core$IFn$_invoke$arity$variadic = format_STAR___delegate;
  return format_STAR_;
}();
schema.utils.value_name = function value_name(value) {
  var t = schema.utils.type_of.call(null, value);
  if (cljs.core.count.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(value)) < 20) {
    return value;
  } else {
    return cljs.core.symbol.call(null, "a-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(t));
  }
};
schema.utils.ValidationError = function(schema, value, expectation_delay, fail_explanation) {
  this.schema = schema;
  this.value = value;
  this.expectation_delay = expectation_delay;
  this.fail_explanation = fail_explanation;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
};
schema.utils.ValidationError.cljs$lang$type = true;
schema.utils.ValidationError.cljs$lang$ctorStr = "schema.utils/ValidationError";
schema.utils.ValidationError.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "schema.utils/ValidationError");
};
schema.utils.ValidationError.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._pr_writer.call(null, schema.utils.validation_error_explain.call(null, this$__$1), writer, opts);
};
schema.utils.__GT_ValidationError = function __GT_ValidationError(schema__$1, value, expectation_delay, fail_explanation) {
  return new schema.utils.ValidationError(schema__$1, value, expectation_delay, fail_explanation);
};
schema.utils.validation_error_explain = function validation_error_explain(err) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, err.expectation_delay)), function() {
    var or__3553__auto__ = err.fail_explanation;
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return new cljs.core.Symbol(null, "not", "not", 1044554643, null);
    }
  }());
};
schema.utils.__GT_ValidationError = function __GT_ValidationError(schema__$1, value, expectation_delay, fail_explanation) {
  return new schema.utils.ValidationError(schema__$1, value, expectation_delay, fail_explanation);
};
schema.utils.NamedError = function(name, error) {
  this.name = name;
  this.error = error;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
};
schema.utils.NamedError.cljs$lang$type = true;
schema.utils.NamedError.cljs$lang$ctorStr = "schema.utils/NamedError";
schema.utils.NamedError.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "schema.utils/NamedError");
};
schema.utils.NamedError.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._pr_writer.call(null, schema.utils.named_error_explain.call(null, this$__$1), writer, opts);
};
schema.utils.__GT_NamedError = function __GT_NamedError(name, error) {
  return new schema.utils.NamedError(name, error);
};
schema.utils.named_error_explain = function named_error_explain(err) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, err.name), err.error), new cljs.core.Symbol(null, "named", "named", 1218138048, null));
};
schema.utils.__GT_NamedError = function __GT_NamedError(name, error) {
  return new schema.utils.NamedError(name, error);
};
schema.utils.ErrorContainer = function(error, __meta, __extmap) {
  this.error = error;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.utils.ErrorContainer.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10166, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10168 = k10166 instanceof cljs.core.Keyword ? k10166.fqn : null;
  switch(G__10168) {
    case "error":
      return self__.error;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10166, else__4142__auto__);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.utils.ErrorContainer{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), self__.error], null)], null), self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.utils.ErrorContainer.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.utils.ErrorContainer(self__.error, self__.__meta, self__.__extmap, self__.__hash);
};
schema.utils.ErrorContainer.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.utils.ErrorContainer.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "error", "error", -978969032), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.utils.ErrorContainer(self__.error, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10165) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10169 = cljs.core.keyword_identical_QMARK_;
  var expr__10170 = k__4147__auto__;
  if (cljs.core.truth_(pred__10169.call(null, new cljs.core.Keyword(null, "error", "error", -978969032), expr__10170))) {
    return new schema.utils.ErrorContainer(G__10165, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.utils.ErrorContainer(self__.error, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10165), null);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), self__.error], null)], null), self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10165) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.utils.ErrorContainer(self__.error, G__10165, self__.__extmap, self__.__hash);
};
schema.utils.ErrorContainer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.utils.ErrorContainer.cljs$lang$type = true;
schema.utils.ErrorContainer.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.utils/ErrorContainer");
};
schema.utils.ErrorContainer.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.utils/ErrorContainer");
};
schema.utils.__GT_ErrorContainer = function __GT_ErrorContainer(error) {
  return new schema.utils.ErrorContainer(error);
};
schema.utils.map__GT_ErrorContainer = function map__GT_ErrorContainer(G__10167) {
  return new schema.utils.ErrorContainer((new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(G__10167), null, cljs.core.dissoc.call(null, G__10167, new cljs.core.Keyword(null, "error", "error", -978969032)));
};
schema.utils.error = function error(x) {
  if (cljs.core.truth_(x)) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "x", "x", -555367584, null))));
  }
  return schema.utils.__GT_ErrorContainer.call(null, x);
};
schema.utils.error_QMARK_ = function error_QMARK_(x) {
  return x instanceof schema.utils.ErrorContainer;
};
schema.utils.error_val = function error_val(x) {
  if (schema.utils.error_QMARK_.call(null, x)) {
    return x.error;
  } else {
    return null;
  }
};
schema.utils.wrap_error_name = function wrap_error_name(name, maybe_error) {
  var temp__4124__auto__ = schema.utils.error_val.call(null, maybe_error);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var e = temp__4124__auto__;
    return schema.utils.error.call(null, schema.utils.__GT_NamedError.call(null, name, e));
  } else {
    return maybe_error;
  }
};
schema.utils.result_builder = function result_builder(lift_to_error) {
  return function conjer(m, e) {
    var temp__4124__auto__ = schema.utils.error_val.call(null, e);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var err = temp__4124__auto__;
      return schema.utils.error.call(null, cljs.core.conj.call(null, function() {
        var or__3553__auto__ = schema.utils.error_val.call(null, m);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return lift_to_error.call(null, m);
        }
      }(), err));
    } else {
      var temp__4124__auto____$1 = schema.utils.error_val.call(null, m);
      if (cljs.core.truth_(temp__4124__auto____$1)) {
        var merr = temp__4124__auto____$1;
        return schema.utils.error.call(null, cljs.core.conj.call(null, merr, null));
      } else {
        return cljs.core.conj.call(null, m, e);
      }
    }
  };
};
schema.utils.declare_class_schema_BANG_ = function declare_class_schema_BANG_(klass, schema__$1) {
  return klass["schema$utils$schema"] = schema__$1;
};
schema.utils.class_schema = function class_schema(klass) {
  return klass["schema$utils$schema"];
};
schema.utils.PSimpleCell = function() {
  var obj10174 = {};
  return obj10174;
}();
schema.utils.get_cell = function get_cell(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.schema$utils$PSimpleCell$get_cell$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.schema$utils$PSimpleCell$get_cell$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = schema.utils.get_cell[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = schema.utils.get_cell["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSimpleCell.get_cell", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.utils.set_cell = function set_cell(this$, x) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.schema$utils$PSimpleCell$set_cell$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.schema$utils$PSimpleCell$set_cell$arity$2(this$, x);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = schema.utils.set_cell[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = schema.utils.set_cell["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSimpleCell.set_cell", this$);
        }
      }
    }().call(null, this$, x);
  }
};
schema.utils.SimpleVCell = function(q) {
  this.q = q;
};
schema.utils.SimpleVCell.cljs$lang$type = true;
schema.utils.SimpleVCell.cljs$lang$ctorStr = "schema.utils/SimpleVCell";
schema.utils.SimpleVCell.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "schema.utils/SimpleVCell");
};
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$ = true;
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$get_cell$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.q;
};
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$set_cell$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return self__.q = x;
};
schema.utils.__GT_SimpleVCell = function __GT_SimpleVCell(q) {
  return new schema.utils.SimpleVCell(q);
};
schema.utils.use_fn_validation = new schema.utils.SimpleVCell(false);
schema.utils.use_fn_validation.get_cell = cljs.core.partial.call(null, schema.utils.get_cell, schema.utils.use_fn_validation);
schema.utils.use_fn_validation.set_cell = cljs.core.partial.call(null, schema.utils.set_cell, schema.utils.use_fn_validation);
goog.provide("schema.core");
goog.require("cljs.core");
goog.require("schema.utils");
goog.require("schema.utils");
goog.require("clojure.string");
goog.require("clojure.string");
schema.core.Schema = function() {
  var obj10176 = {};
  return obj10176;
}();
schema.core.walker = function walker(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.schema$core$Schema$walker$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.schema$core$Schema$walker$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = schema.core.walker[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = schema.core.walker["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Schema.walker", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.core.explain = function explain(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.schema$core$Schema$explain$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.schema$core$Schema$explain$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = schema.core.explain[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = schema.core.explain["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Schema.explain", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.core.subschema_walker = function subschema_walker(s) {
  throw new Error("Walking is unsupported outside of start-walker; all composite schemas must eagerly bind subschema-walkers outside the returned walker.");
};
schema.core.start_walker = function start_walker(sub_walker, schema__$1) {
  var subschema_walker10178 = schema.core.subschema_walker;
  try {
    schema.core.subschema_walker = sub_walker;
    return schema.core.subschema_walker.call(null, schema__$1);
  } finally {
    schema.core.subschema_walker = subschema_walker10178;
  }
};
schema.core.checker = function checker(schema__$1) {
  return cljs.core.comp.call(null, schema.utils.error_val, schema.core.start_walker.call(null, schema.core.walker, schema__$1));
};
schema.core.check = function check(schema__$1, x) {
  return schema.core.checker.call(null, schema__$1).call(null, x);
};
schema.core.validate = function validate(schema__$1, value) {
  var temp__4126__auto___10179 = schema.core.check.call(null, schema__$1, value);
  if (cljs.core.truth_(temp__4126__auto___10179)) {
    var error_10180 = temp__4126__auto___10179;
    throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Value does not match schema: %s", cljs.core.pr_str.call(null, error_10180)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "error", "error", -978969032), error_10180], null));
  } else {
  }
  return value;
};
schema.core.Schema["function"] = true;
schema.core.walker["function"] = function(this$) {
  var class_walker = function() {
    var temp__4124__auto__ = schema.utils.class_schema.call(null, this$);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var more_schema = temp__4124__auto__;
      return schema.core.subschema_walker.call(null, more_schema);
    } else {
      return cljs.core.identity;
    }
  }();
  return function(class_walker) {
    return function(x) {
      var or__3553__auto__ = x == null || cljs.core.not.call(null, function() {
        var or__3553__auto__ = this$ === x.constructor;
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          return x instanceof this$;
        }
      }()) ? schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$, x, new cljs.core.Delay(function(class_walker) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), this$), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
        };
      }(class_walker), null), null)) : null;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return class_walker.call(null, x);
      }
    };
  }(class_walker);
};
schema.core.explain["function"] = function(this$) {
  var temp__4124__auto__ = schema.utils.class_schema.call(null, this$);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var more_schema = temp__4124__auto__;
    return schema.core.explain.call(null, more_schema);
  } else {
    return this$;
  }
};
schema.core.AnythingSchema = function(_, __meta, __extmap) {
  this._ = _;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.AnythingSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10182, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10184 = k10182 instanceof cljs.core.Keyword ? k10182.fqn : null;
  switch(G__10184) {
    case "_":
      return self__._;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10182, else__4142__auto__);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.AnythingSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199), self__._], null)], null), self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.AnythingSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.AnythingSchema(self__._, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.AnythingSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.AnythingSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "_", "_", 1453416199), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.AnythingSchema(self__._, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10181) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10185 = cljs.core.keyword_identical_QMARK_;
  var expr__10186 = k__4147__auto__;
  if (cljs.core.truth_(pred__10185.call(null, new cljs.core.Keyword(null, "_", "_", 1453416199), expr__10186))) {
    return new schema.core.AnythingSchema(G__10181, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.AnythingSchema(self__._, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10181), null);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199), self__._], null)], null), self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10181) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.AnythingSchema(self__._, G__10181, self__.__extmap, self__.__hash);
};
schema.core.AnythingSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.AnythingSchema.prototype.schema$core$Schema$ = true;
schema.core.AnythingSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.identity;
};
schema.core.AnythingSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.Symbol(null, "Any", "Any", 1277492269, null);
};
schema.core.AnythingSchema.cljs$lang$type = true;
schema.core.AnythingSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/AnythingSchema");
};
schema.core.AnythingSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/AnythingSchema");
};
schema.core.__GT_AnythingSchema = function __GT_AnythingSchema(_) {
  return new schema.core.AnythingSchema(_);
};
schema.core.map__GT_AnythingSchema = function map__GT_AnythingSchema(G__10183) {
  return new schema.core.AnythingSchema((new cljs.core.Keyword(null, "_", "_", 1453416199)).cljs$core$IFn$_invoke$arity$1(G__10183), null, cljs.core.dissoc.call(null, G__10183, new cljs.core.Keyword(null, "_", "_", 1453416199)));
};
schema.core.Any = new schema.core.AnythingSchema(null);
schema.core.EqSchema = function(v, __meta, __extmap) {
  this.v = v;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.EqSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.EqSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10190, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10192 = k10190 instanceof cljs.core.Keyword ? k10190.fqn : null;
  switch(G__10192) {
    case "v":
      return self__.v;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10190, else__4142__auto__);
  }
};
schema.core.EqSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.EqSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null)], null), self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.EqSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.EqSchema(self__.v, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.EqSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.EqSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.EqSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.EqSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "v", "v", 21465059), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.EqSchema(self__.v, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.EqSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10189) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10193 = cljs.core.keyword_identical_QMARK_;
  var expr__10194 = k__4147__auto__;
  if (cljs.core.truth_(pred__10193.call(null, new cljs.core.Keyword(null, "v", "v", 21465059), expr__10194))) {
    return new schema.core.EqSchema(G__10189, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.EqSchema(self__.v, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10189), null);
  }
};
schema.core.EqSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null)], null), self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10189) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.EqSchema(self__.v, G__10189, self__.__extmap, self__.__hash);
};
schema.core.EqSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.EqSchema.prototype.schema$core$Schema$ = true;
schema.core.EqSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core._EQ_.call(null, self__.v, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.v), new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.EqSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.v), new cljs.core.Symbol(null, "eq", "eq", 1021992460, null));
};
schema.core.EqSchema.cljs$lang$type = true;
schema.core.EqSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/EqSchema");
};
schema.core.EqSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/EqSchema");
};
schema.core.__GT_EqSchema = function __GT_EqSchema(v) {
  return new schema.core.EqSchema(v);
};
schema.core.map__GT_EqSchema = function map__GT_EqSchema(G__10191) {
  return new schema.core.EqSchema((new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(G__10191), null, cljs.core.dissoc.call(null, G__10191, new cljs.core.Keyword(null, "v", "v", 21465059)));
};
schema.core.eq = function eq(v) {
  return new schema.core.EqSchema(v);
};
schema.core.EnumSchema = function(vs, __meta, __extmap) {
  this.vs = vs;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.EnumSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.EnumSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10198, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10200 = k10198 instanceof cljs.core.Keyword ? k10198.fqn : null;
  switch(G__10200) {
    case "vs":
      return self__.vs;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10198, else__4142__auto__);
  }
};
schema.core.EnumSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.EnumSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), self__.vs], null)], null), self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.EnumSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.EnumSchema(self__.vs, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.EnumSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.EnumSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.EnumSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.EnumSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.EnumSchema(self__.vs, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.EnumSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10197) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10201 = cljs.core.keyword_identical_QMARK_;
  var expr__10202 = k__4147__auto__;
  if (cljs.core.truth_(pred__10201.call(null, new cljs.core.Keyword(null, "vs", "vs", -2022097090), expr__10202))) {
    return new schema.core.EnumSchema(G__10197, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.EnumSchema(self__.vs, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10197), null);
  }
};
schema.core.EnumSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), self__.vs], null)], null), self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10197) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.EnumSchema(self__.vs, G__10197, self__.__extmap, self__.__hash);
};
schema.core.EnumSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.EnumSchema.prototype.schema$core$Schema$ = true;
schema.core.EnumSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.contains_QMARK_.call(null, self__.vs, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.vs);
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.EnumSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "enum", "enum", -975417337, null), self__.vs);
};
schema.core.EnumSchema.cljs$lang$type = true;
schema.core.EnumSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/EnumSchema");
};
schema.core.EnumSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/EnumSchema");
};
schema.core.__GT_EnumSchema = function __GT_EnumSchema(vs) {
  return new schema.core.EnumSchema(vs);
};
schema.core.map__GT_EnumSchema = function map__GT_EnumSchema(G__10199) {
  return new schema.core.EnumSchema((new cljs.core.Keyword(null, "vs", "vs", -2022097090)).cljs$core$IFn$_invoke$arity$1(G__10199), null, cljs.core.dissoc.call(null, G__10199, new cljs.core.Keyword(null, "vs", "vs", -2022097090)));
};
schema.core.enum$ = function() {
  var enum$__delegate = function(vs) {
    return new schema.core.EnumSchema(cljs.core.set.call(null, vs));
  };
  var enum$ = function(var_args) {
    var vs = null;
    if (arguments.length > 0) {
      vs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return enum$__delegate.call(this, vs);
  };
  enum$.cljs$lang$maxFixedArity = 0;
  enum$.cljs$lang$applyTo = function(arglist__10205) {
    var vs = cljs.core.seq(arglist__10205);
    return enum$__delegate(vs);
  };
  enum$.cljs$core$IFn$_invoke$arity$variadic = enum$__delegate;
  return enum$;
}();
schema.core.Predicate = function(p_QMARK_, pred_name, __meta, __extmap) {
  this.p_QMARK_ = p_QMARK_;
  this.pred_name = pred_name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Predicate.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Predicate.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10207, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10209 = k10207 instanceof cljs.core.Keyword ? k10207.fqn : null;
  switch(G__10209) {
    case "pred-name":
      return self__.pred_name;
      break;
    case "p?":
      return self__.p_QMARK_;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10207, else__4142__auto__);
  }
};
schema.core.Predicate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Predicate{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), self__.p_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), self__.pred_name], null)], null), self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Predicate.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Predicate.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Predicate.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Predicate.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Predicate.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), null, new cljs.core.Keyword(null, "p?", "p?", -1172161701), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Predicate.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10206) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10210 = cljs.core.keyword_identical_QMARK_;
  var expr__10211 = k__4147__auto__;
  if (cljs.core.truth_(pred__10210.call(null, new cljs.core.Keyword(null, "p?", "p?", -1172161701), expr__10211))) {
    return new schema.core.Predicate(G__10206, self__.pred_name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__10210.call(null, new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), expr__10211))) {
      return new schema.core.Predicate(self__.p_QMARK_, G__10206, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10206), null);
    }
  }
};
schema.core.Predicate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), self__.p_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), self__.pred_name], null)], null), self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10206) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, G__10206, self__.__extmap, self__.__hash);
};
schema.core.Predicate.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Predicate.prototype.schema$core$Schema$ = true;
schema.core.Predicate.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      var temp__4124__auto__ = function() {
        try {
          if (cljs.core.truth_(self__.p_QMARK_.call(null, x))) {
            return null;
          } else {
            return new cljs.core.Symbol(null, "not", "not", 1044554643, null);
          }
        } catch (e10213) {
          if (e10213 instanceof Object) {
            var e = e10213;
            return new cljs.core.Symbol(null, "throws?", "throws?", 789734533, null);
          } else {
            throw e10213;
          }
        }
      }();
      if (cljs.core.truth_(temp__4124__auto__)) {
        var reason = temp__4124__auto__;
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(reason, temp__4124__auto__, this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.pred_name);
          };
        }(reason, temp__4124__auto__, this$__$1), null), reason));
      } else {
        return x;
      }
    };
  }(this$__$1);
};
schema.core.Predicate.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.integer_QMARK_)) {
    return new cljs.core.Symbol(null, "Int", "Int", -2116888740, null);
  } else {
    if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.keyword_QMARK_)) {
      return new cljs.core.Symbol(null, "Keyword", "Keyword", -850065993, null);
    } else {
      if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.symbol_QMARK_)) {
        return new cljs.core.Symbol(null, "Symbol", "Symbol", 716452869, null);
      } else {
        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.pred_name), new cljs.core.Symbol(null, "pred", "pred", -727012372, null));
      }
    }
  }
};
schema.core.Predicate.cljs$lang$type = true;
schema.core.Predicate.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Predicate");
};
schema.core.Predicate.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Predicate");
};
schema.core.__GT_Predicate = function __GT_Predicate(p_QMARK_, pred_name) {
  return new schema.core.Predicate(p_QMARK_, pred_name);
};
schema.core.map__GT_Predicate = function map__GT_Predicate(G__10208) {
  return new schema.core.Predicate((new cljs.core.Keyword(null, "p?", "p?", -1172161701)).cljs$core$IFn$_invoke$arity$1(G__10208), (new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)).cljs$core$IFn$_invoke$arity$1(G__10208), null, cljs.core.dissoc.call(null, G__10208, new cljs.core.Keyword(null, "p?", "p?", -1172161701), new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)));
};
schema.core.pred = function() {
  var pred = null;
  var pred__1 = function(p_QMARK_) {
    return pred.call(null, p_QMARK_, p_QMARK_);
  };
  var pred__2 = function(p_QMARK_, pred_name) {
    if (cljs.core.ifn_QMARK_.call(null, p_QMARK_)) {
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Not a function: %s", p_QMARK_));
    }
    return new schema.core.Predicate(p_QMARK_, pred_name);
  };
  pred = function(p_QMARK_, pred_name) {
    switch(arguments.length) {
      case 1:
        return pred__1.call(this, p_QMARK_);
      case 2:
        return pred__2.call(this, p_QMARK_, pred_name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pred.cljs$core$IFn$_invoke$arity$1 = pred__1;
  pred.cljs$core$IFn$_invoke$arity$2 = pred__2;
  return pred;
}();
schema.core.protocol_name = function protocol_name(protocol) {
  return(new cljs.core.Keyword(null, "proto-sym", "proto-sym", -886371734)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, protocol));
};
schema.core.Protocol = function(p, __meta, __extmap) {
  this.p = p;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Protocol.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Protocol.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10216, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10218 = k10216 instanceof cljs.core.Keyword ? k10216.fqn : null;
  switch(G__10218) {
    case "p":
      return self__.p;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10216, else__4142__auto__);
  }
};
schema.core.Protocol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Protocol{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), self__.p], null)], null), self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Protocol.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Protocol(self__.p, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Protocol.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Protocol.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Protocol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Protocol.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "p", "p", 151049309), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Protocol(self__.p, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Protocol.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10215) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10219 = cljs.core.keyword_identical_QMARK_;
  var expr__10220 = k__4147__auto__;
  if (cljs.core.truth_(pred__10219.call(null, new cljs.core.Keyword(null, "p", "p", 151049309), expr__10220))) {
    return new schema.core.Protocol(G__10215, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Protocol(self__.p, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10215), null);
  }
};
schema.core.Protocol.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), self__.p], null)], null), self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10215) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Protocol(self__.p, G__10215, self__.__extmap, self__.__hash);
};
schema.core.Protocol.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Protocol.prototype.schema$core$Schema$ = true;
schema.core.Protocol.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "proto-pred", "proto-pred", 1885698716)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, this$__$1)).call(null, x))) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), schema.core.protocol_name.call(null, this$__$1)), new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.Protocol.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.protocol_name.call(null, this$__$1)), new cljs.core.Symbol(null, "protocol", "protocol", -2001965651, null));
};
schema.core.Protocol.cljs$lang$type = true;
schema.core.Protocol.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Protocol");
};
schema.core.Protocol.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Protocol");
};
schema.core.__GT_Protocol = function __GT_Protocol(p) {
  return new schema.core.Protocol(p);
};
schema.core.map__GT_Protocol = function map__GT_Protocol(G__10217) {
  return new schema.core.Protocol((new cljs.core.Keyword(null, "p", "p", 151049309)).cljs$core$IFn$_invoke$arity$1(G__10217), null, cljs.core.dissoc.call(null, G__10217, new cljs.core.Keyword(null, "p", "p", 151049309)));
};
RegExp.prototype.schema$core$Schema$ = true;
RegExp.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (!(typeof x === "string")) {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "string?", "string?", -1129175764, null));
          };
        }(this$__$1), null), null));
      } else {
        if (cljs.core.not.call(null, cljs.core.re_find.call(null, this$__$1, x))) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), schema.core.explain.call(null, this$__$1)), new cljs.core.Symbol(null, "re-find", "re-find", 1143444147, null));
            };
          }(this$__$1), null), null));
        } else {
          return x;
        }
      }
    };
  }(this$__$1);
};
RegExp.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.symbol.call(null, '#"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1)).slice(1, -1)) + '"');
};
schema.core.Str = schema.core.pred.call(null, cljs.core.string_QMARK_);
schema.core.Bool = Boolean;
schema.core.Num = Number;
schema.core.Int = schema.core.pred.call(null, cljs.core.integer_QMARK_, new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null));
schema.core.Keyword = schema.core.pred.call(null, cljs.core.keyword_QMARK_, new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null));
schema.core.Symbol = schema.core.pred.call(null, cljs.core.symbol_QMARK_, new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null));
schema.core.Regex = RegExp;
schema.core.Inst = Date;
schema.core.Uuid = cljs.core.UUID;
schema.core.Maybe = function(schema, __meta, __extmap) {
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Maybe.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Maybe.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10224, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10226 = k10224 instanceof cljs.core.Keyword ? k10224.fqn : null;
  switch(G__10226) {
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10224, else__4142__auto__);
  }
};
schema.core.Maybe.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Maybe{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Maybe.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Maybe(self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Maybe.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Maybe.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Maybe.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Maybe.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Maybe(self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Maybe.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10223) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10227 = cljs.core.keyword_identical_QMARK_;
  var expr__10228 = k__4147__auto__;
  if (cljs.core.truth_(pred__10227.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__10228))) {
    return new schema.core.Maybe(G__10223, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Maybe(self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10223), null);
  }
};
schema.core.Maybe.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10223) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Maybe(self__.schema, G__10223, self__.__extmap, self__.__hash);
};
schema.core.Maybe.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Maybe.prototype.schema$core$Schema$ = true;
schema.core.Maybe.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walker = schema.core.subschema_walker.call(null, self__.schema);
  return function(sub_walker, this$__$1) {
    return function(x) {
      if (x == null) {
        return null;
      } else {
        return sub_walker.call(null, x);
      }
    };
  }(sub_walker, this$__$1);
};
schema.core.Maybe.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "maybe", "maybe", 1326133967, null));
};
schema.core.Maybe.cljs$lang$type = true;
schema.core.Maybe.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Maybe");
};
schema.core.Maybe.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Maybe");
};
schema.core.__GT_Maybe = function __GT_Maybe(schema__$1) {
  return new schema.core.Maybe(schema__$1);
};
schema.core.map__GT_Maybe = function map__GT_Maybe(G__10225) {
  return new schema.core.Maybe((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__10225), null, cljs.core.dissoc.call(null, G__10225, new cljs.core.Keyword(null, "schema", "schema", -1582001791)));
};
schema.core.maybe = function maybe(schema__$1) {
  return new schema.core.Maybe(schema__$1);
};
schema.core.NamedSchema = function(schema, name, __meta, __extmap) {
  this.schema = schema;
  this.name = name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.NamedSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.NamedSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10232, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10234 = k10232 instanceof cljs.core.Keyword ? k10232.fqn : null;
  switch(G__10234) {
    case "name":
      return self__.name;
      break;
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10232, else__4142__auto__);
  }
};
schema.core.NamedSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.NamedSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.NamedSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.NamedSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.NamedSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.NamedSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.NamedSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.NamedSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10231) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10235 = cljs.core.keyword_identical_QMARK_;
  var expr__10236 = k__4147__auto__;
  if (cljs.core.truth_(pred__10235.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__10236))) {
    return new schema.core.NamedSchema(G__10231, self__.name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__10235.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__10236))) {
      return new schema.core.NamedSchema(self__.schema, G__10231, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10231), null);
    }
  }
};
schema.core.NamedSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10231) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.NamedSchema(self__.schema, self__.name, G__10231, self__.__extmap, self__.__hash);
};
schema.core.NamedSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.NamedSchema.prototype.schema$core$Schema$ = true;
schema.core.NamedSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walker = schema.core.subschema_walker.call(null, self__.schema);
  return function(sub_walker, this$__$1) {
    return function(x) {
      return schema.utils.wrap_error_name.call(null, self__.name, sub_walker.call(null, x));
    };
  }(sub_walker, this$__$1);
};
schema.core.NamedSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.name), schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "named", "named", 1218138048, null));
};
schema.core.NamedSchema.cljs$lang$type = true;
schema.core.NamedSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/NamedSchema");
};
schema.core.NamedSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/NamedSchema");
};
schema.core.__GT_NamedSchema = function __GT_NamedSchema(schema__$1, name) {
  return new schema.core.NamedSchema(schema__$1, name);
};
schema.core.map__GT_NamedSchema = function map__GT_NamedSchema(G__10233) {
  return new schema.core.NamedSchema((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__10233), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__10233), null, cljs.core.dissoc.call(null, G__10233, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "name", "name", 1843675177)));
};
schema.core.named = function named(schema__$1, name) {
  return new schema.core.NamedSchema(schema__$1, name);
};
schema.core.Either = function(schemas, __meta, __extmap) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Either.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Either.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10240, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10242 = k10240 instanceof cljs.core.Keyword ? k10240.fqn : null;
  switch(G__10242) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10240, else__4142__auto__);
  }
};
schema.core.Either.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Either{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Either.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Either(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Either.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Either.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Either.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Either.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Either(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Either.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10239) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10243 = cljs.core.keyword_identical_QMARK_;
  var expr__10244 = k__4147__auto__;
  if (cljs.core.truth_(pred__10243.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__10244))) {
    return new schema.core.Either(G__10239, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Either(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10239), null);
  }
};
schema.core.Either.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10239) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Either(self__.schemas, G__10239, self__.__extmap, self__.__hash);
};
schema.core.Either.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Either.prototype.schema$core$Schema$ = true;
schema.core.Either.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walkers = cljs.core.mapv.call(null, schema.core.subschema_walker, self__.schemas);
  return function(sub_walkers, this$__$1) {
    return function(x) {
      var sub_walkers__$1 = cljs.core.seq.call(null, sub_walkers);
      while (true) {
        if (cljs.core.not.call(null, sub_walkers__$1)) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(sub_walkers__$1, sub_walkers, this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "schemas", "schemas", -2079365190, null)), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "%", "%", -950237169, null)), new cljs.core.Symbol(null, "check", "check", -1428126865, null))), new cljs.core.Symbol(null, "some", "some", 
              -310548046, null));
            };
          }(sub_walkers__$1, sub_walkers, this$__$1), null), null));
        } else {
          var res = cljs.core.first.call(null, sub_walkers__$1).call(null, x);
          if (!schema.utils.error_QMARK_.call(null, res)) {
            return res;
          } else {
            var G__10247 = cljs.core.next.call(null, sub_walkers__$1);
            sub_walkers__$1 = G__10247;
            continue;
          }
        }
        break;
      }
    };
  }(sub_walkers, this$__$1);
};
schema.core.Either.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "either", "either", -2144373018, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.Either.cljs$lang$type = true;
schema.core.Either.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Either");
};
schema.core.Either.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Either");
};
schema.core.__GT_Either = function __GT_Either(schemas) {
  return new schema.core.Either(schemas);
};
schema.core.map__GT_Either = function map__GT_Either(G__10241) {
  return new schema.core.Either((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__10241), null, cljs.core.dissoc.call(null, G__10241, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)));
};
schema.core.either = function() {
  var either__delegate = function(schemas) {
    return new schema.core.Either(schemas);
  };
  var either = function(var_args) {
    var schemas = null;
    if (arguments.length > 0) {
      schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return either__delegate.call(this, schemas);
  };
  either.cljs$lang$maxFixedArity = 0;
  either.cljs$lang$applyTo = function(arglist__10248) {
    var schemas = cljs.core.seq(arglist__10248);
    return either__delegate(schemas);
  };
  either.cljs$core$IFn$_invoke$arity$variadic = either__delegate;
  return either;
}();
schema.core.Both = function(schemas, __meta, __extmap) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Both.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Both.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10250, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10252 = k10250 instanceof cljs.core.Keyword ? k10250.fqn : null;
  switch(G__10252) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10250, else__4142__auto__);
  }
};
schema.core.Both.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Both{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Both.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Both(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Both.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Both.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Both.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Both.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Both(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Both.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10249) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10253 = cljs.core.keyword_identical_QMARK_;
  var expr__10254 = k__4147__auto__;
  if (cljs.core.truth_(pred__10253.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__10254))) {
    return new schema.core.Both(G__10249, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Both(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10249), null);
  }
};
schema.core.Both.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10249) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Both(self__.schemas, G__10249, self__.__extmap, self__.__hash);
};
schema.core.Both.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Both.prototype.schema$core$Schema$ = true;
schema.core.Both.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walkers = cljs.core.mapv.call(null, schema.core.subschema_walker, self__.schemas);
  return function(sub_walkers, this$__$1) {
    return function(x) {
      return cljs.core.reduce.call(null, function(sub_walkers, this$__$1) {
        return function(x__$1, sub_walker) {
          if (schema.utils.error_QMARK_.call(null, x__$1)) {
            return x__$1;
          } else {
            return sub_walker.call(null, x__$1);
          }
        };
      }(sub_walkers, this$__$1), x, sub_walkers);
    };
  }(sub_walkers, this$__$1);
};
schema.core.Both.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "both", "both", 1246882687, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.Both.cljs$lang$type = true;
schema.core.Both.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Both");
};
schema.core.Both.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Both");
};
schema.core.__GT_Both = function __GT_Both(schemas) {
  return new schema.core.Both(schemas);
};
schema.core.map__GT_Both = function map__GT_Both(G__10251) {
  return new schema.core.Both((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__10251), null, cljs.core.dissoc.call(null, G__10251, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)));
};
schema.core.both = function() {
  var both__delegate = function(schemas) {
    return new schema.core.Both(schemas);
  };
  var both = function(var_args) {
    var schemas = null;
    if (arguments.length > 0) {
      schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return both__delegate.call(this, schemas);
  };
  both.cljs$lang$maxFixedArity = 0;
  both.cljs$lang$applyTo = function(arglist__10257) {
    var schemas = cljs.core.seq(arglist__10257);
    return both__delegate(schemas);
  };
  both.cljs$core$IFn$_invoke$arity$variadic = both__delegate;
  return both;
}();
schema.core.ConditionalSchema = function(preds_and_schemas, __meta, __extmap) {
  this.preds_and_schemas = preds_and_schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.ConditionalSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10259, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10261 = k10259 instanceof cljs.core.Keyword ? k10259.fqn : null;
  switch(G__10261) {
    case "preds-and-schemas":
      return self__.preds_and_schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10259, else__4142__auto__);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.ConditionalSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), self__.preds_and_schemas], null)], null), self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.ConditionalSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.ConditionalSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.ConditionalSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10258) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10262 = cljs.core.keyword_identical_QMARK_;
  var expr__10263 = k__4147__auto__;
  if (cljs.core.truth_(pred__10262.call(null, new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), expr__10263))) {
    return new schema.core.ConditionalSchema(G__10258, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10258), null);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), self__.preds_and_schemas], null)], null), self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10258) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.ConditionalSchema(self__.preds_and_schemas, G__10258, self__.__extmap, self__.__hash);
};
schema.core.ConditionalSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.ConditionalSchema.prototype.schema$core$Schema$ = true;
schema.core.ConditionalSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var preds_and_walkers = cljs.core.mapv.call(null, function(this$__$1) {
    return function(p__10265) {
      var vec__10266 = p__10265;
      var pred = cljs.core.nth.call(null, vec__10266, 0, null);
      var schema__$1 = cljs.core.nth.call(null, vec__10266, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred, schema.core.subschema_walker.call(null, schema__$1)], null);
    };
  }(this$__$1), self__.preds_and_schemas);
  return function(preds_and_walkers, this$__$1) {
    return function(x) {
      var temp__4124__auto__ = cljs.core.first.call(null, cljs.core.filter.call(null, function(preds_and_walkers, this$__$1) {
        return function(p__10267) {
          var vec__10268 = p__10267;
          var pred = cljs.core.nth.call(null, vec__10268, 0, null);
          return pred.call(null, x);
        };
      }(preds_and_walkers, this$__$1), preds_and_walkers));
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__10269 = temp__4124__auto__;
        var _ = cljs.core.nth.call(null, vec__10269, 0, null);
        var match = cljs.core.nth.call(null, vec__10269, 1, null);
        return match.call(null, x);
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(temp__4124__auto__, preds_and_walkers, this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "matches-some-condition?", "matches-some-condition?", 2097370044, null));
          };
        }(temp__4124__auto__, preds_and_walkers, this$__$1), null), null));
      }
    };
  }(preds_and_walkers, this$__$1);
};
schema.core.ConditionalSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "conditional", "conditional", -1212542970, null), cljs.core.mapcat.call(null, function(this$__$1) {
    return function(p__10270) {
      var vec__10271 = p__10270;
      var pred = cljs.core.nth.call(null, vec__10271, 0, null);
      var schema__$1 = cljs.core.nth.call(null, vec__10271, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred, schema.core.explain.call(null, schema__$1)], null);
    };
  }(this$__$1), self__.preds_and_schemas));
};
schema.core.ConditionalSchema.cljs$lang$type = true;
schema.core.ConditionalSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/ConditionalSchema");
};
schema.core.ConditionalSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/ConditionalSchema");
};
schema.core.__GT_ConditionalSchema = function __GT_ConditionalSchema(preds_and_schemas) {
  return new schema.core.ConditionalSchema(preds_and_schemas);
};
schema.core.map__GT_ConditionalSchema = function map__GT_ConditionalSchema(G__10260) {
  return new schema.core.ConditionalSchema((new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355)).cljs$core$IFn$_invoke$arity$1(G__10260), null, cljs.core.dissoc.call(null, G__10260, new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355)));
};
schema.core.conditional = function() {
  var conditional__delegate = function(preds_and_schemas) {
    if (cljs.core.seq.call(null, preds_and_schemas) && cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, preds_and_schemas))) {
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Expected even, nonzero number of args; got %s", cljs.core.count.call(null, preds_and_schemas)));
    }
    return new schema.core.ConditionalSchema(function() {
      var iter__4278__auto__ = function iter__10281(s__10282) {
        return new cljs.core.LazySeq(null, function() {
          var s__10282__$1 = s__10282;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__10282__$1);
            if (temp__4126__auto__) {
              var s__10282__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__10282__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__10282__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__10284 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__10283 = 0;
                  while (true) {
                    if (i__10283 < size__4277__auto__) {
                      var vec__10287 = cljs.core._nth.call(null, c__4276__auto__, i__10283);
                      var pred = cljs.core.nth.call(null, vec__10287, 0, null);
                      var schema__$1 = cljs.core.nth.call(null, vec__10287, 1, null);
                      cljs.core.chunk_append.call(null, b__10284, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, pred, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.constantly.call(null, true) : pred, schema__$1], null));
                      var G__10289 = i__10283 + 1;
                      i__10283 = G__10289;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10284), iter__10281.call(null, cljs.core.chunk_rest.call(null, s__10282__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10284), null);
                }
              } else {
                var vec__10288 = cljs.core.first.call(null, s__10282__$2);
                var pred = cljs.core.nth.call(null, vec__10288, 0, null);
                var schema__$1 = cljs.core.nth.call(null, vec__10288, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, pred, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.constantly.call(null, true) : pred, schema__$1], null), iter__10281.call(null, cljs.core.rest.call(null, s__10282__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4278__auto__.call(null, cljs.core.partition.call(null, 2, preds_and_schemas));
    }());
  };
  var conditional = function(var_args) {
    var preds_and_schemas = null;
    if (arguments.length > 0) {
      preds_and_schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return conditional__delegate.call(this, preds_and_schemas);
  };
  conditional.cljs$lang$maxFixedArity = 0;
  conditional.cljs$lang$applyTo = function(arglist__10290) {
    var preds_and_schemas = cljs.core.seq(arglist__10290);
    return conditional__delegate(preds_and_schemas);
  };
  conditional.cljs$core$IFn$_invoke$arity$variadic = conditional__delegate;
  return conditional;
}();
schema.core.if$ = function if$(pred, if_schema, else_schema) {
  return schema.core.conditional.call(null, pred, if_schema, cljs.core.constantly.call(null, true), else_schema);
};
schema.core._PLUS_missing_PLUS_ = new cljs.core.Keyword("schema.core", "missing", "schema.core/missing", 1420181325);
schema.core.RequiredKey = function(k, __meta, __extmap) {
  this.k = k;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.RequiredKey.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.RequiredKey.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10292, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10294 = k10292 instanceof cljs.core.Keyword ? k10292.fqn : null;
  switch(G__10294) {
    case "k":
      return self__.k;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10292, else__4142__auto__);
  }
};
schema.core.RequiredKey.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.RequiredKey{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.RequiredKey.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.RequiredKey(self__.k, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.RequiredKey.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.RequiredKey.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.RequiredKey.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.RequiredKey.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "k", "k", -2146297393), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.RequiredKey(self__.k, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.RequiredKey.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10291) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10295 = cljs.core.keyword_identical_QMARK_;
  var expr__10296 = k__4147__auto__;
  if (cljs.core.truth_(pred__10295.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), expr__10296))) {
    return new schema.core.RequiredKey(G__10291, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.RequiredKey(self__.k, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10291), null);
  }
};
schema.core.RequiredKey.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10291) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.RequiredKey(self__.k, G__10291, self__.__extmap, self__.__hash);
};
schema.core.RequiredKey.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.RequiredKey.cljs$lang$type = true;
schema.core.RequiredKey.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/RequiredKey");
};
schema.core.RequiredKey.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/RequiredKey");
};
schema.core.__GT_RequiredKey = function __GT_RequiredKey(k) {
  return new schema.core.RequiredKey(k);
};
schema.core.map__GT_RequiredKey = function map__GT_RequiredKey(G__10293) {
  return new schema.core.RequiredKey((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(G__10293), null, cljs.core.dissoc.call(null, G__10293, new cljs.core.Keyword(null, "k", "k", -2146297393)));
};
schema.core.required_key = function required_key(k) {
  if (k instanceof cljs.core.Keyword) {
    return k;
  } else {
    return new schema.core.RequiredKey(k);
  }
};
schema.core.required_key_QMARK_ = function required_key_QMARK_(ks) {
  return ks instanceof cljs.core.Keyword || ks instanceof schema.core.RequiredKey;
};
schema.core.OptionalKey = function(k, __meta, __extmap) {
  this.k = k;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.OptionalKey.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.OptionalKey.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10300, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10302 = k10300 instanceof cljs.core.Keyword ? k10300.fqn : null;
  switch(G__10302) {
    case "k":
      return self__.k;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10300, else__4142__auto__);
  }
};
schema.core.OptionalKey.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.OptionalKey{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.OptionalKey.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.OptionalKey(self__.k, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.OptionalKey.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.OptionalKey.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.OptionalKey.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.OptionalKey.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "k", "k", -2146297393), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.OptionalKey(self__.k, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.OptionalKey.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10299) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10303 = cljs.core.keyword_identical_QMARK_;
  var expr__10304 = k__4147__auto__;
  if (cljs.core.truth_(pred__10303.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), expr__10304))) {
    return new schema.core.OptionalKey(G__10299, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.OptionalKey(self__.k, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10299), null);
  }
};
schema.core.OptionalKey.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10299) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.OptionalKey(self__.k, G__10299, self__.__extmap, self__.__hash);
};
schema.core.OptionalKey.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.OptionalKey.cljs$lang$type = true;
schema.core.OptionalKey.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/OptionalKey");
};
schema.core.OptionalKey.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/OptionalKey");
};
schema.core.__GT_OptionalKey = function __GT_OptionalKey(k) {
  return new schema.core.OptionalKey(k);
};
schema.core.map__GT_OptionalKey = function map__GT_OptionalKey(G__10301) {
  return new schema.core.OptionalKey((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(G__10301), null, cljs.core.dissoc.call(null, G__10301, new cljs.core.Keyword(null, "k", "k", -2146297393)));
};
schema.core.optional_key = function optional_key(k) {
  return new schema.core.OptionalKey(k);
};
schema.core.optional_key_QMARK_ = function optional_key_QMARK_(ks) {
  return ks instanceof schema.core.OptionalKey;
};
schema.core.explicit_schema_key = function explicit_schema_key(ks) {
  if (ks instanceof cljs.core.Keyword) {
    return ks;
  } else {
    if (ks instanceof schema.core.RequiredKey) {
      return ks.k;
    } else {
      if (schema.core.optional_key_QMARK_.call(null, ks)) {
        return ks.k;
      } else {
        throw new Error(schema.utils.format_STAR_.call(null, "Bad explicit key: %s", ks));
      }
    }
  }
};
schema.core.specific_key_QMARK_ = function specific_key_QMARK_(ks) {
  return schema.core.required_key_QMARK_.call(null, ks) || schema.core.optional_key_QMARK_.call(null, ks);
};
schema.core.explain_kspec = function explain_kspec(kspec) {
  if (schema.core.specific_key_QMARK_.call(null, kspec)) {
    if (kspec instanceof cljs.core.Keyword) {
      return kspec;
    } else {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explicit_schema_key.call(null, kspec)), schema.core.required_key_QMARK_.call(null, kspec) ? new cljs.core.Symbol(null, "required-key", "required-key", 1624616412, null) : schema.core.optional_key_QMARK_.call(null, kspec) ? new cljs.core.Symbol(null, "optional-key", "optional-key", 988406145, null) : null);
    }
  } else {
    return schema.core.explain.call(null, kspec);
  }
};
schema.core.MapEntry = function(kspec, val_schema, __meta, __extmap) {
  this.kspec = kspec;
  this.val_schema = val_schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10308, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10310 = k10308 instanceof cljs.core.Keyword ? k10308.fqn : null;
  switch(G__10310) {
    case "val-schema":
      return self__.val_schema;
      break;
    case "kspec":
      return self__.kspec;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10308, else__4142__auto__);
  }
};
schema.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.MapEntry{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), self__.kspec], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), self__.val_schema], null)], null), self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.MapEntry.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.MapEntry.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), null, new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10307) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10311 = cljs.core.keyword_identical_QMARK_;
  var expr__10312 = k__4147__auto__;
  if (cljs.core.truth_(pred__10311.call(null, new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), expr__10312))) {
    return new schema.core.MapEntry(G__10307, self__.val_schema, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__10311.call(null, new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), expr__10312))) {
      return new schema.core.MapEntry(self__.kspec, G__10307, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10307), null);
    }
  }
};
schema.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), self__.kspec], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), self__.val_schema], null)], null), self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10307) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.MapEntry(self__.kspec, self__.val_schema, G__10307, self__.__extmap, self__.__hash);
};
schema.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.MapEntry.prototype.schema$core$Schema$ = true;
schema.core.MapEntry.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var val_walker = schema.core.subschema_walker.call(null, self__.val_schema);
  if (schema.core.specific_key_QMARK_.call(null, self__.kspec)) {
    var optional_QMARK_ = schema.core.optional_key_QMARK_.call(null, self__.kspec);
    var k = schema.core.explicit_schema_key.call(null, self__.kspec);
    return function(optional_QMARK_, k, val_walker, this$__$1) {
      return function(x) {
        if (schema.core._PLUS_missing_PLUS_ === x) {
          if (optional_QMARK_) {
            return null;
          } else {
            return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null)], null));
          }
        } else {
          if (!cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, x))) {
            return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(optional_QMARK_, k, val_walker, this$__$1) {
              return function() {
                return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "count", "count", -514511684, null))), 2), cljs.core._EQ_);
              };
            }(optional_QMARK_, k, val_walker, this$__$1), null), null));
          } else {
            var vec__10314 = x;
            var xk = cljs.core.nth.call(null, vec__10314, 0, null);
            var xv = cljs.core.nth.call(null, vec__10314, 1, null);
            if (cljs.core._EQ_.call(null, xk, k)) {
            } else {
              throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "xk", "xk", 741114825, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)))));
            }
            var vres = val_walker.call(null, xv);
            var temp__4124__auto__ = schema.utils.error_val.call(null, vres);
            if (cljs.core.truth_(temp__4124__auto__)) {
              var ve = temp__4124__auto__;
              return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xk, ve], null));
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xk, vres], null);
            }
          }
        }
      };
    }(optional_QMARK_, k, val_walker, this$__$1);
  } else {
    var key_walker = schema.core.subschema_walker.call(null, self__.kspec);
    return function(key_walker, val_walker, this$__$1) {
      return function(x) {
        if (!cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, x))) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(key_walker, val_walker, this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "count", "count", -514511684, null))), 2), cljs.core._EQ_);
            };
          }(key_walker, val_walker, this$__$1), null), null));
        } else {
          var out_k = key_walker.call(null, cljs.core.key.call(null, x));
          var out_ke = schema.utils.error_val.call(null, out_k);
          var out_v = val_walker.call(null, cljs.core.val.call(null, x));
          var out_ve = schema.utils.error_val.call(null, out_v);
          if (cljs.core.truth_(function() {
            var or__3553__auto__ = out_ke;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return out_ve;
            }
          }())) {
            return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
              var or__3553__auto__ = out_ke;
              if (cljs.core.truth_(or__3553__auto__)) {
                return or__3553__auto__;
              } else {
                return cljs.core.key.call(null, x);
              }
            }(), function() {
              var or__3553__auto__ = out_ve;
              if (cljs.core.truth_(or__3553__auto__)) {
                return or__3553__auto__;
              } else {
                return new cljs.core.Symbol(null, "invalid-key", "invalid-key", -1461682245, null);
              }
            }()], null));
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [out_k, out_v], null);
          }
        }
      };
    }(key_walker, val_walker, this$__$1);
  }
};
schema.core.MapEntry.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.val_schema)), schema.core.explain_kspec.call(null, self__.kspec)), new cljs.core.Symbol(null, "map-entry", "map-entry", 329617471, null));
};
schema.core.MapEntry.cljs$lang$type = true;
schema.core.MapEntry.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/MapEntry");
};
schema.core.MapEntry.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/MapEntry");
};
schema.core.__GT_MapEntry = function __GT_MapEntry(kspec, val_schema) {
  return new schema.core.MapEntry(kspec, val_schema);
};
schema.core.map__GT_MapEntry = function map__GT_MapEntry(G__10309) {
  return new schema.core.MapEntry((new cljs.core.Keyword(null, "kspec", "kspec", -1151232248)).cljs$core$IFn$_invoke$arity$1(G__10309), (new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)).cljs$core$IFn$_invoke$arity$1(G__10309), null, cljs.core.dissoc.call(null, G__10309, new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)));
};
schema.core.map_entry = function map_entry(kspec, val_schema) {
  return new schema.core.MapEntry(kspec, val_schema);
};
schema.core.find_extra_keys_schema = function find_extra_keys_schema(map_schema) {
  var key_schemata = cljs.core.remove.call(null, schema.core.specific_key_QMARK_, cljs.core.keys.call(null, map_schema));
  if (cljs.core.count.call(null, key_schemata) < 2) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "More than one non-optional/required key schemata: %s", cljs.core.vec.call(null, key_schemata)));
  }
  return cljs.core.first.call(null, key_schemata);
};
schema.core.map_walker = function map_walker(map_schema) {
  var extra_keys_schema = schema.core.find_extra_keys_schema.call(null, map_schema);
  var extra_walker = cljs.core.truth_(extra_keys_schema) ? schema.core.subschema_walker.call(null, cljs.core.apply.call(null, schema.core.map_entry, cljs.core.find.call(null, map_schema, extra_keys_schema))) : null;
  var explicit_schema = cljs.core.dissoc.call(null, map_schema, extra_keys_schema);
  var explicit_walkers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4278__auto__ = function(extra_keys_schema, extra_walker, explicit_schema) {
      return function iter__10328(s__10329) {
        return new cljs.core.LazySeq(null, function(extra_keys_schema, extra_walker, explicit_schema) {
          return function() {
            var s__10329__$1 = s__10329;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__10329__$1);
              if (temp__4126__auto__) {
                var s__10329__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__10329__$2)) {
                  var c__4276__auto__ = cljs.core.chunk_first.call(null, s__10329__$2);
                  var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                  var b__10331 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                  if (function() {
                    var i__10330 = 0;
                    while (true) {
                      if (i__10330 < size__4277__auto__) {
                        var vec__10334 = cljs.core._nth.call(null, c__4276__auto__, i__10330);
                        var k = cljs.core.nth.call(null, vec__10334, 0, null);
                        var v = cljs.core.nth.call(null, vec__10334, 1, null);
                        cljs.core.chunk_append.call(null, b__10331, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.subschema_walker.call(null, schema.core.map_entry.call(null, k, v))], null));
                        var G__10339 = i__10330 + 1;
                        i__10330 = G__10339;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10331), iter__10328.call(null, cljs.core.chunk_rest.call(null, s__10329__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10331), null);
                  }
                } else {
                  var vec__10335 = cljs.core.first.call(null, s__10329__$2);
                  var k = cljs.core.nth.call(null, vec__10335, 0, null);
                  var v = cljs.core.nth.call(null, vec__10335, 1, null);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.subschema_walker.call(null, schema.core.map_entry.call(null, k, v))], null), iter__10328.call(null, cljs.core.rest.call(null, s__10329__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(extra_keys_schema, extra_walker, explicit_schema), null, null);
      };
    }(extra_keys_schema, extra_walker, explicit_schema);
    return iter__4278__auto__.call(null, explicit_schema);
  }());
  var err_conj = schema.utils.result_builder.call(null, cljs.core.constantly.call(null, cljs.core.PersistentArrayMap.EMPTY));
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, explicit_schema), cljs.core.count.call(null, explicit_walkers))) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Schema has multiple variants of the same explicit key: %s", cljs.core.mapv.call(null, schema.core.explain_kspec, cljs.core.apply.call(null, cljs.core.concat, cljs.core.filter.call(null, function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
      return function(p1__10316_SHARP_) {
        return cljs.core.count.call(null, p1__10316_SHARP_) > 1;
      };
    }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), cljs.core.vals.call(null, cljs.core.group_by.call(null, schema.core.explicit_schema_key, cljs.core.keys.call(null, explicit_schema))))))));
  }
  return function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
    return function(x) {
      if (!cljs.core.map_QMARK_.call(null, x)) {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, map_schema, x, new cljs.core.Delay(function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
          };
        }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), null), null));
      } else {
        var x__$1 = x;
        var explicit_walkers__$1 = cljs.core.seq.call(null, explicit_walkers);
        var out = cljs.core.PersistentArrayMap.EMPTY;
        while (true) {
          if (cljs.core.not.call(null, explicit_walkers__$1)) {
            return cljs.core.reduce.call(null, cljs.core.truth_(extra_walker) ? function(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
              return function(out__$1, e) {
                return err_conj.call(null, out__$1, extra_walker.call(null, e));
              };
            }(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) : function(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
              return function(out__$1, p__10336) {
                var vec__10337 = p__10336;
                var k = cljs.core.nth.call(null, vec__10337, 0, null);
                var _ = cljs.core.nth.call(null, vec__10337, 1, null);
                return err_conj.call(null, out__$1, schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Symbol(null, "disallowed-key", "disallowed-key", -1877785633, null)], null)));
              };
            }(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), out, x__$1);
          } else {
            var vec__10338 = cljs.core.first.call(null, explicit_walkers__$1);
            var wk = cljs.core.nth.call(null, vec__10338, 0, null);
            var wv = cljs.core.nth.call(null, vec__10338, 1, null);
            var G__10340 = cljs.core.dissoc.call(null, x__$1, wk);
            var G__10341 = cljs.core.next.call(null, explicit_walkers__$1);
            var G__10342 = err_conj.call(null, out, wv.call(null, function() {
              var or__3553__auto__ = cljs.core.find.call(null, x__$1, wk);
              if (cljs.core.truth_(or__3553__auto__)) {
                return or__3553__auto__;
              } else {
                return schema.core._PLUS_missing_PLUS_;
              }
            }()));
            x__$1 = G__10340;
            explicit_walkers__$1 = G__10341;
            out = G__10342;
            continue;
          }
          break;
        }
      }
    };
  }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj);
};
schema.core.map_explain = function map_explain(this$) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4278__auto__ = function iter__10351(s__10352) {
      return new cljs.core.LazySeq(null, function() {
        var s__10352__$1 = s__10352;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__10352__$1);
          if (temp__4126__auto__) {
            var s__10352__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__10352__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__10352__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__10354 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__10353 = 0;
                while (true) {
                  if (i__10353 < size__4277__auto__) {
                    var vec__10357 = cljs.core._nth.call(null, c__4276__auto__, i__10353);
                    var k = cljs.core.nth.call(null, vec__10357, 0, null);
                    var v = cljs.core.nth.call(null, vec__10357, 1, null);
                    cljs.core.chunk_append.call(null, b__10354, cljs.core.vec.call(null, cljs.core.next.call(null, schema.core.explain.call(null, schema.core.map_entry.call(null, k, v)))));
                    var G__10359 = i__10353 + 1;
                    i__10353 = G__10359;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10354), iter__10351.call(null, cljs.core.chunk_rest.call(null, s__10352__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10354), null);
              }
            } else {
              var vec__10358 = cljs.core.first.call(null, s__10352__$2);
              var k = cljs.core.nth.call(null, vec__10358, 0, null);
              var v = cljs.core.nth.call(null, vec__10358, 1, null);
              return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.next.call(null, schema.core.explain.call(null, schema.core.map_entry.call(null, k, v)))), iter__10351.call(null, cljs.core.rest.call(null, s__10352__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, this$);
  }());
};
cljs.core.PersistentHashMap.prototype.schema$core$Schema$ = true;
cljs.core.PersistentHashMap.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_walker.call(null, this$__$1);
};
cljs.core.PersistentHashMap.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_explain.call(null, this$__$1);
};
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$ = true;
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_walker.call(null, this$__$1);
};
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_explain.call(null, this$__$1);
};
cljs.core.PersistentHashSet.prototype.schema$core$Schema$ = true;
cljs.core.PersistentHashSet.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, this$__$1), 1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Set schema must have exactly one element"));
  }
  var sub_walker = schema.core.subschema_walker.call(null, cljs.core.first.call(null, this$__$1));
  return function(sub_walker, this$__$1) {
    return function(x) {
      var or__3553__auto__ = cljs.core.set_QMARK_.call(null, x) ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(sub_walker, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "set?", "set?", 1636014792, null));
        };
      }(sub_walker, this$__$1), null), null));
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        var vec__10360 = cljs.core.juxt.call(null, cljs.core.remove, cljs.core.keep).call(null, schema.utils.error_val, cljs.core.map.call(null, sub_walker, x));
        var good = cljs.core.nth.call(null, vec__10360, 0, null);
        var bad = cljs.core.nth.call(null, vec__10360, 1, null);
        if (cljs.core.seq.call(null, bad)) {
          return schema.utils.error.call(null, cljs.core.set.call(null, bad));
        } else {
          return cljs.core.set.call(null, good);
        }
      }
    };
  }(sub_walker, this$__$1);
};
cljs.core.PersistentHashSet.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.set.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain.call(null, cljs.core.first.call(null, this$__$1))], null));
};
schema.core.One = function(schema, optional_QMARK_, name, __meta, __extmap) {
  this.schema = schema;
  this.optional_QMARK_ = optional_QMARK_;
  this.name = name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.One.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.One.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10362, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10364 = k10362 instanceof cljs.core.Keyword ? k10362.fqn : null;
  switch(G__10364) {
    case "name":
      return self__.name;
      break;
    case "optional?":
      return self__.optional_QMARK_;
      break;
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10362, else__4142__auto__);
  }
};
schema.core.One.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.One{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), self__.optional_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.One.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.One.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.One.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.One.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.One.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.One.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null, new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.One.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10361) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10365 = cljs.core.keyword_identical_QMARK_;
  var expr__10366 = k__4147__auto__;
  if (cljs.core.truth_(pred__10365.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__10366))) {
    return new schema.core.One(G__10361, self__.optional_QMARK_, self__.name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__10365.call(null, new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), expr__10366))) {
      return new schema.core.One(self__.schema, G__10361, self__.name, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__10365.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__10366))) {
        return new schema.core.One(self__.schema, self__.optional_QMARK_, G__10361, self__.__meta, self__.__extmap, null);
      } else {
        return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10361), null);
      }
    }
  }
};
schema.core.One.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), self__.optional_QMARK_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.One.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10361) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, G__10361, self__.__extmap, self__.__hash);
};
schema.core.One.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.One.cljs$lang$type = true;
schema.core.One.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/One");
};
schema.core.One.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/One");
};
schema.core.__GT_One = function __GT_One(schema__$1, optional_QMARK_, name) {
  return new schema.core.One(schema__$1, optional_QMARK_, name);
};
schema.core.map__GT_One = function map__GT_One(G__10363) {
  return new schema.core.One((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__10363), (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(G__10363), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__10363), null, cljs.core.dissoc.call(null, G__10363, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "optional?", "optional?", 
  1184638129), new cljs.core.Keyword(null, "name", "name", 1843675177)));
};
schema.core.one = function one(schema__$1, name) {
  return new schema.core.One(schema__$1, false, name);
};
schema.core.optional = function optional(schema__$1, name) {
  return new schema.core.One(schema__$1, true, name);
};
schema.core.parse_sequence_schema = function parse_sequence_schema(s) {
  var vec__10374 = cljs.core.split_with.call(null, function(p1__10369_SHARP_) {
    return p1__10369_SHARP_ instanceof schema.core.One && cljs.core.not.call(null, (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(p1__10369_SHARP_));
  }, s);
  var required = cljs.core.nth.call(null, vec__10374, 0, null);
  var more = cljs.core.nth.call(null, vec__10374, 1, null);
  var vec__10375 = cljs.core.split_with.call(null, function(vec__10374, required, more) {
    return function(p1__10370_SHARP_) {
      var and__3541__auto__ = p1__10370_SHARP_ instanceof schema.core.One;
      if (and__3541__auto__) {
        return(new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(p1__10370_SHARP_);
      } else {
        return and__3541__auto__;
      }
    };
  }(vec__10374, required, more), more);
  var optional = cljs.core.nth.call(null, vec__10375, 0, null);
  var more__$1 = cljs.core.nth.call(null, vec__10375, 1, null);
  if (cljs.core.count.call(null, more__$1) <= 1 && cljs.core.every_QMARK_.call(null, function(vec__10374, required, more, vec__10375, optional, more__$1) {
    return function(p1__10371_SHARP_) {
      return!(p1__10371_SHARP_ instanceof schema.core.One);
    };
  }(vec__10374, required, more, vec__10375, optional, more__$1), more__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Sequence schema %s does not match [one* optional* rest-schema?]", s));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.call(null, required, optional), cljs.core.first.call(null, more__$1)], null);
};
cljs.core.PersistentVector.prototype.schema$core$Schema$ = true;
cljs.core.PersistentVector.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  var vec__10376 = schema.core.parse_sequence_schema.call(null, this$__$1);
  var singles = cljs.core.nth.call(null, vec__10376, 0, null);
  var multi = cljs.core.nth.call(null, vec__10376, 1, null);
  var single_walkers = cljs.core.vec.call(null, function() {
    var iter__4278__auto__ = function(vec__10376, singles, multi, this$__$1) {
      return function iter__10377(s__10378) {
        return new cljs.core.LazySeq(null, function(vec__10376, singles, multi, this$__$1) {
          return function() {
            var s__10378__$1 = s__10378;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__10378__$1);
              if (temp__4126__auto__) {
                var s__10378__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__10378__$2)) {
                  var c__4276__auto__ = cljs.core.chunk_first.call(null, s__10378__$2);
                  var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                  var b__10380 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                  if (function() {
                    var i__10379 = 0;
                    while (true) {
                      if (i__10379 < size__4277__auto__) {
                        var s = cljs.core._nth.call(null, c__4276__auto__, i__10379);
                        cljs.core.chunk_append.call(null, b__10380, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, schema.core.subschema_walker.call(null, s.schema)], null));
                        var G__10395 = i__10379 + 1;
                        i__10379 = G__10395;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10380), iter__10377.call(null, cljs.core.chunk_rest.call(null, s__10378__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10380), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__10378__$2);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, schema.core.subschema_walker.call(null, s.schema)], null), iter__10377.call(null, cljs.core.rest.call(null, s__10378__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(vec__10376, singles, multi, this$__$1), null, null);
      };
    }(vec__10376, singles, multi, this$__$1);
    return iter__4278__auto__.call(null, singles);
  }());
  var multi_walker = cljs.core.truth_(multi) ? schema.core.subschema_walker.call(null, multi) : null;
  var err_conj = schema.utils.result_builder.call(null, function(vec__10376, singles, multi, single_walkers, multi_walker, this$__$1) {
    return function(m) {
      return cljs.core.vec.call(null, cljs.core.repeat.call(null, cljs.core.count.call(null, m), null));
    };
  }(vec__10376, singles, multi, single_walkers, multi_walker, this$__$1));
  return function(vec__10376, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
    return function(x) {
      var or__3553__auto__ = x == null || cljs.core.sequential_QMARK_.call(null, x) ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(vec__10376, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "sequential?", "sequential?", 1102351463, null));
        };
      }(vec__10376, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null));
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        var single_walkers__$1 = single_walkers;
        var x__$1 = x;
        var out = cljs.core.PersistentVector.EMPTY;
        while (true) {
          var temp__4124__auto__ = cljs.core.first.call(null, single_walkers__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var vec__10381 = temp__4124__auto__;
            var first_single = cljs.core.nth.call(null, vec__10381, 0, null);
            var single_walker = cljs.core.nth.call(null, vec__10381, 1, null);
            if (cljs.core.empty_QMARK_.call(null, x__$1)) {
              if (cljs.core.truth_(first_single.optional_QMARK_)) {
                return out;
              } else {
                return err_conj.call(null, out, schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first, single_walkers__$1)), null, new cljs.core.Delay(function(single_walkers__$1, x__$1, out, vec__10381, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__10376, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                  return function() {
                    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "present?", "present?", -1810613791, null), function() {
                      var iter__4278__auto__ = function(single_walkers__$1, x__$1, out, vec__10381, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__10376, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                        return function iter__10382(s__10383) {
                          return new cljs.core.LazySeq(null, function(single_walkers__$1, x__$1, out, vec__10381, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__10376, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                            return function() {
                              var s__10383__$1 = s__10383;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq.call(null, s__10383__$1);
                                if (temp__4126__auto__) {
                                  var s__10383__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__10383__$2)) {
                                    var c__4276__auto__ = cljs.core.chunk_first.call(null, s__10383__$2);
                                    var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                    var b__10385 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                    if (function() {
                                      var i__10384 = 0;
                                      while (true) {
                                        if (i__10384 < size__4277__auto__) {
                                          var vec__10388 = cljs.core._nth.call(null, c__4276__auto__, i__10384);
                                          var single = cljs.core.nth.call(null, vec__10388, 0, null);
                                          if (cljs.core.not.call(null, single.optional_QMARK_)) {
                                            cljs.core.chunk_append.call(null, b__10385, single.name);
                                            var G__10396 = i__10384 + 1;
                                            i__10384 = G__10396;
                                            continue;
                                          } else {
                                            return null;
                                          }
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10385), iter__10382.call(null, cljs.core.chunk_rest.call(null, s__10383__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10385), null);
                                    }
                                  } else {
                                    var vec__10389 = cljs.core.first.call(null, s__10383__$2);
                                    var single = cljs.core.nth.call(null, vec__10389, 0, null);
                                    if (cljs.core.not.call(null, single.optional_QMARK_)) {
                                      return cljs.core.cons.call(null, single.name, iter__10382.call(null, cljs.core.rest.call(null, s__10383__$2)));
                                    } else {
                                      return null;
                                    }
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(single_walkers__$1, x__$1, out, vec__10381, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__10376, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null, null);
                        };
                      }(single_walkers__$1, x__$1, out, vec__10381, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__10376, singles, multi, single_walkers, multi_walker, err_conj, this$__$1);
                      return iter__4278__auto__.call(null, single_walkers__$1);
                    }());
                  };
                }(single_walkers__$1, x__$1, out, vec__10381, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__10376, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null)));
              }
            } else {
              var G__10397 = cljs.core.next.call(null, single_walkers__$1);
              var G__10398 = cljs.core.rest.call(null, x__$1);
              var G__10399 = err_conj.call(null, out, schema.utils.wrap_error_name.call(null, first_single.name, single_walker.call(null, cljs.core.first.call(null, x__$1))));
              single_walkers__$1 = G__10397;
              x__$1 = G__10398;
              out = G__10399;
              continue;
            }
          } else {
            if (cljs.core.truth_(multi)) {
              return cljs.core.reduce.call(null, err_conj, out, cljs.core.map.call(null, multi_walker, x__$1));
            } else {
              if (cljs.core.seq.call(null, x__$1)) {
                return err_conj.call(null, out, schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, null, x__$1, new cljs.core.Delay(function(single_walkers__$1, x__$1, out, temp__4124__auto__, or__3553__auto__, vec__10376, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                  return function() {
                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, x__$1)), new cljs.core.Symbol(null, "has-extra-elts?", "has-extra-elts?", -1376562869, null));
                  };
                }(single_walkers__$1, x__$1, out, temp__4124__auto__, or__3553__auto__, vec__10376, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null)));
              } else {
                return out;
              }
            }
          }
          break;
        }
      }
    };
  }(vec__10376, singles, multi, single_walkers, multi_walker, err_conj, this$__$1);
};
cljs.core.PersistentVector.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  var vec__10390 = schema.core.parse_sequence_schema.call(null, this$__$1);
  var singles = cljs.core.nth.call(null, vec__10390, 0, null);
  var multi = cljs.core.nth.call(null, vec__10390, 1, null);
  return cljs.core.vec.call(null, cljs.core.concat.call(null, function() {
    var iter__4278__auto__ = function(vec__10390, singles, multi, this$__$1) {
      return function iter__10391(s__10392) {
        return new cljs.core.LazySeq(null, function(vec__10390, singles, multi, this$__$1) {
          return function() {
            var s__10392__$1 = s__10392;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__10392__$1);
              if (temp__4126__auto__) {
                var s__10392__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__10392__$2)) {
                  var c__4276__auto__ = cljs.core.chunk_first.call(null, s__10392__$2);
                  var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                  var b__10394 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                  if (function() {
                    var i__10393 = 0;
                    while (true) {
                      if (i__10393 < size__4277__auto__) {
                        var s = cljs.core._nth.call(null, c__4276__auto__, i__10393);
                        cljs.core.chunk_append.call(null, b__10394, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(s)), schema.core.explain.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(s))), cljs.core.truth_(s.optional_QMARK_) ? new cljs.core.Symbol(null, "optional", "optional", -600484260, null) : 
                        new cljs.core.Symbol(null, "one", "one", -1719427865, null)));
                        var G__10400 = i__10393 + 1;
                        i__10393 = G__10400;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10394), iter__10391.call(null, cljs.core.chunk_rest.call(null, s__10392__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10394), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__10392__$2);
                  return cljs.core.cons.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(s)), schema.core.explain.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(s))), cljs.core.truth_(s.optional_QMARK_) ? new cljs.core.Symbol(null, "optional", "optional", -600484260, null) : new cljs.core.Symbol(null, 
                  "one", "one", -1719427865, null)), iter__10391.call(null, cljs.core.rest.call(null, s__10392__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(vec__10390, singles, multi, this$__$1), null, null);
      };
    }(vec__10390, singles, multi, this$__$1);
    return iter__4278__auto__.call(null, singles);
  }(), cljs.core.truth_(multi) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain.call(null, multi)], null) : null));
};
schema.core.pair = function pair(first_schema, first_name, second_schema, second_name) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, first_schema, first_name), schema.core.one.call(null, second_schema, second_name)], null);
};
schema.core.Record = function(klass, schema, __meta, __extmap) {
  this.klass = klass;
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Record.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Record.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10402, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10404 = k10402 instanceof cljs.core.Keyword ? k10402.fqn : null;
  switch(G__10404) {
    case "schema":
      return self__.schema;
      break;
    case "klass":
      return self__.klass;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10402, else__4142__auto__);
  }
};
schema.core.Record.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Record{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), self__.klass], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Record.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Record(self__.klass, self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Record.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Record.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Record.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Record.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "klass", "klass", -1386752349), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Record(self__.klass, self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Record.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10401) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10405 = cljs.core.keyword_identical_QMARK_;
  var expr__10406 = k__4147__auto__;
  if (cljs.core.truth_(pred__10405.call(null, new cljs.core.Keyword(null, "klass", "klass", -1386752349), expr__10406))) {
    return new schema.core.Record(G__10401, self__.schema, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__10405.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__10406))) {
      return new schema.core.Record(self__.klass, G__10401, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Record(self__.klass, self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10401), null);
    }
  }
};
schema.core.Record.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), self__.klass], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10401) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Record(self__.klass, self__.schema, G__10401, self__.__extmap, self__.__hash);
};
schema.core.Record.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Record.prototype.schema$core$Schema$ = true;
schema.core.Record.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var map_checker = schema.core.subschema_walker.call(null, self__.schema);
  var pred_checker = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "extra-validator-fn", "extra-validator-fn", 1562905865)).cljs$core$IFn$_invoke$arity$1(this$__$1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var evf = temp__4126__auto__;
      return schema.core.subschema_walker.call(null, schema.core.pred.call(null, evf));
    } else {
      return null;
    }
  }();
  return function(map_checker, pred_checker, this$__$1) {
    return function(r) {
      var or__3553__auto__ = r instanceof self__.klass ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, r, new cljs.core.Delay(function(map_checker, pred_checker, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, r)), self__.klass), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
        };
      }(map_checker, pred_checker, this$__$1), null), null));
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        var res = map_checker.call(null, r);
        if (schema.utils.error_QMARK_.call(null, res)) {
          return res;
        } else {
          var pred_res = cljs.core.truth_(pred_checker) ? pred_checker.call(null, r) : null;
          if (schema.utils.error_QMARK_.call(null, pred_res)) {
            return pred_res;
          } else {
            return cljs.core.merge.call(null, r, res);
          }
        }
      }
    };
  }(map_checker, pred_checker, this$__$1);
};
schema.core.Record.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), cljs.core.symbol.call(null, cljs.core.pr_str.call(null, self__.klass))), new cljs.core.Symbol(null, "record", "record", 861424668, null));
};
schema.core.Record.cljs$lang$type = true;
schema.core.Record.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Record");
};
schema.core.Record.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Record");
};
schema.core.__GT_Record = function __GT_Record(klass, schema__$1) {
  return new schema.core.Record(klass, schema__$1);
};
schema.core.map__GT_Record = function map__GT_Record(G__10403) {
  return new schema.core.Record((new cljs.core.Keyword(null, "klass", "klass", -1386752349)).cljs$core$IFn$_invoke$arity$1(G__10403), (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__10403), null, cljs.core.dissoc.call(null, G__10403, new cljs.core.Keyword(null, "klass", "klass", -1386752349), new cljs.core.Keyword(null, "schema", "schema", -1582001791)));
};
schema.core.record = function record(klass, schema__$1) {
  if (cljs.core.map_QMARK_.call(null, schema__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Expected map, got %s", schema.utils.type_of.call(null, schema__$1)));
  }
  return new schema.core.Record(klass, schema__$1);
};
schema.core.explain_input_schema = function explain_input_schema(input_schema) {
  var vec__10412 = cljs.core.split_with.call(null, function(p1__10409_SHARP_) {
    return p1__10409_SHARP_ instanceof schema.core.One;
  }, input_schema);
  var required = cljs.core.nth.call(null, vec__10412, 0, null);
  var more = cljs.core.nth.call(null, vec__10412, 1, null);
  return cljs.core.concat.call(null, cljs.core.map.call(null, function(vec__10412, required, more) {
    return function(p1__10410_SHARP_) {
      return schema.core.explain.call(null, p1__10410_SHARP_.schema);
    };
  }(vec__10412, required, more), required), cljs.core.seq.call(null, more) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), cljs.core.mapv.call(null, schema.core.explain, more)], null) : null);
};
schema.core.FnSchema = function(output_schema, input_schemas, __meta, __extmap) {
  this.output_schema = output_schema;
  this.input_schemas = input_schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.FnSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.FnSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k10414, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__10416 = k10414 instanceof cljs.core.Keyword ? k10414.fqn : null;
  switch(G__10416) {
    case "input-schemas":
      return self__.input_schemas;
      break;
    case "output-schema":
      return self__.output_schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k10414, else__4142__auto__);
  }
};
schema.core.FnSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.FnSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), self__.output_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), self__.input_schemas], null)], null), self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.FnSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.FnSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.FnSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.FnSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.FnSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), null, new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.FnSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__10413) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__10417 = cljs.core.keyword_identical_QMARK_;
  var expr__10418 = k__4147__auto__;
  if (cljs.core.truth_(pred__10417.call(null, new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), expr__10418))) {
    return new schema.core.FnSchema(G__10413, self__.input_schemas, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__10417.call(null, new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), expr__10418))) {
      return new schema.core.FnSchema(self__.output_schema, G__10413, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__10413), null);
    }
  }
};
schema.core.FnSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), self__.output_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), self__.input_schemas], 
  null)], null), self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__10413) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, G__10413, self__.__extmap, self__.__hash);
};
schema.core.FnSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.FnSchema.prototype.schema$core$Schema$ = true;
schema.core.FnSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.fn_QMARK_.call(null, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.FnSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.input_schemas) > 1) {
    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "\x3d\x3e*", "\x3d\x3e*", 1909690043, null), schema.core.explain.call(null, self__.output_schema), cljs.core.map.call(null, schema.core.explain_input_schema, self__.input_schemas));
  } else {
    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "\x3d\x3e", "\x3d\x3e", -813269641, null), schema.core.explain.call(null, self__.output_schema), schema.core.explain_input_schema.call(null, cljs.core.first.call(null, self__.input_schemas)));
  }
};
schema.core.FnSchema.cljs$lang$type = true;
schema.core.FnSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/FnSchema");
};
schema.core.FnSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/FnSchema");
};
schema.core.__GT_FnSchema = function __GT_FnSchema(output_schema, input_schemas) {
  return new schema.core.FnSchema(output_schema, input_schemas);
};
schema.core.map__GT_FnSchema = function map__GT_FnSchema(G__10415) {
  return new schema.core.FnSchema((new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137)).cljs$core$IFn$_invoke$arity$1(G__10415), (new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)).cljs$core$IFn$_invoke$arity$1(G__10415), null, cljs.core.dissoc.call(null, G__10415, new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)));
};
schema.core.arity = function arity(input_schema) {
  if (cljs.core.seq.call(null, input_schema)) {
    if (cljs.core.last.call(null, input_schema) instanceof schema.core.One) {
      return cljs.core.count.call(null, input_schema);
    } else {
      return Number.MAX_VALUE;
    }
  } else {
    return 0;
  }
};
schema.core.make_fn_schema = function make_fn_schema(output_schema, input_schemas) {
  if (cljs.core.seq.call(null, input_schemas)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Function must have at least one input schema"));
  }
  if (cljs.core.every_QMARK_.call(null, cljs.core.vector_QMARK_, input_schemas)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Each arity must be a vector."));
  }
  if (cljs.core.truth_(cljs.core.apply.call(null, cljs.core.distinct_QMARK_, cljs.core.map.call(null, schema.core.arity, input_schemas)))) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Arities must be distinct"));
  }
  return new schema.core.FnSchema(output_schema, cljs.core.sort_by.call(null, schema.core.arity, input_schemas));
};
schema.core.fn_validation_QMARK_ = function fn_validation_QMARK_() {
  return schema.utils.use_fn_validation.get_cell();
};
schema.core.set_fn_validation_BANG_ = function set_fn_validation_BANG_(on_QMARK_) {
  return schema.utils.use_fn_validation.set_cell(on_QMARK_);
};
schema.core.schematize_fn = function schematize_fn(f, schema__$1) {
  return cljs.core.vary_meta.call(null, f, cljs.core.assoc, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1);
};
schema.core.fn_schema = function fn_schema(f) {
  if (cljs.core.fn_QMARK_.call(null, f)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Non-function %s", schema.utils.type_of.call(null, f)));
  }
  var or__3553__auto__ = schema.utils.class_schema.call(null, schema.utils.fn_schema_bearer.call(null, f));
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    var m__5890__auto__ = cljs.core.meta.call(null, f);
    var k__5891__auto__ = new cljs.core.Keyword(null, "schema", "schema", -1582001791);
    var temp__4124__auto__ = cljs.core.find.call(null, m__5890__auto__, k__5891__auto__);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var pair__5892__auto__ = temp__4124__auto__;
      return cljs.core.val.call(null, pair__5892__auto__);
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Key %s not found in %s", k__5891__auto__, m__5890__auto__));
    }
  }
};
schema.core.schema_with_name = function schema_with_name(schema__$1, name) {
  return cljs.core.with_meta.call(null, schema__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), name], null));
};
schema.core.schema_name = function schema_name(schema__$1) {
  return(new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, schema__$1));
};
goog.provide("plumbing.fnk.schema");
goog.require("cljs.core");
goog.require("schema.utils");
goog.require("schema.utils");
goog.require("schema.core");
goog.require("schema.core");
plumbing.fnk.schema.Schema = cljs.core.with_meta.call(null, schema.core.__GT_Protocol.call(null, schema.core.Schema), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "proto-sym", "proto-sym", -886371734), new cljs.core.Symbol("s", "Schema", "s/Schema", -1305723789, null), new cljs.core.Keyword(null, "proto-pred", "proto-pred", 1885698716), function(p1__5998__5999__auto__) {
  var G__9849 = p1__5998__5999__auto__;
  if (G__9849) {
    var bit__4203__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3553__auto__ = bit__4203__auto__;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return G__9849.schema$core$Schema$;
      }
    }())) {
      return true;
    } else {
      if (!G__9849.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, schema.core.Schema, G__9849);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, schema.core.Schema, G__9849);
  }
}], null));
plumbing.fnk.schema.InputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.either.call(null, schema.core.eq.call(null, schema.core.Keyword), schema.core.OptionalKey, schema.core.Keyword), plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.OutputSchema = plumbing.fnk.schema.Schema;
plumbing.fnk.schema.IOSchemata = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.OutputSchema, new cljs.core.Symbol(null, "output", "output", 534662484, null))], null);
plumbing.fnk.schema.GraphInputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.either.call(null, schema.core.OptionalKey, schema.core.Keyword), plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.MapOutputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.GraphIOSchemata = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.GraphInputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.MapOutputSchema, new cljs.core.Symbol(null, "output", "output", 534662484, null))], null);
plumbing.fnk.schema.assert_distinct = function assert_distinct(things) {
  var repeated_things = cljs.core.seq.call(null, cljs.core.filter.call(null, function(p1__9850_SHARP_) {
    return cljs.core.val.call(null, p1__9850_SHARP_) > 1;
  }, cljs.core.frequencies.call(null, things)));
  if (cljs.core.empty_QMARK_.call(null, repeated_things)) {
    return null;
  } else {
    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Got repeated items (expected distinct): %s", repeated_things));
  }
};
plumbing.fnk.schema.safe_get = function safe_get(m, k, key_path) {
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Expected a map at key-path %s, got type %s", key_path, schema.utils.type_of.call(null, m)));
  }
  var vec__9852 = cljs.core.find.call(null, m, k);
  var _ = cljs.core.nth.call(null, vec__9852, 0, null);
  var v = cljs.core.nth.call(null, vec__9852, 1, null);
  var p = vec__9852;
  if (cljs.core.truth_(p)) {
  } else {
    throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Key %s not found in %s", k, cljs.core.keys.call(null, m)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "missing-key", "missing-key", 1259209562), new cljs.core.Keyword(null, "key", "key", -1516042587), k, new cljs.core.Keyword(null, "map", "map", 1371690461), m], null));
  }
  return v;
};
plumbing.fnk.schema.non_map_union = function non_map_union(s1, s2) {
  if (cljs.core._EQ_.call(null, s1, s2)) {
    return s1;
  } else {
    if (cljs.core._EQ_.call(null, s1, schema.core.Any)) {
      return s2;
    } else {
      if (cljs.core._EQ_.call(null, s2, schema.core.Any)) {
        return s1;
      } else {
        return schema.core.both.call(null, s1, s2);
      }
    }
  }
};
plumbing.fnk.schema.non_map_diff = function non_map_diff(s1, s2) {
  return null;
};
plumbing.fnk.schema.map_schema_QMARK_ = function map_schema_QMARK_(m) {
  return m instanceof cljs.core.PersistentArrayMap || m instanceof cljs.core.PersistentHashMap;
};
var ufv___9858 = schema.utils.use_fn_validation;
var output_schema9853_9859 = schema.core.maybe.call(null, schema.core.pair.call(null, schema.core.Keyword, "k", schema.core.Bool, "optional?"));
var input_schema9854_9860 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "k", "k", -505765866, null))], null);
var input_checker9855_9861 = schema.core.checker.call(null, input_schema9854_9860);
var output_checker9856_9862 = schema.core.checker.call(null, output_schema9853_9859);
plumbing.fnk.schema.unwrap_schema_form_key = function(ufv___9858, output_schema9853_9859, input_schema9854_9860, input_checker9855_9861, output_checker9856_9862) {
  return function unwrap_schema_form_key(G__9857) {
    var validate__5968__auto__ = ufv___9858.get_cell();
    if (cljs.core.truth_(validate__5968__auto__)) {
      var args__5969__auto___9863 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__9857], null);
      var temp__4126__auto___9864 = input_checker9855_9861.call(null, args__5969__auto___9863);
      if (cljs.core.truth_(temp__4126__auto___9864)) {
        var error__5970__auto___9865 = temp__4126__auto___9864;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "unwrap-schema-form-key", "unwrap-schema-form-key", -300088791, null), cljs.core.pr_str.call(null, error__5970__auto___9865)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema9854_9860, new cljs.core.Keyword(null, "value", "value", 305978217), args__5969__auto___9863, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5970__auto___9865], null));
      } else {
      }
    } else {
    }
    var o__5971__auto__ = function() {
      var k = G__9857;
      while (true) {
        if (schema.core.specific_key_QMARK_.call(null, k)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.required_key_QMARK_.call(null, k)], null);
        } else {
          if (cljs.core.sequential_QMARK_.call(null, k) && !cljs.core.vector_QMARK_.call(null, k) && cljs.core._EQ_.call(null, cljs.core.count.call(null, k), 2) && cljs.core._EQ_.call(null, cljs.core.first.call(null, k), new cljs.core.Symbol("schema.core", "optional-key", "schema.core/optional-key", -170069547, null))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, k), false], null);
          } else {
            return null;
          }
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__5968__auto__)) {
      var temp__4126__auto___9866 = output_checker9856_9862.call(null, o__5971__auto__);
      if (cljs.core.truth_(temp__4126__auto___9866)) {
        var error__5970__auto___9867 = temp__4126__auto___9866;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "unwrap-schema-form-key", "unwrap-schema-form-key", -300088791, null), cljs.core.pr_str.call(null, error__5970__auto___9867)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema9853_9859, new cljs.core.Keyword(null, "value", "value", 305978217), o__5971__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5970__auto___9867], null));
      } else {
      }
    } else {
    }
    return o__5971__auto__;
  };
}(ufv___9858, output_schema9853_9859, input_schema9854_9860, input_checker9855_9861, output_checker9856_9862);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.unwrap_schema_form_key), schema.core.make_fn_schema.call(null, output_schema9853_9859, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema9854_9860], null)));
var ufv___9873 = schema.utils.use_fn_validation;
var output_schema9868_9874 = schema.core.Any;
var input_schema9869_9875 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "s", "s", -948495851, null))], null);
var input_checker9870_9876 = schema.core.checker.call(null, input_schema9869_9875);
var output_checker9871_9877 = schema.core.checker.call(null, output_schema9868_9874);
plumbing.fnk.schema.explicit_schema_key_map = function(ufv___9873, output_schema9868_9874, input_schema9869_9875, input_checker9870_9876, output_checker9871_9877) {
  return function explicit_schema_key_map(G__9872) {
    var validate__5968__auto__ = ufv___9873.get_cell();
    if (cljs.core.truth_(validate__5968__auto__)) {
      var args__5969__auto___9878 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__9872], null);
      var temp__4126__auto___9879 = input_checker9870_9876.call(null, args__5969__auto___9878);
      if (cljs.core.truth_(temp__4126__auto___9879)) {
        var error__5970__auto___9880 = temp__4126__auto___9879;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "explicit-schema-key-map", "explicit-schema-key-map", 1668953963, null), cljs.core.pr_str.call(null, error__5970__auto___9880)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema9869_9875, new cljs.core.Keyword(null, "value", "value", 305978217), args__5969__auto___9878, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5970__auto___9880], null));
      } else {
      }
    } else {
    }
    var o__5971__auto__ = function() {
      var s = G__9872;
      while (true) {
        new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Bool], true, false);
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.keep.call(null, plumbing.fnk.schema.unwrap_schema_form_key, cljs.core.keys.call(null, s)));
        break;
      }
    }();
    if (cljs.core.truth_(validate__5968__auto__)) {
      var temp__4126__auto___9881 = output_checker9871_9877.call(null, o__5971__auto__);
      if (cljs.core.truth_(temp__4126__auto___9881)) {
        var error__5970__auto___9882 = temp__4126__auto___9881;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "explicit-schema-key-map", "explicit-schema-key-map", 1668953963, null), cljs.core.pr_str.call(null, error__5970__auto___9882)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema9868_9874, new cljs.core.Keyword(null, "value", "value", 305978217), o__5971__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5970__auto___9882], null));
      } else {
      }
    } else {
    }
    return o__5971__auto__;
  };
}(ufv___9873, output_schema9868_9874, input_schema9869_9875, input_checker9870_9876, output_checker9871_9877);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.explicit_schema_key_map), schema.core.make_fn_schema.call(null, output_schema9868_9874, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema9869_9875], null)));
var ufv___9888 = schema.utils.use_fn_validation;
var output_schema9883_9889 = schema.core.Any;
var input_schema9884_9890 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Bool], true, false), new cljs.core.Symbol(null, "s", "s", -948495851, null))], null);
var input_checker9885_9891 = schema.core.checker.call(null, input_schema9884_9890);
var output_checker9886_9892 = schema.core.checker.call(null, output_schema9883_9889);
plumbing.fnk.schema.split_schema_keys = function(ufv___9888, output_schema9883_9889, input_schema9884_9890, input_checker9885_9891, output_checker9886_9892) {
  return function split_schema_keys(G__9887) {
    var validate__5968__auto__ = ufv___9888.get_cell();
    if (cljs.core.truth_(validate__5968__auto__)) {
      var args__5969__auto___9893 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__9887], null);
      var temp__4126__auto___9894 = input_checker9885_9891.call(null, args__5969__auto___9893);
      if (cljs.core.truth_(temp__4126__auto___9894)) {
        var error__5970__auto___9895 = temp__4126__auto___9894;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema-keys", "split-schema-keys", 933671594, null), cljs.core.pr_str.call(null, error__5970__auto___9895)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema9884_9890, new cljs.core.Keyword(null, "value", "value", 305978217), args__5969__auto___9893, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5970__auto___9895], null));
      } else {
      }
    } else {
    }
    var o__5971__auto__ = function() {
      var s = G__9887;
      while (true) {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "required", "required", -846788763, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "optional", "optional", -600484260, 
        null))], null);
        return cljs.core.mapv.call(null, cljs.core.partial.call(null, cljs.core.mapv, cljs.core.key), cljs.core.juxt.call(null, cljs.core.filter, cljs.core.remove).call(null, cljs.core.val, s));
        break;
      }
    }();
    if (cljs.core.truth_(validate__5968__auto__)) {
      var temp__4126__auto___9896 = output_checker9886_9892.call(null, o__5971__auto__);
      if (cljs.core.truth_(temp__4126__auto___9896)) {
        var error__5970__auto___9897 = temp__4126__auto___9896;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema-keys", "split-schema-keys", 933671594, null), cljs.core.pr_str.call(null, error__5970__auto___9897)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema9883_9889, new cljs.core.Keyword(null, "value", "value", 305978217), o__5971__auto__, new cljs.core.Keyword(null, "error", 
        "error", -978969032), error__5970__auto___9897], null));
      } else {
      }
    } else {
    }
    return o__5971__auto__;
  };
}(ufv___9888, output_schema9883_9889, input_schema9884_9890, input_checker9885_9891, output_checker9886_9892);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.split_schema_keys), schema.core.make_fn_schema.call(null, output_schema9883_9889, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema9884_9890], null)));
plumbing.fnk.schema.merge_on_with = function() {
  var merge_on_with__delegate = function(key_project, key_combine, val_combine, maps) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.vals.call(null, cljs.core.reduce.call(null, function(m, p__9901) {
      var vec__9902 = p__9901;
      var k = cljs.core.nth.call(null, vec__9902, 0, null);
      var v = cljs.core.nth.call(null, vec__9902, 1, null);
      var pk = key_project.call(null, k);
      var temp__4124__auto__ = cljs.core.get.call(null, m, pk);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__9903 = temp__4124__auto__;
        var ok = cljs.core.nth.call(null, vec__9903, 0, null);
        var ov = cljs.core.nth.call(null, vec__9903, 1, null);
        return cljs.core.assoc.call(null, m, pk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_combine.call(null, ok, k), val_combine.call(null, ov, v)], null));
      } else {
        return cljs.core.assoc.call(null, m, pk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
      }
    }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.apply.call(null, cljs.core.concat, maps))));
  };
  var merge_on_with = function(key_project, key_combine, val_combine, var_args) {
    var maps = null;
    if (arguments.length > 3) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return merge_on_with__delegate.call(this, key_project, key_combine, val_combine, maps);
  };
  merge_on_with.cljs$lang$maxFixedArity = 3;
  merge_on_with.cljs$lang$applyTo = function(arglist__9904) {
    var key_project = cljs.core.first(arglist__9904);
    arglist__9904 = cljs.core.next(arglist__9904);
    var key_combine = cljs.core.first(arglist__9904);
    arglist__9904 = cljs.core.next(arglist__9904);
    var val_combine = cljs.core.first(arglist__9904);
    var maps = cljs.core.rest(arglist__9904);
    return merge_on_with__delegate(key_project, key_combine, val_combine, maps);
  };
  merge_on_with.cljs$core$IFn$_invoke$arity$variadic = merge_on_with__delegate;
  return merge_on_with;
}();
var ufv___9912 = schema.utils.use_fn_validation;
var output_schema9906_9913 = plumbing.fnk.schema.InputSchema;
var input_schema9907_9914 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "i1", "i1", -572470430, null)), schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "i2", "i2", 850408895, null))], null);
var input_checker9908_9915 = schema.core.checker.call(null, input_schema9907_9914);
var output_checker9909_9916 = schema.core.checker.call(null, output_schema9906_9913);
plumbing.fnk.schema.union_input_schemata = function(ufv___9912, output_schema9906_9913, input_schema9907_9914, input_checker9908_9915, output_checker9909_9916) {
  return function union_input_schemata(G__9910, G__9911) {
    var validate__5968__auto__ = ufv___9912.get_cell();
    if (cljs.core.truth_(validate__5968__auto__)) {
      var args__5969__auto___9917 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__9910, G__9911], null);
      var temp__4126__auto___9918 = input_checker9908_9915.call(null, args__5969__auto___9917);
      if (cljs.core.truth_(temp__4126__auto___9918)) {
        var error__5970__auto___9919 = temp__4126__auto___9918;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "union-input-schemata", "union-input-schemata", -1338811970, null), cljs.core.pr_str.call(null, error__5970__auto___9919)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema9907_9914, new cljs.core.Keyword(null, "value", "value", 305978217), args__5969__auto___9917, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5970__auto___9919], null));
      } else {
      }
    } else {
    }
    var o__5971__auto__ = function() {
      var i1 = G__9910;
      var i2 = G__9911;
      while (true) {
        return plumbing.fnk.schema.merge_on_with.call(null, function(validate__5968__auto__, ufv___9912, output_schema9906_9913, input_schema9907_9914, input_checker9908_9915, output_checker9909_9916) {
          return function(p1__9905_SHARP_) {
            if (schema.core.specific_key_QMARK_.call(null, p1__9905_SHARP_)) {
              return schema.core.explicit_schema_key.call(null, p1__9905_SHARP_);
            } else {
              return new cljs.core.Keyword(null, "extra", "extra", 1612569067);
            }
          };
        }(validate__5968__auto__, ufv___9912, output_schema9906_9913, input_schema9907_9914, input_checker9908_9915, output_checker9909_9916), function(validate__5968__auto__, ufv___9912, output_schema9906_9913, input_schema9907_9914, input_checker9908_9915, output_checker9909_9916) {
          return function(k1, k2) {
            if (schema.core.required_key_QMARK_.call(null, k1)) {
              return k1;
            } else {
              if (schema.core.required_key_QMARK_.call(null, k2)) {
                return k2;
              } else {
                if (schema.core.optional_key_QMARK_.call(null, k1)) {
                  if (cljs.core._EQ_.call(null, k1, k2)) {
                  } else {
                    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "k1", "k1", -1701777341, null), new cljs.core.Symbol(null, "k2", "k2", -1225133949, null)))));
                  }
                  return k1;
                } else {
                  if (cljs.core._EQ_.call(null, k1, k2)) {
                    return k1;
                  } else {
                    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Only one extra schema allowed"));
                  }
                }
              }
            }
          };
        }(validate__5968__auto__, ufv___9912, output_schema9906_9913, input_schema9907_9914, input_checker9908_9915, output_checker9909_9916), function(validate__5968__auto__, ufv___9912, output_schema9906_9913, input_schema9907_9914, input_checker9908_9915, output_checker9909_9916) {
          return function(s1, s2) {
            if (plumbing.fnk.schema.map_schema_QMARK_.call(null, s1) && plumbing.fnk.schema.map_schema_QMARK_.call(null, s2)) {
              return union_input_schemata.call(null, s1, s2);
            } else {
              return plumbing.fnk.schema.non_map_union.call(null, s1, s2);
            }
          };
        }(validate__5968__auto__, ufv___9912, output_schema9906_9913, input_schema9907_9914, input_checker9908_9915, output_checker9909_9916), i1, i2);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5968__auto__)) {
      var temp__4126__auto___9920 = output_checker9909_9916.call(null, o__5971__auto__);
      if (cljs.core.truth_(temp__4126__auto___9920)) {
        var error__5970__auto___9921 = temp__4126__auto___9920;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "union-input-schemata", "union-input-schemata", -1338811970, null), cljs.core.pr_str.call(null, error__5970__auto___9921)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema9906_9913, new cljs.core.Keyword(null, "value", "value", 305978217), o__5971__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5970__auto___9921], null));
      } else {
      }
    } else {
    }
    return o__5971__auto__;
  };
}(ufv___9912, output_schema9906_9913, input_schema9907_9914, input_checker9908_9915, output_checker9909_9916);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.union_input_schemata), schema.core.make_fn_schema.call(null, output_schema9906_9913, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema9907_9914], null)));
var ufv___9927 = schema.utils.use_fn_validation;
var output_schema9922_9928 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null);
var input_schema9923_9929 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input-schema", "input-schema", 1373647181, null))], null);
var input_checker9924_9930 = schema.core.checker.call(null, input_schema9923_9929);
var output_checker9925_9931 = schema.core.checker.call(null, output_schema9922_9928);
plumbing.fnk.schema.required_toplevel_keys = function(ufv___9927, output_schema9922_9928, input_schema9923_9929, input_checker9924_9930, output_checker9925_9931) {
  return function required_toplevel_keys(G__9926) {
    var validate__5968__auto__ = ufv___9927.get_cell();
    if (cljs.core.truth_(validate__5968__auto__)) {
      var args__5969__auto___9932 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__9926], null);
      var temp__4126__auto___9933 = input_checker9924_9930.call(null, args__5969__auto___9932);
      if (cljs.core.truth_(temp__4126__auto___9933)) {
        var error__5970__auto___9934 = temp__4126__auto___9933;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "required-toplevel-keys", "required-toplevel-keys", 1052167617, null), cljs.core.pr_str.call(null, error__5970__auto___9934)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema9923_9929, new cljs.core.Keyword(null, "value", "value", 305978217), args__5969__auto___9932, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5970__auto___9934], null));
      } else {
      }
    } else {
    }
    var o__5971__auto__ = function() {
      var input_schema = G__9926;
      while (true) {
        return cljs.core.keep.call(null, function(validate__5968__auto__, ufv___9927, output_schema9922_9928, input_schema9923_9929, input_checker9924_9930, output_checker9925_9931) {
          return function(k) {
            if (schema.core.required_key_QMARK_.call(null, k)) {
              return schema.core.explicit_schema_key.call(null, k);
            } else {
              return null;
            }
          };
        }(validate__5968__auto__, ufv___9927, output_schema9922_9928, input_schema9923_9929, input_checker9924_9930, output_checker9925_9931), cljs.core.keys.call(null, input_schema));
        break;
      }
    }();
    if (cljs.core.truth_(validate__5968__auto__)) {
      var temp__4126__auto___9935 = output_checker9925_9931.call(null, o__5971__auto__);
      if (cljs.core.truth_(temp__4126__auto___9935)) {
        var error__5970__auto___9936 = temp__4126__auto___9935;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "required-toplevel-keys", "required-toplevel-keys", 1052167617, null), cljs.core.pr_str.call(null, error__5970__auto___9936)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema9922_9928, new cljs.core.Keyword(null, "value", "value", 305978217), o__5971__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5970__auto___9936], null));
      } else {
      }
    } else {
    }
    return o__5971__auto__;
  };
}(ufv___9927, output_schema9922_9928, input_schema9923_9929, input_checker9924_9930, output_checker9925_9931);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.required_toplevel_keys), schema.core.make_fn_schema.call(null, output_schema9922_9928, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema9923_9929], null)));
plumbing.fnk.schema.guess_expr_output_schema = function guess_expr_output_schema(expr) {
  if (cljs.core.map_QMARK_.call(null, expr) && cljs.core.every_QMARK_.call(null, cljs.core.keyword_QMARK_, cljs.core.keys.call(null, expr))) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
      var iter__4278__auto__ = function iter__9945(s__9946) {
        return new cljs.core.LazySeq(null, function() {
          var s__9946__$1 = s__9946;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__9946__$1);
            if (temp__4126__auto__) {
              var s__9946__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__9946__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__9946__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__9948 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__9947 = 0;
                  while (true) {
                    if (i__9947 < size__4277__auto__) {
                      var vec__9951 = cljs.core._nth.call(null, c__4276__auto__, i__9947);
                      var k = cljs.core.nth.call(null, vec__9951, 0, null);
                      var v = cljs.core.nth.call(null, vec__9951, 1, null);
                      cljs.core.chunk_append.call(null, b__9948, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, guess_expr_output_schema.call(null, v)], null));
                      var G__9953 = i__9947 + 1;
                      i__9947 = G__9953;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9948), iter__9945.call(null, cljs.core.chunk_rest.call(null, s__9946__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9948), null);
                }
              } else {
                var vec__9952 = cljs.core.first.call(null, s__9946__$2);
                var k = cljs.core.nth.call(null, vec__9952, 0, null);
                var v = cljs.core.nth.call(null, vec__9952, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, guess_expr_output_schema.call(null, v)], null), iter__9945.call(null, cljs.core.rest.call(null, s__9946__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4278__auto__.call(null, expr);
    }());
  } else {
    return new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null);
  }
};
plumbing.fnk.schema.schema_diff = function schema_diff(input_schema, output_schema) {
  if (!plumbing.fnk.schema.map_schema_QMARK_.call(null, input_schema)) {
    return plumbing.fnk.schema.non_map_diff.call(null, input_schema, output_schema);
  } else {
    if (!plumbing.fnk.schema.map_schema_QMARK_.call(null, output_schema)) {
      return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, input_schema, output_schema, new cljs.core.Delay(function() {
        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, output_schema)), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
      }, null), null));
    } else {
      return cljs.core.not_empty.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
        var iter__4278__auto__ = function iter__9962(s__9963) {
          return new cljs.core.LazySeq(null, function() {
            var s__9963__$1 = s__9963;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__9963__$1);
              if (temp__4126__auto__) {
                var s__9963__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__9963__$2)) {
                  var c__4276__auto__ = cljs.core.chunk_first.call(null, s__9963__$2);
                  var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                  var b__9965 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                  if (function() {
                    var i__9964 = 0;
                    while (true) {
                      if (i__9964 < size__4277__auto__) {
                        var vec__9968 = cljs.core._nth.call(null, c__4276__auto__, i__9964);
                        var k = cljs.core.nth.call(null, vec__9968, 0, null);
                        var v = cljs.core.nth.call(null, vec__9968, 1, null);
                        if (schema.core.specific_key_QMARK_.call(null, k)) {
                          var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                          var raw_k = schema.core.explicit_schema_key.call(null, k);
                          var present_QMARK_ = cljs.core.contains_QMARK_.call(null, output_schema, raw_k);
                          if (required_QMARK_ || present_QMARK_) {
                            var fail = !present_QMARK_ ? new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null) : schema_diff.call(null, v, cljs.core.get.call(null, output_schema, raw_k));
                            if (cljs.core.truth_(fail)) {
                              cljs.core.chunk_append.call(null, b__9965, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, fail], null));
                              var G__9970 = i__9964 + 1;
                              i__9964 = G__9970;
                              continue;
                            } else {
                              var G__9971 = i__9964 + 1;
                              i__9964 = G__9971;
                              continue;
                            }
                          } else {
                            var G__9972 = i__9964 + 1;
                            i__9964 = G__9972;
                            continue;
                          }
                        } else {
                          var G__9973 = i__9964 + 1;
                          i__9964 = G__9973;
                          continue;
                        }
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9965), iter__9962.call(null, cljs.core.chunk_rest.call(null, s__9963__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9965), null);
                  }
                } else {
                  var vec__9969 = cljs.core.first.call(null, s__9963__$2);
                  var k = cljs.core.nth.call(null, vec__9969, 0, null);
                  var v = cljs.core.nth.call(null, vec__9969, 1, null);
                  if (schema.core.specific_key_QMARK_.call(null, k)) {
                    var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                    var raw_k = schema.core.explicit_schema_key.call(null, k);
                    var present_QMARK_ = cljs.core.contains_QMARK_.call(null, output_schema, raw_k);
                    if (required_QMARK_ || present_QMARK_) {
                      var fail = !present_QMARK_ ? new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null) : schema_diff.call(null, v, cljs.core.get.call(null, output_schema, raw_k));
                      if (cljs.core.truth_(fail)) {
                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, fail], null), iter__9962.call(null, cljs.core.rest.call(null, s__9963__$2)));
                      } else {
                        var G__9974 = cljs.core.rest.call(null, s__9963__$2);
                        s__9963__$1 = G__9974;
                        continue;
                      }
                    } else {
                      var G__9975 = cljs.core.rest.call(null, s__9963__$2);
                      s__9963__$1 = G__9975;
                      continue;
                    }
                  } else {
                    var G__9976 = cljs.core.rest.call(null, s__9963__$2);
                    s__9963__$1 = G__9976;
                    continue;
                  }
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__4278__auto__.call(null, input_schema);
      }()));
    }
  }
};
plumbing.fnk.schema.assert_satisfies_schema = function assert_satisfies_schema(input_schema, output_schema) {
  var fails = plumbing.fnk.schema.schema_diff.call(null, input_schema, output_schema);
  if (cljs.core.truth_(fails)) {
    throw cljs.core.ex_info.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(fails), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "does-not-satisfy-schema", "does-not-satisfy-schema", -1543152824), new cljs.core.Keyword(null, "failures", "failures", -912916356), fails], null));
  } else {
    return null;
  }
};
var ufv___9999 = schema.utils.use_fn_validation;
var output_schema9977_10000 = schema.core.Any;
var input_schema9978_10001 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.IOSchemata, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.MapOutputSchema, 
new cljs.core.Symbol(null, "output", "output", 534662484, null))], null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null))], null);
var input_checker9979_10002 = schema.core.checker.call(null, input_schema9978_10001);
var output_checker9980_10003 = schema.core.checker.call(null, output_schema9977_10000);
plumbing.fnk.schema.compose_schemata = function(ufv___9999, output_schema9977_10000, input_schema9978_10001, input_checker9979_10002, output_checker9980_10003) {
  return function compose_schemata(G__9981, G__9982) {
    var validate__5968__auto__ = true;
    if (validate__5968__auto__) {
      var args__5969__auto___10004 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__9981, G__9982], null);
      var temp__4126__auto___10005 = input_checker9979_10002.call(null, args__5969__auto___10004);
      if (cljs.core.truth_(temp__4126__auto___10005)) {
        var error__5970__auto___10006 = temp__4126__auto___10005;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "compose-schemata", "compose-schemata", 918607729, null), cljs.core.pr_str.call(null, error__5970__auto___10006)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema9978_10001, new cljs.core.Keyword(null, "value", "value", 305978217), args__5969__auto___10004, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5970__auto___10006], null));
      } else {
      }
    } else {
    }
    var o__5971__auto__ = function() {
      var G__9993 = G__9981;
      var vec__9995 = G__9993;
      var i2 = cljs.core.nth.call(null, vec__9995, 0, null);
      var o2 = cljs.core.nth.call(null, vec__9995, 1, null);
      var G__9994 = G__9982;
      var vec__9996 = G__9994;
      var i1 = cljs.core.nth.call(null, vec__9996, 0, null);
      var o1 = cljs.core.nth.call(null, vec__9996, 1, null);
      var G__9993__$1 = G__9993;
      var G__9994__$1 = G__9994;
      while (true) {
        var vec__9997 = G__9993__$1;
        var i2__$1 = cljs.core.nth.call(null, vec__9997, 0, null);
        var o2__$1 = cljs.core.nth.call(null, vec__9997, 1, null);
        var vec__9998 = G__9994__$1;
        var i1__$1 = cljs.core.nth.call(null, vec__9998, 0, null);
        var o1__$1 = cljs.core.nth.call(null, vec__9998, 1, null);
        plumbing.fnk.schema.assert_satisfies_schema.call(null, cljs.core.select_keys.call(null, i2__$1, cljs.core.keys.call(null, o1__$1)), o1__$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [plumbing.fnk.schema.union_input_schemata.call(null, cljs.core.apply.call(null, cljs.core.dissoc, i2__$1, cljs.core.concat.call(null, cljs.core.keys.call(null, o1__$1), cljs.core.map.call(null, schema.core.optional_key, cljs.core.keys.call(null, o1__$1)))), i1__$1), o2__$1], null);
        break;
      }
    }();
    if (validate__5968__auto__) {
      var temp__4126__auto___10007 = output_checker9980_10003.call(null, o__5971__auto__);
      if (cljs.core.truth_(temp__4126__auto___10007)) {
        var error__5970__auto___10008 = temp__4126__auto___10007;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "compose-schemata", "compose-schemata", 918607729, null), cljs.core.pr_str.call(null, error__5970__auto___10008)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema9977_10000, new cljs.core.Keyword(null, "value", "value", 305978217), o__5971__auto__, new cljs.core.Keyword(null, "error", 
        "error", -978969032), error__5970__auto___10008], null));
      } else {
      }
    } else {
    }
    return o__5971__auto__;
  };
}(ufv___9999, output_schema9977_10000, input_schema9978_10001, input_checker9979_10002, output_checker9980_10003);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.compose_schemata), schema.core.make_fn_schema.call(null, output_schema9977_10000, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema9978_10001], null)));
plumbing.fnk.schema.schema_key = function schema_key(m, k) {
  if (cljs.core.contains_QMARK_.call(null, m, k)) {
    return k;
  } else {
    if (cljs.core.contains_QMARK_.call(null, m, schema.core.optional_key.call(null, k))) {
      return schema.core.optional_key.call(null, k);
    } else {
      return null;
    }
  }
};
plumbing.fnk.schema.possibly_contains_QMARK_ = function possibly_contains_QMARK_(m, k) {
  return cljs.core.boolean$.call(null, plumbing.fnk.schema.schema_key.call(null, m, k));
};
var ufv___10087 = schema.utils.use_fn_validation;
var output_schema10009_10088 = schema.core.Any;
var input_schema10010_10089 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "s", "s", -948495851, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "ks", "ks", -754231827, null))], null);
var input_checker10011_10090 = schema.core.checker.call(null, input_schema10010_10089);
var output_checker10012_10091 = schema.core.checker.call(null, output_schema10009_10088);
plumbing.fnk.schema.split_schema = function(ufv___10087, output_schema10009_10088, input_schema10010_10089, input_checker10011_10090, output_checker10012_10091) {
  return function split_schema(G__10013, G__10014) {
    var validate__5968__auto__ = ufv___10087.get_cell();
    if (cljs.core.truth_(validate__5968__auto__)) {
      var args__5969__auto___10092 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__10013, G__10014], null);
      var temp__4126__auto___10093 = input_checker10011_10090.call(null, args__5969__auto___10092);
      if (cljs.core.truth_(temp__4126__auto___10093)) {
        var error__5970__auto___10094 = temp__4126__auto___10093;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema", "split-schema", 1859174771, null), cljs.core.pr_str.call(null, error__5970__auto___10094)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema10010_10089, new cljs.core.Keyword(null, "value", "value", 305978217), args__5969__auto___10092, new cljs.core.Keyword(null, "error", 
        "error", -978969032), error__5970__auto___10094], null));
      } else {
      }
    } else {
    }
    var o__5971__auto__ = function() {
      var s = G__10013;
      var ks = G__10014;
      while (true) {
        var ks__$1 = cljs.core.set.call(null, ks);
        var iter__4278__auto__ = function(ks__$1, validate__5968__auto__, ufv___10087, output_schema10009_10088, input_schema10010_10089, input_checker10011_10090, output_checker10012_10091) {
          return function iter__10051(s__10052) {
            return new cljs.core.LazySeq(null, function(ks__$1, validate__5968__auto__, ufv___10087, output_schema10009_10088, input_schema10010_10089, input_checker10011_10090, output_checker10012_10091) {
              return function() {
                var s__10052__$1 = s__10052;
                while (true) {
                  var temp__4126__auto__ = cljs.core.seq.call(null, s__10052__$1);
                  if (temp__4126__auto__) {
                    var s__10052__$2 = temp__4126__auto__;
                    if (cljs.core.chunked_seq_QMARK_.call(null, s__10052__$2)) {
                      var c__4276__auto__ = cljs.core.chunk_first.call(null, s__10052__$2);
                      var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                      var b__10054 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                      if (function() {
                        var i__10053 = 0;
                        while (true) {
                          if (i__10053 < size__4277__auto__) {
                            var in_QMARK_ = cljs.core._nth.call(null, c__4276__auto__, i__10053);
                            cljs.core.chunk_append.call(null, b__10054, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                              var iter__4278__auto__ = function(i__10053, in_QMARK_, c__4276__auto__, size__4277__auto__, b__10054, s__10052__$2, temp__4126__auto__, ks__$1, validate__5968__auto__, ufv___10087, output_schema10009_10088, input_schema10010_10089, input_checker10011_10090, output_checker10012_10091) {
                                return function iter__10071(s__10072) {
                                  return new cljs.core.LazySeq(null, function(i__10053, in_QMARK_, c__4276__auto__, size__4277__auto__, b__10054, s__10052__$2, temp__4126__auto__, ks__$1, validate__5968__auto__, ufv___10087, output_schema10009_10088, input_schema10010_10089, input_checker10011_10090, output_checker10012_10091) {
                                    return function() {
                                      var s__10072__$1 = s__10072;
                                      while (true) {
                                        var temp__4126__auto____$1 = cljs.core.seq.call(null, s__10072__$1);
                                        if (temp__4126__auto____$1) {
                                          var s__10072__$2 = temp__4126__auto____$1;
                                          if (cljs.core.chunked_seq_QMARK_.call(null, s__10072__$2)) {
                                            var c__4276__auto____$1 = cljs.core.chunk_first.call(null, s__10072__$2);
                                            var size__4277__auto____$1 = cljs.core.count.call(null, c__4276__auto____$1);
                                            var b__10074 = cljs.core.chunk_buffer.call(null, size__4277__auto____$1);
                                            if (function() {
                                              var i__10073 = 0;
                                              while (true) {
                                                if (i__10073 < size__4277__auto____$1) {
                                                  var vec__10077 = cljs.core._nth.call(null, c__4276__auto____$1, i__10073);
                                                  var k = cljs.core.nth.call(null, vec__10077, 0, null);
                                                  var v = cljs.core.nth.call(null, vec__10077, 1, null);
                                                  if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                                    cljs.core.chunk_append.call(null, b__10074, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                                                    var G__10095 = i__10073 + 1;
                                                    i__10073 = G__10095;
                                                    continue;
                                                  } else {
                                                    var G__10096 = i__10073 + 1;
                                                    i__10073 = G__10096;
                                                    continue;
                                                  }
                                                } else {
                                                  return true;
                                                }
                                                break;
                                              }
                                            }()) {
                                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10074), iter__10071.call(null, cljs.core.chunk_rest.call(null, s__10072__$2)));
                                            } else {
                                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10074), null);
                                            }
                                          } else {
                                            var vec__10078 = cljs.core.first.call(null, s__10072__$2);
                                            var k = cljs.core.nth.call(null, vec__10078, 0, null);
                                            var v = cljs.core.nth.call(null, vec__10078, 1, null);
                                            if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__10071.call(null, cljs.core.rest.call(null, s__10072__$2)));
                                            } else {
                                              var G__10097 = cljs.core.rest.call(null, s__10072__$2);
                                              s__10072__$1 = G__10097;
                                              continue;
                                            }
                                          }
                                        } else {
                                          return null;
                                        }
                                        break;
                                      }
                                    };
                                  }(i__10053, in_QMARK_, c__4276__auto__, size__4277__auto__, b__10054, s__10052__$2, temp__4126__auto__, ks__$1, validate__5968__auto__, ufv___10087, output_schema10009_10088, input_schema10010_10089, input_checker10011_10090, output_checker10012_10091), null, null);
                                };
                              }(i__10053, in_QMARK_, c__4276__auto__, size__4277__auto__, b__10054, s__10052__$2, temp__4126__auto__, ks__$1, validate__5968__auto__, ufv___10087, output_schema10009_10088, input_schema10010_10089, input_checker10011_10090, output_checker10012_10091);
                              return iter__4278__auto__.call(null, s);
                            }()));
                            var G__10098 = i__10053 + 1;
                            i__10053 = G__10098;
                            continue;
                          } else {
                            return true;
                          }
                          break;
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10054), iter__10051.call(null, cljs.core.chunk_rest.call(null, s__10052__$2)));
                      } else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10054), null);
                      }
                    } else {
                      var in_QMARK_ = cljs.core.first.call(null, s__10052__$2);
                      return cljs.core.cons.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4278__auto__ = function(in_QMARK_, s__10052__$2, temp__4126__auto__, ks__$1, validate__5968__auto__, ufv___10087, output_schema10009_10088, input_schema10010_10089, input_checker10011_10090, output_checker10012_10091) {
                          return function iter__10079(s__10080) {
                            return new cljs.core.LazySeq(null, function(in_QMARK_, s__10052__$2, temp__4126__auto__, ks__$1, validate__5968__auto__, ufv___10087, output_schema10009_10088, input_schema10010_10089, input_checker10011_10090, output_checker10012_10091) {
                              return function() {
                                var s__10080__$1 = s__10080;
                                while (true) {
                                  var temp__4126__auto____$1 = cljs.core.seq.call(null, s__10080__$1);
                                  if (temp__4126__auto____$1) {
                                    var s__10080__$2 = temp__4126__auto____$1;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__10080__$2)) {
                                      var c__4276__auto__ = cljs.core.chunk_first.call(null, s__10080__$2);
                                      var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                      var b__10082 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                      if (function() {
                                        var i__10081 = 0;
                                        while (true) {
                                          if (i__10081 < size__4277__auto__) {
                                            var vec__10085 = cljs.core._nth.call(null, c__4276__auto__, i__10081);
                                            var k = cljs.core.nth.call(null, vec__10085, 0, null);
                                            var v = cljs.core.nth.call(null, vec__10085, 1, null);
                                            if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                              cljs.core.chunk_append.call(null, b__10082, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                                              var G__10099 = i__10081 + 1;
                                              i__10081 = G__10099;
                                              continue;
                                            } else {
                                              var G__10100 = i__10081 + 1;
                                              i__10081 = G__10100;
                                              continue;
                                            }
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10082), iter__10079.call(null, cljs.core.chunk_rest.call(null, s__10080__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10082), null);
                                      }
                                    } else {
                                      var vec__10086 = cljs.core.first.call(null, s__10080__$2);
                                      var k = cljs.core.nth.call(null, vec__10086, 0, null);
                                      var v = cljs.core.nth.call(null, vec__10086, 1, null);
                                      if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__10079.call(null, cljs.core.rest.call(null, s__10080__$2)));
                                      } else {
                                        var G__10101 = cljs.core.rest.call(null, s__10080__$2);
                                        s__10080__$1 = G__10101;
                                        continue;
                                      }
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(in_QMARK_, s__10052__$2, temp__4126__auto__, ks__$1, validate__5968__auto__, ufv___10087, output_schema10009_10088, input_schema10010_10089, input_checker10011_10090, output_checker10012_10091), null, null);
                          };
                        }(in_QMARK_, s__10052__$2, temp__4126__auto__, ks__$1, validate__5968__auto__, ufv___10087, output_schema10009_10088, input_schema10010_10089, input_checker10011_10090, output_checker10012_10091);
                        return iter__4278__auto__.call(null, s);
                      }()), iter__10051.call(null, cljs.core.rest.call(null, s__10052__$2)));
                    }
                  } else {
                    return null;
                  }
                  break;
                }
              };
            }(ks__$1, validate__5968__auto__, ufv___10087, output_schema10009_10088, input_schema10010_10089, input_checker10011_10090, output_checker10012_10091), null, null);
          };
        }(ks__$1, validate__5968__auto__, ufv___10087, output_schema10009_10088, input_schema10010_10089, input_checker10011_10090, output_checker10012_10091);
        return iter__4278__auto__.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, false], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__5968__auto__)) {
      var temp__4126__auto___10102 = output_checker10012_10091.call(null, o__5971__auto__);
      if (cljs.core.truth_(temp__4126__auto___10102)) {
        var error__5970__auto___10103 = temp__4126__auto___10102;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema", "split-schema", 1859174771, null), cljs.core.pr_str.call(null, error__5970__auto___10103)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema10009_10088, new cljs.core.Keyword(null, "value", "value", 305978217), o__5971__auto__, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5970__auto___10103], null));
      } else {
      }
    } else {
    }
    return o__5971__auto__;
  };
}(ufv___10087, output_schema10009_10088, input_schema10010_10089, input_checker10011_10090, output_checker10012_10091);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.split_schema), schema.core.make_fn_schema.call(null, output_schema10009_10088, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema10010_10089], null)));
var ufv___10134 = schema.utils.use_fn_validation;
var output_schema10104_10135 = plumbing.fnk.schema.GraphIOSchemata;
var input_schema10105_10136 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.GraphIOSchemata, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Keyword, "key"), schema.core.one.call(null, plumbing.fnk.schema.IOSchemata, "inner-schemas")], null), new cljs.core.Symbol(null, 
"arg1", "arg1", -1702536411, null))], null);
var input_checker10106_10137 = schema.core.checker.call(null, input_schema10105_10136);
var output_checker10107_10138 = schema.core.checker.call(null, output_schema10104_10135);
plumbing.fnk.schema.sequence_schemata = function(ufv___10134, output_schema10104_10135, input_schema10105_10136, input_checker10106_10137, output_checker10107_10138) {
  return function sequence_schemata(G__10108, G__10109) {
    var validate__5968__auto__ = ufv___10134.get_cell();
    if (cljs.core.truth_(validate__5968__auto__)) {
      var args__5969__auto___10139 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__10108, G__10109], null);
      var temp__4126__auto___10140 = input_checker10106_10137.call(null, args__5969__auto___10139);
      if (cljs.core.truth_(temp__4126__auto___10140)) {
        var error__5970__auto___10141 = temp__4126__auto___10140;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "sequence-schemata", "sequence-schemata", -2061205313, null), cljs.core.pr_str.call(null, error__5970__auto___10141)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema10105_10136, new cljs.core.Keyword(null, "value", "value", 305978217), args__5969__auto___10139, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5970__auto___10141], null));
      } else {
      }
    } else {
    }
    var o__5971__auto__ = function() {
      var G__10125 = G__10108;
      var vec__10127 = G__10125;
      var i1 = cljs.core.nth.call(null, vec__10127, 0, null);
      var o1 = cljs.core.nth.call(null, vec__10127, 1, null);
      var G__10126 = G__10109;
      var vec__10128 = G__10126;
      var k = cljs.core.nth.call(null, vec__10128, 0, null);
      var vec__10129 = cljs.core.nth.call(null, vec__10128, 1, null);
      var i2 = cljs.core.nth.call(null, vec__10129, 0, null);
      var o2 = cljs.core.nth.call(null, vec__10129, 1, null);
      var G__10125__$1 = G__10125;
      var G__10126__$1 = G__10126;
      while (true) {
        var vec__10130 = G__10125__$1;
        var i1__$1 = cljs.core.nth.call(null, vec__10130, 0, null);
        var o1__$1 = cljs.core.nth.call(null, vec__10130, 1, null);
        var vec__10131 = G__10126__$1;
        var k__$1 = cljs.core.nth.call(null, vec__10131, 0, null);
        var vec__10132 = cljs.core.nth.call(null, vec__10131, 1, null);
        var i2__$1 = cljs.core.nth.call(null, vec__10132, 0, null);
        var o2__$1 = cljs.core.nth.call(null, vec__10132, 1, null);
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, i1__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Duplicate key output (possibly due to a misordered graph) %s for input %s from input %s", k__$1, schema.core.explain.call(null, i2__$1), schema.core.explain.call(null, i1__$1)));
        }
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, i2__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Node outputs a key %s in its inputs %s", k__$1, schema.core.explain.call(null, i2__$1)));
        }
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, o1__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Node outputs a duplicate key %s given inputs %s", k__$1, schema.core.explain.call(null, i1__$1)));
        }
        var vec__10133 = plumbing.fnk.schema.split_schema.call(null, i2__$1, cljs.core.keys.call(null, o1__$1));
        var used = cljs.core.nth.call(null, vec__10133, 0, null);
        var unused = cljs.core.nth.call(null, vec__10133, 1, null);
        plumbing.fnk.schema.assert_satisfies_schema.call(null, used, o1__$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [plumbing.fnk.schema.union_input_schemata.call(null, unused, i1__$1), cljs.core.assoc.call(null, o1__$1, k__$1, o2__$1)], null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5968__auto__)) {
      var temp__4126__auto___10142 = output_checker10107_10138.call(null, o__5971__auto__);
      if (cljs.core.truth_(temp__4126__auto___10142)) {
        var error__5970__auto___10143 = temp__4126__auto___10142;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "sequence-schemata", "sequence-schemata", -2061205313, null), cljs.core.pr_str.call(null, error__5970__auto___10143)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema10104_10135, new cljs.core.Keyword(null, "value", "value", 305978217), o__5971__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5970__auto___10143], null));
      } else {
      }
    } else {
    }
    return o__5971__auto__;
  };
}(ufv___10134, output_schema10104_10135, input_schema10105_10136, input_checker10106_10137, output_checker10107_10138);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.sequence_schemata), schema.core.make_fn_schema.call(null, output_schema10104_10135, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema10105_10136], null)));
goog.provide("plumbing.core");
goog.require("cljs.core");
goog.require("plumbing.fnk.schema");
goog.require("plumbing.fnk.schema");
goog.require("schema.utils");
goog.require("schema.utils");
plumbing.core._PLUS_none_PLUS_ = new cljs.core.Keyword("plumbing.core", "missing", "plumbing.core/missing", 1721767298);
plumbing.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
  };
  var update__4 = function(m, k, f, x1) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x1));
  };
  var update__5 = function(m, k, f, x1, x2) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x1, x2));
  };
  var update__6 = function() {
    var G__10435__delegate = function(m, k, f, x1, x2, xs) {
      return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), x1, x2, xs));
    };
    var G__10435 = function(m, k, f, x1, x2, var_args) {
      var xs = null;
      if (arguments.length > 5) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__10435__delegate.call(this, m, k, f, x1, x2, xs);
    };
    G__10435.cljs$lang$maxFixedArity = 5;
    G__10435.cljs$lang$applyTo = function(arglist__10436) {
      var m = cljs.core.first(arglist__10436);
      arglist__10436 = cljs.core.next(arglist__10436);
      var k = cljs.core.first(arglist__10436);
      arglist__10436 = cljs.core.next(arglist__10436);
      var f = cljs.core.first(arglist__10436);
      arglist__10436 = cljs.core.next(arglist__10436);
      var x1 = cljs.core.first(arglist__10436);
      arglist__10436 = cljs.core.next(arglist__10436);
      var x2 = cljs.core.first(arglist__10436);
      var xs = cljs.core.rest(arglist__10436);
      return G__10435__delegate(m, k, f, x1, x2, xs);
    };
    G__10435.cljs$core$IFn$_invoke$arity$variadic = G__10435__delegate;
    return G__10435;
  }();
  update = function(m, k, f, x1, x2, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x1);
      case 5:
        return update__5.call(this, m, k, f, x1, x2);
      default:
        return update__6.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x1, x2, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 5;
  update.cljs$lang$applyTo = update__6.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$variadic = update__6.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
plumbing.core.map_vals = function map_vals(f, m) {
  if (cljs.core.sorted_QMARK_.call(null, m)) {
    return cljs.core.reduce_kv.call(null, function(out_m, k, v) {
      return cljs.core.assoc.call(null, out_m, k, f.call(null, v));
    }, cljs.core.sorted_map.call(null), m);
  } else {
    if (cljs.core.map_QMARK_.call(null, m)) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(out_m, k, v) {
        return cljs.core.assoc_BANG_.call(null, out_m, k, f.call(null, v));
      }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
    } else {
      var m_atom__7469__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
      var seq__10445_10451 = cljs.core.seq.call(null, m);
      var chunk__10446_10452 = null;
      var count__10447_10453 = 0;
      var i__10448_10454 = 0;
      while (true) {
        if (i__10448_10454 < count__10447_10453) {
          var vec__10449_10455 = cljs.core._nth.call(null, chunk__10446_10452, i__10448_10454);
          var k_10456 = cljs.core.nth.call(null, vec__10449_10455, 0, null);
          var v_10457 = cljs.core.nth.call(null, vec__10449_10455, 1, null);
          var m10444_10458 = cljs.core.deref.call(null, m_atom__7469__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__7469__auto__, cljs.core.assoc_BANG_.call(null, m10444_10458, k_10456, f.call(null, v_10457)));
          var G__10459 = seq__10445_10451;
          var G__10460 = chunk__10446_10452;
          var G__10461 = count__10447_10453;
          var G__10462 = i__10448_10454 + 1;
          seq__10445_10451 = G__10459;
          chunk__10446_10452 = G__10460;
          count__10447_10453 = G__10461;
          i__10448_10454 = G__10462;
          continue;
        } else {
          var temp__4126__auto___10463 = cljs.core.seq.call(null, seq__10445_10451);
          if (temp__4126__auto___10463) {
            var seq__10445_10464__$1 = temp__4126__auto___10463;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__10445_10464__$1)) {
              var c__4309__auto___10465 = cljs.core.chunk_first.call(null, seq__10445_10464__$1);
              var G__10466 = cljs.core.chunk_rest.call(null, seq__10445_10464__$1);
              var G__10467 = c__4309__auto___10465;
              var G__10468 = cljs.core.count.call(null, c__4309__auto___10465);
              var G__10469 = 0;
              seq__10445_10451 = G__10466;
              chunk__10446_10452 = G__10467;
              count__10447_10453 = G__10468;
              i__10448_10454 = G__10469;
              continue;
            } else {
              var vec__10450_10470 = cljs.core.first.call(null, seq__10445_10464__$1);
              var k_10471 = cljs.core.nth.call(null, vec__10450_10470, 0, null);
              var v_10472 = cljs.core.nth.call(null, vec__10450_10470, 1, null);
              var m10444_10473 = cljs.core.deref.call(null, m_atom__7469__auto__);
              cljs.core.reset_BANG_.call(null, m_atom__7469__auto__, cljs.core.assoc_BANG_.call(null, m10444_10473, k_10471, f.call(null, v_10472)));
              var G__10474 = cljs.core.next.call(null, seq__10445_10464__$1);
              var G__10475 = null;
              var G__10476 = 0;
              var G__10477 = 0;
              seq__10445_10451 = G__10474;
              chunk__10446_10452 = G__10475;
              count__10447_10453 = G__10476;
              i__10448_10454 = G__10477;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7469__auto__));
    }
  }
};
plumbing.core.map_keys = function map_keys(f, m) {
  if (cljs.core.map_QMARK_.call(null, m)) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(out_m, k, v) {
      return cljs.core.assoc_BANG_.call(null, out_m, f.call(null, k), v);
    }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
  } else {
    var m_atom__7469__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
    var seq__10486_10492 = cljs.core.seq.call(null, m);
    var chunk__10487_10493 = null;
    var count__10488_10494 = 0;
    var i__10489_10495 = 0;
    while (true) {
      if (i__10489_10495 < count__10488_10494) {
        var vec__10490_10496 = cljs.core._nth.call(null, chunk__10487_10493, i__10489_10495);
        var k_10497 = cljs.core.nth.call(null, vec__10490_10496, 0, null);
        var v_10498 = cljs.core.nth.call(null, vec__10490_10496, 1, null);
        var m10485_10499 = cljs.core.deref.call(null, m_atom__7469__auto__);
        cljs.core.reset_BANG_.call(null, m_atom__7469__auto__, cljs.core.assoc_BANG_.call(null, m10485_10499, f.call(null, k_10497), v_10498));
        var G__10500 = seq__10486_10492;
        var G__10501 = chunk__10487_10493;
        var G__10502 = count__10488_10494;
        var G__10503 = i__10489_10495 + 1;
        seq__10486_10492 = G__10500;
        chunk__10487_10493 = G__10501;
        count__10488_10494 = G__10502;
        i__10489_10495 = G__10503;
        continue;
      } else {
        var temp__4126__auto___10504 = cljs.core.seq.call(null, seq__10486_10492);
        if (temp__4126__auto___10504) {
          var seq__10486_10505__$1 = temp__4126__auto___10504;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__10486_10505__$1)) {
            var c__4309__auto___10506 = cljs.core.chunk_first.call(null, seq__10486_10505__$1);
            var G__10507 = cljs.core.chunk_rest.call(null, seq__10486_10505__$1);
            var G__10508 = c__4309__auto___10506;
            var G__10509 = cljs.core.count.call(null, c__4309__auto___10506);
            var G__10510 = 0;
            seq__10486_10492 = G__10507;
            chunk__10487_10493 = G__10508;
            count__10488_10494 = G__10509;
            i__10489_10495 = G__10510;
            continue;
          } else {
            var vec__10491_10511 = cljs.core.first.call(null, seq__10486_10505__$1);
            var k_10512 = cljs.core.nth.call(null, vec__10491_10511, 0, null);
            var v_10513 = cljs.core.nth.call(null, vec__10491_10511, 1, null);
            var m10485_10514 = cljs.core.deref.call(null, m_atom__7469__auto__);
            cljs.core.reset_BANG_.call(null, m_atom__7469__auto__, cljs.core.assoc_BANG_.call(null, m10485_10514, f.call(null, k_10512), v_10513));
            var G__10515 = cljs.core.next.call(null, seq__10486_10505__$1);
            var G__10516 = null;
            var G__10517 = 0;
            var G__10518 = 0;
            seq__10486_10492 = G__10515;
            chunk__10487_10493 = G__10516;
            count__10488_10494 = G__10517;
            i__10489_10495 = G__10518;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7469__auto__));
  }
};
plumbing.core.map_from_keys = function map_from_keys(f, ks) {
  var m_atom__7469__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
  var seq__10525_10529 = cljs.core.seq.call(null, ks);
  var chunk__10526_10530 = null;
  var count__10527_10531 = 0;
  var i__10528_10532 = 0;
  while (true) {
    if (i__10528_10532 < count__10527_10531) {
      var k_10533 = cljs.core._nth.call(null, chunk__10526_10530, i__10528_10532);
      var m10524_10534 = cljs.core.deref.call(null, m_atom__7469__auto__);
      cljs.core.reset_BANG_.call(null, m_atom__7469__auto__, cljs.core.assoc_BANG_.call(null, m10524_10534, k_10533, f.call(null, k_10533)));
      var G__10535 = seq__10525_10529;
      var G__10536 = chunk__10526_10530;
      var G__10537 = count__10527_10531;
      var G__10538 = i__10528_10532 + 1;
      seq__10525_10529 = G__10535;
      chunk__10526_10530 = G__10536;
      count__10527_10531 = G__10537;
      i__10528_10532 = G__10538;
      continue;
    } else {
      var temp__4126__auto___10539 = cljs.core.seq.call(null, seq__10525_10529);
      if (temp__4126__auto___10539) {
        var seq__10525_10540__$1 = temp__4126__auto___10539;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10525_10540__$1)) {
          var c__4309__auto___10541 = cljs.core.chunk_first.call(null, seq__10525_10540__$1);
          var G__10542 = cljs.core.chunk_rest.call(null, seq__10525_10540__$1);
          var G__10543 = c__4309__auto___10541;
          var G__10544 = cljs.core.count.call(null, c__4309__auto___10541);
          var G__10545 = 0;
          seq__10525_10529 = G__10542;
          chunk__10526_10530 = G__10543;
          count__10527_10531 = G__10544;
          i__10528_10532 = G__10545;
          continue;
        } else {
          var k_10546 = cljs.core.first.call(null, seq__10525_10540__$1);
          var m10524_10547 = cljs.core.deref.call(null, m_atom__7469__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__7469__auto__, cljs.core.assoc_BANG_.call(null, m10524_10547, k_10546, f.call(null, k_10546)));
          var G__10548 = cljs.core.next.call(null, seq__10525_10540__$1);
          var G__10549 = null;
          var G__10550 = 0;
          var G__10551 = 0;
          seq__10525_10529 = G__10548;
          chunk__10526_10530 = G__10549;
          count__10527_10531 = G__10550;
          i__10528_10532 = G__10551;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7469__auto__));
};
plumbing.core.map_from_vals = function map_from_vals(f, vs) {
  var m_atom__7469__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
  var seq__10558_10562 = cljs.core.seq.call(null, vs);
  var chunk__10559_10563 = null;
  var count__10560_10564 = 0;
  var i__10561_10565 = 0;
  while (true) {
    if (i__10561_10565 < count__10560_10564) {
      var v_10566 = cljs.core._nth.call(null, chunk__10559_10563, i__10561_10565);
      var m10557_10567 = cljs.core.deref.call(null, m_atom__7469__auto__);
      cljs.core.reset_BANG_.call(null, m_atom__7469__auto__, cljs.core.assoc_BANG_.call(null, m10557_10567, f.call(null, v_10566), v_10566));
      var G__10568 = seq__10558_10562;
      var G__10569 = chunk__10559_10563;
      var G__10570 = count__10560_10564;
      var G__10571 = i__10561_10565 + 1;
      seq__10558_10562 = G__10568;
      chunk__10559_10563 = G__10569;
      count__10560_10564 = G__10570;
      i__10561_10565 = G__10571;
      continue;
    } else {
      var temp__4126__auto___10572 = cljs.core.seq.call(null, seq__10558_10562);
      if (temp__4126__auto___10572) {
        var seq__10558_10573__$1 = temp__4126__auto___10572;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10558_10573__$1)) {
          var c__4309__auto___10574 = cljs.core.chunk_first.call(null, seq__10558_10573__$1);
          var G__10575 = cljs.core.chunk_rest.call(null, seq__10558_10573__$1);
          var G__10576 = c__4309__auto___10574;
          var G__10577 = cljs.core.count.call(null, c__4309__auto___10574);
          var G__10578 = 0;
          seq__10558_10562 = G__10575;
          chunk__10559_10563 = G__10576;
          count__10560_10564 = G__10577;
          i__10561_10565 = G__10578;
          continue;
        } else {
          var v_10579 = cljs.core.first.call(null, seq__10558_10573__$1);
          var m10557_10580 = cljs.core.deref.call(null, m_atom__7469__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__7469__auto__, cljs.core.assoc_BANG_.call(null, m10557_10580, f.call(null, v_10579), v_10579));
          var G__10581 = cljs.core.next.call(null, seq__10558_10573__$1);
          var G__10582 = null;
          var G__10583 = 0;
          var G__10584 = 0;
          seq__10558_10562 = G__10581;
          chunk__10559_10563 = G__10582;
          count__10560_10564 = G__10583;
          i__10561_10565 = G__10584;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7469__auto__));
};
plumbing.core.dissoc_in = function dissoc_in(m, p__10585) {
  var vec__10587 = p__10585;
  var k = cljs.core.nth.call(null, vec__10587, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__10587, 1);
  if (cljs.core.truth_(m)) {
    var temp__4124__auto__ = function() {
      var and__3541__auto__ = ks;
      if (and__3541__auto__) {
        return dissoc_in.call(null, m.call(null, k), ks);
      } else {
        return and__3541__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var res = temp__4124__auto__;
      return cljs.core.assoc.call(null, m, k, res);
    } else {
      var res = cljs.core.dissoc.call(null, m, k);
      if (cljs.core.empty_QMARK_.call(null, res)) {
        return null;
      } else {
        return res;
      }
    }
  } else {
    return null;
  }
};
plumbing.core.keywordize_map = function keywordize_map(x) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    var m_atom__7469__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
    var seq__10596_10602 = cljs.core.seq.call(null, x);
    var chunk__10597_10603 = null;
    var count__10598_10604 = 0;
    var i__10599_10605 = 0;
    while (true) {
      if (i__10599_10605 < count__10598_10604) {
        var vec__10600_10606 = cljs.core._nth.call(null, chunk__10597_10603, i__10599_10605);
        var k_10607 = cljs.core.nth.call(null, vec__10600_10606, 0, null);
        var v_10608 = cljs.core.nth.call(null, vec__10600_10606, 1, null);
        var m10595_10609 = cljs.core.deref.call(null, m_atom__7469__auto__);
        cljs.core.reset_BANG_.call(null, m_atom__7469__auto__, cljs.core.assoc_BANG_.call(null, m10595_10609, typeof k_10607 === "string" ? cljs.core.keyword.call(null, k_10607) : k_10607, keywordize_map.call(null, v_10608)));
        var G__10610 = seq__10596_10602;
        var G__10611 = chunk__10597_10603;
        var G__10612 = count__10598_10604;
        var G__10613 = i__10599_10605 + 1;
        seq__10596_10602 = G__10610;
        chunk__10597_10603 = G__10611;
        count__10598_10604 = G__10612;
        i__10599_10605 = G__10613;
        continue;
      } else {
        var temp__4126__auto___10614 = cljs.core.seq.call(null, seq__10596_10602);
        if (temp__4126__auto___10614) {
          var seq__10596_10615__$1 = temp__4126__auto___10614;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__10596_10615__$1)) {
            var c__4309__auto___10616 = cljs.core.chunk_first.call(null, seq__10596_10615__$1);
            var G__10617 = cljs.core.chunk_rest.call(null, seq__10596_10615__$1);
            var G__10618 = c__4309__auto___10616;
            var G__10619 = cljs.core.count.call(null, c__4309__auto___10616);
            var G__10620 = 0;
            seq__10596_10602 = G__10617;
            chunk__10597_10603 = G__10618;
            count__10598_10604 = G__10619;
            i__10599_10605 = G__10620;
            continue;
          } else {
            var vec__10601_10621 = cljs.core.first.call(null, seq__10596_10615__$1);
            var k_10622 = cljs.core.nth.call(null, vec__10601_10621, 0, null);
            var v_10623 = cljs.core.nth.call(null, vec__10601_10621, 1, null);
            var m10595_10624 = cljs.core.deref.call(null, m_atom__7469__auto__);
            cljs.core.reset_BANG_.call(null, m_atom__7469__auto__, cljs.core.assoc_BANG_.call(null, m10595_10624, typeof k_10622 === "string" ? cljs.core.keyword.call(null, k_10622) : k_10622, keywordize_map.call(null, v_10623)));
            var G__10625 = cljs.core.next.call(null, seq__10596_10615__$1);
            var G__10626 = null;
            var G__10627 = 0;
            var G__10628 = 0;
            seq__10596_10602 = G__10625;
            chunk__10597_10603 = G__10626;
            count__10598_10604 = G__10627;
            i__10599_10605 = G__10628;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7469__auto__));
  } else {
    if (cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.map.call(null, keywordize_map, x);
    } else {
      if (cljs.core.vector_QMARK_.call(null, x)) {
        return cljs.core.mapv.call(null, keywordize_map, x);
      } else {
        return x;
      }
    }
  }
};
plumbing.core.safe_get = function safe_get(m, k) {
  var temp__4124__auto__ = cljs.core.find.call(null, m, k);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var pair__7538__auto__ = temp__4124__auto__;
    return cljs.core.val.call(null, pair__7538__auto__);
  } else {
    var e = schema.utils.format_STAR_.call(null, "Key %s not found in %s", k, cljs.core.mapv.call(null, cljs.core.key, m));
    throw new Error(e);
  }
};
plumbing.core.safe_get_in = function safe_get_in(m, ks) {
  while (true) {
    if (cljs.core.seq.call(null, ks)) {
      var G__10629 = plumbing.core.safe_get.call(null, m, cljs.core.first.call(null, ks));
      var G__10630 = cljs.core.next.call(null, ks);
      m = G__10629;
      ks = G__10630;
      continue;
    } else {
      return m;
    }
    break;
  }
};
plumbing.core.assoc_when = function() {
  var assoc_when__delegate = function(m, kvs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null))))));
    }
    return cljs.core.into.call(null, function() {
      var or__3553__auto__ = m;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), function() {
      var iter__4278__auto__ = function iter__10639(s__10640) {
        return new cljs.core.LazySeq(null, function() {
          var s__10640__$1 = s__10640;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__10640__$1);
            if (temp__4126__auto__) {
              var s__10640__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__10640__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__10640__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__10642 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__10641 = 0;
                  while (true) {
                    if (i__10641 < size__4277__auto__) {
                      var vec__10645 = cljs.core._nth.call(null, c__4276__auto__, i__10641);
                      var k = cljs.core.nth.call(null, vec__10645, 0, null);
                      var v = cljs.core.nth.call(null, vec__10645, 1, null);
                      if (cljs.core.truth_(v)) {
                        cljs.core.chunk_append.call(null, b__10642, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                        var G__10647 = i__10641 + 1;
                        i__10641 = G__10647;
                        continue;
                      } else {
                        var G__10648 = i__10641 + 1;
                        i__10641 = G__10648;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10642), iter__10639.call(null, cljs.core.chunk_rest.call(null, s__10640__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10642), null);
                }
              } else {
                var vec__10646 = cljs.core.first.call(null, s__10640__$2);
                var k = cljs.core.nth.call(null, vec__10646, 0, null);
                var v = cljs.core.nth.call(null, vec__10646, 1, null);
                if (cljs.core.truth_(v)) {
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__10639.call(null, cljs.core.rest.call(null, s__10640__$2)));
                } else {
                  var G__10649 = cljs.core.rest.call(null, s__10640__$2);
                  s__10640__$1 = G__10649;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4278__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
    }());
  };
  var assoc_when = function(m, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return assoc_when__delegate.call(this, m, kvs);
  };
  assoc_when.cljs$lang$maxFixedArity = 1;
  assoc_when.cljs$lang$applyTo = function(arglist__10650) {
    var m = cljs.core.first(arglist__10650);
    var kvs = cljs.core.rest(arglist__10650);
    return assoc_when__delegate(m, kvs);
  };
  assoc_when.cljs$core$IFn$_invoke$arity$variadic = assoc_when__delegate;
  return assoc_when;
}();
plumbing.core.update_in_when = function() {
  var update_in_when__delegate = function(m, key_seq, f, args) {
    var found = cljs.core.get_in.call(null, m, key_seq, plumbing.core._PLUS_none_PLUS_);
    if (!(plumbing.core._PLUS_none_PLUS_ === found)) {
      return cljs.core.assoc_in.call(null, m, key_seq, cljs.core.apply.call(null, f, found, args));
    } else {
      return m;
    }
  };
  var update_in_when = function(m, key_seq, f, var_args) {
    var args = null;
    if (arguments.length > 3) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return update_in_when__delegate.call(this, m, key_seq, f, args);
  };
  update_in_when.cljs$lang$maxFixedArity = 3;
  update_in_when.cljs$lang$applyTo = function(arglist__10651) {
    var m = cljs.core.first(arglist__10651);
    arglist__10651 = cljs.core.next(arglist__10651);
    var key_seq = cljs.core.first(arglist__10651);
    arglist__10651 = cljs.core.next(arglist__10651);
    var f = cljs.core.first(arglist__10651);
    var args = cljs.core.rest(arglist__10651);
    return update_in_when__delegate(m, key_seq, f, args);
  };
  update_in_when.cljs$core$IFn$_invoke$arity$variadic = update_in_when__delegate;
  return update_in_when;
}();
plumbing.core.grouped_map = function grouped_map(key_fn, map_fn, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = key_fn.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), map_fn.call(null, x)));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
plumbing.core.aconcat = function aconcat(s) {
  return cljs.core.concat.call(null, new cljs.core.LazySeq(null, function() {
    return cljs.core.first.call(null, s);
  }, null, null), new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.next.call(null, s);
    if (temp__4126__auto__) {
      var n = temp__4126__auto__;
      return aconcat.call(null, n);
    } else {
      return null;
    }
  }, null, null));
};
plumbing.core.unchunk = function unchunk(s) {
  if (cljs.core.seq.call(null, s)) {
    return cljs.core.cons.call(null, cljs.core.first.call(null, s), new cljs.core.LazySeq(null, function() {
      return unchunk.call(null, cljs.core.rest.call(null, s));
    }, null, null));
  } else {
    return null;
  }
};
plumbing.core.sum = function() {
  var sum = null;
  var sum__1 = function(xs) {
    return cljs.core.reduce.call(null, cljs.core._PLUS_, xs);
  };
  var sum__2 = function(f, xs) {
    return cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, f, xs));
  };
  sum = function(f, xs) {
    switch(arguments.length) {
      case 1:
        return sum__1.call(this, f);
      case 2:
        return sum__2.call(this, f, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sum.cljs$core$IFn$_invoke$arity$1 = sum__1;
  sum.cljs$core$IFn$_invoke$arity$2 = sum__2;
  return sum;
}();
plumbing.core.singleton = function singleton(xs) {
  var temp__4126__auto__ = cljs.core.seq.call(null, xs);
  if (temp__4126__auto__) {
    var xs__$1 = temp__4126__auto__;
    if (cljs.core.next.call(null, xs__$1)) {
      return null;
    } else {
      return cljs.core.first.call(null, xs__$1);
    }
  } else {
    return null;
  }
};
plumbing.core.indexed = function indexed(s) {
  return cljs.core.map_indexed.call(null, cljs.core.vector, s);
};
plumbing.core.positions = function positions(f, s) {
  return cljs.core.keep_indexed.call(null, function(i, x) {
    if (cljs.core.truth_(f.call(null, x))) {
      return i;
    } else {
      return null;
    }
  }, s);
};
plumbing.core.distinct_by = function distinct_by(f, xs) {
  var s = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
  var iter__4278__auto__ = function(s) {
    return function iter__10656(s__10657) {
      return new cljs.core.LazySeq(null, function(s) {
        return function() {
          var s__10657__$1 = s__10657;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__10657__$1);
            if (temp__4126__auto__) {
              var s__10657__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__10657__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__10657__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__10659 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__10658 = 0;
                  while (true) {
                    if (i__10658 < size__4277__auto__) {
                      var x = cljs.core._nth.call(null, c__4276__auto__, i__10658);
                      var id = f.call(null, x);
                      if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, s), id)) {
                        cljs.core.chunk_append.call(null, b__10659, function() {
                          cljs.core.swap_BANG_.call(null, s, cljs.core.conj, id);
                          return x;
                        }());
                        var G__10660 = i__10658 + 1;
                        i__10658 = G__10660;
                        continue;
                      } else {
                        var G__10661 = i__10658 + 1;
                        i__10658 = G__10661;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10659), iter__10656.call(null, cljs.core.chunk_rest.call(null, s__10657__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10659), null);
                }
              } else {
                var x = cljs.core.first.call(null, s__10657__$2);
                var id = f.call(null, x);
                if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, s), id)) {
                  return cljs.core.cons.call(null, function() {
                    cljs.core.swap_BANG_.call(null, s, cljs.core.conj, id);
                    return x;
                  }(), iter__10656.call(null, cljs.core.rest.call(null, s__10657__$2)));
                } else {
                  var G__10662 = cljs.core.rest.call(null, s__10657__$2);
                  s__10657__$1 = G__10662;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        };
      }(s), null, null);
    };
  }(s);
  return iter__4278__auto__.call(null, xs);
};
plumbing.core.interleave_all = function() {
  var interleave_all__delegate = function(colls) {
    return new cljs.core.LazySeq(null, function() {
      return function helper(seqs) {
        if (cljs.core.seq.call(null, seqs)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, seqs), new cljs.core.LazySeq(null, function() {
            return helper.call(null, cljs.core.keep.call(null, cljs.core.next, seqs));
          }, null, null));
        } else {
          return null;
        }
      }.call(null, cljs.core.keep.call(null, cljs.core.seq, colls));
    }, null, null);
  };
  var interleave_all = function(var_args) {
    var colls = null;
    if (arguments.length > 0) {
      colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return interleave_all__delegate.call(this, colls);
  };
  interleave_all.cljs$lang$maxFixedArity = 0;
  interleave_all.cljs$lang$applyTo = function(arglist__10663) {
    var colls = cljs.core.seq(arglist__10663);
    return interleave_all__delegate(colls);
  };
  interleave_all.cljs$core$IFn$_invoke$arity$variadic = interleave_all__delegate;
  return interleave_all;
}();
plumbing.core.count_when = function count_when(pred, xs) {
  return cljs.core.count.call(null, cljs.core.filter.call(null, pred, xs));
};
plumbing.core.conj_when = function() {
  var conj_when = null;
  var conj_when__2 = function(coll, x) {
    if (cljs.core.truth_(x)) {
      return cljs.core.conj.call(null, coll, x);
    } else {
      return coll;
    }
  };
  var conj_when__3 = function() {
    var G__10664__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__10665 = conj_when.call(null, coll, x);
          var G__10666 = cljs.core.first.call(null, xs);
          var G__10667 = cljs.core.next.call(null, xs);
          coll = G__10665;
          x = G__10666;
          xs = G__10667;
          continue;
        } else {
          return conj_when.call(null, coll, x);
        }
        break;
      }
    };
    var G__10664 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10664__delegate.call(this, coll, x, xs);
    };
    G__10664.cljs$lang$maxFixedArity = 2;
    G__10664.cljs$lang$applyTo = function(arglist__10668) {
      var coll = cljs.core.first(arglist__10668);
      arglist__10668 = cljs.core.next(arglist__10668);
      var x = cljs.core.first(arglist__10668);
      var xs = cljs.core.rest(arglist__10668);
      return G__10664__delegate(coll, x, xs);
    };
    G__10664.cljs$core$IFn$_invoke$arity$variadic = G__10664__delegate;
    return G__10664;
  }();
  conj_when = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj_when__2.call(this, coll, x);
      default:
        return conj_when__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_when.cljs$lang$maxFixedArity = 2;
  conj_when.cljs$lang$applyTo = conj_when__3.cljs$lang$applyTo;
  conj_when.cljs$core$IFn$_invoke$arity$2 = conj_when__2;
  conj_when.cljs$core$IFn$_invoke$arity$variadic = conj_when__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_when;
}();
plumbing.core.cons_when = function cons_when(x, s) {
  if (cljs.core.truth_(x)) {
    return cljs.core.cons.call(null, x, s);
  } else {
    return s;
  }
};
plumbing.core.rsort_by = cljs.core.comp.call(null, cljs.core.reverse, cljs.core.sort_by);
plumbing.core.swap_pair_BANG_ = function() {
  var swap_pair_BANG_ = null;
  var swap_pair_BANG___2 = function(a, f) {
    while (true) {
      var old_val = cljs.core.deref.call(null, a);
      var new_val = f.call(null, old_val);
      if (cljs.core.compare_and_set_BANG_.call(null, a, old_val, new_val)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_val, new_val], null);
      } else {
        continue;
      }
      break;
    }
  };
  var swap_pair_BANG___3 = function() {
    var G__10670__delegate = function(a, f, args) {
      return swap_pair_BANG_.call(null, a, function(p1__10669_SHARP_) {
        return cljs.core.apply.call(null, f, p1__10669_SHARP_, args);
      });
    };
    var G__10670 = function(a, f, var_args) {
      var args = null;
      if (arguments.length > 2) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10670__delegate.call(this, a, f, args);
    };
    G__10670.cljs$lang$maxFixedArity = 2;
    G__10670.cljs$lang$applyTo = function(arglist__10671) {
      var a = cljs.core.first(arglist__10671);
      arglist__10671 = cljs.core.next(arglist__10671);
      var f = cljs.core.first(arglist__10671);
      var args = cljs.core.rest(arglist__10671);
      return G__10670__delegate(a, f, args);
    };
    G__10670.cljs$core$IFn$_invoke$arity$variadic = G__10670__delegate;
    return G__10670;
  }();
  swap_pair_BANG_ = function(a, f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return swap_pair_BANG___2.call(this, a, f);
      default:
        return swap_pair_BANG___3.cljs$core$IFn$_invoke$arity$variadic(a, f, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_pair_BANG_.cljs$lang$maxFixedArity = 2;
  swap_pair_BANG_.cljs$lang$applyTo = swap_pair_BANG___3.cljs$lang$applyTo;
  swap_pair_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_pair_BANG___2;
  swap_pair_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_pair_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return swap_pair_BANG_;
}();
plumbing.core.get_and_set_BANG_ = function get_and_set_BANG_(a, new_val) {
  return cljs.core.first.call(null, plumbing.core.swap_pair_BANG_.call(null, a, cljs.core.constantly.call(null, new_val)));
};
plumbing.core.millis = function millis() {
  return(new Date).getTime();
};
plumbing.core.mapply = function() {
  var mapply = null;
  var mapply__2 = function(f, m) {
    return cljs.core.apply.call(null, f, cljs.core.apply.call(null, cljs.core.concat, m));
  };
  var mapply__3 = function() {
    var G__10672__delegate = function(f, arg, args) {
      return cljs.core.apply.call(null, f, arg, cljs.core.concat.call(null, cljs.core.butlast.call(null, args), cljs.core.apply.call(null, cljs.core.concat, cljs.core.last.call(null, args))));
    };
    var G__10672 = function(f, arg, var_args) {
      var args = null;
      if (arguments.length > 2) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10672__delegate.call(this, f, arg, args);
    };
    G__10672.cljs$lang$maxFixedArity = 2;
    G__10672.cljs$lang$applyTo = function(arglist__10673) {
      var f = cljs.core.first(arglist__10673);
      arglist__10673 = cljs.core.next(arglist__10673);
      var arg = cljs.core.first(arglist__10673);
      var args = cljs.core.rest(arglist__10673);
      return G__10672__delegate(f, arg, args);
    };
    G__10672.cljs$core$IFn$_invoke$arity$variadic = G__10672__delegate;
    return G__10672;
  }();
  mapply = function(f, arg, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return mapply__2.call(this, f, arg);
      default:
        return mapply__3.cljs$core$IFn$_invoke$arity$variadic(f, arg, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapply.cljs$lang$maxFixedArity = 2;
  mapply.cljs$lang$applyTo = mapply__3.cljs$lang$applyTo;
  mapply.cljs$core$IFn$_invoke$arity$2 = mapply__2;
  mapply.cljs$core$IFn$_invoke$arity$variadic = mapply__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapply;
}();
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var a = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__12277) {
    var opts__9406__auto__ = cljs.core.first(arglist__12277);
    var children__9407__auto__ = cljs.core.rest(arglist__12277);
    return a__delegate(opts__9406__auto__, children__9407__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var abbr = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__12278) {
    var opts__9406__auto__ = cljs.core.first(arglist__12278);
    var children__9407__auto__ = cljs.core.rest(arglist__12278);
    return abbr__delegate(opts__9406__auto__, children__9407__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var address = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__12279) {
    var opts__9406__auto__ = cljs.core.first(arglist__12279);
    var children__9407__auto__ = cljs.core.rest(arglist__12279);
    return address__delegate(opts__9406__auto__, children__9407__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var area = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__12280) {
    var opts__9406__auto__ = cljs.core.first(arglist__12280);
    var children__9407__auto__ = cljs.core.rest(arglist__12280);
    return area__delegate(opts__9406__auto__, children__9407__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var article = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__12281) {
    var opts__9406__auto__ = cljs.core.first(arglist__12281);
    var children__9407__auto__ = cljs.core.rest(arglist__12281);
    return article__delegate(opts__9406__auto__, children__9407__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var aside = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__12282) {
    var opts__9406__auto__ = cljs.core.first(arglist__12282);
    var children__9407__auto__ = cljs.core.rest(arglist__12282);
    return aside__delegate(opts__9406__auto__, children__9407__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var audio = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__12283) {
    var opts__9406__auto__ = cljs.core.first(arglist__12283);
    var children__9407__auto__ = cljs.core.rest(arglist__12283);
    return audio__delegate(opts__9406__auto__, children__9407__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var b = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__12284) {
    var opts__9406__auto__ = cljs.core.first(arglist__12284);
    var children__9407__auto__ = cljs.core.rest(arglist__12284);
    return b__delegate(opts__9406__auto__, children__9407__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var base = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__12285) {
    var opts__9406__auto__ = cljs.core.first(arglist__12285);
    var children__9407__auto__ = cljs.core.rest(arglist__12285);
    return base__delegate(opts__9406__auto__, children__9407__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var bdi = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__12286) {
    var opts__9406__auto__ = cljs.core.first(arglist__12286);
    var children__9407__auto__ = cljs.core.rest(arglist__12286);
    return bdi__delegate(opts__9406__auto__, children__9407__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var bdo = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__12287) {
    var opts__9406__auto__ = cljs.core.first(arglist__12287);
    var children__9407__auto__ = cljs.core.rest(arglist__12287);
    return bdo__delegate(opts__9406__auto__, children__9407__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var big = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__12288) {
    var opts__9406__auto__ = cljs.core.first(arglist__12288);
    var children__9407__auto__ = cljs.core.rest(arglist__12288);
    return big__delegate(opts__9406__auto__, children__9407__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var blockquote = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__12289) {
    var opts__9406__auto__ = cljs.core.first(arglist__12289);
    var children__9407__auto__ = cljs.core.rest(arglist__12289);
    return blockquote__delegate(opts__9406__auto__, children__9407__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var body = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__12290) {
    var opts__9406__auto__ = cljs.core.first(arglist__12290);
    var children__9407__auto__ = cljs.core.rest(arglist__12290);
    return body__delegate(opts__9406__auto__, children__9407__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var br = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__12291) {
    var opts__9406__auto__ = cljs.core.first(arglist__12291);
    var children__9407__auto__ = cljs.core.rest(arglist__12291);
    return br__delegate(opts__9406__auto__, children__9407__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var button = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__12292) {
    var opts__9406__auto__ = cljs.core.first(arglist__12292);
    var children__9407__auto__ = cljs.core.rest(arglist__12292);
    return button__delegate(opts__9406__auto__, children__9407__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var canvas = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__12293) {
    var opts__9406__auto__ = cljs.core.first(arglist__12293);
    var children__9407__auto__ = cljs.core.rest(arglist__12293);
    return canvas__delegate(opts__9406__auto__, children__9407__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var caption = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__12294) {
    var opts__9406__auto__ = cljs.core.first(arglist__12294);
    var children__9407__auto__ = cljs.core.rest(arglist__12294);
    return caption__delegate(opts__9406__auto__, children__9407__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var cite = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__12295) {
    var opts__9406__auto__ = cljs.core.first(arglist__12295);
    var children__9407__auto__ = cljs.core.rest(arglist__12295);
    return cite__delegate(opts__9406__auto__, children__9407__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var code = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__12296) {
    var opts__9406__auto__ = cljs.core.first(arglist__12296);
    var children__9407__auto__ = cljs.core.rest(arglist__12296);
    return code__delegate(opts__9406__auto__, children__9407__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var col = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__12297) {
    var opts__9406__auto__ = cljs.core.first(arglist__12297);
    var children__9407__auto__ = cljs.core.rest(arglist__12297);
    return col__delegate(opts__9406__auto__, children__9407__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var colgroup = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__12298) {
    var opts__9406__auto__ = cljs.core.first(arglist__12298);
    var children__9407__auto__ = cljs.core.rest(arglist__12298);
    return colgroup__delegate(opts__9406__auto__, children__9407__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var data = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__12299) {
    var opts__9406__auto__ = cljs.core.first(arglist__12299);
    var children__9407__auto__ = cljs.core.rest(arglist__12299);
    return data__delegate(opts__9406__auto__, children__9407__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var datalist = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__12300) {
    var opts__9406__auto__ = cljs.core.first(arglist__12300);
    var children__9407__auto__ = cljs.core.rest(arglist__12300);
    return datalist__delegate(opts__9406__auto__, children__9407__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var dd = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__12301) {
    var opts__9406__auto__ = cljs.core.first(arglist__12301);
    var children__9407__auto__ = cljs.core.rest(arglist__12301);
    return dd__delegate(opts__9406__auto__, children__9407__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var del = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__12302) {
    var opts__9406__auto__ = cljs.core.first(arglist__12302);
    var children__9407__auto__ = cljs.core.rest(arglist__12302);
    return del__delegate(opts__9406__auto__, children__9407__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var dfn = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__12303) {
    var opts__9406__auto__ = cljs.core.first(arglist__12303);
    var children__9407__auto__ = cljs.core.rest(arglist__12303);
    return dfn__delegate(opts__9406__auto__, children__9407__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var div = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__12304) {
    var opts__9406__auto__ = cljs.core.first(arglist__12304);
    var children__9407__auto__ = cljs.core.rest(arglist__12304);
    return div__delegate(opts__9406__auto__, children__9407__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var dl = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__12305) {
    var opts__9406__auto__ = cljs.core.first(arglist__12305);
    var children__9407__auto__ = cljs.core.rest(arglist__12305);
    return dl__delegate(opts__9406__auto__, children__9407__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var dt = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__12306) {
    var opts__9406__auto__ = cljs.core.first(arglist__12306);
    var children__9407__auto__ = cljs.core.rest(arglist__12306);
    return dt__delegate(opts__9406__auto__, children__9407__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var em = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__12307) {
    var opts__9406__auto__ = cljs.core.first(arglist__12307);
    var children__9407__auto__ = cljs.core.rest(arglist__12307);
    return em__delegate(opts__9406__auto__, children__9407__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var embed = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__12308) {
    var opts__9406__auto__ = cljs.core.first(arglist__12308);
    var children__9407__auto__ = cljs.core.rest(arglist__12308);
    return embed__delegate(opts__9406__auto__, children__9407__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var fieldset = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__12309) {
    var opts__9406__auto__ = cljs.core.first(arglist__12309);
    var children__9407__auto__ = cljs.core.rest(arglist__12309);
    return fieldset__delegate(opts__9406__auto__, children__9407__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var figcaption = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__12310) {
    var opts__9406__auto__ = cljs.core.first(arglist__12310);
    var children__9407__auto__ = cljs.core.rest(arglist__12310);
    return figcaption__delegate(opts__9406__auto__, children__9407__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var figure = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__12311) {
    var opts__9406__auto__ = cljs.core.first(arglist__12311);
    var children__9407__auto__ = cljs.core.rest(arglist__12311);
    return figure__delegate(opts__9406__auto__, children__9407__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var footer = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__12312) {
    var opts__9406__auto__ = cljs.core.first(arglist__12312);
    var children__9407__auto__ = cljs.core.rest(arglist__12312);
    return footer__delegate(opts__9406__auto__, children__9407__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var form = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__12313) {
    var opts__9406__auto__ = cljs.core.first(arglist__12313);
    var children__9407__auto__ = cljs.core.rest(arglist__12313);
    return form__delegate(opts__9406__auto__, children__9407__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var h1 = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__12314) {
    var opts__9406__auto__ = cljs.core.first(arglist__12314);
    var children__9407__auto__ = cljs.core.rest(arglist__12314);
    return h1__delegate(opts__9406__auto__, children__9407__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var h2 = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__12315) {
    var opts__9406__auto__ = cljs.core.first(arglist__12315);
    var children__9407__auto__ = cljs.core.rest(arglist__12315);
    return h2__delegate(opts__9406__auto__, children__9407__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var h3 = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__12316) {
    var opts__9406__auto__ = cljs.core.first(arglist__12316);
    var children__9407__auto__ = cljs.core.rest(arglist__12316);
    return h3__delegate(opts__9406__auto__, children__9407__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var h4 = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__12317) {
    var opts__9406__auto__ = cljs.core.first(arglist__12317);
    var children__9407__auto__ = cljs.core.rest(arglist__12317);
    return h4__delegate(opts__9406__auto__, children__9407__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var h5 = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__12318) {
    var opts__9406__auto__ = cljs.core.first(arglist__12318);
    var children__9407__auto__ = cljs.core.rest(arglist__12318);
    return h5__delegate(opts__9406__auto__, children__9407__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var h6 = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__12319) {
    var opts__9406__auto__ = cljs.core.first(arglist__12319);
    var children__9407__auto__ = cljs.core.rest(arglist__12319);
    return h6__delegate(opts__9406__auto__, children__9407__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var head = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__12320) {
    var opts__9406__auto__ = cljs.core.first(arglist__12320);
    var children__9407__auto__ = cljs.core.rest(arglist__12320);
    return head__delegate(opts__9406__auto__, children__9407__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var header = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__12321) {
    var opts__9406__auto__ = cljs.core.first(arglist__12321);
    var children__9407__auto__ = cljs.core.rest(arglist__12321);
    return header__delegate(opts__9406__auto__, children__9407__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var hr = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__12322) {
    var opts__9406__auto__ = cljs.core.first(arglist__12322);
    var children__9407__auto__ = cljs.core.rest(arglist__12322);
    return hr__delegate(opts__9406__auto__, children__9407__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var html = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__12323) {
    var opts__9406__auto__ = cljs.core.first(arglist__12323);
    var children__9407__auto__ = cljs.core.rest(arglist__12323);
    return html__delegate(opts__9406__auto__, children__9407__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var i = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__12324) {
    var opts__9406__auto__ = cljs.core.first(arglist__12324);
    var children__9407__auto__ = cljs.core.rest(arglist__12324);
    return i__delegate(opts__9406__auto__, children__9407__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var iframe = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__12325) {
    var opts__9406__auto__ = cljs.core.first(arglist__12325);
    var children__9407__auto__ = cljs.core.rest(arglist__12325);
    return iframe__delegate(opts__9406__auto__, children__9407__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var img = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__12326) {
    var opts__9406__auto__ = cljs.core.first(arglist__12326);
    var children__9407__auto__ = cljs.core.rest(arglist__12326);
    return img__delegate(opts__9406__auto__, children__9407__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var ins = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__12327) {
    var opts__9406__auto__ = cljs.core.first(arglist__12327);
    var children__9407__auto__ = cljs.core.rest(arglist__12327);
    return ins__delegate(opts__9406__auto__, children__9407__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var kbd = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__12328) {
    var opts__9406__auto__ = cljs.core.first(arglist__12328);
    var children__9407__auto__ = cljs.core.rest(arglist__12328);
    return kbd__delegate(opts__9406__auto__, children__9407__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var keygen = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__12329) {
    var opts__9406__auto__ = cljs.core.first(arglist__12329);
    var children__9407__auto__ = cljs.core.rest(arglist__12329);
    return keygen__delegate(opts__9406__auto__, children__9407__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var label = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__12330) {
    var opts__9406__auto__ = cljs.core.first(arglist__12330);
    var children__9407__auto__ = cljs.core.rest(arglist__12330);
    return label__delegate(opts__9406__auto__, children__9407__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var legend = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__12331) {
    var opts__9406__auto__ = cljs.core.first(arglist__12331);
    var children__9407__auto__ = cljs.core.rest(arglist__12331);
    return legend__delegate(opts__9406__auto__, children__9407__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var li = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__12332) {
    var opts__9406__auto__ = cljs.core.first(arglist__12332);
    var children__9407__auto__ = cljs.core.rest(arglist__12332);
    return li__delegate(opts__9406__auto__, children__9407__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var link = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__12333) {
    var opts__9406__auto__ = cljs.core.first(arglist__12333);
    var children__9407__auto__ = cljs.core.rest(arglist__12333);
    return link__delegate(opts__9406__auto__, children__9407__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var main = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__12334) {
    var opts__9406__auto__ = cljs.core.first(arglist__12334);
    var children__9407__auto__ = cljs.core.rest(arglist__12334);
    return main__delegate(opts__9406__auto__, children__9407__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var map = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__12335) {
    var opts__9406__auto__ = cljs.core.first(arglist__12335);
    var children__9407__auto__ = cljs.core.rest(arglist__12335);
    return map__delegate(opts__9406__auto__, children__9407__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var mark = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__12336) {
    var opts__9406__auto__ = cljs.core.first(arglist__12336);
    var children__9407__auto__ = cljs.core.rest(arglist__12336);
    return mark__delegate(opts__9406__auto__, children__9407__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var menu = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__12337) {
    var opts__9406__auto__ = cljs.core.first(arglist__12337);
    var children__9407__auto__ = cljs.core.rest(arglist__12337);
    return menu__delegate(opts__9406__auto__, children__9407__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var menuitem = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__12338) {
    var opts__9406__auto__ = cljs.core.first(arglist__12338);
    var children__9407__auto__ = cljs.core.rest(arglist__12338);
    return menuitem__delegate(opts__9406__auto__, children__9407__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var meta = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__12339) {
    var opts__9406__auto__ = cljs.core.first(arglist__12339);
    var children__9407__auto__ = cljs.core.rest(arglist__12339);
    return meta__delegate(opts__9406__auto__, children__9407__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var meter = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__12340) {
    var opts__9406__auto__ = cljs.core.first(arglist__12340);
    var children__9407__auto__ = cljs.core.rest(arglist__12340);
    return meter__delegate(opts__9406__auto__, children__9407__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var nav = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__12341) {
    var opts__9406__auto__ = cljs.core.first(arglist__12341);
    var children__9407__auto__ = cljs.core.rest(arglist__12341);
    return nav__delegate(opts__9406__auto__, children__9407__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var noscript = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__12342) {
    var opts__9406__auto__ = cljs.core.first(arglist__12342);
    var children__9407__auto__ = cljs.core.rest(arglist__12342);
    return noscript__delegate(opts__9406__auto__, children__9407__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var object = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__12343) {
    var opts__9406__auto__ = cljs.core.first(arglist__12343);
    var children__9407__auto__ = cljs.core.rest(arglist__12343);
    return object__delegate(opts__9406__auto__, children__9407__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var ol = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__12344) {
    var opts__9406__auto__ = cljs.core.first(arglist__12344);
    var children__9407__auto__ = cljs.core.rest(arglist__12344);
    return ol__delegate(opts__9406__auto__, children__9407__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var optgroup = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__12345) {
    var opts__9406__auto__ = cljs.core.first(arglist__12345);
    var children__9407__auto__ = cljs.core.rest(arglist__12345);
    return optgroup__delegate(opts__9406__auto__, children__9407__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var output = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__12346) {
    var opts__9406__auto__ = cljs.core.first(arglist__12346);
    var children__9407__auto__ = cljs.core.rest(arglist__12346);
    return output__delegate(opts__9406__auto__, children__9407__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var p = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__12347) {
    var opts__9406__auto__ = cljs.core.first(arglist__12347);
    var children__9407__auto__ = cljs.core.rest(arglist__12347);
    return p__delegate(opts__9406__auto__, children__9407__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var param = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__12348) {
    var opts__9406__auto__ = cljs.core.first(arglist__12348);
    var children__9407__auto__ = cljs.core.rest(arglist__12348);
    return param__delegate(opts__9406__auto__, children__9407__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var pre = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__12349) {
    var opts__9406__auto__ = cljs.core.first(arglist__12349);
    var children__9407__auto__ = cljs.core.rest(arglist__12349);
    return pre__delegate(opts__9406__auto__, children__9407__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var progress = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__12350) {
    var opts__9406__auto__ = cljs.core.first(arglist__12350);
    var children__9407__auto__ = cljs.core.rest(arglist__12350);
    return progress__delegate(opts__9406__auto__, children__9407__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var q = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__12351) {
    var opts__9406__auto__ = cljs.core.first(arglist__12351);
    var children__9407__auto__ = cljs.core.rest(arglist__12351);
    return q__delegate(opts__9406__auto__, children__9407__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var rp = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__12352) {
    var opts__9406__auto__ = cljs.core.first(arglist__12352);
    var children__9407__auto__ = cljs.core.rest(arglist__12352);
    return rp__delegate(opts__9406__auto__, children__9407__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var rt = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__12353) {
    var opts__9406__auto__ = cljs.core.first(arglist__12353);
    var children__9407__auto__ = cljs.core.rest(arglist__12353);
    return rt__delegate(opts__9406__auto__, children__9407__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var ruby = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__12354) {
    var opts__9406__auto__ = cljs.core.first(arglist__12354);
    var children__9407__auto__ = cljs.core.rest(arglist__12354);
    return ruby__delegate(opts__9406__auto__, children__9407__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var s = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__12355) {
    var opts__9406__auto__ = cljs.core.first(arglist__12355);
    var children__9407__auto__ = cljs.core.rest(arglist__12355);
    return s__delegate(opts__9406__auto__, children__9407__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var samp = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__12356) {
    var opts__9406__auto__ = cljs.core.first(arglist__12356);
    var children__9407__auto__ = cljs.core.rest(arglist__12356);
    return samp__delegate(opts__9406__auto__, children__9407__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var script = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__12357) {
    var opts__9406__auto__ = cljs.core.first(arglist__12357);
    var children__9407__auto__ = cljs.core.rest(arglist__12357);
    return script__delegate(opts__9406__auto__, children__9407__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var section = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__12358) {
    var opts__9406__auto__ = cljs.core.first(arglist__12358);
    var children__9407__auto__ = cljs.core.rest(arglist__12358);
    return section__delegate(opts__9406__auto__, children__9407__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var select = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__12359) {
    var opts__9406__auto__ = cljs.core.first(arglist__12359);
    var children__9407__auto__ = cljs.core.rest(arglist__12359);
    return select__delegate(opts__9406__auto__, children__9407__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var small = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__12360) {
    var opts__9406__auto__ = cljs.core.first(arglist__12360);
    var children__9407__auto__ = cljs.core.rest(arglist__12360);
    return small__delegate(opts__9406__auto__, children__9407__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var source = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__12361) {
    var opts__9406__auto__ = cljs.core.first(arglist__12361);
    var children__9407__auto__ = cljs.core.rest(arglist__12361);
    return source__delegate(opts__9406__auto__, children__9407__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var span = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__12362) {
    var opts__9406__auto__ = cljs.core.first(arglist__12362);
    var children__9407__auto__ = cljs.core.rest(arglist__12362);
    return span__delegate(opts__9406__auto__, children__9407__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var strong = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__12363) {
    var opts__9406__auto__ = cljs.core.first(arglist__12363);
    var children__9407__auto__ = cljs.core.rest(arglist__12363);
    return strong__delegate(opts__9406__auto__, children__9407__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var style = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__12364) {
    var opts__9406__auto__ = cljs.core.first(arglist__12364);
    var children__9407__auto__ = cljs.core.rest(arglist__12364);
    return style__delegate(opts__9406__auto__, children__9407__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var sub = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__12365) {
    var opts__9406__auto__ = cljs.core.first(arglist__12365);
    var children__9407__auto__ = cljs.core.rest(arglist__12365);
    return sub__delegate(opts__9406__auto__, children__9407__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var summary = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__12366) {
    var opts__9406__auto__ = cljs.core.first(arglist__12366);
    var children__9407__auto__ = cljs.core.rest(arglist__12366);
    return summary__delegate(opts__9406__auto__, children__9407__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var sup = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__12367) {
    var opts__9406__auto__ = cljs.core.first(arglist__12367);
    var children__9407__auto__ = cljs.core.rest(arglist__12367);
    return sup__delegate(opts__9406__auto__, children__9407__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var table = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__12368) {
    var opts__9406__auto__ = cljs.core.first(arglist__12368);
    var children__9407__auto__ = cljs.core.rest(arglist__12368);
    return table__delegate(opts__9406__auto__, children__9407__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var tbody = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__12369) {
    var opts__9406__auto__ = cljs.core.first(arglist__12369);
    var children__9407__auto__ = cljs.core.rest(arglist__12369);
    return tbody__delegate(opts__9406__auto__, children__9407__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var td = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__12370) {
    var opts__9406__auto__ = cljs.core.first(arglist__12370);
    var children__9407__auto__ = cljs.core.rest(arglist__12370);
    return td__delegate(opts__9406__auto__, children__9407__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var tfoot = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__12371) {
    var opts__9406__auto__ = cljs.core.first(arglist__12371);
    var children__9407__auto__ = cljs.core.rest(arglist__12371);
    return tfoot__delegate(opts__9406__auto__, children__9407__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var th = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__12372) {
    var opts__9406__auto__ = cljs.core.first(arglist__12372);
    var children__9407__auto__ = cljs.core.rest(arglist__12372);
    return th__delegate(opts__9406__auto__, children__9407__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var thead = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__12373) {
    var opts__9406__auto__ = cljs.core.first(arglist__12373);
    var children__9407__auto__ = cljs.core.rest(arglist__12373);
    return thead__delegate(opts__9406__auto__, children__9407__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var time = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__12374) {
    var opts__9406__auto__ = cljs.core.first(arglist__12374);
    var children__9407__auto__ = cljs.core.rest(arglist__12374);
    return time__delegate(opts__9406__auto__, children__9407__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var title = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__12375) {
    var opts__9406__auto__ = cljs.core.first(arglist__12375);
    var children__9407__auto__ = cljs.core.rest(arglist__12375);
    return title__delegate(opts__9406__auto__, children__9407__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var tr = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__12376) {
    var opts__9406__auto__ = cljs.core.first(arglist__12376);
    var children__9407__auto__ = cljs.core.rest(arglist__12376);
    return tr__delegate(opts__9406__auto__, children__9407__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var track = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__12377) {
    var opts__9406__auto__ = cljs.core.first(arglist__12377);
    var children__9407__auto__ = cljs.core.rest(arglist__12377);
    return track__delegate(opts__9406__auto__, children__9407__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var u = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__12378) {
    var opts__9406__auto__ = cljs.core.first(arglist__12378);
    var children__9407__auto__ = cljs.core.rest(arglist__12378);
    return u__delegate(opts__9406__auto__, children__9407__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var ul = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__12379) {
    var opts__9406__auto__ = cljs.core.first(arglist__12379);
    var children__9407__auto__ = cljs.core.rest(arglist__12379);
    return ul__delegate(opts__9406__auto__, children__9407__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var var$ = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__12380) {
    var opts__9406__auto__ = cljs.core.first(arglist__12380);
    var children__9407__auto__ = cljs.core.rest(arglist__12380);
    return var$__delegate(opts__9406__auto__, children__9407__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var video = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__12381) {
    var opts__9406__auto__ = cljs.core.first(arglist__12381);
    var children__9407__auto__ = cljs.core.rest(arglist__12381);
    return video__delegate(opts__9406__auto__, children__9407__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var wbr = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__12382) {
    var opts__9406__auto__ = cljs.core.first(arglist__12382);
    var children__9407__auto__ = cljs.core.rest(arglist__12382);
    return wbr__delegate(opts__9406__auto__, children__9407__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var circle = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__12383) {
    var opts__9406__auto__ = cljs.core.first(arglist__12383);
    var children__9407__auto__ = cljs.core.rest(arglist__12383);
    return circle__delegate(opts__9406__auto__, children__9407__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var ellipse = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__12384) {
    var opts__9406__auto__ = cljs.core.first(arglist__12384);
    var children__9407__auto__ = cljs.core.rest(arglist__12384);
    return ellipse__delegate(opts__9406__auto__, children__9407__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var g = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__12385) {
    var opts__9406__auto__ = cljs.core.first(arglist__12385);
    var children__9407__auto__ = cljs.core.rest(arglist__12385);
    return g__delegate(opts__9406__auto__, children__9407__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var line = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__12386) {
    var opts__9406__auto__ = cljs.core.first(arglist__12386);
    var children__9407__auto__ = cljs.core.rest(arglist__12386);
    return line__delegate(opts__9406__auto__, children__9407__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var path = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__12387) {
    var opts__9406__auto__ = cljs.core.first(arglist__12387);
    var children__9407__auto__ = cljs.core.rest(arglist__12387);
    return path__delegate(opts__9406__auto__, children__9407__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var polyline = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__12388) {
    var opts__9406__auto__ = cljs.core.first(arglist__12388);
    var children__9407__auto__ = cljs.core.rest(arglist__12388);
    return polyline__delegate(opts__9406__auto__, children__9407__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var rect = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__12389) {
    var opts__9406__auto__ = cljs.core.first(arglist__12389);
    var children__9407__auto__ = cljs.core.rest(arglist__12389);
    return rect__delegate(opts__9406__auto__, children__9407__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var svg = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__12390) {
    var opts__9406__auto__ = cljs.core.first(arglist__12390);
    var children__9407__auto__ = cljs.core.rest(arglist__12390);
    return svg__delegate(opts__9406__auto__, children__9407__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var text = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__12391) {
    var opts__9406__auto__ = cljs.core.first(arglist__12391);
    var children__9407__auto__ = cljs.core.rest(arglist__12391);
    return text__delegate(opts__9406__auto__, children__9407__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var defs = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__12392) {
    var opts__9406__auto__ = cljs.core.first(arglist__12392);
    var children__9407__auto__ = cljs.core.rest(arglist__12392);
    return defs__delegate(opts__9406__auto__, children__9407__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var linearGradient = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__12393) {
    var opts__9406__auto__ = cljs.core.first(arglist__12393);
    var children__9407__auto__ = cljs.core.rest(arglist__12393);
    return linearGradient__delegate(opts__9406__auto__, children__9407__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var polygon = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__12394) {
    var opts__9406__auto__ = cljs.core.first(arglist__12394);
    var children__9407__auto__ = cljs.core.rest(arglist__12394);
    return polygon__delegate(opts__9406__auto__, children__9407__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var radialGradient = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__12395) {
    var opts__9406__auto__ = cljs.core.first(arglist__12395);
    var children__9407__auto__ = cljs.core.rest(arglist__12395);
    return radialGradient__delegate(opts__9406__auto__, children__9407__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__9406__auto__, children__9407__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9406__auto__, children__9407__auto__)));
  };
  var stop = function(opts__9406__auto__, var_args) {
    var children__9407__auto__ = null;
    if (arguments.length > 1) {
      children__9407__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__9406__auto__, children__9407__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__12396) {
    var opts__9406__auto__ = cljs.core.first(arglist__12396);
    var children__9407__auto__ = cljs.core.rest(arglist__12396);
    return stop__delegate(opts__9406__auto__, children__9407__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj12043 = {};
  return obj12043;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.display_name[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.display_name["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj12045 = {};
  return obj12045;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.init_state[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.init_state["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj12047 = {};
  return obj12047;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.should_update[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.should_update["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj12049 = {};
  return obj12049;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.will_mount[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.will_mount["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj12051 = {};
  return obj12051;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.did_mount[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.did_mount["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj12053 = {};
  return obj12053;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.will_unmount[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.will_unmount["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj12055 = {};
  return obj12055;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.will_update[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.will_update["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj12057 = {};
  return obj12057;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.did_update[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.did_update["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj12059 = {};
  return obj12059;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.will_receive_props[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.will_receive_props["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj12061 = {};
  return obj12061;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.render[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.render["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj12063 = {};
  return obj12063;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.render_state[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.render_state["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj12065 = {};
  return obj12065;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj12067 = {};
  return obj12067;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._get_state[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._get_state["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._get_state[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._get_state["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj12069 = {};
  return obj12069;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._get_render_state[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._get_render_state["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._get_render_state[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._get_render_state["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj12071 = {};
  return obj12071;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj12073 = {};
  return obj12073;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core._get_queue[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._get_queue["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj12075 = {};
  return obj12075;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = om.core._value[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._value["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj12077 = {};
  return obj12077;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3541__auto__ = cursor;
    if (and__3541__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4180__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3553__auto__ = om.core._path[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._path["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3541__auto__ = cursor;
    if (and__3541__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4180__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3553__auto__ = om.core._state[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._state["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj12079 = {};
  return obj12079;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3541__auto__ = value;
      if (and__3541__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4180__auto__ = value == null ? null : value;
      return function() {
        var or__3553__auto__ = om.core._to_cursor[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._to_cursor["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3541__auto__ = value;
      if (and__3541__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4180__auto__ = value == null ? null : value;
      return function() {
        var or__3553__auto__ = om.core._to_cursor[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._to_cursor["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj12081 = {};
  return obj12081;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3541__auto__ = cursor;
    if (and__3541__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4180__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3553__auto__ = om.core._derive[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._derive["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj12083 = {};
  return obj12083;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3541__auto__ = cursor;
    if (and__3541__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4180__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3553__auto__ = om.core._transact_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj12085 = {};
  return obj12085;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = om.core._listen_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = om.core._notify_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__12087 = state;
    if (G__12087) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__12087.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__12087.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__12087);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__12087);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__12089 = x;
  if (G__12089) {
    var bit__4203__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3553__auto__ = bit__4203__auto__;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return G__12089.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__12089.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__12089);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__12089);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_12091 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12091;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__12093 = state;
    G__12093["__om_prev_state"] = state["__om_state"];
    G__12093["__om_state"] = pending_state;
    G__12093["__om_pending_state"] = null;
    return G__12093;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3553__auto__ = props;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3553__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, 
"componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__12094 = c;
    if (G__12094) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__12094.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__12094.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__12094);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__12094);
    }
  }()) {
    var state_12121 = this$.state;
    var _STAR_read_enabled_STAR_12095_12122 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3553__auto__ = state_12121["__om_prev_state"];
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return state_12121["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12095_12122;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__12096 = c;
    if (G__12096) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__12096.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__12096.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__12096);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__12096);
    }
  }()) {
    var _STAR_read_enabled_STAR_12097 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12097;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__12098 = c;
    if (G__12098) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__12098.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__12098.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__12098);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__12098);
    }
  }()) {
    var _STAR_read_enabled_STAR_12099 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12099;
    }
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_12100 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__12101 = c;
      if (G__12101) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto__ = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return G__12101.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__12101.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__12101);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__12101);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, props["__om_cursor"]), om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            return false;
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12100;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_12102 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__12103 = c;
      if (G__12103) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto__ = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return G__12103.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__12103.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__12103);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__12103);
      }
    }()) {
      var _STAR_parent_STAR_12104 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_12105 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_12106 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_12106;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_12105;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_12104;
      }
    } else {
      if (function() {
        var G__12107 = c;
        if (G__12107) {
          var bit__4203__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3553__auto__ = bit__4203__auto__;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return G__12107.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__12107.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__12107);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__12107);
        }
      }()) {
        var _STAR_parent_STAR_12108 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_12109 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_12110 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_12110;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_12109;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_12108;
        }
      } else {
        return c;
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12102;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_12123 = om.core.children.call(null, this$);
  if (function() {
    var G__12111 = c_12123;
    if (G__12111) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__12111.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__12111.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__12111);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__12111);
    }
  }()) {
    var state_12124 = this$.state;
    var _STAR_read_enabled_STAR_12112_12125 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_12123, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12112_12125;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3553__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__12113 = c;
    if (G__12113) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__12113.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__12113.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__12113);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__12113);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_12114 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12114;
    }
  }() : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3553__auto__ = id;
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__12115 = c;
    if (G__12115) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__12115.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__12115.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__12115);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__12115);
    }
  }()) {
    var _STAR_read_enabled_STAR_12116 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12116;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__12117 = c;
    if (G__12117) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__12117.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__12117.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__12117);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__12117);
    }
  }()) {
    var _STAR_read_enabled_STAR_12118 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12118;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_12126 = om.core.children.call(null, this$);
  if (function() {
    var G__12119 = c_12126;
    if (G__12119) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__12119.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__12119.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__12119);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__12119);
    }
  }()) {
    var _STAR_read_enabled_STAR_12120_12127 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_12126);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12120_12127;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x12131 = obj;
  x12131.om$core$IGetState$ = true;
  x12131.om$core$IGetState$_get_state$arity$1 = function(x12131) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3553__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x12131);
  x12131.om$core$IGetState$_get_state$arity$2 = function(x12131) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x12131);
  x12131.om$core$IGetRenderState$ = true;
  x12131.om$core$IGetRenderState$_get_render_state$arity$1 = function(x12131) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x12131);
  x12131.om$core$IGetRenderState$_get_render_state$arity$2 = function(x12131) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x12131);
  x12131.om$core$ISetState$ = true;
  x12131.om$core$ISetState$_set_state_BANG_$arity$3 = function(x12131) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_12132 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var app_state = props["__om_app_state"];
        this$__$1.state["__om_pending_state"] = val;
        if (cljs.core.truth_(function() {
          var and__3541__auto__ = !(app_state == null);
          if (and__3541__auto__) {
            return render;
          } else {
            return and__3541__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12132;
      }
    };
  }(x12131);
  x12131.om$core$ISetState$_set_state_BANG_$arity$4 = function(x12131) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_12133 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var pstate = om.core._get_state.call(null, this$__$1);
        var app_state = props["__om_app_state"];
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (cljs.core.truth_(function() {
          var and__3541__auto__ = !(app_state == null);
          if (and__3541__auto__) {
            return render;
          } else {
            return and__3541__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12133;
      }
    };
  }(x12131);
  return x12131;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2162591503;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__12135) {
          var vec__12136 = p__12135;
          var k = cljs.core.nth.call(null, vec__12136, 0, null);
          var v = cljs.core.nth.call(null, vec__12136, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__12137 = null;
  var G__12137__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12137__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12137 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12137__2.call(this, self__, k);
      case 3:
        return G__12137__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12137.cljs$core$IFn$_invoke$arity$2 = G__12137__2;
  G__12137.cljs$core$IFn$_invoke$arity$3 = G__12137__3;
  return G__12137;
}();
om.core.MapCursor.prototype.apply = function(self__, args12134) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args12134)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2179375903;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__12139 = null;
  var G__12139__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12139__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12139 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12139__2.call(this, self__, k);
      case 3:
        return G__12139__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12139.cljs$core$IFn$_invoke$arity$2 = G__12139__2;
  G__12139.cljs$core$IFn$_invoke$arity$3 = G__12139__3;
  return G__12139;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args12138) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args12138)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x12141 = cljs.core.clone.call(null, val);
  x12141.cljs$core$IEquiv$ = true;
  x12141.cljs$core$IEquiv$_equiv$arity$2 = function(x12141) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
      }
    };
  }(x12141);
  x12141.om$core$ITransact$ = true;
  x12141.om$core$ITransact$_transact_BANG_$arity$4 = function(x12141) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x12141);
  x12141.om$core$ICursor$ = true;
  x12141.om$core$ICursor$_path$arity$1 = function(x12141) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x12141);
  x12141.om$core$ICursor$_state$arity$1 = function(x12141) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x12141);
  x12141.cljs$core$IDeref$ = true;
  x12141.cljs$core$IDeref$_deref$arity$1 = function(x12141) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
      }
    };
  }(x12141);
  return x12141;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__12144 = val;
        if (G__12144) {
          var bit__4203__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3553__auto__ = bit__4203__auto__;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return G__12144.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__12144.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__12144);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__12144);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__12145 = val;
              if (G__12145) {
                var bit__4203__auto__ = G__12145.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4203__auto__ || G__12145.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__12145.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__12145);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__12145);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__12150 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__12151 = null;
  var count__12152 = 0;
  var i__12153 = 0;
  while (true) {
    if (i__12153 < count__12152) {
      var f = cljs.core._nth.call(null, chunk__12151, i__12153);
      f.call(null);
      var G__12154 = seq__12150;
      var G__12155 = chunk__12151;
      var G__12156 = count__12152;
      var G__12157 = i__12153 + 1;
      seq__12150 = G__12154;
      chunk__12151 = G__12155;
      count__12152 = G__12156;
      i__12153 = G__12157;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__12150);
      if (temp__4126__auto__) {
        var seq__12150__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12150__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__12150__$1);
          var G__12158 = cljs.core.chunk_rest.call(null, seq__12150__$1);
          var G__12159 = c__4309__auto__;
          var G__12160 = cljs.core.count.call(null, c__4309__auto__);
          var G__12161 = 0;
          seq__12150 = G__12158;
          chunk__12151 = G__12159;
          count__12152 = G__12160;
          i__12153 = G__12161;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__12150__$1);
          f.call(null);
          var G__12162 = cljs.core.next.call(null, seq__12150__$1);
          var G__12163 = null;
          var G__12164 = 0;
          var G__12165 = 0;
          seq__12150 = G__12162;
          chunk__12151 = G__12163;
          count__12152 = G__12164;
          i__12153 = G__12165;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3553__auto__ = function() {
      var G__12170 = x;
      if (G__12170) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto__ = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return G__12170.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__12170.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__12170);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__12170);
      }
    }();
    if (or__3553__auto__) {
      return or__3553__auto__;
    } else {
      var G__12171 = x;
      if (G__12171) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto____$1 = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            return G__12171.om$core$IRenderState$;
          }
        }())) {
          return true;
        } else {
          if (!G__12171.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__12171);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__12171);
      }
    }
  }()) {
    return null;
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("Invalid Om component fn, " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(f.name) + " does not return valid instance") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
  }
};
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createClass(function() {
        var or__3553__auto__ = descriptor;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return om.core.pure_descriptor;
        }
      }());
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1428119148, null), new cljs.core.Symbol(null, 
      "m", "m", -1021758608, null)))));
    }
    if (m == null) {
      var shared = function() {
        var or__3553__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_12176 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12176;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__12177 = m;
      var map__12177__$1 = cljs.core.seq_QMARK_.call(null, map__12177) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12177) : map__12177;
      var opts = cljs.core.get.call(null, map__12177__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__12177__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__12177__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key = cljs.core.get.call(null, map__12177__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3553__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_shared":shared, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_, "__om_app_state":om.core._STAR_state_STAR_, "key":rkey, "__om_init_state":init_state, "children":opts == null ? function(map__12177, map__12177__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_12178 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12178;
          }
        };
      }(map__12177, map__12177__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__12177, map__12177__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_12179 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12179;
          }
        };
      }(map__12177, map__12177__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_state":state});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_12181 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_12181;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__12190 = state;
    if (G__12190) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__12190.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__12190.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__12190);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__12190);
    }
  }()) {
  } else {
    var listeners_12198 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_12199 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x12191_12200 = state;
    x12191_12200.om$core$IRenderQueue$ = true;
    x12191_12200.om$core$IRenderQueue$_get_queue$arity$1 = function(x12191_12200, listeners_12198, render_queue_12199) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_12199);
      };
    }(x12191_12200, listeners_12198, render_queue_12199);
    x12191_12200.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x12191_12200, listeners_12198, render_queue_12199) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_12199), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_12199, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x12191_12200, listeners_12198, render_queue_12199);
    x12191_12200.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x12191_12200, listeners_12198, render_queue_12199) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_12199, cljs.core.empty);
      };
    }(x12191_12200, listeners_12198, render_queue_12199);
    x12191_12200.om$core$INotify$ = true;
    x12191_12200.om$core$INotify$_listen_BANG_$arity$3 = function(x12191_12200, listeners_12198, render_queue_12199) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_12198, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x12191_12200, listeners_12198, render_queue_12199);
    x12191_12200.om$core$INotify$_unlisten_BANG_$arity$2 = function(x12191_12200, listeners_12198, render_queue_12199) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_12198, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x12191_12200, listeners_12198, render_queue_12199);
    x12191_12200.om$core$INotify$_notify_BANG_$arity$3 = function(x12191_12200, listeners_12198, render_queue_12199) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__12192_12201 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_12198));
        var chunk__12193_12202 = null;
        var count__12194_12203 = 0;
        var i__12195_12204 = 0;
        while (true) {
          if (i__12195_12204 < count__12194_12203) {
            var vec__12196_12205 = cljs.core._nth.call(null, chunk__12193_12202, i__12195_12204);
            var __12206 = cljs.core.nth.call(null, vec__12196_12205, 0, null);
            var f_12207 = cljs.core.nth.call(null, vec__12196_12205, 1, null);
            f_12207.call(null, tx_data, root_cursor);
            var G__12208 = seq__12192_12201;
            var G__12209 = chunk__12193_12202;
            var G__12210 = count__12194_12203;
            var G__12211 = i__12195_12204 + 1;
            seq__12192_12201 = G__12208;
            chunk__12193_12202 = G__12209;
            count__12194_12203 = G__12210;
            i__12195_12204 = G__12211;
            continue;
          } else {
            var temp__4126__auto___12212 = cljs.core.seq.call(null, seq__12192_12201);
            if (temp__4126__auto___12212) {
              var seq__12192_12213__$1 = temp__4126__auto___12212;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__12192_12213__$1)) {
                var c__4309__auto___12214 = cljs.core.chunk_first.call(null, seq__12192_12213__$1);
                var G__12215 = cljs.core.chunk_rest.call(null, seq__12192_12213__$1);
                var G__12216 = c__4309__auto___12214;
                var G__12217 = cljs.core.count.call(null, c__4309__auto___12214);
                var G__12218 = 0;
                seq__12192_12201 = G__12215;
                chunk__12193_12202 = G__12216;
                count__12194_12203 = G__12217;
                i__12195_12204 = G__12218;
                continue;
              } else {
                var vec__12197_12219 = cljs.core.first.call(null, seq__12192_12213__$1);
                var __12220 = cljs.core.nth.call(null, vec__12197_12219, 0, null);
                var f_12221 = cljs.core.nth.call(null, vec__12197_12219, 1, null);
                f_12221.call(null, tx_data, root_cursor);
                var G__12222 = cljs.core.next.call(null, seq__12192_12213__$1);
                var G__12223 = null;
                var G__12224 = 0;
                var G__12225 = 0;
                seq__12192_12201 = G__12222;
                chunk__12193_12202 = G__12223;
                count__12194_12203 = G__12224;
                i__12195_12204 = G__12225;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x12191_12200, listeners_12198, render_queue_12199);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__12226) {
  var map__12241 = p__12226;
  var map__12241__$1 = cljs.core.seq_QMARK_.call(null, map__12241) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12241) : map__12241;
  var options = map__12241__$1;
  var instrument = cljs.core.get.call(null, map__12241__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__12241__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__12241__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__12241__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (!(target == null)) {
  } else {
    throw new Error("Assert failed: No target specified to om.core/root\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))));
  }
  var roots_SINGLEQUOTE__12255 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__12255, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__12255, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__12242 = value;
    if (G__12242) {
      var bit__4203__auto__ = G__12242.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4203__auto__ || G__12242.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__12242.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__12242);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__12242);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168));
  var rootf = function(watch_key, state, state__$1, m, map__12241, map__12241__$1, options, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_12249 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_12250 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_12250;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_12249;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__12251_12256 = cljs.core.seq.call(null, queue);
        var chunk__12252_12257 = null;
        var count__12253_12258 = 0;
        var i__12254_12259 = 0;
        while (true) {
          if (i__12254_12259 < count__12253_12258) {
            var c_12260 = cljs.core._nth.call(null, chunk__12252_12257, i__12254_12259);
            if (cljs.core.truth_(c_12260.isMounted())) {
              c_12260.forceUpdate();
            } else {
            }
            var G__12261 = seq__12251_12256;
            var G__12262 = chunk__12252_12257;
            var G__12263 = count__12253_12258;
            var G__12264 = i__12254_12259 + 1;
            seq__12251_12256 = G__12261;
            chunk__12252_12257 = G__12262;
            count__12253_12258 = G__12263;
            i__12254_12259 = G__12264;
            continue;
          } else {
            var temp__4126__auto___12265 = cljs.core.seq.call(null, seq__12251_12256);
            if (temp__4126__auto___12265) {
              var seq__12251_12266__$1 = temp__4126__auto___12265;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__12251_12266__$1)) {
                var c__4309__auto___12267 = cljs.core.chunk_first.call(null, seq__12251_12266__$1);
                var G__12268 = cljs.core.chunk_rest.call(null, seq__12251_12266__$1);
                var G__12269 = c__4309__auto___12267;
                var G__12270 = cljs.core.count.call(null, c__4309__auto___12267);
                var G__12271 = 0;
                seq__12251_12256 = G__12268;
                chunk__12252_12257 = G__12269;
                count__12253_12258 = G__12270;
                i__12254_12259 = G__12271;
                continue;
              } else {
                var c_12272 = cljs.core.first.call(null, seq__12251_12266__$1);
                if (cljs.core.truth_(c_12272.isMounted())) {
                  c_12272.forceUpdate();
                } else {
                }
                var G__12273 = cljs.core.next.call(null, seq__12251_12266__$1);
                var G__12274 = null;
                var G__12275 = 0;
                var G__12276 = 0;
                seq__12251_12256 = G__12273;
                chunk__12252_12257 = G__12274;
                count__12253_12258 = G__12275;
                i__12254_12259 = G__12276;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m, map__12241, map__12241__$1, options, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, m, rootf, map__12241, map__12241__$1, options, instrument, path, tx_listen, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(watch_key, state, state__$1, m, rootf, map__12241, map__12241__$1, options, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, m, rootf, map__12241, map__12241__$1, options, instrument, path, tx_listen, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, m, rootf, map__12241, map__12241__$1, options, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("om_tools.core");
goog.require("cljs.core");
goog.require("plumbing.core");
goog.require("plumbing.core");
goog.require("plumbing.fnk.schema");
goog.require("om.core");
goog.require("om.core");
om_tools.core.state_proxy = function state_proxy(owner) {
  if (cljs.core.truth_(owner)) {
    var get_state = function() {
      return om.core.get_state.call(null, owner);
    };
    if (typeof om_tools.core.t9846 !== "undefined") {
    } else {
      om_tools.core.t9846 = function(get_state, owner, state_proxy, meta9847) {
        this.get_state = get_state;
        this.owner = owner;
        this.state_proxy = state_proxy;
        this.meta9847 = meta9847;
        this.cljs$lang$protocol_mask$partition1$ = 98304;
        this.cljs$lang$protocol_mask$partition0$ = 425984;
      };
      om_tools.core.t9846.cljs$lang$type = true;
      om_tools.core.t9846.cljs$lang$ctorStr = "om-tools.core/t9846";
      om_tools.core.t9846.cljs$lang$ctorPrWriter = function(get_state) {
        return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
          return cljs.core._write.call(null, writer__4121__auto__, "om-tools.core/t9846");
        };
      }(get_state);
      om_tools.core.t9846.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(get_state) {
        return function(s, f) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null)));
        };
      }(get_state);
      om_tools.core.t9846.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(get_state) {
        return function(s, f, x) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null), x));
        };
      }(get_state);
      om_tools.core.t9846.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(get_state) {
        return function(s, f, x, y) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null), x, y));
        };
      }(get_state);
      om_tools.core.t9846.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(get_state) {
        return function(s, f, x, y, more) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, cljs.core.apply.call(null, f, self__.get_state.call(null), x, y, more));
        };
      }(get_state);
      om_tools.core.t9846.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(get_state) {
        return function(_, v) {
          var self__ = this;
          var ___$1 = this;
          return om.core.set_state_BANG_.call(null, self__.owner, v);
        };
      }(get_state);
      om_tools.core.t9846.prototype.cljs$core$IDeref$_deref$arity$1 = function(get_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.get_state.call(null);
        };
      }(get_state);
      om_tools.core.t9846.prototype.cljs$core$IMeta$_meta$arity$1 = function(get_state) {
        return function(_9848) {
          var self__ = this;
          var _9848__$1 = this;
          return self__.meta9847;
        };
      }(get_state);
      om_tools.core.t9846.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(get_state) {
        return function(_9848, meta9847__$1) {
          var self__ = this;
          var _9848__$1 = this;
          return new om_tools.core.t9846(self__.get_state, self__.owner, self__.state_proxy, meta9847__$1);
        };
      }(get_state);
      om_tools.core.__GT_t9846 = function(get_state) {
        return function __GT_t9846(get_state__$1, owner__$1, state_proxy__$1, meta9847) {
          return new om_tools.core.t9846(get_state__$1, owner__$1, state_proxy__$1, meta9847);
        };
      }(get_state);
    }
    return new om_tools.core.t9846(get_state, owner, state_proxy, null);
  } else {
    return null;
  }
};
om_tools.core.set_state_QMARK__BANG_ = function() {
  var set_state_QMARK__BANG_ = null;
  var set_state_QMARK__BANG___2 = function(owner, v) {
    if (cljs.core._EQ_.call(null, v, om.core.get_state.call(null, owner))) {
      return null;
    } else {
      return om.core.set_state_BANG_.call(null, owner, v);
    }
  };
  var set_state_QMARK__BANG___3 = function(owner, korks, v) {
    if (cljs.core._EQ_.call(null, v, om.core.get_state.call(null, owner, korks))) {
      return null;
    } else {
      return om.core.set_state_BANG_.call(null, owner, korks, v);
    }
  };
  set_state_QMARK__BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_QMARK__BANG___2.call(this, owner, korks);
      case 3:
        return set_state_QMARK__BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_QMARK__BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_QMARK__BANG___2;
  set_state_QMARK__BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_QMARK__BANG___3;
  return set_state_QMARK__BANG_;
}();
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__12012_SHARP_) {
      return max === p1__12012_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__12013__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__12013 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__12013__delegate.call(this, s1, s2, sets);
    };
    G__12013.cljs$lang$maxFixedArity = 2;
    G__12013.cljs$lang$applyTo = function(arglist__12014) {
      var s1 = cljs.core.first(arglist__12014);
      arglist__12014 = cljs.core.next(arglist__12014);
      var s2 = cljs.core.first(arglist__12014);
      var sets = cljs.core.rest(arglist__12014);
      return G__12013__delegate(s1, s2, sets);
    };
    G__12013.cljs$core$IFn$_invoke$arity$variadic = G__12013__delegate;
    return G__12013;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__12016 = s2;
        var G__12017 = s1;
        s1 = G__12016;
        s2 = G__12017;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__12018__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__12015_SHARP_) {
        return-cljs.core.count.call(null, p1__12015_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__12018 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__12018__delegate.call(this, s1, s2, sets);
    };
    G__12018.cljs$lang$maxFixedArity = 2;
    G__12018.cljs$lang$applyTo = function(arglist__12019) {
      var s1 = cljs.core.first(arglist__12019);
      arglist__12019 = cljs.core.next(arglist__12019);
      var s2 = cljs.core.first(arglist__12019);
      var sets = cljs.core.rest(arglist__12019);
      return G__12018__delegate(s1, s2, sets);
    };
    G__12018.cljs$core$IFn$_invoke$arity$variadic = G__12018__delegate;
    return G__12018;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__12020__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__12020 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__12020__delegate.call(this, s1, s2, sets);
    };
    G__12020.cljs$lang$maxFixedArity = 2;
    G__12020.cljs$lang$applyTo = function(arglist__12021) {
      var s1 = cljs.core.first(arglist__12021);
      arglist__12021 = cljs.core.next(arglist__12021);
      var s2 = cljs.core.first(arglist__12021);
      var sets = cljs.core.rest(arglist__12021);
      return G__12020__delegate(s1, s2, sets);
    };
    G__12020.cljs$core$IFn$_invoke$arity$variadic = G__12020__delegate;
    return G__12020;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__12022_SHARP_) {
    return cljs.core.select_keys.call(null, p1__12022_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__12025) {
    var vec__12026 = p__12025;
    var old = cljs.core.nth.call(null, vec__12026, 0, null);
    var new$ = cljs.core.nth.call(null, vec__12026, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__12027_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__12027_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__12030) {
    var vec__12031 = p__12030;
    var k = cljs.core.nth.call(null, vec__12031, 0, null);
    var v = cljs.core.nth.call(null, vec__12031, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__12038 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__12038, 0, null);
      var s = cljs.core.nth.call(null, vec__12038, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__12038, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__12038, r, s, idx) {
              return function(p1__12032_SHARP_, p2__12033_SHARP_) {
                return cljs.core.conj.call(null, p1__12032_SHARP_, cljs.core.merge.call(null, p2__12033_SHARP_, x));
              };
            }(found, ks, vec__12038, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__12038, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__12039 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__12039, 0, null);
    var s = cljs.core.nth.call(null, vec__12039, 1, null);
    var k = cljs.core.nth.call(null, vec__12039, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__12039, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__12039, r, s, k, idx) {
            return function(p1__12034_SHARP_, p2__12035_SHARP_) {
              return cljs.core.conj.call(null, p1__12034_SHARP_, cljs.core.merge.call(null, p2__12035_SHARP_, x));
            };
          }(found, vec__12039, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__12039, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__12040_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__12040_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__12041_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__12041_SHARP_);
  }, set2);
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__11980) {
    var vec__11981 = p__11980;
    var k = cljs.core.nth.call(null, vec__11981, 0, null);
    var v = cljs.core.nth.call(null, vec__11981, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__11984) {
    var vec__11985 = p__11984;
    var k = cljs.core.nth.call(null, vec__11985, 0, null);
    var v = cljs.core.nth.call(null, vec__11985, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("sablono.util");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("clojure.string");
goog.require("clojure.walk");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("goog.Uri");
sablono.util._STAR_base_url_STAR_ = null;
sablono.util.ToString = function() {
  var obj11991 = {};
  return obj11991;
}();
sablono.util.to_str = function to_str(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.sablono$util$ToString$to_str$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.sablono$util$ToString$to_str$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = sablono.util.to_str[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = sablono.util.to_str["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToString.to-str", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.ToURI = function() {
  var obj11993 = {};
  return obj11993;
}();
sablono.util.to_uri = function to_uri(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.sablono$util$ToURI$to_uri$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.sablono$util$ToURI$to_uri$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = sablono.util.to_uri[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = sablono.util.to_uri["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToURI.to-uri", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.as_str = function() {
  var as_str__delegate = function(xs) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, sablono.util.to_str, xs));
  };
  var as_str = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return as_str__delegate.call(this, xs);
  };
  as_str.cljs$lang$maxFixedArity = 0;
  as_str.cljs$lang$applyTo = function(arglist__11994) {
    var xs = cljs.core.seq(arglist__11994);
    return as_str__delegate(xs);
  };
  as_str.cljs$core$IFn$_invoke$arity$variadic = as_str__delegate;
  return as_str;
}();
sablono.util.camel_case = function camel_case(k) {
  if (cljs.core.truth_(k)) {
    var vec__11996 = clojure.string.split.call(null, cljs.core.name.call(null, k), /-/);
    var first_word = cljs.core.nth.call(null, vec__11996, 0, null);
    var words = cljs.core.nthnext.call(null, vec__11996, 1);
    if (cljs.core.empty_QMARK_.call(null, words) || cljs.core._EQ_.call(null, "aria", first_word) || cljs.core._EQ_.call(null, "data", first_word)) {
      return k;
    } else {
      return cljs.core.keyword.call(null, clojure.string.join.call(null, cljs.core.conj.call(null, cljs.core.map.call(null, clojure.string.capitalize, words), first_word)));
    }
  } else {
    return null;
  }
};
sablono.util.camel_case_keys = function camel_case_keys(m) {
  var f = function(p__11999) {
    var vec__12000 = p__11999;
    var k = cljs.core.nth.call(null, vec__12000, 0, null);
    var v = cljs.core.nth.call(null, vec__12000, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.util.camel_case.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
sablono.util.html_to_dom_attrs = function html_to_dom_attrs(attrs) {
  return clojure.set.rename_keys.call(null, sablono.util.camel_case_keys.call(null, attrs), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "className", "className", -1983287057), new cljs.core.Keyword(null, "for", "for", -1323786319), new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720)], null));
};
sablono.util.compact_map = function compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var v = cljs.core.get.call(null, m__$1, k);
    if (cljs.core.empty_QMARK_.call(null, v)) {
      return cljs.core.dissoc.call(null, m__$1, k);
    } else {
      return m__$1;
    }
  }, m, cljs.core.keys.call(null, m));
};
sablono.util.merge_with_class = function() {
  var merge_with_class__delegate = function(maps) {
    var classes = cljs.core.vec.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.mapcat.call(null, function(p1__12001_SHARP_) {
      if (cljs.core.list_QMARK_.call(null, p1__12001_SHARP_)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__12001_SHARP_], null);
      } else {
        if (cljs.core.sequential_QMARK_.call(null, p1__12001_SHARP_)) {
          return p1__12001_SHARP_;
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__12001_SHARP_], null);
        }
      }
    }, cljs.core.map.call(null, new cljs.core.Keyword(null, "class", "class", -2030961996), maps))));
    var maps__$1 = cljs.core.apply.call(null, cljs.core.merge, maps);
    if (cljs.core.empty_QMARK_.call(null, classes)) {
      return maps__$1;
    } else {
      return cljs.core.assoc.call(null, maps__$1, new cljs.core.Keyword(null, "class", "class", -2030961996), classes);
    }
  };
  var merge_with_class = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge_with_class__delegate.call(this, maps);
  };
  merge_with_class.cljs$lang$maxFixedArity = 0;
  merge_with_class.cljs$lang$applyTo = function(arglist__12002) {
    var maps = cljs.core.seq(arglist__12002);
    return merge_with_class__delegate(maps);
  };
  merge_with_class.cljs$core$IFn$_invoke$arity$variadic = merge_with_class__delegate;
  return merge_with_class;
}();
sablono.util.strip_css = function strip_css(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, /^[.#]/, "");
  } else {
    return null;
  }
};
sablono.util.match_tag = function match_tag(s) {
  var matches = cljs.core.re_seq.call(null, /[#.]?[^#.]+/, cljs.core.name.call(null, s));
  var vec__12006 = cljs.core.empty_QMARK_.call(null, matches) ? function() {
    throw cljs.core.ex_info.call(null, "Can't match CSS tag: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), s], null));
  }() : cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["#", null, ".", null], null), null)).call(null, cljs.core.ffirst.call(null, matches))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["div", matches], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, matches), cljs.core.rest.call(null, matches)], null);
  var tag_name = cljs.core.nth.call(null, vec__12006, 0, null);
  var names = cljs.core.nth.call(null, vec__12006, 1, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_name, cljs.core.first.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__12006, tag_name, names) {
    return function(p1__12003_SHARP_) {
      return cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, p1__12003_SHARP_));
    };
  }(matches, vec__12006, tag_name, names), names))), cljs.core.vec.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__12006, tag_name, names) {
    return function(p1__12004_SHARP_) {
      return cljs.core._EQ_.call(null, ".", cljs.core.first.call(null, p1__12004_SHARP_));
    };
  }(matches, vec__12006, tag_name, names), names)))], null);
};
sablono.util.normalize_element = function normalize_element(p__12007) {
  var vec__12010 = p__12007;
  var tag = cljs.core.nth.call(null, vec__12010, 0, null);
  var content = cljs.core.nthnext.call(null, vec__12010, 1);
  if (!(tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string")) {
    throw cljs.core.ex_info.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + " is not a valid element name.", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag, new cljs.core.Keyword(null, "content", "content", 15833224), content], null));
  } else {
  }
  var vec__12011 = sablono.util.match_tag.call(null, tag);
  var tag__$1 = cljs.core.nth.call(null, vec__12011, 0, null);
  var id = cljs.core.nth.call(null, vec__12011, 1, null);
  var class$ = cljs.core.nth.call(null, vec__12011, 2, null);
  var tag_attrs = sablono.util.compact_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), class$], null));
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, sablono.util.merge_with_class.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
sablono.util.join_classes = function join_classes(classes) {
  return clojure.string.join.call(null, " ", cljs.core.flatten.call(null, classes));
};
sablono.util.react_symbol = function react_symbol(tag) {
  return cljs.core.symbol.call(null, "js", "React.DOM." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, tag)));
};
sablono.util.react_fn = function react_fn(tag) {
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), null, new cljs.core.Keyword(null, "option", "option", 65132272), null, new cljs.core.Keyword(null, "input", "input", 556931961), null], null), null), cljs.core.keyword.call(null, tag))) {
    return cljs.core.symbol.call(null, "sablono.interpreter", cljs.core.name.call(null, tag));
  } else {
    return sablono.util.react_symbol.call(null, tag);
  }
};
sablono.util.attr_pattern = function attr_pattern(attr) {
  return cljs.core.re_pattern.call(null, "\\s+" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, attr)) + "\\s*\x3d\\s*['\"][^\"']+['\"]");
};
sablono.util.strip_attr = function strip_attr(s, attr) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, sablono.util.attr_pattern.call(null, attr), "");
  } else {
    return null;
  }
};
sablono.util.strip_outer = function strip_outer(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, s, /^\s*<[^>]+>\s*/, ""), /\s*<\/[^>]+>\s*$/, "");
  } else {
    return null;
  }
};
sablono.util.ToString["_"] = true;
sablono.util.to_str["_"] = function(x) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
};
sablono.util.ToString["number"] = true;
sablono.util.to_str["number"] = function(x) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
};
sablono.util.ToString["null"] = true;
sablono.util.to_str["null"] = function(_) {
  return "";
};
goog.Uri.prototype.sablono$util$ToString$ = true;
goog.Uri.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  if (cljs.core.truth_(function() {
    var or__3553__auto__ = x__$1.hasDomain();
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return x__$1.getPath() == null || cljs.core.not.call(null, cljs.core.re_matches.call(null, /^\/.*/, x__$1.getPath()));
    }
  }())) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
  } else {
    var base = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util._STAR_base_url_STAR_);
    if (cljs.core.truth_(cljs.core.re_matches.call(null, /.*\/$/, base))) {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, base, 0, cljs.core.count.call(null, base) - 1)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
    } else {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(base) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
    }
  }
};
cljs.core.Keyword.prototype.sablono$util$ToString$ = true;
cljs.core.Keyword.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.name.call(null, x__$1);
};
sablono.util.ToURI["_"] = true;
sablono.util.to_uri["_"] = function(x) {
  return new goog.Uri("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
};
goog.Uri.prototype.sablono$util$ToURI$ = true;
goog.Uri.prototype.sablono$util$ToURI$to_uri$arity$1 = function(x) {
  var x__$1 = this;
  return x__$1;
};
goog.provide("sablono.interpreter");
goog.require("cljs.core");
goog.require("sablono.util");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("clojure.string");
sablono.interpreter.IInterpreter = function() {
  var obj11987 = {};
  return obj11987;
}();
sablono.interpreter.interpret = function interpret(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.sablono$interpreter$IInterpreter$interpret$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.sablono$interpreter$IInterpreter$interpret$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = sablono.interpreter.interpret[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = sablono.interpreter.interpret["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInterpreter.interpret", this$);
        }
      }
    }().call(null, this$);
  }
};
sablono.interpreter.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
sablono.interpreter.input = sablono.interpreter.wrap_form_element.call(null, React.DOM.input, "input");
sablono.interpreter.option = sablono.interpreter.wrap_form_element.call(null, React.DOM.option, "option");
sablono.interpreter.textarea = sablono.interpreter.wrap_form_element.call(null, React.DOM.textarea, "textarea");
sablono.interpreter.dom_fn = function dom_fn(tag) {
  var temp__4124__auto__ = React.DOM[cljs.core.name.call(null, tag)];
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dom_fn__$1 = temp__4124__auto__;
    return cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "input", "input", 556931961), sablono.interpreter.input, new cljs.core.Keyword(null, "option", "option", 65132272), sablono.interpreter.option, new cljs.core.Keyword(null, "textarea", "textarea", -650375824), sablono.interpreter.textarea], null), cljs.core.keyword.call(null, tag), dom_fn__$1);
  } else {
    throw cljs.core.ex_info.call(null, "Unsupported HTML tag: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, tag)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag], null));
  }
};
sablono.interpreter.attributes = function attributes(attrs) {
  var attrs__$1 = cljs.core.clj__GT_js.call(null, sablono.util.html_to_dom_attrs.call(null, attrs));
  var class$ = attrs__$1.className;
  var class$__$1 = class$ instanceof Array ? clojure.string.join.call(null, " ", class$) : class$;
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, class$__$1))) {
    delete attrs__$1["className"];
  } else {
    attrs__$1.className = class$__$1;
  }
  return attrs__$1;
};
sablono.interpreter.element = function element(element__$1) {
  var vec__11989 = sablono.util.normalize_element.call(null, element__$1);
  var tag = cljs.core.nth.call(null, vec__11989, 0, null);
  var attrs = cljs.core.nth.call(null, vec__11989, 1, null);
  var content = cljs.core.nth.call(null, vec__11989, 2, null);
  var f = sablono.interpreter.dom_fn.call(null, tag);
  var js_attrs = sablono.interpreter.attributes.call(null, attrs);
  if (cljs.core.sequential_QMARK_.call(null, content) && cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, content))) {
    return f.call(null, js_attrs, sablono.interpreter.interpret.call(null, cljs.core.first.call(null, content)));
  } else {
    if (cljs.core.truth_(content)) {
      return cljs.core.apply.call(null, f, js_attrs, sablono.interpreter.interpret.call(null, content));
    } else {
      return f.call(null, js_attrs, null);
    }
  }
};
sablono.interpreter.interpret_seq = function interpret_seq(s) {
  return cljs.core.into_array.call(null, cljs.core.map.call(null, sablono.interpreter.interpret, s));
};
sablono.interpreter.IInterpreter["null"] = true;
sablono.interpreter.interpret["null"] = function(this$) {
  return null;
};
sablono.interpreter.IInterpreter["_"] = true;
sablono.interpreter.interpret["_"] = function(this$) {
  return this$;
};
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.List.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.List.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
goog.provide("sablono.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("sablono.interpreter");
goog.require("sablono.interpreter");
goog.require("sablono.util");
goog.require("clojure.walk");
goog.require("clojure.string");
sablono.core.wrap_attrs = function wrap_attrs(func) {
  return function() {
    var G__11878__delegate = function(args) {
      if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__11877 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag = cljs.core.nth.call(null, vec__11877, 0, null);
        var body = cljs.core.nthnext.call(null, vec__11877, 1);
        if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.merge.call(null, cljs.core.first.call(null, body), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body));
        } else {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.first.call(null, args), body);
        }
      } else {
        return cljs.core.apply.call(null, func, args);
      }
    };
    var G__11878 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__11878__delegate.call(this, args);
    };
    G__11878.cljs$lang$maxFixedArity = 0;
    G__11878.cljs$lang$applyTo = function(arglist__11879) {
      var args = cljs.core.seq(arglist__11879);
      return G__11878__delegate(args);
    };
    G__11878.cljs$core$IFn$_invoke$arity$variadic = G__11878__delegate;
    return G__11878;
  }();
};
sablono.core.update_arglists = function update_arglists(arglists) {
  var iter__4278__auto__ = function iter__11884(s__11885) {
    return new cljs.core.LazySeq(null, function() {
      var s__11885__$1 = s__11885;
      while (true) {
        var temp__4126__auto__ = cljs.core.seq.call(null, s__11885__$1);
        if (temp__4126__auto__) {
          var s__11885__$2 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__11885__$2)) {
            var c__4276__auto__ = cljs.core.chunk_first.call(null, s__11885__$2);
            var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
            var b__11887 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
            if (function() {
              var i__11886 = 0;
              while (true) {
                if (i__11886 < size__4277__auto__) {
                  var args = cljs.core._nth.call(null, c__4276__auto__, i__11886);
                  cljs.core.chunk_append.call(null, b__11887, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)));
                  var G__11888 = i__11886 + 1;
                  i__11886 = G__11888;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11887), iter__11884.call(null, cljs.core.chunk_rest.call(null, s__11885__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11887), null);
            }
          } else {
            var args = cljs.core.first.call(null, s__11885__$2);
            return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)), iter__11884.call(null, cljs.core.rest.call(null, s__11885__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4278__auto__.call(null, arglists);
};
sablono.core.render = function render(component) {
  return React.renderComponentToString(component);
};
sablono.core.include_css = function() {
  var include_css__delegate = function(styles) {
    var iter__4278__auto__ = function iter__11893(s__11894) {
      return new cljs.core.LazySeq(null, function() {
        var s__11894__$1 = s__11894;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__11894__$1);
          if (temp__4126__auto__) {
            var s__11894__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__11894__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__11894__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__11896 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__11895 = 0;
                while (true) {
                  if (i__11895 < size__4277__auto__) {
                    var style = cljs.core._nth.call(null, c__4276__auto__, i__11895);
                    cljs.core.chunk_append.call(null, b__11896, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null));
                    var G__11897 = i__11895 + 1;
                    i__11895 = G__11897;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11896), iter__11893.call(null, cljs.core.chunk_rest.call(null, s__11894__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11896), null);
              }
            } else {
              var style = cljs.core.first.call(null, s__11894__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null), iter__11893.call(null, 
              cljs.core.rest.call(null, s__11894__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, styles);
  };
  var include_css = function(var_args) {
    var styles = null;
    if (arguments.length > 0) {
      styles = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return include_css__delegate.call(this, styles);
  };
  include_css.cljs$lang$maxFixedArity = 0;
  include_css.cljs$lang$applyTo = function(arglist__11898) {
    var styles = cljs.core.seq(arglist__11898);
    return include_css__delegate(styles);
  };
  include_css.cljs$core$IFn$_invoke$arity$variadic = include_css__delegate;
  return include_css;
}();
sablono.core.include_js = function include_js(src) {
  return goog.dom.appendChild(goog.dom.getDocument().body, goog.dom.createDom("script", {"src":src}));
};
sablono.core.include_react = function include_react() {
  return sablono.core.include_js.call(null, "http://fb.me/react-0.9.0.js");
};
sablono.core.link_to11899 = function() {
  var link_to11899__delegate = function(url, content) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, url)], null), content], null);
  };
  var link_to11899 = function(url, var_args) {
    var content = null;
    if (arguments.length > 1) {
      content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link_to11899__delegate.call(this, url, content);
  };
  link_to11899.cljs$lang$maxFixedArity = 1;
  link_to11899.cljs$lang$applyTo = function(arglist__11900) {
    var url = cljs.core.first(arglist__11900);
    var content = cljs.core.rest(arglist__11900);
    return link_to11899__delegate(url, content);
  };
  link_to11899.cljs$core$IFn$_invoke$arity$variadic = link_to11899__delegate;
  return link_to11899;
}();
sablono.core.link_to = sablono.core.wrap_attrs.call(null, sablono.core.link_to11899);
sablono.core.mail_to11901 = function() {
  var mail_to11901__delegate = function(e_mail, p__11902) {
    var vec__11904 = p__11902;
    var content = cljs.core.nth.call(null, vec__11904, 0, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "mailto:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(e_mail)], null), function() {
      var or__3553__auto__ = content;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return e_mail;
      }
    }()], null);
  };
  var mail_to11901 = function(e_mail, var_args) {
    var p__11902 = null;
    if (arguments.length > 1) {
      p__11902 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mail_to11901__delegate.call(this, e_mail, p__11902);
  };
  mail_to11901.cljs$lang$maxFixedArity = 1;
  mail_to11901.cljs$lang$applyTo = function(arglist__11905) {
    var e_mail = cljs.core.first(arglist__11905);
    var p__11902 = cljs.core.rest(arglist__11905);
    return mail_to11901__delegate(e_mail, p__11902);
  };
  mail_to11901.cljs$core$IFn$_invoke$arity$variadic = mail_to11901__delegate;
  return mail_to11901;
}();
sablono.core.mail_to = sablono.core.wrap_attrs.call(null, sablono.core.mail_to11901);
sablono.core.unordered_list11906 = function unordered_list11906(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
    var iter__4278__auto__ = function iter__11911(s__11912) {
      return new cljs.core.LazySeq(null, function() {
        var s__11912__$1 = s__11912;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__11912__$1);
          if (temp__4126__auto__) {
            var s__11912__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__11912__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__11912__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__11914 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__11913 = 0;
                while (true) {
                  if (i__11913 < size__4277__auto__) {
                    var x = cljs.core._nth.call(null, c__4276__auto__, i__11913);
                    cljs.core.chunk_append.call(null, b__11914, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__11915 = i__11913 + 1;
                    i__11913 = G__11915;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11914), iter__11911.call(null, cljs.core.chunk_rest.call(null, s__11912__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11914), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__11912__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__11911.call(null, cljs.core.rest.call(null, s__11912__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, coll);
  }()], null);
};
sablono.core.unordered_list = sablono.core.wrap_attrs.call(null, sablono.core.unordered_list11906);
sablono.core.ordered_list11916 = function ordered_list11916(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ol", "ol", 932524051), function() {
    var iter__4278__auto__ = function iter__11921(s__11922) {
      return new cljs.core.LazySeq(null, function() {
        var s__11922__$1 = s__11922;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__11922__$1);
          if (temp__4126__auto__) {
            var s__11922__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__11922__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__11922__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__11924 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__11923 = 0;
                while (true) {
                  if (i__11923 < size__4277__auto__) {
                    var x = cljs.core._nth.call(null, c__4276__auto__, i__11923);
                    cljs.core.chunk_append.call(null, b__11924, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__11925 = i__11923 + 1;
                    i__11923 = G__11925;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11924), iter__11921.call(null, cljs.core.chunk_rest.call(null, s__11922__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11924), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__11922__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__11921.call(null, cljs.core.rest.call(null, s__11922__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, coll);
  }()], null);
};
sablono.core.ordered_list = sablono.core.wrap_attrs.call(null, sablono.core.ordered_list11916);
sablono.core.image11926 = function() {
  var image11926 = null;
  var image11926__1 = function(src) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src)], null)], null);
  };
  var image11926__2 = function(src, alt) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src), new cljs.core.Keyword(null, "alt", "alt", -3214426), alt], null)], null);
  };
  image11926 = function(src, alt) {
    switch(arguments.length) {
      case 1:
        return image11926__1.call(this, src);
      case 2:
        return image11926__2.call(this, src, alt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  image11926.cljs$core$IFn$_invoke$arity$1 = image11926__1;
  image11926.cljs$core$IFn$_invoke$arity$2 = image11926__2;
  return image11926;
}();
sablono.core.image = sablono.core.wrap_attrs.call(null, sablono.core.image11926);
sablono.core._STAR_group_STAR_ = cljs.core.PersistentVector.EMPTY;
sablono.core.make_name = function make_name(name) {
  return cljs.core.reduce.call(null, function(p1__11927_SHARP_, p2__11928_SHARP_) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__11927_SHARP_) + "[" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__11928_SHARP_) + "]";
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.make_id = function make_id(name) {
  return cljs.core.reduce.call(null, function(p1__11929_SHARP_, p2__11930_SHARP_) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__11929_SHARP_) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__11930_SHARP_);
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.input_field_STAR_ = function input_field_STAR_(type, name, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), 
  value], null)], null);
};
sablono.core.color_field11931 = function() {
  var color_field11931 = null;
  var color_field11931__1 = function(name__5028__auto__) {
    return color_field11931.call(null, name__5028__auto__, null);
  };
  var color_field11931__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "color", "color", -1642760596, null)), name__5028__auto__, value__5029__auto__);
  };
  color_field11931 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return color_field11931__1.call(this, name__5028__auto__);
      case 2:
        return color_field11931__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  color_field11931.cljs$core$IFn$_invoke$arity$1 = color_field11931__1;
  color_field11931.cljs$core$IFn$_invoke$arity$2 = color_field11931__2;
  return color_field11931;
}();
sablono.core.color_field = sablono.core.wrap_attrs.call(null, sablono.core.color_field11931);
sablono.core.date_field11932 = function() {
  var date_field11932 = null;
  var date_field11932__1 = function(name__5028__auto__) {
    return date_field11932.call(null, name__5028__auto__, null);
  };
  var date_field11932__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "date", "date", 177097065, null)), name__5028__auto__, value__5029__auto__);
  };
  date_field11932 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return date_field11932__1.call(this, name__5028__auto__);
      case 2:
        return date_field11932__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_field11932.cljs$core$IFn$_invoke$arity$1 = date_field11932__1;
  date_field11932.cljs$core$IFn$_invoke$arity$2 = date_field11932__2;
  return date_field11932;
}();
sablono.core.date_field = sablono.core.wrap_attrs.call(null, sablono.core.date_field11932);
sablono.core.datetime_field11933 = function() {
  var datetime_field11933 = null;
  var datetime_field11933__1 = function(name__5028__auto__) {
    return datetime_field11933.call(null, name__5028__auto__, null);
  };
  var datetime_field11933__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "datetime", "datetime", 2135207229, null)), name__5028__auto__, value__5029__auto__);
  };
  datetime_field11933 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_field11933__1.call(this, name__5028__auto__);
      case 2:
        return datetime_field11933__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_field11933.cljs$core$IFn$_invoke$arity$1 = datetime_field11933__1;
  datetime_field11933.cljs$core$IFn$_invoke$arity$2 = datetime_field11933__2;
  return datetime_field11933;
}();
sablono.core.datetime_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_field11933);
sablono.core.datetime_local_field11934 = function() {
  var datetime_local_field11934 = null;
  var datetime_local_field11934__1 = function(name__5028__auto__) {
    return datetime_local_field11934.call(null, name__5028__auto__, null);
  };
  var datetime_local_field11934__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "datetime-local", "datetime-local", -507312697, null)), name__5028__auto__, value__5029__auto__);
  };
  datetime_local_field11934 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_local_field11934__1.call(this, name__5028__auto__);
      case 2:
        return datetime_local_field11934__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_local_field11934.cljs$core$IFn$_invoke$arity$1 = datetime_local_field11934__1;
  datetime_local_field11934.cljs$core$IFn$_invoke$arity$2 = datetime_local_field11934__2;
  return datetime_local_field11934;
}();
sablono.core.datetime_local_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_local_field11934);
sablono.core.email_field11935 = function() {
  var email_field11935 = null;
  var email_field11935__1 = function(name__5028__auto__) {
    return email_field11935.call(null, name__5028__auto__, null);
  };
  var email_field11935__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "email", "email", -1238619063, null)), name__5028__auto__, value__5029__auto__);
  };
  email_field11935 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return email_field11935__1.call(this, name__5028__auto__);
      case 2:
        return email_field11935__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  email_field11935.cljs$core$IFn$_invoke$arity$1 = email_field11935__1;
  email_field11935.cljs$core$IFn$_invoke$arity$2 = email_field11935__2;
  return email_field11935;
}();
sablono.core.email_field = sablono.core.wrap_attrs.call(null, sablono.core.email_field11935);
sablono.core.file_field11936 = function() {
  var file_field11936 = null;
  var file_field11936__1 = function(name__5028__auto__) {
    return file_field11936.call(null, name__5028__auto__, null);
  };
  var file_field11936__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "file", "file", 370885649, null)), name__5028__auto__, value__5029__auto__);
  };
  file_field11936 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return file_field11936__1.call(this, name__5028__auto__);
      case 2:
        return file_field11936__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  file_field11936.cljs$core$IFn$_invoke$arity$1 = file_field11936__1;
  file_field11936.cljs$core$IFn$_invoke$arity$2 = file_field11936__2;
  return file_field11936;
}();
sablono.core.file_field = sablono.core.wrap_attrs.call(null, sablono.core.file_field11936);
sablono.core.hidden_field11937 = function() {
  var hidden_field11937 = null;
  var hidden_field11937__1 = function(name__5028__auto__) {
    return hidden_field11937.call(null, name__5028__auto__, null);
  };
  var hidden_field11937__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "hidden", "hidden", 1328025435, null)), name__5028__auto__, value__5029__auto__);
  };
  hidden_field11937 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return hidden_field11937__1.call(this, name__5028__auto__);
      case 2:
        return hidden_field11937__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hidden_field11937.cljs$core$IFn$_invoke$arity$1 = hidden_field11937__1;
  hidden_field11937.cljs$core$IFn$_invoke$arity$2 = hidden_field11937__2;
  return hidden_field11937;
}();
sablono.core.hidden_field = sablono.core.wrap_attrs.call(null, sablono.core.hidden_field11937);
sablono.core.month_field11938 = function() {
  var month_field11938 = null;
  var month_field11938__1 = function(name__5028__auto__) {
    return month_field11938.call(null, name__5028__auto__, null);
  };
  var month_field11938__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "month", "month", -319717006, null)), name__5028__auto__, value__5029__auto__);
  };
  month_field11938 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return month_field11938__1.call(this, name__5028__auto__);
      case 2:
        return month_field11938__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  month_field11938.cljs$core$IFn$_invoke$arity$1 = month_field11938__1;
  month_field11938.cljs$core$IFn$_invoke$arity$2 = month_field11938__2;
  return month_field11938;
}();
sablono.core.month_field = sablono.core.wrap_attrs.call(null, sablono.core.month_field11938);
sablono.core.number_field11939 = function() {
  var number_field11939 = null;
  var number_field11939__1 = function(name__5028__auto__) {
    return number_field11939.call(null, name__5028__auto__, null);
  };
  var number_field11939__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "number", "number", -1084057331, null)), name__5028__auto__, value__5029__auto__);
  };
  number_field11939 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return number_field11939__1.call(this, name__5028__auto__);
      case 2:
        return number_field11939__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  number_field11939.cljs$core$IFn$_invoke$arity$1 = number_field11939__1;
  number_field11939.cljs$core$IFn$_invoke$arity$2 = number_field11939__2;
  return number_field11939;
}();
sablono.core.number_field = sablono.core.wrap_attrs.call(null, sablono.core.number_field11939);
sablono.core.password_field11940 = function() {
  var password_field11940 = null;
  var password_field11940__1 = function(name__5028__auto__) {
    return password_field11940.call(null, name__5028__auto__, null);
  };
  var password_field11940__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "password", "password", 2057553998, null)), name__5028__auto__, value__5029__auto__);
  };
  password_field11940 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return password_field11940__1.call(this, name__5028__auto__);
      case 2:
        return password_field11940__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  password_field11940.cljs$core$IFn$_invoke$arity$1 = password_field11940__1;
  password_field11940.cljs$core$IFn$_invoke$arity$2 = password_field11940__2;
  return password_field11940;
}();
sablono.core.password_field = sablono.core.wrap_attrs.call(null, sablono.core.password_field11940);
sablono.core.range_field11941 = function() {
  var range_field11941 = null;
  var range_field11941__1 = function(name__5028__auto__) {
    return range_field11941.call(null, name__5028__auto__, null);
  };
  var range_field11941__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "range", "range", -1014743483, null)), name__5028__auto__, value__5029__auto__);
  };
  range_field11941 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return range_field11941__1.call(this, name__5028__auto__);
      case 2:
        return range_field11941__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range_field11941.cljs$core$IFn$_invoke$arity$1 = range_field11941__1;
  range_field11941.cljs$core$IFn$_invoke$arity$2 = range_field11941__2;
  return range_field11941;
}();
sablono.core.range_field = sablono.core.wrap_attrs.call(null, sablono.core.range_field11941);
sablono.core.search_field11942 = function() {
  var search_field11942 = null;
  var search_field11942__1 = function(name__5028__auto__) {
    return search_field11942.call(null, name__5028__auto__, null);
  };
  var search_field11942__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "search", "search", -1089495947, null)), name__5028__auto__, value__5029__auto__);
  };
  search_field11942 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return search_field11942__1.call(this, name__5028__auto__);
      case 2:
        return search_field11942__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  search_field11942.cljs$core$IFn$_invoke$arity$1 = search_field11942__1;
  search_field11942.cljs$core$IFn$_invoke$arity$2 = search_field11942__2;
  return search_field11942;
}();
sablono.core.search_field = sablono.core.wrap_attrs.call(null, sablono.core.search_field11942);
sablono.core.tel_field11943 = function() {
  var tel_field11943 = null;
  var tel_field11943__1 = function(name__5028__auto__) {
    return tel_field11943.call(null, name__5028__auto__, null);
  };
  var tel_field11943__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "tel", "tel", 1864669686, null)), name__5028__auto__, value__5029__auto__);
  };
  tel_field11943 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return tel_field11943__1.call(this, name__5028__auto__);
      case 2:
        return tel_field11943__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tel_field11943.cljs$core$IFn$_invoke$arity$1 = tel_field11943__1;
  tel_field11943.cljs$core$IFn$_invoke$arity$2 = tel_field11943__2;
  return tel_field11943;
}();
sablono.core.tel_field = sablono.core.wrap_attrs.call(null, sablono.core.tel_field11943);
sablono.core.text_field11944 = function() {
  var text_field11944 = null;
  var text_field11944__1 = function(name__5028__auto__) {
    return text_field11944.call(null, name__5028__auto__, null);
  };
  var text_field11944__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "text", "text", -150030170, null)), name__5028__auto__, value__5029__auto__);
  };
  text_field11944 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return text_field11944__1.call(this, name__5028__auto__);
      case 2:
        return text_field11944__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_field11944.cljs$core$IFn$_invoke$arity$1 = text_field11944__1;
  text_field11944.cljs$core$IFn$_invoke$arity$2 = text_field11944__2;
  return text_field11944;
}();
sablono.core.text_field = sablono.core.wrap_attrs.call(null, sablono.core.text_field11944);
sablono.core.time_field11945 = function() {
  var time_field11945 = null;
  var time_field11945__1 = function(name__5028__auto__) {
    return time_field11945.call(null, name__5028__auto__, null);
  };
  var time_field11945__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "time", "time", -1268547887, null)), name__5028__auto__, value__5029__auto__);
  };
  time_field11945 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return time_field11945__1.call(this, name__5028__auto__);
      case 2:
        return time_field11945__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  time_field11945.cljs$core$IFn$_invoke$arity$1 = time_field11945__1;
  time_field11945.cljs$core$IFn$_invoke$arity$2 = time_field11945__2;
  return time_field11945;
}();
sablono.core.time_field = sablono.core.wrap_attrs.call(null, sablono.core.time_field11945);
sablono.core.url_field11946 = function() {
  var url_field11946 = null;
  var url_field11946__1 = function(name__5028__auto__) {
    return url_field11946.call(null, name__5028__auto__, null);
  };
  var url_field11946__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "url", "url", 1916828573, null)), name__5028__auto__, value__5029__auto__);
  };
  url_field11946 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return url_field11946__1.call(this, name__5028__auto__);
      case 2:
        return url_field11946__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  url_field11946.cljs$core$IFn$_invoke$arity$1 = url_field11946__1;
  url_field11946.cljs$core$IFn$_invoke$arity$2 = url_field11946__2;
  return url_field11946;
}();
sablono.core.url_field = sablono.core.wrap_attrs.call(null, sablono.core.url_field11946);
sablono.core.week_field11947 = function() {
  var week_field11947 = null;
  var week_field11947__1 = function(name__5028__auto__) {
    return week_field11947.call(null, name__5028__auto__, null);
  };
  var week_field11947__2 = function(name__5028__auto__, value__5029__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "week", "week", 314058249, null)), name__5028__auto__, value__5029__auto__);
  };
  week_field11947 = function(name__5028__auto__, value__5029__auto__) {
    switch(arguments.length) {
      case 1:
        return week_field11947__1.call(this, name__5028__auto__);
      case 2:
        return week_field11947__2.call(this, name__5028__auto__, value__5029__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  week_field11947.cljs$core$IFn$_invoke$arity$1 = week_field11947__1;
  week_field11947.cljs$core$IFn$_invoke$arity$2 = week_field11947__2;
  return week_field11947;
}();
sablono.core.week_field = sablono.core.wrap_attrs.call(null, sablono.core.week_field11947);
sablono.core.file_upload = sablono.core.file_field;
sablono.core.check_box11948 = function() {
  var check_box11948 = null;
  var check_box11948__1 = function(name) {
    return check_box11948.call(null, name, null);
  };
  var check_box11948__2 = function(name, checked_QMARK_) {
    return check_box11948.call(null, name, checked_QMARK_, "true");
  };
  var check_box11948__3 = function(name, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 
    305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  check_box11948 = function(name, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return check_box11948__1.call(this, name);
      case 2:
        return check_box11948__2.call(this, name, checked_QMARK_);
      case 3:
        return check_box11948__3.call(this, name, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  check_box11948.cljs$core$IFn$_invoke$arity$1 = check_box11948__1;
  check_box11948.cljs$core$IFn$_invoke$arity$2 = check_box11948__2;
  check_box11948.cljs$core$IFn$_invoke$arity$3 = check_box11948__3;
  return check_box11948;
}();
sablono.core.check_box = sablono.core.wrap_attrs.call(null, sablono.core.check_box11948);
sablono.core.radio_button11949 = function() {
  var radio_button11949 = null;
  var radio_button11949__1 = function(group) {
    return radio_button11949.call(null, group, null);
  };
  var radio_button11949__2 = function(group, checked_QMARK_) {
    return radio_button11949.call(null, group, checked_QMARK_, "true");
  };
  var radio_button11949__3 = function(group, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "radio", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, group), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util.as_str.call(null, 
    group)) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util.as_str.call(null, value))), new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  radio_button11949 = function(group, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return radio_button11949__1.call(this, group);
      case 2:
        return radio_button11949__2.call(this, group, checked_QMARK_);
      case 3:
        return radio_button11949__3.call(this, group, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  radio_button11949.cljs$core$IFn$_invoke$arity$1 = radio_button11949__1;
  radio_button11949.cljs$core$IFn$_invoke$arity$2 = radio_button11949__2;
  radio_button11949.cljs$core$IFn$_invoke$arity$3 = radio_button11949__3;
  return radio_button11949;
}();
sablono.core.radio_button = sablono.core.wrap_attrs.call(null, sablono.core.radio_button11949);
sablono.core.select_options11950 = function() {
  var select_options11950 = null;
  var select_options11950__1 = function(coll) {
    return select_options11950.call(null, coll, null);
  };
  var select_options11950__2 = function(coll, selected) {
    var iter__4278__auto__ = function iter__11959(s__11960) {
      return new cljs.core.LazySeq(null, function() {
        var s__11960__$1 = s__11960;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__11960__$1);
          if (temp__4126__auto__) {
            var s__11960__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__11960__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__11960__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__11962 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__11961 = 0;
                while (true) {
                  if (i__11961 < size__4277__auto__) {
                    var x = cljs.core._nth.call(null, c__4276__auto__, i__11961);
                    cljs.core.chunk_append.call(null, b__11962, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                      var vec__11965 = x;
                      var text = cljs.core.nth.call(null, vec__11965, 0, null);
                      var val = cljs.core.nth.call(null, vec__11965, 1, null);
                      var disabled_QMARK_ = cljs.core.nth.call(null, vec__11965, 2, null);
                      var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                      if (cljs.core.sequential_QMARK_.call(null, val)) {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options11950.call(null, val, selected)], null);
                      } else {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                      }
                    }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null));
                    var G__11967 = i__11961 + 1;
                    i__11961 = G__11967;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11962), iter__11959.call(null, cljs.core.chunk_rest.call(null, s__11960__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11962), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__11960__$2);
              return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                var vec__11966 = x;
                var text = cljs.core.nth.call(null, vec__11966, 0, null);
                var val = cljs.core.nth.call(null, vec__11966, 1, null);
                var disabled_QMARK_ = cljs.core.nth.call(null, vec__11966, 2, null);
                var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                if (cljs.core.sequential_QMARK_.call(null, val)) {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options11950.call(null, val, selected)], null);
                } else {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                }
              }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null), iter__11959.call(null, cljs.core.rest.call(null, s__11960__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, coll);
  };
  select_options11950 = function(coll, selected) {
    switch(arguments.length) {
      case 1:
        return select_options11950__1.call(this, coll);
      case 2:
        return select_options11950__2.call(this, coll, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select_options11950.cljs$core$IFn$_invoke$arity$1 = select_options11950__1;
  select_options11950.cljs$core$IFn$_invoke$arity$2 = select_options11950__2;
  return select_options11950;
}();
sablono.core.select_options = sablono.core.wrap_attrs.call(null, sablono.core.select_options11950);
sablono.core.drop_down11968 = function() {
  var drop_down11968 = null;
  var drop_down11968__2 = function(name, options) {
    return drop_down11968.call(null, name, options, null);
  };
  var drop_down11968__3 = function(name, options, selected) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name)], null), sablono.core.select_options.call(null, options, selected)], null);
  };
  drop_down11968 = function(name, options, selected) {
    switch(arguments.length) {
      case 2:
        return drop_down11968__2.call(this, name, options);
      case 3:
        return drop_down11968__3.call(this, name, options, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_down11968.cljs$core$IFn$_invoke$arity$2 = drop_down11968__2;
  drop_down11968.cljs$core$IFn$_invoke$arity$3 = drop_down11968__3;
  return drop_down11968;
}();
sablono.core.drop_down = sablono.core.wrap_attrs.call(null, sablono.core.drop_down11968);
sablono.core.text_area11969 = function() {
  var text_area11969 = null;
  var text_area11969__1 = function(name) {
    return text_area11969.call(null, name, null);
  };
  var text_area11969__2 = function(name, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), value], null)], null);
  };
  text_area11969 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return text_area11969__1.call(this, name);
      case 2:
        return text_area11969__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_area11969.cljs$core$IFn$_invoke$arity$1 = text_area11969__1;
  text_area11969.cljs$core$IFn$_invoke$arity$2 = text_area11969__2;
  return text_area11969;
}();
sablono.core.text_area = sablono.core.wrap_attrs.call(null, sablono.core.text_area11969);
sablono.core.label11970 = function label11970(name, text) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720), sablono.core.make_id.call(null, name)], null), text], null);
};
sablono.core.label = sablono.core.wrap_attrs.call(null, sablono.core.label11970);
sablono.core.submit_button11971 = function submit_button11971(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "submit", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.submit_button = sablono.core.wrap_attrs.call(null, sablono.core.submit_button11971);
sablono.core.reset_button11972 = function reset_button11972(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "reset", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.reset_button = sablono.core.wrap_attrs.call(null, sablono.core.reset_button11972);
sablono.core.form_to11973 = function() {
  var form_to11973__delegate = function(p__11974, body) {
    var vec__11976 = p__11974;
    var method = cljs.core.nth.call(null, vec__11976, 0, null);
    var action = cljs.core.nth.call(null, vec__11976, 1, null);
    var method_str = clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
    var action_uri = sablono.util.to_uri.call(null, action);
    return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "get", "get", 1683182755), null, new cljs.core.Keyword(null, "post", "post", 269697687), null], null), null), method) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "method", "method", 55703592), method_str, new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), "POST", new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null), 
    sablono.core.hidden_field.call(null, "_method", method_str)], null), body));
  };
  var form_to11973 = function(p__11974, var_args) {
    var body = null;
    if (arguments.length > 1) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form_to11973__delegate.call(this, p__11974, body);
  };
  form_to11973.cljs$lang$maxFixedArity = 1;
  form_to11973.cljs$lang$applyTo = function(arglist__11977) {
    var p__11974 = cljs.core.first(arglist__11977);
    var body = cljs.core.rest(arglist__11977);
    return form_to11973__delegate(p__11974, body);
  };
  form_to11973.cljs$core$IFn$_invoke$arity$variadic = form_to11973__delegate;
  return form_to11973;
}();
sablono.core.form_to = sablono.core.wrap_attrs.call(null, sablono.core.form_to11973);
goog.provide("t3tr0s_slides.slide04");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide04.dark_green = "#143";
t3tr0s_slides.slide04.light_green = "#175";
t3tr0s_slides.slide04.dark_purple = "#449";
t3tr0s_slides.slide04.light_purple = "#6ad";
t3tr0s_slides.slide04.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide04.rotate_coord = function rotate_coord(p__26495) {
  var vec__26497 = p__26495;
  var x = cljs.core.nth.call(null, vec__26497, 0, null);
  var y = cljs.core.nth.call(null, vec__26497, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide04.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide04.rotate_coord, piece);
};
t3tr0s_slides.slide04.r0 = (new cljs.core.Keyword(null, "L", "L", -1038307519)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide04.pieces);
t3tr0s_slides.slide04.r1 = t3tr0s_slides.slide04.rotate_piece.call(null, t3tr0s_slides.slide04.r0);
t3tr0s_slides.slide04.r2 = t3tr0s_slides.slide04.rotate_piece.call(null, t3tr0s_slides.slide04.r1);
t3tr0s_slides.slide04.r3 = t3tr0s_slides.slide04.rotate_piece.call(null, t3tr0s_slides.slide04.r2);
t3tr0s_slides.slide04.rotations = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [t3tr0s_slides.slide04.r0, t3tr0s_slides.slide04.r1, t3tr0s_slides.slide04.r2, t3tr0s_slides.slide04.r3], null);
t3tr0s_slides.slide04.positions = new cljs.core.PersistentArrayMap.fromArray([t3tr0s_slides.slide04.r0, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null), t3tr0s_slides.slide04.r1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null), t3tr0s_slides.slide04.r2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 10], null), t3tr0s_slides.slide04.r3, new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 15], null)], true, false);
t3tr0s_slides.slide04.piece_abs_coords = function piece_abs_coords(piece) {
  var vec__26501 = t3tr0s_slides.slide04.positions.call(null, piece);
  var cx = cljs.core.nth.call(null, vec__26501, 0, null);
  var cy = cljs.core.nth.call(null, vec__26501, 1, null);
  return cljs.core.mapv.call(null, function(vec__26501, cx, cy) {
    return function(p__26502) {
      var vec__26503 = p__26502;
      var x = cljs.core.nth.call(null, vec__26503, 0, null);
      var y = cljs.core.nth.call(null, vec__26503, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__26501, cx, cy), piece);
};
t3tr0s_slides.slide04.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "index", "index", -1531685915), null], null));
t3tr0s_slides.slide04.rows = 20;
t3tr0s_slides.slide04.cols = 10;
t3tr0s_slides.slide04.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide04.cols, 0));
t3tr0s_slides.slide04.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide04.rows, t3tr0s_slides.slide04.empty_row));
t3tr0s_slides.slide04.piece_code = function piece_code(piece, pkey, app) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "piece" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(pkey), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-row-534ed" : 
  "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), piece);
  }], null), "   [", function() {
    var iter__4278__auto__ = function iter__26518(s__26519) {
      return new cljs.core.LazySeq(null, function() {
        var s__26519__$1 = s__26519;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__26519__$1);
          if (temp__4126__auto__) {
            var s__26519__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__26519__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__26519__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__26521 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__26520 = 0;
                while (true) {
                  if (i__26520 < size__4277__auto__) {
                    var vec__26526 = cljs.core._nth.call(null, c__4276__auto__, i__26520);
                    var index = cljs.core.nth.call(null, vec__26526, 0, null);
                    var vec__26527 = cljs.core.nth.call(null, vec__26526, 1, null);
                    var x = cljs.core.nth.call(null, vec__26527, 0, null);
                    var y = cljs.core.nth.call(null, vec__26527, 1, null);
                    cljs.core.chunk_append.call(null, b__26521, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "index" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, index, (new cljs.core.Keyword(null, "index", "index", 
                    -1531685915)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(i__26520, vec__26526, index, vec__26527, x, y, c__4276__auto__, size__4277__auto__, b__26521, s__26519__$2, temp__4126__auto__) {
                      return function() {
                        return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
                      };
                    }(i__26520, vec__26526, index, vec__26527, x, y, c__4276__auto__, size__4277__auto__, b__26521, s__26519__$2, temp__4126__auto__)], null), function() {
                      var pad = function(i__26520, vec__26526, index, vec__26527, x, y, c__4276__auto__, size__4277__auto__, b__26521, s__26519__$2, temp__4126__auto__) {
                        return function(p1__26504_SHARP_) {
                          if (p1__26504_SHARP_ < 0) {
                            return p1__26504_SHARP_;
                          } else {
                            return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__26504_SHARP_);
                          }
                        };
                      }(i__26520, vec__26526, index, vec__26527, x, y, c__4276__auto__, size__4277__auto__, b__26521, s__26519__$2, temp__4126__auto__);
                      var fmt = function(i__26520, pad, vec__26526, index, vec__26527, x, y, c__4276__auto__, size__4277__auto__, b__26521, s__26519__$2, temp__4126__auto__) {
                        return function(p1__26505_SHARP_) {
                          return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__26505_SHARP_));
                        };
                      }(i__26520, pad, vec__26526, index, vec__26527, x, y, c__4276__auto__, size__4277__auto__, b__26521, s__26519__$2, temp__4126__auto__);
                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), " [");
                    }()], null));
                    var G__26530 = i__26520 + 1;
                    i__26520 = G__26530;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26521), iter__26518.call(null, cljs.core.chunk_rest.call(null, s__26519__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26521), null);
              }
            } else {
              var vec__26528 = cljs.core.first.call(null, s__26519__$2);
              var index = cljs.core.nth.call(null, vec__26528, 0, null);
              var vec__26529 = cljs.core.nth.call(null, vec__26528, 1, null);
              var x = cljs.core.nth.call(null, vec__26529, 0, null);
              var y = cljs.core.nth.call(null, vec__26529, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "index" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, index, (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app)) ? 
              "active-col-d9099" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(vec__26528, index, vec__26529, x, y, s__26519__$2, temp__4126__auto__) {
                return function() {
                  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
                };
              }(vec__26528, index, vec__26529, x, y, s__26519__$2, temp__4126__auto__)], null), function() {
                var pad = function(vec__26528, index, vec__26529, x, y, s__26519__$2, temp__4126__auto__) {
                  return function(p1__26504_SHARP_) {
                    if (p1__26504_SHARP_ < 0) {
                      return p1__26504_SHARP_;
                    } else {
                      return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__26504_SHARP_);
                    }
                  };
                }(vec__26528, index, vec__26529, x, y, s__26519__$2, temp__4126__auto__);
                var fmt = function(pad, vec__26528, index, vec__26529, x, y, s__26519__$2, temp__4126__auto__) {
                  return function(p1__26505_SHARP_) {
                    return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__26505_SHARP_));
                  };
                }(pad, vec__26528, index, vec__26529, x, y, s__26519__$2, temp__4126__auto__);
                return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), " [");
              }()], null), iter__26518.call(null, cljs.core.rest.call(null, s__26519__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, piece));
  }(), " ]"], null);
};
var ufv___26544 = schema.utils.use_fn_validation;
var output_schema26532_26545 = schema.core.Any;
var input_schema26533_26546 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker26534_26547 = schema.core.checker.call(null, input_schema26533_26546);
var output_checker26535_26548 = schema.core.checker.call(null, output_schema26532_26545);
t3tr0s_slides.slide04.code = function(ufv___26544, output_schema26532_26545, input_schema26533_26546, input_checker26534_26547, output_checker26535_26548) {
  return function code(G__26536, G__26537) {
    var validate__5821__auto__ = ufv___26544.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___26549 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26536, G__26537], null);
      var temp__4126__auto___26550 = input_checker26534_26547.call(null, args__5822__auto___26549);
      if (cljs.core.truth_(temp__4126__auto___26550)) {
        var error__5823__auto___26551 = temp__4126__auto___26550;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___26551)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema26533_26546, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___26549, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___26551], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__26536;
      var owner = G__26537;
      while (true) {
        if (typeof t3tr0s_slides.slide04.t26541 !== "undefined") {
        } else {
          t3tr0s_slides.slide04.t26541 = function(owner, input_schema26533, G__26537, validate__5821__auto__, output_schema26532, G__26536, output_checker26535, input_checker26534, app, ufv__, code, meta26542) {
            this.owner = owner;
            this.input_schema26533 = input_schema26533;
            this.G__26537 = G__26537;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema26532 = output_schema26532;
            this.G__26536 = G__26536;
            this.output_checker26535 = output_checker26535;
            this.input_checker26534 = input_checker26534;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta26542 = meta26542;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide04.t26541.cljs$lang$type = true;
          t3tr0s_slides.slide04.t26541.cljs$lang$ctorStr = "t3tr0s-slides.slide04/t26541";
          t3tr0s_slides.slide04.t26541.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___26544, output_schema26532_26545, input_schema26533_26546, input_checker26534_26547, output_checker26535_26548) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide04/t26541");
            };
          }(validate__5821__auto__, ufv___26544, output_schema26532_26545, input_schema26533_26546, input_checker26534_26547, output_checker26535_26548);
          t3tr0s_slides.slide04.t26541.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide04.t26541.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___26544, output_schema26532_26545, input_schema26533_26546, input_checker26534_26547, output_checker26535_26548) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " rotate-coord [[x y]]\n", "  [ (- y) x ])\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " rotate-piece [piece]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "mapv")), " rotate-coord piece))\n", 
              "\n\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " r0 (:L pieces))\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide04.piece_code.call(null, t3tr0s_slides.slide04.r0, 0, self__.app)), "\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " r1 (rotate-piece r0))\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide04.piece_code.call(null, 
              t3tr0s_slides.slide04.r1, 1, self__.app)), "\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " r2 (rotate-piece r1))\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide04.piece_code.call(null, t3tr0s_slides.slide04.r2, 2, self__.app)), "\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " r3 (rotate-piece r2))\n", "\n", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.slide04.piece_code.call(null, t3tr0s_slides.slide04.r3, 3, self__.app)), "\n")));
            };
          }(validate__5821__auto__, ufv___26544, output_schema26532_26545, input_schema26533_26546, input_checker26534_26547, output_checker26535_26548);
          t3tr0s_slides.slide04.t26541.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___26544, output_schema26532_26545, input_schema26533_26546, input_checker26534_26547, output_checker26535_26548) {
            return function(_26543) {
              var self__ = this;
              var _26543__$1 = this;
              return self__.meta26542;
            };
          }(validate__5821__auto__, ufv___26544, output_schema26532_26545, input_schema26533_26546, input_checker26534_26547, output_checker26535_26548);
          t3tr0s_slides.slide04.t26541.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___26544, output_schema26532_26545, input_schema26533_26546, input_checker26534_26547, output_checker26535_26548) {
            return function(_26543, meta26542__$1) {
              var self__ = this;
              var _26543__$1 = this;
              return new t3tr0s_slides.slide04.t26541(self__.owner, self__.input_schema26533, self__.G__26537, self__.validate__5821__auto__, self__.output_schema26532, self__.G__26536, self__.output_checker26535, self__.input_checker26534, self__.app, self__.ufv__, self__.code, meta26542__$1);
            };
          }(validate__5821__auto__, ufv___26544, output_schema26532_26545, input_schema26533_26546, input_checker26534_26547, output_checker26535_26548);
          t3tr0s_slides.slide04.__GT_t26541 = function(validate__5821__auto__, ufv___26544, output_schema26532_26545, input_schema26533_26546, input_checker26534_26547, output_checker26535_26548) {
            return function __GT_t26541(owner__$1, input_schema26533__$1, G__26537__$1, validate__5821__auto____$1, output_schema26532__$1, G__26536__$1, output_checker26535__$1, input_checker26534__$1, app__$1, ufv____$1, code__$1, meta26542) {
              return new t3tr0s_slides.slide04.t26541(owner__$1, input_schema26533__$1, G__26537__$1, validate__5821__auto____$1, output_schema26532__$1, G__26536__$1, output_checker26535__$1, input_checker26534__$1, app__$1, ufv____$1, code__$1, meta26542);
            };
          }(validate__5821__auto__, ufv___26544, output_schema26532_26545, input_schema26533_26546, input_checker26534_26547, output_checker26535_26548);
        }
        return new t3tr0s_slides.slide04.t26541(owner, input_schema26533_26546, G__26537, validate__5821__auto__, output_schema26532_26545, G__26536, output_checker26535_26548, input_checker26534_26547, app, ufv___26544, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___26552 = output_checker26535_26548.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___26552)) {
        var error__5823__auto___26553 = temp__4126__auto___26552;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___26553)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema26532_26545, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___26553], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___26544, output_schema26532_26545, input_schema26533_26546, input_checker26534_26547, output_checker26535_26548);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide04.code), schema.core.make_fn_schema.call(null, output_schema26532_26545, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26533_26546], null)));
t3tr0s_slides.slide04.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide04.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m26531) {
    return om.core.build.call(null, t3tr0s_slides.slide04.code, cursor__9685__auto__, m26531);
  };
  __GT_code = function(cursor__9685__auto__, m26531) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m26531);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide04.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide04.rows);
t3tr0s_slides.slide04.piece_index = function piece_index(x, y) {
  return cljs.core.some.call(null, cljs.core.identity, cljs.core.map.call(null, function(p1__26554_SHARP_) {
    return cljs.core.first.call(null, cljs.core.keep_indexed.call(null, function(i, p__26557) {
      var vec__26558 = p__26557;
      var px = cljs.core.nth.call(null, vec__26558, 0, null);
      var py = cljs.core.nth.call(null, vec__26558, 1, null);
      if (cljs.core._EQ_.call(null, px, x) && cljs.core._EQ_.call(null, py, y)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__26554_SHARP_, i], null);
      } else {
        return null;
      }
    }, t3tr0s_slides.slide04.piece_abs_coords.call(null, p1__26554_SHARP_)));
  }, t3tr0s_slides.slide04.rotations));
};
t3tr0s_slides.slide04.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide04.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide04.cell_size);
  var vec__26560 = t3tr0s_slides.slide04.piece_index.call(null, col, row);
  var piece = cljs.core.nth.call(null, vec__26560, 0, null);
  var index = cljs.core.nth.call(null, vec__26560, 1, null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return index;
    } else {
      return and__3541__auto__;
    }
  }())) {
    om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), piece);
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
  } else {
    return null;
  }
};
t3tr0s_slides.slide04.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__26561, is_piece, is_index, is_center) {
  var vec__26563 = p__26561;
  var x = cljs.core.nth.call(null, vec__26563, 0, null);
  var y = cljs.core.nth.call(null, vec__26563, 1, null);
  ctx.fillStyle = cljs.core.truth_(is_index) ? t3tr0s_slides.slide04.dark_purple : cljs.core.truth_(is_piece) ? t3tr0s_slides.slide04.dark_green : "transparent";
  ctx.strokeStyle = cljs.core.truth_(is_index) ? t3tr0s_slides.slide04.light_purple : cljs.core.truth_(is_piece) ? t3tr0s_slides.slide04.light_green : "#888";
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide04.cell_size * x;
  var ry = t3tr0s_slides.slide04.cell_size * y;
  var rs = t3tr0s_slides.slide04.cell_size;
  var cx = t3tr0s_slides.slide04.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide04.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide04.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide04.draw_piece_BANG_ = function draw_piece_BANG_(app, ctx, piece) {
  var is_piece = cljs.core._EQ_.call(null, piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app));
  var index = (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app);
  var center = t3tr0s_slides.slide04.positions.call(null, piece);
  var seq__26576_26588 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide04.piece_abs_coords.call(null, piece)));
  var chunk__26577_26589 = null;
  var count__26578_26590 = 0;
  var i__26579_26591 = 0;
  while (true) {
    if (i__26579_26591 < count__26578_26590) {
      var vec__26580_26592 = cljs.core._nth.call(null, chunk__26577_26589, i__26579_26591);
      var i_26593 = cljs.core.nth.call(null, vec__26580_26592, 0, null);
      var c_26594 = cljs.core.nth.call(null, vec__26580_26592, 1, null);
      if (cljs.core._EQ_.call(null, i_26593, index)) {
      } else {
        t3tr0s_slides.slide04.draw_cell_BANG_.call(null, ctx, c_26594, is_piece, cljs.core._EQ_.call(null, i_26593, index), cljs.core._EQ_.call(null, c_26594, center));
      }
      var G__26595 = seq__26576_26588;
      var G__26596 = chunk__26577_26589;
      var G__26597 = count__26578_26590;
      var G__26598 = i__26579_26591 + 1;
      seq__26576_26588 = G__26595;
      chunk__26577_26589 = G__26596;
      count__26578_26590 = G__26597;
      i__26579_26591 = G__26598;
      continue;
    } else {
      var temp__4126__auto___26599 = cljs.core.seq.call(null, seq__26576_26588);
      if (temp__4126__auto___26599) {
        var seq__26576_26600__$1 = temp__4126__auto___26599;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__26576_26600__$1)) {
          var c__4309__auto___26601 = cljs.core.chunk_first.call(null, seq__26576_26600__$1);
          var G__26602 = cljs.core.chunk_rest.call(null, seq__26576_26600__$1);
          var G__26603 = c__4309__auto___26601;
          var G__26604 = cljs.core.count.call(null, c__4309__auto___26601);
          var G__26605 = 0;
          seq__26576_26588 = G__26602;
          chunk__26577_26589 = G__26603;
          count__26578_26590 = G__26604;
          i__26579_26591 = G__26605;
          continue;
        } else {
          var vec__26581_26606 = cljs.core.first.call(null, seq__26576_26600__$1);
          var i_26607 = cljs.core.nth.call(null, vec__26581_26606, 0, null);
          var c_26608 = cljs.core.nth.call(null, vec__26581_26606, 1, null);
          if (cljs.core._EQ_.call(null, i_26607, index)) {
          } else {
            t3tr0s_slides.slide04.draw_cell_BANG_.call(null, ctx, c_26608, is_piece, cljs.core._EQ_.call(null, i_26607, index), cljs.core._EQ_.call(null, c_26608, center));
          }
          var G__26609 = cljs.core.next.call(null, seq__26576_26600__$1);
          var G__26610 = null;
          var G__26611 = 0;
          var G__26612 = 0;
          seq__26576_26588 = G__26609;
          chunk__26577_26589 = G__26610;
          count__26578_26590 = G__26611;
          i__26579_26591 = G__26612;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__26582 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide04.piece_abs_coords.call(null, piece)));
  var chunk__26583 = null;
  var count__26584 = 0;
  var i__26585 = 0;
  while (true) {
    if (i__26585 < count__26584) {
      var vec__26586 = cljs.core._nth.call(null, chunk__26583, i__26585);
      var i = cljs.core.nth.call(null, vec__26586, 0, null);
      var c = cljs.core.nth.call(null, vec__26586, 1, null);
      if (cljs.core._EQ_.call(null, i, index)) {
        t3tr0s_slides.slide04.draw_cell_BANG_.call(null, ctx, c, is_piece, cljs.core._EQ_.call(null, i, index), cljs.core._EQ_.call(null, c, center));
      } else {
      }
      var G__26613 = seq__26582;
      var G__26614 = chunk__26583;
      var G__26615 = count__26584;
      var G__26616 = i__26585 + 1;
      seq__26582 = G__26613;
      chunk__26583 = G__26614;
      count__26584 = G__26615;
      i__26585 = G__26616;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__26582);
      if (temp__4126__auto__) {
        var seq__26582__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__26582__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__26582__$1);
          var G__26617 = cljs.core.chunk_rest.call(null, seq__26582__$1);
          var G__26618 = c__4309__auto__;
          var G__26619 = cljs.core.count.call(null, c__4309__auto__);
          var G__26620 = 0;
          seq__26582 = G__26617;
          chunk__26583 = G__26618;
          count__26584 = G__26619;
          i__26585 = G__26620;
          continue;
        } else {
          var vec__26587 = cljs.core.first.call(null, seq__26582__$1);
          var i = cljs.core.nth.call(null, vec__26587, 0, null);
          var c = cljs.core.nth.call(null, vec__26587, 1, null);
          if (cljs.core._EQ_.call(null, i, index)) {
            t3tr0s_slides.slide04.draw_cell_BANG_.call(null, ctx, c, is_piece, cljs.core._EQ_.call(null, i, index), cljs.core._EQ_.call(null, c, center));
          } else {
          }
          var G__26621 = cljs.core.next.call(null, seq__26582__$1);
          var G__26622 = null;
          var G__26623 = 0;
          var G__26624 = 0;
          seq__26582 = G__26621;
          chunk__26583 = G__26622;
          count__26584 = G__26623;
          i__26585 = G__26624;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide04.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide04.cell_size * t3tr0s_slides.slide04.cols, t3tr0s_slides.slide04.cell_size * t3tr0s_slides.slide04.rows);
  var seq__26629 = cljs.core.seq.call(null, t3tr0s_slides.slide04.rotations);
  var chunk__26630 = null;
  var count__26631 = 0;
  var i__26632 = 0;
  while (true) {
    if (i__26632 < count__26631) {
      var p = cljs.core._nth.call(null, chunk__26630, i__26632);
      t3tr0s_slides.slide04.draw_piece_BANG_.call(null, app, ctx, p);
      var G__26633 = seq__26629;
      var G__26634 = chunk__26630;
      var G__26635 = count__26631;
      var G__26636 = i__26632 + 1;
      seq__26629 = G__26633;
      chunk__26630 = G__26634;
      count__26631 = G__26635;
      i__26632 = G__26636;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__26629);
      if (temp__4126__auto__) {
        var seq__26629__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__26629__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__26629__$1);
          var G__26637 = cljs.core.chunk_rest.call(null, seq__26629__$1);
          var G__26638 = c__4309__auto__;
          var G__26639 = cljs.core.count.call(null, c__4309__auto__);
          var G__26640 = 0;
          seq__26629 = G__26637;
          chunk__26630 = G__26638;
          count__26631 = G__26639;
          i__26632 = G__26640;
          continue;
        } else {
          var p = cljs.core.first.call(null, seq__26629__$1);
          t3tr0s_slides.slide04.draw_piece_BANG_.call(null, app, ctx, p);
          var G__26641 = cljs.core.next.call(null, seq__26629__$1);
          var G__26642 = null;
          var G__26643 = 0;
          var G__26644 = 0;
          seq__26629 = G__26641;
          chunk__26630 = G__26642;
          count__26631 = G__26643;
          i__26632 = G__26644;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
var ufv___26659 = schema.utils.use_fn_validation;
var output_schema26647_26660 = schema.core.Any;
var input_schema26648_26661 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker26649_26662 = schema.core.checker.call(null, input_schema26648_26661);
var output_checker26650_26663 = schema.core.checker.call(null, output_schema26647_26660);
t3tr0s_slides.slide04.canvas = function(ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663) {
  return function canvas(G__26651, G__26652) {
    var validate__5821__auto__ = ufv___26659.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___26664 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26651, G__26652], null);
      var temp__4126__auto___26665 = input_checker26649_26662.call(null, args__5822__auto___26664);
      if (cljs.core.truth_(temp__4126__auto___26665)) {
        var error__5823__auto___26666 = temp__4126__auto___26665;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___26666)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema26648_26661, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___26664, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___26666], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__26651;
      var owner = G__26652;
      while (true) {
        if (typeof t3tr0s_slides.slide04.t26656 !== "undefined") {
        } else {
          t3tr0s_slides.slide04.t26656 = function(owner, output_checker26650, input_schema26648, validate__5821__auto__, output_schema26647, G__26652, G__26651, canvas, input_checker26649, app, ufv__, meta26657) {
            this.owner = owner;
            this.output_checker26650 = output_checker26650;
            this.input_schema26648 = input_schema26648;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema26647 = output_schema26647;
            this.G__26652 = G__26652;
            this.G__26651 = G__26651;
            this.canvas = canvas;
            this.input_checker26649 = input_checker26649;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta26657 = meta26657;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide04.t26656.cljs$lang$type = true;
          t3tr0s_slides.slide04.t26656.cljs$lang$ctorStr = "t3tr0s-slides.slide04/t26656";
          t3tr0s_slides.slide04.t26656.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide04/t26656");
            };
          }(validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663);
          t3tr0s_slides.slide04.t26656.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide04.t26656.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseMove":function(___$1, validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663) {
                return function(p1__26645_SHARP_) {
                  return t3tr0s_slides.slide04.canvas_mouse.call(null, self__.app, self__.owner, p1__26645_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663), "onMouseLeave":function(___$1, validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663) {
                return function() {
                  om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "row", "row", -570139521), null);
                  return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "col", "col", -1959363084), null);
                };
              }(___$1, validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663)}));
            };
          }(validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663);
          t3tr0s_slides.slide04.t26656.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide04.t26656.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide04.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663);
          t3tr0s_slides.slide04.t26656.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide04.t26656.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide04.cols * t3tr0s_slides.slide04.cell_size;
              canvas__$2.height = t3tr0s_slides.slide04.rows * t3tr0s_slides.slide04.cell_size;
              return t3tr0s_slides.slide04.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663);
          t3tr0s_slides.slide04.t26656.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663) {
            return function(_26658) {
              var self__ = this;
              var _26658__$1 = this;
              return self__.meta26657;
            };
          }(validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663);
          t3tr0s_slides.slide04.t26656.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663) {
            return function(_26658, meta26657__$1) {
              var self__ = this;
              var _26658__$1 = this;
              return new t3tr0s_slides.slide04.t26656(self__.owner, self__.output_checker26650, self__.input_schema26648, self__.validate__5821__auto__, self__.output_schema26647, self__.G__26652, self__.G__26651, self__.canvas, self__.input_checker26649, self__.app, self__.ufv__, meta26657__$1);
            };
          }(validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663);
          t3tr0s_slides.slide04.__GT_t26656 = function(validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663) {
            return function __GT_t26656(owner__$1, output_checker26650__$1, input_schema26648__$1, validate__5821__auto____$1, output_schema26647__$1, G__26652__$1, G__26651__$1, canvas__$1, input_checker26649__$1, app__$1, ufv____$1, meta26657) {
              return new t3tr0s_slides.slide04.t26656(owner__$1, output_checker26650__$1, input_schema26648__$1, validate__5821__auto____$1, output_schema26647__$1, G__26652__$1, G__26651__$1, canvas__$1, input_checker26649__$1, app__$1, ufv____$1, meta26657);
            };
          }(validate__5821__auto__, ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663);
        }
        return new t3tr0s_slides.slide04.t26656(owner, output_checker26650_26663, input_schema26648_26661, validate__5821__auto__, output_schema26647_26660, G__26652, G__26651, canvas, input_checker26649_26662, app, ufv___26659, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___26667 = output_checker26650_26663.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___26667)) {
        var error__5823__auto___26668 = temp__4126__auto___26667;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___26668)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema26647_26660, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___26668], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___26659, output_schema26647_26660, input_schema26648_26661, input_checker26649_26662, output_checker26650_26663);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide04.canvas), schema.core.make_fn_schema.call(null, output_schema26647_26660, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26648_26661], null)));
t3tr0s_slides.slide04.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide04.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m26646) {
    return om.core.build.call(null, t3tr0s_slides.slide04.canvas, cursor__9685__auto__, m26646);
  };
  __GT_canvas = function(cursor__9685__auto__, m26646) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m26646);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___26686 = schema.utils.use_fn_validation;
var output_schema26670_26687 = schema.core.Any;
var input_schema26671_26688 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker26672_26689 = schema.core.checker.call(null, input_schema26671_26688);
var output_checker26673_26690 = schema.core.checker.call(null, output_schema26670_26687);
t3tr0s_slides.slide04.slide = function(ufv___26686, output_schema26670_26687, input_schema26671_26688, input_checker26672_26689, output_checker26673_26690) {
  return function slide(G__26674, G__26675) {
    var validate__5821__auto__ = ufv___26686.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___26691 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26674, G__26675], null);
      var temp__4126__auto___26692 = input_checker26672_26689.call(null, args__5822__auto___26691);
      if (cljs.core.truth_(temp__4126__auto___26692)) {
        var error__5823__auto___26693 = temp__4126__auto___26692;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___26693)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema26671_26688, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___26691, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___26693], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__26674;
      var owner = G__26675;
      while (true) {
        if (typeof t3tr0s_slides.slide04.t26681 !== "undefined") {
        } else {
          t3tr0s_slides.slide04.t26681 = function(owner, G__26675, G__26674, output_checker26673, validate__5821__auto__, input_schema26671, output_schema26670, input_checker26672, slide, app, ufv__, meta26682) {
            this.owner = owner;
            this.G__26675 = G__26675;
            this.G__26674 = G__26674;
            this.output_checker26673 = output_checker26673;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema26671 = input_schema26671;
            this.output_schema26670 = output_schema26670;
            this.input_checker26672 = input_checker26672;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta26682 = meta26682;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide04.t26681.cljs$lang$type = true;
          t3tr0s_slides.slide04.t26681.cljs$lang$ctorStr = "t3tr0s-slides.slide04/t26681";
          t3tr0s_slides.slide04.t26681.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___26686, output_schema26670_26687, input_schema26671_26688, input_checker26672_26689, output_checker26673_26690) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide04/t26681");
            };
          }(validate__5821__auto__, ufv___26686, output_schema26670_26687, input_schema26671_26688, input_checker26672_26689, output_checker26673_26690);
          t3tr0s_slides.slide04.t26681.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide04.t26681.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___26686, output_schema26670_26687, input_schema26671_26688, input_checker26672_26689, output_checker26673_26690) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "4. Rotate Piece."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide04.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide04.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___26686, output_schema26670_26687, input_schema26671_26688, input_checker26672_26689, output_checker26673_26690);
          t3tr0s_slides.slide04.t26681.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___26686, output_schema26670_26687, input_schema26671_26688, input_checker26672_26689, output_checker26673_26690) {
            return function(_26683) {
              var self__ = this;
              var _26683__$1 = this;
              return self__.meta26682;
            };
          }(validate__5821__auto__, ufv___26686, output_schema26670_26687, input_schema26671_26688, input_checker26672_26689, output_checker26673_26690);
          t3tr0s_slides.slide04.t26681.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___26686, output_schema26670_26687, input_schema26671_26688, input_checker26672_26689, output_checker26673_26690) {
            return function(_26683, meta26682__$1) {
              var self__ = this;
              var _26683__$1 = this;
              return new t3tr0s_slides.slide04.t26681(self__.owner, self__.G__26675, self__.G__26674, self__.output_checker26673, self__.validate__5821__auto__, self__.input_schema26671, self__.output_schema26670, self__.input_checker26672, self__.slide, self__.app, self__.ufv__, meta26682__$1);
            };
          }(validate__5821__auto__, ufv___26686, output_schema26670_26687, input_schema26671_26688, input_checker26672_26689, output_checker26673_26690);
          t3tr0s_slides.slide04.__GT_t26681 = function(validate__5821__auto__, ufv___26686, output_schema26670_26687, input_schema26671_26688, input_checker26672_26689, output_checker26673_26690) {
            return function __GT_t26681(owner__$1, G__26675__$1, G__26674__$1, output_checker26673__$1, validate__5821__auto____$1, input_schema26671__$1, output_schema26670__$1, input_checker26672__$1, slide__$1, app__$1, ufv____$1, meta26682) {
              return new t3tr0s_slides.slide04.t26681(owner__$1, G__26675__$1, G__26674__$1, output_checker26673__$1, validate__5821__auto____$1, input_schema26671__$1, output_schema26670__$1, input_checker26672__$1, slide__$1, app__$1, ufv____$1, meta26682);
            };
          }(validate__5821__auto__, ufv___26686, output_schema26670_26687, input_schema26671_26688, input_checker26672_26689, output_checker26673_26690);
        }
        return new t3tr0s_slides.slide04.t26681(owner, G__26675, G__26674, output_checker26673_26690, validate__5821__auto__, input_schema26671_26688, output_schema26670_26687, input_checker26672_26689, slide, app, ufv___26686, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___26694 = output_checker26673_26690.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___26694)) {
        var error__5823__auto___26695 = temp__4126__auto___26694;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___26695)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema26670_26687, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___26695], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___26686, output_schema26670_26687, input_schema26671_26688, input_checker26672_26689, output_checker26673_26690);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide04.slide), schema.core.make_fn_schema.call(null, output_schema26670_26687, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26671_26688], null)));
t3tr0s_slides.slide04.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide04.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m26669) {
    return om.core.build.call(null, t3tr0s_slides.slide04.slide, cursor__9685__auto__, m26669);
  };
  __GT_slide = function(cursor__9685__auto__, m26669) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m26669);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide04.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide04.slide, t3tr0s_slides.slide04.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide04.resume = function resume() {
  return null;
};
t3tr0s_slides.slide04.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide11");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide11.dark_green = "#143";
t3tr0s_slides.slide11.light_green = "#175";
t3tr0s_slides.slide11.dark_purple = "#449";
t3tr0s_slides.slide11.light_purple = "#6ad";
t3tr0s_slides.slide11.dark_red = "#944";
t3tr0s_slides.slide11.light_red = "#f8c";
t3tr0s_slides.slide11.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide11.rotate_coord = function rotate_coord(p__30218) {
  var vec__30220 = p__30218;
  var x = cljs.core.nth.call(null, vec__30220, 0, null);
  var y = cljs.core.nth.call(null, vec__30220, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide11.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide11.rotate_coord, piece);
};
t3tr0s_slides.slide11.rows = 20;
t3tr0s_slides.slide11.cols = 10;
t3tr0s_slides.slide11.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide11.cols, 0));
t3tr0s_slides.slide11.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide11.rows, t3tr0s_slides.slide11.empty_row));
t3tr0s_slides.slide11.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide11.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null);
t3tr0s_slides.slide11.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide11.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide11.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide11.initial_pos], null));
t3tr0s_slides.slide11.write_piece = function write_piece(board, coords, p__30221, value) {
  while (true) {
    var vec__30225 = p__30221;
    var cx = cljs.core.nth.call(null, vec__30225, 0, null);
    var cy = cljs.core.nth.call(null, vec__30225, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__30226 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__30226, 0, null);
      var y = cljs.core.nth.call(null, vec__30226, 1, null);
      var G__30228 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), value);
        } catch (e30227) {
          if (e30227 instanceof Error) {
            var _ = e30227;
            return board;
          } else {
            throw e30227;
          }
        }
      }();
      var G__30229 = cljs.core.rest.call(null, coords);
      var G__30230 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      var G__30231 = value;
      board = G__30228;
      coords = G__30229;
      p__30221 = G__30230;
      value = G__30231;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide11.create_drawable_board = function create_drawable_board(board, piece, p__30232) {
  var vec__30234 = p__30232;
  var x = cljs.core.nth.call(null, vec__30234, 0, null);
  var y = cljs.core.nth.call(null, vec__30234, 1, null);
  var gy = t3tr0s_slides.slide11.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  var board1 = t3tr0s_slides.slide11.write_piece.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, gy], null), "G");
  var board2 = t3tr0s_slides.slide11.write_piece.call(null, board1, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null), "P");
  return board2;
};
t3tr0s_slides.slide11.app_drawable_board_BANG_ = function app_drawable_board_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  return t3tr0s_slides.slide11.create_drawable_board.call(null, board, piece, pos);
};
t3tr0s_slides.slide11.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__30236 = cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state);
  var map__30236__$1 = cljs.core.seq_QMARK_.call(null, map__30236) ? cljs.core.apply.call(null, cljs.core.hash_map, map__30236) : map__30236;
  var position = cljs.core.get.call(null, map__30236__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__30236__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide11.write_piece, piece, position, 1);
};
t3tr0s_slides.slide11.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__30237) {
  var vec__30241 = p__30237;
  var cx = cljs.core.nth.call(null, vec__30241, 0, null);
  var cy = cljs.core.nth.call(null, vec__30241, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__30241, cx, cy) {
    return function(p__30242) {
      var vec__30243 = p__30242;
      var x = cljs.core.nth.call(null, vec__30243, 0, null);
      var y = cljs.core.nth.call(null, vec__30243, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__30241, cx, cy), piece);
};
t3tr0s_slides.slide11.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide11.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide11.app_state))));
};
t3tr0s_slides.slide11.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var vec__30245 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var x = cljs.core.nth.call(null, vec__30245, 0, null);
  var y = cljs.core.nth.call(null, vec__30245, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide11.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide11.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var new_piece = t3tr0s_slides.slide11.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide11.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide11.get_drop_pos = function get_drop_pos(board, piece, p__30246) {
  var vec__30248 = p__30246;
  var x = cljs.core.nth.call(null, vec__30248, 0, null);
  var y = cljs.core.nth.call(null, vec__30248, 1, null);
  var collide_QMARK_ = function(vec__30248, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide11.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__30248, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide11.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var vec__30250 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var x = cljs.core.nth.call(null, vec__30250, 0, null);
  var y = cljs.core.nth.call(null, vec__30250, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var ny = t3tr0s_slides.slide11.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  t3tr0s_slides.slide11.lock_piece_BANG_.call(null);
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide11.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide11.pieces)));
};
t3tr0s_slides.slide11.data_row = function data_row(board, row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__30255(s__30256) {
      return new cljs.core.LazySeq(null, function() {
        var s__30256__$1 = s__30256;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__30256__$1);
          if (temp__4126__auto__) {
            var s__30256__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__30256__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__30256__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__30258 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__30257 = 0;
                while (true) {
                  if (i__30257 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__30257);
                    cljs.core.chunk_append.call(null, b__30258, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null)))), " "));
                    var G__30259 = i__30257 + 1;
                    i__30257 = G__30259;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__30258), iter__30255.call(null, cljs.core.chunk_rest.call(null, s__30256__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__30258), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__30256__$2);
              return cljs.core.cons.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null)))), " "), iter__30255.call(null, cljs.core.rest.call(null, s__30256__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.cols));
  }(), " ]"], null);
};
var ufv___30305 = schema.utils.use_fn_validation;
var output_schema30261_30306 = schema.core.Any;
var input_schema30262_30307 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker30263_30308 = schema.core.checker.call(null, input_schema30262_30307);
var output_checker30264_30309 = schema.core.checker.call(null, output_schema30261_30306);
t3tr0s_slides.slide11.code = function(ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309) {
  return function code(G__30265, G__30266) {
    var validate__5821__auto__ = ufv___30305.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___30310 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__30265, G__30266], null);
      var temp__4126__auto___30311 = input_checker30263_30308.call(null, args__5822__auto___30310);
      if (cljs.core.truth_(temp__4126__auto___30311)) {
        var error__5823__auto___30312 = temp__4126__auto___30311;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___30312)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema30262_30307, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___30310, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___30312], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__30265;
      var owner = G__30266;
      while (true) {
        if (typeof t3tr0s_slides.slide11.t30286 !== "undefined") {
        } else {
          t3tr0s_slides.slide11.t30286 = function(input_schema30262, owner, G__30266, output_schema30261, validate__5821__auto__, input_checker30263, output_checker30264, G__30265, app, ufv__, code, meta30287) {
            this.input_schema30262 = input_schema30262;
            this.owner = owner;
            this.G__30266 = G__30266;
            this.output_schema30261 = output_schema30261;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker30263 = input_checker30263;
            this.output_checker30264 = output_checker30264;
            this.G__30265 = G__30265;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta30287 = meta30287;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide11.t30286.cljs$lang$type = true;
          t3tr0s_slides.slide11.t30286.cljs$lang$ctorStr = "t3tr0s-slides.slide11/t30286";
          t3tr0s_slides.slide11.t30286.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide11/t30286");
            };
          }(validate__5821__auto__, ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309);
          t3tr0s_slides.slide11.t30286.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide11.t30286.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " create-drawable-board\n", "  [board piece [x y]]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [gy    (get-drop-pos board piece [x y])\n", "        board1 (write-piece board piece [x gy] ", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.lit.call(null, '"G"')), ")\n", "        board2 (write-piece board piece [x y ] ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, '"P"')), ")]\n", "    board2))\n", "\n", "\x3e (create-drawable-board ...)\n", "\n", sablono.interpreter.interpret.call(null, function() {
                var board = t3tr0s_slides.slide11.app_drawable_board_BANG_.call(null);
                var iter__4278__auto__ = function(board, ___$1, validate__5821__auto__, ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309) {
                  return function iter__30289(s__30290) {
                    return new cljs.core.LazySeq(null, function(board, ___$1, validate__5821__auto__, ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309) {
                      return function() {
                        var s__30290__$1 = s__30290;
                        while (true) {
                          var temp__4126__auto__ = cljs.core.seq.call(null, s__30290__$1);
                          if (temp__4126__auto__) {
                            var s__30290__$2 = temp__4126__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__30290__$2)) {
                              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__30290__$2);
                              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                              var b__30292 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                              if (function() {
                                var i__30291 = 0;
                                while (true) {
                                  if (i__30291 < size__4277__auto__) {
                                    var row = cljs.core._nth.call(null, c__4276__auto__, i__30291);
                                    cljs.core.chunk_append.call(null, b__30292, function() {
                                      var pred__30299 = cljs.core._EQ_;
                                      var expr__30300 = row;
                                      if (cljs.core.truth_(pred__30299.call(null, 0, expr__30300))) {
                                        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "  [");
                                      } else {
                                        if (cljs.core.truth_(pred__30299.call(null, t3tr0s_slides.slide11.rows - 1, expr__30300))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                        } else {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                        }
                                      }
                                    }());
                                    var G__30313 = i__30291 + 1;
                                    i__30291 = G__30313;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__30292), iter__30289.call(null, cljs.core.chunk_rest.call(null, s__30290__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__30292), null);
                              }
                            } else {
                              var row = cljs.core.first.call(null, s__30290__$2);
                              return cljs.core.cons.call(null, function() {
                                var pred__30302 = cljs.core._EQ_;
                                var expr__30303 = row;
                                if (cljs.core.truth_(pred__30302.call(null, 0, expr__30303))) {
                                  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "  [");
                                } else {
                                  if (cljs.core.truth_(pred__30302.call(null, t3tr0s_slides.slide11.rows - 1, expr__30303))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                  } else {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                  }
                                }
                              }(), iter__30289.call(null, cljs.core.rest.call(null, s__30290__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(board, ___$1, validate__5821__auto__, ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309), null, null);
                  };
                }(board, ___$1, validate__5821__auto__, ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309);
                return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.rows));
              }()))));
            };
          }(validate__5821__auto__, ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309);
          t3tr0s_slides.slide11.t30286.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309) {
            return function(_30288) {
              var self__ = this;
              var _30288__$1 = this;
              return self__.meta30287;
            };
          }(validate__5821__auto__, ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309);
          t3tr0s_slides.slide11.t30286.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309) {
            return function(_30288, meta30287__$1) {
              var self__ = this;
              var _30288__$1 = this;
              return new t3tr0s_slides.slide11.t30286(self__.input_schema30262, self__.owner, self__.G__30266, self__.output_schema30261, self__.validate__5821__auto__, self__.input_checker30263, self__.output_checker30264, self__.G__30265, self__.app, self__.ufv__, self__.code, meta30287__$1);
            };
          }(validate__5821__auto__, ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309);
          t3tr0s_slides.slide11.__GT_t30286 = function(validate__5821__auto__, ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309) {
            return function __GT_t30286(input_schema30262__$1, owner__$1, G__30266__$1, output_schema30261__$1, validate__5821__auto____$1, input_checker30263__$1, output_checker30264__$1, G__30265__$1, app__$1, ufv____$1, code__$1, meta30287) {
              return new t3tr0s_slides.slide11.t30286(input_schema30262__$1, owner__$1, G__30266__$1, output_schema30261__$1, validate__5821__auto____$1, input_checker30263__$1, output_checker30264__$1, G__30265__$1, app__$1, ufv____$1, code__$1, meta30287);
            };
          }(validate__5821__auto__, ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309);
        }
        return new t3tr0s_slides.slide11.t30286(input_schema30262_30307, owner, G__30266, output_schema30261_30306, validate__5821__auto__, input_checker30263_30308, output_checker30264_30309, G__30265, app, ufv___30305, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___30314 = output_checker30264_30309.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___30314)) {
        var error__5823__auto___30315 = temp__4126__auto___30314;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___30315)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema30261_30306, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___30315], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___30305, output_schema30261_30306, input_schema30262_30307, input_checker30263_30308, output_checker30264_30309);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide11.code), schema.core.make_fn_schema.call(null, output_schema30261_30306, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema30262_30307], null)));
t3tr0s_slides.slide11.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide11.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m30260) {
    return om.core.build.call(null, t3tr0s_slides.slide11.code, cursor__9685__auto__, m30260);
  };
  __GT_code = function(cursor__9685__auto__, m30260) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m30260);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide11.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide11.rows);
t3tr0s_slides.slide11.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__30316, is_center) {
  var vec__30318 = p__30316;
  var x = cljs.core.nth.call(null, vec__30318, 0, null);
  var y = cljs.core.nth.call(null, vec__30318, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide11.cell_size * x;
  var ry = t3tr0s_slides.slide11.cell_size * y;
  var rs = t3tr0s_slides.slide11.cell_size;
  var cx = t3tr0s_slides.slide11.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide11.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide11.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide11.piece_abs_coords = function piece_abs_coords(piece, p__30319) {
  var vec__30323 = p__30319;
  var cx = cljs.core.nth.call(null, vec__30323, 0, null);
  var cy = cljs.core.nth.call(null, vec__30323, 1, null);
  return cljs.core.mapv.call(null, function(vec__30323, cx, cy) {
    return function(p__30324) {
      var vec__30325 = p__30324;
      var x = cljs.core.nth.call(null, vec__30325, 0, null);
      var y = cljs.core.nth.call(null, vec__30325, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__30323, cx, cy), piece);
};
t3tr0s_slides.slide11.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__30332 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide11.piece_abs_coords.call(null, piece, pos)));
  var chunk__30333 = null;
  var count__30334 = 0;
  var i__30335 = 0;
  while (true) {
    if (i__30335 < count__30334) {
      var vec__30336 = cljs.core._nth.call(null, chunk__30333, i__30335);
      var i = cljs.core.nth.call(null, vec__30336, 0, null);
      var c = cljs.core.nth.call(null, vec__30336, 1, null);
      t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__30338 = seq__30332;
      var G__30339 = chunk__30333;
      var G__30340 = count__30334;
      var G__30341 = i__30335 + 1;
      seq__30332 = G__30338;
      chunk__30333 = G__30339;
      count__30334 = G__30340;
      i__30335 = G__30341;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__30332);
      if (temp__4126__auto__) {
        var seq__30332__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__30332__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__30332__$1);
          var G__30342 = cljs.core.chunk_rest.call(null, seq__30332__$1);
          var G__30343 = c__4309__auto__;
          var G__30344 = cljs.core.count.call(null, c__4309__auto__);
          var G__30345 = 0;
          seq__30332 = G__30342;
          chunk__30333 = G__30343;
          count__30334 = G__30344;
          i__30335 = G__30345;
          continue;
        } else {
          var vec__30337 = cljs.core.first.call(null, seq__30332__$1);
          var i = cljs.core.nth.call(null, vec__30337, 0, null);
          var c = cljs.core.nth.call(null, vec__30337, 1, null);
          t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__30346 = cljs.core.next.call(null, seq__30332__$1);
          var G__30347 = null;
          var G__30348 = 0;
          var G__30349 = 0;
          seq__30332 = G__30346;
          chunk__30333 = G__30347;
          count__30334 = G__30348;
          i__30335 = G__30349;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide11.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__30362 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.rows));
  var chunk__30367 = null;
  var count__30368 = 0;
  var i__30369 = 0;
  while (true) {
    if (i__30369 < count__30368) {
      var y = cljs.core._nth.call(null, chunk__30367, i__30369);
      var seq__30370_30374 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.cols));
      var chunk__30371_30375 = null;
      var count__30372_30376 = 0;
      var i__30373_30377 = 0;
      while (true) {
        if (i__30373_30377 < count__30372_30376) {
          var x_30378 = cljs.core._nth.call(null, chunk__30371_30375, i__30373_30377);
          var v_30379 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_30378], null));
          if (v_30379 === 0) {
          } else {
            t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_30378, y], null), false);
          }
          var G__30380 = seq__30370_30374;
          var G__30381 = chunk__30371_30375;
          var G__30382 = count__30372_30376;
          var G__30383 = i__30373_30377 + 1;
          seq__30370_30374 = G__30380;
          chunk__30371_30375 = G__30381;
          count__30372_30376 = G__30382;
          i__30373_30377 = G__30383;
          continue;
        } else {
          var temp__4126__auto___30384 = cljs.core.seq.call(null, seq__30370_30374);
          if (temp__4126__auto___30384) {
            var seq__30370_30385__$1 = temp__4126__auto___30384;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__30370_30385__$1)) {
              var c__4309__auto___30386 = cljs.core.chunk_first.call(null, seq__30370_30385__$1);
              var G__30387 = cljs.core.chunk_rest.call(null, seq__30370_30385__$1);
              var G__30388 = c__4309__auto___30386;
              var G__30389 = cljs.core.count.call(null, c__4309__auto___30386);
              var G__30390 = 0;
              seq__30370_30374 = G__30387;
              chunk__30371_30375 = G__30388;
              count__30372_30376 = G__30389;
              i__30373_30377 = G__30390;
              continue;
            } else {
              var x_30391 = cljs.core.first.call(null, seq__30370_30385__$1);
              var v_30392 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_30391], null));
              if (v_30392 === 0) {
              } else {
                t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_30391, y], null), false);
              }
              var G__30393 = cljs.core.next.call(null, seq__30370_30385__$1);
              var G__30394 = null;
              var G__30395 = 0;
              var G__30396 = 0;
              seq__30370_30374 = G__30393;
              chunk__30371_30375 = G__30394;
              count__30372_30376 = G__30395;
              i__30373_30377 = G__30396;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__30397 = seq__30362;
      var G__30398 = chunk__30367;
      var G__30399 = count__30368;
      var G__30400 = i__30369 + 1;
      seq__30362 = G__30397;
      chunk__30367 = G__30398;
      count__30368 = G__30399;
      i__30369 = G__30400;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__30362);
      if (temp__4126__auto__) {
        var seq__30362__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__30362__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__30362__$1);
          var G__30401 = cljs.core.chunk_rest.call(null, seq__30362__$1);
          var G__30402 = c__4309__auto__;
          var G__30403 = cljs.core.count.call(null, c__4309__auto__);
          var G__30404 = 0;
          seq__30362 = G__30401;
          chunk__30367 = G__30402;
          count__30368 = G__30403;
          i__30369 = G__30404;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__30362__$1);
          var seq__30363_30405 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.cols));
          var chunk__30364_30406 = null;
          var count__30365_30407 = 0;
          var i__30366_30408 = 0;
          while (true) {
            if (i__30366_30408 < count__30365_30407) {
              var x_30409 = cljs.core._nth.call(null, chunk__30364_30406, i__30366_30408);
              var v_30410 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_30409], null));
              if (v_30410 === 0) {
              } else {
                t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_30409, y], null), false);
              }
              var G__30411 = seq__30363_30405;
              var G__30412 = chunk__30364_30406;
              var G__30413 = count__30365_30407;
              var G__30414 = i__30366_30408 + 1;
              seq__30363_30405 = G__30411;
              chunk__30364_30406 = G__30412;
              count__30365_30407 = G__30413;
              i__30366_30408 = G__30414;
              continue;
            } else {
              var temp__4126__auto___30415__$1 = cljs.core.seq.call(null, seq__30363_30405);
              if (temp__4126__auto___30415__$1) {
                var seq__30363_30416__$1 = temp__4126__auto___30415__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__30363_30416__$1)) {
                  var c__4309__auto___30417 = cljs.core.chunk_first.call(null, seq__30363_30416__$1);
                  var G__30418 = cljs.core.chunk_rest.call(null, seq__30363_30416__$1);
                  var G__30419 = c__4309__auto___30417;
                  var G__30420 = cljs.core.count.call(null, c__4309__auto___30417);
                  var G__30421 = 0;
                  seq__30363_30405 = G__30418;
                  chunk__30364_30406 = G__30419;
                  count__30365_30407 = G__30420;
                  i__30366_30408 = G__30421;
                  continue;
                } else {
                  var x_30422 = cljs.core.first.call(null, seq__30363_30416__$1);
                  var v_30423 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_30422], null));
                  if (v_30423 === 0) {
                  } else {
                    t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_30422, y], null), false);
                  }
                  var G__30424 = cljs.core.next.call(null, seq__30363_30416__$1);
                  var G__30425 = null;
                  var G__30426 = 0;
                  var G__30427 = 0;
                  seq__30363_30405 = G__30424;
                  chunk__30364_30406 = G__30425;
                  count__30365_30407 = G__30426;
                  i__30366_30408 = G__30427;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__30428 = cljs.core.next.call(null, seq__30362__$1);
          var G__30429 = null;
          var G__30430 = 0;
          var G__30431 = 0;
          seq__30362 = G__30428;
          chunk__30367 = G__30429;
          count__30368 = G__30430;
          i__30369 = G__30431;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide11.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide11.cell_size * t3tr0s_slides.slide11.cols, t3tr0s_slides.slide11.cell_size * t3tr0s_slides.slide11.rows);
  ctx.fillStyle = t3tr0s_slides.slide11.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide11.light_green;
  t3tr0s_slides.slide11.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var drop_y = t3tr0s_slides.slide11.get_drop_pos.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state)), piece, pos);
  var drop_pos = cljs.core.assoc.call(null, pos, 1, drop_y);
  var fits = t3tr0s_slides.slide11.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = "#333";
    ctx.strokeStyle = "#666";
    t3tr0s_slides.slide11.draw_piece_BANG_.call(null, ctx, piece, drop_pos);
    ctx.fillStyle = fits ? t3tr0s_slides.slide11.dark_purple : t3tr0s_slides.slide11.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide11.light_purple : t3tr0s_slides.slide11.light_red;
    return t3tr0s_slides.slide11.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide11.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide11.key_name = function key_name(p1__30432_SHARP_) {
  return t3tr0s_slides.slide11.key_names.call(null, p1__30432_SHARP_.keyCode);
};
t3tr0s_slides.slide11.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide11.key_name.call(null, e);
  var G__30434_30435 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__30434_30435) {
    case "space":
      t3tr0s_slides.slide11.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide11.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide11.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide11.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___30454 = schema.utils.use_fn_validation;
var output_schema30438_30455 = schema.core.Any;
var input_schema30439_30456 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker30440_30457 = schema.core.checker.call(null, input_schema30439_30456);
var output_checker30441_30458 = schema.core.checker.call(null, output_schema30438_30455);
t3tr0s_slides.slide11.canvas = function(ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458) {
  return function canvas(G__30442, G__30443) {
    var validate__5821__auto__ = ufv___30454.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___30459 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__30442, G__30443], null);
      var temp__4126__auto___30460 = input_checker30440_30457.call(null, args__5822__auto___30459);
      if (cljs.core.truth_(temp__4126__auto___30460)) {
        var error__5823__auto___30461 = temp__4126__auto___30460;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___30461)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema30439_30456, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___30459, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___30461], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__30442;
      var owner = G__30443;
      while (true) {
        if (typeof t3tr0s_slides.slide11.t30449 !== "undefined") {
        } else {
          t3tr0s_slides.slide11.t30449 = function(G__30443, owner, G__30442, output_checker30441, input_checker30440, input_schema30439, validate__5821__auto__, canvas, app, ufv__, output_schema30438, meta30450) {
            this.G__30443 = G__30443;
            this.owner = owner;
            this.G__30442 = G__30442;
            this.output_checker30441 = output_checker30441;
            this.input_checker30440 = input_checker30440;
            this.input_schema30439 = input_schema30439;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.canvas = canvas;
            this.app = app;
            this.ufv__ = ufv__;
            this.output_schema30438 = output_schema30438;
            this.meta30450 = meta30450;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide11.t30449.cljs$lang$type = true;
          t3tr0s_slides.slide11.t30449.cljs$lang$ctorStr = "t3tr0s-slides.slide11/t30449";
          t3tr0s_slides.slide11.t30449.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide11/t30449");
            };
          }(validate__5821__auto__, ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458);
          t3tr0s_slides.slide11.t30449.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide11.t30449.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458);
          t3tr0s_slides.slide11.t30449.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide11.t30449.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide11.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458);
          t3tr0s_slides.slide11.t30449.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide11.t30449.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide11.cols * t3tr0s_slides.slide11.cell_size;
              canvas__$2.height = t3tr0s_slides.slide11.rows * t3tr0s_slides.slide11.cell_size;
              return t3tr0s_slides.slide11.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458);
          t3tr0s_slides.slide11.t30449.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458) {
            return function(_30451) {
              var self__ = this;
              var _30451__$1 = this;
              return self__.meta30450;
            };
          }(validate__5821__auto__, ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458);
          t3tr0s_slides.slide11.t30449.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458) {
            return function(_30451, meta30450__$1) {
              var self__ = this;
              var _30451__$1 = this;
              return new t3tr0s_slides.slide11.t30449(self__.G__30443, self__.owner, self__.G__30442, self__.output_checker30441, self__.input_checker30440, self__.input_schema30439, self__.validate__5821__auto__, self__.canvas, self__.app, self__.ufv__, self__.output_schema30438, meta30450__$1);
            };
          }(validate__5821__auto__, ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458);
          t3tr0s_slides.slide11.__GT_t30449 = function(validate__5821__auto__, ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458) {
            return function __GT_t30449(G__30443__$1, owner__$1, G__30442__$1, output_checker30441__$1, input_checker30440__$1, input_schema30439__$1, validate__5821__auto____$1, canvas__$1, app__$1, ufv____$1, output_schema30438__$1, meta30450) {
              return new t3tr0s_slides.slide11.t30449(G__30443__$1, owner__$1, G__30442__$1, output_checker30441__$1, input_checker30440__$1, input_schema30439__$1, validate__5821__auto____$1, canvas__$1, app__$1, ufv____$1, output_schema30438__$1, meta30450);
            };
          }(validate__5821__auto__, ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458);
        }
        return new t3tr0s_slides.slide11.t30449(G__30443, owner, G__30442, output_checker30441_30458, input_checker30440_30457, input_schema30439_30456, validate__5821__auto__, canvas, app, ufv___30454, output_schema30438_30455, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___30462 = output_checker30441_30458.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___30462)) {
        var error__5823__auto___30463 = temp__4126__auto___30462;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___30463)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema30438_30455, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___30463], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___30454, output_schema30438_30455, input_schema30439_30456, input_checker30440_30457, output_checker30441_30458);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide11.canvas), schema.core.make_fn_schema.call(null, output_schema30438_30455, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema30439_30456], null)));
t3tr0s_slides.slide11.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide11.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m30437) {
    return om.core.build.call(null, t3tr0s_slides.slide11.canvas, cursor__9685__auto__, m30437);
  };
  __GT_canvas = function(cursor__9685__auto__, m30437) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m30437);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___30481 = schema.utils.use_fn_validation;
var output_schema30465_30482 = schema.core.Any;
var input_schema30466_30483 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker30467_30484 = schema.core.checker.call(null, input_schema30466_30483);
var output_checker30468_30485 = schema.core.checker.call(null, output_schema30465_30482);
t3tr0s_slides.slide11.slide = function(ufv___30481, output_schema30465_30482, input_schema30466_30483, input_checker30467_30484, output_checker30468_30485) {
  return function slide(G__30469, G__30470) {
    var validate__5821__auto__ = ufv___30481.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___30486 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__30469, G__30470], null);
      var temp__4126__auto___30487 = input_checker30467_30484.call(null, args__5822__auto___30486);
      if (cljs.core.truth_(temp__4126__auto___30487)) {
        var error__5823__auto___30488 = temp__4126__auto___30487;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___30488)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema30466_30483, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___30486, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___30488], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__30469;
      var owner = G__30470;
      while (true) {
        if (typeof t3tr0s_slides.slide11.t30476 !== "undefined") {
        } else {
          t3tr0s_slides.slide11.t30476 = function(output_schema30465, input_schema30466, owner, G__30470, validate__5821__auto__, output_checker30468, G__30469, input_checker30467, slide, app, ufv__, meta30477) {
            this.output_schema30465 = output_schema30465;
            this.input_schema30466 = input_schema30466;
            this.owner = owner;
            this.G__30470 = G__30470;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker30468 = output_checker30468;
            this.G__30469 = G__30469;
            this.input_checker30467 = input_checker30467;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta30477 = meta30477;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide11.t30476.cljs$lang$type = true;
          t3tr0s_slides.slide11.t30476.cljs$lang$ctorStr = "t3tr0s-slides.slide11/t30476";
          t3tr0s_slides.slide11.t30476.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___30481, output_schema30465_30482, input_schema30466_30483, input_checker30467_30484, output_checker30468_30485) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide11/t30476");
            };
          }(validate__5821__auto__, ufv___30481, output_schema30465_30482, input_schema30466_30483, input_checker30467_30484, output_checker30468_30485);
          t3tr0s_slides.slide11.t30476.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide11.t30476.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___30481, output_schema30465_30482, input_schema30466_30483, input_checker30467_30484, output_checker30468_30485) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "11. Draw ghost piece."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide11.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide11.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___30481, output_schema30465_30482, input_schema30466_30483, input_checker30467_30484, output_checker30468_30485);
          t3tr0s_slides.slide11.t30476.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___30481, output_schema30465_30482, input_schema30466_30483, input_checker30467_30484, output_checker30468_30485) {
            return function(_30478) {
              var self__ = this;
              var _30478__$1 = this;
              return self__.meta30477;
            };
          }(validate__5821__auto__, ufv___30481, output_schema30465_30482, input_schema30466_30483, input_checker30467_30484, output_checker30468_30485);
          t3tr0s_slides.slide11.t30476.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___30481, output_schema30465_30482, input_schema30466_30483, input_checker30467_30484, output_checker30468_30485) {
            return function(_30478, meta30477__$1) {
              var self__ = this;
              var _30478__$1 = this;
              return new t3tr0s_slides.slide11.t30476(self__.output_schema30465, self__.input_schema30466, self__.owner, self__.G__30470, self__.validate__5821__auto__, self__.output_checker30468, self__.G__30469, self__.input_checker30467, self__.slide, self__.app, self__.ufv__, meta30477__$1);
            };
          }(validate__5821__auto__, ufv___30481, output_schema30465_30482, input_schema30466_30483, input_checker30467_30484, output_checker30468_30485);
          t3tr0s_slides.slide11.__GT_t30476 = function(validate__5821__auto__, ufv___30481, output_schema30465_30482, input_schema30466_30483, input_checker30467_30484, output_checker30468_30485) {
            return function __GT_t30476(output_schema30465__$1, input_schema30466__$1, owner__$1, G__30470__$1, validate__5821__auto____$1, output_checker30468__$1, G__30469__$1, input_checker30467__$1, slide__$1, app__$1, ufv____$1, meta30477) {
              return new t3tr0s_slides.slide11.t30476(output_schema30465__$1, input_schema30466__$1, owner__$1, G__30470__$1, validate__5821__auto____$1, output_checker30468__$1, G__30469__$1, input_checker30467__$1, slide__$1, app__$1, ufv____$1, meta30477);
            };
          }(validate__5821__auto__, ufv___30481, output_schema30465_30482, input_schema30466_30483, input_checker30467_30484, output_checker30468_30485);
        }
        return new t3tr0s_slides.slide11.t30476(output_schema30465_30482, input_schema30466_30483, owner, G__30470, validate__5821__auto__, output_checker30468_30485, G__30469, input_checker30467_30484, slide, app, ufv___30481, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___30489 = output_checker30468_30485.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___30489)) {
        var error__5823__auto___30490 = temp__4126__auto___30489;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___30490)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema30465_30482, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___30490], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___30481, output_schema30465_30482, input_schema30466_30483, input_checker30467_30484, output_checker30468_30485);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide11.slide), schema.core.make_fn_schema.call(null, output_schema30465_30482, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema30466_30483], null)));
t3tr0s_slides.slide11.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide11.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m30464) {
    return om.core.build.call(null, t3tr0s_slides.slide11.slide, cursor__9685__auto__, m30464);
  };
  __GT_slide = function(cursor__9685__auto__, m30464) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m30464);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide11.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide11.slide, t3tr0s_slides.slide11.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide11.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide11.key_down);
};
t3tr0s_slides.slide11.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide11.key_down);
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj57419 = {};
  return obj57419;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3541__auto__ = port;
    if (and__3541__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4180__auto__ = port == null ? null : port;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj57421 = {};
  return obj57421;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3541__auto__ = port;
    if (and__3541__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4180__auto__ = port == null ? null : port;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj57423 = {};
  return obj57423;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3541__auto__ = chan;
    if (and__3541__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4180__auto__ = chan == null ? null : chan;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3541__auto__ = chan;
    if (and__3541__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4180__auto__ = chan == null ? null : chan;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj57425 = {};
  return obj57425;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3541__auto__ = h;
    if (and__3541__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4180__auto__ = h == null ? null : h;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3541__auto__ = h;
    if (and__3541__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4180__auto__ = h == null ? null : h;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj57427 = {};
  return obj57427;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3541__auto__ = b;
    if (and__3541__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4180__auto__ = b == null ? null : b;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3541__auto__ = b;
    if (and__3541__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4180__auto__ = b == null ? null : b;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3541__auto__ = b;
    if (and__3541__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4180__auto__ = b == null ? null : b;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj57429 = {};
  return obj57429;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t57366 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t57366 = function(f, fn_handler, meta57367) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta57367 = meta57367;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t57366.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t57366.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t57366";
    cljs.core.async.impl.ioc_helpers.t57366.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.ioc-helpers/t57366");
    };
    cljs.core.async.impl.ioc_helpers.t57366.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t57366.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t57366.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t57366.prototype.cljs$core$IMeta$_meta$arity$1 = function(_57368) {
      var self__ = this;
      var _57368__$1 = this;
      return self__.meta57367;
    };
    cljs.core.async.impl.ioc_helpers.t57366.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_57368, meta57367__$1) {
      var self__ = this;
      var _57368__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t57366(self__.f, self__.fn_handler, meta57367__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t57366 = function __GT_t57366(f__$1, fn_handler__$1, meta57367) {
      return new cljs.core.async.impl.ioc_helpers.t57366(f__$1, fn_handler__$1, meta57367);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t57366(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e57370) {
    if (e57370 instanceof Object) {
      var ex = e57370;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e57370;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_57373_57375 = state;
    statearr_57373_57375[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_57373_57375[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_57374_57376 = state;
    statearr_57374_57376[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_57374_57376[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_57379_57381 = state;
    statearr_57379_57381[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_57379_57381[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_57380_57382 = state;
    statearr_57380_57382[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_57380_57382[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__57383) {
    var map__57388 = p__57383;
    var map__57388__$1 = cljs.core.seq_QMARK_.call(null, map__57388) ? cljs.core.apply.call(null, cljs.core.hash_map, map__57388) : map__57388;
    var opts = map__57388__$1;
    var statearr_57389_57392 = state;
    statearr_57389_57392[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__57388, map__57388__$1, opts) {
      return function(val) {
        var statearr_57390_57393 = state;
        statearr_57390_57393[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__57388, map__57388__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_57391_57394 = state;
      statearr_57391_57394[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__57383 = null;
    if (arguments.length > 3) {
      p__57383 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__57383);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__57395) {
    var state = cljs.core.first(arglist__57395);
    arglist__57395 = cljs.core.next(arglist__57395);
    var cont_block = cljs.core.first(arglist__57395);
    arglist__57395 = cljs.core.next(arglist__57395);
    var ports = cljs.core.first(arglist__57395);
    var p__57383 = cljs.core.rest(arglist__57395);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__57383);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k57397, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__57399 = k57397 instanceof cljs.core.Keyword ? k57397.fqn : null;
  switch(G__57399) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k57397, else__4142__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__57396) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__57400 = cljs.core.keyword_identical_QMARK_;
  var expr__57401 = k__4147__auto__;
  if (cljs.core.truth_(pred__57400.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__57401))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__57396, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__57400.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__57401))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__57396, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__57400.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__57401))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__57396, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__57400.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__57401))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__57396, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__57400.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__57401))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__57396, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__57396), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__57396) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__57396, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__57398) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__57398), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__57398), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__57398), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__57398), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__57398), null, cljs.core.dissoc.call(null, G__57398, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_57405 = state;
  statearr_57405[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_57405;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = exception;
      if (cljs.core.truth_(and__3541__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3541__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3541__auto__ = exception;
        if (cljs.core.truth_(and__3541__auto__)) {
          var and__3541__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3541__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3541__auto____$1;
          }
        } else {
          return and__3541__auto__;
        }
      }())) {
        var statearr_57411 = state;
        statearr_57411[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_57411[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_57411[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_57411[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_57411;
      } else {
        if (cljs.core.truth_(function() {
          var and__3541__auto__ = exception;
          if (cljs.core.truth_(and__3541__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3541__auto__;
          }
        }())) {
          var statearr_57412_57416 = state;
          statearr_57412_57416[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__57417 = state;
          state = G__57417;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3541__auto__ = exception;
            if (cljs.core.truth_(and__3541__auto__)) {
              var and__3541__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3541__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3541__auto____$1;
              }
            } else {
              return and__3541__auto__;
            }
          }())) {
            var statearr_57413 = state;
            statearr_57413[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_57413[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_57413;
          } else {
            if (cljs.core.truth_(function() {
              var and__3541__auto__ = cljs.core.not.call(null, exception);
              if (and__3541__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3541__auto__;
              }
            }())) {
              var statearr_57414 = state;
              statearr_57414[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_57414[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_57414;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_57415 = state;
                statearr_57415[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_57415[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_57415;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("t3tr0s_slides.slide07");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide07.dark_green = "#143";
t3tr0s_slides.slide07.light_green = "#175";
t3tr0s_slides.slide07.dark_purple = "#449";
t3tr0s_slides.slide07.light_purple = "#6ad";
t3tr0s_slides.slide07.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide07.rotate_coord = function rotate_coord(p__27718) {
  var vec__27720 = p__27718;
  var x = cljs.core.nth.call(null, vec__27720, 0, null);
  var y = cljs.core.nth.call(null, vec__27720, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide07.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide07.rotate_coord, piece);
};
t3tr0s_slides.slide07.rows = 20;
t3tr0s_slides.slide07.cols = 10;
t3tr0s_slides.slide07.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide07.cols, 0));
t3tr0s_slides.slide07.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide07.rows, t3tr0s_slides.slide07.empty_row));
t3tr0s_slides.slide07.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide07.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide07.empty_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide07.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide07.initial_pos], null));
t3tr0s_slides.slide07.write_piece = function write_piece(board, coords, p__27721) {
  while (true) {
    var vec__27725 = p__27721;
    var cx = cljs.core.nth.call(null, vec__27725, 0, null);
    var cy = cljs.core.nth.call(null, vec__27725, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__27726 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__27726, 0, null);
      var y = cljs.core.nth.call(null, vec__27726, 1, null);
      var G__27728 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e27727) {
          if (e27727 instanceof Error) {
            var _ = e27727;
            return board;
          } else {
            throw e27727;
          }
        }
      }();
      var G__27729 = cljs.core.rest.call(null, coords);
      var G__27730 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__27728;
      coords = G__27729;
      p__27721 = G__27730;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide07.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__27732 = cljs.core.deref.call(null, t3tr0s_slides.slide07.app_state);
  var map__27732__$1 = cljs.core.seq_QMARK_.call(null, map__27732) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27732) : map__27732;
  var position = cljs.core.get.call(null, map__27732__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__27732__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide07.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide07.write_piece, piece, position);
};
t3tr0s_slides.slide07.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__27737(s__27738) {
      return new cljs.core.LazySeq(null, function() {
        var s__27738__$1 = s__27738;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__27738__$1);
          if (temp__4126__auto__) {
            var s__27738__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__27738__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__27738__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__27740 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__27739 = 0;
                while (true) {
                  if (i__27739 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__27739);
                    cljs.core.chunk_append.call(null, b__27740, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide07.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null)))), " "));
                    var G__27741 = i__27739 + 1;
                    i__27739 = G__27741;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27740), iter__27737.call(null, cljs.core.chunk_rest.call(null, s__27738__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27740), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__27738__$2);
              return cljs.core.cons.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide07.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null)))), " "), iter__27737.call(null, cljs.core.rest.call(null, s__27738__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.cols));
  }(), " ]"], null);
};
var ufv___27787 = schema.utils.use_fn_validation;
var output_schema27743_27788 = schema.core.Any;
var input_schema27744_27789 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker27745_27790 = schema.core.checker.call(null, input_schema27744_27789);
var output_checker27746_27791 = schema.core.checker.call(null, output_schema27743_27788);
t3tr0s_slides.slide07.code = function(ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791) {
  return function code(G__27747, G__27748) {
    var validate__5821__auto__ = ufv___27787.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___27792 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__27747, G__27748], null);
      var temp__4126__auto___27793 = input_checker27745_27790.call(null, args__5822__auto___27792);
      if (cljs.core.truth_(temp__4126__auto___27793)) {
        var error__5823__auto___27794 = temp__4126__auto___27793;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___27794)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema27744_27789, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___27792, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___27794], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__27747;
      var owner = G__27748;
      while (true) {
        if (typeof t3tr0s_slides.slide07.t27768 !== "undefined") {
        } else {
          t3tr0s_slides.slide07.t27768 = function(owner, G__27748, validate__5821__auto__, input_checker27745, output_schema27743, G__27747, input_schema27744, app, ufv__, output_checker27746, code, meta27769) {
            this.owner = owner;
            this.G__27748 = G__27748;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker27745 = input_checker27745;
            this.output_schema27743 = output_schema27743;
            this.G__27747 = G__27747;
            this.input_schema27744 = input_schema27744;
            this.app = app;
            this.ufv__ = ufv__;
            this.output_checker27746 = output_checker27746;
            this.code = code;
            this.meta27769 = meta27769;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide07.t27768.cljs$lang$type = true;
          t3tr0s_slides.slide07.t27768.cljs$lang$ctorStr = "t3tr0s-slides.slide07/t27768";
          t3tr0s_slides.slide07.t27768.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide07/t27768");
            };
          }(validate__5821__auto__, ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791);
          t3tr0s_slides.slide07.t27768.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide07.t27768.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " write-piece\n", "  [board coords [cx cy]]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "if-let")), " [[x y] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), " coords)]\n", "    (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "recur")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "assoc-in")), " board [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " y cy) (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x cx)] ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "1")), 
              ")\n", "           (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "rest")), " coords)\n", "           [cx cy])\n", "    board))\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " lock-piece! []\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [{", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":keys")), " [piece position]} @game-state]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " [", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), "]\n", "        write-piece piece position)))\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":board")), " @game-state)\n", "\n", cljs.core.into_array.call(null, function() {
                var iter__4278__auto__ = function(___$1, validate__5821__auto__, ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791) {
                  return function iter__27771(s__27772) {
                    return new cljs.core.LazySeq(null, function(___$1, validate__5821__auto__, ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791) {
                      return function() {
                        var s__27772__$1 = s__27772;
                        while (true) {
                          var temp__4126__auto__ = cljs.core.seq.call(null, s__27772__$1);
                          if (temp__4126__auto__) {
                            var s__27772__$2 = temp__4126__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__27772__$2)) {
                              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__27772__$2);
                              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                              var b__27774 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                              if (function() {
                                var i__27773 = 0;
                                while (true) {
                                  if (i__27773 < size__4277__auto__) {
                                    var row = cljs.core._nth.call(null, c__4276__auto__, i__27773);
                                    cljs.core.chunk_append.call(null, b__27774, sablono.interpreter.interpret.call(null, function() {
                                      var pred__27781 = cljs.core._EQ_;
                                      var expr__27782 = row;
                                      if (cljs.core.truth_(pred__27781.call(null, 0, expr__27782))) {
                                        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "  [");
                                      } else {
                                        if (cljs.core.truth_(pred__27781.call(null, t3tr0s_slides.slide07.rows - 1, expr__27782))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                        } else {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                        }
                                      }
                                    }()));
                                    var G__27795 = i__27773 + 1;
                                    i__27773 = G__27795;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27774), iter__27771.call(null, cljs.core.chunk_rest.call(null, s__27772__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27774), null);
                              }
                            } else {
                              var row = cljs.core.first.call(null, s__27772__$2);
                              return cljs.core.cons.call(null, sablono.interpreter.interpret.call(null, function() {
                                var pred__27784 = cljs.core._EQ_;
                                var expr__27785 = row;
                                if (cljs.core.truth_(pred__27784.call(null, 0, expr__27785))) {
                                  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "  [");
                                } else {
                                  if (cljs.core.truth_(pred__27784.call(null, t3tr0s_slides.slide07.rows - 1, expr__27785))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                  } else {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                  }
                                }
                              }()), iter__27771.call(null, cljs.core.rest.call(null, s__27772__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(___$1, validate__5821__auto__, ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791), null, null);
                  };
                }(___$1, validate__5821__auto__, ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791);
                return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.rows));
              }()))));
            };
          }(validate__5821__auto__, ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791);
          t3tr0s_slides.slide07.t27768.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791) {
            return function(_27770) {
              var self__ = this;
              var _27770__$1 = this;
              return self__.meta27769;
            };
          }(validate__5821__auto__, ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791);
          t3tr0s_slides.slide07.t27768.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791) {
            return function(_27770, meta27769__$1) {
              var self__ = this;
              var _27770__$1 = this;
              return new t3tr0s_slides.slide07.t27768(self__.owner, self__.G__27748, self__.validate__5821__auto__, self__.input_checker27745, self__.output_schema27743, self__.G__27747, self__.input_schema27744, self__.app, self__.ufv__, self__.output_checker27746, self__.code, meta27769__$1);
            };
          }(validate__5821__auto__, ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791);
          t3tr0s_slides.slide07.__GT_t27768 = function(validate__5821__auto__, ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791) {
            return function __GT_t27768(owner__$1, G__27748__$1, validate__5821__auto____$1, input_checker27745__$1, output_schema27743__$1, G__27747__$1, input_schema27744__$1, app__$1, ufv____$1, output_checker27746__$1, code__$1, meta27769) {
              return new t3tr0s_slides.slide07.t27768(owner__$1, G__27748__$1, validate__5821__auto____$1, input_checker27745__$1, output_schema27743__$1, G__27747__$1, input_schema27744__$1, app__$1, ufv____$1, output_checker27746__$1, code__$1, meta27769);
            };
          }(validate__5821__auto__, ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791);
        }
        return new t3tr0s_slides.slide07.t27768(owner, G__27748, validate__5821__auto__, input_checker27745_27790, output_schema27743_27788, G__27747, input_schema27744_27789, app, ufv___27787, output_checker27746_27791, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___27796 = output_checker27746_27791.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___27796)) {
        var error__5823__auto___27797 = temp__4126__auto___27796;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___27797)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema27743_27788, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___27797], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___27787, output_schema27743_27788, input_schema27744_27789, input_checker27745_27790, output_checker27746_27791);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide07.code), schema.core.make_fn_schema.call(null, output_schema27743_27788, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema27744_27789], null)));
t3tr0s_slides.slide07.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide07.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m27742) {
    return om.core.build.call(null, t3tr0s_slides.slide07.code, cursor__9685__auto__, m27742);
  };
  __GT_code = function(cursor__9685__auto__, m27742) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m27742);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide07.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide07.rows);
t3tr0s_slides.slide07.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__27798, is_center) {
  var vec__27800 = p__27798;
  var x = cljs.core.nth.call(null, vec__27800, 0, null);
  var y = cljs.core.nth.call(null, vec__27800, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide07.cell_size * x;
  var ry = t3tr0s_slides.slide07.cell_size * y;
  var rs = t3tr0s_slides.slide07.cell_size;
  var cx = t3tr0s_slides.slide07.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide07.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide07.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide07.piece_abs_coords = function piece_abs_coords(piece, p__27801) {
  var vec__27805 = p__27801;
  var cx = cljs.core.nth.call(null, vec__27805, 0, null);
  var cy = cljs.core.nth.call(null, vec__27805, 1, null);
  return cljs.core.mapv.call(null, function(vec__27805, cx, cy) {
    return function(p__27806) {
      var vec__27807 = p__27806;
      var x = cljs.core.nth.call(null, vec__27807, 0, null);
      var y = cljs.core.nth.call(null, vec__27807, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__27805, cx, cy), piece);
};
t3tr0s_slides.slide07.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__27814 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide07.piece_abs_coords.call(null, piece, pos)));
  var chunk__27815 = null;
  var count__27816 = 0;
  var i__27817 = 0;
  while (true) {
    if (i__27817 < count__27816) {
      var vec__27818 = cljs.core._nth.call(null, chunk__27815, i__27817);
      var i = cljs.core.nth.call(null, vec__27818, 0, null);
      var c = cljs.core.nth.call(null, vec__27818, 1, null);
      t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__27820 = seq__27814;
      var G__27821 = chunk__27815;
      var G__27822 = count__27816;
      var G__27823 = i__27817 + 1;
      seq__27814 = G__27820;
      chunk__27815 = G__27821;
      count__27816 = G__27822;
      i__27817 = G__27823;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__27814);
      if (temp__4126__auto__) {
        var seq__27814__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27814__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__27814__$1);
          var G__27824 = cljs.core.chunk_rest.call(null, seq__27814__$1);
          var G__27825 = c__4309__auto__;
          var G__27826 = cljs.core.count.call(null, c__4309__auto__);
          var G__27827 = 0;
          seq__27814 = G__27824;
          chunk__27815 = G__27825;
          count__27816 = G__27826;
          i__27817 = G__27827;
          continue;
        } else {
          var vec__27819 = cljs.core.first.call(null, seq__27814__$1);
          var i = cljs.core.nth.call(null, vec__27819, 0, null);
          var c = cljs.core.nth.call(null, vec__27819, 1, null);
          t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__27828 = cljs.core.next.call(null, seq__27814__$1);
          var G__27829 = null;
          var G__27830 = 0;
          var G__27831 = 0;
          seq__27814 = G__27828;
          chunk__27815 = G__27829;
          count__27816 = G__27830;
          i__27817 = G__27831;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide07.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__27844 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.rows));
  var chunk__27849 = null;
  var count__27850 = 0;
  var i__27851 = 0;
  while (true) {
    if (i__27851 < count__27850) {
      var y = cljs.core._nth.call(null, chunk__27849, i__27851);
      var seq__27852_27856 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.cols));
      var chunk__27853_27857 = null;
      var count__27854_27858 = 0;
      var i__27855_27859 = 0;
      while (true) {
        if (i__27855_27859 < count__27854_27858) {
          var x_27860 = cljs.core._nth.call(null, chunk__27853_27857, i__27855_27859);
          var v_27861 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_27860], null));
          if (v_27861 === 0) {
          } else {
            t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_27860, y], null), false);
          }
          var G__27862 = seq__27852_27856;
          var G__27863 = chunk__27853_27857;
          var G__27864 = count__27854_27858;
          var G__27865 = i__27855_27859 + 1;
          seq__27852_27856 = G__27862;
          chunk__27853_27857 = G__27863;
          count__27854_27858 = G__27864;
          i__27855_27859 = G__27865;
          continue;
        } else {
          var temp__4126__auto___27866 = cljs.core.seq.call(null, seq__27852_27856);
          if (temp__4126__auto___27866) {
            var seq__27852_27867__$1 = temp__4126__auto___27866;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__27852_27867__$1)) {
              var c__4309__auto___27868 = cljs.core.chunk_first.call(null, seq__27852_27867__$1);
              var G__27869 = cljs.core.chunk_rest.call(null, seq__27852_27867__$1);
              var G__27870 = c__4309__auto___27868;
              var G__27871 = cljs.core.count.call(null, c__4309__auto___27868);
              var G__27872 = 0;
              seq__27852_27856 = G__27869;
              chunk__27853_27857 = G__27870;
              count__27854_27858 = G__27871;
              i__27855_27859 = G__27872;
              continue;
            } else {
              var x_27873 = cljs.core.first.call(null, seq__27852_27867__$1);
              var v_27874 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_27873], null));
              if (v_27874 === 0) {
              } else {
                t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_27873, y], null), false);
              }
              var G__27875 = cljs.core.next.call(null, seq__27852_27867__$1);
              var G__27876 = null;
              var G__27877 = 0;
              var G__27878 = 0;
              seq__27852_27856 = G__27875;
              chunk__27853_27857 = G__27876;
              count__27854_27858 = G__27877;
              i__27855_27859 = G__27878;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__27879 = seq__27844;
      var G__27880 = chunk__27849;
      var G__27881 = count__27850;
      var G__27882 = i__27851 + 1;
      seq__27844 = G__27879;
      chunk__27849 = G__27880;
      count__27850 = G__27881;
      i__27851 = G__27882;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__27844);
      if (temp__4126__auto__) {
        var seq__27844__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27844__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__27844__$1);
          var G__27883 = cljs.core.chunk_rest.call(null, seq__27844__$1);
          var G__27884 = c__4309__auto__;
          var G__27885 = cljs.core.count.call(null, c__4309__auto__);
          var G__27886 = 0;
          seq__27844 = G__27883;
          chunk__27849 = G__27884;
          count__27850 = G__27885;
          i__27851 = G__27886;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__27844__$1);
          var seq__27845_27887 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.cols));
          var chunk__27846_27888 = null;
          var count__27847_27889 = 0;
          var i__27848_27890 = 0;
          while (true) {
            if (i__27848_27890 < count__27847_27889) {
              var x_27891 = cljs.core._nth.call(null, chunk__27846_27888, i__27848_27890);
              var v_27892 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_27891], null));
              if (v_27892 === 0) {
              } else {
                t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_27891, y], null), false);
              }
              var G__27893 = seq__27845_27887;
              var G__27894 = chunk__27846_27888;
              var G__27895 = count__27847_27889;
              var G__27896 = i__27848_27890 + 1;
              seq__27845_27887 = G__27893;
              chunk__27846_27888 = G__27894;
              count__27847_27889 = G__27895;
              i__27848_27890 = G__27896;
              continue;
            } else {
              var temp__4126__auto___27897__$1 = cljs.core.seq.call(null, seq__27845_27887);
              if (temp__4126__auto___27897__$1) {
                var seq__27845_27898__$1 = temp__4126__auto___27897__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__27845_27898__$1)) {
                  var c__4309__auto___27899 = cljs.core.chunk_first.call(null, seq__27845_27898__$1);
                  var G__27900 = cljs.core.chunk_rest.call(null, seq__27845_27898__$1);
                  var G__27901 = c__4309__auto___27899;
                  var G__27902 = cljs.core.count.call(null, c__4309__auto___27899);
                  var G__27903 = 0;
                  seq__27845_27887 = G__27900;
                  chunk__27846_27888 = G__27901;
                  count__27847_27889 = G__27902;
                  i__27848_27890 = G__27903;
                  continue;
                } else {
                  var x_27904 = cljs.core.first.call(null, seq__27845_27898__$1);
                  var v_27905 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_27904], null));
                  if (v_27905 === 0) {
                  } else {
                    t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_27904, y], null), false);
                  }
                  var G__27906 = cljs.core.next.call(null, seq__27845_27898__$1);
                  var G__27907 = null;
                  var G__27908 = 0;
                  var G__27909 = 0;
                  seq__27845_27887 = G__27906;
                  chunk__27846_27888 = G__27907;
                  count__27847_27889 = G__27908;
                  i__27848_27890 = G__27909;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__27910 = cljs.core.next.call(null, seq__27844__$1);
          var G__27911 = null;
          var G__27912 = 0;
          var G__27913 = 0;
          seq__27844 = G__27910;
          chunk__27849 = G__27911;
          count__27850 = G__27912;
          i__27851 = G__27913;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide07.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide07.cell_size * t3tr0s_slides.slide07.cols, t3tr0s_slides.slide07.cell_size * t3tr0s_slides.slide07.rows);
  ctx.fillStyle = t3tr0s_slides.slide07.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide07.light_green;
  t3tr0s_slides.slide07.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = t3tr0s_slides.slide07.dark_purple;
    ctx.strokeStyle = t3tr0s_slides.slide07.light_purple;
    return t3tr0s_slides.slide07.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide07.canvas_mouse = function canvas_mouse(app, owner, e) {
  var clicking = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "clicking", "clicking", 1769354153));
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide07.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide07.cell_size);
  om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [col, row], null));
  if (cljs.core.truth_(clicking)) {
    return t3tr0s_slides.slide07.lock_piece_BANG_.call(null);
  } else {
    return null;
  }
};
var ufv___27928 = schema.utils.use_fn_validation;
var output_schema27916_27929 = schema.core.Any;
var input_schema27917_27930 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker27918_27931 = schema.core.checker.call(null, input_schema27917_27930);
var output_checker27919_27932 = schema.core.checker.call(null, output_schema27916_27929);
t3tr0s_slides.slide07.canvas = function(ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932) {
  return function canvas(G__27920, G__27921) {
    var validate__5821__auto__ = ufv___27928.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___27933 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__27920, G__27921], null);
      var temp__4126__auto___27934 = input_checker27918_27931.call(null, args__5822__auto___27933);
      if (cljs.core.truth_(temp__4126__auto___27934)) {
        var error__5823__auto___27935 = temp__4126__auto___27934;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___27935)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema27917_27930, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___27933, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___27935], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__27920;
      var owner = G__27921;
      while (true) {
        if (typeof t3tr0s_slides.slide07.t27925 !== "undefined") {
        } else {
          t3tr0s_slides.slide07.t27925 = function(input_schema27917, owner, output_schema27916, G__27920, validate__5821__auto__, output_checker27919, G__27921, canvas, app, ufv__, input_checker27918, meta27926) {
            this.input_schema27917 = input_schema27917;
            this.owner = owner;
            this.output_schema27916 = output_schema27916;
            this.G__27920 = G__27920;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker27919 = output_checker27919;
            this.G__27921 = G__27921;
            this.canvas = canvas;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_checker27918 = input_checker27918;
            this.meta27926 = meta27926;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide07.t27925.cljs$lang$type = true;
          t3tr0s_slides.slide07.t27925.cljs$lang$ctorStr = "t3tr0s-slides.slide07/t27925";
          t3tr0s_slides.slide07.t27925.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide07/t27925");
            };
          }(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932);
          t3tr0s_slides.slide07.t27925.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide07.t27925.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseDown":function(___$1, validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932) {
                return function() {
                  om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "clicking", "clicking", 1769354153), true);
                  return t3tr0s_slides.slide07.lock_piece_BANG_.call(null);
                };
              }(___$1, validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932), "onMouseUp":function(___$1, validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932) {
                return function() {
                  return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "clicking", "clicking", 1769354153), false);
                };
              }(___$1, validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932), "onMouseLeave":function(___$1, validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932) {
                return function() {
                  return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "clicking", "clicking", 1769354153), false);
                };
              }(___$1, validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932), "onMouseMove":function(___$1, validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932) {
                return function(p1__27914_SHARP_) {
                  return t3tr0s_slides.slide07.canvas_mouse.call(null, self__.app, self__.owner, p1__27914_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932)}));
            };
          }(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932);
          t3tr0s_slides.slide07.t27925.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide07.t27925.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide07.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932);
          t3tr0s_slides.slide07.t27925.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide07.t27925.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide07.cols * t3tr0s_slides.slide07.cell_size;
              canvas__$2.height = t3tr0s_slides.slide07.rows * t3tr0s_slides.slide07.cell_size;
              return t3tr0s_slides.slide07.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932);
          t3tr0s_slides.slide07.t27925.prototype.om$core$IInitState$ = true;
          t3tr0s_slides.slide07.t27925.prototype.om$core$IInitState$init_state$arity$1 = function(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clicking", "clicking", 1769354153), false], null);
            };
          }(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932);
          t3tr0s_slides.slide07.t27925.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932) {
            return function(_27927) {
              var self__ = this;
              var _27927__$1 = this;
              return self__.meta27926;
            };
          }(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932);
          t3tr0s_slides.slide07.t27925.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932) {
            return function(_27927, meta27926__$1) {
              var self__ = this;
              var _27927__$1 = this;
              return new t3tr0s_slides.slide07.t27925(self__.input_schema27917, self__.owner, self__.output_schema27916, self__.G__27920, self__.validate__5821__auto__, self__.output_checker27919, self__.G__27921, self__.canvas, self__.app, self__.ufv__, self__.input_checker27918, meta27926__$1);
            };
          }(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932);
          t3tr0s_slides.slide07.__GT_t27925 = function(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932) {
            return function __GT_t27925(input_schema27917__$1, owner__$1, output_schema27916__$1, G__27920__$1, validate__5821__auto____$1, output_checker27919__$1, G__27921__$1, canvas__$1, app__$1, ufv____$1, input_checker27918__$1, meta27926) {
              return new t3tr0s_slides.slide07.t27925(input_schema27917__$1, owner__$1, output_schema27916__$1, G__27920__$1, validate__5821__auto____$1, output_checker27919__$1, G__27921__$1, canvas__$1, app__$1, ufv____$1, input_checker27918__$1, meta27926);
            };
          }(validate__5821__auto__, ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932);
        }
        return new t3tr0s_slides.slide07.t27925(input_schema27917_27930, owner, output_schema27916_27929, G__27920, validate__5821__auto__, output_checker27919_27932, G__27921, canvas, app, ufv___27928, input_checker27918_27931, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___27936 = output_checker27919_27932.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___27936)) {
        var error__5823__auto___27937 = temp__4126__auto___27936;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___27937)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema27916_27929, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___27937], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___27928, output_schema27916_27929, input_schema27917_27930, input_checker27918_27931, output_checker27919_27932);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide07.canvas), schema.core.make_fn_schema.call(null, output_schema27916_27929, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema27917_27930], null)));
t3tr0s_slides.slide07.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide07.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m27915) {
    return om.core.build.call(null, t3tr0s_slides.slide07.canvas, cursor__9685__auto__, m27915);
  };
  __GT_canvas = function(cursor__9685__auto__, m27915) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m27915);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___27955 = schema.utils.use_fn_validation;
var output_schema27939_27956 = schema.core.Any;
var input_schema27940_27957 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker27941_27958 = schema.core.checker.call(null, input_schema27940_27957);
var output_checker27942_27959 = schema.core.checker.call(null, output_schema27939_27956);
t3tr0s_slides.slide07.slide = function(ufv___27955, output_schema27939_27956, input_schema27940_27957, input_checker27941_27958, output_checker27942_27959) {
  return function slide(G__27943, G__27944) {
    var validate__5821__auto__ = ufv___27955.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___27960 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__27943, G__27944], null);
      var temp__4126__auto___27961 = input_checker27941_27958.call(null, args__5822__auto___27960);
      if (cljs.core.truth_(temp__4126__auto___27961)) {
        var error__5823__auto___27962 = temp__4126__auto___27961;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___27962)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema27940_27957, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___27960, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___27962], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__27943;
      var owner = G__27944;
      while (true) {
        if (typeof t3tr0s_slides.slide07.t27950 !== "undefined") {
        } else {
          t3tr0s_slides.slide07.t27950 = function(G__27943, output_checker27942, owner, G__27944, validate__5821__auto__, input_schema27940, input_checker27941, output_schema27939, slide, app, ufv__, meta27951) {
            this.G__27943 = G__27943;
            this.output_checker27942 = output_checker27942;
            this.owner = owner;
            this.G__27944 = G__27944;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema27940 = input_schema27940;
            this.input_checker27941 = input_checker27941;
            this.output_schema27939 = output_schema27939;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta27951 = meta27951;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide07.t27950.cljs$lang$type = true;
          t3tr0s_slides.slide07.t27950.cljs$lang$ctorStr = "t3tr0s-slides.slide07/t27950";
          t3tr0s_slides.slide07.t27950.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___27955, output_schema27939_27956, input_schema27940_27957, input_checker27941_27958, output_checker27942_27959) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide07/t27950");
            };
          }(validate__5821__auto__, ufv___27955, output_schema27939_27956, input_schema27940_27957, input_checker27941_27958, output_checker27942_27959);
          t3tr0s_slides.slide07.t27950.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide07.t27950.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___27955, output_schema27939_27956, input_schema27940_27957, input_checker27941_27958, output_checker27942_27959) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "7. Write piece to board."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide07.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide07.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___27955, output_schema27939_27956, input_schema27940_27957, input_checker27941_27958, output_checker27942_27959);
          t3tr0s_slides.slide07.t27950.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___27955, output_schema27939_27956, input_schema27940_27957, input_checker27941_27958, output_checker27942_27959) {
            return function(_27952) {
              var self__ = this;
              var _27952__$1 = this;
              return self__.meta27951;
            };
          }(validate__5821__auto__, ufv___27955, output_schema27939_27956, input_schema27940_27957, input_checker27941_27958, output_checker27942_27959);
          t3tr0s_slides.slide07.t27950.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___27955, output_schema27939_27956, input_schema27940_27957, input_checker27941_27958, output_checker27942_27959) {
            return function(_27952, meta27951__$1) {
              var self__ = this;
              var _27952__$1 = this;
              return new t3tr0s_slides.slide07.t27950(self__.G__27943, self__.output_checker27942, self__.owner, self__.G__27944, self__.validate__5821__auto__, self__.input_schema27940, self__.input_checker27941, self__.output_schema27939, self__.slide, self__.app, self__.ufv__, meta27951__$1);
            };
          }(validate__5821__auto__, ufv___27955, output_schema27939_27956, input_schema27940_27957, input_checker27941_27958, output_checker27942_27959);
          t3tr0s_slides.slide07.__GT_t27950 = function(validate__5821__auto__, ufv___27955, output_schema27939_27956, input_schema27940_27957, input_checker27941_27958, output_checker27942_27959) {
            return function __GT_t27950(G__27943__$1, output_checker27942__$1, owner__$1, G__27944__$1, validate__5821__auto____$1, input_schema27940__$1, input_checker27941__$1, output_schema27939__$1, slide__$1, app__$1, ufv____$1, meta27951) {
              return new t3tr0s_slides.slide07.t27950(G__27943__$1, output_checker27942__$1, owner__$1, G__27944__$1, validate__5821__auto____$1, input_schema27940__$1, input_checker27941__$1, output_schema27939__$1, slide__$1, app__$1, ufv____$1, meta27951);
            };
          }(validate__5821__auto__, ufv___27955, output_schema27939_27956, input_schema27940_27957, input_checker27941_27958, output_checker27942_27959);
        }
        return new t3tr0s_slides.slide07.t27950(G__27943, output_checker27942_27959, owner, G__27944, validate__5821__auto__, input_schema27940_27957, input_checker27941_27958, output_schema27939_27956, slide, app, ufv___27955, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___27963 = output_checker27942_27959.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___27963)) {
        var error__5823__auto___27964 = temp__4126__auto___27963;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___27964)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema27939_27956, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___27964], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___27955, output_schema27939_27956, input_schema27940_27957, input_checker27941_27958, output_checker27942_27959);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide07.slide), schema.core.make_fn_schema.call(null, output_schema27939_27956, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema27940_27957], null)));
t3tr0s_slides.slide07.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide07.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m27938) {
    return om.core.build.call(null, t3tr0s_slides.slide07.slide, cursor__9685__auto__, m27938);
  };
  __GT_slide = function(cursor__9685__auto__, m27938) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m27938);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide07.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide07.slide, t3tr0s_slides.slide07.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide07.resume = function resume() {
  return null;
};
t3tr0s_slides.slide07.stop = function stop() {
  return null;
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__57430 = cnt + 1;
      cnt = G__57430;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4409__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4409__auto__) {
      var v_57431 = this$.pop();
      if (keep_QMARK_.call(null, v_57431)) {
        this$.unshift(v_57431);
      } else {
      }
      var G__57432 = x + 1;
      x = G__57432;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: Can't create a ring buffer of size 0\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0))));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error("Assert failed: Can't add to a full buffer\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -97582774, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_57433 = 0;
  while (true) {
    var m_57434 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_57434 == null) {
    } else {
      m_57434.call(null);
      if (count_57433 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__57435 = count_57433 + 1;
        count_57433 = G__57435;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3541__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3541__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t57439 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t57439 = function(val, box, meta57440) {
      this.val = val;
      this.box = box;
      this.meta57440 = meta57440;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t57439.cljs$lang$type = true;
    cljs.core.async.impl.channels.t57439.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t57439";
    cljs.core.async.impl.channels.t57439.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.channels/t57439");
    };
    cljs.core.async.impl.channels.t57439.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t57439.prototype.cljs$core$IMeta$_meta$arity$1 = function(_57441) {
      var self__ = this;
      var _57441__$1 = this;
      return self__.meta57440;
    };
    cljs.core.async.impl.channels.t57439.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_57441, meta57440__$1) {
      var self__ = this;
      var _57441__$1 = this;
      return new cljs.core.async.impl.channels.t57439(self__.val, self__.box, meta57440__$1);
    };
    cljs.core.async.impl.channels.__GT_t57439 = function __GT_t57439(val__$1, box__$1, meta57440) {
      return new cljs.core.async.impl.channels.t57439(val__$1, box__$1, meta57440);
    };
  }
  return new cljs.core.async.impl.channels.t57439(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4123__auto__, writer__4124__auto__, opts__4125__auto__) {
  return cljs.core._write.call(null, writer__4124__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_57442 = self__.takes.pop();
      if (taker_57442 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_57442)) {
          var take_cb_57443 = cljs.core.async.impl.protocols.commit.call(null, taker_57442);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_57443, taker_57442, this$__$1) {
            return function() {
              return take_cb_57443.call(null, null);
            };
          }(take_cb_57443, taker_57442, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        var putter_57444 = self__.puts.pop();
        if (!(putter_57444 == null)) {
          var put_handler_57445 = putter_57444.handler;
          var val_57446 = putter_57444.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_57445)) {
            var put_cb_57447 = cljs.core.async.impl.protocols.commit.call(null, put_handler_57445);
            var __57448__$1 = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, function(put_cb_57447, __57448__$1, put_handler_57445, val_57446, putter_57444, _, retval, this$__$1) {
              return function() {
                return put_cb_57447.call(null, true);
              };
            }(put_cb_57447, __57448__$1, put_handler_57445, val_57446, putter_57444, _, retval, this$__$1));
            cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val_57446);
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      return retval;
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, function(put_cb, _, put_handler, val, putter, this$__$1) {
              return function() {
                return put_cb.call(null, true);
              };
            }(put_cb, _, put_handler, val, putter, this$__$1));
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending takes are allowed on a single channel.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, 
              "takes", "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error("Assert failed: Can't put nil in on a channel\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null))))));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker, closed__$1, this$__$1) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker, closed__$1, this$__$1));
          return cljs.core.async.impl.channels.box.call(null, true);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, true);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending puts are allowed on a single channel. Consider using a windowed buffer.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false);
};
goog.provide("t3tr0s_slides.slide01");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide01.dark_green = "#143";
t3tr0s_slides.slide01.light_green = "#175";
t3tr0s_slides.slide01.dark_purple = "#449";
t3tr0s_slides.slide01.light_purple = "#6ad";
t3tr0s_slides.slide01.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "row", "row", -570139521), null, new cljs.core.Keyword(null, "col", "col", -1959363084), null], null));
t3tr0s_slides.slide01.rows = 20;
t3tr0s_slides.slide01.cols = 10;
t3tr0s_slides.slide01.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide01.cols, 0));
t3tr0s_slides.slide01.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide01.rows, t3tr0s_slides.slide01.empty_row));
t3tr0s_slides.slide01.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "key", "key", -1516042587), "row" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(row), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, row, (new cljs.core.Keyword(null, "row", "row", -570139521)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-row-534ed" : 
  "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "row", "row", -570139521), row);
  }, new cljs.core.Keyword(null, "onMouseLeave", "onMouseLeave", 1446726903), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "row", "row", -570139521), null);
  }], null), "[", function() {
    var iter__4278__auto__ = function iter__33206(s__33207) {
      return new cljs.core.LazySeq(null, function() {
        var s__33207__$1 = s__33207;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__33207__$1);
          if (temp__4126__auto__) {
            var s__33207__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__33207__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__33207__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__33209 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__33208 = 0;
                while (true) {
                  if (i__33208 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__33208);
                    cljs.core.chunk_append.call(null, b__33209, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "key", "key", -1516042587), "row" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(row) + "col" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(col), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, 
                    row, (new cljs.core.Keyword(null, "row", "row", -570139521)).cljs$core$IFn$_invoke$arity$1(app)) && cljs.core._EQ_.call(null, col, (new cljs.core.Keyword(null, "col", "col", -1959363084)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : null, new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(i__33208, col, c__4276__auto__, size__4277__auto__, b__33209, s__33207__$2, temp__4126__auto__) {
                      return function() {
                        return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), col);
                      };
                    }(i__33208, col, c__4276__auto__, size__4277__auto__, b__33209, s__33207__$2, temp__4126__auto__), new cljs.core.Keyword(null, "onMouseLeave", "onMouseLeave", 1446726903), function(i__33208, col, c__4276__auto__, size__4277__auto__, b__33209, s__33207__$2, temp__4126__auto__) {
                      return function() {
                        return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), null);
                      };
                    }(i__33208, col, c__4276__auto__, size__4277__auto__, b__33209, s__33207__$2, temp__4126__auto__)], null), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, t3tr0s_slides.slide01.empty_board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null)))), " ")], null));
                    var G__33210 = i__33208 + 1;
                    i__33208 = G__33210;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33209), iter__33206.call(null, cljs.core.chunk_rest.call(null, s__33207__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33209), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__33207__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "key", "key", -1516042587), "row" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(row) + "col" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(col), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, row, (new cljs.core.Keyword(null, 
              "row", "row", -570139521)).cljs$core$IFn$_invoke$arity$1(app)) && cljs.core._EQ_.call(null, col, (new cljs.core.Keyword(null, "col", "col", -1959363084)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : null, new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(col, s__33207__$2, temp__4126__auto__) {
                return function() {
                  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), col);
                };
              }(col, s__33207__$2, temp__4126__auto__), new cljs.core.Keyword(null, "onMouseLeave", "onMouseLeave", 1446726903), function(col, s__33207__$2, temp__4126__auto__) {
                return function() {
                  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), null);
                };
              }(col, s__33207__$2, temp__4126__auto__)], null), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, t3tr0s_slides.slide01.empty_board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null)))), " ")], null), iter__33206.call(null, cljs.core.rest.call(null, s__33207__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide01.cols));
  }(), " ]"], null);
};
var ufv___33256 = schema.utils.use_fn_validation;
var output_schema33212_33257 = schema.core.Any;
var input_schema33213_33258 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker33214_33259 = schema.core.checker.call(null, input_schema33213_33258);
var output_checker33215_33260 = schema.core.checker.call(null, output_schema33212_33257);
t3tr0s_slides.slide01.code = function(ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260) {
  return function code(G__33216, G__33217) {
    var validate__5821__auto__ = ufv___33256.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___33261 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__33216, G__33217], null);
      var temp__4126__auto___33262 = input_checker33214_33259.call(null, args__5822__auto___33261);
      if (cljs.core.truth_(temp__4126__auto___33262)) {
        var error__5823__auto___33263 = temp__4126__auto___33262;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___33263)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema33213_33258, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___33261, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___33263], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__33216;
      var owner = G__33217;
      while (true) {
        if (typeof t3tr0s_slides.slide01.t33237 !== "undefined") {
        } else {
          t3tr0s_slides.slide01.t33237 = function(owner, validate__5821__auto__, output_checker33215, input_schema33213, G__33216, input_checker33214, app, output_schema33212, ufv__, code, G__33217, meta33238) {
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker33215 = output_checker33215;
            this.input_schema33213 = input_schema33213;
            this.G__33216 = G__33216;
            this.input_checker33214 = input_checker33214;
            this.app = app;
            this.output_schema33212 = output_schema33212;
            this.ufv__ = ufv__;
            this.code = code;
            this.G__33217 = G__33217;
            this.meta33238 = meta33238;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide01.t33237.cljs$lang$type = true;
          t3tr0s_slides.slide01.t33237.cljs$lang$ctorStr = "t3tr0s-slides.slide01/t33237";
          t3tr0s_slides.slide01.t33237.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide01/t33237");
            };
          }(validate__5821__auto__, ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260);
          t3tr0s_slides.slide01.t33237.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide01.t33237.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code({"id":"lang-clj", "ref":"code"}, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " rows ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "20")), ")\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " cols ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, 
              "10")), ")\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " empty-row (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vec")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "repeat")), " cols ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "0")), ")))\n", "(", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "def")), " empty-board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vec")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "repeat")), " rows empty-row)))\n"), React.DOM.code(null, "\n", "\x3e empty-board\n\n", cljs.core.into_array.call(null, function() {
                var iter__4278__auto__ = function(___$1, validate__5821__auto__, ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260) {
                  return function iter__33240(s__33241) {
                    return new cljs.core.LazySeq(null, function(___$1, validate__5821__auto__, ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260) {
                      return function() {
                        var s__33241__$1 = s__33241;
                        while (true) {
                          var temp__4126__auto__ = cljs.core.seq.call(null, s__33241__$1);
                          if (temp__4126__auto__) {
                            var s__33241__$2 = temp__4126__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__33241__$2)) {
                              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__33241__$2);
                              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                              var b__33243 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                              if (function() {
                                var i__33242 = 0;
                                while (true) {
                                  if (i__33242 < size__4277__auto__) {
                                    var row = cljs.core._nth.call(null, c__4276__auto__, i__33242);
                                    cljs.core.chunk_append.call(null, b__33243, sablono.interpreter.interpret.call(null, function() {
                                      var pred__33250 = cljs.core._EQ_;
                                      var expr__33251 = row;
                                      if (cljs.core.truth_(pred__33250.call(null, 0, expr__33251))) {
                                        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "  [");
                                      } else {
                                        if (cljs.core.truth_(pred__33250.call(null, t3tr0s_slides.slide01.rows - 1, expr__33251))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "   ");
                                        } else {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "   ");
                                        }
                                      }
                                    }()));
                                    var G__33264 = i__33242 + 1;
                                    i__33242 = G__33264;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33243), iter__33240.call(null, cljs.core.chunk_rest.call(null, s__33241__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33243), null);
                              }
                            } else {
                              var row = cljs.core.first.call(null, s__33241__$2);
                              return cljs.core.cons.call(null, sablono.interpreter.interpret.call(null, function() {
                                var pred__33253 = cljs.core._EQ_;
                                var expr__33254 = row;
                                if (cljs.core.truth_(pred__33253.call(null, 0, expr__33254))) {
                                  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "  [");
                                } else {
                                  if (cljs.core.truth_(pred__33253.call(null, t3tr0s_slides.slide01.rows - 1, expr__33254))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "   ");
                                  } else {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "   ");
                                  }
                                }
                              }()), iter__33240.call(null, cljs.core.rest.call(null, s__33241__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(___$1, validate__5821__auto__, ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260), null, null);
                  };
                }(___$1, validate__5821__auto__, ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260);
                return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide01.rows));
              }()))));
            };
          }(validate__5821__auto__, ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260);
          t3tr0s_slides.slide01.t33237.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260) {
            return function(_33239) {
              var self__ = this;
              var _33239__$1 = this;
              return self__.meta33238;
            };
          }(validate__5821__auto__, ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260);
          t3tr0s_slides.slide01.t33237.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260) {
            return function(_33239, meta33238__$1) {
              var self__ = this;
              var _33239__$1 = this;
              return new t3tr0s_slides.slide01.t33237(self__.owner, self__.validate__5821__auto__, self__.output_checker33215, self__.input_schema33213, self__.G__33216, self__.input_checker33214, self__.app, self__.output_schema33212, self__.ufv__, self__.code, self__.G__33217, meta33238__$1);
            };
          }(validate__5821__auto__, ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260);
          t3tr0s_slides.slide01.__GT_t33237 = function(validate__5821__auto__, ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260) {
            return function __GT_t33237(owner__$1, validate__5821__auto____$1, output_checker33215__$1, input_schema33213__$1, G__33216__$1, input_checker33214__$1, app__$1, output_schema33212__$1, ufv____$1, code__$1, G__33217__$1, meta33238) {
              return new t3tr0s_slides.slide01.t33237(owner__$1, validate__5821__auto____$1, output_checker33215__$1, input_schema33213__$1, G__33216__$1, input_checker33214__$1, app__$1, output_schema33212__$1, ufv____$1, code__$1, G__33217__$1, meta33238);
            };
          }(validate__5821__auto__, ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260);
        }
        return new t3tr0s_slides.slide01.t33237(owner, validate__5821__auto__, output_checker33215_33260, input_schema33213_33258, G__33216, input_checker33214_33259, app, output_schema33212_33257, ufv___33256, code, G__33217, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___33265 = output_checker33215_33260.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___33265)) {
        var error__5823__auto___33266 = temp__4126__auto___33265;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___33266)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema33212_33257, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___33266], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___33256, output_schema33212_33257, input_schema33213_33258, input_checker33214_33259, output_checker33215_33260);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide01.code), schema.core.make_fn_schema.call(null, output_schema33212_33257, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema33213_33258], null)));
t3tr0s_slides.slide01.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide01.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m33211) {
    return om.core.build.call(null, t3tr0s_slides.slide01.code, cursor__9685__auto__, m33211);
  };
  __GT_code = function(cursor__9685__auto__, m33211) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m33211);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide01.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide01.rows);
t3tr0s_slides.slide01.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide01.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide01.cell_size);
  om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "row", "row", -570139521), row);
  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), col);
};
t3tr0s_slides.slide01.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__33267) {
  var vec__33269 = p__33267;
  var x = cljs.core.nth.call(null, vec__33269, 0, null);
  var y = cljs.core.nth.call(null, vec__33269, 1, null);
  var rx = t3tr0s_slides.slide01.cell_size * x;
  var ry = t3tr0s_slides.slide01.cell_size * y;
  var rs = t3tr0s_slides.slide01.cell_size;
  ctx.fillRect(rx, ry, rs, rs);
  return ctx.strokeRect(rx, ry, rs, rs);
};
t3tr0s_slides.slide01.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  var x = (new cljs.core.Keyword(null, "col", "col", -1959363084)).cljs$core$IFn$_invoke$arity$1(app);
  var y = (new cljs.core.Keyword(null, "row", "row", -570139521)).cljs$core$IFn$_invoke$arity$1(app);
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide01.cell_size * t3tr0s_slides.slide01.cols, t3tr0s_slides.slide01.cell_size * t3tr0s_slides.slide01.rows);
  ctx.lineWidth = 2;
  if (cljs.core.truth_(y)) {
    ctx.fillStyle = t3tr0s_slides.slide01.dark_green;
    ctx.strokeStyle = t3tr0s_slides.slide01.light_green;
    var seq__33276_33282 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide01.cols));
    var chunk__33278_33283 = null;
    var count__33279_33284 = 0;
    var i__33280_33285 = 0;
    while (true) {
      if (i__33280_33285 < count__33279_33284) {
        var x0_33286 = cljs.core._nth.call(null, chunk__33278_33283, i__33280_33285);
        if (cljs.core.not_EQ_.call(null, x0_33286, x)) {
          t3tr0s_slides.slide01.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x0_33286, y], null));
          var G__33287 = seq__33276_33282;
          var G__33288 = chunk__33278_33283;
          var G__33289 = count__33279_33284;
          var G__33290 = i__33280_33285 + 1;
          seq__33276_33282 = G__33287;
          chunk__33278_33283 = G__33288;
          count__33279_33284 = G__33289;
          i__33280_33285 = G__33290;
          continue;
        } else {
          var G__33291 = seq__33276_33282;
          var G__33292 = chunk__33278_33283;
          var G__33293 = count__33279_33284;
          var G__33294 = i__33280_33285 + 1;
          seq__33276_33282 = G__33291;
          chunk__33278_33283 = G__33292;
          count__33279_33284 = G__33293;
          i__33280_33285 = G__33294;
          continue;
        }
      } else {
        var temp__4126__auto___33295 = cljs.core.seq.call(null, seq__33276_33282);
        if (temp__4126__auto___33295) {
          var seq__33276_33296__$1 = temp__4126__auto___33295;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__33276_33296__$1)) {
            var c__4309__auto___33297 = cljs.core.chunk_first.call(null, seq__33276_33296__$1);
            var G__33298 = cljs.core.chunk_rest.call(null, seq__33276_33296__$1);
            var G__33299 = c__4309__auto___33297;
            var G__33300 = cljs.core.count.call(null, c__4309__auto___33297);
            var G__33301 = 0;
            seq__33276_33282 = G__33298;
            chunk__33278_33283 = G__33299;
            count__33279_33284 = G__33300;
            i__33280_33285 = G__33301;
            continue;
          } else {
            var x0_33302 = cljs.core.first.call(null, seq__33276_33296__$1);
            if (cljs.core.not_EQ_.call(null, x0_33302, x)) {
              t3tr0s_slides.slide01.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x0_33302, y], null));
              var G__33303 = cljs.core.next.call(null, seq__33276_33296__$1);
              var G__33304 = null;
              var G__33305 = 0;
              var G__33306 = 0;
              seq__33276_33282 = G__33303;
              chunk__33278_33283 = G__33304;
              count__33279_33284 = G__33305;
              i__33280_33285 = G__33306;
              continue;
            } else {
              var G__33307 = cljs.core.next.call(null, seq__33276_33296__$1);
              var G__33308 = null;
              var G__33309 = 0;
              var G__33310 = 0;
              seq__33276_33282 = G__33307;
              chunk__33278_33283 = G__33308;
              count__33279_33284 = G__33309;
              i__33280_33285 = G__33310;
              continue;
            }
          }
        } else {
        }
      }
      break;
    }
    ctx.fillStyle = t3tr0s_slides.slide01.dark_purple;
    ctx.strokeStyle = t3tr0s_slides.slide01.light_purple;
    if (cljs.core.truth_(x)) {
      return t3tr0s_slides.slide01.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
var ufv___33325 = schema.utils.use_fn_validation;
var output_schema33313_33326 = schema.core.Any;
var input_schema33314_33327 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker33315_33328 = schema.core.checker.call(null, input_schema33314_33327);
var output_checker33316_33329 = schema.core.checker.call(null, output_schema33313_33326);
t3tr0s_slides.slide01.canvas = function(ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329) {
  return function canvas(G__33317, G__33318) {
    var validate__5821__auto__ = ufv___33325.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___33330 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__33317, G__33318], null);
      var temp__4126__auto___33331 = input_checker33315_33328.call(null, args__5822__auto___33330);
      if (cljs.core.truth_(temp__4126__auto___33331)) {
        var error__5823__auto___33332 = temp__4126__auto___33331;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___33332)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema33314_33327, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___33330, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___33332], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__33317;
      var owner = G__33318;
      while (true) {
        if (typeof t3tr0s_slides.slide01.t33322 !== "undefined") {
        } else {
          t3tr0s_slides.slide01.t33322 = function(output_checker33316, owner, G__33318, validate__5821__auto__, output_schema33313, G__33317, input_schema33314, canvas, input_checker33315, app, ufv__, meta33323) {
            this.output_checker33316 = output_checker33316;
            this.owner = owner;
            this.G__33318 = G__33318;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema33313 = output_schema33313;
            this.G__33317 = G__33317;
            this.input_schema33314 = input_schema33314;
            this.canvas = canvas;
            this.input_checker33315 = input_checker33315;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta33323 = meta33323;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide01.t33322.cljs$lang$type = true;
          t3tr0s_slides.slide01.t33322.cljs$lang$ctorStr = "t3tr0s-slides.slide01/t33322";
          t3tr0s_slides.slide01.t33322.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide01/t33322");
            };
          }(validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329);
          t3tr0s_slides.slide01.t33322.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide01.t33322.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseMove":function(___$1, validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329) {
                return function(p1__33311_SHARP_) {
                  return t3tr0s_slides.slide01.canvas_mouse.call(null, self__.app, self__.owner, p1__33311_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329), "onMouseLeave":function(___$1, validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329) {
                return function() {
                  om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "row", "row", -570139521), null);
                  return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "col", "col", -1959363084), null);
                };
              }(___$1, validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329)}));
            };
          }(validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329);
          t3tr0s_slides.slide01.t33322.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide01.t33322.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide01.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329);
          t3tr0s_slides.slide01.t33322.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide01.t33322.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide01.cols * t3tr0s_slides.slide01.cell_size;
              canvas__$2.height = t3tr0s_slides.slide01.rows * t3tr0s_slides.slide01.cell_size;
              return t3tr0s_slides.slide01.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329);
          t3tr0s_slides.slide01.t33322.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329) {
            return function(_33324) {
              var self__ = this;
              var _33324__$1 = this;
              return self__.meta33323;
            };
          }(validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329);
          t3tr0s_slides.slide01.t33322.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329) {
            return function(_33324, meta33323__$1) {
              var self__ = this;
              var _33324__$1 = this;
              return new t3tr0s_slides.slide01.t33322(self__.output_checker33316, self__.owner, self__.G__33318, self__.validate__5821__auto__, self__.output_schema33313, self__.G__33317, self__.input_schema33314, self__.canvas, self__.input_checker33315, self__.app, self__.ufv__, meta33323__$1);
            };
          }(validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329);
          t3tr0s_slides.slide01.__GT_t33322 = function(validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329) {
            return function __GT_t33322(output_checker33316__$1, owner__$1, G__33318__$1, validate__5821__auto____$1, output_schema33313__$1, G__33317__$1, input_schema33314__$1, canvas__$1, input_checker33315__$1, app__$1, ufv____$1, meta33323) {
              return new t3tr0s_slides.slide01.t33322(output_checker33316__$1, owner__$1, G__33318__$1, validate__5821__auto____$1, output_schema33313__$1, G__33317__$1, input_schema33314__$1, canvas__$1, input_checker33315__$1, app__$1, ufv____$1, meta33323);
            };
          }(validate__5821__auto__, ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329);
        }
        return new t3tr0s_slides.slide01.t33322(output_checker33316_33329, owner, G__33318, validate__5821__auto__, output_schema33313_33326, G__33317, input_schema33314_33327, canvas, input_checker33315_33328, app, ufv___33325, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___33333 = output_checker33316_33329.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___33333)) {
        var error__5823__auto___33334 = temp__4126__auto___33333;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___33334)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema33313_33326, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___33334], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___33325, output_schema33313_33326, input_schema33314_33327, input_checker33315_33328, output_checker33316_33329);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide01.canvas), schema.core.make_fn_schema.call(null, output_schema33313_33326, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema33314_33327], null)));
t3tr0s_slides.slide01.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide01.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m33312) {
    return om.core.build.call(null, t3tr0s_slides.slide01.canvas, cursor__9685__auto__, m33312);
  };
  __GT_canvas = function(cursor__9685__auto__, m33312) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m33312);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___33352 = schema.utils.use_fn_validation;
var output_schema33336_33353 = schema.core.Any;
var input_schema33337_33354 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker33338_33355 = schema.core.checker.call(null, input_schema33337_33354);
var output_checker33339_33356 = schema.core.checker.call(null, output_schema33336_33353);
t3tr0s_slides.slide01.slide = function(ufv___33352, output_schema33336_33353, input_schema33337_33354, input_checker33338_33355, output_checker33339_33356) {
  return function slide(G__33340, G__33341) {
    var validate__5821__auto__ = ufv___33352.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___33357 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__33340, G__33341], null);
      var temp__4126__auto___33358 = input_checker33338_33355.call(null, args__5822__auto___33357);
      if (cljs.core.truth_(temp__4126__auto___33358)) {
        var error__5823__auto___33359 = temp__4126__auto___33358;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___33359)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema33337_33354, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___33357, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___33359], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__33340;
      var owner = G__33341;
      while (true) {
        if (typeof t3tr0s_slides.slide01.t33347 !== "undefined") {
        } else {
          t3tr0s_slides.slide01.t33347 = function(input_checker33338, owner, G__33341, output_schema33336, G__33340, output_checker33339, validate__5821__auto__, input_schema33337, slide, app, ufv__, meta33348) {
            this.input_checker33338 = input_checker33338;
            this.owner = owner;
            this.G__33341 = G__33341;
            this.output_schema33336 = output_schema33336;
            this.G__33340 = G__33340;
            this.output_checker33339 = output_checker33339;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema33337 = input_schema33337;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta33348 = meta33348;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide01.t33347.cljs$lang$type = true;
          t3tr0s_slides.slide01.t33347.cljs$lang$ctorStr = "t3tr0s-slides.slide01/t33347";
          t3tr0s_slides.slide01.t33347.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___33352, output_schema33336_33353, input_schema33337_33354, input_checker33338_33355, output_checker33339_33356) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide01/t33347");
            };
          }(validate__5821__auto__, ufv___33352, output_schema33336_33353, input_schema33337_33354, input_checker33338_33355, output_checker33339_33356);
          t3tr0s_slides.slide01.t33347.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide01.t33347.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___33352, output_schema33336_33353, input_schema33337_33354, input_checker33338_33355, output_checker33339_33356) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "1. Create the board."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide01.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide01.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___33352, output_schema33336_33353, input_schema33337_33354, input_checker33338_33355, output_checker33339_33356);
          t3tr0s_slides.slide01.t33347.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___33352, output_schema33336_33353, input_schema33337_33354, input_checker33338_33355, output_checker33339_33356) {
            return function(_33349) {
              var self__ = this;
              var _33349__$1 = this;
              return self__.meta33348;
            };
          }(validate__5821__auto__, ufv___33352, output_schema33336_33353, input_schema33337_33354, input_checker33338_33355, output_checker33339_33356);
          t3tr0s_slides.slide01.t33347.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___33352, output_schema33336_33353, input_schema33337_33354, input_checker33338_33355, output_checker33339_33356) {
            return function(_33349, meta33348__$1) {
              var self__ = this;
              var _33349__$1 = this;
              return new t3tr0s_slides.slide01.t33347(self__.input_checker33338, self__.owner, self__.G__33341, self__.output_schema33336, self__.G__33340, self__.output_checker33339, self__.validate__5821__auto__, self__.input_schema33337, self__.slide, self__.app, self__.ufv__, meta33348__$1);
            };
          }(validate__5821__auto__, ufv___33352, output_schema33336_33353, input_schema33337_33354, input_checker33338_33355, output_checker33339_33356);
          t3tr0s_slides.slide01.__GT_t33347 = function(validate__5821__auto__, ufv___33352, output_schema33336_33353, input_schema33337_33354, input_checker33338_33355, output_checker33339_33356) {
            return function __GT_t33347(input_checker33338__$1, owner__$1, G__33341__$1, output_schema33336__$1, G__33340__$1, output_checker33339__$1, validate__5821__auto____$1, input_schema33337__$1, slide__$1, app__$1, ufv____$1, meta33348) {
              return new t3tr0s_slides.slide01.t33347(input_checker33338__$1, owner__$1, G__33341__$1, output_schema33336__$1, G__33340__$1, output_checker33339__$1, validate__5821__auto____$1, input_schema33337__$1, slide__$1, app__$1, ufv____$1, meta33348);
            };
          }(validate__5821__auto__, ufv___33352, output_schema33336_33353, input_schema33337_33354, input_checker33338_33355, output_checker33339_33356);
        }
        return new t3tr0s_slides.slide01.t33347(input_checker33338_33355, owner, G__33341, output_schema33336_33353, G__33340, output_checker33339_33356, validate__5821__auto__, input_schema33337_33354, slide, app, ufv___33352, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___33360 = output_checker33339_33356.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___33360)) {
        var error__5823__auto___33361 = temp__4126__auto___33360;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___33361)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema33336_33353, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___33361], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___33352, output_schema33336_33353, input_schema33337_33354, input_checker33338_33355, output_checker33339_33356);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide01.slide), schema.core.make_fn_schema.call(null, output_schema33336_33353, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema33337_33354], null)));
t3tr0s_slides.slide01.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide01.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m33335) {
    return om.core.build.call(null, t3tr0s_slides.slide01.slide, cursor__9685__auto__, m33335);
  };
  __GT_slide = function(cursor__9685__auto__, m33335) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m33335);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide01.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide01.slide, t3tr0s_slides.slide01.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide01.resume = function resume() {
  return null;
};
t3tr0s_slides.slide01.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide00");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide00.dark_green = "#143";
t3tr0s_slides.slide00.light_green = "#175";
t3tr0s_slides.slide00.dark_purple = "#449";
t3tr0s_slides.slide00.light_purple = "#6ad";
t3tr0s_slides.slide00.dark_red = "#944";
t3tr0s_slides.slide00.light_red = "#f8c";
t3tr0s_slides.slide00.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide00.rotate_coord = function rotate_coord(p__118421) {
  var vec__118423 = p__118421;
  var x = cljs.core.nth.call(null, vec__118423, 0, null);
  var y = cljs.core.nth.call(null, vec__118423, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide00.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide00.rotate_coord, piece);
};
t3tr0s_slides.slide00.rows = 20;
t3tr0s_slides.slide00.cols = 10;
t3tr0s_slides.slide00.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide00.cols, 0));
t3tr0s_slides.slide00.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide00.rows, t3tr0s_slides.slide00.empty_row));
t3tr0s_slides.slide00.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 1, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 
0, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 1, 0, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 1, 1, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 1, 1, 0, 1, 1, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide00.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide00.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide00.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.last.call(null, cljs.core.take.call(null, 4, cljs.core.iterate.call(null, t3tr0s_slides.slide00.rotate_piece, (new cljs.core.Keyword(null, "L", "L", -1038307519)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide00.pieces)))), new cljs.core.Keyword(null, 
"position", "position", -2011731912), t3tr0s_slides.slide00.initial_pos], null));
t3tr0s_slides.slide00.write_piece = function write_piece(board, coords, p__118424) {
  while (true) {
    var vec__118428 = p__118424;
    var cx = cljs.core.nth.call(null, vec__118428, 0, null);
    var cy = cljs.core.nth.call(null, vec__118428, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__118429 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__118429, 0, null);
      var y = cljs.core.nth.call(null, vec__118429, 1, null);
      var G__118431 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e118430) {
          if (e118430 instanceof Error) {
            var _ = e118430;
            return board;
          } else {
            throw e118430;
          }
        }
      }();
      var G__118432 = cljs.core.rest.call(null, coords);
      var G__118433 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__118431;
      coords = G__118432;
      p__118424 = G__118433;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide00.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__118435 = cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state);
  var map__118435__$1 = cljs.core.seq_QMARK_.call(null, map__118435) ? cljs.core.apply.call(null, cljs.core.hash_map, map__118435) : map__118435;
  var position = cljs.core.get.call(null, map__118435__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__118435__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide00.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide00.write_piece, piece, position);
};
t3tr0s_slides.slide00.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__118436) {
  var vec__118440 = p__118436;
  var cx = cljs.core.nth.call(null, vec__118440, 0, null);
  var cy = cljs.core.nth.call(null, vec__118440, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__118440, cx, cy) {
    return function(p__118441) {
      var vec__118442 = p__118441;
      var x = cljs.core.nth.call(null, vec__118442, 0, null);
      var y = cljs.core.nth.call(null, vec__118442, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__118440, cx, cy), piece);
};
t3tr0s_slides.slide00.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide00.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide00.app_state))));
};
t3tr0s_slides.slide00.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__118447(s__118448) {
      return new cljs.core.LazySeq(null, function() {
        var s__118448__$1 = s__118448;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__118448__$1);
          if (temp__4126__auto__) {
            var s__118448__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__118448__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__118448__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__118450 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__118449 = 0;
                while (true) {
                  if (i__118449 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__118449);
                    cljs.core.chunk_append.call(null, b__118450, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))));
                    var G__118451 = i__118449 + 1;
                    i__118449 = G__118451;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__118450), iter__118447.call(null, cljs.core.chunk_rest.call(null, s__118448__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__118450), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__118448__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))), iter__118447.call(null, cljs.core.rest.call(null, s__118448__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide00.cols));
  }(), " ]"], null);
};
var ufv___118467 = schema.utils.use_fn_validation;
var output_schema118453_118468 = schema.core.Any;
var input_schema118454_118469 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker118455_118470 = schema.core.checker.call(null, input_schema118454_118469);
var output_checker118456_118471 = schema.core.checker.call(null, output_schema118453_118468);
t3tr0s_slides.slide00.code = function(ufv___118467, output_schema118453_118468, input_schema118454_118469, input_checker118455_118470, output_checker118456_118471) {
  return function code(G__118457, G__118458) {
    var validate__5821__auto__ = ufv___118467.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___118472 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__118457, G__118458], null);
      var temp__4126__auto___118473 = input_checker118455_118470.call(null, args__5822__auto___118472);
      if (cljs.core.truth_(temp__4126__auto___118473)) {
        var error__5823__auto___118474 = temp__4126__auto___118473;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___118474)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema118454_118469, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___118472, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___118474], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__118457;
      var owner = G__118458;
      while (true) {
        if (typeof t3tr0s_slides.slide00.t118463 !== "undefined") {
        } else {
          t3tr0s_slides.slide00.t118463 = function(owner, G__118458, G__118457, validate__5821__auto__, input_checker118455, input_schema118454, output_schema118453, app, ufv__, code, output_checker118456, meta118464) {
            this.owner = owner;
            this.G__118458 = G__118458;
            this.G__118457 = G__118457;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker118455 = input_checker118455;
            this.input_schema118454 = input_schema118454;
            this.output_schema118453 = output_schema118453;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.output_checker118456 = output_checker118456;
            this.meta118464 = meta118464;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide00.t118463.cljs$lang$type = true;
          t3tr0s_slides.slide00.t118463.cljs$lang$ctorStr = "t3tr0s-slides.slide00/t118463";
          t3tr0s_slides.slide00.t118463.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___118467, output_schema118453_118468, input_schema118454_118469, input_checker118455_118470, output_checker118456_118471) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide00/t118463");
            };
          }(validate__5821__auto__, ufv___118467, output_schema118453_118468, input_schema118454_118469, input_checker118455_118470, output_checker118456_118471);
          t3tr0s_slides.slide00.t118463.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide00.t118463.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___118467, output_schema118453_118468, input_schema118454_118469, input_checker118455_118470, output_checker118456_118471) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs118466 = t3tr0s_slides.syntax_highlight.cmt.call(null, ";; This is an animated \x26 interactive guide to ");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs118466) ? sablono.interpreter.attributes.call(null, attrs118466) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs118466) ? new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; building a game in ClojureScript, because")), "\n", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; I find the design patterns very interesting.")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; This requires some knowledge of ClojureScript,")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; which you can find ", t3tr0s_slides.syntax_highlight.kw.call(null, new cljs.core.PersistentVector(null, 
                3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "https://github.com/shaunlebron/ClojureScript-Syntax-in-15-minutes"], null), "here"], null)), ".")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Created by ", t3tr0s_slides.syntax_highlight.core.call(null, new cljs.core.PersistentVector(null, 
                3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "http://twitter.com/shaunlebron"], null), "@shaunlebron"], null)))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Styling borrowed from ", t3tr0s_slides.syntax_highlight.lit.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "http://twitter.com/ibdknox"], null), "@ibdknox"], null)), " :)")), "\n", "\n\n\n\n\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; ")), "SHIFT + RIGHT for next slide", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, " ----------------\x3e\x3e"))], 
                null) : new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs118466), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; building a game in ClojureScript, because")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; I find the design patterns very interesting.")), "\n", "\n", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.cmt.call(null, ";; This requires some knowledge of ClojureScript,")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; which you can find ", t3tr0s_slides.syntax_highlight.kw.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", 
                -793805698), "https://github.com/shaunlebron/ClojureScript-Syntax-in-15-minutes"], null), "here"], null)), ".")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Created by ", t3tr0s_slides.syntax_highlight.core.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", 
                "href", -793805698), "http://twitter.com/shaunlebron"], null), "@shaunlebron"], null)))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Styling borrowed from ", t3tr0s_slides.syntax_highlight.lit.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), 
                "http://twitter.com/ibdknox"], null), "@ibdknox"], null)), " :)")), "\n", "\n\n\n\n\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; ")), "SHIFT + RIGHT for next slide", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, " ----------------\x3e\x3e"))], null)));
              }()));
            };
          }(validate__5821__auto__, ufv___118467, output_schema118453_118468, input_schema118454_118469, input_checker118455_118470, output_checker118456_118471);
          t3tr0s_slides.slide00.t118463.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___118467, output_schema118453_118468, input_schema118454_118469, input_checker118455_118470, output_checker118456_118471) {
            return function(_118465) {
              var self__ = this;
              var _118465__$1 = this;
              return self__.meta118464;
            };
          }(validate__5821__auto__, ufv___118467, output_schema118453_118468, input_schema118454_118469, input_checker118455_118470, output_checker118456_118471);
          t3tr0s_slides.slide00.t118463.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___118467, output_schema118453_118468, input_schema118454_118469, input_checker118455_118470, output_checker118456_118471) {
            return function(_118465, meta118464__$1) {
              var self__ = this;
              var _118465__$1 = this;
              return new t3tr0s_slides.slide00.t118463(self__.owner, self__.G__118458, self__.G__118457, self__.validate__5821__auto__, self__.input_checker118455, self__.input_schema118454, self__.output_schema118453, self__.app, self__.ufv__, self__.code, self__.output_checker118456, meta118464__$1);
            };
          }(validate__5821__auto__, ufv___118467, output_schema118453_118468, input_schema118454_118469, input_checker118455_118470, output_checker118456_118471);
          t3tr0s_slides.slide00.__GT_t118463 = function(validate__5821__auto__, ufv___118467, output_schema118453_118468, input_schema118454_118469, input_checker118455_118470, output_checker118456_118471) {
            return function __GT_t118463(owner__$1, G__118458__$1, G__118457__$1, validate__5821__auto____$1, input_checker118455__$1, input_schema118454__$1, output_schema118453__$1, app__$1, ufv____$1, code__$1, output_checker118456__$1, meta118464) {
              return new t3tr0s_slides.slide00.t118463(owner__$1, G__118458__$1, G__118457__$1, validate__5821__auto____$1, input_checker118455__$1, input_schema118454__$1, output_schema118453__$1, app__$1, ufv____$1, code__$1, output_checker118456__$1, meta118464);
            };
          }(validate__5821__auto__, ufv___118467, output_schema118453_118468, input_schema118454_118469, input_checker118455_118470, output_checker118456_118471);
        }
        return new t3tr0s_slides.slide00.t118463(owner, G__118458, G__118457, validate__5821__auto__, input_checker118455_118470, input_schema118454_118469, output_schema118453_118468, app, ufv___118467, code, output_checker118456_118471, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___118475 = output_checker118456_118471.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___118475)) {
        var error__5823__auto___118476 = temp__4126__auto___118475;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___118476)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema118453_118468, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___118476], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___118467, output_schema118453_118468, input_schema118454_118469, input_checker118455_118470, output_checker118456_118471);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide00.code), schema.core.make_fn_schema.call(null, output_schema118453_118468, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema118454_118469], null)));
t3tr0s_slides.slide00.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide00.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m118452) {
    return om.core.build.call(null, t3tr0s_slides.slide00.code, cursor__9685__auto__, m118452);
  };
  __GT_code = function(cursor__9685__auto__, m118452) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m118452);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide00.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide00.rows);
t3tr0s_slides.slide00.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__118477, is_center) {
  var vec__118479 = p__118477;
  var x = cljs.core.nth.call(null, vec__118479, 0, null);
  var y = cljs.core.nth.call(null, vec__118479, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide00.cell_size * x;
  var ry = t3tr0s_slides.slide00.cell_size * y;
  var rs = t3tr0s_slides.slide00.cell_size;
  var cx = t3tr0s_slides.slide00.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide00.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide00.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide00.piece_abs_coords = function piece_abs_coords(piece, p__118480) {
  var vec__118484 = p__118480;
  var cx = cljs.core.nth.call(null, vec__118484, 0, null);
  var cy = cljs.core.nth.call(null, vec__118484, 1, null);
  return cljs.core.mapv.call(null, function(vec__118484, cx, cy) {
    return function(p__118485) {
      var vec__118486 = p__118485;
      var x = cljs.core.nth.call(null, vec__118486, 0, null);
      var y = cljs.core.nth.call(null, vec__118486, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__118484, cx, cy), piece);
};
t3tr0s_slides.slide00.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__118493 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide00.piece_abs_coords.call(null, piece, pos)));
  var chunk__118494 = null;
  var count__118495 = 0;
  var i__118496 = 0;
  while (true) {
    if (i__118496 < count__118495) {
      var vec__118497 = cljs.core._nth.call(null, chunk__118494, i__118496);
      var i = cljs.core.nth.call(null, vec__118497, 0, null);
      var c = cljs.core.nth.call(null, vec__118497, 1, null);
      t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__118499 = seq__118493;
      var G__118500 = chunk__118494;
      var G__118501 = count__118495;
      var G__118502 = i__118496 + 1;
      seq__118493 = G__118499;
      chunk__118494 = G__118500;
      count__118495 = G__118501;
      i__118496 = G__118502;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__118493);
      if (temp__4126__auto__) {
        var seq__118493__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__118493__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__118493__$1);
          var G__118503 = cljs.core.chunk_rest.call(null, seq__118493__$1);
          var G__118504 = c__4309__auto__;
          var G__118505 = cljs.core.count.call(null, c__4309__auto__);
          var G__118506 = 0;
          seq__118493 = G__118503;
          chunk__118494 = G__118504;
          count__118495 = G__118505;
          i__118496 = G__118506;
          continue;
        } else {
          var vec__118498 = cljs.core.first.call(null, seq__118493__$1);
          var i = cljs.core.nth.call(null, vec__118498, 0, null);
          var c = cljs.core.nth.call(null, vec__118498, 1, null);
          t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__118507 = cljs.core.next.call(null, seq__118493__$1);
          var G__118508 = null;
          var G__118509 = 0;
          var G__118510 = 0;
          seq__118493 = G__118507;
          chunk__118494 = G__118508;
          count__118495 = G__118509;
          i__118496 = G__118510;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide00.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__118523 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide00.rows));
  var chunk__118528 = null;
  var count__118529 = 0;
  var i__118530 = 0;
  while (true) {
    if (i__118530 < count__118529) {
      var y = cljs.core._nth.call(null, chunk__118528, i__118530);
      var seq__118531_118535 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide00.cols));
      var chunk__118532_118536 = null;
      var count__118533_118537 = 0;
      var i__118534_118538 = 0;
      while (true) {
        if (i__118534_118538 < count__118533_118537) {
          var x_118539 = cljs.core._nth.call(null, chunk__118532_118536, i__118534_118538);
          var v_118540 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_118539], null));
          if (v_118540 === 0) {
          } else {
            t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_118539, y], null), false);
          }
          var G__118541 = seq__118531_118535;
          var G__118542 = chunk__118532_118536;
          var G__118543 = count__118533_118537;
          var G__118544 = i__118534_118538 + 1;
          seq__118531_118535 = G__118541;
          chunk__118532_118536 = G__118542;
          count__118533_118537 = G__118543;
          i__118534_118538 = G__118544;
          continue;
        } else {
          var temp__4126__auto___118545 = cljs.core.seq.call(null, seq__118531_118535);
          if (temp__4126__auto___118545) {
            var seq__118531_118546__$1 = temp__4126__auto___118545;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__118531_118546__$1)) {
              var c__4309__auto___118547 = cljs.core.chunk_first.call(null, seq__118531_118546__$1);
              var G__118548 = cljs.core.chunk_rest.call(null, seq__118531_118546__$1);
              var G__118549 = c__4309__auto___118547;
              var G__118550 = cljs.core.count.call(null, c__4309__auto___118547);
              var G__118551 = 0;
              seq__118531_118535 = G__118548;
              chunk__118532_118536 = G__118549;
              count__118533_118537 = G__118550;
              i__118534_118538 = G__118551;
              continue;
            } else {
              var x_118552 = cljs.core.first.call(null, seq__118531_118546__$1);
              var v_118553 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_118552], null));
              if (v_118553 === 0) {
              } else {
                t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_118552, y], null), false);
              }
              var G__118554 = cljs.core.next.call(null, seq__118531_118546__$1);
              var G__118555 = null;
              var G__118556 = 0;
              var G__118557 = 0;
              seq__118531_118535 = G__118554;
              chunk__118532_118536 = G__118555;
              count__118533_118537 = G__118556;
              i__118534_118538 = G__118557;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__118558 = seq__118523;
      var G__118559 = chunk__118528;
      var G__118560 = count__118529;
      var G__118561 = i__118530 + 1;
      seq__118523 = G__118558;
      chunk__118528 = G__118559;
      count__118529 = G__118560;
      i__118530 = G__118561;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__118523);
      if (temp__4126__auto__) {
        var seq__118523__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__118523__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__118523__$1);
          var G__118562 = cljs.core.chunk_rest.call(null, seq__118523__$1);
          var G__118563 = c__4309__auto__;
          var G__118564 = cljs.core.count.call(null, c__4309__auto__);
          var G__118565 = 0;
          seq__118523 = G__118562;
          chunk__118528 = G__118563;
          count__118529 = G__118564;
          i__118530 = G__118565;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__118523__$1);
          var seq__118524_118566 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide00.cols));
          var chunk__118525_118567 = null;
          var count__118526_118568 = 0;
          var i__118527_118569 = 0;
          while (true) {
            if (i__118527_118569 < count__118526_118568) {
              var x_118570 = cljs.core._nth.call(null, chunk__118525_118567, i__118527_118569);
              var v_118571 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_118570], null));
              if (v_118571 === 0) {
              } else {
                t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_118570, y], null), false);
              }
              var G__118572 = seq__118524_118566;
              var G__118573 = chunk__118525_118567;
              var G__118574 = count__118526_118568;
              var G__118575 = i__118527_118569 + 1;
              seq__118524_118566 = G__118572;
              chunk__118525_118567 = G__118573;
              count__118526_118568 = G__118574;
              i__118527_118569 = G__118575;
              continue;
            } else {
              var temp__4126__auto___118576__$1 = cljs.core.seq.call(null, seq__118524_118566);
              if (temp__4126__auto___118576__$1) {
                var seq__118524_118577__$1 = temp__4126__auto___118576__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__118524_118577__$1)) {
                  var c__4309__auto___118578 = cljs.core.chunk_first.call(null, seq__118524_118577__$1);
                  var G__118579 = cljs.core.chunk_rest.call(null, seq__118524_118577__$1);
                  var G__118580 = c__4309__auto___118578;
                  var G__118581 = cljs.core.count.call(null, c__4309__auto___118578);
                  var G__118582 = 0;
                  seq__118524_118566 = G__118579;
                  chunk__118525_118567 = G__118580;
                  count__118526_118568 = G__118581;
                  i__118527_118569 = G__118582;
                  continue;
                } else {
                  var x_118583 = cljs.core.first.call(null, seq__118524_118577__$1);
                  var v_118584 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_118583], null));
                  if (v_118584 === 0) {
                  } else {
                    t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_118583, y], null), false);
                  }
                  var G__118585 = cljs.core.next.call(null, seq__118524_118577__$1);
                  var G__118586 = null;
                  var G__118587 = 0;
                  var G__118588 = 0;
                  seq__118524_118566 = G__118585;
                  chunk__118525_118567 = G__118586;
                  count__118526_118568 = G__118587;
                  i__118527_118569 = G__118588;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__118589 = cljs.core.next.call(null, seq__118523__$1);
          var G__118590 = null;
          var G__118591 = 0;
          var G__118592 = 0;
          seq__118523 = G__118589;
          chunk__118528 = G__118590;
          count__118529 = G__118591;
          i__118530 = G__118592;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide00.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide00.cell_size * t3tr0s_slides.slide00.cols, t3tr0s_slides.slide00.cell_size * t3tr0s_slides.slide00.rows);
  ctx.fillStyle = t3tr0s_slides.slide00.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide00.light_green;
  t3tr0s_slides.slide00.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var fits = t3tr0s_slides.slide00.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = fits ? t3tr0s_slides.slide00.dark_purple : t3tr0s_slides.slide00.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide00.light_purple : t3tr0s_slides.slide00.light_red;
    return t3tr0s_slides.slide00.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
var ufv___118610 = schema.utils.use_fn_validation;
var output_schema118594_118611 = schema.core.Any;
var input_schema118595_118612 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker118596_118613 = schema.core.checker.call(null, input_schema118595_118612);
var output_checker118597_118614 = schema.core.checker.call(null, output_schema118594_118611);
t3tr0s_slides.slide00.canvas = function(ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614) {
  return function canvas(G__118598, G__118599) {
    var validate__5821__auto__ = ufv___118610.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___118615 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__118598, G__118599], null);
      var temp__4126__auto___118616 = input_checker118596_118613.call(null, args__5822__auto___118615);
      if (cljs.core.truth_(temp__4126__auto___118616)) {
        var error__5823__auto___118617 = temp__4126__auto___118616;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___118617)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema118595_118612, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___118615, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___118617], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__118598;
      var owner = G__118599;
      while (true) {
        if (typeof t3tr0s_slides.slide00.t118605 !== "undefined") {
        } else {
          t3tr0s_slides.slide00.t118605 = function(output_schema118594, input_checker118596, owner, G__118598, input_schema118595, validate__5821__auto__, G__118599, canvas, output_checker118597, app, ufv__, meta118606) {
            this.output_schema118594 = output_schema118594;
            this.input_checker118596 = input_checker118596;
            this.owner = owner;
            this.G__118598 = G__118598;
            this.input_schema118595 = input_schema118595;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__118599 = G__118599;
            this.canvas = canvas;
            this.output_checker118597 = output_checker118597;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta118606 = meta118606;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide00.t118605.cljs$lang$type = true;
          t3tr0s_slides.slide00.t118605.cljs$lang$ctorStr = "t3tr0s-slides.slide00/t118605";
          t3tr0s_slides.slide00.t118605.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide00/t118605");
            };
          }(validate__5821__auto__, ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614);
          t3tr0s_slides.slide00.t118605.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide00.t118605.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas"}));
            };
          }(validate__5821__auto__, ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614);
          t3tr0s_slides.slide00.t118605.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide00.t118605.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide00.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614);
          t3tr0s_slides.slide00.t118605.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide00.t118605.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide00.cols * t3tr0s_slides.slide00.cell_size;
              canvas__$2.height = t3tr0s_slides.slide00.rows * t3tr0s_slides.slide00.cell_size;
              return t3tr0s_slides.slide00.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614);
          t3tr0s_slides.slide00.t118605.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614) {
            return function(_118607) {
              var self__ = this;
              var _118607__$1 = this;
              return self__.meta118606;
            };
          }(validate__5821__auto__, ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614);
          t3tr0s_slides.slide00.t118605.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614) {
            return function(_118607, meta118606__$1) {
              var self__ = this;
              var _118607__$1 = this;
              return new t3tr0s_slides.slide00.t118605(self__.output_schema118594, self__.input_checker118596, self__.owner, self__.G__118598, self__.input_schema118595, self__.validate__5821__auto__, self__.G__118599, self__.canvas, self__.output_checker118597, self__.app, self__.ufv__, meta118606__$1);
            };
          }(validate__5821__auto__, ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614);
          t3tr0s_slides.slide00.__GT_t118605 = function(validate__5821__auto__, ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614) {
            return function __GT_t118605(output_schema118594__$1, input_checker118596__$1, owner__$1, G__118598__$1, input_schema118595__$1, validate__5821__auto____$1, G__118599__$1, canvas__$1, output_checker118597__$1, app__$1, ufv____$1, meta118606) {
              return new t3tr0s_slides.slide00.t118605(output_schema118594__$1, input_checker118596__$1, owner__$1, G__118598__$1, input_schema118595__$1, validate__5821__auto____$1, G__118599__$1, canvas__$1, output_checker118597__$1, app__$1, ufv____$1, meta118606);
            };
          }(validate__5821__auto__, ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614);
        }
        return new t3tr0s_slides.slide00.t118605(output_schema118594_118611, input_checker118596_118613, owner, G__118598, input_schema118595_118612, validate__5821__auto__, G__118599, canvas, output_checker118597_118614, app, ufv___118610, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___118618 = output_checker118597_118614.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___118618)) {
        var error__5823__auto___118619 = temp__4126__auto___118618;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___118619)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema118594_118611, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___118619], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___118610, output_schema118594_118611, input_schema118595_118612, input_checker118596_118613, output_checker118597_118614);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide00.canvas), schema.core.make_fn_schema.call(null, output_schema118594_118611, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema118595_118612], null)));
t3tr0s_slides.slide00.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide00.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m118593) {
    return om.core.build.call(null, t3tr0s_slides.slide00.canvas, cursor__9685__auto__, m118593);
  };
  __GT_canvas = function(cursor__9685__auto__, m118593) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m118593);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___118637 = schema.utils.use_fn_validation;
var output_schema118621_118638 = schema.core.Any;
var input_schema118622_118639 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker118623_118640 = schema.core.checker.call(null, input_schema118622_118639);
var output_checker118624_118641 = schema.core.checker.call(null, output_schema118621_118638);
t3tr0s_slides.slide00.slide = function(ufv___118637, output_schema118621_118638, input_schema118622_118639, input_checker118623_118640, output_checker118624_118641) {
  return function slide(G__118625, G__118626) {
    var validate__5821__auto__ = ufv___118637.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___118642 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__118625, G__118626], null);
      var temp__4126__auto___118643 = input_checker118623_118640.call(null, args__5822__auto___118642);
      if (cljs.core.truth_(temp__4126__auto___118643)) {
        var error__5823__auto___118644 = temp__4126__auto___118643;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___118644)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema118622_118639, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___118642, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___118644], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__118625;
      var owner = G__118626;
      while (true) {
        if (typeof t3tr0s_slides.slide00.t118632 !== "undefined") {
        } else {
          t3tr0s_slides.slide00.t118632 = function(output_schema118621, owner, validate__5821__auto__, G__118625, output_checker118624, input_schema118622, G__118626, input_checker118623, slide, app, ufv__, meta118633) {
            this.output_schema118621 = output_schema118621;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__118625 = G__118625;
            this.output_checker118624 = output_checker118624;
            this.input_schema118622 = input_schema118622;
            this.G__118626 = G__118626;
            this.input_checker118623 = input_checker118623;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta118633 = meta118633;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide00.t118632.cljs$lang$type = true;
          t3tr0s_slides.slide00.t118632.cljs$lang$ctorStr = "t3tr0s-slides.slide00/t118632";
          t3tr0s_slides.slide00.t118632.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___118637, output_schema118621_118638, input_schema118622_118639, input_checker118623_118640, output_checker118624_118641) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide00/t118632");
            };
          }(validate__5821__auto__, ufv___118637, output_schema118621_118638, input_schema118622_118639, input_checker118623_118640, output_checker118624_118641);
          t3tr0s_slides.slide00.t118632.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide00.t118632.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___118637, output_schema118621_118638, input_schema118622_118639, input_checker118623_118640, output_checker118624_118641) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "Tetris in ClojureScript"), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide00.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide00.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___118637, output_schema118621_118638, input_schema118622_118639, input_checker118623_118640, output_checker118624_118641);
          t3tr0s_slides.slide00.t118632.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___118637, output_schema118621_118638, input_schema118622_118639, input_checker118623_118640, output_checker118624_118641) {
            return function(_118634) {
              var self__ = this;
              var _118634__$1 = this;
              return self__.meta118633;
            };
          }(validate__5821__auto__, ufv___118637, output_schema118621_118638, input_schema118622_118639, input_checker118623_118640, output_checker118624_118641);
          t3tr0s_slides.slide00.t118632.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___118637, output_schema118621_118638, input_schema118622_118639, input_checker118623_118640, output_checker118624_118641) {
            return function(_118634, meta118633__$1) {
              var self__ = this;
              var _118634__$1 = this;
              return new t3tr0s_slides.slide00.t118632(self__.output_schema118621, self__.owner, self__.validate__5821__auto__, self__.G__118625, self__.output_checker118624, self__.input_schema118622, self__.G__118626, self__.input_checker118623, self__.slide, self__.app, self__.ufv__, meta118633__$1);
            };
          }(validate__5821__auto__, ufv___118637, output_schema118621_118638, input_schema118622_118639, input_checker118623_118640, output_checker118624_118641);
          t3tr0s_slides.slide00.__GT_t118632 = function(validate__5821__auto__, ufv___118637, output_schema118621_118638, input_schema118622_118639, input_checker118623_118640, output_checker118624_118641) {
            return function __GT_t118632(output_schema118621__$1, owner__$1, validate__5821__auto____$1, G__118625__$1, output_checker118624__$1, input_schema118622__$1, G__118626__$1, input_checker118623__$1, slide__$1, app__$1, ufv____$1, meta118633) {
              return new t3tr0s_slides.slide00.t118632(output_schema118621__$1, owner__$1, validate__5821__auto____$1, G__118625__$1, output_checker118624__$1, input_schema118622__$1, G__118626__$1, input_checker118623__$1, slide__$1, app__$1, ufv____$1, meta118633);
            };
          }(validate__5821__auto__, ufv___118637, output_schema118621_118638, input_schema118622_118639, input_checker118623_118640, output_checker118624_118641);
        }
        return new t3tr0s_slides.slide00.t118632(output_schema118621_118638, owner, validate__5821__auto__, G__118625, output_checker118624_118641, input_schema118622_118639, G__118626, input_checker118623_118640, slide, app, ufv___118637, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___118645 = output_checker118624_118641.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___118645)) {
        var error__5823__auto___118646 = temp__4126__auto___118645;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___118646)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema118621_118638, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___118646], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___118637, output_schema118621_118638, input_schema118622_118639, input_checker118623_118640, output_checker118624_118641);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide00.slide), schema.core.make_fn_schema.call(null, output_schema118621_118638, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema118622_118639], null)));
t3tr0s_slides.slide00.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide00.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m118620) {
    return om.core.build.call(null, t3tr0s_slides.slide00.slide, cursor__9685__auto__, m118620);
  };
  __GT_slide = function(cursor__9685__auto__, m118620) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m118620);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide00.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide00.slide, t3tr0s_slides.slide00.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide00.resume = function resume() {
  return null;
};
t3tr0s_slides.slide00.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide05");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide05.dark_green = "#143";
t3tr0s_slides.slide05.light_green = "#175";
t3tr0s_slides.slide05.dark_purple = "#449";
t3tr0s_slides.slide05.light_purple = "#6ad";
t3tr0s_slides.slide05.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide05.rotate_coord = function rotate_coord(p__29542) {
  var vec__29544 = p__29542;
  var x = cljs.core.nth.call(null, vec__29544, 0, null);
  var y = cljs.core.nth.call(null, vec__29544, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide05.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide05.rotate_coord, piece);
};
t3tr0s_slides.slide05.move_left = function move_left(p__29545) {
  var vec__29547 = p__29545;
  var x = cljs.core.nth.call(null, vec__29547, 0, null);
  var y = cljs.core.nth.call(null, vec__29547, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x - 1, y], null);
};
t3tr0s_slides.slide05.move_right = function move_right(p__29548) {
  var vec__29550 = p__29548;
  var x = cljs.core.nth.call(null, vec__29550, 0, null);
  var y = cljs.core.nth.call(null, vec__29550, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + 1, y], null);
};
t3tr0s_slides.slide05.move_down = function move_down(p__29551) {
  var vec__29553 = p__29551;
  var x = cljs.core.nth.call(null, vec__29553, 0, null);
  var y = cljs.core.nth.call(null, vec__29553, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y + 1], null);
};
t3tr0s_slides.slide05.g0 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null), new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "J", "J", 1394734828)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide05.pieces)], null);
t3tr0s_slides.slide05.g1 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g0, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_left);
t3tr0s_slides.slide05.g2 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_left);
t3tr0s_slides.slide05.g3 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g2, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide05.rotate_piece);
t3tr0s_slides.slide05.g4 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g3, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g5 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g4, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g6 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g5, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide05.rotate_piece);
t3tr0s_slides.slide05.g7 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g6, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_right);
t3tr0s_slides.slide05.g8 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g7, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_right);
t3tr0s_slides.slide05.g9 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g8, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide05.rotate_piece);
t3tr0s_slides.slide05.g10 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g9, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g11 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g10, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g12 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g11, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g13 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g12, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g14 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g13, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g15 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g14, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.states = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [t3tr0s_slides.slide05.g0, t3tr0s_slides.slide05.g1, t3tr0s_slides.slide05.g2, t3tr0s_slides.slide05.g3, t3tr0s_slides.slide05.g4, t3tr0s_slides.slide05.g5, t3tr0s_slides.slide05.g6, t3tr0s_slides.slide05.g7, t3tr0s_slides.slide05.g8, t3tr0s_slides.slide05.g9, t3tr0s_slides.slide05.g10, t3tr0s_slides.slide05.g11, t3tr0s_slides.slide05.g12, t3tr0s_slides.slide05.g13, t3tr0s_slides.slide05.g14, 
t3tr0s_slides.slide05.g15], null);
t3tr0s_slides.slide05.state_places = cljs.core.PersistentHashMap.fromArrays([t3tr0s_slides.slide05.g5, t3tr0s_slides.slide05.g6, t3tr0s_slides.slide05.g13, t3tr0s_slides.slide05.g0, t3tr0s_slides.slide05.g4, t3tr0s_slides.slide05.g2, t3tr0s_slides.slide05.g11, t3tr0s_slides.slide05.g14, t3tr0s_slides.slide05.g10, t3tr0s_slides.slide05.g9, t3tr0s_slides.slide05.g3, t3tr0s_slides.slide05.g8, t3tr0s_slides.slide05.g1, t3tr0s_slides.slide05.g15, t3tr0s_slides.slide05.g12, t3tr0s_slides.slide05.g7], [5, 
6, 13, 0, 4, 2, 11, 14, 10, 9, 3, 8, 1, 15, 12, 7]);
t3tr0s_slides.slide05.rotate_coord = function rotate_coord(p__29554) {
  var vec__29556 = p__29554;
  var x = cljs.core.nth.call(null, vec__29556, 0, null);
  var y = cljs.core.nth.call(null, vec__29556, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide05.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide05.rotate_coord, piece);
};
t3tr0s_slides.slide05.piece_abs_coords = function piece_abs_coords(piece, p__29557) {
  var vec__29561 = p__29557;
  var cx = cljs.core.nth.call(null, vec__29561, 0, null);
  var cy = cljs.core.nth.call(null, vec__29561, 1, null);
  return cljs.core.mapv.call(null, function(vec__29561, cx, cy) {
    return function(p__29562) {
      var vec__29563 = p__29562;
      var x = cljs.core.nth.call(null, vec__29563, 0, null);
      var y = cljs.core.nth.call(null, vec__29563, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__29561, cx, cy), piece);
};
t3tr0s_slides.slide05.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "position", "position", -2011731912), null], null));
t3tr0s_slides.slide05.rows = 20;
t3tr0s_slides.slide05.cols = 10;
t3tr0s_slides.slide05.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide05.cols, 0));
t3tr0s_slides.slide05.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide05.rows, t3tr0s_slides.slide05.empty_row));
t3tr0s_slides.slide05.state_code = function state_code(app, state, code_str) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "state" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(code_str), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, state, app) ? "active-col-d9099" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), 
  function() {
    return om.core.update_BANG_.call(null, app, state);
  }], null), code_str], null);
};
var ufv___29577 = schema.utils.use_fn_validation;
var output_schema29565_29578 = schema.core.Any;
var input_schema29566_29579 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29567_29580 = schema.core.checker.call(null, input_schema29566_29579);
var output_checker29568_29581 = schema.core.checker.call(null, output_schema29565_29578);
t3tr0s_slides.slide05.code = function(ufv___29577, output_schema29565_29578, input_schema29566_29579, input_checker29567_29580, output_checker29568_29581) {
  return function code(G__29569, G__29570) {
    var validate__5821__auto__ = ufv___29577.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29582 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29569, G__29570], null);
      var temp__4126__auto___29583 = input_checker29567_29580.call(null, args__5822__auto___29582);
      if (cljs.core.truth_(temp__4126__auto___29583)) {
        var error__5823__auto___29584 = temp__4126__auto___29583;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___29584)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29566_29579, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29582, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29584], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29569;
      var owner = G__29570;
      while (true) {
        if (typeof t3tr0s_slides.slide05.t29574 !== "undefined") {
        } else {
          t3tr0s_slides.slide05.t29574 = function(owner, input_schema29566, validate__5821__auto__, output_schema29565, output_checker29568, G__29570, input_checker29567, app, ufv__, G__29569, code, meta29575) {
            this.owner = owner;
            this.input_schema29566 = input_schema29566;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema29565 = output_schema29565;
            this.output_checker29568 = output_checker29568;
            this.G__29570 = G__29570;
            this.input_checker29567 = input_checker29567;
            this.app = app;
            this.ufv__ = ufv__;
            this.G__29569 = G__29569;
            this.code = code;
            this.meta29575 = meta29575;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide05.t29574.cljs$lang$type = true;
          t3tr0s_slides.slide05.t29574.cljs$lang$ctorStr = "t3tr0s-slides.slide05/t29574";
          t3tr0s_slides.slide05.t29574.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29577, output_schema29565_29578, input_schema29566_29579, input_checker29567_29580, output_checker29568_29581) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide05/t29574");
            };
          }(validate__5821__auto__, ufv___29577, output_schema29565_29578, input_schema29566_29579, input_checker29567_29580, output_checker29568_29581);
          t3tr0s_slides.slide05.t29574.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide05.t29574.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29577, output_schema29565_29578, input_schema29566_29579, input_checker29567_29580, output_checker29568_29581) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " move-left  [pos] [ (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "dec")), " x)      y  ])\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " move-right [pos] [ (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "inc")), " x)      y  ])\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " move-down  [pos] [      x  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "inc")), " y) ])\n", "\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g0, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " pieces)})\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":J")), "] :piece ("), t3tr0s_slides.syntax_highlight.lit.call(null, "6")), " "), t3tr0s_slides.syntax_highlight.lit.call(null, "4")), " ["), t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":position")), " g0  {"), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g1, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-left))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":position")), " g0  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g1  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g2, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
              "] move-left))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g1  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g2  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g3, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core.List.EMPTY, "]    rotate-piece))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " g2  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g3  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g4, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g3  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g4  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g5, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g4  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g5  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g6, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]    rotate-piece))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " g5  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g6  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, 
              self__.app, t3tr0s_slides.slide05.g7, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-right))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g6  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g7  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g8, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-right))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g7  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g8  ("), t3tr0s_slides.syntax_highlight.core.call(null, 
              "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g9, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]    rotate-piece))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " g8  ["), t3tr0s_slides.syntax_highlight.core.call(null, 
              "update-in")), " g9  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g10, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":position")), " g9  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g10 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g11, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
              "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g10 ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g11 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g12, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g11 ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g12 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g13, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g12 ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g13 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g14, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g13 ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g14 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, 
              self__.app, t3tr0s_slides.slide05.g15, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g14 ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g15 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))))));
            };
          }(validate__5821__auto__, ufv___29577, output_schema29565_29578, input_schema29566_29579, input_checker29567_29580, output_checker29568_29581);
          t3tr0s_slides.slide05.t29574.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29577, output_schema29565_29578, input_schema29566_29579, input_checker29567_29580, output_checker29568_29581) {
            return function(_29576) {
              var self__ = this;
              var _29576__$1 = this;
              return self__.meta29575;
            };
          }(validate__5821__auto__, ufv___29577, output_schema29565_29578, input_schema29566_29579, input_checker29567_29580, output_checker29568_29581);
          t3tr0s_slides.slide05.t29574.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29577, output_schema29565_29578, input_schema29566_29579, input_checker29567_29580, output_checker29568_29581) {
            return function(_29576, meta29575__$1) {
              var self__ = this;
              var _29576__$1 = this;
              return new t3tr0s_slides.slide05.t29574(self__.owner, self__.input_schema29566, self__.validate__5821__auto__, self__.output_schema29565, self__.output_checker29568, self__.G__29570, self__.input_checker29567, self__.app, self__.ufv__, self__.G__29569, self__.code, meta29575__$1);
            };
          }(validate__5821__auto__, ufv___29577, output_schema29565_29578, input_schema29566_29579, input_checker29567_29580, output_checker29568_29581);
          t3tr0s_slides.slide05.__GT_t29574 = function(validate__5821__auto__, ufv___29577, output_schema29565_29578, input_schema29566_29579, input_checker29567_29580, output_checker29568_29581) {
            return function __GT_t29574(owner__$1, input_schema29566__$1, validate__5821__auto____$1, output_schema29565__$1, output_checker29568__$1, G__29570__$1, input_checker29567__$1, app__$1, ufv____$1, G__29569__$1, code__$1, meta29575) {
              return new t3tr0s_slides.slide05.t29574(owner__$1, input_schema29566__$1, validate__5821__auto____$1, output_schema29565__$1, output_checker29568__$1, G__29570__$1, input_checker29567__$1, app__$1, ufv____$1, G__29569__$1, code__$1, meta29575);
            };
          }(validate__5821__auto__, ufv___29577, output_schema29565_29578, input_schema29566_29579, input_checker29567_29580, output_checker29568_29581);
        }
        return new t3tr0s_slides.slide05.t29574(owner, input_schema29566_29579, validate__5821__auto__, output_schema29565_29578, output_checker29568_29581, G__29570, input_checker29567_29580, app, ufv___29577, G__29569, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29585 = output_checker29568_29581.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29585)) {
        var error__5823__auto___29586 = temp__4126__auto___29585;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___29586)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29565_29578, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29586], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29577, output_schema29565_29578, input_schema29566_29579, input_checker29567_29580, output_checker29568_29581);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide05.code), schema.core.make_fn_schema.call(null, output_schema29565_29578, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29566_29579], null)));
t3tr0s_slides.slide05.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide05.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m29564) {
    return om.core.build.call(null, t3tr0s_slides.slide05.code, cursor__9685__auto__, m29564);
  };
  __GT_code = function(cursor__9685__auto__, m29564) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m29564);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide05.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide05.rows);
t3tr0s_slides.slide05.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__29587, is_center) {
  var vec__29589 = p__29587;
  var x = cljs.core.nth.call(null, vec__29589, 0, null);
  var y = cljs.core.nth.call(null, vec__29589, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide05.cell_size * x;
  var ry = t3tr0s_slides.slide05.cell_size * y;
  var rs = t3tr0s_slides.slide05.cell_size;
  var cx = t3tr0s_slides.slide05.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide05.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide05.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide05.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__29596 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide05.piece_abs_coords.call(null, piece, pos)));
  var chunk__29597 = null;
  var count__29598 = 0;
  var i__29599 = 0;
  while (true) {
    if (i__29599 < count__29598) {
      var vec__29600 = cljs.core._nth.call(null, chunk__29597, i__29599);
      var i = cljs.core.nth.call(null, vec__29600, 0, null);
      var c = cljs.core.nth.call(null, vec__29600, 1, null);
      t3tr0s_slides.slide05.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__29602 = seq__29596;
      var G__29603 = chunk__29597;
      var G__29604 = count__29598;
      var G__29605 = i__29599 + 1;
      seq__29596 = G__29602;
      chunk__29597 = G__29603;
      count__29598 = G__29604;
      i__29599 = G__29605;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__29596);
      if (temp__4126__auto__) {
        var seq__29596__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__29596__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__29596__$1);
          var G__29606 = cljs.core.chunk_rest.call(null, seq__29596__$1);
          var G__29607 = c__4309__auto__;
          var G__29608 = cljs.core.count.call(null, c__4309__auto__);
          var G__29609 = 0;
          seq__29596 = G__29606;
          chunk__29597 = G__29607;
          count__29598 = G__29608;
          i__29599 = G__29609;
          continue;
        } else {
          var vec__29601 = cljs.core.first.call(null, seq__29596__$1);
          var i = cljs.core.nth.call(null, vec__29601, 0, null);
          var c = cljs.core.nth.call(null, vec__29601, 1, null);
          t3tr0s_slides.slide05.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__29610 = cljs.core.next.call(null, seq__29596__$1);
          var G__29611 = null;
          var G__29612 = 0;
          var G__29613 = 0;
          seq__29596 = G__29610;
          chunk__29597 = G__29611;
          count__29598 = G__29612;
          i__29599 = G__29613;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide05.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide05.cell_size * t3tr0s_slides.slide05.cols, t3tr0s_slides.slide05.cell_size * t3tr0s_slides.slide05.rows);
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    var places_29630 = t3tr0s_slides.slide05.state_places.call(null, app);
    ctx.fillStyle = "#555";
    ctx.strokeStyle = "#AAA";
    var seq__29622_29631 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, cljs.core.take.call(null, places_29630, t3tr0s_slides.slide05.states)));
    var chunk__29623_29632 = null;
    var count__29624_29633 = 0;
    var i__29625_29634 = 0;
    while (true) {
      if (i__29625_29634 < count__29624_29633) {
        var vec__29626_29635 = cljs.core._nth.call(null, chunk__29623_29632, i__29625_29634);
        var i_29636 = cljs.core.nth.call(null, vec__29626_29635, 0, null);
        var map__29627_29637 = cljs.core.nth.call(null, vec__29626_29635, 1, null);
        var map__29627_29638__$1 = cljs.core.seq_QMARK_.call(null, map__29627_29637) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29627_29637) : map__29627_29637;
        var position_29639 = cljs.core.get.call(null, map__29627_29638__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
        var piece_29640__$1 = cljs.core.get.call(null, map__29627_29638__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
        var x_29641 = 7;
        ctx.globalAlpha = function() {
          var x__3860__auto__ = 0;
          var y__3861__auto__ = function() {
            var x__3867__auto__ = x_29641;
            var y__3868__auto__ = i_29636 - (places_29630 - x_29641);
            return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
          }();
          return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
        }() / x_29641 / 5;
        t3tr0s_slides.slide05.draw_piece_BANG_.call(null, ctx, piece_29640__$1, position_29639);
        var G__29642 = seq__29622_29631;
        var G__29643 = chunk__29623_29632;
        var G__29644 = count__29624_29633;
        var G__29645 = i__29625_29634 + 1;
        seq__29622_29631 = G__29642;
        chunk__29623_29632 = G__29643;
        count__29624_29633 = G__29644;
        i__29625_29634 = G__29645;
        continue;
      } else {
        var temp__4126__auto___29646 = cljs.core.seq.call(null, seq__29622_29631);
        if (temp__4126__auto___29646) {
          var seq__29622_29647__$1 = temp__4126__auto___29646;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__29622_29647__$1)) {
            var c__4309__auto___29648 = cljs.core.chunk_first.call(null, seq__29622_29647__$1);
            var G__29649 = cljs.core.chunk_rest.call(null, seq__29622_29647__$1);
            var G__29650 = c__4309__auto___29648;
            var G__29651 = cljs.core.count.call(null, c__4309__auto___29648);
            var G__29652 = 0;
            seq__29622_29631 = G__29649;
            chunk__29623_29632 = G__29650;
            count__29624_29633 = G__29651;
            i__29625_29634 = G__29652;
            continue;
          } else {
            var vec__29628_29653 = cljs.core.first.call(null, seq__29622_29647__$1);
            var i_29654 = cljs.core.nth.call(null, vec__29628_29653, 0, null);
            var map__29629_29655 = cljs.core.nth.call(null, vec__29628_29653, 1, null);
            var map__29629_29656__$1 = cljs.core.seq_QMARK_.call(null, map__29629_29655) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29629_29655) : map__29629_29655;
            var position_29657 = cljs.core.get.call(null, map__29629_29656__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
            var piece_29658__$1 = cljs.core.get.call(null, map__29629_29656__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
            var x_29659 = 7;
            ctx.globalAlpha = function() {
              var x__3860__auto__ = 0;
              var y__3861__auto__ = function() {
                var x__3867__auto__ = x_29659;
                var y__3868__auto__ = i_29654 - (places_29630 - x_29659);
                return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
              }();
              return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
            }() / x_29659 / 5;
            t3tr0s_slides.slide05.draw_piece_BANG_.call(null, ctx, piece_29658__$1, position_29657);
            var G__29660 = cljs.core.next.call(null, seq__29622_29647__$1);
            var G__29661 = null;
            var G__29662 = 0;
            var G__29663 = 0;
            seq__29622_29631 = G__29660;
            chunk__29623_29632 = G__29661;
            count__29624_29633 = G__29662;
            i__29625_29634 = G__29663;
            continue;
          }
        } else {
        }
      }
      break;
    }
    ctx.globalAlpha = 1;
    ctx.fillStyle = t3tr0s_slides.slide05.dark_purple;
    ctx.strokeStyle = t3tr0s_slides.slide05.light_purple;
    return t3tr0s_slides.slide05.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
var ufv___29681 = schema.utils.use_fn_validation;
var output_schema29665_29682 = schema.core.Any;
var input_schema29666_29683 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29667_29684 = schema.core.checker.call(null, input_schema29666_29683);
var output_checker29668_29685 = schema.core.checker.call(null, output_schema29665_29682);
t3tr0s_slides.slide05.canvas = function(ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685) {
  return function canvas(G__29669, G__29670) {
    var validate__5821__auto__ = ufv___29681.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29686 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29669, G__29670], null);
      var temp__4126__auto___29687 = input_checker29667_29684.call(null, args__5822__auto___29686);
      if (cljs.core.truth_(temp__4126__auto___29687)) {
        var error__5823__auto___29688 = temp__4126__auto___29687;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___29688)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29666_29683, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29686, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29688], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29669;
      var owner = G__29670;
      while (true) {
        if (typeof t3tr0s_slides.slide05.t29676 !== "undefined") {
        } else {
          t3tr0s_slides.slide05.t29676 = function(owner, input_checker29667, validate__5821__auto__, G__29670, G__29669, input_schema29666, canvas, output_schema29665, output_checker29668, app, ufv__, meta29677) {
            this.owner = owner;
            this.input_checker29667 = input_checker29667;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__29670 = G__29670;
            this.G__29669 = G__29669;
            this.input_schema29666 = input_schema29666;
            this.canvas = canvas;
            this.output_schema29665 = output_schema29665;
            this.output_checker29668 = output_checker29668;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta29677 = meta29677;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide05.t29676.cljs$lang$type = true;
          t3tr0s_slides.slide05.t29676.cljs$lang$ctorStr = "t3tr0s-slides.slide05/t29676";
          t3tr0s_slides.slide05.t29676.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide05/t29676");
            };
          }(validate__5821__auto__, ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685);
          t3tr0s_slides.slide05.t29676.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide05.t29676.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685);
          t3tr0s_slides.slide05.t29676.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide05.t29676.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide05.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685);
          t3tr0s_slides.slide05.t29676.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide05.t29676.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide05.cols * t3tr0s_slides.slide05.cell_size;
              canvas__$2.height = t3tr0s_slides.slide05.rows * t3tr0s_slides.slide05.cell_size;
              return t3tr0s_slides.slide05.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685);
          t3tr0s_slides.slide05.t29676.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685) {
            return function(_29678) {
              var self__ = this;
              var _29678__$1 = this;
              return self__.meta29677;
            };
          }(validate__5821__auto__, ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685);
          t3tr0s_slides.slide05.t29676.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685) {
            return function(_29678, meta29677__$1) {
              var self__ = this;
              var _29678__$1 = this;
              return new t3tr0s_slides.slide05.t29676(self__.owner, self__.input_checker29667, self__.validate__5821__auto__, self__.G__29670, self__.G__29669, self__.input_schema29666, self__.canvas, self__.output_schema29665, self__.output_checker29668, self__.app, self__.ufv__, meta29677__$1);
            };
          }(validate__5821__auto__, ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685);
          t3tr0s_slides.slide05.__GT_t29676 = function(validate__5821__auto__, ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685) {
            return function __GT_t29676(owner__$1, input_checker29667__$1, validate__5821__auto____$1, G__29670__$1, G__29669__$1, input_schema29666__$1, canvas__$1, output_schema29665__$1, output_checker29668__$1, app__$1, ufv____$1, meta29677) {
              return new t3tr0s_slides.slide05.t29676(owner__$1, input_checker29667__$1, validate__5821__auto____$1, G__29670__$1, G__29669__$1, input_schema29666__$1, canvas__$1, output_schema29665__$1, output_checker29668__$1, app__$1, ufv____$1, meta29677);
            };
          }(validate__5821__auto__, ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685);
        }
        return new t3tr0s_slides.slide05.t29676(owner, input_checker29667_29684, validate__5821__auto__, G__29670, G__29669, input_schema29666_29683, canvas, output_schema29665_29682, output_checker29668_29685, app, ufv___29681, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29689 = output_checker29668_29685.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29689)) {
        var error__5823__auto___29690 = temp__4126__auto___29689;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___29690)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29665_29682, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29690], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29681, output_schema29665_29682, input_schema29666_29683, input_checker29667_29684, output_checker29668_29685);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide05.canvas), schema.core.make_fn_schema.call(null, output_schema29665_29682, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29666_29683], null)));
t3tr0s_slides.slide05.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide05.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m29664) {
    return om.core.build.call(null, t3tr0s_slides.slide05.canvas, cursor__9685__auto__, m29664);
  };
  __GT_canvas = function(cursor__9685__auto__, m29664) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m29664);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___29708 = schema.utils.use_fn_validation;
var output_schema29692_29709 = schema.core.Any;
var input_schema29693_29710 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29694_29711 = schema.core.checker.call(null, input_schema29693_29710);
var output_checker29695_29712 = schema.core.checker.call(null, output_schema29692_29709);
t3tr0s_slides.slide05.slide = function(ufv___29708, output_schema29692_29709, input_schema29693_29710, input_checker29694_29711, output_checker29695_29712) {
  return function slide(G__29696, G__29697) {
    var validate__5821__auto__ = ufv___29708.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29713 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29696, G__29697], null);
      var temp__4126__auto___29714 = input_checker29694_29711.call(null, args__5822__auto___29713);
      if (cljs.core.truth_(temp__4126__auto___29714)) {
        var error__5823__auto___29715 = temp__4126__auto___29714;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___29715)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29693_29710, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29713, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29715], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29696;
      var owner = G__29697;
      while (true) {
        if (typeof t3tr0s_slides.slide05.t29703 !== "undefined") {
        } else {
          t3tr0s_slides.slide05.t29703 = function(G__29697, output_checker29695, owner, input_schema29693, input_checker29694, validate__5821__auto__, G__29696, output_schema29692, slide, app, ufv__, meta29704) {
            this.G__29697 = G__29697;
            this.output_checker29695 = output_checker29695;
            this.owner = owner;
            this.input_schema29693 = input_schema29693;
            this.input_checker29694 = input_checker29694;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__29696 = G__29696;
            this.output_schema29692 = output_schema29692;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta29704 = meta29704;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide05.t29703.cljs$lang$type = true;
          t3tr0s_slides.slide05.t29703.cljs$lang$ctorStr = "t3tr0s-slides.slide05/t29703";
          t3tr0s_slides.slide05.t29703.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29708, output_schema29692_29709, input_schema29693_29710, input_checker29694_29711, output_checker29695_29712) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide05/t29703");
            };
          }(validate__5821__auto__, ufv___29708, output_schema29692_29709, input_schema29693_29710, input_checker29694_29711, output_checker29695_29712);
          t3tr0s_slides.slide05.t29703.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide05.t29703.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29708, output_schema29692_29709, input_schema29693_29710, input_checker29694_29711, output_checker29695_29712) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "5. Test state progression."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide05.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide05.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___29708, output_schema29692_29709, input_schema29693_29710, input_checker29694_29711, output_checker29695_29712);
          t3tr0s_slides.slide05.t29703.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29708, output_schema29692_29709, input_schema29693_29710, input_checker29694_29711, output_checker29695_29712) {
            return function(_29705) {
              var self__ = this;
              var _29705__$1 = this;
              return self__.meta29704;
            };
          }(validate__5821__auto__, ufv___29708, output_schema29692_29709, input_schema29693_29710, input_checker29694_29711, output_checker29695_29712);
          t3tr0s_slides.slide05.t29703.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29708, output_schema29692_29709, input_schema29693_29710, input_checker29694_29711, output_checker29695_29712) {
            return function(_29705, meta29704__$1) {
              var self__ = this;
              var _29705__$1 = this;
              return new t3tr0s_slides.slide05.t29703(self__.G__29697, self__.output_checker29695, self__.owner, self__.input_schema29693, self__.input_checker29694, self__.validate__5821__auto__, self__.G__29696, self__.output_schema29692, self__.slide, self__.app, self__.ufv__, meta29704__$1);
            };
          }(validate__5821__auto__, ufv___29708, output_schema29692_29709, input_schema29693_29710, input_checker29694_29711, output_checker29695_29712);
          t3tr0s_slides.slide05.__GT_t29703 = function(validate__5821__auto__, ufv___29708, output_schema29692_29709, input_schema29693_29710, input_checker29694_29711, output_checker29695_29712) {
            return function __GT_t29703(G__29697__$1, output_checker29695__$1, owner__$1, input_schema29693__$1, input_checker29694__$1, validate__5821__auto____$1, G__29696__$1, output_schema29692__$1, slide__$1, app__$1, ufv____$1, meta29704) {
              return new t3tr0s_slides.slide05.t29703(G__29697__$1, output_checker29695__$1, owner__$1, input_schema29693__$1, input_checker29694__$1, validate__5821__auto____$1, G__29696__$1, output_schema29692__$1, slide__$1, app__$1, ufv____$1, meta29704);
            };
          }(validate__5821__auto__, ufv___29708, output_schema29692_29709, input_schema29693_29710, input_checker29694_29711, output_checker29695_29712);
        }
        return new t3tr0s_slides.slide05.t29703(G__29697, output_checker29695_29712, owner, input_schema29693_29710, input_checker29694_29711, validate__5821__auto__, G__29696, output_schema29692_29709, slide, app, ufv___29708, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29716 = output_checker29695_29712.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29716)) {
        var error__5823__auto___29717 = temp__4126__auto___29716;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___29717)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29692_29709, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29717], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29708, output_schema29692_29709, input_schema29693_29710, input_checker29694_29711, output_checker29695_29712);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide05.slide), schema.core.make_fn_schema.call(null, output_schema29692_29709, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29693_29710], null)));
t3tr0s_slides.slide05.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide05.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m29691) {
    return om.core.build.call(null, t3tr0s_slides.slide05.slide, cursor__9685__auto__, m29691);
  };
  __GT_slide = function(cursor__9685__auto__, m29691) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m29691);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide05.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide05.slide, t3tr0s_slides.slide05.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide05.resume = function resume() {
  return null;
};
t3tr0s_slides.slide05.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide02");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide02.dark_green = "#143";
t3tr0s_slides.slide02.light_green = "#175";
t3tr0s_slides.slide02.dark_purple = "#449";
t3tr0s_slides.slide02.light_purple = "#6ad";
t3tr0s_slides.slide02.piece_keys = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.Keyword(null, "Z", "Z", 459124588)], null);
t3tr0s_slides.slide02.positions = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 1], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 4], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[4, 7], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 10], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 13], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 16], null), new cljs.core.Keyword(null, "Z", "Z", 
459124588), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 19], null)], null);
t3tr0s_slides.slide02.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide02.piece_abs_coords = function piece_abs_coords(piece) {
  var vec__25803 = t3tr0s_slides.slide02.positions.call(null, piece);
  var cx = cljs.core.nth.call(null, vec__25803, 0, null);
  var cy = cljs.core.nth.call(null, vec__25803, 1, null);
  return cljs.core.mapv.call(null, function(vec__25803, cx, cy) {
    return function(p__25804) {
      var vec__25805 = p__25804;
      var x = cljs.core.nth.call(null, vec__25805, 0, null);
      var y = cljs.core.nth.call(null, vec__25805, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__25803, cx, cy), t3tr0s_slides.slide02.pieces.call(null, piece));
};
t3tr0s_slides.slide02.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "index", "index", -1531685915), null], null));
t3tr0s_slides.slide02.rows = 20;
t3tr0s_slides.slide02.cols = 10;
t3tr0s_slides.slide02.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide02.cols, 0));
t3tr0s_slides.slide02.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide02.rows, t3tr0s_slides.slide02.empty_row));
t3tr0s_slides.slide02.data_row = function data_row(piece, app) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "piece" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(piece), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app)) ? 
  "active-row-534ed" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), piece);
  }], null), "[", function() {
    var iter__4278__auto__ = function iter__25820(s__25821) {
      return new cljs.core.LazySeq(null, function() {
        var s__25821__$1 = s__25821;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__25821__$1);
          if (temp__4126__auto__) {
            var s__25821__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__25821__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__25821__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__25823 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__25822 = 0;
                while (true) {
                  if (i__25822 < size__4277__auto__) {
                    var vec__25828 = cljs.core._nth.call(null, c__4276__auto__, i__25822);
                    var index = cljs.core.nth.call(null, vec__25828, 0, null);
                    var vec__25829 = cljs.core.nth.call(null, vec__25828, 1, null);
                    var x = cljs.core.nth.call(null, vec__25829, 0, null);
                    var y = cljs.core.nth.call(null, vec__25829, 1, null);
                    cljs.core.chunk_append.call(null, b__25823, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "piece" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(piece) + "index" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, 
                    piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app)) && cljs.core._EQ_.call(null, index, (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : null, new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(i__25822, vec__25828, index, vec__25829, x, y, c__4276__auto__, size__4277__auto__, b__25823, s__25821__$2, temp__4126__auto__) {
                      return function() {
                        return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
                      };
                    }(i__25822, vec__25828, index, vec__25829, x, y, c__4276__auto__, size__4277__auto__, b__25823, s__25821__$2, temp__4126__auto__)], null), function() {
                      var pad = function(i__25822, vec__25828, index, vec__25829, x, y, c__4276__auto__, size__4277__auto__, b__25823, s__25821__$2, temp__4126__auto__) {
                        return function(p1__25806_SHARP_) {
                          if (p1__25806_SHARP_ < 0) {
                            return p1__25806_SHARP_;
                          } else {
                            return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__25806_SHARP_);
                          }
                        };
                      }(i__25822, vec__25828, index, vec__25829, x, y, c__4276__auto__, size__4277__auto__, b__25823, s__25821__$2, temp__4126__auto__);
                      var fmt = function(i__25822, pad, vec__25828, index, vec__25829, x, y, c__4276__auto__, size__4277__auto__, b__25823, s__25821__$2, temp__4126__auto__) {
                        return function(p1__25807_SHARP_) {
                          return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__25807_SHARP_));
                        };
                      }(i__25822, pad, vec__25828, index, vec__25829, x, y, c__4276__auto__, size__4277__auto__, b__25823, s__25821__$2, temp__4126__auto__);
                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), " [");
                    }()], null));
                    var G__25832 = i__25822 + 1;
                    i__25822 = G__25832;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25823), iter__25820.call(null, cljs.core.chunk_rest.call(null, s__25821__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25823), null);
              }
            } else {
              var vec__25830 = cljs.core.first.call(null, s__25821__$2);
              var index = cljs.core.nth.call(null, vec__25830, 0, null);
              var vec__25831 = cljs.core.nth.call(null, vec__25830, 1, null);
              var x = cljs.core.nth.call(null, vec__25831, 0, null);
              var y = cljs.core.nth.call(null, vec__25831, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "piece" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(piece) + "index" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, piece, 
              (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app)) && cljs.core._EQ_.call(null, index, (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : null, new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(vec__25830, index, vec__25831, x, y, s__25821__$2, temp__4126__auto__) {
                return function() {
                  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
                };
              }(vec__25830, index, vec__25831, x, y, s__25821__$2, temp__4126__auto__)], null), function() {
                var pad = function(vec__25830, index, vec__25831, x, y, s__25821__$2, temp__4126__auto__) {
                  return function(p1__25806_SHARP_) {
                    if (p1__25806_SHARP_ < 0) {
                      return p1__25806_SHARP_;
                    } else {
                      return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__25806_SHARP_);
                    }
                  };
                }(vec__25830, index, vec__25831, x, y, s__25821__$2, temp__4126__auto__);
                var fmt = function(pad, vec__25830, index, vec__25831, x, y, s__25821__$2, temp__4126__auto__) {
                  return function(p1__25807_SHARP_) {
                    return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__25807_SHARP_));
                  };
                }(pad, vec__25830, index, vec__25831, x, y, s__25821__$2, temp__4126__auto__);
                return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), " [");
              }()], null), iter__25820.call(null, cljs.core.rest.call(null, s__25821__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide02.pieces.call(null, piece)));
  }(), " ]"], null);
};
var ufv___25878 = schema.utils.use_fn_validation;
var output_schema25834_25879 = schema.core.Any;
var input_schema25835_25880 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker25836_25881 = schema.core.checker.call(null, input_schema25835_25880);
var output_checker25837_25882 = schema.core.checker.call(null, output_schema25834_25879);
t3tr0s_slides.slide02.code = function(ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882) {
  return function code(G__25838, G__25839) {
    var validate__5821__auto__ = ufv___25878.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___25883 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__25838, G__25839], null);
      var temp__4126__auto___25884 = input_checker25836_25881.call(null, args__5822__auto___25883);
      if (cljs.core.truth_(temp__4126__auto___25884)) {
        var error__5823__auto___25885 = temp__4126__auto___25884;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___25885)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema25835_25880, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___25883, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___25885], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__25838;
      var owner = G__25839;
      while (true) {
        if (typeof t3tr0s_slides.slide02.t25859 !== "undefined") {
        } else {
          t3tr0s_slides.slide02.t25859 = function(output_schema25834, owner, input_schema25835, output_checker25837, validate__5821__auto__, G__25839, input_checker25836, G__25838, app, ufv__, code, meta25860) {
            this.output_schema25834 = output_schema25834;
            this.owner = owner;
            this.input_schema25835 = input_schema25835;
            this.output_checker25837 = output_checker25837;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__25839 = G__25839;
            this.input_checker25836 = input_checker25836;
            this.G__25838 = G__25838;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta25860 = meta25860;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide02.t25859.cljs$lang$type = true;
          t3tr0s_slides.slide02.t25859.cljs$lang$ctorStr = "t3tr0s-slides.slide02/t25859";
          t3tr0s_slides.slide02.t25859.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide02/t25859");
            };
          }(validate__5821__auto__, ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882);
          t3tr0s_slides.slide02.t25859.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide02.t25859.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " pieces\n", sablono.interpreter.interpret.call(null, function() {
                var ps = t3tr0s_slides.slide02.piece_keys;
                var first_p = cljs.core.first.call(null, ps);
                var last_p = cljs.core.last.call(null, ps);
                var iter__4278__auto__ = function(ps, first_p, last_p, ___$1, validate__5821__auto__, ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882) {
                  return function iter__25862(s__25863) {
                    return new cljs.core.LazySeq(null, function(ps, first_p, last_p, ___$1, validate__5821__auto__, ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882) {
                      return function() {
                        var s__25863__$1 = s__25863;
                        while (true) {
                          var temp__4126__auto__ = cljs.core.seq.call(null, s__25863__$1);
                          if (temp__4126__auto__) {
                            var s__25863__$2 = temp__4126__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__25863__$2)) {
                              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__25863__$2);
                              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                              var b__25865 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                              if (function() {
                                var i__25864 = 0;
                                while (true) {
                                  if (i__25864 < size__4277__auto__) {
                                    var p = cljs.core._nth.call(null, c__4276__auto__, i__25864);
                                    cljs.core.chunk_append.call(null, b__25865, function() {
                                      var pred__25872 = cljs.core._EQ_;
                                      var expr__25873 = p;
                                      if (cljs.core.truth_(pred__25872.call(null, first_p, expr__25873))) {
                                        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "  {");
                                      } else {
                                        if (cljs.core.truth_(pred__25872.call(null, last_p, expr__25873))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "})\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                        } else {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                        }
                                      }
                                    }());
                                    var G__25886 = i__25864 + 1;
                                    i__25864 = G__25886;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25865), iter__25862.call(null, cljs.core.chunk_rest.call(null, s__25863__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25865), null);
                              }
                            } else {
                              var p = cljs.core.first.call(null, s__25863__$2);
                              return cljs.core.cons.call(null, function() {
                                var pred__25875 = cljs.core._EQ_;
                                var expr__25876 = p;
                                if (cljs.core.truth_(pred__25875.call(null, first_p, expr__25876))) {
                                  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "  {");
                                } else {
                                  if (cljs.core.truth_(pred__25875.call(null, last_p, expr__25876))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "})\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                  } else {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                  }
                                }
                              }(), iter__25862.call(null, cljs.core.rest.call(null, s__25863__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(ps, first_p, last_p, ___$1, validate__5821__auto__, ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882), null, null);
                  };
                }(ps, first_p, last_p, ___$1, validate__5821__auto__, ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882);
                return iter__4278__auto__.call(null, ps);
              }()), "\n\n", sablono.interpreter.interpret.call(null, function() {
                var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(self__.app);
                if (cljs.core.truth_(temp__4126__auto__)) {
                  var p = temp__4126__auto__;
                  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
                    var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(self__.app);
                    if (cljs.core.truth_(temp__4126__auto____$1)) {
                      var i = temp__4126__auto____$1;
                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.syntax_highlight.cmt.call(null, "; coord \x3d ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, t3tr0s_slides.slide02.pieces.call(null, p), i))));
                    } else {
                      return null;
                    }
                  }()), "\n"), t3tr0s_slides.syntax_highlight.cmt.call(null, "; piece \x3d ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p)));
                } else {
                  return null;
                }
              }()))));
            };
          }(validate__5821__auto__, ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882);
          t3tr0s_slides.slide02.t25859.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882) {
            return function(_25861) {
              var self__ = this;
              var _25861__$1 = this;
              return self__.meta25860;
            };
          }(validate__5821__auto__, ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882);
          t3tr0s_slides.slide02.t25859.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882) {
            return function(_25861, meta25860__$1) {
              var self__ = this;
              var _25861__$1 = this;
              return new t3tr0s_slides.slide02.t25859(self__.output_schema25834, self__.owner, self__.input_schema25835, self__.output_checker25837, self__.validate__5821__auto__, self__.G__25839, self__.input_checker25836, self__.G__25838, self__.app, self__.ufv__, self__.code, meta25860__$1);
            };
          }(validate__5821__auto__, ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882);
          t3tr0s_slides.slide02.__GT_t25859 = function(validate__5821__auto__, ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882) {
            return function __GT_t25859(output_schema25834__$1, owner__$1, input_schema25835__$1, output_checker25837__$1, validate__5821__auto____$1, G__25839__$1, input_checker25836__$1, G__25838__$1, app__$1, ufv____$1, code__$1, meta25860) {
              return new t3tr0s_slides.slide02.t25859(output_schema25834__$1, owner__$1, input_schema25835__$1, output_checker25837__$1, validate__5821__auto____$1, G__25839__$1, input_checker25836__$1, G__25838__$1, app__$1, ufv____$1, code__$1, meta25860);
            };
          }(validate__5821__auto__, ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882);
        }
        return new t3tr0s_slides.slide02.t25859(output_schema25834_25879, owner, input_schema25835_25880, output_checker25837_25882, validate__5821__auto__, G__25839, input_checker25836_25881, G__25838, app, ufv___25878, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___25887 = output_checker25837_25882.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___25887)) {
        var error__5823__auto___25888 = temp__4126__auto___25887;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___25888)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema25834_25879, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___25888], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___25878, output_schema25834_25879, input_schema25835_25880, input_checker25836_25881, output_checker25837_25882);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide02.code), schema.core.make_fn_schema.call(null, output_schema25834_25879, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema25835_25880], null)));
t3tr0s_slides.slide02.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide02.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m25833) {
    return om.core.build.call(null, t3tr0s_slides.slide02.code, cursor__9685__auto__, m25833);
  };
  __GT_code = function(cursor__9685__auto__, m25833) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m25833);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide02.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide02.rows);
t3tr0s_slides.slide02.piece_index = function piece_index(x, y) {
  return cljs.core.some.call(null, cljs.core.identity, cljs.core.map.call(null, function(p1__25889_SHARP_) {
    return cljs.core.first.call(null, cljs.core.keep_indexed.call(null, function(i, p__25892) {
      var vec__25893 = p__25892;
      var px = cljs.core.nth.call(null, vec__25893, 0, null);
      var py = cljs.core.nth.call(null, vec__25893, 1, null);
      if (cljs.core._EQ_.call(null, px, x) && cljs.core._EQ_.call(null, py, y)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__25889_SHARP_, i], null);
      } else {
        return null;
      }
    }, t3tr0s_slides.slide02.piece_abs_coords.call(null, p1__25889_SHARP_)));
  }, cljs.core.keys.call(null, t3tr0s_slides.slide02.pieces)));
};
t3tr0s_slides.slide02.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide02.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide02.cell_size);
  var vec__25895 = t3tr0s_slides.slide02.piece_index.call(null, col, row);
  var piece = cljs.core.nth.call(null, vec__25895, 0, null);
  var index = cljs.core.nth.call(null, vec__25895, 1, null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return index;
    } else {
      return and__3541__auto__;
    }
  }())) {
    om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), piece);
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
  } else {
    return null;
  }
};
t3tr0s_slides.slide02.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__25896, is_piece, is_index, is_center) {
  var vec__25898 = p__25896;
  var x = cljs.core.nth.call(null, vec__25898, 0, null);
  var y = cljs.core.nth.call(null, vec__25898, 1, null);
  ctx.fillStyle = cljs.core.truth_(is_index) ? t3tr0s_slides.slide02.dark_purple : cljs.core.truth_(is_piece) ? t3tr0s_slides.slide02.dark_green : "transparent";
  ctx.strokeStyle = cljs.core.truth_(is_index) ? t3tr0s_slides.slide02.light_purple : cljs.core.truth_(is_piece) ? t3tr0s_slides.slide02.light_green : "#888";
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide02.cell_size * x;
  var ry = t3tr0s_slides.slide02.cell_size * y;
  var rs = t3tr0s_slides.slide02.cell_size;
  var cx = t3tr0s_slides.slide02.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide02.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide02.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide02.draw_piece_BANG_ = function draw_piece_BANG_(app, ctx, piece) {
  var is_piece = cljs.core._EQ_.call(null, piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app));
  var index = function() {
    var and__3541__auto__ = is_piece;
    if (and__3541__auto__) {
      return(new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app);
    } else {
      return and__3541__auto__;
    }
  }();
  var center = t3tr0s_slides.slide02.positions.call(null, piece);
  var seq__25911_25923 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide02.piece_abs_coords.call(null, piece)));
  var chunk__25912_25924 = null;
  var count__25913_25925 = 0;
  var i__25914_25926 = 0;
  while (true) {
    if (i__25914_25926 < count__25913_25925) {
      var vec__25915_25927 = cljs.core._nth.call(null, chunk__25912_25924, i__25914_25926);
      var i_25928 = cljs.core.nth.call(null, vec__25915_25927, 0, null);
      var c_25929 = cljs.core.nth.call(null, vec__25915_25927, 1, null);
      if (cljs.core._EQ_.call(null, i_25928, index)) {
      } else {
        t3tr0s_slides.slide02.draw_cell_BANG_.call(null, ctx, c_25929, is_piece, cljs.core._EQ_.call(null, i_25928, index), cljs.core._EQ_.call(null, c_25929, center));
      }
      var G__25930 = seq__25911_25923;
      var G__25931 = chunk__25912_25924;
      var G__25932 = count__25913_25925;
      var G__25933 = i__25914_25926 + 1;
      seq__25911_25923 = G__25930;
      chunk__25912_25924 = G__25931;
      count__25913_25925 = G__25932;
      i__25914_25926 = G__25933;
      continue;
    } else {
      var temp__4126__auto___25934 = cljs.core.seq.call(null, seq__25911_25923);
      if (temp__4126__auto___25934) {
        var seq__25911_25935__$1 = temp__4126__auto___25934;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__25911_25935__$1)) {
          var c__4309__auto___25936 = cljs.core.chunk_first.call(null, seq__25911_25935__$1);
          var G__25937 = cljs.core.chunk_rest.call(null, seq__25911_25935__$1);
          var G__25938 = c__4309__auto___25936;
          var G__25939 = cljs.core.count.call(null, c__4309__auto___25936);
          var G__25940 = 0;
          seq__25911_25923 = G__25937;
          chunk__25912_25924 = G__25938;
          count__25913_25925 = G__25939;
          i__25914_25926 = G__25940;
          continue;
        } else {
          var vec__25916_25941 = cljs.core.first.call(null, seq__25911_25935__$1);
          var i_25942 = cljs.core.nth.call(null, vec__25916_25941, 0, null);
          var c_25943 = cljs.core.nth.call(null, vec__25916_25941, 1, null);
          if (cljs.core._EQ_.call(null, i_25942, index)) {
          } else {
            t3tr0s_slides.slide02.draw_cell_BANG_.call(null, ctx, c_25943, is_piece, cljs.core._EQ_.call(null, i_25942, index), cljs.core._EQ_.call(null, c_25943, center));
          }
          var G__25944 = cljs.core.next.call(null, seq__25911_25935__$1);
          var G__25945 = null;
          var G__25946 = 0;
          var G__25947 = 0;
          seq__25911_25923 = G__25944;
          chunk__25912_25924 = G__25945;
          count__25913_25925 = G__25946;
          i__25914_25926 = G__25947;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__25917 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide02.piece_abs_coords.call(null, piece)));
  var chunk__25918 = null;
  var count__25919 = 0;
  var i__25920 = 0;
  while (true) {
    if (i__25920 < count__25919) {
      var vec__25921 = cljs.core._nth.call(null, chunk__25918, i__25920);
      var i = cljs.core.nth.call(null, vec__25921, 0, null);
      var c = cljs.core.nth.call(null, vec__25921, 1, null);
      if (cljs.core._EQ_.call(null, i, index)) {
        t3tr0s_slides.slide02.draw_cell_BANG_.call(null, ctx, c, is_piece, cljs.core._EQ_.call(null, i, index), cljs.core._EQ_.call(null, c, center));
      } else {
      }
      var G__25948 = seq__25917;
      var G__25949 = chunk__25918;
      var G__25950 = count__25919;
      var G__25951 = i__25920 + 1;
      seq__25917 = G__25948;
      chunk__25918 = G__25949;
      count__25919 = G__25950;
      i__25920 = G__25951;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__25917);
      if (temp__4126__auto__) {
        var seq__25917__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__25917__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__25917__$1);
          var G__25952 = cljs.core.chunk_rest.call(null, seq__25917__$1);
          var G__25953 = c__4309__auto__;
          var G__25954 = cljs.core.count.call(null, c__4309__auto__);
          var G__25955 = 0;
          seq__25917 = G__25952;
          chunk__25918 = G__25953;
          count__25919 = G__25954;
          i__25920 = G__25955;
          continue;
        } else {
          var vec__25922 = cljs.core.first.call(null, seq__25917__$1);
          var i = cljs.core.nth.call(null, vec__25922, 0, null);
          var c = cljs.core.nth.call(null, vec__25922, 1, null);
          if (cljs.core._EQ_.call(null, i, index)) {
            t3tr0s_slides.slide02.draw_cell_BANG_.call(null, ctx, c, is_piece, cljs.core._EQ_.call(null, i, index), cljs.core._EQ_.call(null, c, center));
          } else {
          }
          var G__25956 = cljs.core.next.call(null, seq__25917__$1);
          var G__25957 = null;
          var G__25958 = 0;
          var G__25959 = 0;
          seq__25917 = G__25956;
          chunk__25918 = G__25957;
          count__25919 = G__25958;
          i__25920 = G__25959;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide02.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide02.cell_size * t3tr0s_slides.slide02.cols, t3tr0s_slides.slide02.cell_size * t3tr0s_slides.slide02.rows);
  var seq__25964 = cljs.core.seq.call(null, t3tr0s_slides.slide02.piece_keys);
  var chunk__25965 = null;
  var count__25966 = 0;
  var i__25967 = 0;
  while (true) {
    if (i__25967 < count__25966) {
      var p = cljs.core._nth.call(null, chunk__25965, i__25967);
      t3tr0s_slides.slide02.draw_piece_BANG_.call(null, app, ctx, p);
      var G__25968 = seq__25964;
      var G__25969 = chunk__25965;
      var G__25970 = count__25966;
      var G__25971 = i__25967 + 1;
      seq__25964 = G__25968;
      chunk__25965 = G__25969;
      count__25966 = G__25970;
      i__25967 = G__25971;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__25964);
      if (temp__4126__auto__) {
        var seq__25964__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__25964__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__25964__$1);
          var G__25972 = cljs.core.chunk_rest.call(null, seq__25964__$1);
          var G__25973 = c__4309__auto__;
          var G__25974 = cljs.core.count.call(null, c__4309__auto__);
          var G__25975 = 0;
          seq__25964 = G__25972;
          chunk__25965 = G__25973;
          count__25966 = G__25974;
          i__25967 = G__25975;
          continue;
        } else {
          var p = cljs.core.first.call(null, seq__25964__$1);
          t3tr0s_slides.slide02.draw_piece_BANG_.call(null, app, ctx, p);
          var G__25976 = cljs.core.next.call(null, seq__25964__$1);
          var G__25977 = null;
          var G__25978 = 0;
          var G__25979 = 0;
          seq__25964 = G__25976;
          chunk__25965 = G__25977;
          count__25966 = G__25978;
          i__25967 = G__25979;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
var ufv___25994 = schema.utils.use_fn_validation;
var output_schema25982_25995 = schema.core.Any;
var input_schema25983_25996 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker25984_25997 = schema.core.checker.call(null, input_schema25983_25996);
var output_checker25985_25998 = schema.core.checker.call(null, output_schema25982_25995);
t3tr0s_slides.slide02.canvas = function(ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998) {
  return function canvas(G__25986, G__25987) {
    var validate__5821__auto__ = ufv___25994.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___25999 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__25986, G__25987], null);
      var temp__4126__auto___26000 = input_checker25984_25997.call(null, args__5822__auto___25999);
      if (cljs.core.truth_(temp__4126__auto___26000)) {
        var error__5823__auto___26001 = temp__4126__auto___26000;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___26001)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema25983_25996, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___25999, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___26001], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__25986;
      var owner = G__25987;
      while (true) {
        if (typeof t3tr0s_slides.slide02.t25991 !== "undefined") {
        } else {
          t3tr0s_slides.slide02.t25991 = function(input_checker25984, owner, G__25987, G__25986, output_checker25985, validate__5821__auto__, output_schema25982, canvas, input_schema25983, app, ufv__, meta25992) {
            this.input_checker25984 = input_checker25984;
            this.owner = owner;
            this.G__25987 = G__25987;
            this.G__25986 = G__25986;
            this.output_checker25985 = output_checker25985;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema25982 = output_schema25982;
            this.canvas = canvas;
            this.input_schema25983 = input_schema25983;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta25992 = meta25992;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide02.t25991.cljs$lang$type = true;
          t3tr0s_slides.slide02.t25991.cljs$lang$ctorStr = "t3tr0s-slides.slide02/t25991";
          t3tr0s_slides.slide02.t25991.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide02/t25991");
            };
          }(validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998);
          t3tr0s_slides.slide02.t25991.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide02.t25991.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseMove":function(___$1, validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998) {
                return function(p1__25980_SHARP_) {
                  return t3tr0s_slides.slide02.canvas_mouse.call(null, self__.app, self__.owner, p1__25980_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998)}));
            };
          }(validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998);
          t3tr0s_slides.slide02.t25991.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide02.t25991.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide02.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998);
          t3tr0s_slides.slide02.t25991.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide02.t25991.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide02.cols * t3tr0s_slides.slide02.cell_size;
              canvas__$2.height = t3tr0s_slides.slide02.rows * t3tr0s_slides.slide02.cell_size;
              return t3tr0s_slides.slide02.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998);
          t3tr0s_slides.slide02.t25991.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998) {
            return function(_25993) {
              var self__ = this;
              var _25993__$1 = this;
              return self__.meta25992;
            };
          }(validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998);
          t3tr0s_slides.slide02.t25991.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998) {
            return function(_25993, meta25992__$1) {
              var self__ = this;
              var _25993__$1 = this;
              return new t3tr0s_slides.slide02.t25991(self__.input_checker25984, self__.owner, self__.G__25987, self__.G__25986, self__.output_checker25985, self__.validate__5821__auto__, self__.output_schema25982, self__.canvas, self__.input_schema25983, self__.app, self__.ufv__, meta25992__$1);
            };
          }(validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998);
          t3tr0s_slides.slide02.__GT_t25991 = function(validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998) {
            return function __GT_t25991(input_checker25984__$1, owner__$1, G__25987__$1, G__25986__$1, output_checker25985__$1, validate__5821__auto____$1, output_schema25982__$1, canvas__$1, input_schema25983__$1, app__$1, ufv____$1, meta25992) {
              return new t3tr0s_slides.slide02.t25991(input_checker25984__$1, owner__$1, G__25987__$1, G__25986__$1, output_checker25985__$1, validate__5821__auto____$1, output_schema25982__$1, canvas__$1, input_schema25983__$1, app__$1, ufv____$1, meta25992);
            };
          }(validate__5821__auto__, ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998);
        }
        return new t3tr0s_slides.slide02.t25991(input_checker25984_25997, owner, G__25987, G__25986, output_checker25985_25998, validate__5821__auto__, output_schema25982_25995, canvas, input_schema25983_25996, app, ufv___25994, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___26002 = output_checker25985_25998.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___26002)) {
        var error__5823__auto___26003 = temp__4126__auto___26002;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___26003)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema25982_25995, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___26003], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___25994, output_schema25982_25995, input_schema25983_25996, input_checker25984_25997, output_checker25985_25998);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide02.canvas), schema.core.make_fn_schema.call(null, output_schema25982_25995, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema25983_25996], null)));
t3tr0s_slides.slide02.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide02.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m25981) {
    return om.core.build.call(null, t3tr0s_slides.slide02.canvas, cursor__9685__auto__, m25981);
  };
  __GT_canvas = function(cursor__9685__auto__, m25981) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m25981);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___26021 = schema.utils.use_fn_validation;
var output_schema26005_26022 = schema.core.Any;
var input_schema26006_26023 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker26007_26024 = schema.core.checker.call(null, input_schema26006_26023);
var output_checker26008_26025 = schema.core.checker.call(null, output_schema26005_26022);
t3tr0s_slides.slide02.slide = function(ufv___26021, output_schema26005_26022, input_schema26006_26023, input_checker26007_26024, output_checker26008_26025) {
  return function slide(G__26009, G__26010) {
    var validate__5821__auto__ = ufv___26021.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___26026 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26009, G__26010], null);
      var temp__4126__auto___26027 = input_checker26007_26024.call(null, args__5822__auto___26026);
      if (cljs.core.truth_(temp__4126__auto___26027)) {
        var error__5823__auto___26028 = temp__4126__auto___26027;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___26028)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema26006_26023, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___26026, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___26028], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__26009;
      var owner = G__26010;
      while (true) {
        if (typeof t3tr0s_slides.slide02.t26016 !== "undefined") {
        } else {
          t3tr0s_slides.slide02.t26016 = function(owner, G__26009, output_checker26008, validate__5821__auto__, input_checker26007, G__26010, output_schema26005, slide, app, input_schema26006, ufv__, meta26017) {
            this.owner = owner;
            this.G__26009 = G__26009;
            this.output_checker26008 = output_checker26008;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker26007 = input_checker26007;
            this.G__26010 = G__26010;
            this.output_schema26005 = output_schema26005;
            this.slide = slide;
            this.app = app;
            this.input_schema26006 = input_schema26006;
            this.ufv__ = ufv__;
            this.meta26017 = meta26017;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide02.t26016.cljs$lang$type = true;
          t3tr0s_slides.slide02.t26016.cljs$lang$ctorStr = "t3tr0s-slides.slide02/t26016";
          t3tr0s_slides.slide02.t26016.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___26021, output_schema26005_26022, input_schema26006_26023, input_checker26007_26024, output_checker26008_26025) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide02/t26016");
            };
          }(validate__5821__auto__, ufv___26021, output_schema26005_26022, input_schema26006_26023, input_checker26007_26024, output_checker26008_26025);
          t3tr0s_slides.slide02.t26016.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide02.t26016.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___26021, output_schema26005_26022, input_schema26006_26023, input_checker26007_26024, output_checker26008_26025) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "2. Create the pieces."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide02.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide02.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___26021, output_schema26005_26022, input_schema26006_26023, input_checker26007_26024, output_checker26008_26025);
          t3tr0s_slides.slide02.t26016.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___26021, output_schema26005_26022, input_schema26006_26023, input_checker26007_26024, output_checker26008_26025) {
            return function(_26018) {
              var self__ = this;
              var _26018__$1 = this;
              return self__.meta26017;
            };
          }(validate__5821__auto__, ufv___26021, output_schema26005_26022, input_schema26006_26023, input_checker26007_26024, output_checker26008_26025);
          t3tr0s_slides.slide02.t26016.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___26021, output_schema26005_26022, input_schema26006_26023, input_checker26007_26024, output_checker26008_26025) {
            return function(_26018, meta26017__$1) {
              var self__ = this;
              var _26018__$1 = this;
              return new t3tr0s_slides.slide02.t26016(self__.owner, self__.G__26009, self__.output_checker26008, self__.validate__5821__auto__, self__.input_checker26007, self__.G__26010, self__.output_schema26005, self__.slide, self__.app, self__.input_schema26006, self__.ufv__, meta26017__$1);
            };
          }(validate__5821__auto__, ufv___26021, output_schema26005_26022, input_schema26006_26023, input_checker26007_26024, output_checker26008_26025);
          t3tr0s_slides.slide02.__GT_t26016 = function(validate__5821__auto__, ufv___26021, output_schema26005_26022, input_schema26006_26023, input_checker26007_26024, output_checker26008_26025) {
            return function __GT_t26016(owner__$1, G__26009__$1, output_checker26008__$1, validate__5821__auto____$1, input_checker26007__$1, G__26010__$1, output_schema26005__$1, slide__$1, app__$1, input_schema26006__$1, ufv____$1, meta26017) {
              return new t3tr0s_slides.slide02.t26016(owner__$1, G__26009__$1, output_checker26008__$1, validate__5821__auto____$1, input_checker26007__$1, G__26010__$1, output_schema26005__$1, slide__$1, app__$1, input_schema26006__$1, ufv____$1, meta26017);
            };
          }(validate__5821__auto__, ufv___26021, output_schema26005_26022, input_schema26006_26023, input_checker26007_26024, output_checker26008_26025);
        }
        return new t3tr0s_slides.slide02.t26016(owner, G__26009, output_checker26008_26025, validate__5821__auto__, input_checker26007_26024, G__26010, output_schema26005_26022, slide, app, input_schema26006_26023, ufv___26021, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___26029 = output_checker26008_26025.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___26029)) {
        var error__5823__auto___26030 = temp__4126__auto___26029;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___26030)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema26005_26022, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___26030], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___26021, output_schema26005_26022, input_schema26006_26023, input_checker26007_26024, output_checker26008_26025);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide02.slide), schema.core.make_fn_schema.call(null, output_schema26005_26022, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26006_26023], null)));
t3tr0s_slides.slide02.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide02.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m26004) {
    return om.core.build.call(null, t3tr0s_slides.slide02.slide, cursor__9685__auto__, m26004);
  };
  __GT_slide = function(cursor__9685__auto__, m26004) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m26004);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide02.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide02.slide, t3tr0s_slides.slide02.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide02.resume = function resume() {
  return null;
};
t3tr0s_slides.slide02.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide06");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide06.dark_green = "#143";
t3tr0s_slides.slide06.light_green = "#175";
t3tr0s_slides.slide06.dark_purple = "#449";
t3tr0s_slides.slide06.light_purple = "#6ad";
t3tr0s_slides.slide06.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide06.rotate_coord = function rotate_coord(p__27048) {
  var vec__27050 = p__27048;
  var x = cljs.core.nth.call(null, vec__27050, 0, null);
  var y = cljs.core.nth.call(null, vec__27050, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide06.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide06.rotate_coord, piece);
};
t3tr0s_slides.slide06.move_left = function move_left(p__27051) {
  var vec__27053 = p__27051;
  var x = cljs.core.nth.call(null, vec__27053, 0, null);
  var y = cljs.core.nth.call(null, vec__27053, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x - 1, y], null);
};
t3tr0s_slides.slide06.move_right = function move_right(p__27054) {
  var vec__27056 = p__27054;
  var x = cljs.core.nth.call(null, vec__27056, 0, null);
  var y = cljs.core.nth.call(null, vec__27056, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + 1, y], null);
};
t3tr0s_slides.slide06.move_down = function move_down(p__27057) {
  var vec__27059 = p__27057;
  var x = cljs.core.nth.call(null, vec__27059, 0, null);
  var y = cljs.core.nth.call(null, vec__27059, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y + 1], null);
};
t3tr0s_slides.slide06.g0 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null), new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "J", "J", 1394734828)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide06.pieces)], null);
t3tr0s_slides.slide06.g1 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g0, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_left);
t3tr0s_slides.slide06.g2 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_left);
t3tr0s_slides.slide06.g3 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g2, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide06.rotate_piece);
t3tr0s_slides.slide06.g4 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g3, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g5 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g4, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g6 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g5, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide06.rotate_piece);
t3tr0s_slides.slide06.g7 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g6, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_right);
t3tr0s_slides.slide06.g8 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g7, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_right);
t3tr0s_slides.slide06.g9 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g8, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide06.rotate_piece);
t3tr0s_slides.slide06.g10 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g9, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g11 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g10, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g12 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g11, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g13 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g12, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g14 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g13, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g15 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g14, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.states = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [t3tr0s_slides.slide06.g0, t3tr0s_slides.slide06.g1, t3tr0s_slides.slide06.g2, t3tr0s_slides.slide06.g3, t3tr0s_slides.slide06.g4, t3tr0s_slides.slide06.g5, t3tr0s_slides.slide06.g6, t3tr0s_slides.slide06.g7, t3tr0s_slides.slide06.g8, t3tr0s_slides.slide06.g9, t3tr0s_slides.slide06.g10, t3tr0s_slides.slide06.g11, t3tr0s_slides.slide06.g12, t3tr0s_slides.slide06.g13, t3tr0s_slides.slide06.g14, 
t3tr0s_slides.slide06.g15], null);
t3tr0s_slides.slide06.state_places = cljs.core.PersistentHashMap.fromArrays([t3tr0s_slides.slide06.g5, t3tr0s_slides.slide06.g6, t3tr0s_slides.slide06.g13, t3tr0s_slides.slide06.g0, t3tr0s_slides.slide06.g4, t3tr0s_slides.slide06.g2, t3tr0s_slides.slide06.g11, t3tr0s_slides.slide06.g14, t3tr0s_slides.slide06.g10, t3tr0s_slides.slide06.g9, t3tr0s_slides.slide06.g3, t3tr0s_slides.slide06.g8, t3tr0s_slides.slide06.g1, t3tr0s_slides.slide06.g15, t3tr0s_slides.slide06.g12, t3tr0s_slides.slide06.g7], [5, 
6, 13, 0, 4, 2, 11, 14, 10, 9, 3, 8, 1, 15, 12, 7]);
t3tr0s_slides.slide06.rotate_coord = function rotate_coord(p__27060) {
  var vec__27062 = p__27060;
  var x = cljs.core.nth.call(null, vec__27062, 0, null);
  var y = cljs.core.nth.call(null, vec__27062, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide06.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide06.rotate_coord, piece);
};
t3tr0s_slides.slide06.piece_abs_coords = function piece_abs_coords(piece, p__27063) {
  var vec__27067 = p__27063;
  var cx = cljs.core.nth.call(null, vec__27067, 0, null);
  var cy = cljs.core.nth.call(null, vec__27067, 1, null);
  return cljs.core.mapv.call(null, function(vec__27067, cx, cy) {
    return function(p__27068) {
      var vec__27069 = p__27068;
      var x = cljs.core.nth.call(null, vec__27069, 0, null);
      var y = cljs.core.nth.call(null, vec__27069, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__27067, cx, cy), piece);
};
t3tr0s_slides.slide06.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "position", "position", -2011731912), null], null));
t3tr0s_slides.slide06.rows = 20;
t3tr0s_slides.slide06.cols = 10;
t3tr0s_slides.slide06.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide06.cols, 0));
t3tr0s_slides.slide06.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide06.rows, t3tr0s_slides.slide06.empty_row));
t3tr0s_slides.slide06.state_code = function state_code(app, rkey, state, code_str) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), rkey, new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, state, app) ? "active-col-d9099" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, state);
  }], null), code_str], null);
};
var ufv___27083 = schema.utils.use_fn_validation;
var output_schema27071_27084 = schema.core.Any;
var input_schema27072_27085 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker27073_27086 = schema.core.checker.call(null, input_schema27072_27085);
var output_checker27074_27087 = schema.core.checker.call(null, output_schema27071_27084);
t3tr0s_slides.slide06.code = function(ufv___27083, output_schema27071_27084, input_schema27072_27085, input_checker27073_27086, output_checker27074_27087) {
  return function code(G__27075, G__27076) {
    var validate__5821__auto__ = ufv___27083.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___27088 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__27075, G__27076], null);
      var temp__4126__auto___27089 = input_checker27073_27086.call(null, args__5822__auto___27088);
      if (cljs.core.truth_(temp__4126__auto___27089)) {
        var error__5823__auto___27090 = temp__4126__auto___27089;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___27090)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema27072_27085, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___27088, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___27090], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__27075;
      var owner = G__27076;
      while (true) {
        if (typeof t3tr0s_slides.slide06.t27080 !== "undefined") {
        } else {
          t3tr0s_slides.slide06.t27080 = function(owner, input_schema27072, G__27075, input_checker27073, validate__5821__auto__, output_checker27074, G__27076, app, ufv__, code, output_schema27071, meta27081) {
            this.owner = owner;
            this.input_schema27072 = input_schema27072;
            this.G__27075 = G__27075;
            this.input_checker27073 = input_checker27073;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker27074 = output_checker27074;
            this.G__27076 = G__27076;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.output_schema27071 = output_schema27071;
            this.meta27081 = meta27081;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide06.t27080.cljs$lang$type = true;
          t3tr0s_slides.slide06.t27080.cljs$lang$ctorStr = "t3tr0s-slides.slide06/t27080";
          t3tr0s_slides.slide06.t27080.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___27083, output_schema27071_27084, input_schema27072_27085, input_checker27073_27086, output_checker27074_27087) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide06/t27080");
            };
          }(validate__5821__auto__, ufv___27083, output_schema27071_27084, input_schema27072_27085, input_checker27073_27086, output_checker27074_27087);
          t3tr0s_slides.slide06.t27080.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide06.t27080.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___27083, output_schema27071_27084, input_schema27072_27085, input_checker27073_27086, output_checker27074_27087) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code({"id":"lang-clj", "ref":"code"}, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " game-state\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "atom")), " {", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " empty-board]\n", "         ", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":J")), " pieces)\n", "         ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " [", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "4")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "6")), "]}))\n", 
              "\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g1", t3tr0s_slides.slide06.g1, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-left)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), 
              " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g2", t3tr0s_slides.slide06.g2, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-left)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g3", t3tr0s_slides.slide06.g3, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
              "]    rotate-piece)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g4", t3tr0s_slides.slide06.g4, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g5", t3tr0s_slides.slide06.g5, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g6", 
              t3tr0s_slides.slide06.g6, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]    rotate-piece)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.slide06.state_code.call(null, self__.app, "g7", t3tr0s_slides.slide06.g7, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-right)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, 
              "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g8", t3tr0s_slides.slide06.g8, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-right)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, 
              "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g9", t3tr0s_slides.slide06.g9, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]    rotate-piece)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":piece")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g10", t3tr0s_slides.slide06.g10, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
              "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g11", t3tr0s_slides.slide06.g11, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g12", t3tr0s_slides.slide06.g12, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g13", 
              t3tr0s_slides.slide06.g13, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.slide06.state_code.call(null, self__.app, "g14", t3tr0s_slides.slide06.g14, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, 
              "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g15", t3tr0s_slides.slide06.g15, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, 
              "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))))));
            };
          }(validate__5821__auto__, ufv___27083, output_schema27071_27084, input_schema27072_27085, input_checker27073_27086, output_checker27074_27087);
          t3tr0s_slides.slide06.t27080.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___27083, output_schema27071_27084, input_schema27072_27085, input_checker27073_27086, output_checker27074_27087) {
            return function(_27082) {
              var self__ = this;
              var _27082__$1 = this;
              return self__.meta27081;
            };
          }(validate__5821__auto__, ufv___27083, output_schema27071_27084, input_schema27072_27085, input_checker27073_27086, output_checker27074_27087);
          t3tr0s_slides.slide06.t27080.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___27083, output_schema27071_27084, input_schema27072_27085, input_checker27073_27086, output_checker27074_27087) {
            return function(_27082, meta27081__$1) {
              var self__ = this;
              var _27082__$1 = this;
              return new t3tr0s_slides.slide06.t27080(self__.owner, self__.input_schema27072, self__.G__27075, self__.input_checker27073, self__.validate__5821__auto__, self__.output_checker27074, self__.G__27076, self__.app, self__.ufv__, self__.code, self__.output_schema27071, meta27081__$1);
            };
          }(validate__5821__auto__, ufv___27083, output_schema27071_27084, input_schema27072_27085, input_checker27073_27086, output_checker27074_27087);
          t3tr0s_slides.slide06.__GT_t27080 = function(validate__5821__auto__, ufv___27083, output_schema27071_27084, input_schema27072_27085, input_checker27073_27086, output_checker27074_27087) {
            return function __GT_t27080(owner__$1, input_schema27072__$1, G__27075__$1, input_checker27073__$1, validate__5821__auto____$1, output_checker27074__$1, G__27076__$1, app__$1, ufv____$1, code__$1, output_schema27071__$1, meta27081) {
              return new t3tr0s_slides.slide06.t27080(owner__$1, input_schema27072__$1, G__27075__$1, input_checker27073__$1, validate__5821__auto____$1, output_checker27074__$1, G__27076__$1, app__$1, ufv____$1, code__$1, output_schema27071__$1, meta27081);
            };
          }(validate__5821__auto__, ufv___27083, output_schema27071_27084, input_schema27072_27085, input_checker27073_27086, output_checker27074_27087);
        }
        return new t3tr0s_slides.slide06.t27080(owner, input_schema27072_27085, G__27075, input_checker27073_27086, validate__5821__auto__, output_checker27074_27087, G__27076, app, ufv___27083, code, output_schema27071_27084, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___27091 = output_checker27074_27087.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___27091)) {
        var error__5823__auto___27092 = temp__4126__auto___27091;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___27092)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema27071_27084, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___27092], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___27083, output_schema27071_27084, input_schema27072_27085, input_checker27073_27086, output_checker27074_27087);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide06.code), schema.core.make_fn_schema.call(null, output_schema27071_27084, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema27072_27085], null)));
t3tr0s_slides.slide06.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide06.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m27070) {
    return om.core.build.call(null, t3tr0s_slides.slide06.code, cursor__9685__auto__, m27070);
  };
  __GT_code = function(cursor__9685__auto__, m27070) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m27070);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide06.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide06.rows);
t3tr0s_slides.slide06.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__27093, is_center) {
  var vec__27095 = p__27093;
  var x = cljs.core.nth.call(null, vec__27095, 0, null);
  var y = cljs.core.nth.call(null, vec__27095, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide06.cell_size * x;
  var ry = t3tr0s_slides.slide06.cell_size * y;
  var rs = t3tr0s_slides.slide06.cell_size;
  var cx = t3tr0s_slides.slide06.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide06.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide06.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide06.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__27102 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide06.piece_abs_coords.call(null, piece, pos)));
  var chunk__27103 = null;
  var count__27104 = 0;
  var i__27105 = 0;
  while (true) {
    if (i__27105 < count__27104) {
      var vec__27106 = cljs.core._nth.call(null, chunk__27103, i__27105);
      var i = cljs.core.nth.call(null, vec__27106, 0, null);
      var c = cljs.core.nth.call(null, vec__27106, 1, null);
      t3tr0s_slides.slide06.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__27108 = seq__27102;
      var G__27109 = chunk__27103;
      var G__27110 = count__27104;
      var G__27111 = i__27105 + 1;
      seq__27102 = G__27108;
      chunk__27103 = G__27109;
      count__27104 = G__27110;
      i__27105 = G__27111;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__27102);
      if (temp__4126__auto__) {
        var seq__27102__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27102__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__27102__$1);
          var G__27112 = cljs.core.chunk_rest.call(null, seq__27102__$1);
          var G__27113 = c__4309__auto__;
          var G__27114 = cljs.core.count.call(null, c__4309__auto__);
          var G__27115 = 0;
          seq__27102 = G__27112;
          chunk__27103 = G__27113;
          count__27104 = G__27114;
          i__27105 = G__27115;
          continue;
        } else {
          var vec__27107 = cljs.core.first.call(null, seq__27102__$1);
          var i = cljs.core.nth.call(null, vec__27107, 0, null);
          var c = cljs.core.nth.call(null, vec__27107, 1, null);
          t3tr0s_slides.slide06.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__27116 = cljs.core.next.call(null, seq__27102__$1);
          var G__27117 = null;
          var G__27118 = 0;
          var G__27119 = 0;
          seq__27102 = G__27116;
          chunk__27103 = G__27117;
          count__27104 = G__27118;
          i__27105 = G__27119;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide06.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide06.cell_size * t3tr0s_slides.slide06.cols, t3tr0s_slides.slide06.cell_size * t3tr0s_slides.slide06.rows);
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    var places_27136 = t3tr0s_slides.slide06.state_places.call(null, app);
    ctx.fillStyle = "#555";
    ctx.strokeStyle = "#AAA";
    var seq__27128_27137 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, cljs.core.take.call(null, places_27136, t3tr0s_slides.slide06.states)));
    var chunk__27129_27138 = null;
    var count__27130_27139 = 0;
    var i__27131_27140 = 0;
    while (true) {
      if (i__27131_27140 < count__27130_27139) {
        var vec__27132_27141 = cljs.core._nth.call(null, chunk__27129_27138, i__27131_27140);
        var i_27142 = cljs.core.nth.call(null, vec__27132_27141, 0, null);
        var map__27133_27143 = cljs.core.nth.call(null, vec__27132_27141, 1, null);
        var map__27133_27144__$1 = cljs.core.seq_QMARK_.call(null, map__27133_27143) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27133_27143) : map__27133_27143;
        var position_27145 = cljs.core.get.call(null, map__27133_27144__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
        var piece_27146__$1 = cljs.core.get.call(null, map__27133_27144__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
        var x_27147 = 7;
        ctx.globalAlpha = function() {
          var x__3860__auto__ = 0;
          var y__3861__auto__ = function() {
            var x__3867__auto__ = x_27147;
            var y__3868__auto__ = i_27142 - (places_27136 - x_27147);
            return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
          }();
          return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
        }() / x_27147 / 5;
        t3tr0s_slides.slide06.draw_piece_BANG_.call(null, ctx, piece_27146__$1, position_27145);
        var G__27148 = seq__27128_27137;
        var G__27149 = chunk__27129_27138;
        var G__27150 = count__27130_27139;
        var G__27151 = i__27131_27140 + 1;
        seq__27128_27137 = G__27148;
        chunk__27129_27138 = G__27149;
        count__27130_27139 = G__27150;
        i__27131_27140 = G__27151;
        continue;
      } else {
        var temp__4126__auto___27152 = cljs.core.seq.call(null, seq__27128_27137);
        if (temp__4126__auto___27152) {
          var seq__27128_27153__$1 = temp__4126__auto___27152;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27128_27153__$1)) {
            var c__4309__auto___27154 = cljs.core.chunk_first.call(null, seq__27128_27153__$1);
            var G__27155 = cljs.core.chunk_rest.call(null, seq__27128_27153__$1);
            var G__27156 = c__4309__auto___27154;
            var G__27157 = cljs.core.count.call(null, c__4309__auto___27154);
            var G__27158 = 0;
            seq__27128_27137 = G__27155;
            chunk__27129_27138 = G__27156;
            count__27130_27139 = G__27157;
            i__27131_27140 = G__27158;
            continue;
          } else {
            var vec__27134_27159 = cljs.core.first.call(null, seq__27128_27153__$1);
            var i_27160 = cljs.core.nth.call(null, vec__27134_27159, 0, null);
            var map__27135_27161 = cljs.core.nth.call(null, vec__27134_27159, 1, null);
            var map__27135_27162__$1 = cljs.core.seq_QMARK_.call(null, map__27135_27161) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27135_27161) : map__27135_27161;
            var position_27163 = cljs.core.get.call(null, map__27135_27162__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
            var piece_27164__$1 = cljs.core.get.call(null, map__27135_27162__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
            var x_27165 = 7;
            ctx.globalAlpha = function() {
              var x__3860__auto__ = 0;
              var y__3861__auto__ = function() {
                var x__3867__auto__ = x_27165;
                var y__3868__auto__ = i_27160 - (places_27136 - x_27165);
                return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
              }();
              return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
            }() / x_27165 / 5;
            t3tr0s_slides.slide06.draw_piece_BANG_.call(null, ctx, piece_27164__$1, position_27163);
            var G__27166 = cljs.core.next.call(null, seq__27128_27153__$1);
            var G__27167 = null;
            var G__27168 = 0;
            var G__27169 = 0;
            seq__27128_27137 = G__27166;
            chunk__27129_27138 = G__27167;
            count__27130_27139 = G__27168;
            i__27131_27140 = G__27169;
            continue;
          }
        } else {
        }
      }
      break;
    }
    ctx.globalAlpha = 1;
    ctx.fillStyle = t3tr0s_slides.slide06.dark_purple;
    ctx.strokeStyle = t3tr0s_slides.slide06.light_purple;
    return t3tr0s_slides.slide06.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
var ufv___27187 = schema.utils.use_fn_validation;
var output_schema27171_27188 = schema.core.Any;
var input_schema27172_27189 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker27173_27190 = schema.core.checker.call(null, input_schema27172_27189);
var output_checker27174_27191 = schema.core.checker.call(null, output_schema27171_27188);
t3tr0s_slides.slide06.canvas = function(ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191) {
  return function canvas(G__27175, G__27176) {
    var validate__5821__auto__ = ufv___27187.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___27192 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__27175, G__27176], null);
      var temp__4126__auto___27193 = input_checker27173_27190.call(null, args__5822__auto___27192);
      if (cljs.core.truth_(temp__4126__auto___27193)) {
        var error__5823__auto___27194 = temp__4126__auto___27193;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___27194)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema27172_27189, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___27192, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___27194], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__27175;
      var owner = G__27176;
      while (true) {
        if (typeof t3tr0s_slides.slide06.t27182 !== "undefined") {
        } else {
          t3tr0s_slides.slide06.t27182 = function(owner, G__27175, G__27176, input_checker27173, output_checker27174, input_schema27172, validate__5821__auto__, canvas, output_schema27171, app, ufv__, meta27183) {
            this.owner = owner;
            this.G__27175 = G__27175;
            this.G__27176 = G__27176;
            this.input_checker27173 = input_checker27173;
            this.output_checker27174 = output_checker27174;
            this.input_schema27172 = input_schema27172;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.canvas = canvas;
            this.output_schema27171 = output_schema27171;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta27183 = meta27183;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide06.t27182.cljs$lang$type = true;
          t3tr0s_slides.slide06.t27182.cljs$lang$ctorStr = "t3tr0s-slides.slide06/t27182";
          t3tr0s_slides.slide06.t27182.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide06/t27182");
            };
          }(validate__5821__auto__, ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191);
          t3tr0s_slides.slide06.t27182.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide06.t27182.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191);
          t3tr0s_slides.slide06.t27182.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide06.t27182.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide06.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191);
          t3tr0s_slides.slide06.t27182.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide06.t27182.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide06.cols * t3tr0s_slides.slide06.cell_size;
              canvas__$2.height = t3tr0s_slides.slide06.rows * t3tr0s_slides.slide06.cell_size;
              return t3tr0s_slides.slide06.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191);
          t3tr0s_slides.slide06.t27182.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191) {
            return function(_27184) {
              var self__ = this;
              var _27184__$1 = this;
              return self__.meta27183;
            };
          }(validate__5821__auto__, ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191);
          t3tr0s_slides.slide06.t27182.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191) {
            return function(_27184, meta27183__$1) {
              var self__ = this;
              var _27184__$1 = this;
              return new t3tr0s_slides.slide06.t27182(self__.owner, self__.G__27175, self__.G__27176, self__.input_checker27173, self__.output_checker27174, self__.input_schema27172, self__.validate__5821__auto__, self__.canvas, self__.output_schema27171, self__.app, self__.ufv__, meta27183__$1);
            };
          }(validate__5821__auto__, ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191);
          t3tr0s_slides.slide06.__GT_t27182 = function(validate__5821__auto__, ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191) {
            return function __GT_t27182(owner__$1, G__27175__$1, G__27176__$1, input_checker27173__$1, output_checker27174__$1, input_schema27172__$1, validate__5821__auto____$1, canvas__$1, output_schema27171__$1, app__$1, ufv____$1, meta27183) {
              return new t3tr0s_slides.slide06.t27182(owner__$1, G__27175__$1, G__27176__$1, input_checker27173__$1, output_checker27174__$1, input_schema27172__$1, validate__5821__auto____$1, canvas__$1, output_schema27171__$1, app__$1, ufv____$1, meta27183);
            };
          }(validate__5821__auto__, ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191);
        }
        return new t3tr0s_slides.slide06.t27182(owner, G__27175, G__27176, input_checker27173_27190, output_checker27174_27191, input_schema27172_27189, validate__5821__auto__, canvas, output_schema27171_27188, app, ufv___27187, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___27195 = output_checker27174_27191.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___27195)) {
        var error__5823__auto___27196 = temp__4126__auto___27195;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___27196)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema27171_27188, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___27196], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___27187, output_schema27171_27188, input_schema27172_27189, input_checker27173_27190, output_checker27174_27191);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide06.canvas), schema.core.make_fn_schema.call(null, output_schema27171_27188, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema27172_27189], null)));
t3tr0s_slides.slide06.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide06.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m27170) {
    return om.core.build.call(null, t3tr0s_slides.slide06.canvas, cursor__9685__auto__, m27170);
  };
  __GT_canvas = function(cursor__9685__auto__, m27170) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m27170);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___27214 = schema.utils.use_fn_validation;
var output_schema27198_27215 = schema.core.Any;
var input_schema27199_27216 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker27200_27217 = schema.core.checker.call(null, input_schema27199_27216);
var output_checker27201_27218 = schema.core.checker.call(null, output_schema27198_27215);
t3tr0s_slides.slide06.slide = function(ufv___27214, output_schema27198_27215, input_schema27199_27216, input_checker27200_27217, output_checker27201_27218) {
  return function slide(G__27202, G__27203) {
    var validate__5821__auto__ = ufv___27214.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___27219 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__27202, G__27203], null);
      var temp__4126__auto___27220 = input_checker27200_27217.call(null, args__5822__auto___27219);
      if (cljs.core.truth_(temp__4126__auto___27220)) {
        var error__5823__auto___27221 = temp__4126__auto___27220;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___27221)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema27199_27216, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___27219, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___27221], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__27202;
      var owner = G__27203;
      while (true) {
        if (typeof t3tr0s_slides.slide06.t27209 !== "undefined") {
        } else {
          t3tr0s_slides.slide06.t27209 = function(owner, validate__5821__auto__, output_checker27201, input_schema27199, G__27202, G__27203, input_checker27200, output_schema27198, slide, app, ufv__, meta27210) {
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker27201 = output_checker27201;
            this.input_schema27199 = input_schema27199;
            this.G__27202 = G__27202;
            this.G__27203 = G__27203;
            this.input_checker27200 = input_checker27200;
            this.output_schema27198 = output_schema27198;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta27210 = meta27210;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide06.t27209.cljs$lang$type = true;
          t3tr0s_slides.slide06.t27209.cljs$lang$ctorStr = "t3tr0s-slides.slide06/t27209";
          t3tr0s_slides.slide06.t27209.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___27214, output_schema27198_27215, input_schema27199_27216, input_checker27200_27217, output_checker27201_27218) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide06/t27209");
            };
          }(validate__5821__auto__, ufv___27214, output_schema27198_27215, input_schema27199_27216, input_checker27200_27217, output_checker27201_27218);
          t3tr0s_slides.slide06.t27209.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide06.t27209.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___27214, output_schema27198_27215, input_schema27199_27216, input_checker27200_27217, output_checker27201_27218) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "6. Store the state."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide06.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide06.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___27214, output_schema27198_27215, input_schema27199_27216, input_checker27200_27217, output_checker27201_27218);
          t3tr0s_slides.slide06.t27209.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___27214, output_schema27198_27215, input_schema27199_27216, input_checker27200_27217, output_checker27201_27218) {
            return function(_27211) {
              var self__ = this;
              var _27211__$1 = this;
              return self__.meta27210;
            };
          }(validate__5821__auto__, ufv___27214, output_schema27198_27215, input_schema27199_27216, input_checker27200_27217, output_checker27201_27218);
          t3tr0s_slides.slide06.t27209.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___27214, output_schema27198_27215, input_schema27199_27216, input_checker27200_27217, output_checker27201_27218) {
            return function(_27211, meta27210__$1) {
              var self__ = this;
              var _27211__$1 = this;
              return new t3tr0s_slides.slide06.t27209(self__.owner, self__.validate__5821__auto__, self__.output_checker27201, self__.input_schema27199, self__.G__27202, self__.G__27203, self__.input_checker27200, self__.output_schema27198, self__.slide, self__.app, self__.ufv__, meta27210__$1);
            };
          }(validate__5821__auto__, ufv___27214, output_schema27198_27215, input_schema27199_27216, input_checker27200_27217, output_checker27201_27218);
          t3tr0s_slides.slide06.__GT_t27209 = function(validate__5821__auto__, ufv___27214, output_schema27198_27215, input_schema27199_27216, input_checker27200_27217, output_checker27201_27218) {
            return function __GT_t27209(owner__$1, validate__5821__auto____$1, output_checker27201__$1, input_schema27199__$1, G__27202__$1, G__27203__$1, input_checker27200__$1, output_schema27198__$1, slide__$1, app__$1, ufv____$1, meta27210) {
              return new t3tr0s_slides.slide06.t27209(owner__$1, validate__5821__auto____$1, output_checker27201__$1, input_schema27199__$1, G__27202__$1, G__27203__$1, input_checker27200__$1, output_schema27198__$1, slide__$1, app__$1, ufv____$1, meta27210);
            };
          }(validate__5821__auto__, ufv___27214, output_schema27198_27215, input_schema27199_27216, input_checker27200_27217, output_checker27201_27218);
        }
        return new t3tr0s_slides.slide06.t27209(owner, validate__5821__auto__, output_checker27201_27218, input_schema27199_27216, G__27202, G__27203, input_checker27200_27217, output_schema27198_27215, slide, app, ufv___27214, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___27222 = output_checker27201_27218.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___27222)) {
        var error__5823__auto___27223 = temp__4126__auto___27222;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___27223)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema27198_27215, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___27223], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___27214, output_schema27198_27215, input_schema27199_27216, input_checker27200_27217, output_checker27201_27218);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide06.slide), schema.core.make_fn_schema.call(null, output_schema27198_27215, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema27199_27216], null)));
t3tr0s_slides.slide06.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide06.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m27197) {
    return om.core.build.call(null, t3tr0s_slides.slide06.slide, cursor__9685__auto__, m27197);
  };
  __GT_slide = function(cursor__9685__auto__, m27197) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m27197);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide06.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide06.slide, t3tr0s_slides.slide06.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide06.resume = function resume() {
  return null;
};
t3tr0s_slides.slide06.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide13");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide13.dark_green = "#143";
t3tr0s_slides.slide13.light_green = "#175";
t3tr0s_slides.slide13.dark_purple = "#449";
t3tr0s_slides.slide13.light_purple = "#6ad";
t3tr0s_slides.slide13.dark_red = "#944";
t3tr0s_slides.slide13.light_red = "#f8c";
t3tr0s_slides.slide13.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide13.rotate_coord = function rotate_coord(p__49825) {
  var vec__49827 = p__49825;
  var x = cljs.core.nth.call(null, vec__49827, 0, null);
  var y = cljs.core.nth.call(null, vec__49827, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide13.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide13.rotate_coord, piece);
};
t3tr0s_slides.slide13.rows = 20;
t3tr0s_slides.slide13.cols = 10;
t3tr0s_slides.slide13.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide13.cols, 0));
t3tr0s_slides.slide13.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide13.rows, t3tr0s_slides.slide13.empty_row));
t3tr0s_slides.slide13.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 1, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 1, 1, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 1, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 1, 1, 1], null)], null);
t3tr0s_slides.slide13.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [5, 2], null);
t3tr0s_slides.slide13.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide13.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), t3tr0s_slides.slide13.rotate_piece.call(null, (new cljs.core.Keyword(null, "I", "I", 1827140963)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide13.pieces)), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide13.initial_pos], 
null));
t3tr0s_slides.slide13.write_piece = function write_piece(board, coords, p__49828, value) {
  while (true) {
    var vec__49832 = p__49828;
    var cx = cljs.core.nth.call(null, vec__49832, 0, null);
    var cy = cljs.core.nth.call(null, vec__49832, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__49833 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__49833, 0, null);
      var y = cljs.core.nth.call(null, vec__49833, 1, null);
      var G__49835 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), value);
        } catch (e49834) {
          if (e49834 instanceof Error) {
            var _ = e49834;
            return board;
          } else {
            throw e49834;
          }
        }
      }();
      var G__49836 = cljs.core.rest.call(null, coords);
      var G__49837 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      var G__49838 = value;
      board = G__49835;
      coords = G__49836;
      p__49828 = G__49837;
      value = G__49838;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide13.create_drawable_board = function create_drawable_board(board, piece, p__49839) {
  var vec__49841 = p__49839;
  var x = cljs.core.nth.call(null, vec__49841, 0, null);
  var y = cljs.core.nth.call(null, vec__49841, 1, null);
  var gy = t3tr0s_slides.slide13.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  var board1 = t3tr0s_slides.slide13.write_piece.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, gy], null), "G");
  var board2 = t3tr0s_slides.slide13.write_piece.call(null, board1, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null), "P");
  return board2;
};
t3tr0s_slides.slide13.app_drawable_board_BANG_ = function app_drawable_board_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  return t3tr0s_slides.slide13.create_drawable_board.call(null, board, piece, pos);
};
t3tr0s_slides.slide13.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__49843 = cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state);
  var map__49843__$1 = cljs.core.seq_QMARK_.call(null, map__49843) ? cljs.core.apply.call(null, cljs.core.hash_map, map__49843) : map__49843;
  var position = cljs.core.get.call(null, map__49843__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__49843__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide13.write_piece, piece, position, 1);
};
t3tr0s_slides.slide13.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__49844) {
  var vec__49848 = p__49844;
  var cx = cljs.core.nth.call(null, vec__49848, 0, null);
  var cy = cljs.core.nth.call(null, vec__49848, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__49848, cx, cy) {
    return function(p__49849) {
      var vec__49850 = p__49849;
      var x = cljs.core.nth.call(null, vec__49850, 0, null);
      var y = cljs.core.nth.call(null, vec__49850, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__49848, cx, cy), piece);
};
t3tr0s_slides.slide13.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide13.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide13.app_state))));
};
t3tr0s_slides.slide13.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var vec__49852 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var x = cljs.core.nth.call(null, vec__49852, 0, null);
  var y = cljs.core.nth.call(null, vec__49852, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide13.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide13.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var new_piece = t3tr0s_slides.slide13.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide13.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide13.get_drop_pos = function get_drop_pos(board, piece, p__49853) {
  var vec__49855 = p__49853;
  var x = cljs.core.nth.call(null, vec__49855, 0, null);
  var y = cljs.core.nth.call(null, vec__49855, 1, null);
  var collide_QMARK_ = function(vec__49855, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide13.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__49855, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide13.filled_rows = function filled_rows(board) {
  return cljs.core.apply.call(null, cljs.core.hash_set, cljs.core.map.call(null, cljs.core.first, cljs.core.filter.call(null, function(p__49858) {
    var vec__49859 = p__49858;
    var i = cljs.core.nth.call(null, vec__49859, 0, null);
    var row = cljs.core.nth.call(null, vec__49859, 1, null);
    return cljs.core.every_QMARK_.call(null, cljs.core.pos_QMARK_, row);
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board))));
};
t3tr0s_slides.slide13.collapse_rows = function collapse_rows(board, rows) {
  var cleared_board = cljs.core.map.call(null, cljs.core.second, cljs.core.remove.call(null, function(p1__49860_SHARP_) {
    return rows.call(null, cljs.core.first.call(null, p1__49860_SHARP_));
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board)));
  var n = cljs.core.count.call(null, rows);
  var new_board = cljs.core.into.call(null, cljs.core.vec.call(null, cljs.core.repeat.call(null, n, t3tr0s_slides.slide13.empty_row)), cleared_board);
  return new_board;
};
t3tr0s_slides.slide13.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var vec__49862 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var x = cljs.core.nth.call(null, vec__49862, 0, null);
  var y = cljs.core.nth.call(null, vec__49862, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var ny = t3tr0s_slides.slide13.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  t3tr0s_slides.slide13.lock_piece_BANG_.call(null);
  var board__$1 = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide13.collapse_rows.call(null, board__$1, t3tr0s_slides.slide13.filled_rows.call(null, board__$1)), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide13.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide13.pieces)));
};
t3tr0s_slides.slide13.data_row = function data_row(board, row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__49867(s__49868) {
      return new cljs.core.LazySeq(null, function() {
        var s__49868__$1 = s__49868;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__49868__$1);
          if (temp__4126__auto__) {
            var s__49868__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__49868__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__49868__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__49870 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__49869 = 0;
                while (true) {
                  if (i__49869 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__49869);
                    cljs.core.chunk_append.call(null, b__49870, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null))));
                    var G__49871 = i__49869 + 1;
                    i__49869 = G__49871;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__49870), iter__49867.call(null, cljs.core.chunk_rest.call(null, s__49868__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__49870), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__49868__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null))), iter__49867.call(null, cljs.core.rest.call(null, s__49868__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide13.cols));
  }(), " ]"], null);
};
var ufv___49885 = schema.utils.use_fn_validation;
var output_schema49873_49886 = schema.core.Any;
var input_schema49874_49887 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker49875_49888 = schema.core.checker.call(null, input_schema49874_49887);
var output_checker49876_49889 = schema.core.checker.call(null, output_schema49873_49886);
t3tr0s_slides.slide13.code = function(ufv___49885, output_schema49873_49886, input_schema49874_49887, input_checker49875_49888, output_checker49876_49889) {
  return function code(G__49877, G__49878) {
    var validate__5821__auto__ = ufv___49885.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___49890 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__49877, G__49878], null);
      var temp__4126__auto___49891 = input_checker49875_49888.call(null, args__5822__auto___49890);
      if (cljs.core.truth_(temp__4126__auto___49891)) {
        var error__5823__auto___49892 = temp__4126__auto___49891;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___49892)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema49874_49887, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___49890, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___49892], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__49877;
      var owner = G__49878;
      while (true) {
        if (typeof t3tr0s_slides.slide13.t49882 !== "undefined") {
        } else {
          t3tr0s_slides.slide13.t49882 = function(G__49877, G__49878, owner, validate__5821__auto__, output_schema49873, input_checker49875, input_schema49874, output_checker49876, app, ufv__, code, meta49883) {
            this.G__49877 = G__49877;
            this.G__49878 = G__49878;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema49873 = output_schema49873;
            this.input_checker49875 = input_checker49875;
            this.input_schema49874 = input_schema49874;
            this.output_checker49876 = output_checker49876;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta49883 = meta49883;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide13.t49882.cljs$lang$type = true;
          t3tr0s_slides.slide13.t49882.cljs$lang$ctorStr = "t3tr0s-slides.slide13/t49882";
          t3tr0s_slides.slide13.t49882.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___49885, output_schema49873_49886, input_schema49874_49887, input_checker49875_49888, output_checker49876_49889) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide13/t49882");
            };
          }(validate__5821__auto__, ufv___49885, output_schema49873_49886, input_schema49874_49887, input_checker49875_49888, output_checker49876_49889);
          t3tr0s_slides.slide13.t49882.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide13.t49882.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___49885, output_schema49873_49886, input_schema49874_49887, input_checker49875_49888, output_checker49876_49889) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code({"ref":"code"}, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " collapse-rows\n", "  [board]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [filled? (filled-rows board)\n", "        cleared (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "-\x3e\x3e")), 
              " board\n", "                     (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "map-indexed")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vector")), ")\n", "                     (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "remove")), " #(filled? (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), 
              " %)))\n", "                     (map ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "second")), "))\n", "        n (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "count")), " filled?)]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "into")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vec")), 
              " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "repeat")), " n empty-row)) cleared)))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " [", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), "] collapse-rows)\n", 
              "\n\n")));
            };
          }(validate__5821__auto__, ufv___49885, output_schema49873_49886, input_schema49874_49887, input_checker49875_49888, output_checker49876_49889);
          t3tr0s_slides.slide13.t49882.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___49885, output_schema49873_49886, input_schema49874_49887, input_checker49875_49888, output_checker49876_49889) {
            return function(_49884) {
              var self__ = this;
              var _49884__$1 = this;
              return self__.meta49883;
            };
          }(validate__5821__auto__, ufv___49885, output_schema49873_49886, input_schema49874_49887, input_checker49875_49888, output_checker49876_49889);
          t3tr0s_slides.slide13.t49882.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___49885, output_schema49873_49886, input_schema49874_49887, input_checker49875_49888, output_checker49876_49889) {
            return function(_49884, meta49883__$1) {
              var self__ = this;
              var _49884__$1 = this;
              return new t3tr0s_slides.slide13.t49882(self__.G__49877, self__.G__49878, self__.owner, self__.validate__5821__auto__, self__.output_schema49873, self__.input_checker49875, self__.input_schema49874, self__.output_checker49876, self__.app, self__.ufv__, self__.code, meta49883__$1);
            };
          }(validate__5821__auto__, ufv___49885, output_schema49873_49886, input_schema49874_49887, input_checker49875_49888, output_checker49876_49889);
          t3tr0s_slides.slide13.__GT_t49882 = function(validate__5821__auto__, ufv___49885, output_schema49873_49886, input_schema49874_49887, input_checker49875_49888, output_checker49876_49889) {
            return function __GT_t49882(G__49877__$1, G__49878__$1, owner__$1, validate__5821__auto____$1, output_schema49873__$1, input_checker49875__$1, input_schema49874__$1, output_checker49876__$1, app__$1, ufv____$1, code__$1, meta49883) {
              return new t3tr0s_slides.slide13.t49882(G__49877__$1, G__49878__$1, owner__$1, validate__5821__auto____$1, output_schema49873__$1, input_checker49875__$1, input_schema49874__$1, output_checker49876__$1, app__$1, ufv____$1, code__$1, meta49883);
            };
          }(validate__5821__auto__, ufv___49885, output_schema49873_49886, input_schema49874_49887, input_checker49875_49888, output_checker49876_49889);
        }
        return new t3tr0s_slides.slide13.t49882(G__49877, G__49878, owner, validate__5821__auto__, output_schema49873_49886, input_checker49875_49888, input_schema49874_49887, output_checker49876_49889, app, ufv___49885, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___49893 = output_checker49876_49889.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___49893)) {
        var error__5823__auto___49894 = temp__4126__auto___49893;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___49894)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema49873_49886, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___49894], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___49885, output_schema49873_49886, input_schema49874_49887, input_checker49875_49888, output_checker49876_49889);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide13.code), schema.core.make_fn_schema.call(null, output_schema49873_49886, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema49874_49887], null)));
t3tr0s_slides.slide13.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide13.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m49872) {
    return om.core.build.call(null, t3tr0s_slides.slide13.code, cursor__9685__auto__, m49872);
  };
  __GT_code = function(cursor__9685__auto__, m49872) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m49872);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide13.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide13.rows);
t3tr0s_slides.slide13.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__49895, is_center) {
  var vec__49897 = p__49895;
  var x = cljs.core.nth.call(null, vec__49897, 0, null);
  var y = cljs.core.nth.call(null, vec__49897, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide13.cell_size * x;
  var ry = t3tr0s_slides.slide13.cell_size * y;
  var rs = t3tr0s_slides.slide13.cell_size;
  var cx = t3tr0s_slides.slide13.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide13.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide13.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide13.piece_abs_coords = function piece_abs_coords(piece, p__49898) {
  var vec__49902 = p__49898;
  var cx = cljs.core.nth.call(null, vec__49902, 0, null);
  var cy = cljs.core.nth.call(null, vec__49902, 1, null);
  return cljs.core.mapv.call(null, function(vec__49902, cx, cy) {
    return function(p__49903) {
      var vec__49904 = p__49903;
      var x = cljs.core.nth.call(null, vec__49904, 0, null);
      var y = cljs.core.nth.call(null, vec__49904, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__49902, cx, cy), piece);
};
t3tr0s_slides.slide13.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__49911 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide13.piece_abs_coords.call(null, piece, pos)));
  var chunk__49912 = null;
  var count__49913 = 0;
  var i__49914 = 0;
  while (true) {
    if (i__49914 < count__49913) {
      var vec__49915 = cljs.core._nth.call(null, chunk__49912, i__49914);
      var i = cljs.core.nth.call(null, vec__49915, 0, null);
      var c = cljs.core.nth.call(null, vec__49915, 1, null);
      t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__49917 = seq__49911;
      var G__49918 = chunk__49912;
      var G__49919 = count__49913;
      var G__49920 = i__49914 + 1;
      seq__49911 = G__49917;
      chunk__49912 = G__49918;
      count__49913 = G__49919;
      i__49914 = G__49920;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__49911);
      if (temp__4126__auto__) {
        var seq__49911__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__49911__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__49911__$1);
          var G__49921 = cljs.core.chunk_rest.call(null, seq__49911__$1);
          var G__49922 = c__4309__auto__;
          var G__49923 = cljs.core.count.call(null, c__4309__auto__);
          var G__49924 = 0;
          seq__49911 = G__49921;
          chunk__49912 = G__49922;
          count__49913 = G__49923;
          i__49914 = G__49924;
          continue;
        } else {
          var vec__49916 = cljs.core.first.call(null, seq__49911__$1);
          var i = cljs.core.nth.call(null, vec__49916, 0, null);
          var c = cljs.core.nth.call(null, vec__49916, 1, null);
          t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__49925 = cljs.core.next.call(null, seq__49911__$1);
          var G__49926 = null;
          var G__49927 = 0;
          var G__49928 = 0;
          seq__49911 = G__49925;
          chunk__49912 = G__49926;
          count__49913 = G__49927;
          i__49914 = G__49928;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide13.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var filled_QMARK_ = t3tr0s_slides.slide13.filled_rows.call(null, board);
  var seq__49941 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide13.rows));
  var chunk__49946 = null;
  var count__49947 = 0;
  var i__49948 = 0;
  while (true) {
    if (i__49948 < count__49947) {
      var y = cljs.core._nth.call(null, chunk__49946, i__49948);
      var seq__49949_49953 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide13.cols));
      var chunk__49950_49954 = null;
      var count__49951_49955 = 0;
      var i__49952_49956 = 0;
      while (true) {
        if (i__49952_49956 < count__49951_49955) {
          var x_49957 = cljs.core._nth.call(null, chunk__49950_49954, i__49952_49956);
          ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
          var v_49958 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_49957], null));
          if (v_49958 === 0) {
          } else {
            t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_49957, y], null), false);
          }
          var G__49959 = seq__49949_49953;
          var G__49960 = chunk__49950_49954;
          var G__49961 = count__49951_49955;
          var G__49962 = i__49952_49956 + 1;
          seq__49949_49953 = G__49959;
          chunk__49950_49954 = G__49960;
          count__49951_49955 = G__49961;
          i__49952_49956 = G__49962;
          continue;
        } else {
          var temp__4126__auto___49963 = cljs.core.seq.call(null, seq__49949_49953);
          if (temp__4126__auto___49963) {
            var seq__49949_49964__$1 = temp__4126__auto___49963;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__49949_49964__$1)) {
              var c__4309__auto___49965 = cljs.core.chunk_first.call(null, seq__49949_49964__$1);
              var G__49966 = cljs.core.chunk_rest.call(null, seq__49949_49964__$1);
              var G__49967 = c__4309__auto___49965;
              var G__49968 = cljs.core.count.call(null, c__4309__auto___49965);
              var G__49969 = 0;
              seq__49949_49953 = G__49966;
              chunk__49950_49954 = G__49967;
              count__49951_49955 = G__49968;
              i__49952_49956 = G__49969;
              continue;
            } else {
              var x_49970 = cljs.core.first.call(null, seq__49949_49964__$1);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
              var v_49971 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_49970], null));
              if (v_49971 === 0) {
              } else {
                t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_49970, y], null), false);
              }
              var G__49972 = cljs.core.next.call(null, seq__49949_49964__$1);
              var G__49973 = null;
              var G__49974 = 0;
              var G__49975 = 0;
              seq__49949_49953 = G__49972;
              chunk__49950_49954 = G__49973;
              count__49951_49955 = G__49974;
              i__49952_49956 = G__49975;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__49976 = seq__49941;
      var G__49977 = chunk__49946;
      var G__49978 = count__49947;
      var G__49979 = i__49948 + 1;
      seq__49941 = G__49976;
      chunk__49946 = G__49977;
      count__49947 = G__49978;
      i__49948 = G__49979;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__49941);
      if (temp__4126__auto__) {
        var seq__49941__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__49941__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__49941__$1);
          var G__49980 = cljs.core.chunk_rest.call(null, seq__49941__$1);
          var G__49981 = c__4309__auto__;
          var G__49982 = cljs.core.count.call(null, c__4309__auto__);
          var G__49983 = 0;
          seq__49941 = G__49980;
          chunk__49946 = G__49981;
          count__49947 = G__49982;
          i__49948 = G__49983;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__49941__$1);
          var seq__49942_49984 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide13.cols));
          var chunk__49943_49985 = null;
          var count__49944_49986 = 0;
          var i__49945_49987 = 0;
          while (true) {
            if (i__49945_49987 < count__49944_49986) {
              var x_49988 = cljs.core._nth.call(null, chunk__49943_49985, i__49945_49987);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
              var v_49989 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_49988], null));
              if (v_49989 === 0) {
              } else {
                t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_49988, y], null), false);
              }
              var G__49990 = seq__49942_49984;
              var G__49991 = chunk__49943_49985;
              var G__49992 = count__49944_49986;
              var G__49993 = i__49945_49987 + 1;
              seq__49942_49984 = G__49990;
              chunk__49943_49985 = G__49991;
              count__49944_49986 = G__49992;
              i__49945_49987 = G__49993;
              continue;
            } else {
              var temp__4126__auto___49994__$1 = cljs.core.seq.call(null, seq__49942_49984);
              if (temp__4126__auto___49994__$1) {
                var seq__49942_49995__$1 = temp__4126__auto___49994__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__49942_49995__$1)) {
                  var c__4309__auto___49996 = cljs.core.chunk_first.call(null, seq__49942_49995__$1);
                  var G__49997 = cljs.core.chunk_rest.call(null, seq__49942_49995__$1);
                  var G__49998 = c__4309__auto___49996;
                  var G__49999 = cljs.core.count.call(null, c__4309__auto___49996);
                  var G__50000 = 0;
                  seq__49942_49984 = G__49997;
                  chunk__49943_49985 = G__49998;
                  count__49944_49986 = G__49999;
                  i__49945_49987 = G__50000;
                  continue;
                } else {
                  var x_50001 = cljs.core.first.call(null, seq__49942_49995__$1);
                  ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
                  var v_50002 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_50001], null));
                  if (v_50002 === 0) {
                  } else {
                    t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_50001, y], null), false);
                  }
                  var G__50003 = cljs.core.next.call(null, seq__49942_49995__$1);
                  var G__50004 = null;
                  var G__50005 = 0;
                  var G__50006 = 0;
                  seq__49942_49984 = G__50003;
                  chunk__49943_49985 = G__50004;
                  count__49944_49986 = G__50005;
                  i__49945_49987 = G__50006;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__50007 = cljs.core.next.call(null, seq__49941__$1);
          var G__50008 = null;
          var G__50009 = 0;
          var G__50010 = 0;
          seq__49941 = G__50007;
          chunk__49946 = G__50008;
          count__49947 = G__50009;
          i__49948 = G__50010;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide13.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide13.cell_size * t3tr0s_slides.slide13.cols, t3tr0s_slides.slide13.cell_size * t3tr0s_slides.slide13.rows);
  ctx.fillStyle = t3tr0s_slides.slide13.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide13.light_green;
  t3tr0s_slides.slide13.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  ctx.globalAlpha = 1;
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var drop_y = t3tr0s_slides.slide13.get_drop_pos.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state)), piece, pos);
  var drop_pos = cljs.core.assoc.call(null, pos, 1, drop_y);
  var fits = t3tr0s_slides.slide13.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = "#333";
    ctx.strokeStyle = "#666";
    t3tr0s_slides.slide13.draw_piece_BANG_.call(null, ctx, piece, drop_pos);
    ctx.fillStyle = fits ? t3tr0s_slides.slide13.dark_purple : t3tr0s_slides.slide13.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide13.light_purple : t3tr0s_slides.slide13.light_red;
    return t3tr0s_slides.slide13.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide13.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide13.key_name = function key_name(p1__50011_SHARP_) {
  return t3tr0s_slides.slide13.key_names.call(null, p1__50011_SHARP_.keyCode);
};
t3tr0s_slides.slide13.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide13.key_name.call(null, e);
  var G__50013_50014 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__50013_50014) {
    case "space":
      t3tr0s_slides.slide13.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide13.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide13.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide13.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___50033 = schema.utils.use_fn_validation;
var output_schema50017_50034 = schema.core.Any;
var input_schema50018_50035 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker50019_50036 = schema.core.checker.call(null, input_schema50018_50035);
var output_checker50020_50037 = schema.core.checker.call(null, output_schema50017_50034);
t3tr0s_slides.slide13.canvas = function(ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037) {
  return function canvas(G__50021, G__50022) {
    var validate__5821__auto__ = ufv___50033.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___50038 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__50021, G__50022], null);
      var temp__4126__auto___50039 = input_checker50019_50036.call(null, args__5822__auto___50038);
      if (cljs.core.truth_(temp__4126__auto___50039)) {
        var error__5823__auto___50040 = temp__4126__auto___50039;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___50040)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema50018_50035, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___50038, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___50040], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__50021;
      var owner = G__50022;
      while (true) {
        if (typeof t3tr0s_slides.slide13.t50028 !== "undefined") {
        } else {
          t3tr0s_slides.slide13.t50028 = function(owner, output_checker50020, validate__5821__auto__, input_schema50018, input_checker50019, G__50021, G__50022, canvas, app, ufv__, output_schema50017, meta50029) {
            this.owner = owner;
            this.output_checker50020 = output_checker50020;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema50018 = input_schema50018;
            this.input_checker50019 = input_checker50019;
            this.G__50021 = G__50021;
            this.G__50022 = G__50022;
            this.canvas = canvas;
            this.app = app;
            this.ufv__ = ufv__;
            this.output_schema50017 = output_schema50017;
            this.meta50029 = meta50029;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide13.t50028.cljs$lang$type = true;
          t3tr0s_slides.slide13.t50028.cljs$lang$ctorStr = "t3tr0s-slides.slide13/t50028";
          t3tr0s_slides.slide13.t50028.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide13/t50028");
            };
          }(validate__5821__auto__, ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037);
          t3tr0s_slides.slide13.t50028.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide13.t50028.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037);
          t3tr0s_slides.slide13.t50028.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide13.t50028.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide13.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037);
          t3tr0s_slides.slide13.t50028.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide13.t50028.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide13.cols * t3tr0s_slides.slide13.cell_size;
              canvas__$2.height = t3tr0s_slides.slide13.rows * t3tr0s_slides.slide13.cell_size;
              return t3tr0s_slides.slide13.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037);
          t3tr0s_slides.slide13.t50028.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037) {
            return function(_50030) {
              var self__ = this;
              var _50030__$1 = this;
              return self__.meta50029;
            };
          }(validate__5821__auto__, ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037);
          t3tr0s_slides.slide13.t50028.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037) {
            return function(_50030, meta50029__$1) {
              var self__ = this;
              var _50030__$1 = this;
              return new t3tr0s_slides.slide13.t50028(self__.owner, self__.output_checker50020, self__.validate__5821__auto__, self__.input_schema50018, self__.input_checker50019, self__.G__50021, self__.G__50022, self__.canvas, self__.app, self__.ufv__, self__.output_schema50017, meta50029__$1);
            };
          }(validate__5821__auto__, ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037);
          t3tr0s_slides.slide13.__GT_t50028 = function(validate__5821__auto__, ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037) {
            return function __GT_t50028(owner__$1, output_checker50020__$1, validate__5821__auto____$1, input_schema50018__$1, input_checker50019__$1, G__50021__$1, G__50022__$1, canvas__$1, app__$1, ufv____$1, output_schema50017__$1, meta50029) {
              return new t3tr0s_slides.slide13.t50028(owner__$1, output_checker50020__$1, validate__5821__auto____$1, input_schema50018__$1, input_checker50019__$1, G__50021__$1, G__50022__$1, canvas__$1, app__$1, ufv____$1, output_schema50017__$1, meta50029);
            };
          }(validate__5821__auto__, ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037);
        }
        return new t3tr0s_slides.slide13.t50028(owner, output_checker50020_50037, validate__5821__auto__, input_schema50018_50035, input_checker50019_50036, G__50021, G__50022, canvas, app, ufv___50033, output_schema50017_50034, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___50041 = output_checker50020_50037.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___50041)) {
        var error__5823__auto___50042 = temp__4126__auto___50041;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___50042)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema50017_50034, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___50042], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___50033, output_schema50017_50034, input_schema50018_50035, input_checker50019_50036, output_checker50020_50037);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide13.canvas), schema.core.make_fn_schema.call(null, output_schema50017_50034, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema50018_50035], null)));
t3tr0s_slides.slide13.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide13.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m50016) {
    return om.core.build.call(null, t3tr0s_slides.slide13.canvas, cursor__9685__auto__, m50016);
  };
  __GT_canvas = function(cursor__9685__auto__, m50016) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m50016);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___50060 = schema.utils.use_fn_validation;
var output_schema50044_50061 = schema.core.Any;
var input_schema50045_50062 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker50046_50063 = schema.core.checker.call(null, input_schema50045_50062);
var output_checker50047_50064 = schema.core.checker.call(null, output_schema50044_50061);
t3tr0s_slides.slide13.slide = function(ufv___50060, output_schema50044_50061, input_schema50045_50062, input_checker50046_50063, output_checker50047_50064) {
  return function slide(G__50048, G__50049) {
    var validate__5821__auto__ = ufv___50060.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___50065 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__50048, G__50049], null);
      var temp__4126__auto___50066 = input_checker50046_50063.call(null, args__5822__auto___50065);
      if (cljs.core.truth_(temp__4126__auto___50066)) {
        var error__5823__auto___50067 = temp__4126__auto___50066;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___50067)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema50045_50062, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___50065, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___50067], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__50048;
      var owner = G__50049;
      while (true) {
        if (typeof t3tr0s_slides.slide13.t50055 !== "undefined") {
        } else {
          t3tr0s_slides.slide13.t50055 = function(output_schema50044, owner, validate__5821__auto__, G__50048, output_checker50047, input_schema50045, G__50049, slide, app, ufv__, input_checker50046, meta50056) {
            this.output_schema50044 = output_schema50044;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__50048 = G__50048;
            this.output_checker50047 = output_checker50047;
            this.input_schema50045 = input_schema50045;
            this.G__50049 = G__50049;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_checker50046 = input_checker50046;
            this.meta50056 = meta50056;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide13.t50055.cljs$lang$type = true;
          t3tr0s_slides.slide13.t50055.cljs$lang$ctorStr = "t3tr0s-slides.slide13/t50055";
          t3tr0s_slides.slide13.t50055.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___50060, output_schema50044_50061, input_schema50045_50062, input_checker50046_50063, output_checker50047_50064) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide13/t50055");
            };
          }(validate__5821__auto__, ufv___50060, output_schema50044_50061, input_schema50045_50062, input_checker50046_50063, output_checker50047_50064);
          t3tr0s_slides.slide13.t50055.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide13.t50055.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___50060, output_schema50044_50061, input_schema50045_50062, input_checker50046_50063, output_checker50047_50064) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "13. Collapse rows."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide13.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide13.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___50060, output_schema50044_50061, input_schema50045_50062, input_checker50046_50063, output_checker50047_50064);
          t3tr0s_slides.slide13.t50055.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___50060, output_schema50044_50061, input_schema50045_50062, input_checker50046_50063, output_checker50047_50064) {
            return function(_50057) {
              var self__ = this;
              var _50057__$1 = this;
              return self__.meta50056;
            };
          }(validate__5821__auto__, ufv___50060, output_schema50044_50061, input_schema50045_50062, input_checker50046_50063, output_checker50047_50064);
          t3tr0s_slides.slide13.t50055.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___50060, output_schema50044_50061, input_schema50045_50062, input_checker50046_50063, output_checker50047_50064) {
            return function(_50057, meta50056__$1) {
              var self__ = this;
              var _50057__$1 = this;
              return new t3tr0s_slides.slide13.t50055(self__.output_schema50044, self__.owner, self__.validate__5821__auto__, self__.G__50048, self__.output_checker50047, self__.input_schema50045, self__.G__50049, self__.slide, self__.app, self__.ufv__, self__.input_checker50046, meta50056__$1);
            };
          }(validate__5821__auto__, ufv___50060, output_schema50044_50061, input_schema50045_50062, input_checker50046_50063, output_checker50047_50064);
          t3tr0s_slides.slide13.__GT_t50055 = function(validate__5821__auto__, ufv___50060, output_schema50044_50061, input_schema50045_50062, input_checker50046_50063, output_checker50047_50064) {
            return function __GT_t50055(output_schema50044__$1, owner__$1, validate__5821__auto____$1, G__50048__$1, output_checker50047__$1, input_schema50045__$1, G__50049__$1, slide__$1, app__$1, ufv____$1, input_checker50046__$1, meta50056) {
              return new t3tr0s_slides.slide13.t50055(output_schema50044__$1, owner__$1, validate__5821__auto____$1, G__50048__$1, output_checker50047__$1, input_schema50045__$1, G__50049__$1, slide__$1, app__$1, ufv____$1, input_checker50046__$1, meta50056);
            };
          }(validate__5821__auto__, ufv___50060, output_schema50044_50061, input_schema50045_50062, input_checker50046_50063, output_checker50047_50064);
        }
        return new t3tr0s_slides.slide13.t50055(output_schema50044_50061, owner, validate__5821__auto__, G__50048, output_checker50047_50064, input_schema50045_50062, G__50049, slide, app, ufv___50060, input_checker50046_50063, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___50068 = output_checker50047_50064.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___50068)) {
        var error__5823__auto___50069 = temp__4126__auto___50068;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___50069)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema50044_50061, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___50069], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___50060, output_schema50044_50061, input_schema50045_50062, input_checker50046_50063, output_checker50047_50064);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide13.slide), schema.core.make_fn_schema.call(null, output_schema50044_50061, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema50045_50062], null)));
t3tr0s_slides.slide13.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide13.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m50043) {
    return om.core.build.call(null, t3tr0s_slides.slide13.slide, cursor__9685__auto__, m50043);
  };
  __GT_slide = function(cursor__9685__auto__, m50043) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m50043);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide13.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide13.slide, t3tr0s_slides.slide13.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide13.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide13.key_down);
};
t3tr0s_slides.slide13.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide13.key_down);
};
goog.provide("t3tr0s_slides.slide03");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide03.dark_green = "#143";
t3tr0s_slides.slide03.light_green = "#175";
t3tr0s_slides.slide03.dark_purple = "#449";
t3tr0s_slides.slide03.light_purple = "#6ad";
t3tr0s_slides.slide03.next_piece = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.Keyword(null, 
"L", "L", -1038307519), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.Keyword(null, "I", "I", 1827140963)], null);
t3tr0s_slides.slide03.piece_keys = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.Keyword(null, "Z", "Z", 459124588)], null);
t3tr0s_slides.slide03.positions = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 1], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 4], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[4, 7], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 10], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 13], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 16], null), new cljs.core.Keyword(null, "Z", "Z", 
459124588), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 19], null)], null);
t3tr0s_slides.slide03.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide03.piece_abs_coords = function piece_abs_coords(piece, p__26379) {
  var vec__26383 = p__26379;
  var cx = cljs.core.nth.call(null, vec__26383, 0, null);
  var cy = cljs.core.nth.call(null, vec__26383, 1, null);
  return cljs.core.mapv.call(null, function(vec__26383, cx, cy) {
    return function(p__26384) {
      var vec__26385 = p__26384;
      var x = cljs.core.nth.call(null, vec__26385, 0, null);
      var y = cljs.core.nth.call(null, vec__26385, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__26383, cx, cy), t3tr0s_slides.slide03.pieces.call(null, piece));
};
t3tr0s_slides.slide03.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide03.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide03.initial_pos, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), null], null));
t3tr0s_slides.slide03.rows = 20;
t3tr0s_slides.slide03.cols = 10;
t3tr0s_slides.slide03.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide03.cols, 0));
t3tr0s_slides.slide03.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide03.rows, t3tr0s_slides.slide03.empty_row));
t3tr0s_slides.slide03.piece_code = function piece_code(app) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "highlight", "highlight", -800930873)).cljs$core$IFn$_invoke$arity$1(app), new cljs.core.Keyword(null, "piece", "piece", 1396691784)) ? "clickable-ae1bb" : "", new cljs.core.Keyword(null, "onMouseEnter", 
  "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  }, new cljs.core.Keyword(null, "onMouseLeave", "onMouseLeave", 1446726903), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), null);
  }, new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function() {
    return om.core.transact_BANG_.call(null, app, new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835), t3tr0s_slides.slide03.next_piece);
  }], null), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " pieces)"), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835)).cljs$core$IFn$_invoke$arity$1(app)))), "(")], null);
};
t3tr0s_slides.slide03.full_piece = function full_piece(piece) {
  var pad = function(p1__26386_SHARP_) {
    if (p1__26386_SHARP_ < 0) {
      return p1__26386_SHARP_;
    } else {
      return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__26386_SHARP_);
    }
  };
  var fmt = function(pad) {
    return function(p1__26387_SHARP_) {
      return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__26387_SHARP_));
    };
  }(pad);
  var fmt_coord = function(pad, fmt) {
    return function(p__26390) {
      var vec__26391 = p__26390;
      var x = cljs.core.nth.call(null, vec__26391, 0, null);
      var y = cljs.core.nth.call(null, vec__26391, 1, null);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), "[");
    };
  }(pad, fmt);
  return cljs.core.interpose.call(null, " ", cljs.core.map.call(null, fmt_coord, piece));
};
t3tr0s_slides.slide03.position_code = function position_code(app) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "highlight", "highlight", -800930873)).cljs$core$IFn$_invoke$arity$1(app), new cljs.core.Keyword(null, "position", "position", -2011731912)) ? "active-col-d9099" : ""], null), function() {
    var vec__26393 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
    var x = cljs.core.nth.call(null, vec__26393, 0, null);
    var y = cljs.core.nth.call(null, vec__26393, 1, null);
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), t3tr0s_slides.syntax_highlight.lit.call(null, y)), " "), t3tr0s_slides.syntax_highlight.lit.call(null, x)), "[");
  }()], null);
};
var ufv___26407 = schema.utils.use_fn_validation;
var output_schema26395_26408 = schema.core.Any;
var input_schema26396_26409 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker26397_26410 = schema.core.checker.call(null, input_schema26396_26409);
var output_checker26398_26411 = schema.core.checker.call(null, output_schema26395_26408);
t3tr0s_slides.slide03.code = function(ufv___26407, output_schema26395_26408, input_schema26396_26409, input_checker26397_26410, output_checker26398_26411) {
  return function code(G__26399, G__26400) {
    var validate__5821__auto__ = ufv___26407.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___26412 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26399, G__26400], null);
      var temp__4126__auto___26413 = input_checker26397_26410.call(null, args__5822__auto___26412);
      if (cljs.core.truth_(temp__4126__auto___26413)) {
        var error__5823__auto___26414 = temp__4126__auto___26413;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___26414)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema26396_26409, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___26412, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___26414], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__26399;
      var owner = G__26400;
      while (true) {
        if (typeof t3tr0s_slides.slide03.t26404 !== "undefined") {
        } else {
          t3tr0s_slides.slide03.t26404 = function(owner, G__26399, G__26400, validate__5821__auto__, input_schema26396, input_checker26397, output_schema26395, output_checker26398, app, ufv__, code, meta26405) {
            this.owner = owner;
            this.G__26399 = G__26399;
            this.G__26400 = G__26400;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema26396 = input_schema26396;
            this.input_checker26397 = input_checker26397;
            this.output_schema26395 = output_schema26395;
            this.output_checker26398 = output_checker26398;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta26405 = meta26405;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide03.t26404.cljs$lang$type = true;
          t3tr0s_slides.slide03.t26404.cljs$lang$ctorStr = "t3tr0s-slides.slide03/t26404";
          t3tr0s_slides.slide03.t26404.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___26407, output_schema26395_26408, input_schema26396_26409, input_checker26397_26410, output_checker26398_26411) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide03/t26404");
            };
          }(validate__5821__auto__, ufv___26407, output_schema26395_26408, input_schema26396_26409, input_checker26397_26410, output_checker26398_26411);
          t3tr0s_slides.slide03.t26404.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide03.t26404.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___26407, output_schema26395_26408, input_schema26396_26409, input_checker26397_26410, output_checker26398_26411) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " initial-state {", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " empty-board\n", "                    ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.lit.call(null, "nil")), "\n", "                    ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "nil")), "})\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " initial-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":piece")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide03.piece_code.call(null, self__.app)), "\n", "                       ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide03.position_code.call(null, self__.app)), ")\n", "\n", "  {", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ", React.DOM.span({"className":cljs.core._EQ_.call(null, 
              (new cljs.core.Keyword(null, "highlight", "highlight", -800930873)).cljs$core$IFn$_invoke$arity$1(self__.app), new cljs.core.Keyword(null, "piece", "piece", 1396691784)) ? "active-col-d9099" : ""}, sablono.interpreter.interpret.call(null, t3tr0s_slides.slide03.full_piece.call(null, t3tr0s_slides.slide03.pieces.call(null, (new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835)).cljs$core$IFn$_invoke$arity$1(self__.app))))), "\n", "   ", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide03.position_code.call(null, self__.app)), "\n", "   ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " [[ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", 
              "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", 
              "           [ 0 0 0 0 0 0 0 0 0 0 ]]}\n")));
            };
          }(validate__5821__auto__, ufv___26407, output_schema26395_26408, input_schema26396_26409, input_checker26397_26410, output_checker26398_26411);
          t3tr0s_slides.slide03.t26404.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___26407, output_schema26395_26408, input_schema26396_26409, input_checker26397_26410, output_checker26398_26411) {
            return function(_26406) {
              var self__ = this;
              var _26406__$1 = this;
              return self__.meta26405;
            };
          }(validate__5821__auto__, ufv___26407, output_schema26395_26408, input_schema26396_26409, input_checker26397_26410, output_checker26398_26411);
          t3tr0s_slides.slide03.t26404.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___26407, output_schema26395_26408, input_schema26396_26409, input_checker26397_26410, output_checker26398_26411) {
            return function(_26406, meta26405__$1) {
              var self__ = this;
              var _26406__$1 = this;
              return new t3tr0s_slides.slide03.t26404(self__.owner, self__.G__26399, self__.G__26400, self__.validate__5821__auto__, self__.input_schema26396, self__.input_checker26397, self__.output_schema26395, self__.output_checker26398, self__.app, self__.ufv__, self__.code, meta26405__$1);
            };
          }(validate__5821__auto__, ufv___26407, output_schema26395_26408, input_schema26396_26409, input_checker26397_26410, output_checker26398_26411);
          t3tr0s_slides.slide03.__GT_t26404 = function(validate__5821__auto__, ufv___26407, output_schema26395_26408, input_schema26396_26409, input_checker26397_26410, output_checker26398_26411) {
            return function __GT_t26404(owner__$1, G__26399__$1, G__26400__$1, validate__5821__auto____$1, input_schema26396__$1, input_checker26397__$1, output_schema26395__$1, output_checker26398__$1, app__$1, ufv____$1, code__$1, meta26405) {
              return new t3tr0s_slides.slide03.t26404(owner__$1, G__26399__$1, G__26400__$1, validate__5821__auto____$1, input_schema26396__$1, input_checker26397__$1, output_schema26395__$1, output_checker26398__$1, app__$1, ufv____$1, code__$1, meta26405);
            };
          }(validate__5821__auto__, ufv___26407, output_schema26395_26408, input_schema26396_26409, input_checker26397_26410, output_checker26398_26411);
        }
        return new t3tr0s_slides.slide03.t26404(owner, G__26399, G__26400, validate__5821__auto__, input_schema26396_26409, input_checker26397_26410, output_schema26395_26408, output_checker26398_26411, app, ufv___26407, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___26415 = output_checker26398_26411.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___26415)) {
        var error__5823__auto___26416 = temp__4126__auto___26415;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___26416)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema26395_26408, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___26416], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___26407, output_schema26395_26408, input_schema26396_26409, input_checker26397_26410, output_checker26398_26411);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide03.code), schema.core.make_fn_schema.call(null, output_schema26395_26408, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26396_26409], null)));
t3tr0s_slides.slide03.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide03.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m26394) {
    return om.core.build.call(null, t3tr0s_slides.slide03.code, cursor__9685__auto__, m26394);
  };
  __GT_code = function(cursor__9685__auto__, m26394) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m26394);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide03.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide03.rows);
t3tr0s_slides.slide03.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide03.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide03.cell_size);
  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [col, row], null));
};
t3tr0s_slides.slide03.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__26417, is_center) {
  var vec__26419 = p__26417;
  var x = cljs.core.nth.call(null, vec__26419, 0, null);
  var y = cljs.core.nth.call(null, vec__26419, 1, null);
  ctx.fillStyle = t3tr0s_slides.slide03.dark_purple;
  ctx.strokeStyle = t3tr0s_slides.slide03.light_purple;
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide03.cell_size * x;
  var ry = t3tr0s_slides.slide03.cell_size * y;
  var rs = t3tr0s_slides.slide03.cell_size;
  var cx = t3tr0s_slides.slide03.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide03.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide03.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide03.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__26426 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide03.piece_abs_coords.call(null, piece, pos)));
  var chunk__26427 = null;
  var count__26428 = 0;
  var i__26429 = 0;
  while (true) {
    if (i__26429 < count__26428) {
      var vec__26430 = cljs.core._nth.call(null, chunk__26427, i__26429);
      var i = cljs.core.nth.call(null, vec__26430, 0, null);
      var c = cljs.core.nth.call(null, vec__26430, 1, null);
      t3tr0s_slides.slide03.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__26432 = seq__26426;
      var G__26433 = chunk__26427;
      var G__26434 = count__26428;
      var G__26435 = i__26429 + 1;
      seq__26426 = G__26432;
      chunk__26427 = G__26433;
      count__26428 = G__26434;
      i__26429 = G__26435;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__26426);
      if (temp__4126__auto__) {
        var seq__26426__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__26426__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__26426__$1);
          var G__26436 = cljs.core.chunk_rest.call(null, seq__26426__$1);
          var G__26437 = c__4309__auto__;
          var G__26438 = cljs.core.count.call(null, c__4309__auto__);
          var G__26439 = 0;
          seq__26426 = G__26436;
          chunk__26427 = G__26437;
          count__26428 = G__26438;
          i__26429 = G__26439;
          continue;
        } else {
          var vec__26431 = cljs.core.first.call(null, seq__26426__$1);
          var i = cljs.core.nth.call(null, vec__26431, 0, null);
          var c = cljs.core.nth.call(null, vec__26431, 1, null);
          t3tr0s_slides.slide03.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__26440 = cljs.core.next.call(null, seq__26426__$1);
          var G__26441 = null;
          var G__26442 = 0;
          var G__26443 = 0;
          seq__26426 = G__26440;
          chunk__26427 = G__26441;
          count__26428 = G__26442;
          i__26429 = G__26443;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide03.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide03.cell_size * t3tr0s_slides.slide03.cols, t3tr0s_slides.slide03.cell_size * t3tr0s_slides.slide03.rows);
  return t3tr0s_slides.slide03.draw_piece_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835)).cljs$core$IFn$_invoke$arity$1(app), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app));
};
var ufv___26458 = schema.utils.use_fn_validation;
var output_schema26446_26459 = schema.core.Any;
var input_schema26447_26460 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker26448_26461 = schema.core.checker.call(null, input_schema26447_26460);
var output_checker26449_26462 = schema.core.checker.call(null, output_schema26446_26459);
t3tr0s_slides.slide03.canvas = function(ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462) {
  return function canvas(G__26450, G__26451) {
    var validate__5821__auto__ = ufv___26458.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___26463 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26450, G__26451], null);
      var temp__4126__auto___26464 = input_checker26448_26461.call(null, args__5822__auto___26463);
      if (cljs.core.truth_(temp__4126__auto___26464)) {
        var error__5823__auto___26465 = temp__4126__auto___26464;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___26465)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema26447_26460, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___26463, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___26465], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__26450;
      var owner = G__26451;
      while (true) {
        if (typeof t3tr0s_slides.slide03.t26455 !== "undefined") {
        } else {
          t3tr0s_slides.slide03.t26455 = function(G__26451, owner, input_schema26447, input_checker26448, output_schema26446, validate__5821__auto__, output_checker26449, canvas, app, ufv__, G__26450, meta26456) {
            this.G__26451 = G__26451;
            this.owner = owner;
            this.input_schema26447 = input_schema26447;
            this.input_checker26448 = input_checker26448;
            this.output_schema26446 = output_schema26446;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker26449 = output_checker26449;
            this.canvas = canvas;
            this.app = app;
            this.ufv__ = ufv__;
            this.G__26450 = G__26450;
            this.meta26456 = meta26456;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide03.t26455.cljs$lang$type = true;
          t3tr0s_slides.slide03.t26455.cljs$lang$ctorStr = "t3tr0s-slides.slide03/t26455";
          t3tr0s_slides.slide03.t26455.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide03/t26455");
            };
          }(validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462);
          t3tr0s_slides.slide03.t26455.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide03.t26455.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseMove":function(___$1, validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462) {
                return function(p1__26444_SHARP_) {
                  t3tr0s_slides.slide03.canvas_mouse.call(null, self__.app, self__.owner, p1__26444_SHARP_);
                  return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), new cljs.core.Keyword(null, "position", "position", -2011731912));
                };
              }(___$1, validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462), "onMouseLeave":function(___$1, validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462) {
                return function() {
                  om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide03.initial_pos);
                  return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), null);
                };
              }(___$1, validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462)}));
            };
          }(validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462);
          t3tr0s_slides.slide03.t26455.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide03.t26455.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide03.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462);
          t3tr0s_slides.slide03.t26455.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide03.t26455.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide03.cols * t3tr0s_slides.slide03.cell_size;
              canvas__$2.height = t3tr0s_slides.slide03.rows * t3tr0s_slides.slide03.cell_size;
              return t3tr0s_slides.slide03.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462);
          t3tr0s_slides.slide03.t26455.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462) {
            return function(_26457) {
              var self__ = this;
              var _26457__$1 = this;
              return self__.meta26456;
            };
          }(validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462);
          t3tr0s_slides.slide03.t26455.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462) {
            return function(_26457, meta26456__$1) {
              var self__ = this;
              var _26457__$1 = this;
              return new t3tr0s_slides.slide03.t26455(self__.G__26451, self__.owner, self__.input_schema26447, self__.input_checker26448, self__.output_schema26446, self__.validate__5821__auto__, self__.output_checker26449, self__.canvas, self__.app, self__.ufv__, self__.G__26450, meta26456__$1);
            };
          }(validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462);
          t3tr0s_slides.slide03.__GT_t26455 = function(validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462) {
            return function __GT_t26455(G__26451__$1, owner__$1, input_schema26447__$1, input_checker26448__$1, output_schema26446__$1, validate__5821__auto____$1, output_checker26449__$1, canvas__$1, app__$1, ufv____$1, G__26450__$1, meta26456) {
              return new t3tr0s_slides.slide03.t26455(G__26451__$1, owner__$1, input_schema26447__$1, input_checker26448__$1, output_schema26446__$1, validate__5821__auto____$1, output_checker26449__$1, canvas__$1, app__$1, ufv____$1, G__26450__$1, meta26456);
            };
          }(validate__5821__auto__, ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462);
        }
        return new t3tr0s_slides.slide03.t26455(G__26451, owner, input_schema26447_26460, input_checker26448_26461, output_schema26446_26459, validate__5821__auto__, output_checker26449_26462, canvas, app, ufv___26458, G__26450, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___26466 = output_checker26449_26462.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___26466)) {
        var error__5823__auto___26467 = temp__4126__auto___26466;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___26467)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema26446_26459, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___26467], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___26458, output_schema26446_26459, input_schema26447_26460, input_checker26448_26461, output_checker26449_26462);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide03.canvas), schema.core.make_fn_schema.call(null, output_schema26446_26459, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26447_26460], null)));
t3tr0s_slides.slide03.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide03.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m26445) {
    return om.core.build.call(null, t3tr0s_slides.slide03.canvas, cursor__9685__auto__, m26445);
  };
  __GT_canvas = function(cursor__9685__auto__, m26445) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m26445);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___26485 = schema.utils.use_fn_validation;
var output_schema26469_26486 = schema.core.Any;
var input_schema26470_26487 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker26471_26488 = schema.core.checker.call(null, input_schema26470_26487);
var output_checker26472_26489 = schema.core.checker.call(null, output_schema26469_26486);
t3tr0s_slides.slide03.slide = function(ufv___26485, output_schema26469_26486, input_schema26470_26487, input_checker26471_26488, output_checker26472_26489) {
  return function slide(G__26473, G__26474) {
    var validate__5821__auto__ = ufv___26485.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___26490 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__26473, G__26474], null);
      var temp__4126__auto___26491 = input_checker26471_26488.call(null, args__5822__auto___26490);
      if (cljs.core.truth_(temp__4126__auto___26491)) {
        var error__5823__auto___26492 = temp__4126__auto___26491;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___26492)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema26470_26487, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___26490, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___26492], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__26473;
      var owner = G__26474;
      while (true) {
        if (typeof t3tr0s_slides.slide03.t26480 !== "undefined") {
        } else {
          t3tr0s_slides.slide03.t26480 = function(owner, G__26474, validate__5821__auto__, G__26473, input_checker26471, slide, app, input_schema26470, ufv__, output_checker26472, output_schema26469, meta26481) {
            this.owner = owner;
            this.G__26474 = G__26474;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__26473 = G__26473;
            this.input_checker26471 = input_checker26471;
            this.slide = slide;
            this.app = app;
            this.input_schema26470 = input_schema26470;
            this.ufv__ = ufv__;
            this.output_checker26472 = output_checker26472;
            this.output_schema26469 = output_schema26469;
            this.meta26481 = meta26481;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide03.t26480.cljs$lang$type = true;
          t3tr0s_slides.slide03.t26480.cljs$lang$ctorStr = "t3tr0s-slides.slide03/t26480";
          t3tr0s_slides.slide03.t26480.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___26485, output_schema26469_26486, input_schema26470_26487, input_checker26471_26488, output_checker26472_26489) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide03/t26480");
            };
          }(validate__5821__auto__, ufv___26485, output_schema26469_26486, input_schema26470_26487, input_checker26471_26488, output_checker26472_26489);
          t3tr0s_slides.slide03.t26480.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide03.t26480.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___26485, output_schema26469_26486, input_schema26470_26487, input_checker26471_26488, output_checker26472_26489) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "3. Create initial state."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide03.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide03.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___26485, output_schema26469_26486, input_schema26470_26487, input_checker26471_26488, output_checker26472_26489);
          t3tr0s_slides.slide03.t26480.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___26485, output_schema26469_26486, input_schema26470_26487, input_checker26471_26488, output_checker26472_26489) {
            return function(_26482) {
              var self__ = this;
              var _26482__$1 = this;
              return self__.meta26481;
            };
          }(validate__5821__auto__, ufv___26485, output_schema26469_26486, input_schema26470_26487, input_checker26471_26488, output_checker26472_26489);
          t3tr0s_slides.slide03.t26480.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___26485, output_schema26469_26486, input_schema26470_26487, input_checker26471_26488, output_checker26472_26489) {
            return function(_26482, meta26481__$1) {
              var self__ = this;
              var _26482__$1 = this;
              return new t3tr0s_slides.slide03.t26480(self__.owner, self__.G__26474, self__.validate__5821__auto__, self__.G__26473, self__.input_checker26471, self__.slide, self__.app, self__.input_schema26470, self__.ufv__, self__.output_checker26472, self__.output_schema26469, meta26481__$1);
            };
          }(validate__5821__auto__, ufv___26485, output_schema26469_26486, input_schema26470_26487, input_checker26471_26488, output_checker26472_26489);
          t3tr0s_slides.slide03.__GT_t26480 = function(validate__5821__auto__, ufv___26485, output_schema26469_26486, input_schema26470_26487, input_checker26471_26488, output_checker26472_26489) {
            return function __GT_t26480(owner__$1, G__26474__$1, validate__5821__auto____$1, G__26473__$1, input_checker26471__$1, slide__$1, app__$1, input_schema26470__$1, ufv____$1, output_checker26472__$1, output_schema26469__$1, meta26481) {
              return new t3tr0s_slides.slide03.t26480(owner__$1, G__26474__$1, validate__5821__auto____$1, G__26473__$1, input_checker26471__$1, slide__$1, app__$1, input_schema26470__$1, ufv____$1, output_checker26472__$1, output_schema26469__$1, meta26481);
            };
          }(validate__5821__auto__, ufv___26485, output_schema26469_26486, input_schema26470_26487, input_checker26471_26488, output_checker26472_26489);
        }
        return new t3tr0s_slides.slide03.t26480(owner, G__26474, validate__5821__auto__, G__26473, input_checker26471_26488, slide, app, input_schema26470_26487, ufv___26485, output_checker26472_26489, output_schema26469_26486, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___26493 = output_checker26472_26489.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___26493)) {
        var error__5823__auto___26494 = temp__4126__auto___26493;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___26494)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema26469_26486, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___26494], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___26485, output_schema26469_26486, input_schema26470_26487, input_checker26471_26488, output_checker26472_26489);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide03.slide), schema.core.make_fn_schema.call(null, output_schema26469_26486, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema26470_26487], null)));
t3tr0s_slides.slide03.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide03.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m26468) {
    return om.core.build.call(null, t3tr0s_slides.slide03.slide, cursor__9685__auto__, m26468);
  };
  __GT_slide = function(cursor__9685__auto__, m26468) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m26468);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide03.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide03.slide, t3tr0s_slides.slide03.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide03.resume = function resume() {
  return null;
};
t3tr0s_slides.slide03.stop = function stop() {
  return null;
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__57339 = level + 1;
        level = G__57339;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_57340 = 0;
    while (true) {
      if (i_57340 < arr.length) {
        arr[i_57340] = null;
        var G__57341 = i_57340 + 1;
        i_57340 = G__57341;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__57342 = x_SINGLEQUOTE_;
                x__$1 = G__57342;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__57343 = x__$1;
        var G__57344 = k;
        var G__57345 = level - 1;
        var G__57346 = update;
        x = G__57343;
        k = G__57344;
        level = G__57345;
        update = G__57346;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_57347 = self__.level + 1;
      while (true) {
        if (i_57347 <= new_level + 1) {
          update[i_57347] = self__.header;
          var G__57348 = i_57347 + 1;
          i_57347 = G__57348;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_57349 = 0;
    while (true) {
      if (i_57349 <= self__.level) {
        var links_57350 = update[i_57349].forward;
        if (links_57350[i_57349] === x__$1) {
          links_57350[i_57349] = x__$1.forward[i_57349];
          var G__57351 = i_57349 + 1;
          i_57349 = G__57351;
          continue;
        } else {
          var G__57352 = i_57349 + 1;
          i_57349 = G__57352;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__57353 = x_SINGLEQUOTE_;
              x__$1 = G__57353;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__57354 = nx;
        var G__57355 = level__$1 - 1;
        x = G__57354;
        level__$1 = G__57355;
        continue;
      } else {
        var G__57356 = x;
        var G__57357 = level__$1 - 1;
        x = G__57356;
        level__$1 = G__57357;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__57358 = x_SINGLEQUOTE_;
              x__$1 = G__57358;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__57359 = nx;
        var G__57360 = level__$1 - 1;
        x = G__57359;
        level__$1 = G__57360;
        continue;
      } else {
        var G__57361 = x;
        var G__57362 = level__$1 - 1;
        x = G__57361;
        level__$1 = G__57362;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3553__auto__ = cljs.core.truth_(function() {
    var and__3541__auto__ = me;
    if (cljs.core.truth_(and__3541__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3541__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3553__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3553__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t54690 !== "undefined") {
  } else {
    cljs.core.async.t54690 = function(f, fn_handler, meta54691) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta54691 = meta54691;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t54690.cljs$lang$type = true;
    cljs.core.async.t54690.cljs$lang$ctorStr = "cljs.core.async/t54690";
    cljs.core.async.t54690.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t54690");
    };
    cljs.core.async.t54690.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t54690.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t54690.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t54690.prototype.cljs$core$IMeta$_meta$arity$1 = function(_54692) {
      var self__ = this;
      var _54692__$1 = this;
      return self__.meta54691;
    };
    cljs.core.async.t54690.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_54692, meta54691__$1) {
      var self__ = this;
      var _54692__$1 = this;
      return new cljs.core.async.t54690(self__.f, self__.fn_handler, meta54691__$1);
    };
    cljs.core.async.__GT_t54690 = function __GT_t54690(f__$1, fn_handler__$1, meta54691) {
      return new cljs.core.async.t54690(f__$1, fn_handler__$1, meta54691);
    };
  }
  return new cljs.core.async.t54690(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__54694 = buff;
  if (G__54694) {
    var bit__4203__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3553__auto__ = bit__4203__auto__;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return G__54694.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__54694.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__54694);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__54694);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_54695 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_54695);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_54695, ret) {
          return function() {
            return fn1.call(null, val_54695);
          };
        }(val_54695, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4409__auto___54696 = n;
  var x_54697 = 0;
  while (true) {
    if (x_54697 < n__4409__auto___54696) {
      a[x_54697] = 0;
      var G__54698 = x_54697 + 1;
      x_54697 = G__54698;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__54699 = i + 1;
      i = G__54699;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t54703 !== "undefined") {
  } else {
    cljs.core.async.t54703 = function(flag, alt_flag, meta54704) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta54704 = meta54704;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t54703.cljs$lang$type = true;
    cljs.core.async.t54703.cljs$lang$ctorStr = "cljs.core.async/t54703";
    cljs.core.async.t54703.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
        return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t54703");
      };
    }(flag);
    cljs.core.async.t54703.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t54703.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t54703.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t54703.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_54705) {
        var self__ = this;
        var _54705__$1 = this;
        return self__.meta54704;
      };
    }(flag);
    cljs.core.async.t54703.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_54705, meta54704__$1) {
        var self__ = this;
        var _54705__$1 = this;
        return new cljs.core.async.t54703(self__.flag, self__.alt_flag, meta54704__$1);
      };
    }(flag);
    cljs.core.async.__GT_t54703 = function(flag) {
      return function __GT_t54703(flag__$1, alt_flag__$1, meta54704) {
        return new cljs.core.async.t54703(flag__$1, alt_flag__$1, meta54704);
      };
    }(flag);
  }
  return new cljs.core.async.t54703(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t54709 !== "undefined") {
  } else {
    cljs.core.async.t54709 = function(cb, flag, alt_handler, meta54710) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta54710 = meta54710;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t54709.cljs$lang$type = true;
    cljs.core.async.t54709.cljs$lang$ctorStr = "cljs.core.async/t54709";
    cljs.core.async.t54709.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t54709");
    };
    cljs.core.async.t54709.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t54709.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t54709.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t54709.prototype.cljs$core$IMeta$_meta$arity$1 = function(_54711) {
      var self__ = this;
      var _54711__$1 = this;
      return self__.meta54710;
    };
    cljs.core.async.t54709.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_54711, meta54710__$1) {
      var self__ = this;
      var _54711__$1 = this;
      return new cljs.core.async.t54709(self__.cb, self__.flag, self__.alt_handler, meta54710__$1);
    };
    cljs.core.async.__GT_t54709 = function __GT_t54709(cb__$1, flag__$1, alt_handler__$1, meta54710) {
      return new cljs.core.async.t54709(cb__$1, flag__$1, alt_handler__$1, meta54710);
    };
  }
  return new cljs.core.async.t54709(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__54712_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__54712_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__54713_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__54713_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3553__auto__ = wport;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__54714 = i + 1;
          i = G__54714;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3553__auto__ = ret;
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3541__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3541__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3541__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__54715) {
    var map__54717 = p__54715;
    var map__54717__$1 = cljs.core.seq_QMARK_.call(null, map__54717) ? cljs.core.apply.call(null, cljs.core.hash_map, map__54717) : map__54717;
    var opts = map__54717__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__54715 = null;
    if (arguments.length > 1) {
      p__54715 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__54715);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__54718) {
    var ports = cljs.core.first(arglist__54718);
    var p__54715 = cljs.core.rest(arglist__54718);
    return alts_BANG___delegate(ports, p__54715);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t54726 !== "undefined") {
  } else {
    cljs.core.async.t54726 = function(ch, f, map_LT_, meta54727) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta54727 = meta54727;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t54726.cljs$lang$type = true;
    cljs.core.async.t54726.cljs$lang$ctorStr = "cljs.core.async/t54726";
    cljs.core.async.t54726.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t54726");
    };
    cljs.core.async.t54726.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t54726.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t54726.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t54726.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t54729 !== "undefined") {
        } else {
          cljs.core.async.t54729 = function(fn1, _, meta54727, ch, f, map_LT_, meta54730) {
            this.fn1 = fn1;
            this._ = _;
            this.meta54727 = meta54727;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta54730 = meta54730;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t54729.cljs$lang$type = true;
          cljs.core.async.t54729.cljs$lang$ctorStr = "cljs.core.async/t54729";
          cljs.core.async.t54729.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t54729");
            };
          }(___$1);
          cljs.core.async.t54729.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t54729.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t54729.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t54729.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$4, ___$1) {
                return function(p1__54719_SHARP_) {
                  return f1.call(null, p1__54719_SHARP_ == null ? null : self__.f.call(null, p1__54719_SHARP_));
                };
              }(f1, ___$4, ___$1);
            };
          }(___$1);
          cljs.core.async.t54729.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_54731) {
              var self__ = this;
              var _54731__$1 = this;
              return self__.meta54730;
            };
          }(___$1);
          cljs.core.async.t54729.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_54731, meta54730__$1) {
              var self__ = this;
              var _54731__$1 = this;
              return new cljs.core.async.t54729(self__.fn1, self__._, self__.meta54727, self__.ch, self__.f, self__.map_LT_, meta54730__$1);
            };
          }(___$1);
          cljs.core.async.__GT_t54729 = function(___$1) {
            return function __GT_t54729(fn1__$1, ___$2, meta54727__$1, ch__$2, f__$2, map_LT___$2, meta54730) {
              return new cljs.core.async.t54729(fn1__$1, ___$2, meta54727__$1, ch__$2, f__$2, map_LT___$2, meta54730);
            };
          }(___$1);
        }
        return new cljs.core.async.t54729(fn1, ___$1, self__.meta54727, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3541__auto__ = ret;
        if (cljs.core.truth_(and__3541__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3541__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t54726.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t54726.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t54726.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t54726.prototype.cljs$core$IMeta$_meta$arity$1 = function(_54728) {
      var self__ = this;
      var _54728__$1 = this;
      return self__.meta54727;
    };
    cljs.core.async.t54726.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_54728, meta54727__$1) {
      var self__ = this;
      var _54728__$1 = this;
      return new cljs.core.async.t54726(self__.ch, self__.f, self__.map_LT_, meta54727__$1);
    };
    cljs.core.async.__GT_t54726 = function __GT_t54726(ch__$1, f__$1, map_LT___$1, meta54727) {
      return new cljs.core.async.t54726(ch__$1, f__$1, map_LT___$1, meta54727);
    };
  }
  return new cljs.core.async.t54726(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t54735 !== "undefined") {
  } else {
    cljs.core.async.t54735 = function(ch, f, map_GT_, meta54736) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta54736 = meta54736;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t54735.cljs$lang$type = true;
    cljs.core.async.t54735.cljs$lang$ctorStr = "cljs.core.async/t54735";
    cljs.core.async.t54735.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t54735");
    };
    cljs.core.async.t54735.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t54735.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t54735.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t54735.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t54735.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t54735.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t54735.prototype.cljs$core$IMeta$_meta$arity$1 = function(_54737) {
      var self__ = this;
      var _54737__$1 = this;
      return self__.meta54736;
    };
    cljs.core.async.t54735.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_54737, meta54736__$1) {
      var self__ = this;
      var _54737__$1 = this;
      return new cljs.core.async.t54735(self__.ch, self__.f, self__.map_GT_, meta54736__$1);
    };
    cljs.core.async.__GT_t54735 = function __GT_t54735(ch__$1, f__$1, map_GT___$1, meta54736) {
      return new cljs.core.async.t54735(ch__$1, f__$1, map_GT___$1, meta54736);
    };
  }
  return new cljs.core.async.t54735(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t54741 !== "undefined") {
  } else {
    cljs.core.async.t54741 = function(ch, p, filter_GT_, meta54742) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta54742 = meta54742;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t54741.cljs$lang$type = true;
    cljs.core.async.t54741.cljs$lang$ctorStr = "cljs.core.async/t54741";
    cljs.core.async.t54741.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t54741");
    };
    cljs.core.async.t54741.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t54741.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t54741.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t54741.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t54741.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t54741.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t54741.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t54741.prototype.cljs$core$IMeta$_meta$arity$1 = function(_54743) {
      var self__ = this;
      var _54743__$1 = this;
      return self__.meta54742;
    };
    cljs.core.async.t54741.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_54743, meta54742__$1) {
      var self__ = this;
      var _54743__$1 = this;
      return new cljs.core.async.t54741(self__.ch, self__.p, self__.filter_GT_, meta54742__$1);
    };
    cljs.core.async.__GT_t54741 = function __GT_t54741(ch__$1, p__$1, filter_GT___$1, meta54742) {
      return new cljs.core.async.t54741(ch__$1, p__$1, filter_GT___$1, meta54742);
    };
  }
  return new cljs.core.async.t54741(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__51756__auto___54826 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto___54826, out) {
      return function() {
        var f__51757__auto__ = function() {
          var switch__51741__auto__ = function(c__51756__auto___54826, out) {
            return function(state_54805) {
              var state_val_54806 = state_54805[1];
              if (state_val_54806 === 7) {
                var inst_54801 = state_54805[2];
                var state_54805__$1 = state_54805;
                var statearr_54807_54827 = state_54805__$1;
                statearr_54807_54827[2] = inst_54801;
                statearr_54807_54827[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_54806 === 1) {
                  var state_54805__$1 = state_54805;
                  var statearr_54808_54828 = state_54805__$1;
                  statearr_54808_54828[2] = null;
                  statearr_54808_54828[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_54806 === 4) {
                    var inst_54787 = state_54805[7];
                    var inst_54787__$1 = state_54805[2];
                    var inst_54788 = inst_54787__$1 == null;
                    var state_54805__$1 = function() {
                      var statearr_54809 = state_54805;
                      statearr_54809[7] = inst_54787__$1;
                      return statearr_54809;
                    }();
                    if (cljs.core.truth_(inst_54788)) {
                      var statearr_54810_54829 = state_54805__$1;
                      statearr_54810_54829[1] = 5;
                    } else {
                      var statearr_54811_54830 = state_54805__$1;
                      statearr_54811_54830[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_54806 === 6) {
                      var inst_54787 = state_54805[7];
                      var inst_54792 = p.call(null, inst_54787);
                      var state_54805__$1 = state_54805;
                      if (cljs.core.truth_(inst_54792)) {
                        var statearr_54812_54831 = state_54805__$1;
                        statearr_54812_54831[1] = 8;
                      } else {
                        var statearr_54813_54832 = state_54805__$1;
                        statearr_54813_54832[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_54806 === 3) {
                        var inst_54803 = state_54805[2];
                        var state_54805__$1 = state_54805;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_54805__$1, inst_54803);
                      } else {
                        if (state_val_54806 === 2) {
                          var state_54805__$1 = state_54805;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_54805__$1, 4, ch);
                        } else {
                          if (state_val_54806 === 11) {
                            var inst_54795 = state_54805[2];
                            var state_54805__$1 = state_54805;
                            var statearr_54814_54833 = state_54805__$1;
                            statearr_54814_54833[2] = inst_54795;
                            statearr_54814_54833[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_54806 === 9) {
                              var state_54805__$1 = state_54805;
                              var statearr_54815_54834 = state_54805__$1;
                              statearr_54815_54834[2] = null;
                              statearr_54815_54834[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_54806 === 5) {
                                var inst_54790 = cljs.core.async.close_BANG_.call(null, out);
                                var state_54805__$1 = state_54805;
                                var statearr_54816_54835 = state_54805__$1;
                                statearr_54816_54835[2] = inst_54790;
                                statearr_54816_54835[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_54806 === 10) {
                                  var inst_54798 = state_54805[2];
                                  var state_54805__$1 = function() {
                                    var statearr_54817 = state_54805;
                                    statearr_54817[8] = inst_54798;
                                    return statearr_54817;
                                  }();
                                  var statearr_54818_54836 = state_54805__$1;
                                  statearr_54818_54836[2] = null;
                                  statearr_54818_54836[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_54806 === 8) {
                                    var inst_54787 = state_54805[7];
                                    var state_54805__$1 = state_54805;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_54805__$1, 11, out, inst_54787);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__51756__auto___54826, out);
          return function(switch__51741__auto__, c__51756__auto___54826, out) {
            return function() {
              var state_machine__51742__auto__ = null;
              var state_machine__51742__auto____0 = function() {
                var statearr_54822 = [null, null, null, null, null, null, null, null, null];
                statearr_54822[0] = state_machine__51742__auto__;
                statearr_54822[1] = 1;
                return statearr_54822;
              };
              var state_machine__51742__auto____1 = function(state_54805) {
                while (true) {
                  var ret_value__51743__auto__ = function() {
                    try {
                      while (true) {
                        var result__51744__auto__ = switch__51741__auto__.call(null, state_54805);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__51744__auto__;
                        }
                        break;
                      }
                    } catch (e54823) {
                      if (e54823 instanceof Object) {
                        var ex__51745__auto__ = e54823;
                        var statearr_54824_54837 = state_54805;
                        statearr_54824_54837[5] = ex__51745__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_54805);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e54823;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__54838 = state_54805;
                    state_54805 = G__54838;
                    continue;
                  } else {
                    return ret_value__51743__auto__;
                  }
                  break;
                }
              };
              state_machine__51742__auto__ = function(state_54805) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__51742__auto____0.call(this);
                  case 1:
                    return state_machine__51742__auto____1.call(this, state_54805);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
              return state_machine__51742__auto__;
            }();
          }(switch__51741__auto__, c__51756__auto___54826, out);
        }();
        var state__51758__auto__ = function() {
          var statearr_54825 = f__51757__auto__.call(null);
          statearr_54825[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto___54826;
          return statearr_54825;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
      };
    }(c__51756__auto___54826, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__51756__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto__) {
    return function() {
      var f__51757__auto__ = function() {
        var switch__51741__auto__ = function(c__51756__auto__) {
          return function(state_55004) {
            var state_val_55005 = state_55004[1];
            if (state_val_55005 === 7) {
              var inst_55000 = state_55004[2];
              var state_55004__$1 = state_55004;
              var statearr_55006_55047 = state_55004__$1;
              statearr_55006_55047[2] = inst_55000;
              statearr_55006_55047[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_55005 === 20) {
                var inst_54970 = state_55004[7];
                var inst_54981 = state_55004[2];
                var inst_54982 = cljs.core.next.call(null, inst_54970);
                var inst_54956 = inst_54982;
                var inst_54957 = null;
                var inst_54958 = 0;
                var inst_54959 = 0;
                var state_55004__$1 = function() {
                  var statearr_55007 = state_55004;
                  statearr_55007[8] = inst_54956;
                  statearr_55007[9] = inst_54959;
                  statearr_55007[10] = inst_54958;
                  statearr_55007[11] = inst_54957;
                  statearr_55007[12] = inst_54981;
                  return statearr_55007;
                }();
                var statearr_55008_55048 = state_55004__$1;
                statearr_55008_55048[2] = null;
                statearr_55008_55048[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_55005 === 1) {
                  var state_55004__$1 = state_55004;
                  var statearr_55009_55049 = state_55004__$1;
                  statearr_55009_55049[2] = null;
                  statearr_55009_55049[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_55005 === 4) {
                    var inst_54945 = state_55004[13];
                    var inst_54945__$1 = state_55004[2];
                    var inst_54946 = inst_54945__$1 == null;
                    var state_55004__$1 = function() {
                      var statearr_55010 = state_55004;
                      statearr_55010[13] = inst_54945__$1;
                      return statearr_55010;
                    }();
                    if (cljs.core.truth_(inst_54946)) {
                      var statearr_55011_55050 = state_55004__$1;
                      statearr_55011_55050[1] = 5;
                    } else {
                      var statearr_55012_55051 = state_55004__$1;
                      statearr_55012_55051[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_55005 === 15) {
                      var state_55004__$1 = state_55004;
                      var statearr_55016_55052 = state_55004__$1;
                      statearr_55016_55052[2] = null;
                      statearr_55016_55052[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_55005 === 21) {
                        var state_55004__$1 = state_55004;
                        var statearr_55017_55053 = state_55004__$1;
                        statearr_55017_55053[2] = null;
                        statearr_55017_55053[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_55005 === 13) {
                          var inst_54956 = state_55004[8];
                          var inst_54959 = state_55004[9];
                          var inst_54958 = state_55004[10];
                          var inst_54957 = state_55004[11];
                          var inst_54966 = state_55004[2];
                          var inst_54967 = inst_54959 + 1;
                          var tmp55013 = inst_54956;
                          var tmp55014 = inst_54958;
                          var tmp55015 = inst_54957;
                          var inst_54956__$1 = tmp55013;
                          var inst_54957__$1 = tmp55015;
                          var inst_54958__$1 = tmp55014;
                          var inst_54959__$1 = inst_54967;
                          var state_55004__$1 = function() {
                            var statearr_55018 = state_55004;
                            statearr_55018[8] = inst_54956__$1;
                            statearr_55018[9] = inst_54959__$1;
                            statearr_55018[10] = inst_54958__$1;
                            statearr_55018[14] = inst_54966;
                            statearr_55018[11] = inst_54957__$1;
                            return statearr_55018;
                          }();
                          var statearr_55019_55054 = state_55004__$1;
                          statearr_55019_55054[2] = null;
                          statearr_55019_55054[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_55005 === 22) {
                            var state_55004__$1 = state_55004;
                            var statearr_55020_55055 = state_55004__$1;
                            statearr_55020_55055[2] = null;
                            statearr_55020_55055[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_55005 === 6) {
                              var inst_54945 = state_55004[13];
                              var inst_54954 = f.call(null, inst_54945);
                              var inst_54955 = cljs.core.seq.call(null, inst_54954);
                              var inst_54956 = inst_54955;
                              var inst_54957 = null;
                              var inst_54958 = 0;
                              var inst_54959 = 0;
                              var state_55004__$1 = function() {
                                var statearr_55021 = state_55004;
                                statearr_55021[8] = inst_54956;
                                statearr_55021[9] = inst_54959;
                                statearr_55021[10] = inst_54958;
                                statearr_55021[11] = inst_54957;
                                return statearr_55021;
                              }();
                              var statearr_55022_55056 = state_55004__$1;
                              statearr_55022_55056[2] = null;
                              statearr_55022_55056[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_55005 === 17) {
                                var inst_54970 = state_55004[7];
                                var inst_54974 = cljs.core.chunk_first.call(null, inst_54970);
                                var inst_54975 = cljs.core.chunk_rest.call(null, inst_54970);
                                var inst_54976 = cljs.core.count.call(null, inst_54974);
                                var inst_54956 = inst_54975;
                                var inst_54957 = inst_54974;
                                var inst_54958 = inst_54976;
                                var inst_54959 = 0;
                                var state_55004__$1 = function() {
                                  var statearr_55023 = state_55004;
                                  statearr_55023[8] = inst_54956;
                                  statearr_55023[9] = inst_54959;
                                  statearr_55023[10] = inst_54958;
                                  statearr_55023[11] = inst_54957;
                                  return statearr_55023;
                                }();
                                var statearr_55024_55057 = state_55004__$1;
                                statearr_55024_55057[2] = null;
                                statearr_55024_55057[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_55005 === 3) {
                                  var inst_55002 = state_55004[2];
                                  var state_55004__$1 = state_55004;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_55004__$1, inst_55002);
                                } else {
                                  if (state_val_55005 === 12) {
                                    var inst_54990 = state_55004[2];
                                    var state_55004__$1 = state_55004;
                                    var statearr_55025_55058 = state_55004__$1;
                                    statearr_55025_55058[2] = inst_54990;
                                    statearr_55025_55058[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_55005 === 2) {
                                      var state_55004__$1 = state_55004;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_55004__$1, 4, in$);
                                    } else {
                                      if (state_val_55005 === 23) {
                                        var inst_54998 = state_55004[2];
                                        var state_55004__$1 = state_55004;
                                        var statearr_55026_55059 = state_55004__$1;
                                        statearr_55026_55059[2] = inst_54998;
                                        statearr_55026_55059[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_55005 === 19) {
                                          var inst_54985 = state_55004[2];
                                          var state_55004__$1 = state_55004;
                                          var statearr_55027_55060 = state_55004__$1;
                                          statearr_55027_55060[2] = inst_54985;
                                          statearr_55027_55060[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_55005 === 11) {
                                            var inst_54956 = state_55004[8];
                                            var inst_54970 = state_55004[7];
                                            var inst_54970__$1 = cljs.core.seq.call(null, inst_54956);
                                            var state_55004__$1 = function() {
                                              var statearr_55028 = state_55004;
                                              statearr_55028[7] = inst_54970__$1;
                                              return statearr_55028;
                                            }();
                                            if (inst_54970__$1) {
                                              var statearr_55029_55061 = state_55004__$1;
                                              statearr_55029_55061[1] = 14;
                                            } else {
                                              var statearr_55030_55062 = state_55004__$1;
                                              statearr_55030_55062[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_55005 === 9) {
                                              var inst_54992 = state_55004[2];
                                              var inst_54993 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_55004__$1 = function() {
                                                var statearr_55031 = state_55004;
                                                statearr_55031[15] = inst_54992;
                                                return statearr_55031;
                                              }();
                                              if (cljs.core.truth_(inst_54993)) {
                                                var statearr_55032_55063 = state_55004__$1;
                                                statearr_55032_55063[1] = 21;
                                              } else {
                                                var statearr_55033_55064 = state_55004__$1;
                                                statearr_55033_55064[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_55005 === 5) {
                                                var inst_54948 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_55004__$1 = state_55004;
                                                var statearr_55034_55065 = state_55004__$1;
                                                statearr_55034_55065[2] = inst_54948;
                                                statearr_55034_55065[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_55005 === 14) {
                                                  var inst_54970 = state_55004[7];
                                                  var inst_54972 = cljs.core.chunked_seq_QMARK_.call(null, inst_54970);
                                                  var state_55004__$1 = state_55004;
                                                  if (inst_54972) {
                                                    var statearr_55035_55066 = state_55004__$1;
                                                    statearr_55035_55066[1] = 17;
                                                  } else {
                                                    var statearr_55036_55067 = state_55004__$1;
                                                    statearr_55036_55067[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_55005 === 16) {
                                                    var inst_54988 = state_55004[2];
                                                    var state_55004__$1 = state_55004;
                                                    var statearr_55037_55068 = state_55004__$1;
                                                    statearr_55037_55068[2] = inst_54988;
                                                    statearr_55037_55068[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_55005 === 10) {
                                                      var inst_54959 = state_55004[9];
                                                      var inst_54957 = state_55004[11];
                                                      var inst_54964 = cljs.core._nth.call(null, inst_54957, inst_54959);
                                                      var state_55004__$1 = state_55004;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_55004__$1, 13, out, inst_54964);
                                                    } else {
                                                      if (state_val_55005 === 18) {
                                                        var inst_54970 = state_55004[7];
                                                        var inst_54979 = cljs.core.first.call(null, inst_54970);
                                                        var state_55004__$1 = state_55004;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_55004__$1, 20, out, inst_54979);
                                                      } else {
                                                        if (state_val_55005 === 8) {
                                                          var inst_54959 = state_55004[9];
                                                          var inst_54958 = state_55004[10];
                                                          var inst_54961 = inst_54959 < inst_54958;
                                                          var inst_54962 = inst_54961;
                                                          var state_55004__$1 = state_55004;
                                                          if (cljs.core.truth_(inst_54962)) {
                                                            var statearr_55038_55069 = state_55004__$1;
                                                            statearr_55038_55069[1] = 10;
                                                          } else {
                                                            var statearr_55039_55070 = state_55004__$1;
                                                            statearr_55039_55070[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__51756__auto__);
        return function(switch__51741__auto__, c__51756__auto__) {
          return function() {
            var state_machine__51742__auto__ = null;
            var state_machine__51742__auto____0 = function() {
              var statearr_55043 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_55043[0] = state_machine__51742__auto__;
              statearr_55043[1] = 1;
              return statearr_55043;
            };
            var state_machine__51742__auto____1 = function(state_55004) {
              while (true) {
                var ret_value__51743__auto__ = function() {
                  try {
                    while (true) {
                      var result__51744__auto__ = switch__51741__auto__.call(null, state_55004);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__51744__auto__;
                      }
                      break;
                    }
                  } catch (e55044) {
                    if (e55044 instanceof Object) {
                      var ex__51745__auto__ = e55044;
                      var statearr_55045_55071 = state_55004;
                      statearr_55045_55071[5] = ex__51745__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_55004);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e55044;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__55072 = state_55004;
                  state_55004 = G__55072;
                  continue;
                } else {
                  return ret_value__51743__auto__;
                }
                break;
              }
            };
            state_machine__51742__auto__ = function(state_55004) {
              switch(arguments.length) {
                case 0:
                  return state_machine__51742__auto____0.call(this);
                case 1:
                  return state_machine__51742__auto____1.call(this, state_55004);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
            state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
            return state_machine__51742__auto__;
          }();
        }(switch__51741__auto__, c__51756__auto__);
      }();
      var state__51758__auto__ = function() {
        var statearr_55046 = f__51757__auto__.call(null);
        statearr_55046[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto__;
        return statearr_55046;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
    };
  }(c__51756__auto__));
  return c__51756__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__51756__auto___55167 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto___55167) {
      return function() {
        var f__51757__auto__ = function() {
          var switch__51741__auto__ = function(c__51756__auto___55167) {
            return function(state_55143) {
              var state_val_55144 = state_55143[1];
              if (state_val_55144 === 7) {
                var inst_55139 = state_55143[2];
                var state_55143__$1 = state_55143;
                var statearr_55145_55168 = state_55143__$1;
                statearr_55145_55168[2] = inst_55139;
                statearr_55145_55168[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_55144 === 1) {
                  var state_55143__$1 = state_55143;
                  var statearr_55146_55169 = state_55143__$1;
                  statearr_55146_55169[2] = null;
                  statearr_55146_55169[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_55144 === 4) {
                    var inst_55122 = state_55143[7];
                    var inst_55122__$1 = state_55143[2];
                    var inst_55123 = inst_55122__$1 == null;
                    var state_55143__$1 = function() {
                      var statearr_55147 = state_55143;
                      statearr_55147[7] = inst_55122__$1;
                      return statearr_55147;
                    }();
                    if (cljs.core.truth_(inst_55123)) {
                      var statearr_55148_55170 = state_55143__$1;
                      statearr_55148_55170[1] = 5;
                    } else {
                      var statearr_55149_55171 = state_55143__$1;
                      statearr_55149_55171[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_55144 === 13) {
                      var state_55143__$1 = state_55143;
                      var statearr_55150_55172 = state_55143__$1;
                      statearr_55150_55172[2] = null;
                      statearr_55150_55172[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_55144 === 6) {
                        var inst_55122 = state_55143[7];
                        var state_55143__$1 = state_55143;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_55143__$1, 11, to, inst_55122);
                      } else {
                        if (state_val_55144 === 3) {
                          var inst_55141 = state_55143[2];
                          var state_55143__$1 = state_55143;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_55143__$1, inst_55141);
                        } else {
                          if (state_val_55144 === 12) {
                            var state_55143__$1 = state_55143;
                            var statearr_55151_55173 = state_55143__$1;
                            statearr_55151_55173[2] = null;
                            statearr_55151_55173[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_55144 === 2) {
                              var state_55143__$1 = state_55143;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_55143__$1, 4, from);
                            } else {
                              if (state_val_55144 === 11) {
                                var inst_55132 = state_55143[2];
                                var state_55143__$1 = state_55143;
                                if (cljs.core.truth_(inst_55132)) {
                                  var statearr_55152_55174 = state_55143__$1;
                                  statearr_55152_55174[1] = 12;
                                } else {
                                  var statearr_55153_55175 = state_55143__$1;
                                  statearr_55153_55175[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_55144 === 9) {
                                  var state_55143__$1 = state_55143;
                                  var statearr_55154_55176 = state_55143__$1;
                                  statearr_55154_55176[2] = null;
                                  statearr_55154_55176[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_55144 === 5) {
                                    var state_55143__$1 = state_55143;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_55155_55177 = state_55143__$1;
                                      statearr_55155_55177[1] = 8;
                                    } else {
                                      var statearr_55156_55178 = state_55143__$1;
                                      statearr_55156_55178[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_55144 === 14) {
                                      var inst_55137 = state_55143[2];
                                      var state_55143__$1 = state_55143;
                                      var statearr_55157_55179 = state_55143__$1;
                                      statearr_55157_55179[2] = inst_55137;
                                      statearr_55157_55179[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_55144 === 10) {
                                        var inst_55129 = state_55143[2];
                                        var state_55143__$1 = state_55143;
                                        var statearr_55158_55180 = state_55143__$1;
                                        statearr_55158_55180[2] = inst_55129;
                                        statearr_55158_55180[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_55144 === 8) {
                                          var inst_55126 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_55143__$1 = state_55143;
                                          var statearr_55159_55181 = state_55143__$1;
                                          statearr_55159_55181[2] = inst_55126;
                                          statearr_55159_55181[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__51756__auto___55167);
          return function(switch__51741__auto__, c__51756__auto___55167) {
            return function() {
              var state_machine__51742__auto__ = null;
              var state_machine__51742__auto____0 = function() {
                var statearr_55163 = [null, null, null, null, null, null, null, null];
                statearr_55163[0] = state_machine__51742__auto__;
                statearr_55163[1] = 1;
                return statearr_55163;
              };
              var state_machine__51742__auto____1 = function(state_55143) {
                while (true) {
                  var ret_value__51743__auto__ = function() {
                    try {
                      while (true) {
                        var result__51744__auto__ = switch__51741__auto__.call(null, state_55143);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__51744__auto__;
                        }
                        break;
                      }
                    } catch (e55164) {
                      if (e55164 instanceof Object) {
                        var ex__51745__auto__ = e55164;
                        var statearr_55165_55182 = state_55143;
                        statearr_55165_55182[5] = ex__51745__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_55143);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e55164;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__55183 = state_55143;
                    state_55143 = G__55183;
                    continue;
                  } else {
                    return ret_value__51743__auto__;
                  }
                  break;
                }
              };
              state_machine__51742__auto__ = function(state_55143) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__51742__auto____0.call(this);
                  case 1:
                    return state_machine__51742__auto____1.call(this, state_55143);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
              return state_machine__51742__auto__;
            }();
          }(switch__51741__auto__, c__51756__auto___55167);
        }();
        var state__51758__auto__ = function() {
          var statearr_55166 = f__51757__auto__.call(null);
          statearr_55166[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto___55167;
          return statearr_55166;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
      };
    }(c__51756__auto___55167));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__51756__auto___55284 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto___55284, tc, fc) {
      return function() {
        var f__51757__auto__ = function() {
          var switch__51741__auto__ = function(c__51756__auto___55284, tc, fc) {
            return function(state_55259) {
              var state_val_55260 = state_55259[1];
              if (state_val_55260 === 7) {
                var inst_55255 = state_55259[2];
                var state_55259__$1 = state_55259;
                var statearr_55261_55285 = state_55259__$1;
                statearr_55261_55285[2] = inst_55255;
                statearr_55261_55285[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_55260 === 1) {
                  var state_55259__$1 = state_55259;
                  var statearr_55262_55286 = state_55259__$1;
                  statearr_55262_55286[2] = null;
                  statearr_55262_55286[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_55260 === 4) {
                    var inst_55236 = state_55259[7];
                    var inst_55236__$1 = state_55259[2];
                    var inst_55237 = inst_55236__$1 == null;
                    var state_55259__$1 = function() {
                      var statearr_55263 = state_55259;
                      statearr_55263[7] = inst_55236__$1;
                      return statearr_55263;
                    }();
                    if (cljs.core.truth_(inst_55237)) {
                      var statearr_55264_55287 = state_55259__$1;
                      statearr_55264_55287[1] = 5;
                    } else {
                      var statearr_55265_55288 = state_55259__$1;
                      statearr_55265_55288[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_55260 === 13) {
                      var state_55259__$1 = state_55259;
                      var statearr_55266_55289 = state_55259__$1;
                      statearr_55266_55289[2] = null;
                      statearr_55266_55289[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_55260 === 6) {
                        var inst_55236 = state_55259[7];
                        var inst_55242 = p.call(null, inst_55236);
                        var state_55259__$1 = state_55259;
                        if (cljs.core.truth_(inst_55242)) {
                          var statearr_55267_55290 = state_55259__$1;
                          statearr_55267_55290[1] = 9;
                        } else {
                          var statearr_55268_55291 = state_55259__$1;
                          statearr_55268_55291[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_55260 === 3) {
                          var inst_55257 = state_55259[2];
                          var state_55259__$1 = state_55259;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_55259__$1, inst_55257);
                        } else {
                          if (state_val_55260 === 12) {
                            var state_55259__$1 = state_55259;
                            var statearr_55269_55292 = state_55259__$1;
                            statearr_55269_55292[2] = null;
                            statearr_55269_55292[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_55260 === 2) {
                              var state_55259__$1 = state_55259;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_55259__$1, 4, ch);
                            } else {
                              if (state_val_55260 === 11) {
                                var inst_55236 = state_55259[7];
                                var inst_55246 = state_55259[2];
                                var state_55259__$1 = state_55259;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_55259__$1, 8, inst_55246, inst_55236);
                              } else {
                                if (state_val_55260 === 9) {
                                  var state_55259__$1 = state_55259;
                                  var statearr_55270_55293 = state_55259__$1;
                                  statearr_55270_55293[2] = tc;
                                  statearr_55270_55293[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_55260 === 5) {
                                    var inst_55239 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_55240 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_55259__$1 = function() {
                                      var statearr_55271 = state_55259;
                                      statearr_55271[8] = inst_55239;
                                      return statearr_55271;
                                    }();
                                    var statearr_55272_55294 = state_55259__$1;
                                    statearr_55272_55294[2] = inst_55240;
                                    statearr_55272_55294[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_55260 === 14) {
                                      var inst_55253 = state_55259[2];
                                      var state_55259__$1 = state_55259;
                                      var statearr_55273_55295 = state_55259__$1;
                                      statearr_55273_55295[2] = inst_55253;
                                      statearr_55273_55295[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_55260 === 10) {
                                        var state_55259__$1 = state_55259;
                                        var statearr_55274_55296 = state_55259__$1;
                                        statearr_55274_55296[2] = fc;
                                        statearr_55274_55296[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_55260 === 8) {
                                          var inst_55248 = state_55259[2];
                                          var state_55259__$1 = state_55259;
                                          if (cljs.core.truth_(inst_55248)) {
                                            var statearr_55275_55297 = state_55259__$1;
                                            statearr_55275_55297[1] = 12;
                                          } else {
                                            var statearr_55276_55298 = state_55259__$1;
                                            statearr_55276_55298[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__51756__auto___55284, tc, fc);
          return function(switch__51741__auto__, c__51756__auto___55284, tc, fc) {
            return function() {
              var state_machine__51742__auto__ = null;
              var state_machine__51742__auto____0 = function() {
                var statearr_55280 = [null, null, null, null, null, null, null, null, null];
                statearr_55280[0] = state_machine__51742__auto__;
                statearr_55280[1] = 1;
                return statearr_55280;
              };
              var state_machine__51742__auto____1 = function(state_55259) {
                while (true) {
                  var ret_value__51743__auto__ = function() {
                    try {
                      while (true) {
                        var result__51744__auto__ = switch__51741__auto__.call(null, state_55259);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__51744__auto__;
                        }
                        break;
                      }
                    } catch (e55281) {
                      if (e55281 instanceof Object) {
                        var ex__51745__auto__ = e55281;
                        var statearr_55282_55299 = state_55259;
                        statearr_55282_55299[5] = ex__51745__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_55259);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e55281;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__55300 = state_55259;
                    state_55259 = G__55300;
                    continue;
                  } else {
                    return ret_value__51743__auto__;
                  }
                  break;
                }
              };
              state_machine__51742__auto__ = function(state_55259) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__51742__auto____0.call(this);
                  case 1:
                    return state_machine__51742__auto____1.call(this, state_55259);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
              return state_machine__51742__auto__;
            }();
          }(switch__51741__auto__, c__51756__auto___55284, tc, fc);
        }();
        var state__51758__auto__ = function() {
          var statearr_55283 = f__51757__auto__.call(null);
          statearr_55283[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto___55284;
          return statearr_55283;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
      };
    }(c__51756__auto___55284, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__51756__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto__) {
    return function() {
      var f__51757__auto__ = function() {
        var switch__51741__auto__ = function(c__51756__auto__) {
          return function(state_55347) {
            var state_val_55348 = state_55347[1];
            if (state_val_55348 === 7) {
              var inst_55343 = state_55347[2];
              var state_55347__$1 = state_55347;
              var statearr_55349_55365 = state_55347__$1;
              statearr_55349_55365[2] = inst_55343;
              statearr_55349_55365[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_55348 === 6) {
                var inst_55336 = state_55347[7];
                var inst_55333 = state_55347[8];
                var inst_55340 = f.call(null, inst_55333, inst_55336);
                var inst_55333__$1 = inst_55340;
                var state_55347__$1 = function() {
                  var statearr_55350 = state_55347;
                  statearr_55350[8] = inst_55333__$1;
                  return statearr_55350;
                }();
                var statearr_55351_55366 = state_55347__$1;
                statearr_55351_55366[2] = null;
                statearr_55351_55366[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_55348 === 5) {
                  var inst_55333 = state_55347[8];
                  var state_55347__$1 = state_55347;
                  var statearr_55352_55367 = state_55347__$1;
                  statearr_55352_55367[2] = inst_55333;
                  statearr_55352_55367[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_55348 === 4) {
                    var inst_55336 = state_55347[7];
                    var inst_55336__$1 = state_55347[2];
                    var inst_55337 = inst_55336__$1 == null;
                    var state_55347__$1 = function() {
                      var statearr_55353 = state_55347;
                      statearr_55353[7] = inst_55336__$1;
                      return statearr_55353;
                    }();
                    if (cljs.core.truth_(inst_55337)) {
                      var statearr_55354_55368 = state_55347__$1;
                      statearr_55354_55368[1] = 5;
                    } else {
                      var statearr_55355_55369 = state_55347__$1;
                      statearr_55355_55369[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_55348 === 3) {
                      var inst_55345 = state_55347[2];
                      var state_55347__$1 = state_55347;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_55347__$1, inst_55345);
                    } else {
                      if (state_val_55348 === 2) {
                        var state_55347__$1 = state_55347;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_55347__$1, 4, ch);
                      } else {
                        if (state_val_55348 === 1) {
                          var inst_55333 = init;
                          var state_55347__$1 = function() {
                            var statearr_55356 = state_55347;
                            statearr_55356[8] = inst_55333;
                            return statearr_55356;
                          }();
                          var statearr_55357_55370 = state_55347__$1;
                          statearr_55357_55370[2] = null;
                          statearr_55357_55370[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__51756__auto__);
        return function(switch__51741__auto__, c__51756__auto__) {
          return function() {
            var state_machine__51742__auto__ = null;
            var state_machine__51742__auto____0 = function() {
              var statearr_55361 = [null, null, null, null, null, null, null, null, null];
              statearr_55361[0] = state_machine__51742__auto__;
              statearr_55361[1] = 1;
              return statearr_55361;
            };
            var state_machine__51742__auto____1 = function(state_55347) {
              while (true) {
                var ret_value__51743__auto__ = function() {
                  try {
                    while (true) {
                      var result__51744__auto__ = switch__51741__auto__.call(null, state_55347);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__51744__auto__;
                      }
                      break;
                    }
                  } catch (e55362) {
                    if (e55362 instanceof Object) {
                      var ex__51745__auto__ = e55362;
                      var statearr_55363_55371 = state_55347;
                      statearr_55363_55371[5] = ex__51745__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_55347);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e55362;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__55372 = state_55347;
                  state_55347 = G__55372;
                  continue;
                } else {
                  return ret_value__51743__auto__;
                }
                break;
              }
            };
            state_machine__51742__auto__ = function(state_55347) {
              switch(arguments.length) {
                case 0:
                  return state_machine__51742__auto____0.call(this);
                case 1:
                  return state_machine__51742__auto____1.call(this, state_55347);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
            state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
            return state_machine__51742__auto__;
          }();
        }(switch__51741__auto__, c__51756__auto__);
      }();
      var state__51758__auto__ = function() {
        var statearr_55364 = f__51757__auto__.call(null);
        statearr_55364[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto__;
        return statearr_55364;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
    };
  }(c__51756__auto__));
  return c__51756__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__51756__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto__) {
      return function() {
        var f__51757__auto__ = function() {
          var switch__51741__auto__ = function(c__51756__auto__) {
            return function(state_55446) {
              var state_val_55447 = state_55446[1];
              if (state_val_55447 === 7) {
                var inst_55428 = state_55446[2];
                var state_55446__$1 = state_55446;
                var statearr_55448_55471 = state_55446__$1;
                statearr_55448_55471[2] = inst_55428;
                statearr_55448_55471[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_55447 === 1) {
                  var inst_55422 = cljs.core.seq.call(null, coll);
                  var inst_55423 = inst_55422;
                  var state_55446__$1 = function() {
                    var statearr_55449 = state_55446;
                    statearr_55449[7] = inst_55423;
                    return statearr_55449;
                  }();
                  var statearr_55450_55472 = state_55446__$1;
                  statearr_55450_55472[2] = null;
                  statearr_55450_55472[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_55447 === 4) {
                    var inst_55423 = state_55446[7];
                    var inst_55426 = cljs.core.first.call(null, inst_55423);
                    var state_55446__$1 = state_55446;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_55446__$1, 7, ch, inst_55426);
                  } else {
                    if (state_val_55447 === 13) {
                      var inst_55440 = state_55446[2];
                      var state_55446__$1 = state_55446;
                      var statearr_55451_55473 = state_55446__$1;
                      statearr_55451_55473[2] = inst_55440;
                      statearr_55451_55473[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_55447 === 6) {
                        var inst_55431 = state_55446[2];
                        var state_55446__$1 = state_55446;
                        if (cljs.core.truth_(inst_55431)) {
                          var statearr_55452_55474 = state_55446__$1;
                          statearr_55452_55474[1] = 8;
                        } else {
                          var statearr_55453_55475 = state_55446__$1;
                          statearr_55453_55475[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_55447 === 3) {
                          var inst_55444 = state_55446[2];
                          var state_55446__$1 = state_55446;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_55446__$1, inst_55444);
                        } else {
                          if (state_val_55447 === 12) {
                            var state_55446__$1 = state_55446;
                            var statearr_55454_55476 = state_55446__$1;
                            statearr_55454_55476[2] = null;
                            statearr_55454_55476[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_55447 === 2) {
                              var inst_55423 = state_55446[7];
                              var state_55446__$1 = state_55446;
                              if (cljs.core.truth_(inst_55423)) {
                                var statearr_55455_55477 = state_55446__$1;
                                statearr_55455_55477[1] = 4;
                              } else {
                                var statearr_55456_55478 = state_55446__$1;
                                statearr_55456_55478[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_55447 === 11) {
                                var inst_55437 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_55446__$1 = state_55446;
                                var statearr_55457_55479 = state_55446__$1;
                                statearr_55457_55479[2] = inst_55437;
                                statearr_55457_55479[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_55447 === 9) {
                                  var state_55446__$1 = state_55446;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_55458_55480 = state_55446__$1;
                                    statearr_55458_55480[1] = 11;
                                  } else {
                                    var statearr_55459_55481 = state_55446__$1;
                                    statearr_55459_55481[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_55447 === 5) {
                                    var inst_55423 = state_55446[7];
                                    var state_55446__$1 = state_55446;
                                    var statearr_55460_55482 = state_55446__$1;
                                    statearr_55460_55482[2] = inst_55423;
                                    statearr_55460_55482[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_55447 === 10) {
                                      var inst_55442 = state_55446[2];
                                      var state_55446__$1 = state_55446;
                                      var statearr_55461_55483 = state_55446__$1;
                                      statearr_55461_55483[2] = inst_55442;
                                      statearr_55461_55483[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_55447 === 8) {
                                        var inst_55423 = state_55446[7];
                                        var inst_55433 = cljs.core.next.call(null, inst_55423);
                                        var inst_55423__$1 = inst_55433;
                                        var state_55446__$1 = function() {
                                          var statearr_55462 = state_55446;
                                          statearr_55462[7] = inst_55423__$1;
                                          return statearr_55462;
                                        }();
                                        var statearr_55463_55484 = state_55446__$1;
                                        statearr_55463_55484[2] = null;
                                        statearr_55463_55484[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__51756__auto__);
          return function(switch__51741__auto__, c__51756__auto__) {
            return function() {
              var state_machine__51742__auto__ = null;
              var state_machine__51742__auto____0 = function() {
                var statearr_55467 = [null, null, null, null, null, null, null, null];
                statearr_55467[0] = state_machine__51742__auto__;
                statearr_55467[1] = 1;
                return statearr_55467;
              };
              var state_machine__51742__auto____1 = function(state_55446) {
                while (true) {
                  var ret_value__51743__auto__ = function() {
                    try {
                      while (true) {
                        var result__51744__auto__ = switch__51741__auto__.call(null, state_55446);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__51744__auto__;
                        }
                        break;
                      }
                    } catch (e55468) {
                      if (e55468 instanceof Object) {
                        var ex__51745__auto__ = e55468;
                        var statearr_55469_55485 = state_55446;
                        statearr_55469_55485[5] = ex__51745__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_55446);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e55468;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__55486 = state_55446;
                    state_55446 = G__55486;
                    continue;
                  } else {
                    return ret_value__51743__auto__;
                  }
                  break;
                }
              };
              state_machine__51742__auto__ = function(state_55446) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__51742__auto____0.call(this);
                  case 1:
                    return state_machine__51742__auto____1.call(this, state_55446);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
              return state_machine__51742__auto__;
            }();
          }(switch__51741__auto__, c__51756__auto__);
        }();
        var state__51758__auto__ = function() {
          var statearr_55470 = f__51757__auto__.call(null);
          statearr_55470[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto__;
          return statearr_55470;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
      };
    }(c__51756__auto__));
    return c__51756__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj55488 = {};
  return obj55488;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3541__auto__ = _;
    if (and__3541__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4180__auto__ = _ == null ? null : _;
    return function() {
      var or__3553__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj55490 = {};
  return obj55490;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t55712 !== "undefined") {
    } else {
      cljs.core.async.t55712 = function(cs, ch, mult, meta55713) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta55713 = meta55713;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t55712.cljs$lang$type = true;
      cljs.core.async.t55712.cljs$lang$ctorStr = "cljs.core.async/t55712";
      cljs.core.async.t55712.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
          return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t55712");
        };
      }(cs);
      cljs.core.async.t55712.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t55712.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t55712.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t55712.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t55712.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t55712.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t55712.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_55714) {
          var self__ = this;
          var _55714__$1 = this;
          return self__.meta55713;
        };
      }(cs);
      cljs.core.async.t55712.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_55714, meta55713__$1) {
          var self__ = this;
          var _55714__$1 = this;
          return new cljs.core.async.t55712(self__.cs, self__.ch, self__.mult, meta55713__$1);
        };
      }(cs);
      cljs.core.async.__GT_t55712 = function(cs) {
        return function __GT_t55712(cs__$1, ch__$1, mult__$1, meta55713) {
          return new cljs.core.async.t55712(cs__$1, ch__$1, mult__$1, meta55713);
        };
      }(cs);
    }
    return new cljs.core.async.t55712(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__51756__auto___55933 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto___55933, cs, m, dchan, dctr, done) {
    return function() {
      var f__51757__auto__ = function() {
        var switch__51741__auto__ = function(c__51756__auto___55933, cs, m, dchan, dctr, done) {
          return function(state_55845) {
            var state_val_55846 = state_55845[1];
            if (state_val_55846 === 7) {
              var inst_55841 = state_55845[2];
              var state_55845__$1 = state_55845;
              var statearr_55847_55934 = state_55845__$1;
              statearr_55847_55934[2] = inst_55841;
              statearr_55847_55934[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_55846 === 20) {
                var inst_55746 = state_55845[7];
                var inst_55756 = cljs.core.first.call(null, inst_55746);
                var inst_55757 = cljs.core.nth.call(null, inst_55756, 0, null);
                var inst_55758 = cljs.core.nth.call(null, inst_55756, 1, null);
                var state_55845__$1 = function() {
                  var statearr_55848 = state_55845;
                  statearr_55848[8] = inst_55757;
                  return statearr_55848;
                }();
                if (cljs.core.truth_(inst_55758)) {
                  var statearr_55849_55935 = state_55845__$1;
                  statearr_55849_55935[1] = 22;
                } else {
                  var statearr_55850_55936 = state_55845__$1;
                  statearr_55850_55936[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_55846 === 27) {
                  var inst_55786 = state_55845[9];
                  var inst_55788 = state_55845[10];
                  var inst_55717 = state_55845[11];
                  var inst_55793 = state_55845[12];
                  var inst_55793__$1 = cljs.core._nth.call(null, inst_55786, inst_55788);
                  var inst_55794 = cljs.core.async.put_BANG_.call(null, inst_55793__$1, inst_55717, done);
                  var state_55845__$1 = function() {
                    var statearr_55851 = state_55845;
                    statearr_55851[12] = inst_55793__$1;
                    return statearr_55851;
                  }();
                  if (cljs.core.truth_(inst_55794)) {
                    var statearr_55852_55937 = state_55845__$1;
                    statearr_55852_55937[1] = 30;
                  } else {
                    var statearr_55853_55938 = state_55845__$1;
                    statearr_55853_55938[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_55846 === 1) {
                    var state_55845__$1 = state_55845;
                    var statearr_55854_55939 = state_55845__$1;
                    statearr_55854_55939[2] = null;
                    statearr_55854_55939[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_55846 === 24) {
                      var inst_55746 = state_55845[7];
                      var inst_55763 = state_55845[2];
                      var inst_55764 = cljs.core.next.call(null, inst_55746);
                      var inst_55726 = inst_55764;
                      var inst_55727 = null;
                      var inst_55728 = 0;
                      var inst_55729 = 0;
                      var state_55845__$1 = function() {
                        var statearr_55855 = state_55845;
                        statearr_55855[13] = inst_55727;
                        statearr_55855[14] = inst_55729;
                        statearr_55855[15] = inst_55728;
                        statearr_55855[16] = inst_55726;
                        statearr_55855[17] = inst_55763;
                        return statearr_55855;
                      }();
                      var statearr_55856_55940 = state_55845__$1;
                      statearr_55856_55940[2] = null;
                      statearr_55856_55940[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_55846 === 39) {
                        var state_55845__$1 = state_55845;
                        var statearr_55860_55941 = state_55845__$1;
                        statearr_55860_55941[2] = null;
                        statearr_55860_55941[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_55846 === 4) {
                          var inst_55717 = state_55845[11];
                          var inst_55717__$1 = state_55845[2];
                          var inst_55718 = inst_55717__$1 == null;
                          var state_55845__$1 = function() {
                            var statearr_55861 = state_55845;
                            statearr_55861[11] = inst_55717__$1;
                            return statearr_55861;
                          }();
                          if (cljs.core.truth_(inst_55718)) {
                            var statearr_55862_55942 = state_55845__$1;
                            statearr_55862_55942[1] = 5;
                          } else {
                            var statearr_55863_55943 = state_55845__$1;
                            statearr_55863_55943[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_55846 === 15) {
                            var inst_55727 = state_55845[13];
                            var inst_55729 = state_55845[14];
                            var inst_55728 = state_55845[15];
                            var inst_55726 = state_55845[16];
                            var inst_55742 = state_55845[2];
                            var inst_55743 = inst_55729 + 1;
                            var tmp55857 = inst_55727;
                            var tmp55858 = inst_55728;
                            var tmp55859 = inst_55726;
                            var inst_55726__$1 = tmp55859;
                            var inst_55727__$1 = tmp55857;
                            var inst_55728__$1 = tmp55858;
                            var inst_55729__$1 = inst_55743;
                            var state_55845__$1 = function() {
                              var statearr_55864 = state_55845;
                              statearr_55864[13] = inst_55727__$1;
                              statearr_55864[14] = inst_55729__$1;
                              statearr_55864[15] = inst_55728__$1;
                              statearr_55864[16] = inst_55726__$1;
                              statearr_55864[18] = inst_55742;
                              return statearr_55864;
                            }();
                            var statearr_55865_55944 = state_55845__$1;
                            statearr_55865_55944[2] = null;
                            statearr_55865_55944[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_55846 === 21) {
                              var inst_55767 = state_55845[2];
                              var state_55845__$1 = state_55845;
                              var statearr_55869_55945 = state_55845__$1;
                              statearr_55869_55945[2] = inst_55767;
                              statearr_55869_55945[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_55846 === 31) {
                                var inst_55793 = state_55845[12];
                                var inst_55797 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                var inst_55798 = cljs.core.async.untap_STAR_.call(null, m, inst_55793);
                                var state_55845__$1 = function() {
                                  var statearr_55870 = state_55845;
                                  statearr_55870[19] = inst_55797;
                                  return statearr_55870;
                                }();
                                var statearr_55871_55946 = state_55845__$1;
                                statearr_55871_55946[2] = inst_55798;
                                statearr_55871_55946[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_55846 === 32) {
                                  var inst_55786 = state_55845[9];
                                  var inst_55785 = state_55845[20];
                                  var inst_55788 = state_55845[10];
                                  var inst_55787 = state_55845[21];
                                  var inst_55800 = state_55845[2];
                                  var inst_55801 = inst_55788 + 1;
                                  var tmp55866 = inst_55786;
                                  var tmp55867 = inst_55785;
                                  var tmp55868 = inst_55787;
                                  var inst_55785__$1 = tmp55867;
                                  var inst_55786__$1 = tmp55866;
                                  var inst_55787__$1 = tmp55868;
                                  var inst_55788__$1 = inst_55801;
                                  var state_55845__$1 = function() {
                                    var statearr_55872 = state_55845;
                                    statearr_55872[9] = inst_55786__$1;
                                    statearr_55872[20] = inst_55785__$1;
                                    statearr_55872[10] = inst_55788__$1;
                                    statearr_55872[21] = inst_55787__$1;
                                    statearr_55872[22] = inst_55800;
                                    return statearr_55872;
                                  }();
                                  var statearr_55873_55947 = state_55845__$1;
                                  statearr_55873_55947[2] = null;
                                  statearr_55873_55947[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_55846 === 40) {
                                    var inst_55813 = state_55845[23];
                                    var inst_55817 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                    var inst_55818 = cljs.core.async.untap_STAR_.call(null, m, inst_55813);
                                    var state_55845__$1 = function() {
                                      var statearr_55874 = state_55845;
                                      statearr_55874[24] = inst_55817;
                                      return statearr_55874;
                                    }();
                                    var statearr_55875_55948 = state_55845__$1;
                                    statearr_55875_55948[2] = inst_55818;
                                    statearr_55875_55948[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_55846 === 33) {
                                      var inst_55804 = state_55845[25];
                                      var inst_55806 = cljs.core.chunked_seq_QMARK_.call(null, inst_55804);
                                      var state_55845__$1 = state_55845;
                                      if (inst_55806) {
                                        var statearr_55876_55949 = state_55845__$1;
                                        statearr_55876_55949[1] = 36;
                                      } else {
                                        var statearr_55877_55950 = state_55845__$1;
                                        statearr_55877_55950[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_55846 === 13) {
                                        var inst_55736 = state_55845[26];
                                        var inst_55739 = cljs.core.async.close_BANG_.call(null, inst_55736);
                                        var state_55845__$1 = state_55845;
                                        var statearr_55878_55951 = state_55845__$1;
                                        statearr_55878_55951[2] = inst_55739;
                                        statearr_55878_55951[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_55846 === 22) {
                                          var inst_55757 = state_55845[8];
                                          var inst_55760 = cljs.core.async.close_BANG_.call(null, inst_55757);
                                          var state_55845__$1 = state_55845;
                                          var statearr_55879_55952 = state_55845__$1;
                                          statearr_55879_55952[2] = inst_55760;
                                          statearr_55879_55952[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_55846 === 36) {
                                            var inst_55804 = state_55845[25];
                                            var inst_55808 = cljs.core.chunk_first.call(null, inst_55804);
                                            var inst_55809 = cljs.core.chunk_rest.call(null, inst_55804);
                                            var inst_55810 = cljs.core.count.call(null, inst_55808);
                                            var inst_55785 = inst_55809;
                                            var inst_55786 = inst_55808;
                                            var inst_55787 = inst_55810;
                                            var inst_55788 = 0;
                                            var state_55845__$1 = function() {
                                              var statearr_55880 = state_55845;
                                              statearr_55880[9] = inst_55786;
                                              statearr_55880[20] = inst_55785;
                                              statearr_55880[10] = inst_55788;
                                              statearr_55880[21] = inst_55787;
                                              return statearr_55880;
                                            }();
                                            var statearr_55881_55953 = state_55845__$1;
                                            statearr_55881_55953[2] = null;
                                            statearr_55881_55953[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_55846 === 41) {
                                              var inst_55804 = state_55845[25];
                                              var inst_55820 = state_55845[2];
                                              var inst_55821 = cljs.core.next.call(null, inst_55804);
                                              var inst_55785 = inst_55821;
                                              var inst_55786 = null;
                                              var inst_55787 = 0;
                                              var inst_55788 = 0;
                                              var state_55845__$1 = function() {
                                                var statearr_55882 = state_55845;
                                                statearr_55882[9] = inst_55786;
                                                statearr_55882[20] = inst_55785;
                                                statearr_55882[10] = inst_55788;
                                                statearr_55882[21] = inst_55787;
                                                statearr_55882[27] = inst_55820;
                                                return statearr_55882;
                                              }();
                                              var statearr_55883_55954 = state_55845__$1;
                                              statearr_55883_55954[2] = null;
                                              statearr_55883_55954[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_55846 === 43) {
                                                var state_55845__$1 = state_55845;
                                                var statearr_55884_55955 = state_55845__$1;
                                                statearr_55884_55955[2] = null;
                                                statearr_55884_55955[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_55846 === 29) {
                                                  var inst_55829 = state_55845[2];
                                                  var state_55845__$1 = state_55845;
                                                  var statearr_55885_55956 = state_55845__$1;
                                                  statearr_55885_55956[2] = inst_55829;
                                                  statearr_55885_55956[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_55846 === 44) {
                                                    var inst_55838 = state_55845[2];
                                                    var state_55845__$1 = function() {
                                                      var statearr_55886 = state_55845;
                                                      statearr_55886[28] = inst_55838;
                                                      return statearr_55886;
                                                    }();
                                                    var statearr_55887_55957 = state_55845__$1;
                                                    statearr_55887_55957[2] = null;
                                                    statearr_55887_55957[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_55846 === 6) {
                                                      var inst_55777 = state_55845[29];
                                                      var inst_55776 = cljs.core.deref.call(null, cs);
                                                      var inst_55777__$1 = cljs.core.keys.call(null, inst_55776);
                                                      var inst_55778 = cljs.core.count.call(null, inst_55777__$1);
                                                      var inst_55779 = cljs.core.reset_BANG_.call(null, dctr, inst_55778);
                                                      var inst_55784 = cljs.core.seq.call(null, inst_55777__$1);
                                                      var inst_55785 = inst_55784;
                                                      var inst_55786 = null;
                                                      var inst_55787 = 0;
                                                      var inst_55788 = 0;
                                                      var state_55845__$1 = function() {
                                                        var statearr_55888 = state_55845;
                                                        statearr_55888[29] = inst_55777__$1;
                                                        statearr_55888[9] = inst_55786;
                                                        statearr_55888[20] = inst_55785;
                                                        statearr_55888[10] = inst_55788;
                                                        statearr_55888[21] = inst_55787;
                                                        statearr_55888[30] = inst_55779;
                                                        return statearr_55888;
                                                      }();
                                                      var statearr_55889_55958 = state_55845__$1;
                                                      statearr_55889_55958[2] = null;
                                                      statearr_55889_55958[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_55846 === 28) {
                                                        var inst_55804 = state_55845[25];
                                                        var inst_55785 = state_55845[20];
                                                        var inst_55804__$1 = cljs.core.seq.call(null, inst_55785);
                                                        var state_55845__$1 = function() {
                                                          var statearr_55890 = state_55845;
                                                          statearr_55890[25] = inst_55804__$1;
                                                          return statearr_55890;
                                                        }();
                                                        if (inst_55804__$1) {
                                                          var statearr_55891_55959 = state_55845__$1;
                                                          statearr_55891_55959[1] = 33;
                                                        } else {
                                                          var statearr_55892_55960 = state_55845__$1;
                                                          statearr_55892_55960[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_55846 === 25) {
                                                          var inst_55788 = state_55845[10];
                                                          var inst_55787 = state_55845[21];
                                                          var inst_55790 = inst_55788 < inst_55787;
                                                          var inst_55791 = inst_55790;
                                                          var state_55845__$1 = state_55845;
                                                          if (cljs.core.truth_(inst_55791)) {
                                                            var statearr_55893_55961 = state_55845__$1;
                                                            statearr_55893_55961[1] = 27;
                                                          } else {
                                                            var statearr_55894_55962 = state_55845__$1;
                                                            statearr_55894_55962[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_55846 === 34) {
                                                            var state_55845__$1 = state_55845;
                                                            var statearr_55895_55963 = state_55845__$1;
                                                            statearr_55895_55963[2] = null;
                                                            statearr_55895_55963[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_55846 === 17) {
                                                              var state_55845__$1 = state_55845;
                                                              var statearr_55896_55964 = state_55845__$1;
                                                              statearr_55896_55964[2] = null;
                                                              statearr_55896_55964[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_55846 === 3) {
                                                                var inst_55843 = state_55845[2];
                                                                var state_55845__$1 = state_55845;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_55845__$1, inst_55843);
                                                              } else {
                                                                if (state_val_55846 === 12) {
                                                                  var inst_55772 = state_55845[2];
                                                                  var state_55845__$1 = state_55845;
                                                                  var statearr_55897_55965 = state_55845__$1;
                                                                  statearr_55897_55965[2] = inst_55772;
                                                                  statearr_55897_55965[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_55846 === 2) {
                                                                    var state_55845__$1 = state_55845;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_55845__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_55846 === 23) {
                                                                      var state_55845__$1 = state_55845;
                                                                      var statearr_55898_55966 = state_55845__$1;
                                                                      statearr_55898_55966[2] = null;
                                                                      statearr_55898_55966[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_55846 === 35) {
                                                                        var inst_55827 = state_55845[2];
                                                                        var state_55845__$1 = state_55845;
                                                                        var statearr_55899_55967 = state_55845__$1;
                                                                        statearr_55899_55967[2] = inst_55827;
                                                                        statearr_55899_55967[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_55846 === 19) {
                                                                          var inst_55746 = state_55845[7];
                                                                          var inst_55750 = cljs.core.chunk_first.call(null, inst_55746);
                                                                          var inst_55751 = cljs.core.chunk_rest.call(null, inst_55746);
                                                                          var inst_55752 = cljs.core.count.call(null, inst_55750);
                                                                          var inst_55726 = inst_55751;
                                                                          var inst_55727 = inst_55750;
                                                                          var inst_55728 = inst_55752;
                                                                          var inst_55729 = 0;
                                                                          var state_55845__$1 = function() {
                                                                            var statearr_55900 = state_55845;
                                                                            statearr_55900[13] = inst_55727;
                                                                            statearr_55900[14] = inst_55729;
                                                                            statearr_55900[15] = inst_55728;
                                                                            statearr_55900[16] = inst_55726;
                                                                            return statearr_55900;
                                                                          }();
                                                                          var statearr_55901_55968 = state_55845__$1;
                                                                          statearr_55901_55968[2] = null;
                                                                          statearr_55901_55968[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_55846 === 11) {
                                                                            var inst_55746 = state_55845[7];
                                                                            var inst_55726 = state_55845[16];
                                                                            var inst_55746__$1 = cljs.core.seq.call(null, inst_55726);
                                                                            var state_55845__$1 = function() {
                                                                              var statearr_55902 = state_55845;
                                                                              statearr_55902[7] = inst_55746__$1;
                                                                              return statearr_55902;
                                                                            }();
                                                                            if (inst_55746__$1) {
                                                                              var statearr_55903_55969 = state_55845__$1;
                                                                              statearr_55903_55969[1] = 16;
                                                                            } else {
                                                                              var statearr_55904_55970 = state_55845__$1;
                                                                              statearr_55904_55970[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_55846 === 9) {
                                                                              var inst_55774 = state_55845[2];
                                                                              var state_55845__$1 = state_55845;
                                                                              var statearr_55905_55971 = state_55845__$1;
                                                                              statearr_55905_55971[2] = inst_55774;
                                                                              statearr_55905_55971[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_55846 === 5) {
                                                                                var inst_55724 = cljs.core.deref.call(null, cs);
                                                                                var inst_55725 = cljs.core.seq.call(null, inst_55724);
                                                                                var inst_55726 = inst_55725;
                                                                                var inst_55727 = null;
                                                                                var inst_55728 = 0;
                                                                                var inst_55729 = 0;
                                                                                var state_55845__$1 = function() {
                                                                                  var statearr_55906 = state_55845;
                                                                                  statearr_55906[13] = inst_55727;
                                                                                  statearr_55906[14] = inst_55729;
                                                                                  statearr_55906[15] = inst_55728;
                                                                                  statearr_55906[16] = inst_55726;
                                                                                  return statearr_55906;
                                                                                }();
                                                                                var statearr_55907_55972 = state_55845__$1;
                                                                                statearr_55907_55972[2] = null;
                                                                                statearr_55907_55972[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_55846 === 14) {
                                                                                  var state_55845__$1 = state_55845;
                                                                                  var statearr_55908_55973 = state_55845__$1;
                                                                                  statearr_55908_55973[2] = null;
                                                                                  statearr_55908_55973[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_55846 === 45) {
                                                                                    var inst_55835 = state_55845[2];
                                                                                    var state_55845__$1 = state_55845;
                                                                                    var statearr_55909_55974 = state_55845__$1;
                                                                                    statearr_55909_55974[2] = inst_55835;
                                                                                    statearr_55909_55974[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_55846 === 26) {
                                                                                      var inst_55777 = state_55845[29];
                                                                                      var inst_55831 = state_55845[2];
                                                                                      var inst_55832 = cljs.core.seq.call(null, inst_55777);
                                                                                      var state_55845__$1 = function() {
                                                                                        var statearr_55910 = state_55845;
                                                                                        statearr_55910[31] = inst_55831;
                                                                                        return statearr_55910;
                                                                                      }();
                                                                                      if (inst_55832) {
                                                                                        var statearr_55911_55975 = state_55845__$1;
                                                                                        statearr_55911_55975[1] = 42;
                                                                                      } else {
                                                                                        var statearr_55912_55976 = state_55845__$1;
                                                                                        statearr_55912_55976[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_55846 === 16) {
                                                                                        var inst_55746 = state_55845[7];
                                                                                        var inst_55748 = cljs.core.chunked_seq_QMARK_.call(null, inst_55746);
                                                                                        var state_55845__$1 = state_55845;
                                                                                        if (inst_55748) {
                                                                                          var statearr_55913_55977 = state_55845__$1;
                                                                                          statearr_55913_55977[1] = 19;
                                                                                        } else {
                                                                                          var statearr_55914_55978 = state_55845__$1;
                                                                                          statearr_55914_55978[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_55846 === 38) {
                                                                                          var inst_55824 = state_55845[2];
                                                                                          var state_55845__$1 = state_55845;
                                                                                          var statearr_55915_55979 = state_55845__$1;
                                                                                          statearr_55915_55979[2] = inst_55824;
                                                                                          statearr_55915_55979[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_55846 === 30) {
                                                                                            var state_55845__$1 = state_55845;
                                                                                            var statearr_55916_55980 = state_55845__$1;
                                                                                            statearr_55916_55980[2] = null;
                                                                                            statearr_55916_55980[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_55846 === 10) {
                                                                                              var inst_55727 = state_55845[13];
                                                                                              var inst_55729 = state_55845[14];
                                                                                              var inst_55735 = cljs.core._nth.call(null, inst_55727, inst_55729);
                                                                                              var inst_55736 = cljs.core.nth.call(null, inst_55735, 0, null);
                                                                                              var inst_55737 = cljs.core.nth.call(null, inst_55735, 1, null);
                                                                                              var state_55845__$1 = function() {
                                                                                                var statearr_55917 = state_55845;
                                                                                                statearr_55917[26] = inst_55736;
                                                                                                return statearr_55917;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_55737)) {
                                                                                                var statearr_55918_55981 = state_55845__$1;
                                                                                                statearr_55918_55981[1] = 13;
                                                                                              } else {
                                                                                                var statearr_55919_55982 = state_55845__$1;
                                                                                                statearr_55919_55982[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_55846 === 18) {
                                                                                                var inst_55770 = state_55845[2];
                                                                                                var state_55845__$1 = state_55845;
                                                                                                var statearr_55920_55983 = state_55845__$1;
                                                                                                statearr_55920_55983[2] = inst_55770;
                                                                                                statearr_55920_55983[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_55846 === 42) {
                                                                                                  var state_55845__$1 = state_55845;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_55845__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_55846 === 37) {
                                                                                                    var inst_55804 = state_55845[25];
                                                                                                    var inst_55717 = state_55845[11];
                                                                                                    var inst_55813 = state_55845[23];
                                                                                                    var inst_55813__$1 = cljs.core.first.call(null, inst_55804);
                                                                                                    var inst_55814 = cljs.core.async.put_BANG_.call(null, inst_55813__$1, inst_55717, done);
                                                                                                    var state_55845__$1 = function() {
                                                                                                      var statearr_55921 = state_55845;
                                                                                                      statearr_55921[23] = inst_55813__$1;
                                                                                                      return statearr_55921;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_55814)) {
                                                                                                      var statearr_55922_55984 = state_55845__$1;
                                                                                                      statearr_55922_55984[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_55923_55985 = state_55845__$1;
                                                                                                      statearr_55923_55985[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_55846 === 8) {
                                                                                                      var inst_55729 = state_55845[14];
                                                                                                      var inst_55728 = state_55845[15];
                                                                                                      var inst_55731 = inst_55729 < inst_55728;
                                                                                                      var inst_55732 = inst_55731;
                                                                                                      var state_55845__$1 = state_55845;
                                                                                                      if (cljs.core.truth_(inst_55732)) {
                                                                                                        var statearr_55924_55986 = state_55845__$1;
                                                                                                        statearr_55924_55986[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_55925_55987 = state_55845__$1;
                                                                                                        statearr_55925_55987[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__51756__auto___55933, cs, m, dchan, dctr, done);
        return function(switch__51741__auto__, c__51756__auto___55933, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__51742__auto__ = null;
            var state_machine__51742__auto____0 = function() {
              var statearr_55929 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_55929[0] = state_machine__51742__auto__;
              statearr_55929[1] = 1;
              return statearr_55929;
            };
            var state_machine__51742__auto____1 = function(state_55845) {
              while (true) {
                var ret_value__51743__auto__ = function() {
                  try {
                    while (true) {
                      var result__51744__auto__ = switch__51741__auto__.call(null, state_55845);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__51744__auto__;
                      }
                      break;
                    }
                  } catch (e55930) {
                    if (e55930 instanceof Object) {
                      var ex__51745__auto__ = e55930;
                      var statearr_55931_55988 = state_55845;
                      statearr_55931_55988[5] = ex__51745__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_55845);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e55930;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__55989 = state_55845;
                  state_55845 = G__55989;
                  continue;
                } else {
                  return ret_value__51743__auto__;
                }
                break;
              }
            };
            state_machine__51742__auto__ = function(state_55845) {
              switch(arguments.length) {
                case 0:
                  return state_machine__51742__auto____0.call(this);
                case 1:
                  return state_machine__51742__auto____1.call(this, state_55845);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
            state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
            return state_machine__51742__auto__;
          }();
        }(switch__51741__auto__, c__51756__auto___55933, cs, m, dchan, dctr, done);
      }();
      var state__51758__auto__ = function() {
        var statearr_55932 = f__51757__auto__.call(null);
        statearr_55932[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto___55933;
        return statearr_55932;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
    };
  }(c__51756__auto___55933, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj55991 = {};
  return obj55991;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t56111 !== "undefined") {
    } else {
      cljs.core.async.t56111 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta56112) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta56112 = meta56112;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t56111.cljs$lang$type = true;
      cljs.core.async.t56111.cljs$lang$ctorStr = "cljs.core.async/t56111";
      cljs.core.async.t56111.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
          return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t56111");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t56111.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t56111.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t56111.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t56111.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t56111.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t56111.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("mode must be one of: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.solo_modes)) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null)))));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t56111.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t56111.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t56111.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_56113) {
          var self__ = this;
          var _56113__$1 = this;
          return self__.meta56112;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t56111.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_56113, meta56112__$1) {
          var self__ = this;
          var _56113__$1 = this;
          return new cljs.core.async.t56111(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta56112__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t56111 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t56111(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta56112) {
          return new cljs.core.async.t56111(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta56112);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t56111(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, null);
  }();
  var c__51756__auto___56230 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto___56230, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__51757__auto__ = function() {
        var switch__51741__auto__ = function(c__51756__auto___56230, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_56183) {
            var state_val_56184 = state_56183[1];
            if (state_val_56184 === 7) {
              var inst_56127 = state_56183[7];
              var inst_56132 = cljs.core.apply.call(null, cljs.core.hash_map, inst_56127);
              var state_56183__$1 = state_56183;
              var statearr_56185_56231 = state_56183__$1;
              statearr_56185_56231[2] = inst_56132;
              statearr_56185_56231[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_56184 === 20) {
                var inst_56142 = state_56183[8];
                var state_56183__$1 = state_56183;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_56183__$1, 23, out, inst_56142);
              } else {
                if (state_val_56184 === 1) {
                  var inst_56117 = state_56183[9];
                  var inst_56117__$1 = calc_state.call(null);
                  var inst_56118 = cljs.core.seq_QMARK_.call(null, inst_56117__$1);
                  var state_56183__$1 = function() {
                    var statearr_56186 = state_56183;
                    statearr_56186[9] = inst_56117__$1;
                    return statearr_56186;
                  }();
                  if (inst_56118) {
                    var statearr_56187_56232 = state_56183__$1;
                    statearr_56187_56232[1] = 2;
                  } else {
                    var statearr_56188_56233 = state_56183__$1;
                    statearr_56188_56233[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_56184 === 24) {
                    var inst_56135 = state_56183[10];
                    var inst_56127 = inst_56135;
                    var state_56183__$1 = function() {
                      var statearr_56189 = state_56183;
                      statearr_56189[7] = inst_56127;
                      return statearr_56189;
                    }();
                    var statearr_56190_56234 = state_56183__$1;
                    statearr_56190_56234[2] = null;
                    statearr_56190_56234[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_56184 === 4) {
                      var inst_56117 = state_56183[9];
                      var inst_56123 = state_56183[2];
                      var inst_56124 = cljs.core.get.call(null, inst_56123, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_56125 = cljs.core.get.call(null, inst_56123, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_56126 = cljs.core.get.call(null, inst_56123, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_56127 = inst_56117;
                      var state_56183__$1 = function() {
                        var statearr_56191 = state_56183;
                        statearr_56191[11] = inst_56126;
                        statearr_56191[7] = inst_56127;
                        statearr_56191[12] = inst_56124;
                        statearr_56191[13] = inst_56125;
                        return statearr_56191;
                      }();
                      var statearr_56192_56235 = state_56183__$1;
                      statearr_56192_56235[2] = null;
                      statearr_56192_56235[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_56184 === 15) {
                        var state_56183__$1 = state_56183;
                        var statearr_56193_56236 = state_56183__$1;
                        statearr_56193_56236[2] = null;
                        statearr_56193_56236[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_56184 === 21) {
                          var inst_56135 = state_56183[10];
                          var inst_56127 = inst_56135;
                          var state_56183__$1 = function() {
                            var statearr_56194 = state_56183;
                            statearr_56194[7] = inst_56127;
                            return statearr_56194;
                          }();
                          var statearr_56195_56237 = state_56183__$1;
                          statearr_56195_56237[2] = null;
                          statearr_56195_56237[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_56184 === 13) {
                            var inst_56179 = state_56183[2];
                            var state_56183__$1 = state_56183;
                            var statearr_56196_56238 = state_56183__$1;
                            statearr_56196_56238[2] = inst_56179;
                            statearr_56196_56238[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_56184 === 22) {
                              var inst_56177 = state_56183[2];
                              var state_56183__$1 = state_56183;
                              var statearr_56197_56239 = state_56183__$1;
                              statearr_56197_56239[2] = inst_56177;
                              statearr_56197_56239[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_56184 === 6) {
                                var inst_56181 = state_56183[2];
                                var state_56183__$1 = state_56183;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_56183__$1, inst_56181);
                              } else {
                                if (state_val_56184 === 25) {
                                  var state_56183__$1 = state_56183;
                                  var statearr_56198_56240 = state_56183__$1;
                                  statearr_56198_56240[2] = null;
                                  statearr_56198_56240[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_56184 === 17) {
                                    var inst_56157 = state_56183[14];
                                    var state_56183__$1 = state_56183;
                                    var statearr_56199_56241 = state_56183__$1;
                                    statearr_56199_56241[2] = inst_56157;
                                    statearr_56199_56241[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_56184 === 3) {
                                      var inst_56117 = state_56183[9];
                                      var state_56183__$1 = state_56183;
                                      var statearr_56200_56242 = state_56183__$1;
                                      statearr_56200_56242[2] = inst_56117;
                                      statearr_56200_56242[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_56184 === 12) {
                                        var inst_56157 = state_56183[14];
                                        var inst_56143 = state_56183[15];
                                        var inst_56138 = state_56183[16];
                                        var inst_56157__$1 = inst_56138.call(null, inst_56143);
                                        var state_56183__$1 = function() {
                                          var statearr_56201 = state_56183;
                                          statearr_56201[14] = inst_56157__$1;
                                          return statearr_56201;
                                        }();
                                        if (cljs.core.truth_(inst_56157__$1)) {
                                          var statearr_56202_56243 = state_56183__$1;
                                          statearr_56202_56243[1] = 17;
                                        } else {
                                          var statearr_56203_56244 = state_56183__$1;
                                          statearr_56203_56244[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_56184 === 2) {
                                          var inst_56117 = state_56183[9];
                                          var inst_56120 = cljs.core.apply.call(null, cljs.core.hash_map, inst_56117);
                                          var state_56183__$1 = state_56183;
                                          var statearr_56204_56245 = state_56183__$1;
                                          statearr_56204_56245[2] = inst_56120;
                                          statearr_56204_56245[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_56184 === 23) {
                                            var inst_56168 = state_56183[2];
                                            var state_56183__$1 = state_56183;
                                            if (cljs.core.truth_(inst_56168)) {
                                              var statearr_56205_56246 = state_56183__$1;
                                              statearr_56205_56246[1] = 24;
                                            } else {
                                              var statearr_56206_56247 = state_56183__$1;
                                              statearr_56206_56247[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_56184 === 19) {
                                              var inst_56165 = state_56183[2];
                                              var state_56183__$1 = state_56183;
                                              if (cljs.core.truth_(inst_56165)) {
                                                var statearr_56207_56248 = state_56183__$1;
                                                statearr_56207_56248[1] = 20;
                                              } else {
                                                var statearr_56208_56249 = state_56183__$1;
                                                statearr_56208_56249[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_56184 === 11) {
                                                var inst_56142 = state_56183[8];
                                                var inst_56148 = inst_56142 == null;
                                                var state_56183__$1 = state_56183;
                                                if (cljs.core.truth_(inst_56148)) {
                                                  var statearr_56209_56250 = state_56183__$1;
                                                  statearr_56209_56250[1] = 14;
                                                } else {
                                                  var statearr_56210_56251 = state_56183__$1;
                                                  statearr_56210_56251[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_56184 === 9) {
                                                  var inst_56135 = state_56183[10];
                                                  var inst_56135__$1 = state_56183[2];
                                                  var inst_56136 = cljs.core.get.call(null, inst_56135__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_56137 = cljs.core.get.call(null, inst_56135__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_56138 = cljs.core.get.call(null, inst_56135__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_56183__$1 = function() {
                                                    var statearr_56211 = state_56183;
                                                    statearr_56211[10] = inst_56135__$1;
                                                    statearr_56211[17] = inst_56137;
                                                    statearr_56211[16] = inst_56138;
                                                    return statearr_56211;
                                                  }();
                                                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_56183__$1, 10, inst_56136);
                                                } else {
                                                  if (state_val_56184 === 5) {
                                                    var inst_56127 = state_56183[7];
                                                    var inst_56130 = cljs.core.seq_QMARK_.call(null, inst_56127);
                                                    var state_56183__$1 = state_56183;
                                                    if (inst_56130) {
                                                      var statearr_56212_56252 = state_56183__$1;
                                                      statearr_56212_56252[1] = 7;
                                                    } else {
                                                      var statearr_56213_56253 = state_56183__$1;
                                                      statearr_56213_56253[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_56184 === 14) {
                                                      var inst_56143 = state_56183[15];
                                                      var inst_56150 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_56143);
                                                      var state_56183__$1 = state_56183;
                                                      var statearr_56214_56254 = state_56183__$1;
                                                      statearr_56214_56254[2] = inst_56150;
                                                      statearr_56214_56254[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_56184 === 26) {
                                                        var inst_56173 = state_56183[2];
                                                        var state_56183__$1 = state_56183;
                                                        var statearr_56215_56255 = state_56183__$1;
                                                        statearr_56215_56255[2] = inst_56173;
                                                        statearr_56215_56255[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_56184 === 16) {
                                                          var inst_56153 = state_56183[2];
                                                          var inst_56154 = calc_state.call(null);
                                                          var inst_56127 = inst_56154;
                                                          var state_56183__$1 = function() {
                                                            var statearr_56216 = state_56183;
                                                            statearr_56216[7] = inst_56127;
                                                            statearr_56216[18] = inst_56153;
                                                            return statearr_56216;
                                                          }();
                                                          var statearr_56217_56256 = state_56183__$1;
                                                          statearr_56217_56256[2] = null;
                                                          statearr_56217_56256[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_56184 === 10) {
                                                            var inst_56142 = state_56183[8];
                                                            var inst_56143 = state_56183[15];
                                                            var inst_56141 = state_56183[2];
                                                            var inst_56142__$1 = cljs.core.nth.call(null, inst_56141, 0, null);
                                                            var inst_56143__$1 = cljs.core.nth.call(null, inst_56141, 1, null);
                                                            var inst_56144 = inst_56142__$1 == null;
                                                            var inst_56145 = cljs.core._EQ_.call(null, inst_56143__$1, change);
                                                            var inst_56146 = inst_56144 || inst_56145;
                                                            var state_56183__$1 = function() {
                                                              var statearr_56218 = state_56183;
                                                              statearr_56218[8] = inst_56142__$1;
                                                              statearr_56218[15] = inst_56143__$1;
                                                              return statearr_56218;
                                                            }();
                                                            if (cljs.core.truth_(inst_56146)) {
                                                              var statearr_56219_56257 = state_56183__$1;
                                                              statearr_56219_56257[1] = 11;
                                                            } else {
                                                              var statearr_56220_56258 = state_56183__$1;
                                                              statearr_56220_56258[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_56184 === 18) {
                                                              var inst_56137 = state_56183[17];
                                                              var inst_56143 = state_56183[15];
                                                              var inst_56138 = state_56183[16];
                                                              var inst_56160 = cljs.core.empty_QMARK_.call(null, inst_56138);
                                                              var inst_56161 = inst_56137.call(null, inst_56143);
                                                              var inst_56162 = cljs.core.not.call(null, inst_56161);
                                                              var inst_56163 = inst_56160 && inst_56162;
                                                              var state_56183__$1 = state_56183;
                                                              var statearr_56221_56259 = state_56183__$1;
                                                              statearr_56221_56259[2] = inst_56163;
                                                              statearr_56221_56259[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_56184 === 8) {
                                                                var inst_56127 = state_56183[7];
                                                                var state_56183__$1 = state_56183;
                                                                var statearr_56222_56260 = state_56183__$1;
                                                                statearr_56222_56260[2] = inst_56127;
                                                                statearr_56222_56260[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__51756__auto___56230, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__51741__auto__, c__51756__auto___56230, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__51742__auto__ = null;
            var state_machine__51742__auto____0 = function() {
              var statearr_56226 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_56226[0] = state_machine__51742__auto__;
              statearr_56226[1] = 1;
              return statearr_56226;
            };
            var state_machine__51742__auto____1 = function(state_56183) {
              while (true) {
                var ret_value__51743__auto__ = function() {
                  try {
                    while (true) {
                      var result__51744__auto__ = switch__51741__auto__.call(null, state_56183);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__51744__auto__;
                      }
                      break;
                    }
                  } catch (e56227) {
                    if (e56227 instanceof Object) {
                      var ex__51745__auto__ = e56227;
                      var statearr_56228_56261 = state_56183;
                      statearr_56228_56261[5] = ex__51745__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_56183);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e56227;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__56262 = state_56183;
                  state_56183 = G__56262;
                  continue;
                } else {
                  return ret_value__51743__auto__;
                }
                break;
              }
            };
            state_machine__51742__auto__ = function(state_56183) {
              switch(arguments.length) {
                case 0:
                  return state_machine__51742__auto____0.call(this);
                case 1:
                  return state_machine__51742__auto____1.call(this, state_56183);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
            state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
            return state_machine__51742__auto__;
          }();
        }(switch__51741__auto__, c__51756__auto___56230, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__51758__auto__ = function() {
        var statearr_56229 = f__51757__auto__.call(null);
        statearr_56229[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto___56230;
        return statearr_56229;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
    };
  }(c__51756__auto___56230, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj56264 = {};
  return obj56264;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3541__auto__ = p;
    if (and__3541__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4180__auto__ = p == null ? null : p;
    return function() {
      var or__3553__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3541__auto__ = p;
    if (and__3541__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4180__auto__ = p == null ? null : p;
    return function() {
      var or__3553__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3541__auto__ = p;
      if (and__3541__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4180__auto__ = p == null ? null : p;
      return function() {
        var or__3553__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3541__auto__ = p;
      if (and__3541__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4180__auto__ = p == null ? null : p;
      return function() {
        var or__3553__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3553__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3553__auto__, mults) {
            return function(p1__56265_SHARP_) {
              if (cljs.core.truth_(p1__56265_SHARP_.call(null, topic))) {
                return p1__56265_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__56265_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3553__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t56388 !== "undefined") {
      } else {
        cljs.core.async.t56388 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta56389) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta56389 = meta56389;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t56388.cljs$lang$type = true;
        cljs.core.async.t56388.cljs$lang$ctorStr = "cljs.core.async/t56388";
        cljs.core.async.t56388.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
            return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t56388");
          };
        }(mults, ensure_mult);
        cljs.core.async.t56388.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t56388.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t56388.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t56388.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t56388.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t56388.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t56388.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t56388.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_56390) {
            var self__ = this;
            var _56390__$1 = this;
            return self__.meta56389;
          };
        }(mults, ensure_mult);
        cljs.core.async.t56388.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_56390, meta56389__$1) {
            var self__ = this;
            var _56390__$1 = this;
            return new cljs.core.async.t56388(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta56389__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t56388 = function(mults, ensure_mult) {
          return function __GT_t56388(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta56389) {
            return new cljs.core.async.t56388(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta56389);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t56388(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__51756__auto___56510 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto___56510, mults, ensure_mult, p) {
      return function() {
        var f__51757__auto__ = function() {
          var switch__51741__auto__ = function(c__51756__auto___56510, mults, ensure_mult, p) {
            return function(state_56462) {
              var state_val_56463 = state_56462[1];
              if (state_val_56463 === 7) {
                var inst_56458 = state_56462[2];
                var state_56462__$1 = state_56462;
                var statearr_56464_56511 = state_56462__$1;
                statearr_56464_56511[2] = inst_56458;
                statearr_56464_56511[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_56463 === 20) {
                  var state_56462__$1 = state_56462;
                  var statearr_56465_56512 = state_56462__$1;
                  statearr_56465_56512[2] = null;
                  statearr_56465_56512[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_56463 === 1) {
                    var state_56462__$1 = state_56462;
                    var statearr_56466_56513 = state_56462__$1;
                    statearr_56466_56513[2] = null;
                    statearr_56466_56513[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_56463 === 24) {
                      var inst_56441 = state_56462[7];
                      var inst_56450 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_56441);
                      var state_56462__$1 = state_56462;
                      var statearr_56467_56514 = state_56462__$1;
                      statearr_56467_56514[2] = inst_56450;
                      statearr_56467_56514[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_56463 === 4) {
                        var inst_56393 = state_56462[8];
                        var inst_56393__$1 = state_56462[2];
                        var inst_56394 = inst_56393__$1 == null;
                        var state_56462__$1 = function() {
                          var statearr_56468 = state_56462;
                          statearr_56468[8] = inst_56393__$1;
                          return statearr_56468;
                        }();
                        if (cljs.core.truth_(inst_56394)) {
                          var statearr_56469_56515 = state_56462__$1;
                          statearr_56469_56515[1] = 5;
                        } else {
                          var statearr_56470_56516 = state_56462__$1;
                          statearr_56470_56516[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_56463 === 15) {
                          var inst_56435 = state_56462[2];
                          var state_56462__$1 = state_56462;
                          var statearr_56471_56517 = state_56462__$1;
                          statearr_56471_56517[2] = inst_56435;
                          statearr_56471_56517[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_56463 === 21) {
                            var inst_56455 = state_56462[2];
                            var state_56462__$1 = function() {
                              var statearr_56472 = state_56462;
                              statearr_56472[9] = inst_56455;
                              return statearr_56472;
                            }();
                            var statearr_56473_56518 = state_56462__$1;
                            statearr_56473_56518[2] = null;
                            statearr_56473_56518[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_56463 === 13) {
                              var inst_56417 = state_56462[10];
                              var inst_56419 = cljs.core.chunked_seq_QMARK_.call(null, inst_56417);
                              var state_56462__$1 = state_56462;
                              if (inst_56419) {
                                var statearr_56474_56519 = state_56462__$1;
                                statearr_56474_56519[1] = 16;
                              } else {
                                var statearr_56475_56520 = state_56462__$1;
                                statearr_56475_56520[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_56463 === 22) {
                                var inst_56447 = state_56462[2];
                                var state_56462__$1 = state_56462;
                                if (cljs.core.truth_(inst_56447)) {
                                  var statearr_56476_56521 = state_56462__$1;
                                  statearr_56476_56521[1] = 23;
                                } else {
                                  var statearr_56477_56522 = state_56462__$1;
                                  statearr_56477_56522[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_56463 === 6) {
                                  var inst_56441 = state_56462[7];
                                  var inst_56443 = state_56462[11];
                                  var inst_56393 = state_56462[8];
                                  var inst_56441__$1 = topic_fn.call(null, inst_56393);
                                  var inst_56442 = cljs.core.deref.call(null, mults);
                                  var inst_56443__$1 = cljs.core.get.call(null, inst_56442, inst_56441__$1);
                                  var state_56462__$1 = function() {
                                    var statearr_56478 = state_56462;
                                    statearr_56478[7] = inst_56441__$1;
                                    statearr_56478[11] = inst_56443__$1;
                                    return statearr_56478;
                                  }();
                                  if (cljs.core.truth_(inst_56443__$1)) {
                                    var statearr_56479_56523 = state_56462__$1;
                                    statearr_56479_56523[1] = 19;
                                  } else {
                                    var statearr_56480_56524 = state_56462__$1;
                                    statearr_56480_56524[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_56463 === 25) {
                                    var inst_56452 = state_56462[2];
                                    var state_56462__$1 = state_56462;
                                    var statearr_56481_56525 = state_56462__$1;
                                    statearr_56481_56525[2] = inst_56452;
                                    statearr_56481_56525[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_56463 === 17) {
                                      var inst_56417 = state_56462[10];
                                      var inst_56426 = cljs.core.first.call(null, inst_56417);
                                      var inst_56427 = cljs.core.async.muxch_STAR_.call(null, inst_56426);
                                      var inst_56428 = cljs.core.async.close_BANG_.call(null, inst_56427);
                                      var inst_56429 = cljs.core.next.call(null, inst_56417);
                                      var inst_56403 = inst_56429;
                                      var inst_56404 = null;
                                      var inst_56405 = 0;
                                      var inst_56406 = 0;
                                      var state_56462__$1 = function() {
                                        var statearr_56482 = state_56462;
                                        statearr_56482[12] = inst_56404;
                                        statearr_56482[13] = inst_56406;
                                        statearr_56482[14] = inst_56403;
                                        statearr_56482[15] = inst_56405;
                                        statearr_56482[16] = inst_56428;
                                        return statearr_56482;
                                      }();
                                      var statearr_56483_56526 = state_56462__$1;
                                      statearr_56483_56526[2] = null;
                                      statearr_56483_56526[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_56463 === 3) {
                                        var inst_56460 = state_56462[2];
                                        var state_56462__$1 = state_56462;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_56462__$1, inst_56460);
                                      } else {
                                        if (state_val_56463 === 12) {
                                          var inst_56437 = state_56462[2];
                                          var state_56462__$1 = state_56462;
                                          var statearr_56484_56527 = state_56462__$1;
                                          statearr_56484_56527[2] = inst_56437;
                                          statearr_56484_56527[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_56463 === 2) {
                                            var state_56462__$1 = state_56462;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_56462__$1, 4, ch);
                                          } else {
                                            if (state_val_56463 === 23) {
                                              var state_56462__$1 = state_56462;
                                              var statearr_56485_56528 = state_56462__$1;
                                              statearr_56485_56528[2] = null;
                                              statearr_56485_56528[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_56463 === 19) {
                                                var inst_56443 = state_56462[11];
                                                var inst_56393 = state_56462[8];
                                                var inst_56445 = cljs.core.async.muxch_STAR_.call(null, inst_56443);
                                                var state_56462__$1 = state_56462;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_56462__$1, 22, inst_56445, inst_56393);
                                              } else {
                                                if (state_val_56463 === 11) {
                                                  var inst_56403 = state_56462[14];
                                                  var inst_56417 = state_56462[10];
                                                  var inst_56417__$1 = cljs.core.seq.call(null, inst_56403);
                                                  var state_56462__$1 = function() {
                                                    var statearr_56486 = state_56462;
                                                    statearr_56486[10] = inst_56417__$1;
                                                    return statearr_56486;
                                                  }();
                                                  if (inst_56417__$1) {
                                                    var statearr_56487_56529 = state_56462__$1;
                                                    statearr_56487_56529[1] = 13;
                                                  } else {
                                                    var statearr_56488_56530 = state_56462__$1;
                                                    statearr_56488_56530[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_56463 === 9) {
                                                    var inst_56439 = state_56462[2];
                                                    var state_56462__$1 = state_56462;
                                                    var statearr_56489_56531 = state_56462__$1;
                                                    statearr_56489_56531[2] = inst_56439;
                                                    statearr_56489_56531[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_56463 === 5) {
                                                      var inst_56400 = cljs.core.deref.call(null, mults);
                                                      var inst_56401 = cljs.core.vals.call(null, inst_56400);
                                                      var inst_56402 = cljs.core.seq.call(null, inst_56401);
                                                      var inst_56403 = inst_56402;
                                                      var inst_56404 = null;
                                                      var inst_56405 = 0;
                                                      var inst_56406 = 0;
                                                      var state_56462__$1 = function() {
                                                        var statearr_56490 = state_56462;
                                                        statearr_56490[12] = inst_56404;
                                                        statearr_56490[13] = inst_56406;
                                                        statearr_56490[14] = inst_56403;
                                                        statearr_56490[15] = inst_56405;
                                                        return statearr_56490;
                                                      }();
                                                      var statearr_56491_56532 = state_56462__$1;
                                                      statearr_56491_56532[2] = null;
                                                      statearr_56491_56532[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_56463 === 14) {
                                                        var state_56462__$1 = state_56462;
                                                        var statearr_56495_56533 = state_56462__$1;
                                                        statearr_56495_56533[2] = null;
                                                        statearr_56495_56533[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_56463 === 16) {
                                                          var inst_56417 = state_56462[10];
                                                          var inst_56421 = cljs.core.chunk_first.call(null, inst_56417);
                                                          var inst_56422 = cljs.core.chunk_rest.call(null, inst_56417);
                                                          var inst_56423 = cljs.core.count.call(null, inst_56421);
                                                          var inst_56403 = inst_56422;
                                                          var inst_56404 = inst_56421;
                                                          var inst_56405 = inst_56423;
                                                          var inst_56406 = 0;
                                                          var state_56462__$1 = function() {
                                                            var statearr_56496 = state_56462;
                                                            statearr_56496[12] = inst_56404;
                                                            statearr_56496[13] = inst_56406;
                                                            statearr_56496[14] = inst_56403;
                                                            statearr_56496[15] = inst_56405;
                                                            return statearr_56496;
                                                          }();
                                                          var statearr_56497_56534 = state_56462__$1;
                                                          statearr_56497_56534[2] = null;
                                                          statearr_56497_56534[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_56463 === 10) {
                                                            var inst_56404 = state_56462[12];
                                                            var inst_56406 = state_56462[13];
                                                            var inst_56403 = state_56462[14];
                                                            var inst_56405 = state_56462[15];
                                                            var inst_56411 = cljs.core._nth.call(null, inst_56404, inst_56406);
                                                            var inst_56412 = cljs.core.async.muxch_STAR_.call(null, inst_56411);
                                                            var inst_56413 = cljs.core.async.close_BANG_.call(null, inst_56412);
                                                            var inst_56414 = inst_56406 + 1;
                                                            var tmp56492 = inst_56404;
                                                            var tmp56493 = inst_56403;
                                                            var tmp56494 = inst_56405;
                                                            var inst_56403__$1 = tmp56493;
                                                            var inst_56404__$1 = tmp56492;
                                                            var inst_56405__$1 = tmp56494;
                                                            var inst_56406__$1 = inst_56414;
                                                            var state_56462__$1 = function() {
                                                              var statearr_56498 = state_56462;
                                                              statearr_56498[12] = inst_56404__$1;
                                                              statearr_56498[13] = inst_56406__$1;
                                                              statearr_56498[14] = inst_56403__$1;
                                                              statearr_56498[15] = inst_56405__$1;
                                                              statearr_56498[17] = inst_56413;
                                                              return statearr_56498;
                                                            }();
                                                            var statearr_56499_56535 = state_56462__$1;
                                                            statearr_56499_56535[2] = null;
                                                            statearr_56499_56535[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_56463 === 18) {
                                                              var inst_56432 = state_56462[2];
                                                              var state_56462__$1 = state_56462;
                                                              var statearr_56500_56536 = state_56462__$1;
                                                              statearr_56500_56536[2] = inst_56432;
                                                              statearr_56500_56536[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_56463 === 8) {
                                                                var inst_56406 = state_56462[13];
                                                                var inst_56405 = state_56462[15];
                                                                var inst_56408 = inst_56406 < inst_56405;
                                                                var inst_56409 = inst_56408;
                                                                var state_56462__$1 = state_56462;
                                                                if (cljs.core.truth_(inst_56409)) {
                                                                  var statearr_56501_56537 = state_56462__$1;
                                                                  statearr_56501_56537[1] = 10;
                                                                } else {
                                                                  var statearr_56502_56538 = state_56462__$1;
                                                                  statearr_56502_56538[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__51756__auto___56510, mults, ensure_mult, p);
          return function(switch__51741__auto__, c__51756__auto___56510, mults, ensure_mult, p) {
            return function() {
              var state_machine__51742__auto__ = null;
              var state_machine__51742__auto____0 = function() {
                var statearr_56506 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_56506[0] = state_machine__51742__auto__;
                statearr_56506[1] = 1;
                return statearr_56506;
              };
              var state_machine__51742__auto____1 = function(state_56462) {
                while (true) {
                  var ret_value__51743__auto__ = function() {
                    try {
                      while (true) {
                        var result__51744__auto__ = switch__51741__auto__.call(null, state_56462);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__51744__auto__;
                        }
                        break;
                      }
                    } catch (e56507) {
                      if (e56507 instanceof Object) {
                        var ex__51745__auto__ = e56507;
                        var statearr_56508_56539 = state_56462;
                        statearr_56508_56539[5] = ex__51745__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_56462);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e56507;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__56540 = state_56462;
                    state_56462 = G__56540;
                    continue;
                  } else {
                    return ret_value__51743__auto__;
                  }
                  break;
                }
              };
              state_machine__51742__auto__ = function(state_56462) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__51742__auto____0.call(this);
                  case 1:
                    return state_machine__51742__auto____1.call(this, state_56462);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
              return state_machine__51742__auto__;
            }();
          }(switch__51741__auto__, c__51756__auto___56510, mults, ensure_mult, p);
        }();
        var state__51758__auto__ = function() {
          var statearr_56509 = f__51757__auto__.call(null);
          statearr_56509[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto___56510;
          return statearr_56509;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
      };
    }(c__51756__auto___56510, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__51756__auto___56677 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto___56677, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__51757__auto__ = function() {
          var switch__51741__auto__ = function(c__51756__auto___56677, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_56647) {
              var state_val_56648 = state_56647[1];
              if (state_val_56648 === 7) {
                var state_56647__$1 = state_56647;
                var statearr_56649_56678 = state_56647__$1;
                statearr_56649_56678[2] = null;
                statearr_56649_56678[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_56648 === 1) {
                  var state_56647__$1 = state_56647;
                  var statearr_56650_56679 = state_56647__$1;
                  statearr_56650_56679[2] = null;
                  statearr_56650_56679[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_56648 === 4) {
                    var inst_56611 = state_56647[7];
                    var inst_56613 = inst_56611 < cnt;
                    var state_56647__$1 = state_56647;
                    if (cljs.core.truth_(inst_56613)) {
                      var statearr_56651_56680 = state_56647__$1;
                      statearr_56651_56680[1] = 6;
                    } else {
                      var statearr_56652_56681 = state_56647__$1;
                      statearr_56652_56681[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_56648 === 15) {
                      var inst_56643 = state_56647[2];
                      var state_56647__$1 = state_56647;
                      var statearr_56653_56682 = state_56647__$1;
                      statearr_56653_56682[2] = inst_56643;
                      statearr_56653_56682[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_56648 === 13) {
                        var inst_56636 = cljs.core.async.close_BANG_.call(null, out);
                        var state_56647__$1 = state_56647;
                        var statearr_56654_56683 = state_56647__$1;
                        statearr_56654_56683[2] = inst_56636;
                        statearr_56654_56683[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_56648 === 6) {
                          var state_56647__$1 = state_56647;
                          var statearr_56655_56684 = state_56647__$1;
                          statearr_56655_56684[2] = null;
                          statearr_56655_56684[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_56648 === 3) {
                            var inst_56645 = state_56647[2];
                            var state_56647__$1 = state_56647;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_56647__$1, inst_56645);
                          } else {
                            if (state_val_56648 === 12) {
                              var inst_56633 = state_56647[8];
                              var inst_56633__$1 = state_56647[2];
                              var inst_56634 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_56633__$1);
                              var state_56647__$1 = function() {
                                var statearr_56656 = state_56647;
                                statearr_56656[8] = inst_56633__$1;
                                return statearr_56656;
                              }();
                              if (cljs.core.truth_(inst_56634)) {
                                var statearr_56657_56685 = state_56647__$1;
                                statearr_56657_56685[1] = 13;
                              } else {
                                var statearr_56658_56686 = state_56647__$1;
                                statearr_56658_56686[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_56648 === 2) {
                                var inst_56610 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_56611 = 0;
                                var state_56647__$1 = function() {
                                  var statearr_56659 = state_56647;
                                  statearr_56659[7] = inst_56611;
                                  statearr_56659[9] = inst_56610;
                                  return statearr_56659;
                                }();
                                var statearr_56660_56687 = state_56647__$1;
                                statearr_56660_56687[2] = null;
                                statearr_56660_56687[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_56648 === 11) {
                                  var inst_56611 = state_56647[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_56647, 10, Object, null, 9);
                                  var inst_56620 = chs__$1.call(null, inst_56611);
                                  var inst_56621 = done.call(null, inst_56611);
                                  var inst_56622 = cljs.core.async.take_BANG_.call(null, inst_56620, inst_56621);
                                  var state_56647__$1 = state_56647;
                                  var statearr_56661_56688 = state_56647__$1;
                                  statearr_56661_56688[2] = inst_56622;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_56647__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_56648 === 9) {
                                    var inst_56611 = state_56647[7];
                                    var inst_56624 = state_56647[2];
                                    var inst_56625 = inst_56611 + 1;
                                    var inst_56611__$1 = inst_56625;
                                    var state_56647__$1 = function() {
                                      var statearr_56662 = state_56647;
                                      statearr_56662[10] = inst_56624;
                                      statearr_56662[7] = inst_56611__$1;
                                      return statearr_56662;
                                    }();
                                    var statearr_56663_56689 = state_56647__$1;
                                    statearr_56663_56689[2] = null;
                                    statearr_56663_56689[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_56648 === 5) {
                                      var inst_56631 = state_56647[2];
                                      var state_56647__$1 = function() {
                                        var statearr_56664 = state_56647;
                                        statearr_56664[11] = inst_56631;
                                        return statearr_56664;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_56647__$1, 12, dchan);
                                    } else {
                                      if (state_val_56648 === 14) {
                                        var inst_56633 = state_56647[8];
                                        var inst_56638 = cljs.core.apply.call(null, f, inst_56633);
                                        var state_56647__$1 = state_56647;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_56647__$1, 16, out, inst_56638);
                                      } else {
                                        if (state_val_56648 === 16) {
                                          var inst_56640 = state_56647[2];
                                          var state_56647__$1 = function() {
                                            var statearr_56665 = state_56647;
                                            statearr_56665[12] = inst_56640;
                                            return statearr_56665;
                                          }();
                                          var statearr_56666_56690 = state_56647__$1;
                                          statearr_56666_56690[2] = null;
                                          statearr_56666_56690[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_56648 === 10) {
                                            var inst_56615 = state_56647[2];
                                            var inst_56616 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_56647__$1 = function() {
                                              var statearr_56667 = state_56647;
                                              statearr_56667[13] = inst_56615;
                                              return statearr_56667;
                                            }();
                                            var statearr_56668_56691 = state_56647__$1;
                                            statearr_56668_56691[2] = inst_56616;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_56647__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_56648 === 8) {
                                              var inst_56629 = state_56647[2];
                                              var state_56647__$1 = state_56647;
                                              var statearr_56669_56692 = state_56647__$1;
                                              statearr_56669_56692[2] = inst_56629;
                                              statearr_56669_56692[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__51756__auto___56677, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__51741__auto__, c__51756__auto___56677, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__51742__auto__ = null;
              var state_machine__51742__auto____0 = function() {
                var statearr_56673 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_56673[0] = state_machine__51742__auto__;
                statearr_56673[1] = 1;
                return statearr_56673;
              };
              var state_machine__51742__auto____1 = function(state_56647) {
                while (true) {
                  var ret_value__51743__auto__ = function() {
                    try {
                      while (true) {
                        var result__51744__auto__ = switch__51741__auto__.call(null, state_56647);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__51744__auto__;
                        }
                        break;
                      }
                    } catch (e56674) {
                      if (e56674 instanceof Object) {
                        var ex__51745__auto__ = e56674;
                        var statearr_56675_56693 = state_56647;
                        statearr_56675_56693[5] = ex__51745__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_56647);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e56674;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__56694 = state_56647;
                    state_56647 = G__56694;
                    continue;
                  } else {
                    return ret_value__51743__auto__;
                  }
                  break;
                }
              };
              state_machine__51742__auto__ = function(state_56647) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__51742__auto____0.call(this);
                  case 1:
                    return state_machine__51742__auto____1.call(this, state_56647);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
              return state_machine__51742__auto__;
            }();
          }(switch__51741__auto__, c__51756__auto___56677, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__51758__auto__ = function() {
          var statearr_56676 = f__51757__auto__.call(null);
          statearr_56676[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto___56677;
          return statearr_56676;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
      };
    }(c__51756__auto___56677, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__51756__auto___56802 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto___56802, out) {
      return function() {
        var f__51757__auto__ = function() {
          var switch__51741__auto__ = function(c__51756__auto___56802, out) {
            return function(state_56778) {
              var state_val_56779 = state_56778[1];
              if (state_val_56779 === 7) {
                var inst_56757 = state_56778[7];
                var inst_56758 = state_56778[8];
                var inst_56757__$1 = state_56778[2];
                var inst_56758__$1 = cljs.core.nth.call(null, inst_56757__$1, 0, null);
                var inst_56759 = cljs.core.nth.call(null, inst_56757__$1, 1, null);
                var inst_56760 = inst_56758__$1 == null;
                var state_56778__$1 = function() {
                  var statearr_56780 = state_56778;
                  statearr_56780[7] = inst_56757__$1;
                  statearr_56780[9] = inst_56759;
                  statearr_56780[8] = inst_56758__$1;
                  return statearr_56780;
                }();
                if (cljs.core.truth_(inst_56760)) {
                  var statearr_56781_56803 = state_56778__$1;
                  statearr_56781_56803[1] = 8;
                } else {
                  var statearr_56782_56804 = state_56778__$1;
                  statearr_56782_56804[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_56779 === 1) {
                  var inst_56749 = cljs.core.vec.call(null, chs);
                  var inst_56750 = inst_56749;
                  var state_56778__$1 = function() {
                    var statearr_56783 = state_56778;
                    statearr_56783[10] = inst_56750;
                    return statearr_56783;
                  }();
                  var statearr_56784_56805 = state_56778__$1;
                  statearr_56784_56805[2] = null;
                  statearr_56784_56805[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_56779 === 4) {
                    var inst_56750 = state_56778[10];
                    var state_56778__$1 = state_56778;
                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_56778__$1, 7, inst_56750);
                  } else {
                    if (state_val_56779 === 6) {
                      var inst_56774 = state_56778[2];
                      var state_56778__$1 = state_56778;
                      var statearr_56785_56806 = state_56778__$1;
                      statearr_56785_56806[2] = inst_56774;
                      statearr_56785_56806[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_56779 === 3) {
                        var inst_56776 = state_56778[2];
                        var state_56778__$1 = state_56778;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_56778__$1, inst_56776);
                      } else {
                        if (state_val_56779 === 2) {
                          var inst_56750 = state_56778[10];
                          var inst_56752 = cljs.core.count.call(null, inst_56750);
                          var inst_56753 = inst_56752 > 0;
                          var state_56778__$1 = state_56778;
                          if (cljs.core.truth_(inst_56753)) {
                            var statearr_56787_56807 = state_56778__$1;
                            statearr_56787_56807[1] = 4;
                          } else {
                            var statearr_56788_56808 = state_56778__$1;
                            statearr_56788_56808[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_56779 === 11) {
                            var inst_56750 = state_56778[10];
                            var inst_56767 = state_56778[2];
                            var tmp56786 = inst_56750;
                            var inst_56750__$1 = tmp56786;
                            var state_56778__$1 = function() {
                              var statearr_56789 = state_56778;
                              statearr_56789[11] = inst_56767;
                              statearr_56789[10] = inst_56750__$1;
                              return statearr_56789;
                            }();
                            var statearr_56790_56809 = state_56778__$1;
                            statearr_56790_56809[2] = null;
                            statearr_56790_56809[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_56779 === 9) {
                              var inst_56758 = state_56778[8];
                              var state_56778__$1 = state_56778;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_56778__$1, 11, out, inst_56758);
                            } else {
                              if (state_val_56779 === 5) {
                                var inst_56772 = cljs.core.async.close_BANG_.call(null, out);
                                var state_56778__$1 = state_56778;
                                var statearr_56791_56810 = state_56778__$1;
                                statearr_56791_56810[2] = inst_56772;
                                statearr_56791_56810[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_56779 === 10) {
                                  var inst_56770 = state_56778[2];
                                  var state_56778__$1 = state_56778;
                                  var statearr_56792_56811 = state_56778__$1;
                                  statearr_56792_56811[2] = inst_56770;
                                  statearr_56792_56811[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_56779 === 8) {
                                    var inst_56757 = state_56778[7];
                                    var inst_56759 = state_56778[9];
                                    var inst_56758 = state_56778[8];
                                    var inst_56750 = state_56778[10];
                                    var inst_56762 = function() {
                                      var c = inst_56759;
                                      var v = inst_56758;
                                      var vec__56755 = inst_56757;
                                      var cs = inst_56750;
                                      return function(c, v, vec__56755, cs, inst_56757, inst_56759, inst_56758, inst_56750, state_val_56779, c__51756__auto___56802, out) {
                                        return function(p1__56695_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__56695_SHARP_);
                                        };
                                      }(c, v, vec__56755, cs, inst_56757, inst_56759, inst_56758, inst_56750, state_val_56779, c__51756__auto___56802, out);
                                    }();
                                    var inst_56763 = cljs.core.filterv.call(null, inst_56762, inst_56750);
                                    var inst_56750__$1 = inst_56763;
                                    var state_56778__$1 = function() {
                                      var statearr_56793 = state_56778;
                                      statearr_56793[10] = inst_56750__$1;
                                      return statearr_56793;
                                    }();
                                    var statearr_56794_56812 = state_56778__$1;
                                    statearr_56794_56812[2] = null;
                                    statearr_56794_56812[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__51756__auto___56802, out);
          return function(switch__51741__auto__, c__51756__auto___56802, out) {
            return function() {
              var state_machine__51742__auto__ = null;
              var state_machine__51742__auto____0 = function() {
                var statearr_56798 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_56798[0] = state_machine__51742__auto__;
                statearr_56798[1] = 1;
                return statearr_56798;
              };
              var state_machine__51742__auto____1 = function(state_56778) {
                while (true) {
                  var ret_value__51743__auto__ = function() {
                    try {
                      while (true) {
                        var result__51744__auto__ = switch__51741__auto__.call(null, state_56778);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__51744__auto__;
                        }
                        break;
                      }
                    } catch (e56799) {
                      if (e56799 instanceof Object) {
                        var ex__51745__auto__ = e56799;
                        var statearr_56800_56813 = state_56778;
                        statearr_56800_56813[5] = ex__51745__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_56778);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e56799;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__56814 = state_56778;
                    state_56778 = G__56814;
                    continue;
                  } else {
                    return ret_value__51743__auto__;
                  }
                  break;
                }
              };
              state_machine__51742__auto__ = function(state_56778) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__51742__auto____0.call(this);
                  case 1:
                    return state_machine__51742__auto____1.call(this, state_56778);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
              return state_machine__51742__auto__;
            }();
          }(switch__51741__auto__, c__51756__auto___56802, out);
        }();
        var state__51758__auto__ = function() {
          var statearr_56801 = f__51757__auto__.call(null);
          statearr_56801[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto___56802;
          return statearr_56801;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
      };
    }(c__51756__auto___56802, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__51756__auto___56907 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto___56907, out) {
      return function() {
        var f__51757__auto__ = function() {
          var switch__51741__auto__ = function(c__51756__auto___56907, out) {
            return function(state_56884) {
              var state_val_56885 = state_56884[1];
              if (state_val_56885 === 7) {
                var inst_56866 = state_56884[7];
                var inst_56866__$1 = state_56884[2];
                var inst_56867 = inst_56866__$1 == null;
                var inst_56868 = cljs.core.not.call(null, inst_56867);
                var state_56884__$1 = function() {
                  var statearr_56886 = state_56884;
                  statearr_56886[7] = inst_56866__$1;
                  return statearr_56886;
                }();
                if (inst_56868) {
                  var statearr_56887_56908 = state_56884__$1;
                  statearr_56887_56908[1] = 8;
                } else {
                  var statearr_56888_56909 = state_56884__$1;
                  statearr_56888_56909[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_56885 === 1) {
                  var inst_56861 = 0;
                  var state_56884__$1 = function() {
                    var statearr_56889 = state_56884;
                    statearr_56889[8] = inst_56861;
                    return statearr_56889;
                  }();
                  var statearr_56890_56910 = state_56884__$1;
                  statearr_56890_56910[2] = null;
                  statearr_56890_56910[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_56885 === 4) {
                    var state_56884__$1 = state_56884;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_56884__$1, 7, ch);
                  } else {
                    if (state_val_56885 === 6) {
                      var inst_56879 = state_56884[2];
                      var state_56884__$1 = state_56884;
                      var statearr_56891_56911 = state_56884__$1;
                      statearr_56891_56911[2] = inst_56879;
                      statearr_56891_56911[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_56885 === 3) {
                        var inst_56881 = state_56884[2];
                        var inst_56882 = cljs.core.async.close_BANG_.call(null, out);
                        var state_56884__$1 = function() {
                          var statearr_56892 = state_56884;
                          statearr_56892[9] = inst_56881;
                          return statearr_56892;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_56884__$1, inst_56882);
                      } else {
                        if (state_val_56885 === 2) {
                          var inst_56861 = state_56884[8];
                          var inst_56863 = inst_56861 < n;
                          var state_56884__$1 = state_56884;
                          if (cljs.core.truth_(inst_56863)) {
                            var statearr_56893_56912 = state_56884__$1;
                            statearr_56893_56912[1] = 4;
                          } else {
                            var statearr_56894_56913 = state_56884__$1;
                            statearr_56894_56913[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_56885 === 11) {
                            var inst_56861 = state_56884[8];
                            var inst_56871 = state_56884[2];
                            var inst_56872 = inst_56861 + 1;
                            var inst_56861__$1 = inst_56872;
                            var state_56884__$1 = function() {
                              var statearr_56895 = state_56884;
                              statearr_56895[8] = inst_56861__$1;
                              statearr_56895[10] = inst_56871;
                              return statearr_56895;
                            }();
                            var statearr_56896_56914 = state_56884__$1;
                            statearr_56896_56914[2] = null;
                            statearr_56896_56914[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_56885 === 9) {
                              var state_56884__$1 = state_56884;
                              var statearr_56897_56915 = state_56884__$1;
                              statearr_56897_56915[2] = null;
                              statearr_56897_56915[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_56885 === 5) {
                                var state_56884__$1 = state_56884;
                                var statearr_56898_56916 = state_56884__$1;
                                statearr_56898_56916[2] = null;
                                statearr_56898_56916[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_56885 === 10) {
                                  var inst_56876 = state_56884[2];
                                  var state_56884__$1 = state_56884;
                                  var statearr_56899_56917 = state_56884__$1;
                                  statearr_56899_56917[2] = inst_56876;
                                  statearr_56899_56917[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_56885 === 8) {
                                    var inst_56866 = state_56884[7];
                                    var state_56884__$1 = state_56884;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_56884__$1, 11, out, inst_56866);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__51756__auto___56907, out);
          return function(switch__51741__auto__, c__51756__auto___56907, out) {
            return function() {
              var state_machine__51742__auto__ = null;
              var state_machine__51742__auto____0 = function() {
                var statearr_56903 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_56903[0] = state_machine__51742__auto__;
                statearr_56903[1] = 1;
                return statearr_56903;
              };
              var state_machine__51742__auto____1 = function(state_56884) {
                while (true) {
                  var ret_value__51743__auto__ = function() {
                    try {
                      while (true) {
                        var result__51744__auto__ = switch__51741__auto__.call(null, state_56884);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__51744__auto__;
                        }
                        break;
                      }
                    } catch (e56904) {
                      if (e56904 instanceof Object) {
                        var ex__51745__auto__ = e56904;
                        var statearr_56905_56918 = state_56884;
                        statearr_56905_56918[5] = ex__51745__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_56884);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e56904;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__56919 = state_56884;
                    state_56884 = G__56919;
                    continue;
                  } else {
                    return ret_value__51743__auto__;
                  }
                  break;
                }
              };
              state_machine__51742__auto__ = function(state_56884) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__51742__auto____0.call(this);
                  case 1:
                    return state_machine__51742__auto____1.call(this, state_56884);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
              return state_machine__51742__auto__;
            }();
          }(switch__51741__auto__, c__51756__auto___56907, out);
        }();
        var state__51758__auto__ = function() {
          var statearr_56906 = f__51757__auto__.call(null);
          statearr_56906[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto___56907;
          return statearr_56906;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
      };
    }(c__51756__auto___56907, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__51756__auto___57016 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto___57016, out) {
      return function() {
        var f__51757__auto__ = function() {
          var switch__51741__auto__ = function(c__51756__auto___57016, out) {
            return function(state_56991) {
              var state_val_56992 = state_56991[1];
              if (state_val_56992 === 7) {
                var inst_56986 = state_56991[2];
                var state_56991__$1 = state_56991;
                var statearr_56993_57017 = state_56991__$1;
                statearr_56993_57017[2] = inst_56986;
                statearr_56993_57017[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_56992 === 1) {
                  var inst_56968 = null;
                  var state_56991__$1 = function() {
                    var statearr_56994 = state_56991;
                    statearr_56994[7] = inst_56968;
                    return statearr_56994;
                  }();
                  var statearr_56995_57018 = state_56991__$1;
                  statearr_56995_57018[2] = null;
                  statearr_56995_57018[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_56992 === 4) {
                    var inst_56971 = state_56991[8];
                    var inst_56971__$1 = state_56991[2];
                    var inst_56972 = inst_56971__$1 == null;
                    var inst_56973 = cljs.core.not.call(null, inst_56972);
                    var state_56991__$1 = function() {
                      var statearr_56996 = state_56991;
                      statearr_56996[8] = inst_56971__$1;
                      return statearr_56996;
                    }();
                    if (inst_56973) {
                      var statearr_56997_57019 = state_56991__$1;
                      statearr_56997_57019[1] = 5;
                    } else {
                      var statearr_56998_57020 = state_56991__$1;
                      statearr_56998_57020[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_56992 === 6) {
                      var state_56991__$1 = state_56991;
                      var statearr_56999_57021 = state_56991__$1;
                      statearr_56999_57021[2] = null;
                      statearr_56999_57021[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_56992 === 3) {
                        var inst_56988 = state_56991[2];
                        var inst_56989 = cljs.core.async.close_BANG_.call(null, out);
                        var state_56991__$1 = function() {
                          var statearr_57000 = state_56991;
                          statearr_57000[9] = inst_56988;
                          return statearr_57000;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_56991__$1, inst_56989);
                      } else {
                        if (state_val_56992 === 2) {
                          var state_56991__$1 = state_56991;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_56991__$1, 4, ch);
                        } else {
                          if (state_val_56992 === 11) {
                            var inst_56971 = state_56991[8];
                            var inst_56980 = state_56991[2];
                            var inst_56968 = inst_56971;
                            var state_56991__$1 = function() {
                              var statearr_57001 = state_56991;
                              statearr_57001[7] = inst_56968;
                              statearr_57001[10] = inst_56980;
                              return statearr_57001;
                            }();
                            var statearr_57002_57022 = state_56991__$1;
                            statearr_57002_57022[2] = null;
                            statearr_57002_57022[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_56992 === 9) {
                              var inst_56971 = state_56991[8];
                              var state_56991__$1 = state_56991;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_56991__$1, 11, out, inst_56971);
                            } else {
                              if (state_val_56992 === 5) {
                                var inst_56968 = state_56991[7];
                                var inst_56971 = state_56991[8];
                                var inst_56975 = cljs.core._EQ_.call(null, inst_56971, inst_56968);
                                var state_56991__$1 = state_56991;
                                if (inst_56975) {
                                  var statearr_57004_57023 = state_56991__$1;
                                  statearr_57004_57023[1] = 8;
                                } else {
                                  var statearr_57005_57024 = state_56991__$1;
                                  statearr_57005_57024[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_56992 === 10) {
                                  var inst_56983 = state_56991[2];
                                  var state_56991__$1 = state_56991;
                                  var statearr_57006_57025 = state_56991__$1;
                                  statearr_57006_57025[2] = inst_56983;
                                  statearr_57006_57025[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_56992 === 8) {
                                    var inst_56968 = state_56991[7];
                                    var tmp57003 = inst_56968;
                                    var inst_56968__$1 = tmp57003;
                                    var state_56991__$1 = function() {
                                      var statearr_57007 = state_56991;
                                      statearr_57007[7] = inst_56968__$1;
                                      return statearr_57007;
                                    }();
                                    var statearr_57008_57026 = state_56991__$1;
                                    statearr_57008_57026[2] = null;
                                    statearr_57008_57026[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__51756__auto___57016, out);
          return function(switch__51741__auto__, c__51756__auto___57016, out) {
            return function() {
              var state_machine__51742__auto__ = null;
              var state_machine__51742__auto____0 = function() {
                var statearr_57012 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_57012[0] = state_machine__51742__auto__;
                statearr_57012[1] = 1;
                return statearr_57012;
              };
              var state_machine__51742__auto____1 = function(state_56991) {
                while (true) {
                  var ret_value__51743__auto__ = function() {
                    try {
                      while (true) {
                        var result__51744__auto__ = switch__51741__auto__.call(null, state_56991);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__51744__auto__;
                        }
                        break;
                      }
                    } catch (e57013) {
                      if (e57013 instanceof Object) {
                        var ex__51745__auto__ = e57013;
                        var statearr_57014_57027 = state_56991;
                        statearr_57014_57027[5] = ex__51745__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_56991);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e57013;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__57028 = state_56991;
                    state_56991 = G__57028;
                    continue;
                  } else {
                    return ret_value__51743__auto__;
                  }
                  break;
                }
              };
              state_machine__51742__auto__ = function(state_56991) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__51742__auto____0.call(this);
                  case 1:
                    return state_machine__51742__auto____1.call(this, state_56991);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
              return state_machine__51742__auto__;
            }();
          }(switch__51741__auto__, c__51756__auto___57016, out);
        }();
        var state__51758__auto__ = function() {
          var statearr_57015 = f__51757__auto__.call(null);
          statearr_57015[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto___57016;
          return statearr_57015;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
      };
    }(c__51756__auto___57016, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__51756__auto___57163 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto___57163, out) {
      return function() {
        var f__51757__auto__ = function() {
          var switch__51741__auto__ = function(c__51756__auto___57163, out) {
            return function(state_57133) {
              var state_val_57134 = state_57133[1];
              if (state_val_57134 === 7) {
                var inst_57129 = state_57133[2];
                var state_57133__$1 = state_57133;
                var statearr_57135_57164 = state_57133__$1;
                statearr_57135_57164[2] = inst_57129;
                statearr_57135_57164[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_57134 === 1) {
                  var inst_57096 = new Array(n);
                  var inst_57097 = inst_57096;
                  var inst_57098 = 0;
                  var state_57133__$1 = function() {
                    var statearr_57136 = state_57133;
                    statearr_57136[7] = inst_57097;
                    statearr_57136[8] = inst_57098;
                    return statearr_57136;
                  }();
                  var statearr_57137_57165 = state_57133__$1;
                  statearr_57137_57165[2] = null;
                  statearr_57137_57165[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_57134 === 4) {
                    var inst_57101 = state_57133[9];
                    var inst_57101__$1 = state_57133[2];
                    var inst_57102 = inst_57101__$1 == null;
                    var inst_57103 = cljs.core.not.call(null, inst_57102);
                    var state_57133__$1 = function() {
                      var statearr_57138 = state_57133;
                      statearr_57138[9] = inst_57101__$1;
                      return statearr_57138;
                    }();
                    if (inst_57103) {
                      var statearr_57139_57166 = state_57133__$1;
                      statearr_57139_57166[1] = 5;
                    } else {
                      var statearr_57140_57167 = state_57133__$1;
                      statearr_57140_57167[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_57134 === 15) {
                      var inst_57123 = state_57133[2];
                      var state_57133__$1 = state_57133;
                      var statearr_57141_57168 = state_57133__$1;
                      statearr_57141_57168[2] = inst_57123;
                      statearr_57141_57168[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_57134 === 13) {
                        var state_57133__$1 = state_57133;
                        var statearr_57142_57169 = state_57133__$1;
                        statearr_57142_57169[2] = null;
                        statearr_57142_57169[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_57134 === 6) {
                          var inst_57098 = state_57133[8];
                          var inst_57119 = inst_57098 > 0;
                          var state_57133__$1 = state_57133;
                          if (cljs.core.truth_(inst_57119)) {
                            var statearr_57143_57170 = state_57133__$1;
                            statearr_57143_57170[1] = 12;
                          } else {
                            var statearr_57144_57171 = state_57133__$1;
                            statearr_57144_57171[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_57134 === 3) {
                            var inst_57131 = state_57133[2];
                            var state_57133__$1 = state_57133;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_57133__$1, inst_57131);
                          } else {
                            if (state_val_57134 === 12) {
                              var inst_57097 = state_57133[7];
                              var inst_57121 = cljs.core.vec.call(null, inst_57097);
                              var state_57133__$1 = state_57133;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_57133__$1, 15, out, inst_57121);
                            } else {
                              if (state_val_57134 === 2) {
                                var state_57133__$1 = state_57133;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_57133__$1, 4, ch);
                              } else {
                                if (state_val_57134 === 11) {
                                  var inst_57113 = state_57133[2];
                                  var inst_57114 = new Array(n);
                                  var inst_57097 = inst_57114;
                                  var inst_57098 = 0;
                                  var state_57133__$1 = function() {
                                    var statearr_57145 = state_57133;
                                    statearr_57145[7] = inst_57097;
                                    statearr_57145[8] = inst_57098;
                                    statearr_57145[10] = inst_57113;
                                    return statearr_57145;
                                  }();
                                  var statearr_57146_57172 = state_57133__$1;
                                  statearr_57146_57172[2] = null;
                                  statearr_57146_57172[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_57134 === 9) {
                                    var inst_57097 = state_57133[7];
                                    var inst_57111 = cljs.core.vec.call(null, inst_57097);
                                    var state_57133__$1 = state_57133;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_57133__$1, 11, out, inst_57111);
                                  } else {
                                    if (state_val_57134 === 5) {
                                      var inst_57097 = state_57133[7];
                                      var inst_57098 = state_57133[8];
                                      var inst_57106 = state_57133[11];
                                      var inst_57101 = state_57133[9];
                                      var inst_57105 = inst_57097[inst_57098] = inst_57101;
                                      var inst_57106__$1 = inst_57098 + 1;
                                      var inst_57107 = inst_57106__$1 < n;
                                      var state_57133__$1 = function() {
                                        var statearr_57147 = state_57133;
                                        statearr_57147[11] = inst_57106__$1;
                                        statearr_57147[12] = inst_57105;
                                        return statearr_57147;
                                      }();
                                      if (cljs.core.truth_(inst_57107)) {
                                        var statearr_57148_57173 = state_57133__$1;
                                        statearr_57148_57173[1] = 8;
                                      } else {
                                        var statearr_57149_57174 = state_57133__$1;
                                        statearr_57149_57174[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_57134 === 14) {
                                        var inst_57126 = state_57133[2];
                                        var inst_57127 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_57133__$1 = function() {
                                          var statearr_57151 = state_57133;
                                          statearr_57151[13] = inst_57126;
                                          return statearr_57151;
                                        }();
                                        var statearr_57152_57175 = state_57133__$1;
                                        statearr_57152_57175[2] = inst_57127;
                                        statearr_57152_57175[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_57134 === 10) {
                                          var inst_57117 = state_57133[2];
                                          var state_57133__$1 = state_57133;
                                          var statearr_57153_57176 = state_57133__$1;
                                          statearr_57153_57176[2] = inst_57117;
                                          statearr_57153_57176[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_57134 === 8) {
                                            var inst_57097 = state_57133[7];
                                            var inst_57106 = state_57133[11];
                                            var tmp57150 = inst_57097;
                                            var inst_57097__$1 = tmp57150;
                                            var inst_57098 = inst_57106;
                                            var state_57133__$1 = function() {
                                              var statearr_57154 = state_57133;
                                              statearr_57154[7] = inst_57097__$1;
                                              statearr_57154[8] = inst_57098;
                                              return statearr_57154;
                                            }();
                                            var statearr_57155_57177 = state_57133__$1;
                                            statearr_57155_57177[2] = null;
                                            statearr_57155_57177[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__51756__auto___57163, out);
          return function(switch__51741__auto__, c__51756__auto___57163, out) {
            return function() {
              var state_machine__51742__auto__ = null;
              var state_machine__51742__auto____0 = function() {
                var statearr_57159 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_57159[0] = state_machine__51742__auto__;
                statearr_57159[1] = 1;
                return statearr_57159;
              };
              var state_machine__51742__auto____1 = function(state_57133) {
                while (true) {
                  var ret_value__51743__auto__ = function() {
                    try {
                      while (true) {
                        var result__51744__auto__ = switch__51741__auto__.call(null, state_57133);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__51744__auto__;
                        }
                        break;
                      }
                    } catch (e57160) {
                      if (e57160 instanceof Object) {
                        var ex__51745__auto__ = e57160;
                        var statearr_57161_57178 = state_57133;
                        statearr_57161_57178[5] = ex__51745__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_57133);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e57160;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__57179 = state_57133;
                    state_57133 = G__57179;
                    continue;
                  } else {
                    return ret_value__51743__auto__;
                  }
                  break;
                }
              };
              state_machine__51742__auto__ = function(state_57133) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__51742__auto____0.call(this);
                  case 1:
                    return state_machine__51742__auto____1.call(this, state_57133);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
              return state_machine__51742__auto__;
            }();
          }(switch__51741__auto__, c__51756__auto___57163, out);
        }();
        var state__51758__auto__ = function() {
          var statearr_57162 = f__51757__auto__.call(null);
          statearr_57162[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto___57163;
          return statearr_57162;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
      };
    }(c__51756__auto___57163, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__51756__auto___57322 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto___57322, out) {
      return function() {
        var f__51757__auto__ = function() {
          var switch__51741__auto__ = function(c__51756__auto___57322, out) {
            return function(state_57292) {
              var state_val_57293 = state_57292[1];
              if (state_val_57293 === 7) {
                var inst_57288 = state_57292[2];
                var state_57292__$1 = state_57292;
                var statearr_57294_57323 = state_57292__$1;
                statearr_57294_57323[2] = inst_57288;
                statearr_57294_57323[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_57293 === 1) {
                  var inst_57251 = [];
                  var inst_57252 = inst_57251;
                  var inst_57253 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_57292__$1 = function() {
                    var statearr_57295 = state_57292;
                    statearr_57295[7] = inst_57253;
                    statearr_57295[8] = inst_57252;
                    return statearr_57295;
                  }();
                  var statearr_57296_57324 = state_57292__$1;
                  statearr_57296_57324[2] = null;
                  statearr_57296_57324[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_57293 === 4) {
                    var inst_57256 = state_57292[9];
                    var inst_57256__$1 = state_57292[2];
                    var inst_57257 = inst_57256__$1 == null;
                    var inst_57258 = cljs.core.not.call(null, inst_57257);
                    var state_57292__$1 = function() {
                      var statearr_57297 = state_57292;
                      statearr_57297[9] = inst_57256__$1;
                      return statearr_57297;
                    }();
                    if (inst_57258) {
                      var statearr_57298_57325 = state_57292__$1;
                      statearr_57298_57325[1] = 5;
                    } else {
                      var statearr_57299_57326 = state_57292__$1;
                      statearr_57299_57326[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_57293 === 15) {
                      var inst_57282 = state_57292[2];
                      var state_57292__$1 = state_57292;
                      var statearr_57300_57327 = state_57292__$1;
                      statearr_57300_57327[2] = inst_57282;
                      statearr_57300_57327[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_57293 === 13) {
                        var state_57292__$1 = state_57292;
                        var statearr_57301_57328 = state_57292__$1;
                        statearr_57301_57328[2] = null;
                        statearr_57301_57328[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_57293 === 6) {
                          var inst_57252 = state_57292[8];
                          var inst_57277 = inst_57252.length;
                          var inst_57278 = inst_57277 > 0;
                          var state_57292__$1 = state_57292;
                          if (cljs.core.truth_(inst_57278)) {
                            var statearr_57302_57329 = state_57292__$1;
                            statearr_57302_57329[1] = 12;
                          } else {
                            var statearr_57303_57330 = state_57292__$1;
                            statearr_57303_57330[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_57293 === 3) {
                            var inst_57290 = state_57292[2];
                            var state_57292__$1 = state_57292;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_57292__$1, inst_57290);
                          } else {
                            if (state_val_57293 === 12) {
                              var inst_57252 = state_57292[8];
                              var inst_57280 = cljs.core.vec.call(null, inst_57252);
                              var state_57292__$1 = state_57292;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_57292__$1, 15, out, inst_57280);
                            } else {
                              if (state_val_57293 === 2) {
                                var state_57292__$1 = state_57292;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_57292__$1, 4, ch);
                              } else {
                                if (state_val_57293 === 11) {
                                  var inst_57260 = state_57292[10];
                                  var inst_57256 = state_57292[9];
                                  var inst_57270 = state_57292[2];
                                  var inst_57271 = [];
                                  var inst_57272 = inst_57271.push(inst_57256);
                                  var inst_57252 = inst_57271;
                                  var inst_57253 = inst_57260;
                                  var state_57292__$1 = function() {
                                    var statearr_57304 = state_57292;
                                    statearr_57304[11] = inst_57272;
                                    statearr_57304[7] = inst_57253;
                                    statearr_57304[12] = inst_57270;
                                    statearr_57304[8] = inst_57252;
                                    return statearr_57304;
                                  }();
                                  var statearr_57305_57331 = state_57292__$1;
                                  statearr_57305_57331[2] = null;
                                  statearr_57305_57331[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_57293 === 9) {
                                    var inst_57252 = state_57292[8];
                                    var inst_57268 = cljs.core.vec.call(null, inst_57252);
                                    var state_57292__$1 = state_57292;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_57292__$1, 11, out, inst_57268);
                                  } else {
                                    if (state_val_57293 === 5) {
                                      var inst_57260 = state_57292[10];
                                      var inst_57256 = state_57292[9];
                                      var inst_57253 = state_57292[7];
                                      var inst_57260__$1 = f.call(null, inst_57256);
                                      var inst_57261 = cljs.core._EQ_.call(null, inst_57260__$1, inst_57253);
                                      var inst_57262 = cljs.core.keyword_identical_QMARK_.call(null, inst_57253, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_57263 = inst_57261 || inst_57262;
                                      var state_57292__$1 = function() {
                                        var statearr_57306 = state_57292;
                                        statearr_57306[10] = inst_57260__$1;
                                        return statearr_57306;
                                      }();
                                      if (cljs.core.truth_(inst_57263)) {
                                        var statearr_57307_57332 = state_57292__$1;
                                        statearr_57307_57332[1] = 8;
                                      } else {
                                        var statearr_57308_57333 = state_57292__$1;
                                        statearr_57308_57333[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_57293 === 14) {
                                        var inst_57285 = state_57292[2];
                                        var inst_57286 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_57292__$1 = function() {
                                          var statearr_57310 = state_57292;
                                          statearr_57310[13] = inst_57285;
                                          return statearr_57310;
                                        }();
                                        var statearr_57311_57334 = state_57292__$1;
                                        statearr_57311_57334[2] = inst_57286;
                                        statearr_57311_57334[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_57293 === 10) {
                                          var inst_57275 = state_57292[2];
                                          var state_57292__$1 = state_57292;
                                          var statearr_57312_57335 = state_57292__$1;
                                          statearr_57312_57335[2] = inst_57275;
                                          statearr_57312_57335[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_57293 === 8) {
                                            var inst_57260 = state_57292[10];
                                            var inst_57256 = state_57292[9];
                                            var inst_57252 = state_57292[8];
                                            var inst_57265 = inst_57252.push(inst_57256);
                                            var tmp57309 = inst_57252;
                                            var inst_57252__$1 = tmp57309;
                                            var inst_57253 = inst_57260;
                                            var state_57292__$1 = function() {
                                              var statearr_57313 = state_57292;
                                              statearr_57313[7] = inst_57253;
                                              statearr_57313[8] = inst_57252__$1;
                                              statearr_57313[14] = inst_57265;
                                              return statearr_57313;
                                            }();
                                            var statearr_57314_57336 = state_57292__$1;
                                            statearr_57314_57336[2] = null;
                                            statearr_57314_57336[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__51756__auto___57322, out);
          return function(switch__51741__auto__, c__51756__auto___57322, out) {
            return function() {
              var state_machine__51742__auto__ = null;
              var state_machine__51742__auto____0 = function() {
                var statearr_57318 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_57318[0] = state_machine__51742__auto__;
                statearr_57318[1] = 1;
                return statearr_57318;
              };
              var state_machine__51742__auto____1 = function(state_57292) {
                while (true) {
                  var ret_value__51743__auto__ = function() {
                    try {
                      while (true) {
                        var result__51744__auto__ = switch__51741__auto__.call(null, state_57292);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__51744__auto__;
                        }
                        break;
                      }
                    } catch (e57319) {
                      if (e57319 instanceof Object) {
                        var ex__51745__auto__ = e57319;
                        var statearr_57320_57337 = state_57292;
                        statearr_57320_57337[5] = ex__51745__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_57292);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e57319;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__57338 = state_57292;
                    state_57292 = G__57338;
                    continue;
                  } else {
                    return ret_value__51743__auto__;
                  }
                  break;
                }
              };
              state_machine__51742__auto__ = function(state_57292) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__51742__auto____0.call(this);
                  case 1:
                    return state_machine__51742__auto____1.call(this, state_57292);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
              state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
              return state_machine__51742__auto__;
            }();
          }(switch__51741__auto__, c__51756__auto___57322, out);
        }();
        var state__51758__auto__ = function() {
          var statearr_57321 = f__51757__auto__.call(null);
          statearr_57321[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto___57322;
          return statearr_57321;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
      };
    }(c__51756__auto___57322, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("t3tr0s_slides.slide14");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
goog.require("cljs.core.async");
t3tr0s_slides.slide14.dark_green = "#143";
t3tr0s_slides.slide14.light_green = "#175";
t3tr0s_slides.slide14.dark_purple = "#449";
t3tr0s_slides.slide14.light_purple = "#6ad";
t3tr0s_slides.slide14.dark_red = "#944";
t3tr0s_slides.slide14.light_red = "#f8c";
t3tr0s_slides.slide14.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide14.rotate_coord = function rotate_coord(p__118647) {
  var vec__118649 = p__118647;
  var x = cljs.core.nth.call(null, vec__118649, 0, null);
  var y = cljs.core.nth.call(null, vec__118649, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide14.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide14.rotate_coord, piece);
};
t3tr0s_slides.slide14.nrows = 20;
t3tr0s_slides.slide14.ncols = 10;
t3tr0s_slides.slide14.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide14.ncols, 0));
t3tr0s_slides.slide14.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide14.nrows, t3tr0s_slides.slide14.empty_row));
t3tr0s_slides.slide14.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 1, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 1, 1, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 1, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 1, 1, 1], null)], null);
t3tr0s_slides.slide14.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [5, 2], null);
t3tr0s_slides.slide14.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide14.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), t3tr0s_slides.slide14.rotate_piece.call(null, (new cljs.core.Keyword(null, "I", "I", 1827140963)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide14.pieces)), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide14.initial_pos], 
null));
t3tr0s_slides.slide14.write_piece = function write_piece(board, coords, p__118650, value) {
  while (true) {
    var vec__118654 = p__118650;
    var cx = cljs.core.nth.call(null, vec__118654, 0, null);
    var cy = cljs.core.nth.call(null, vec__118654, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__118655 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__118655, 0, null);
      var y = cljs.core.nth.call(null, vec__118655, 1, null);
      var G__118657 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), value);
        } catch (e118656) {
          if (e118656 instanceof Error) {
            var _ = e118656;
            return board;
          } else {
            throw e118656;
          }
        }
      }();
      var G__118658 = cljs.core.rest.call(null, coords);
      var G__118659 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      var G__118660 = value;
      board = G__118657;
      coords = G__118658;
      p__118650 = G__118659;
      value = G__118660;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide14.create_drawable_board = function create_drawable_board(board, piece, p__118661) {
  var vec__118663 = p__118661;
  var x = cljs.core.nth.call(null, vec__118663, 0, null);
  var y = cljs.core.nth.call(null, vec__118663, 1, null);
  var gy = t3tr0s_slides.slide14.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  var board1 = t3tr0s_slides.slide14.write_piece.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, gy], null), "G");
  var board2 = t3tr0s_slides.slide14.write_piece.call(null, board1, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null), "P");
  return board2;
};
t3tr0s_slides.slide14.app_drawable_board_BANG_ = function app_drawable_board_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  return t3tr0s_slides.slide14.create_drawable_board.call(null, board, piece, pos);
};
t3tr0s_slides.slide14.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__118665 = cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state);
  var map__118665__$1 = cljs.core.seq_QMARK_.call(null, map__118665) ? cljs.core.apply.call(null, cljs.core.hash_map, map__118665) : map__118665;
  var position = cljs.core.get.call(null, map__118665__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__118665__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide14.write_piece, piece, position, 1);
};
t3tr0s_slides.slide14.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__118666) {
  var vec__118670 = p__118666;
  var cx = cljs.core.nth.call(null, vec__118670, 0, null);
  var cy = cljs.core.nth.call(null, vec__118670, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__118670, cx, cy) {
    return function(p__118671) {
      var vec__118672 = p__118671;
      var x = cljs.core.nth.call(null, vec__118672, 0, null);
      var y = cljs.core.nth.call(null, vec__118672, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__118670, cx, cy), piece);
};
t3tr0s_slides.slide14.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide14.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide14.app_state))));
};
t3tr0s_slides.slide14.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  if (cljs.core.truth_(temp__4126__auto__)) {
    var piece = temp__4126__auto__;
    var vec__118674 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var x = cljs.core.nth.call(null, vec__118674, 0, null);
    var y = cljs.core.nth.call(null, vec__118674, 1, null);
    var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
    if (t3tr0s_slides.slide14.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
      return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.try_rotate_BANG_ = function try_rotate_BANG_() {
  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  if (cljs.core.truth_(temp__4126__auto__)) {
    var piece = temp__4126__auto__;
    var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var new_piece = t3tr0s_slides.slide14.rotate_piece.call(null, piece);
    if (t3tr0s_slides.slide14.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
      return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.get_drop_pos = function get_drop_pos(board, piece, p__118675) {
  var vec__118677 = p__118675;
  var x = cljs.core.nth.call(null, vec__118677, 0, null);
  var y = cljs.core.nth.call(null, vec__118677, 1, null);
  var collide_QMARK_ = function(vec__118677, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide14.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__118677, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide14.filled_rows = function filled_rows(board) {
  return cljs.core.apply.call(null, cljs.core.hash_set, cljs.core.map.call(null, cljs.core.first, cljs.core.filter.call(null, function(p__118680) {
    var vec__118681 = p__118680;
    var i = cljs.core.nth.call(null, vec__118681, 0, null);
    var row = cljs.core.nth.call(null, vec__118681, 1, null);
    return cljs.core.every_QMARK_.call(null, cljs.core.pos_QMARK_, row);
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board))));
};
t3tr0s_slides.slide14.collapse_rows = function collapse_rows(board, rows) {
  var cleared_board = cljs.core.map.call(null, cljs.core.second, cljs.core.remove.call(null, function(p1__118682_SHARP_) {
    return rows.call(null, cljs.core.first.call(null, p1__118682_SHARP_));
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board)));
  var n = cljs.core.count.call(null, rows);
  var new_board = cljs.core.into.call(null, cljs.core.vec.call(null, cljs.core.repeat.call(null, n, t3tr0s_slides.slide14.empty_row)), cleared_board);
  return new_board;
};
t3tr0s_slides.slide14.clear_rows = function clear_rows(board, rows) {
  return cljs.core.vec.call(null, cljs.core.map_indexed.call(null, function(i, row) {
    if (cljs.core.truth_(rows.call(null, i))) {
      return t3tr0s_slides.slide14.empty_row;
    } else {
      return row;
    }
  }, board));
};
t3tr0s_slides.slide14.prev_filled = cljs.core.atom.call(null, null);
t3tr0s_slides.slide14.prev_cleared = cljs.core.atom.call(null, null);
t3tr0s_slides.slide14.prev_collapsed = cljs.core.atom.call(null, null);
t3tr0s_slides.slide14.anim_index = cljs.core.atom.call(null, null);
t3tr0s_slides.slide14.on_change_anim_index = function on_change_anim_index(_, ___$1, ___$2, i) {
  if (cljs.core.truth_(i)) {
    return cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.get.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_cleared), cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_filled), cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_cleared), cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_collapsed)], null), i));
  } else {
    return null;
  }
};
cljs.core.add_watch.call(null, t3tr0s_slides.slide14.anim_index, new cljs.core.Keyword(null, "history", "history", -247395220), t3tr0s_slides.slide14.on_change_anim_index);
t3tr0s_slides.slide14.go_go_collapse_BANG_ = function go_go_collapse_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  var rows = t3tr0s_slides.slide14.filled_rows.call(null, board);
  var cleared = t3tr0s_slides.slide14.clear_rows.call(null, board, rows);
  var collapsed = t3tr0s_slides.slide14.collapse_rows.call(null, board, rows);
  cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.prev_filled, cljs.core.assoc.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state), new cljs.core.Keyword(null, "board", "board", -1907017633), board));
  cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.prev_cleared, cljs.core.assoc.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state), new cljs.core.Keyword(null, "board", "board", -1907017633), cleared));
  cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.prev_collapsed, cljs.core.assoc.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state), new cljs.core.Keyword(null, "board", "board", -1907017633), collapsed));
  var c__51756__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto__, board, rows, cleared, collapsed) {
    return function() {
      var f__51757__auto__ = function() {
        var switch__51741__auto__ = function(c__51756__auto__, board, rows, cleared, collapsed) {
          return function(state_118763) {
            var state_val_118764 = state_118763[1];
            if (state_val_118764 === 7) {
              var inst_118741 = state_118763[2];
              var inst_118742 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, 1);
              var inst_118743 = cljs.core.async.timeout.call(null, 170);
              var state_118763__$1 = function() {
                var statearr_118765 = state_118763;
                statearr_118765[7] = inst_118742;
                statearr_118765[8] = inst_118741;
                return statearr_118765;
              }();
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_118763__$1, 8, inst_118743);
            } else {
              if (state_val_118764 === 1) {
                var inst_118734 = 0;
                var state_118763__$1 = function() {
                  var statearr_118766 = state_118763;
                  statearr_118766[9] = inst_118734;
                  return statearr_118766;
                }();
                var statearr_118767_118785 = state_118763__$1;
                statearr_118767_118785[2] = null;
                statearr_118767_118785[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_118764 === 4) {
                  var inst_118738 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, 0);
                  var inst_118739 = cljs.core.async.timeout.call(null, 170);
                  var state_118763__$1 = function() {
                    var statearr_118768 = state_118763;
                    statearr_118768[10] = inst_118738;
                    return statearr_118768;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_118763__$1, 7, inst_118739);
                } else {
                  if (state_val_118764 === 6) {
                    var inst_118750 = state_118763[2];
                    var state_118763__$1 = state_118763;
                    var statearr_118769_118786 = state_118763__$1;
                    statearr_118769_118786[2] = inst_118750;
                    statearr_118769_118786[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_118764 === 3) {
                      var inst_118752 = state_118763[2];
                      var inst_118753 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, 2);
                      var inst_118754 = cljs.core.async.timeout.call(null, 220);
                      var state_118763__$1 = function() {
                        var statearr_118770 = state_118763;
                        statearr_118770[11] = inst_118752;
                        statearr_118770[12] = inst_118753;
                        return statearr_118770;
                      }();
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_118763__$1, 9, inst_118754);
                    } else {
                      if (state_val_118764 === 2) {
                        var inst_118734 = state_118763[9];
                        var inst_118736 = inst_118734 < 3;
                        var state_118763__$1 = state_118763;
                        if (cljs.core.truth_(inst_118736)) {
                          var statearr_118771_118787 = state_118763__$1;
                          statearr_118771_118787[1] = 4;
                        } else {
                          var statearr_118772_118788 = state_118763__$1;
                          statearr_118772_118788[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_118764 === 9) {
                          var inst_118756 = state_118763[2];
                          var inst_118757 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, 3);
                          var inst_118758 = cljs.core.async.timeout.call(null, 170);
                          var state_118763__$1 = function() {
                            var statearr_118773 = state_118763;
                            statearr_118773[13] = inst_118756;
                            statearr_118773[14] = inst_118757;
                            return statearr_118773;
                          }();
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_118763__$1, 10, inst_118758);
                        } else {
                          if (state_val_118764 === 5) {
                            var state_118763__$1 = state_118763;
                            var statearr_118774_118789 = state_118763__$1;
                            statearr_118774_118789[2] = null;
                            statearr_118774_118789[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_118764 === 10) {
                              var inst_118760 = state_118763[2];
                              var inst_118761 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, null);
                              var state_118763__$1 = function() {
                                var statearr_118775 = state_118763;
                                statearr_118775[15] = inst_118760;
                                return statearr_118775;
                              }();
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_118763__$1, inst_118761);
                            } else {
                              if (state_val_118764 === 8) {
                                var inst_118734 = state_118763[9];
                                var inst_118745 = state_118763[2];
                                var inst_118746 = inst_118734 + 1;
                                var inst_118734__$1 = inst_118746;
                                var state_118763__$1 = function() {
                                  var statearr_118776 = state_118763;
                                  statearr_118776[9] = inst_118734__$1;
                                  statearr_118776[16] = inst_118745;
                                  return statearr_118776;
                                }();
                                var statearr_118777_118790 = state_118763__$1;
                                statearr_118777_118790[2] = null;
                                statearr_118777_118790[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__51756__auto__, board, rows, cleared, collapsed);
        return function(switch__51741__auto__, c__51756__auto__, board, rows, cleared, collapsed) {
          return function() {
            var state_machine__51742__auto__ = null;
            var state_machine__51742__auto____0 = function() {
              var statearr_118781 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_118781[0] = state_machine__51742__auto__;
              statearr_118781[1] = 1;
              return statearr_118781;
            };
            var state_machine__51742__auto____1 = function(state_118763) {
              while (true) {
                var ret_value__51743__auto__ = function() {
                  try {
                    while (true) {
                      var result__51744__auto__ = switch__51741__auto__.call(null, state_118763);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__51744__auto__;
                      }
                      break;
                    }
                  } catch (e118782) {
                    if (e118782 instanceof Object) {
                      var ex__51745__auto__ = e118782;
                      var statearr_118783_118791 = state_118763;
                      statearr_118783_118791[5] = ex__51745__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_118763);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e118782;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__118792 = state_118763;
                  state_118763 = G__118792;
                  continue;
                } else {
                  return ret_value__51743__auto__;
                }
                break;
              }
            };
            state_machine__51742__auto__ = function(state_118763) {
              switch(arguments.length) {
                case 0:
                  return state_machine__51742__auto____0.call(this);
                case 1:
                  return state_machine__51742__auto____1.call(this, state_118763);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
            state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
            return state_machine__51742__auto__;
          }();
        }(switch__51741__auto__, c__51756__auto__, board, rows, cleared, collapsed);
      }();
      var state__51758__auto__ = function() {
        var statearr_118784 = f__51757__auto__.call(null);
        statearr_118784[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto__;
        return statearr_118784;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
    };
  }(c__51756__auto__, board, rows, cleared, collapsed));
  return c__51756__auto__;
};
t3tr0s_slides.slide14.spawn_piece_BANG_ = function spawn_piece_BANG_() {
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide14.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide14.pieces)));
};
t3tr0s_slides.slide14.hard_drop_BANG_ = function hard_drop_BANG_() {
  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  if (cljs.core.truth_(temp__4126__auto__)) {
    var piece = temp__4126__auto__;
    var vec__118809 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var x = cljs.core.nth.call(null, vec__118809, 0, null);
    var y = cljs.core.nth.call(null, vec__118809, 1, null);
    var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var ny = t3tr0s_slides.slide14.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
    cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
    t3tr0s_slides.slide14.lock_piece_BANG_.call(null);
    var board__$1 = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var rows = t3tr0s_slides.slide14.filled_rows.call(null, board__$1);
    if (cljs.core.empty_QMARK_.call(null, rows)) {
      return t3tr0s_slides.slide14.spawn_piece_BANG_.call(null);
    } else {
      cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "position", "position", -2011731912), null);
      var c__51756__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__51756__auto__, board__$1, rows, vec__118809, x, y, board, ny, piece, temp__4126__auto__) {
        return function() {
          var f__51757__auto__ = function() {
            var switch__51741__auto__ = function(c__51756__auto__, board__$1, rows, vec__118809, x, y, board, ny, piece, temp__4126__auto__) {
              return function(state_118815) {
                var state_val_118816 = state_118815[1];
                if (state_val_118816 === 2) {
                  var inst_118812 = state_118815[2];
                  var inst_118813 = t3tr0s_slides.slide14.spawn_piece_BANG_.call(null);
                  var state_118815__$1 = function() {
                    var statearr_118817 = state_118815;
                    statearr_118817[7] = inst_118812;
                    return statearr_118817;
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_118815__$1, inst_118813);
                } else {
                  if (state_val_118816 === 1) {
                    var inst_118810 = t3tr0s_slides.slide14.go_go_collapse_BANG_.call(null);
                    var state_118815__$1 = state_118815;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_118815__$1, 2, inst_118810);
                  } else {
                    return null;
                  }
                }
              };
            }(c__51756__auto__, board__$1, rows, vec__118809, x, y, board, ny, piece, temp__4126__auto__);
            return function(switch__51741__auto__, c__51756__auto__, board__$1, rows, vec__118809, x, y, board, ny, piece, temp__4126__auto__) {
              return function() {
                var state_machine__51742__auto__ = null;
                var state_machine__51742__auto____0 = function() {
                  var statearr_118821 = [null, null, null, null, null, null, null, null];
                  statearr_118821[0] = state_machine__51742__auto__;
                  statearr_118821[1] = 1;
                  return statearr_118821;
                };
                var state_machine__51742__auto____1 = function(state_118815) {
                  while (true) {
                    var ret_value__51743__auto__ = function() {
                      try {
                        while (true) {
                          var result__51744__auto__ = switch__51741__auto__.call(null, state_118815);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__51744__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__51744__auto__;
                          }
                          break;
                        }
                      } catch (e118822) {
                        if (e118822 instanceof Object) {
                          var ex__51745__auto__ = e118822;
                          var statearr_118823_118825 = state_118815;
                          statearr_118823_118825[5] = ex__51745__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_118815);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e118822;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__51743__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__118826 = state_118815;
                      state_118815 = G__118826;
                      continue;
                    } else {
                      return ret_value__51743__auto__;
                    }
                    break;
                  }
                };
                state_machine__51742__auto__ = function(state_118815) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__51742__auto____0.call(this);
                    case 1:
                      return state_machine__51742__auto____1.call(this, state_118815);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__51742__auto____0;
                state_machine__51742__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__51742__auto____1;
                return state_machine__51742__auto__;
              }();
            }(switch__51741__auto__, c__51756__auto__, board__$1, rows, vec__118809, x, y, board, ny, piece, temp__4126__auto__);
          }();
          var state__51758__auto__ = function() {
            var statearr_118824 = f__51757__auto__.call(null);
            statearr_118824[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__51756__auto__;
            return statearr_118824;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__51758__auto__);
        };
      }(c__51756__auto__, board__$1, rows, vec__118809, x, y, board, ny, piece, temp__4126__auto__));
      return c__51756__auto__;
    }
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.data_row = function data_row(index, content) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide14.anim_index), index) ? "active-row-534ed" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    if (cljs.core.truth_(cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_filled))) {
      return cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, index);
    } else {
      return null;
    }
  }], null), content], null);
};
var ufv___118840 = schema.utils.use_fn_validation;
var output_schema118828_118841 = schema.core.Any;
var input_schema118829_118842 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker118830_118843 = schema.core.checker.call(null, input_schema118829_118842);
var output_checker118831_118844 = schema.core.checker.call(null, output_schema118828_118841);
t3tr0s_slides.slide14.code = function(ufv___118840, output_schema118828_118841, input_schema118829_118842, input_checker118830_118843, output_checker118831_118844) {
  return function code(G__118832, G__118833) {
    var validate__5821__auto__ = ufv___118840.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___118845 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__118832, G__118833], null);
      var temp__4126__auto___118846 = input_checker118830_118843.call(null, args__5822__auto___118845);
      if (cljs.core.truth_(temp__4126__auto___118846)) {
        var error__5823__auto___118847 = temp__4126__auto___118846;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___118847)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema118829_118842, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___118845, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___118847], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__118832;
      var owner = G__118833;
      while (true) {
        if (typeof t3tr0s_slides.slide14.t118837 !== "undefined") {
        } else {
          t3tr0s_slides.slide14.t118837 = function(input_checker118830, G__118833, owner, validate__5821__auto__, G__118832, output_schema118828, app, output_checker118831, ufv__, code, input_schema118829, meta118838) {
            this.input_checker118830 = input_checker118830;
            this.G__118833 = G__118833;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__118832 = G__118832;
            this.output_schema118828 = output_schema118828;
            this.app = app;
            this.output_checker118831 = output_checker118831;
            this.ufv__ = ufv__;
            this.code = code;
            this.input_schema118829 = input_schema118829;
            this.meta118838 = meta118838;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide14.t118837.cljs$lang$type = true;
          t3tr0s_slides.slide14.t118837.cljs$lang$ctorStr = "t3tr0s-slides.slide14/t118837";
          t3tr0s_slides.slide14.t118837.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___118840, output_schema118828_118841, input_schema118829_118842, input_checker118830_118843, output_checker118831_118844) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide14/t118837");
            };
          }(validate__5821__auto__, ufv___118840, output_schema118828_118841, input_schema118829_118842, input_checker118830_118843, output_checker118831_118844);
          t3tr0s_slides.slide14.t118837.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide14.t118837.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___118840, output_schema118828_118841, input_schema118829_118842, input_checker118830_118843, output_checker118831_118844) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " clear-rows\n", "  [board rows]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vec")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "map-indexed")), "\n", "   (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "fn")), " [i row]\n", "     (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "if")), " (rows i) empty-row row)) board)))\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " go-go-collapse! []\n", "\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [board     (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.lit.call(null, ":board")), " @game-state)\n", "        rows      (filled-rows board)\n", "        cleared   (clear-rows board rows)\n", "        collapsed (collapse-rows board rows)]\n", "\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "go")), "\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "dotimes")), " [_ ", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.lit.call(null, "3")), "]\n", "\n", "        ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide14.data_row.call(null, 0, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " cleared)"), t3tr0s_slides.syntax_highlight.lit.call(null, ":board")), " "), t3tr0s_slides.syntax_highlight.core.call(null, 
              "assoc")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), "\n", "        (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "\x3c!")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "timeout")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "170")), "))\n", "\n", "        ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide14.data_row.call(null, 
              1, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " board)"), t3tr0s_slides.syntax_highlight.lit.call(null, ":board")), " "), t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), "\n", "        (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.kw.call(null, "\x3c!")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "timeout")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "170")), ")))\n", "\n", "      ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide14.data_row.call(null, 2, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " cleared)"), t3tr0s_slides.syntax_highlight.lit.call(null, ":board")), " "), t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), "\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "\x3c!")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
              "timeout")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "220")), "))\n", "\n", "      ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide14.data_row.call(null, 3, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " collapsed)"), t3tr0s_slides.syntax_highlight.lit.call(null, 
              ":board")), " "), t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), ")))\n")));
            };
          }(validate__5821__auto__, ufv___118840, output_schema118828_118841, input_schema118829_118842, input_checker118830_118843, output_checker118831_118844);
          t3tr0s_slides.slide14.t118837.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___118840, output_schema118828_118841, input_schema118829_118842, input_checker118830_118843, output_checker118831_118844) {
            return function(_118839) {
              var self__ = this;
              var _118839__$1 = this;
              return self__.meta118838;
            };
          }(validate__5821__auto__, ufv___118840, output_schema118828_118841, input_schema118829_118842, input_checker118830_118843, output_checker118831_118844);
          t3tr0s_slides.slide14.t118837.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___118840, output_schema118828_118841, input_schema118829_118842, input_checker118830_118843, output_checker118831_118844) {
            return function(_118839, meta118838__$1) {
              var self__ = this;
              var _118839__$1 = this;
              return new t3tr0s_slides.slide14.t118837(self__.input_checker118830, self__.G__118833, self__.owner, self__.validate__5821__auto__, self__.G__118832, self__.output_schema118828, self__.app, self__.output_checker118831, self__.ufv__, self__.code, self__.input_schema118829, meta118838__$1);
            };
          }(validate__5821__auto__, ufv___118840, output_schema118828_118841, input_schema118829_118842, input_checker118830_118843, output_checker118831_118844);
          t3tr0s_slides.slide14.__GT_t118837 = function(validate__5821__auto__, ufv___118840, output_schema118828_118841, input_schema118829_118842, input_checker118830_118843, output_checker118831_118844) {
            return function __GT_t118837(input_checker118830__$1, G__118833__$1, owner__$1, validate__5821__auto____$1, G__118832__$1, output_schema118828__$1, app__$1, output_checker118831__$1, ufv____$1, code__$1, input_schema118829__$1, meta118838) {
              return new t3tr0s_slides.slide14.t118837(input_checker118830__$1, G__118833__$1, owner__$1, validate__5821__auto____$1, G__118832__$1, output_schema118828__$1, app__$1, output_checker118831__$1, ufv____$1, code__$1, input_schema118829__$1, meta118838);
            };
          }(validate__5821__auto__, ufv___118840, output_schema118828_118841, input_schema118829_118842, input_checker118830_118843, output_checker118831_118844);
        }
        return new t3tr0s_slides.slide14.t118837(input_checker118830_118843, G__118833, owner, validate__5821__auto__, G__118832, output_schema118828_118841, app, output_checker118831_118844, ufv___118840, code, input_schema118829_118842, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___118848 = output_checker118831_118844.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___118848)) {
        var error__5823__auto___118849 = temp__4126__auto___118848;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___118849)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema118828_118841, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___118849], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___118840, output_schema118828_118841, input_schema118829_118842, input_checker118830_118843, output_checker118831_118844);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide14.code), schema.core.make_fn_schema.call(null, output_schema118828_118841, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema118829_118842], null)));
t3tr0s_slides.slide14.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide14.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m118827) {
    return om.core.build.call(null, t3tr0s_slides.slide14.code, cursor__9685__auto__, m118827);
  };
  __GT_code = function(cursor__9685__auto__, m118827) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m118827);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide14.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide14.nrows);
t3tr0s_slides.slide14.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__118850, is_center) {
  var vec__118852 = p__118850;
  var x = cljs.core.nth.call(null, vec__118852, 0, null);
  var y = cljs.core.nth.call(null, vec__118852, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide14.cell_size * x;
  var ry = t3tr0s_slides.slide14.cell_size * y;
  var rs = t3tr0s_slides.slide14.cell_size;
  var cx = t3tr0s_slides.slide14.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide14.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide14.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.piece_abs_coords = function piece_abs_coords(piece, p__118853) {
  var vec__118857 = p__118853;
  var cx = cljs.core.nth.call(null, vec__118857, 0, null);
  var cy = cljs.core.nth.call(null, vec__118857, 1, null);
  return cljs.core.mapv.call(null, function(vec__118857, cx, cy) {
    return function(p__118858) {
      var vec__118859 = p__118858;
      var x = cljs.core.nth.call(null, vec__118859, 0, null);
      var y = cljs.core.nth.call(null, vec__118859, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__118857, cx, cy), piece);
};
t3tr0s_slides.slide14.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__118866 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide14.piece_abs_coords.call(null, piece, pos)));
  var chunk__118867 = null;
  var count__118868 = 0;
  var i__118869 = 0;
  while (true) {
    if (i__118869 < count__118868) {
      var vec__118870 = cljs.core._nth.call(null, chunk__118867, i__118869);
      var i = cljs.core.nth.call(null, vec__118870, 0, null);
      var c = cljs.core.nth.call(null, vec__118870, 1, null);
      t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__118872 = seq__118866;
      var G__118873 = chunk__118867;
      var G__118874 = count__118868;
      var G__118875 = i__118869 + 1;
      seq__118866 = G__118872;
      chunk__118867 = G__118873;
      count__118868 = G__118874;
      i__118869 = G__118875;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__118866);
      if (temp__4126__auto__) {
        var seq__118866__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__118866__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__118866__$1);
          var G__118876 = cljs.core.chunk_rest.call(null, seq__118866__$1);
          var G__118877 = c__4309__auto__;
          var G__118878 = cljs.core.count.call(null, c__4309__auto__);
          var G__118879 = 0;
          seq__118866 = G__118876;
          chunk__118867 = G__118877;
          count__118868 = G__118878;
          i__118869 = G__118879;
          continue;
        } else {
          var vec__118871 = cljs.core.first.call(null, seq__118866__$1);
          var i = cljs.core.nth.call(null, vec__118871, 0, null);
          var c = cljs.core.nth.call(null, vec__118871, 1, null);
          t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__118880 = cljs.core.next.call(null, seq__118866__$1);
          var G__118881 = null;
          var G__118882 = 0;
          var G__118883 = 0;
          seq__118866 = G__118880;
          chunk__118867 = G__118881;
          count__118868 = G__118882;
          i__118869 = G__118883;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide14.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var filled_QMARK_ = t3tr0s_slides.slide14.filled_rows.call(null, board);
  var seq__118896 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide14.nrows));
  var chunk__118901 = null;
  var count__118902 = 0;
  var i__118903 = 0;
  while (true) {
    if (i__118903 < count__118902) {
      var y = cljs.core._nth.call(null, chunk__118901, i__118903);
      var seq__118904_118908 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide14.ncols));
      var chunk__118905_118909 = null;
      var count__118906_118910 = 0;
      var i__118907_118911 = 0;
      while (true) {
        if (i__118907_118911 < count__118906_118910) {
          var x_118912 = cljs.core._nth.call(null, chunk__118905_118909, i__118907_118911);
          ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .3 : 1;
          var v_118913 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_118912], null));
          if (v_118913 === 0) {
          } else {
            t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_118912, y], null), false);
          }
          var G__118914 = seq__118904_118908;
          var G__118915 = chunk__118905_118909;
          var G__118916 = count__118906_118910;
          var G__118917 = i__118907_118911 + 1;
          seq__118904_118908 = G__118914;
          chunk__118905_118909 = G__118915;
          count__118906_118910 = G__118916;
          i__118907_118911 = G__118917;
          continue;
        } else {
          var temp__4126__auto___118918 = cljs.core.seq.call(null, seq__118904_118908);
          if (temp__4126__auto___118918) {
            var seq__118904_118919__$1 = temp__4126__auto___118918;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__118904_118919__$1)) {
              var c__4309__auto___118920 = cljs.core.chunk_first.call(null, seq__118904_118919__$1);
              var G__118921 = cljs.core.chunk_rest.call(null, seq__118904_118919__$1);
              var G__118922 = c__4309__auto___118920;
              var G__118923 = cljs.core.count.call(null, c__4309__auto___118920);
              var G__118924 = 0;
              seq__118904_118908 = G__118921;
              chunk__118905_118909 = G__118922;
              count__118906_118910 = G__118923;
              i__118907_118911 = G__118924;
              continue;
            } else {
              var x_118925 = cljs.core.first.call(null, seq__118904_118919__$1);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .3 : 1;
              var v_118926 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_118925], null));
              if (v_118926 === 0) {
              } else {
                t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_118925, y], null), false);
              }
              var G__118927 = cljs.core.next.call(null, seq__118904_118919__$1);
              var G__118928 = null;
              var G__118929 = 0;
              var G__118930 = 0;
              seq__118904_118908 = G__118927;
              chunk__118905_118909 = G__118928;
              count__118906_118910 = G__118929;
              i__118907_118911 = G__118930;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__118931 = seq__118896;
      var G__118932 = chunk__118901;
      var G__118933 = count__118902;
      var G__118934 = i__118903 + 1;
      seq__118896 = G__118931;
      chunk__118901 = G__118932;
      count__118902 = G__118933;
      i__118903 = G__118934;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__118896);
      if (temp__4126__auto__) {
        var seq__118896__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__118896__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__118896__$1);
          var G__118935 = cljs.core.chunk_rest.call(null, seq__118896__$1);
          var G__118936 = c__4309__auto__;
          var G__118937 = cljs.core.count.call(null, c__4309__auto__);
          var G__118938 = 0;
          seq__118896 = G__118935;
          chunk__118901 = G__118936;
          count__118902 = G__118937;
          i__118903 = G__118938;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__118896__$1);
          var seq__118897_118939 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide14.ncols));
          var chunk__118898_118940 = null;
          var count__118899_118941 = 0;
          var i__118900_118942 = 0;
          while (true) {
            if (i__118900_118942 < count__118899_118941) {
              var x_118943 = cljs.core._nth.call(null, chunk__118898_118940, i__118900_118942);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .3 : 1;
              var v_118944 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_118943], null));
              if (v_118944 === 0) {
              } else {
                t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_118943, y], null), false);
              }
              var G__118945 = seq__118897_118939;
              var G__118946 = chunk__118898_118940;
              var G__118947 = count__118899_118941;
              var G__118948 = i__118900_118942 + 1;
              seq__118897_118939 = G__118945;
              chunk__118898_118940 = G__118946;
              count__118899_118941 = G__118947;
              i__118900_118942 = G__118948;
              continue;
            } else {
              var temp__4126__auto___118949__$1 = cljs.core.seq.call(null, seq__118897_118939);
              if (temp__4126__auto___118949__$1) {
                var seq__118897_118950__$1 = temp__4126__auto___118949__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__118897_118950__$1)) {
                  var c__4309__auto___118951 = cljs.core.chunk_first.call(null, seq__118897_118950__$1);
                  var G__118952 = cljs.core.chunk_rest.call(null, seq__118897_118950__$1);
                  var G__118953 = c__4309__auto___118951;
                  var G__118954 = cljs.core.count.call(null, c__4309__auto___118951);
                  var G__118955 = 0;
                  seq__118897_118939 = G__118952;
                  chunk__118898_118940 = G__118953;
                  count__118899_118941 = G__118954;
                  i__118900_118942 = G__118955;
                  continue;
                } else {
                  var x_118956 = cljs.core.first.call(null, seq__118897_118950__$1);
                  ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .3 : 1;
                  var v_118957 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_118956], null));
                  if (v_118957 === 0) {
                  } else {
                    t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_118956, y], null), false);
                  }
                  var G__118958 = cljs.core.next.call(null, seq__118897_118950__$1);
                  var G__118959 = null;
                  var G__118960 = 0;
                  var G__118961 = 0;
                  seq__118897_118939 = G__118958;
                  chunk__118898_118940 = G__118959;
                  count__118899_118941 = G__118960;
                  i__118900_118942 = G__118961;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__118962 = cljs.core.next.call(null, seq__118896__$1);
          var G__118963 = null;
          var G__118964 = 0;
          var G__118965 = 0;
          seq__118896 = G__118962;
          chunk__118901 = G__118963;
          count__118902 = G__118964;
          i__118903 = G__118965;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide14.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide14.cell_size * t3tr0s_slides.slide14.ncols, t3tr0s_slides.slide14.cell_size * t3tr0s_slides.slide14.nrows);
  ctx.fillStyle = t3tr0s_slides.slide14.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide14.light_green;
  t3tr0s_slides.slide14.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  ctx.globalAlpha = 1;
  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var piece = temp__4126__auto__;
    var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
    var drop_y = t3tr0s_slides.slide14.get_drop_pos.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state)), piece, pos);
    var drop_pos = cljs.core.assoc.call(null, pos, 1, drop_y);
    var fits = t3tr0s_slides.slide14.app_piece_fits_QMARK_.call(null);
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = piece;
      if (cljs.core.truth_(and__3541__auto__)) {
        return pos;
      } else {
        return and__3541__auto__;
      }
    }())) {
      ctx.fillStyle = "#333";
      ctx.strokeStyle = "#666";
      t3tr0s_slides.slide14.draw_piece_BANG_.call(null, ctx, piece, drop_pos);
      ctx.fillStyle = fits ? t3tr0s_slides.slide14.dark_purple : t3tr0s_slides.slide14.dark_red;
      ctx.strokeStyle = fits ? t3tr0s_slides.slide14.light_purple : t3tr0s_slides.slide14.light_red;
      return t3tr0s_slides.slide14.draw_piece_BANG_.call(null, ctx, piece, pos);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide14.key_name = function key_name(p1__118966_SHARP_) {
  return t3tr0s_slides.slide14.key_names.call(null, p1__118966_SHARP_.keyCode);
};
t3tr0s_slides.slide14.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide14.key_name.call(null, e);
  var G__118968_118969 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__118968_118969) {
    case "space":
      t3tr0s_slides.slide14.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide14.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide14.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide14.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___118988 = schema.utils.use_fn_validation;
var output_schema118972_118989 = schema.core.Any;
var input_schema118973_118990 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker118974_118991 = schema.core.checker.call(null, input_schema118973_118990);
var output_checker118975_118992 = schema.core.checker.call(null, output_schema118972_118989);
t3tr0s_slides.slide14.canvas = function(ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992) {
  return function canvas(G__118976, G__118977) {
    var validate__5821__auto__ = ufv___118988.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___118993 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__118976, G__118977], null);
      var temp__4126__auto___118994 = input_checker118974_118991.call(null, args__5822__auto___118993);
      if (cljs.core.truth_(temp__4126__auto___118994)) {
        var error__5823__auto___118995 = temp__4126__auto___118994;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___118995)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema118973_118990, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___118993, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___118995], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__118976;
      var owner = G__118977;
      while (true) {
        if (typeof t3tr0s_slides.slide14.t118983 !== "undefined") {
        } else {
          t3tr0s_slides.slide14.t118983 = function(owner, input_schema118973, input_checker118974, validate__5821__auto__, G__118977, output_schema118972, G__118976, canvas, app, ufv__, output_checker118975, meta118984) {
            this.owner = owner;
            this.input_schema118973 = input_schema118973;
            this.input_checker118974 = input_checker118974;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__118977 = G__118977;
            this.output_schema118972 = output_schema118972;
            this.G__118976 = G__118976;
            this.canvas = canvas;
            this.app = app;
            this.ufv__ = ufv__;
            this.output_checker118975 = output_checker118975;
            this.meta118984 = meta118984;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide14.t118983.cljs$lang$type = true;
          t3tr0s_slides.slide14.t118983.cljs$lang$ctorStr = "t3tr0s-slides.slide14/t118983";
          t3tr0s_slides.slide14.t118983.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide14/t118983");
            };
          }(validate__5821__auto__, ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992);
          t3tr0s_slides.slide14.t118983.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide14.t118983.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992);
          t3tr0s_slides.slide14.t118983.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide14.t118983.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide14.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992);
          t3tr0s_slides.slide14.t118983.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide14.t118983.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide14.ncols * t3tr0s_slides.slide14.cell_size;
              canvas__$2.height = t3tr0s_slides.slide14.nrows * t3tr0s_slides.slide14.cell_size;
              return t3tr0s_slides.slide14.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992);
          t3tr0s_slides.slide14.t118983.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992) {
            return function(_118985) {
              var self__ = this;
              var _118985__$1 = this;
              return self__.meta118984;
            };
          }(validate__5821__auto__, ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992);
          t3tr0s_slides.slide14.t118983.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992) {
            return function(_118985, meta118984__$1) {
              var self__ = this;
              var _118985__$1 = this;
              return new t3tr0s_slides.slide14.t118983(self__.owner, self__.input_schema118973, self__.input_checker118974, self__.validate__5821__auto__, self__.G__118977, self__.output_schema118972, self__.G__118976, self__.canvas, self__.app, self__.ufv__, self__.output_checker118975, meta118984__$1);
            };
          }(validate__5821__auto__, ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992);
          t3tr0s_slides.slide14.__GT_t118983 = function(validate__5821__auto__, ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992) {
            return function __GT_t118983(owner__$1, input_schema118973__$1, input_checker118974__$1, validate__5821__auto____$1, G__118977__$1, output_schema118972__$1, G__118976__$1, canvas__$1, app__$1, ufv____$1, output_checker118975__$1, meta118984) {
              return new t3tr0s_slides.slide14.t118983(owner__$1, input_schema118973__$1, input_checker118974__$1, validate__5821__auto____$1, G__118977__$1, output_schema118972__$1, G__118976__$1, canvas__$1, app__$1, ufv____$1, output_checker118975__$1, meta118984);
            };
          }(validate__5821__auto__, ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992);
        }
        return new t3tr0s_slides.slide14.t118983(owner, input_schema118973_118990, input_checker118974_118991, validate__5821__auto__, G__118977, output_schema118972_118989, G__118976, canvas, app, ufv___118988, output_checker118975_118992, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___118996 = output_checker118975_118992.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___118996)) {
        var error__5823__auto___118997 = temp__4126__auto___118996;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___118997)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema118972_118989, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___118997], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___118988, output_schema118972_118989, input_schema118973_118990, input_checker118974_118991, output_checker118975_118992);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide14.canvas), schema.core.make_fn_schema.call(null, output_schema118972_118989, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema118973_118990], null)));
t3tr0s_slides.slide14.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide14.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m118971) {
    return om.core.build.call(null, t3tr0s_slides.slide14.canvas, cursor__9685__auto__, m118971);
  };
  __GT_canvas = function(cursor__9685__auto__, m118971) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m118971);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___119015 = schema.utils.use_fn_validation;
var output_schema118999_119016 = schema.core.Any;
var input_schema119000_119017 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker119001_119018 = schema.core.checker.call(null, input_schema119000_119017);
var output_checker119002_119019 = schema.core.checker.call(null, output_schema118999_119016);
t3tr0s_slides.slide14.slide = function(ufv___119015, output_schema118999_119016, input_schema119000_119017, input_checker119001_119018, output_checker119002_119019) {
  return function slide(G__119003, G__119004) {
    var validate__5821__auto__ = ufv___119015.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___119020 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__119003, G__119004], null);
      var temp__4126__auto___119021 = input_checker119001_119018.call(null, args__5822__auto___119020);
      if (cljs.core.truth_(temp__4126__auto___119021)) {
        var error__5823__auto___119022 = temp__4126__auto___119021;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___119022)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema119000_119017, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___119020, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___119022], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__119003;
      var owner = G__119004;
      while (true) {
        if (typeof t3tr0s_slides.slide14.t119010 !== "undefined") {
        } else {
          t3tr0s_slides.slide14.t119010 = function(G__119003, owner, output_schema118999, validate__5821__auto__, input_schema119000, G__119004, input_checker119001, slide, app, ufv__, output_checker119002, meta119011) {
            this.G__119003 = G__119003;
            this.owner = owner;
            this.output_schema118999 = output_schema118999;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema119000 = input_schema119000;
            this.G__119004 = G__119004;
            this.input_checker119001 = input_checker119001;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.output_checker119002 = output_checker119002;
            this.meta119011 = meta119011;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide14.t119010.cljs$lang$type = true;
          t3tr0s_slides.slide14.t119010.cljs$lang$ctorStr = "t3tr0s-slides.slide14/t119010";
          t3tr0s_slides.slide14.t119010.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___119015, output_schema118999_119016, input_schema119000_119017, input_checker119001_119018, output_checker119002_119019) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide14/t119010");
            };
          }(validate__5821__auto__, ufv___119015, output_schema118999_119016, input_schema119000_119017, input_checker119001_119018, output_checker119002_119019);
          t3tr0s_slides.slide14.t119010.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide14.t119010.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___119015, output_schema118999_119016, input_schema119000_119017, input_checker119001_119018, output_checker119002_119019) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "14. Animate collapse."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide14.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide14.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___119015, output_schema118999_119016, input_schema119000_119017, input_checker119001_119018, output_checker119002_119019);
          t3tr0s_slides.slide14.t119010.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___119015, output_schema118999_119016, input_schema119000_119017, input_checker119001_119018, output_checker119002_119019) {
            return function(_119012) {
              var self__ = this;
              var _119012__$1 = this;
              return self__.meta119011;
            };
          }(validate__5821__auto__, ufv___119015, output_schema118999_119016, input_schema119000_119017, input_checker119001_119018, output_checker119002_119019);
          t3tr0s_slides.slide14.t119010.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___119015, output_schema118999_119016, input_schema119000_119017, input_checker119001_119018, output_checker119002_119019) {
            return function(_119012, meta119011__$1) {
              var self__ = this;
              var _119012__$1 = this;
              return new t3tr0s_slides.slide14.t119010(self__.G__119003, self__.owner, self__.output_schema118999, self__.validate__5821__auto__, self__.input_schema119000, self__.G__119004, self__.input_checker119001, self__.slide, self__.app, self__.ufv__, self__.output_checker119002, meta119011__$1);
            };
          }(validate__5821__auto__, ufv___119015, output_schema118999_119016, input_schema119000_119017, input_checker119001_119018, output_checker119002_119019);
          t3tr0s_slides.slide14.__GT_t119010 = function(validate__5821__auto__, ufv___119015, output_schema118999_119016, input_schema119000_119017, input_checker119001_119018, output_checker119002_119019) {
            return function __GT_t119010(G__119003__$1, owner__$1, output_schema118999__$1, validate__5821__auto____$1, input_schema119000__$1, G__119004__$1, input_checker119001__$1, slide__$1, app__$1, ufv____$1, output_checker119002__$1, meta119011) {
              return new t3tr0s_slides.slide14.t119010(G__119003__$1, owner__$1, output_schema118999__$1, validate__5821__auto____$1, input_schema119000__$1, G__119004__$1, input_checker119001__$1, slide__$1, app__$1, ufv____$1, output_checker119002__$1, meta119011);
            };
          }(validate__5821__auto__, ufv___119015, output_schema118999_119016, input_schema119000_119017, input_checker119001_119018, output_checker119002_119019);
        }
        return new t3tr0s_slides.slide14.t119010(G__119003, owner, output_schema118999_119016, validate__5821__auto__, input_schema119000_119017, G__119004, input_checker119001_119018, slide, app, ufv___119015, output_checker119002_119019, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___119023 = output_checker119002_119019.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___119023)) {
        var error__5823__auto___119024 = temp__4126__auto___119023;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___119024)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema118999_119016, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___119024], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___119015, output_schema118999_119016, input_schema119000_119017, input_checker119001_119018, output_checker119002_119019);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide14.slide), schema.core.make_fn_schema.call(null, output_schema118999_119016, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema119000_119017], null)));
t3tr0s_slides.slide14.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide14.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m118998) {
    return om.core.build.call(null, t3tr0s_slides.slide14.slide, cursor__9685__auto__, m118998);
  };
  __GT_slide = function(cursor__9685__auto__, m118998) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m118998);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide14.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide14.slide, t3tr0s_slides.slide14.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide14.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide14.key_down);
};
t3tr0s_slides.slide14.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide14.key_down);
};
goog.provide("t3tr0s_slides.slide15");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide15.dark_green = "#143";
t3tr0s_slides.slide15.light_green = "#175";
t3tr0s_slides.slide15.dark_purple = "#449";
t3tr0s_slides.slide15.light_purple = "#6ad";
t3tr0s_slides.slide15.dark_red = "#944";
t3tr0s_slides.slide15.light_red = "#f8c";
t3tr0s_slides.slide15.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide15.rotate_coord = function rotate_coord(p__119025) {
  var vec__119027 = p__119025;
  var x = cljs.core.nth.call(null, vec__119027, 0, null);
  var y = cljs.core.nth.call(null, vec__119027, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide15.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide15.rotate_coord, piece);
};
t3tr0s_slides.slide15.rows = 20;
t3tr0s_slides.slide15.cols = 10;
t3tr0s_slides.slide15.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide15.cols, 0));
t3tr0s_slides.slide15.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide15.rows, t3tr0s_slides.slide15.empty_row));
t3tr0s_slides.slide15.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 1, 0, 0, 1, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 1, 0, 0, 0, 0, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 1, 1, 1, 1, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 1, 0, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 1, 1, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 1, 1, 0, 1, 1, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide15.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide15.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide15.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.last.call(null, cljs.core.take.call(null, 4, cljs.core.iterate.call(null, t3tr0s_slides.slide15.rotate_piece, (new cljs.core.Keyword(null, "L", "L", -1038307519)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide15.pieces)))), new cljs.core.Keyword(null, 
"position", "position", -2011731912), t3tr0s_slides.slide15.initial_pos], null));
t3tr0s_slides.slide15.write_piece = function write_piece(board, coords, p__119028) {
  while (true) {
    var vec__119032 = p__119028;
    var cx = cljs.core.nth.call(null, vec__119032, 0, null);
    var cy = cljs.core.nth.call(null, vec__119032, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__119033 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__119033, 0, null);
      var y = cljs.core.nth.call(null, vec__119033, 1, null);
      var G__119035 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e119034) {
          if (e119034 instanceof Error) {
            var _ = e119034;
            return board;
          } else {
            throw e119034;
          }
        }
      }();
      var G__119036 = cljs.core.rest.call(null, coords);
      var G__119037 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__119035;
      coords = G__119036;
      p__119028 = G__119037;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide15.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__119039 = cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state);
  var map__119039__$1 = cljs.core.seq_QMARK_.call(null, map__119039) ? cljs.core.apply.call(null, cljs.core.hash_map, map__119039) : map__119039;
  var position = cljs.core.get.call(null, map__119039__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__119039__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide15.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide15.write_piece, piece, position);
};
t3tr0s_slides.slide15.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__119040) {
  var vec__119044 = p__119040;
  var cx = cljs.core.nth.call(null, vec__119044, 0, null);
  var cy = cljs.core.nth.call(null, vec__119044, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__119044, cx, cy) {
    return function(p__119045) {
      var vec__119046 = p__119045;
      var x = cljs.core.nth.call(null, vec__119046, 0, null);
      var y = cljs.core.nth.call(null, vec__119046, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__119044, cx, cy), piece);
};
t3tr0s_slides.slide15.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide15.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide15.app_state))));
};
t3tr0s_slides.slide15.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__119051(s__119052) {
      return new cljs.core.LazySeq(null, function() {
        var s__119052__$1 = s__119052;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__119052__$1);
          if (temp__4126__auto__) {
            var s__119052__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__119052__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__119052__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__119054 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__119053 = 0;
                while (true) {
                  if (i__119053 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__119053);
                    cljs.core.chunk_append.call(null, b__119054, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))));
                    var G__119055 = i__119053 + 1;
                    i__119053 = G__119055;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__119054), iter__119051.call(null, cljs.core.chunk_rest.call(null, s__119052__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__119054), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__119052__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))), iter__119051.call(null, cljs.core.rest.call(null, s__119052__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide15.cols));
  }(), " ]"], null);
};
var ufv___119071 = schema.utils.use_fn_validation;
var output_schema119057_119072 = schema.core.Any;
var input_schema119058_119073 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker119059_119074 = schema.core.checker.call(null, input_schema119058_119073);
var output_checker119060_119075 = schema.core.checker.call(null, output_schema119057_119072);
t3tr0s_slides.slide15.code = function(ufv___119071, output_schema119057_119072, input_schema119058_119073, input_checker119059_119074, output_checker119060_119075) {
  return function code(G__119061, G__119062) {
    var validate__5821__auto__ = ufv___119071.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___119076 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__119061, G__119062], null);
      var temp__4126__auto___119077 = input_checker119059_119074.call(null, args__5822__auto___119076);
      if (cljs.core.truth_(temp__4126__auto___119077)) {
        var error__5823__auto___119078 = temp__4126__auto___119077;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___119078)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema119058_119073, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___119076, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___119078], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__119061;
      var owner = G__119062;
      while (true) {
        if (typeof t3tr0s_slides.slide15.t119067 !== "undefined") {
        } else {
          t3tr0s_slides.slide15.t119067 = function(output_checker119060, owner, input_schema119058, input_checker119059, validate__5821__auto__, G__119061, output_schema119057, G__119062, app, ufv__, code, meta119068) {
            this.output_checker119060 = output_checker119060;
            this.owner = owner;
            this.input_schema119058 = input_schema119058;
            this.input_checker119059 = input_checker119059;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__119061 = G__119061;
            this.output_schema119057 = output_schema119057;
            this.G__119062 = G__119062;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta119068 = meta119068;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide15.t119067.cljs$lang$type = true;
          t3tr0s_slides.slide15.t119067.cljs$lang$ctorStr = "t3tr0s-slides.slide15/t119067";
          t3tr0s_slides.slide15.t119067.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___119071, output_schema119057_119072, input_schema119058_119073, input_checker119059_119074, output_checker119060_119075) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide15/t119067");
            };
          }(validate__5821__auto__, ufv___119071, output_schema119057_119072, input_schema119058_119073, input_checker119059_119074, output_checker119060_119075);
          t3tr0s_slides.slide15.t119067.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide15.t119067.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___119071, output_schema119057_119072, input_schema119058_119073, input_checker119059_119074, output_checker119060_119075) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs119070 = t3tr0s_slides.syntax_highlight.cmt.call(null, ";; You can probably guess how to implement the");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs119070) ? sablono.interpreter.attributes.call(null, attrs119070) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs119070) ? new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; rest of the features, like gravity and")), "\n", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; the game over animation.")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Now go play some ", t3tr0s_slides.syntax_highlight.kw.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
                "href", "href", -793805698), "https://github.com/imalooney/t3tr0s"], null), "T3TR0S"], null)), "!")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Thanks to these cool people:")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Elaine Looney"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
                ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Luis Gutierrez"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Chris Oakman"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Brett Darnell"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
                ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Phil Gambling"))), "\n"], null) : new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs119070), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; rest of the features, like gravity and")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; the game over animation.")), 
                "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Now go play some ", t3tr0s_slides.syntax_highlight.kw.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "https://github.com/imalooney/t3tr0s"], null), "T3TR0S"], null)), "!")), "\n", "\n", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Thanks to these cool people:")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Elaine Looney"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Luis Gutierrez"))), "\n", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Chris Oakman"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Brett Darnell"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Phil Gambling"))), "\n"], null)));
              }()));
            };
          }(validate__5821__auto__, ufv___119071, output_schema119057_119072, input_schema119058_119073, input_checker119059_119074, output_checker119060_119075);
          t3tr0s_slides.slide15.t119067.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___119071, output_schema119057_119072, input_schema119058_119073, input_checker119059_119074, output_checker119060_119075) {
            return function(_119069) {
              var self__ = this;
              var _119069__$1 = this;
              return self__.meta119068;
            };
          }(validate__5821__auto__, ufv___119071, output_schema119057_119072, input_schema119058_119073, input_checker119059_119074, output_checker119060_119075);
          t3tr0s_slides.slide15.t119067.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___119071, output_schema119057_119072, input_schema119058_119073, input_checker119059_119074, output_checker119060_119075) {
            return function(_119069, meta119068__$1) {
              var self__ = this;
              var _119069__$1 = this;
              return new t3tr0s_slides.slide15.t119067(self__.output_checker119060, self__.owner, self__.input_schema119058, self__.input_checker119059, self__.validate__5821__auto__, self__.G__119061, self__.output_schema119057, self__.G__119062, self__.app, self__.ufv__, self__.code, meta119068__$1);
            };
          }(validate__5821__auto__, ufv___119071, output_schema119057_119072, input_schema119058_119073, input_checker119059_119074, output_checker119060_119075);
          t3tr0s_slides.slide15.__GT_t119067 = function(validate__5821__auto__, ufv___119071, output_schema119057_119072, input_schema119058_119073, input_checker119059_119074, output_checker119060_119075) {
            return function __GT_t119067(output_checker119060__$1, owner__$1, input_schema119058__$1, input_checker119059__$1, validate__5821__auto____$1, G__119061__$1, output_schema119057__$1, G__119062__$1, app__$1, ufv____$1, code__$1, meta119068) {
              return new t3tr0s_slides.slide15.t119067(output_checker119060__$1, owner__$1, input_schema119058__$1, input_checker119059__$1, validate__5821__auto____$1, G__119061__$1, output_schema119057__$1, G__119062__$1, app__$1, ufv____$1, code__$1, meta119068);
            };
          }(validate__5821__auto__, ufv___119071, output_schema119057_119072, input_schema119058_119073, input_checker119059_119074, output_checker119060_119075);
        }
        return new t3tr0s_slides.slide15.t119067(output_checker119060_119075, owner, input_schema119058_119073, input_checker119059_119074, validate__5821__auto__, G__119061, output_schema119057_119072, G__119062, app, ufv___119071, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___119079 = output_checker119060_119075.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___119079)) {
        var error__5823__auto___119080 = temp__4126__auto___119079;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___119080)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema119057_119072, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___119080], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___119071, output_schema119057_119072, input_schema119058_119073, input_checker119059_119074, output_checker119060_119075);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide15.code), schema.core.make_fn_schema.call(null, output_schema119057_119072, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema119058_119073], null)));
t3tr0s_slides.slide15.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide15.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m119056) {
    return om.core.build.call(null, t3tr0s_slides.slide15.code, cursor__9685__auto__, m119056);
  };
  __GT_code = function(cursor__9685__auto__, m119056) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m119056);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide15.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide15.rows);
t3tr0s_slides.slide15.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__119081, is_center) {
  var vec__119083 = p__119081;
  var x = cljs.core.nth.call(null, vec__119083, 0, null);
  var y = cljs.core.nth.call(null, vec__119083, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide15.cell_size * x;
  var ry = t3tr0s_slides.slide15.cell_size * y;
  var rs = t3tr0s_slides.slide15.cell_size;
  var cx = t3tr0s_slides.slide15.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide15.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide15.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide15.piece_abs_coords = function piece_abs_coords(piece, p__119084) {
  var vec__119088 = p__119084;
  var cx = cljs.core.nth.call(null, vec__119088, 0, null);
  var cy = cljs.core.nth.call(null, vec__119088, 1, null);
  return cljs.core.mapv.call(null, function(vec__119088, cx, cy) {
    return function(p__119089) {
      var vec__119090 = p__119089;
      var x = cljs.core.nth.call(null, vec__119090, 0, null);
      var y = cljs.core.nth.call(null, vec__119090, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__119088, cx, cy), piece);
};
t3tr0s_slides.slide15.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__119097 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide15.piece_abs_coords.call(null, piece, pos)));
  var chunk__119098 = null;
  var count__119099 = 0;
  var i__119100 = 0;
  while (true) {
    if (i__119100 < count__119099) {
      var vec__119101 = cljs.core._nth.call(null, chunk__119098, i__119100);
      var i = cljs.core.nth.call(null, vec__119101, 0, null);
      var c = cljs.core.nth.call(null, vec__119101, 1, null);
      t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__119103 = seq__119097;
      var G__119104 = chunk__119098;
      var G__119105 = count__119099;
      var G__119106 = i__119100 + 1;
      seq__119097 = G__119103;
      chunk__119098 = G__119104;
      count__119099 = G__119105;
      i__119100 = G__119106;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__119097);
      if (temp__4126__auto__) {
        var seq__119097__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__119097__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__119097__$1);
          var G__119107 = cljs.core.chunk_rest.call(null, seq__119097__$1);
          var G__119108 = c__4309__auto__;
          var G__119109 = cljs.core.count.call(null, c__4309__auto__);
          var G__119110 = 0;
          seq__119097 = G__119107;
          chunk__119098 = G__119108;
          count__119099 = G__119109;
          i__119100 = G__119110;
          continue;
        } else {
          var vec__119102 = cljs.core.first.call(null, seq__119097__$1);
          var i = cljs.core.nth.call(null, vec__119102, 0, null);
          var c = cljs.core.nth.call(null, vec__119102, 1, null);
          t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__119111 = cljs.core.next.call(null, seq__119097__$1);
          var G__119112 = null;
          var G__119113 = 0;
          var G__119114 = 0;
          seq__119097 = G__119111;
          chunk__119098 = G__119112;
          count__119099 = G__119113;
          i__119100 = G__119114;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide15.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__119127 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide15.rows));
  var chunk__119132 = null;
  var count__119133 = 0;
  var i__119134 = 0;
  while (true) {
    if (i__119134 < count__119133) {
      var y = cljs.core._nth.call(null, chunk__119132, i__119134);
      var seq__119135_119139 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide15.cols));
      var chunk__119136_119140 = null;
      var count__119137_119141 = 0;
      var i__119138_119142 = 0;
      while (true) {
        if (i__119138_119142 < count__119137_119141) {
          var x_119143 = cljs.core._nth.call(null, chunk__119136_119140, i__119138_119142);
          var v_119144 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_119143], null));
          if (v_119144 === 0) {
          } else {
            t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_119143, y], null), false);
          }
          var G__119145 = seq__119135_119139;
          var G__119146 = chunk__119136_119140;
          var G__119147 = count__119137_119141;
          var G__119148 = i__119138_119142 + 1;
          seq__119135_119139 = G__119145;
          chunk__119136_119140 = G__119146;
          count__119137_119141 = G__119147;
          i__119138_119142 = G__119148;
          continue;
        } else {
          var temp__4126__auto___119149 = cljs.core.seq.call(null, seq__119135_119139);
          if (temp__4126__auto___119149) {
            var seq__119135_119150__$1 = temp__4126__auto___119149;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__119135_119150__$1)) {
              var c__4309__auto___119151 = cljs.core.chunk_first.call(null, seq__119135_119150__$1);
              var G__119152 = cljs.core.chunk_rest.call(null, seq__119135_119150__$1);
              var G__119153 = c__4309__auto___119151;
              var G__119154 = cljs.core.count.call(null, c__4309__auto___119151);
              var G__119155 = 0;
              seq__119135_119139 = G__119152;
              chunk__119136_119140 = G__119153;
              count__119137_119141 = G__119154;
              i__119138_119142 = G__119155;
              continue;
            } else {
              var x_119156 = cljs.core.first.call(null, seq__119135_119150__$1);
              var v_119157 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_119156], null));
              if (v_119157 === 0) {
              } else {
                t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_119156, y], null), false);
              }
              var G__119158 = cljs.core.next.call(null, seq__119135_119150__$1);
              var G__119159 = null;
              var G__119160 = 0;
              var G__119161 = 0;
              seq__119135_119139 = G__119158;
              chunk__119136_119140 = G__119159;
              count__119137_119141 = G__119160;
              i__119138_119142 = G__119161;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__119162 = seq__119127;
      var G__119163 = chunk__119132;
      var G__119164 = count__119133;
      var G__119165 = i__119134 + 1;
      seq__119127 = G__119162;
      chunk__119132 = G__119163;
      count__119133 = G__119164;
      i__119134 = G__119165;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__119127);
      if (temp__4126__auto__) {
        var seq__119127__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__119127__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__119127__$1);
          var G__119166 = cljs.core.chunk_rest.call(null, seq__119127__$1);
          var G__119167 = c__4309__auto__;
          var G__119168 = cljs.core.count.call(null, c__4309__auto__);
          var G__119169 = 0;
          seq__119127 = G__119166;
          chunk__119132 = G__119167;
          count__119133 = G__119168;
          i__119134 = G__119169;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__119127__$1);
          var seq__119128_119170 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide15.cols));
          var chunk__119129_119171 = null;
          var count__119130_119172 = 0;
          var i__119131_119173 = 0;
          while (true) {
            if (i__119131_119173 < count__119130_119172) {
              var x_119174 = cljs.core._nth.call(null, chunk__119129_119171, i__119131_119173);
              var v_119175 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_119174], null));
              if (v_119175 === 0) {
              } else {
                t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_119174, y], null), false);
              }
              var G__119176 = seq__119128_119170;
              var G__119177 = chunk__119129_119171;
              var G__119178 = count__119130_119172;
              var G__119179 = i__119131_119173 + 1;
              seq__119128_119170 = G__119176;
              chunk__119129_119171 = G__119177;
              count__119130_119172 = G__119178;
              i__119131_119173 = G__119179;
              continue;
            } else {
              var temp__4126__auto___119180__$1 = cljs.core.seq.call(null, seq__119128_119170);
              if (temp__4126__auto___119180__$1) {
                var seq__119128_119181__$1 = temp__4126__auto___119180__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__119128_119181__$1)) {
                  var c__4309__auto___119182 = cljs.core.chunk_first.call(null, seq__119128_119181__$1);
                  var G__119183 = cljs.core.chunk_rest.call(null, seq__119128_119181__$1);
                  var G__119184 = c__4309__auto___119182;
                  var G__119185 = cljs.core.count.call(null, c__4309__auto___119182);
                  var G__119186 = 0;
                  seq__119128_119170 = G__119183;
                  chunk__119129_119171 = G__119184;
                  count__119130_119172 = G__119185;
                  i__119131_119173 = G__119186;
                  continue;
                } else {
                  var x_119187 = cljs.core.first.call(null, seq__119128_119181__$1);
                  var v_119188 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_119187], null));
                  if (v_119188 === 0) {
                  } else {
                    t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_119187, y], null), false);
                  }
                  var G__119189 = cljs.core.next.call(null, seq__119128_119181__$1);
                  var G__119190 = null;
                  var G__119191 = 0;
                  var G__119192 = 0;
                  seq__119128_119170 = G__119189;
                  chunk__119129_119171 = G__119190;
                  count__119130_119172 = G__119191;
                  i__119131_119173 = G__119192;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__119193 = cljs.core.next.call(null, seq__119127__$1);
          var G__119194 = null;
          var G__119195 = 0;
          var G__119196 = 0;
          seq__119127 = G__119193;
          chunk__119132 = G__119194;
          count__119133 = G__119195;
          i__119134 = G__119196;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide15.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide15.cell_size * t3tr0s_slides.slide15.cols, t3tr0s_slides.slide15.cell_size * t3tr0s_slides.slide15.rows);
  ctx.fillStyle = t3tr0s_slides.slide15.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide15.light_green;
  return t3tr0s_slides.slide15.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
};
var ufv___119214 = schema.utils.use_fn_validation;
var output_schema119198_119215 = schema.core.Any;
var input_schema119199_119216 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker119200_119217 = schema.core.checker.call(null, input_schema119199_119216);
var output_checker119201_119218 = schema.core.checker.call(null, output_schema119198_119215);
t3tr0s_slides.slide15.canvas = function(ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218) {
  return function canvas(G__119202, G__119203) {
    var validate__5821__auto__ = ufv___119214.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___119219 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__119202, G__119203], null);
      var temp__4126__auto___119220 = input_checker119200_119217.call(null, args__5822__auto___119219);
      if (cljs.core.truth_(temp__4126__auto___119220)) {
        var error__5823__auto___119221 = temp__4126__auto___119220;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___119221)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema119199_119216, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___119219, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___119221], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__119202;
      var owner = G__119203;
      while (true) {
        if (typeof t3tr0s_slides.slide15.t119209 !== "undefined") {
        } else {
          t3tr0s_slides.slide15.t119209 = function(G__119203, owner, input_schema119199, validate__5821__auto__, output_checker119201, canvas, G__119202, output_schema119198, app, input_checker119200, ufv__, meta119210) {
            this.G__119203 = G__119203;
            this.owner = owner;
            this.input_schema119199 = input_schema119199;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker119201 = output_checker119201;
            this.canvas = canvas;
            this.G__119202 = G__119202;
            this.output_schema119198 = output_schema119198;
            this.app = app;
            this.input_checker119200 = input_checker119200;
            this.ufv__ = ufv__;
            this.meta119210 = meta119210;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide15.t119209.cljs$lang$type = true;
          t3tr0s_slides.slide15.t119209.cljs$lang$ctorStr = "t3tr0s-slides.slide15/t119209";
          t3tr0s_slides.slide15.t119209.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide15/t119209");
            };
          }(validate__5821__auto__, ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218);
          t3tr0s_slides.slide15.t119209.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide15.t119209.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas"}));
            };
          }(validate__5821__auto__, ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218);
          t3tr0s_slides.slide15.t119209.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide15.t119209.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide15.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218);
          t3tr0s_slides.slide15.t119209.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide15.t119209.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide15.cols * t3tr0s_slides.slide15.cell_size;
              canvas__$2.height = t3tr0s_slides.slide15.rows * t3tr0s_slides.slide15.cell_size;
              return t3tr0s_slides.slide15.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218);
          t3tr0s_slides.slide15.t119209.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218) {
            return function(_119211) {
              var self__ = this;
              var _119211__$1 = this;
              return self__.meta119210;
            };
          }(validate__5821__auto__, ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218);
          t3tr0s_slides.slide15.t119209.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218) {
            return function(_119211, meta119210__$1) {
              var self__ = this;
              var _119211__$1 = this;
              return new t3tr0s_slides.slide15.t119209(self__.G__119203, self__.owner, self__.input_schema119199, self__.validate__5821__auto__, self__.output_checker119201, self__.canvas, self__.G__119202, self__.output_schema119198, self__.app, self__.input_checker119200, self__.ufv__, meta119210__$1);
            };
          }(validate__5821__auto__, ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218);
          t3tr0s_slides.slide15.__GT_t119209 = function(validate__5821__auto__, ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218) {
            return function __GT_t119209(G__119203__$1, owner__$1, input_schema119199__$1, validate__5821__auto____$1, output_checker119201__$1, canvas__$1, G__119202__$1, output_schema119198__$1, app__$1, input_checker119200__$1, ufv____$1, meta119210) {
              return new t3tr0s_slides.slide15.t119209(G__119203__$1, owner__$1, input_schema119199__$1, validate__5821__auto____$1, output_checker119201__$1, canvas__$1, G__119202__$1, output_schema119198__$1, app__$1, input_checker119200__$1, ufv____$1, meta119210);
            };
          }(validate__5821__auto__, ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218);
        }
        return new t3tr0s_slides.slide15.t119209(G__119203, owner, input_schema119199_119216, validate__5821__auto__, output_checker119201_119218, canvas, G__119202, output_schema119198_119215, app, input_checker119200_119217, ufv___119214, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___119222 = output_checker119201_119218.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___119222)) {
        var error__5823__auto___119223 = temp__4126__auto___119222;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___119223)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema119198_119215, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___119223], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___119214, output_schema119198_119215, input_schema119199_119216, input_checker119200_119217, output_checker119201_119218);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide15.canvas), schema.core.make_fn_schema.call(null, output_schema119198_119215, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema119199_119216], null)));
t3tr0s_slides.slide15.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide15.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m119197) {
    return om.core.build.call(null, t3tr0s_slides.slide15.canvas, cursor__9685__auto__, m119197);
  };
  __GT_canvas = function(cursor__9685__auto__, m119197) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m119197);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___119241 = schema.utils.use_fn_validation;
var output_schema119225_119242 = schema.core.Any;
var input_schema119226_119243 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker119227_119244 = schema.core.checker.call(null, input_schema119226_119243);
var output_checker119228_119245 = schema.core.checker.call(null, output_schema119225_119242);
t3tr0s_slides.slide15.slide = function(ufv___119241, output_schema119225_119242, input_schema119226_119243, input_checker119227_119244, output_checker119228_119245) {
  return function slide(G__119229, G__119230) {
    var validate__5821__auto__ = ufv___119241.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___119246 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__119229, G__119230], null);
      var temp__4126__auto___119247 = input_checker119227_119244.call(null, args__5822__auto___119246);
      if (cljs.core.truth_(temp__4126__auto___119247)) {
        var error__5823__auto___119248 = temp__4126__auto___119247;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___119248)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema119226_119243, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___119246, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___119248], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__119229;
      var owner = G__119230;
      while (true) {
        if (typeof t3tr0s_slides.slide15.t119236 !== "undefined") {
        } else {
          t3tr0s_slides.slide15.t119236 = function(owner, validate__5821__auto__, output_schema119225, input_schema119226, G__119229, G__119230, slide, input_checker119227, app, ufv__, output_checker119228, meta119237) {
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema119225 = output_schema119225;
            this.input_schema119226 = input_schema119226;
            this.G__119229 = G__119229;
            this.G__119230 = G__119230;
            this.slide = slide;
            this.input_checker119227 = input_checker119227;
            this.app = app;
            this.ufv__ = ufv__;
            this.output_checker119228 = output_checker119228;
            this.meta119237 = meta119237;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide15.t119236.cljs$lang$type = true;
          t3tr0s_slides.slide15.t119236.cljs$lang$ctorStr = "t3tr0s-slides.slide15/t119236";
          t3tr0s_slides.slide15.t119236.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___119241, output_schema119225_119242, input_schema119226_119243, input_checker119227_119244, output_checker119228_119245) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide15/t119236");
            };
          }(validate__5821__auto__, ufv___119241, output_schema119225_119242, input_schema119226_119243, input_checker119227_119244, output_checker119228_119245);
          t3tr0s_slides.slide15.t119236.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide15.t119236.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___119241, output_schema119225_119242, input_schema119226_119243, input_checker119227_119244, output_checker119228_119245) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "That's all for now..."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide15.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide15.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___119241, output_schema119225_119242, input_schema119226_119243, input_checker119227_119244, output_checker119228_119245);
          t3tr0s_slides.slide15.t119236.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___119241, output_schema119225_119242, input_schema119226_119243, input_checker119227_119244, output_checker119228_119245) {
            return function(_119238) {
              var self__ = this;
              var _119238__$1 = this;
              return self__.meta119237;
            };
          }(validate__5821__auto__, ufv___119241, output_schema119225_119242, input_schema119226_119243, input_checker119227_119244, output_checker119228_119245);
          t3tr0s_slides.slide15.t119236.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___119241, output_schema119225_119242, input_schema119226_119243, input_checker119227_119244, output_checker119228_119245) {
            return function(_119238, meta119237__$1) {
              var self__ = this;
              var _119238__$1 = this;
              return new t3tr0s_slides.slide15.t119236(self__.owner, self__.validate__5821__auto__, self__.output_schema119225, self__.input_schema119226, self__.G__119229, self__.G__119230, self__.slide, self__.input_checker119227, self__.app, self__.ufv__, self__.output_checker119228, meta119237__$1);
            };
          }(validate__5821__auto__, ufv___119241, output_schema119225_119242, input_schema119226_119243, input_checker119227_119244, output_checker119228_119245);
          t3tr0s_slides.slide15.__GT_t119236 = function(validate__5821__auto__, ufv___119241, output_schema119225_119242, input_schema119226_119243, input_checker119227_119244, output_checker119228_119245) {
            return function __GT_t119236(owner__$1, validate__5821__auto____$1, output_schema119225__$1, input_schema119226__$1, G__119229__$1, G__119230__$1, slide__$1, input_checker119227__$1, app__$1, ufv____$1, output_checker119228__$1, meta119237) {
              return new t3tr0s_slides.slide15.t119236(owner__$1, validate__5821__auto____$1, output_schema119225__$1, input_schema119226__$1, G__119229__$1, G__119230__$1, slide__$1, input_checker119227__$1, app__$1, ufv____$1, output_checker119228__$1, meta119237);
            };
          }(validate__5821__auto__, ufv___119241, output_schema119225_119242, input_schema119226_119243, input_checker119227_119244, output_checker119228_119245);
        }
        return new t3tr0s_slides.slide15.t119236(owner, validate__5821__auto__, output_schema119225_119242, input_schema119226_119243, G__119229, G__119230, slide, input_checker119227_119244, app, ufv___119241, output_checker119228_119245, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___119249 = output_checker119228_119245.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___119249)) {
        var error__5823__auto___119250 = temp__4126__auto___119249;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___119250)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema119225_119242, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___119250], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___119241, output_schema119225_119242, input_schema119226_119243, input_checker119227_119244, output_checker119228_119245);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide15.slide), schema.core.make_fn_schema.call(null, output_schema119225_119242, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema119226_119243], null)));
t3tr0s_slides.slide15.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide15.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m119224) {
    return om.core.build.call(null, t3tr0s_slides.slide15.slide, cursor__9685__auto__, m119224);
  };
  __GT_slide = function(cursor__9685__auto__, m119224) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m119224);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide15.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide15.slide, t3tr0s_slides.slide15.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide15.resume = function resume() {
  return null;
};
t3tr0s_slides.slide15.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide08");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide08.dark_green = "#143";
t3tr0s_slides.slide08.light_green = "#175";
t3tr0s_slides.slide08.dark_purple = "#449";
t3tr0s_slides.slide08.light_purple = "#6ad";
t3tr0s_slides.slide08.dark_red = "#944";
t3tr0s_slides.slide08.light_red = "#f8c";
t3tr0s_slides.slide08.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide08.rotate_coord = function rotate_coord(p__33607) {
  var vec__33609 = p__33607;
  var x = cljs.core.nth.call(null, vec__33609, 0, null);
  var y = cljs.core.nth.call(null, vec__33609, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide08.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide08.rotate_coord, piece);
};
t3tr0s_slides.slide08.rows = 20;
t3tr0s_slides.slide08.cols = 10;
t3tr0s_slides.slide08.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide08.cols, 0));
t3tr0s_slides.slide08.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide08.rows, t3tr0s_slides.slide08.empty_row));
t3tr0s_slides.slide08.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 0, 0, 0, 0, 0, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 0, 0, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 0, 1, 0, 1, 1, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide08.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide08.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide08.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide08.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide08.initial_pos], null));
t3tr0s_slides.slide08.write_piece = function write_piece(board, coords, p__33610) {
  while (true) {
    var vec__33614 = p__33610;
    var cx = cljs.core.nth.call(null, vec__33614, 0, null);
    var cy = cljs.core.nth.call(null, vec__33614, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__33615 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__33615, 0, null);
      var y = cljs.core.nth.call(null, vec__33615, 1, null);
      var G__33617 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e33616) {
          if (e33616 instanceof Error) {
            var _ = e33616;
            return board;
          } else {
            throw e33616;
          }
        }
      }();
      var G__33618 = cljs.core.rest.call(null, coords);
      var G__33619 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__33617;
      coords = G__33618;
      p__33610 = G__33619;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide08.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__33621 = cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state);
  var map__33621__$1 = cljs.core.seq_QMARK_.call(null, map__33621) ? cljs.core.apply.call(null, cljs.core.hash_map, map__33621) : map__33621;
  var position = cljs.core.get.call(null, map__33621__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__33621__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide08.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide08.write_piece, piece, position);
};
t3tr0s_slides.slide08.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__33622) {
  var vec__33626 = p__33622;
  var cx = cljs.core.nth.call(null, vec__33626, 0, null);
  var cy = cljs.core.nth.call(null, vec__33626, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__33626, cx, cy) {
    return function(p__33627) {
      var vec__33628 = p__33627;
      var x = cljs.core.nth.call(null, vec__33628, 0, null);
      var y = cljs.core.nth.call(null, vec__33628, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__33626, cx, cy), piece);
};
t3tr0s_slides.slide08.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide08.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide08.app_state))));
};
t3tr0s_slides.slide08.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__33633(s__33634) {
      return new cljs.core.LazySeq(null, function() {
        var s__33634__$1 = s__33634;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__33634__$1);
          if (temp__4126__auto__) {
            var s__33634__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__33634__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__33634__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__33636 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__33635 = 0;
                while (true) {
                  if (i__33635 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__33635);
                    cljs.core.chunk_append.call(null, b__33636, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))));
                    var G__33637 = i__33635 + 1;
                    i__33635 = G__33637;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33636), iter__33633.call(null, cljs.core.chunk_rest.call(null, s__33634__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33636), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__33634__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))), iter__33633.call(null, cljs.core.rest.call(null, s__33634__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide08.cols));
  }(), " ]"], null);
};
var ufv___33653 = schema.utils.use_fn_validation;
var output_schema33639_33654 = schema.core.Any;
var input_schema33640_33655 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker33641_33656 = schema.core.checker.call(null, input_schema33640_33655);
var output_checker33642_33657 = schema.core.checker.call(null, output_schema33639_33654);
t3tr0s_slides.slide08.code = function(ufv___33653, output_schema33639_33654, input_schema33640_33655, input_checker33641_33656, output_checker33642_33657) {
  return function code(G__33643, G__33644) {
    var validate__5821__auto__ = ufv___33653.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___33658 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__33643, G__33644], null);
      var temp__4126__auto___33659 = input_checker33641_33656.call(null, args__5822__auto___33658);
      if (cljs.core.truth_(temp__4126__auto___33659)) {
        var error__5823__auto___33660 = temp__4126__auto___33659;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___33660)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema33640_33655, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___33658, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___33660], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__33643;
      var owner = G__33644;
      while (true) {
        if (typeof t3tr0s_slides.slide08.t33649 !== "undefined") {
        } else {
          t3tr0s_slides.slide08.t33649 = function(owner, output_checker33642, validate__5821__auto__, G__33644, G__33643, input_schema33640, app, ufv__, code, input_checker33641, output_schema33639, meta33650) {
            this.owner = owner;
            this.output_checker33642 = output_checker33642;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__33644 = G__33644;
            this.G__33643 = G__33643;
            this.input_schema33640 = input_schema33640;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.input_checker33641 = input_checker33641;
            this.output_schema33639 = output_schema33639;
            this.meta33650 = meta33650;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide08.t33649.cljs$lang$type = true;
          t3tr0s_slides.slide08.t33649.cljs$lang$ctorStr = "t3tr0s-slides.slide08/t33649";
          t3tr0s_slides.slide08.t33649.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___33653, output_schema33639_33654, input_schema33640_33655, input_checker33641_33656, output_checker33642_33657) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide08/t33649");
            };
          }(validate__5821__auto__, ufv___33653, output_schema33639_33654, input_schema33640_33655, input_checker33641_33656, output_checker33642_33657);
          t3tr0s_slides.slide08.t33649.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide08.t33649.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___33653, output_schema33639_33654, input_schema33640_33655, input_checker33641_33656, output_checker33642_33657) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " piece-fits?\n", "  [board piece [cx cy]]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "every?")), "\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "fn")), " [[x y]]\n", "      (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "zero?")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "get-in")), " board [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " y cy) (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x cx)])))\n", "    piece))\n", "\n\n", "\x3e (piece-fits? board (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.kw.call(null, ":T")), " pieces) ", sablono.interpreter.interpret.call(null, function() {
                var vec__33652 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state));
                var x = cljs.core.nth.call(null, vec__33652, 0, null);
                var y = cljs.core.nth.call(null, vec__33652, 1, null);
                return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), t3tr0s_slides.syntax_highlight.lit.call(null, y)), " "), t3tr0s_slides.syntax_highlight.lit.call(null, x)), "[");
              }()), ")\n", "\n", "   ", sablono.interpreter.interpret.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide08.app_piece_fits_QMARK_.call(null))), "\n", "\n")));
            };
          }(validate__5821__auto__, ufv___33653, output_schema33639_33654, input_schema33640_33655, input_checker33641_33656, output_checker33642_33657);
          t3tr0s_slides.slide08.t33649.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___33653, output_schema33639_33654, input_schema33640_33655, input_checker33641_33656, output_checker33642_33657) {
            return function(_33651) {
              var self__ = this;
              var _33651__$1 = this;
              return self__.meta33650;
            };
          }(validate__5821__auto__, ufv___33653, output_schema33639_33654, input_schema33640_33655, input_checker33641_33656, output_checker33642_33657);
          t3tr0s_slides.slide08.t33649.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___33653, output_schema33639_33654, input_schema33640_33655, input_checker33641_33656, output_checker33642_33657) {
            return function(_33651, meta33650__$1) {
              var self__ = this;
              var _33651__$1 = this;
              return new t3tr0s_slides.slide08.t33649(self__.owner, self__.output_checker33642, self__.validate__5821__auto__, self__.G__33644, self__.G__33643, self__.input_schema33640, self__.app, self__.ufv__, self__.code, self__.input_checker33641, self__.output_schema33639, meta33650__$1);
            };
          }(validate__5821__auto__, ufv___33653, output_schema33639_33654, input_schema33640_33655, input_checker33641_33656, output_checker33642_33657);
          t3tr0s_slides.slide08.__GT_t33649 = function(validate__5821__auto__, ufv___33653, output_schema33639_33654, input_schema33640_33655, input_checker33641_33656, output_checker33642_33657) {
            return function __GT_t33649(owner__$1, output_checker33642__$1, validate__5821__auto____$1, G__33644__$1, G__33643__$1, input_schema33640__$1, app__$1, ufv____$1, code__$1, input_checker33641__$1, output_schema33639__$1, meta33650) {
              return new t3tr0s_slides.slide08.t33649(owner__$1, output_checker33642__$1, validate__5821__auto____$1, G__33644__$1, G__33643__$1, input_schema33640__$1, app__$1, ufv____$1, code__$1, input_checker33641__$1, output_schema33639__$1, meta33650);
            };
          }(validate__5821__auto__, ufv___33653, output_schema33639_33654, input_schema33640_33655, input_checker33641_33656, output_checker33642_33657);
        }
        return new t3tr0s_slides.slide08.t33649(owner, output_checker33642_33657, validate__5821__auto__, G__33644, G__33643, input_schema33640_33655, app, ufv___33653, code, input_checker33641_33656, output_schema33639_33654, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___33661 = output_checker33642_33657.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___33661)) {
        var error__5823__auto___33662 = temp__4126__auto___33661;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___33662)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema33639_33654, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___33662], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___33653, output_schema33639_33654, input_schema33640_33655, input_checker33641_33656, output_checker33642_33657);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide08.code), schema.core.make_fn_schema.call(null, output_schema33639_33654, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema33640_33655], null)));
t3tr0s_slides.slide08.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide08.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m33638) {
    return om.core.build.call(null, t3tr0s_slides.slide08.code, cursor__9685__auto__, m33638);
  };
  __GT_code = function(cursor__9685__auto__, m33638) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m33638);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide08.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide08.rows);
t3tr0s_slides.slide08.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__33663, is_center) {
  var vec__33665 = p__33663;
  var x = cljs.core.nth.call(null, vec__33665, 0, null);
  var y = cljs.core.nth.call(null, vec__33665, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide08.cell_size * x;
  var ry = t3tr0s_slides.slide08.cell_size * y;
  var rs = t3tr0s_slides.slide08.cell_size;
  var cx = t3tr0s_slides.slide08.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide08.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide08.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide08.piece_abs_coords = function piece_abs_coords(piece, p__33666) {
  var vec__33670 = p__33666;
  var cx = cljs.core.nth.call(null, vec__33670, 0, null);
  var cy = cljs.core.nth.call(null, vec__33670, 1, null);
  return cljs.core.mapv.call(null, function(vec__33670, cx, cy) {
    return function(p__33671) {
      var vec__33672 = p__33671;
      var x = cljs.core.nth.call(null, vec__33672, 0, null);
      var y = cljs.core.nth.call(null, vec__33672, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__33670, cx, cy), piece);
};
t3tr0s_slides.slide08.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__33679 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide08.piece_abs_coords.call(null, piece, pos)));
  var chunk__33680 = null;
  var count__33681 = 0;
  var i__33682 = 0;
  while (true) {
    if (i__33682 < count__33681) {
      var vec__33683 = cljs.core._nth.call(null, chunk__33680, i__33682);
      var i = cljs.core.nth.call(null, vec__33683, 0, null);
      var c = cljs.core.nth.call(null, vec__33683, 1, null);
      t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__33685 = seq__33679;
      var G__33686 = chunk__33680;
      var G__33687 = count__33681;
      var G__33688 = i__33682 + 1;
      seq__33679 = G__33685;
      chunk__33680 = G__33686;
      count__33681 = G__33687;
      i__33682 = G__33688;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__33679);
      if (temp__4126__auto__) {
        var seq__33679__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__33679__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__33679__$1);
          var G__33689 = cljs.core.chunk_rest.call(null, seq__33679__$1);
          var G__33690 = c__4309__auto__;
          var G__33691 = cljs.core.count.call(null, c__4309__auto__);
          var G__33692 = 0;
          seq__33679 = G__33689;
          chunk__33680 = G__33690;
          count__33681 = G__33691;
          i__33682 = G__33692;
          continue;
        } else {
          var vec__33684 = cljs.core.first.call(null, seq__33679__$1);
          var i = cljs.core.nth.call(null, vec__33684, 0, null);
          var c = cljs.core.nth.call(null, vec__33684, 1, null);
          t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__33693 = cljs.core.next.call(null, seq__33679__$1);
          var G__33694 = null;
          var G__33695 = 0;
          var G__33696 = 0;
          seq__33679 = G__33693;
          chunk__33680 = G__33694;
          count__33681 = G__33695;
          i__33682 = G__33696;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide08.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__33709 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide08.rows));
  var chunk__33714 = null;
  var count__33715 = 0;
  var i__33716 = 0;
  while (true) {
    if (i__33716 < count__33715) {
      var y = cljs.core._nth.call(null, chunk__33714, i__33716);
      var seq__33717_33721 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide08.cols));
      var chunk__33718_33722 = null;
      var count__33719_33723 = 0;
      var i__33720_33724 = 0;
      while (true) {
        if (i__33720_33724 < count__33719_33723) {
          var x_33725 = cljs.core._nth.call(null, chunk__33718_33722, i__33720_33724);
          var v_33726 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_33725], null));
          if (v_33726 === 0) {
          } else {
            t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_33725, y], null), false);
          }
          var G__33727 = seq__33717_33721;
          var G__33728 = chunk__33718_33722;
          var G__33729 = count__33719_33723;
          var G__33730 = i__33720_33724 + 1;
          seq__33717_33721 = G__33727;
          chunk__33718_33722 = G__33728;
          count__33719_33723 = G__33729;
          i__33720_33724 = G__33730;
          continue;
        } else {
          var temp__4126__auto___33731 = cljs.core.seq.call(null, seq__33717_33721);
          if (temp__4126__auto___33731) {
            var seq__33717_33732__$1 = temp__4126__auto___33731;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__33717_33732__$1)) {
              var c__4309__auto___33733 = cljs.core.chunk_first.call(null, seq__33717_33732__$1);
              var G__33734 = cljs.core.chunk_rest.call(null, seq__33717_33732__$1);
              var G__33735 = c__4309__auto___33733;
              var G__33736 = cljs.core.count.call(null, c__4309__auto___33733);
              var G__33737 = 0;
              seq__33717_33721 = G__33734;
              chunk__33718_33722 = G__33735;
              count__33719_33723 = G__33736;
              i__33720_33724 = G__33737;
              continue;
            } else {
              var x_33738 = cljs.core.first.call(null, seq__33717_33732__$1);
              var v_33739 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_33738], null));
              if (v_33739 === 0) {
              } else {
                t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_33738, y], null), false);
              }
              var G__33740 = cljs.core.next.call(null, seq__33717_33732__$1);
              var G__33741 = null;
              var G__33742 = 0;
              var G__33743 = 0;
              seq__33717_33721 = G__33740;
              chunk__33718_33722 = G__33741;
              count__33719_33723 = G__33742;
              i__33720_33724 = G__33743;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__33744 = seq__33709;
      var G__33745 = chunk__33714;
      var G__33746 = count__33715;
      var G__33747 = i__33716 + 1;
      seq__33709 = G__33744;
      chunk__33714 = G__33745;
      count__33715 = G__33746;
      i__33716 = G__33747;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__33709);
      if (temp__4126__auto__) {
        var seq__33709__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__33709__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__33709__$1);
          var G__33748 = cljs.core.chunk_rest.call(null, seq__33709__$1);
          var G__33749 = c__4309__auto__;
          var G__33750 = cljs.core.count.call(null, c__4309__auto__);
          var G__33751 = 0;
          seq__33709 = G__33748;
          chunk__33714 = G__33749;
          count__33715 = G__33750;
          i__33716 = G__33751;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__33709__$1);
          var seq__33710_33752 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide08.cols));
          var chunk__33711_33753 = null;
          var count__33712_33754 = 0;
          var i__33713_33755 = 0;
          while (true) {
            if (i__33713_33755 < count__33712_33754) {
              var x_33756 = cljs.core._nth.call(null, chunk__33711_33753, i__33713_33755);
              var v_33757 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_33756], null));
              if (v_33757 === 0) {
              } else {
                t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_33756, y], null), false);
              }
              var G__33758 = seq__33710_33752;
              var G__33759 = chunk__33711_33753;
              var G__33760 = count__33712_33754;
              var G__33761 = i__33713_33755 + 1;
              seq__33710_33752 = G__33758;
              chunk__33711_33753 = G__33759;
              count__33712_33754 = G__33760;
              i__33713_33755 = G__33761;
              continue;
            } else {
              var temp__4126__auto___33762__$1 = cljs.core.seq.call(null, seq__33710_33752);
              if (temp__4126__auto___33762__$1) {
                var seq__33710_33763__$1 = temp__4126__auto___33762__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__33710_33763__$1)) {
                  var c__4309__auto___33764 = cljs.core.chunk_first.call(null, seq__33710_33763__$1);
                  var G__33765 = cljs.core.chunk_rest.call(null, seq__33710_33763__$1);
                  var G__33766 = c__4309__auto___33764;
                  var G__33767 = cljs.core.count.call(null, c__4309__auto___33764);
                  var G__33768 = 0;
                  seq__33710_33752 = G__33765;
                  chunk__33711_33753 = G__33766;
                  count__33712_33754 = G__33767;
                  i__33713_33755 = G__33768;
                  continue;
                } else {
                  var x_33769 = cljs.core.first.call(null, seq__33710_33763__$1);
                  var v_33770 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_33769], null));
                  if (v_33770 === 0) {
                  } else {
                    t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_33769, y], null), false);
                  }
                  var G__33771 = cljs.core.next.call(null, seq__33710_33763__$1);
                  var G__33772 = null;
                  var G__33773 = 0;
                  var G__33774 = 0;
                  seq__33710_33752 = G__33771;
                  chunk__33711_33753 = G__33772;
                  count__33712_33754 = G__33773;
                  i__33713_33755 = G__33774;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__33775 = cljs.core.next.call(null, seq__33709__$1);
          var G__33776 = null;
          var G__33777 = 0;
          var G__33778 = 0;
          seq__33709 = G__33775;
          chunk__33714 = G__33776;
          count__33715 = G__33777;
          i__33716 = G__33778;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide08.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide08.cell_size * t3tr0s_slides.slide08.cols, t3tr0s_slides.slide08.cell_size * t3tr0s_slides.slide08.rows);
  ctx.fillStyle = t3tr0s_slides.slide08.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide08.light_green;
  t3tr0s_slides.slide08.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var fits = t3tr0s_slides.slide08.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = fits ? t3tr0s_slides.slide08.dark_purple : t3tr0s_slides.slide08.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide08.light_purple : t3tr0s_slides.slide08.light_red;
    return t3tr0s_slides.slide08.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide08.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide08.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide08.cell_size);
  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [col, row], null));
};
var ufv___33793 = schema.utils.use_fn_validation;
var output_schema33781_33794 = schema.core.Any;
var input_schema33782_33795 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker33783_33796 = schema.core.checker.call(null, input_schema33782_33795);
var output_checker33784_33797 = schema.core.checker.call(null, output_schema33781_33794);
t3tr0s_slides.slide08.canvas = function(ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797) {
  return function canvas(G__33785, G__33786) {
    var validate__5821__auto__ = ufv___33793.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___33798 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__33785, G__33786], null);
      var temp__4126__auto___33799 = input_checker33783_33796.call(null, args__5822__auto___33798);
      if (cljs.core.truth_(temp__4126__auto___33799)) {
        var error__5823__auto___33800 = temp__4126__auto___33799;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___33800)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema33782_33795, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___33798, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___33800], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__33785;
      var owner = G__33786;
      while (true) {
        if (typeof t3tr0s_slides.slide08.t33790 !== "undefined") {
        } else {
          t3tr0s_slides.slide08.t33790 = function(G__33785, G__33786, owner, input_schema33782, output_checker33784, validate__5821__auto__, input_checker33783, canvas, app, output_schema33781, ufv__, meta33791) {
            this.G__33785 = G__33785;
            this.G__33786 = G__33786;
            this.owner = owner;
            this.input_schema33782 = input_schema33782;
            this.output_checker33784 = output_checker33784;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker33783 = input_checker33783;
            this.canvas = canvas;
            this.app = app;
            this.output_schema33781 = output_schema33781;
            this.ufv__ = ufv__;
            this.meta33791 = meta33791;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide08.t33790.cljs$lang$type = true;
          t3tr0s_slides.slide08.t33790.cljs$lang$ctorStr = "t3tr0s-slides.slide08/t33790";
          t3tr0s_slides.slide08.t33790.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide08/t33790");
            };
          }(validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797);
          t3tr0s_slides.slide08.t33790.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide08.t33790.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseDown":function(___$1, validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797) {
                return function() {
                  return om.core.transact_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), t3tr0s_slides.slide08.rotate_piece);
                };
              }(___$1, validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797), "onMouseMove":function(___$1, validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797) {
                return function(p1__33779_SHARP_) {
                  return t3tr0s_slides.slide08.canvas_mouse.call(null, self__.app, self__.owner, p1__33779_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797)}));
            };
          }(validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797);
          t3tr0s_slides.slide08.t33790.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide08.t33790.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide08.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797);
          t3tr0s_slides.slide08.t33790.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide08.t33790.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide08.cols * t3tr0s_slides.slide08.cell_size;
              canvas__$2.height = t3tr0s_slides.slide08.rows * t3tr0s_slides.slide08.cell_size;
              return t3tr0s_slides.slide08.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797);
          t3tr0s_slides.slide08.t33790.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797) {
            return function(_33792) {
              var self__ = this;
              var _33792__$1 = this;
              return self__.meta33791;
            };
          }(validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797);
          t3tr0s_slides.slide08.t33790.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797) {
            return function(_33792, meta33791__$1) {
              var self__ = this;
              var _33792__$1 = this;
              return new t3tr0s_slides.slide08.t33790(self__.G__33785, self__.G__33786, self__.owner, self__.input_schema33782, self__.output_checker33784, self__.validate__5821__auto__, self__.input_checker33783, self__.canvas, self__.app, self__.output_schema33781, self__.ufv__, meta33791__$1);
            };
          }(validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797);
          t3tr0s_slides.slide08.__GT_t33790 = function(validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797) {
            return function __GT_t33790(G__33785__$1, G__33786__$1, owner__$1, input_schema33782__$1, output_checker33784__$1, validate__5821__auto____$1, input_checker33783__$1, canvas__$1, app__$1, output_schema33781__$1, ufv____$1, meta33791) {
              return new t3tr0s_slides.slide08.t33790(G__33785__$1, G__33786__$1, owner__$1, input_schema33782__$1, output_checker33784__$1, validate__5821__auto____$1, input_checker33783__$1, canvas__$1, app__$1, output_schema33781__$1, ufv____$1, meta33791);
            };
          }(validate__5821__auto__, ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797);
        }
        return new t3tr0s_slides.slide08.t33790(G__33785, G__33786, owner, input_schema33782_33795, output_checker33784_33797, validate__5821__auto__, input_checker33783_33796, canvas, app, output_schema33781_33794, ufv___33793, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___33801 = output_checker33784_33797.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___33801)) {
        var error__5823__auto___33802 = temp__4126__auto___33801;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___33802)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema33781_33794, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___33802], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___33793, output_schema33781_33794, input_schema33782_33795, input_checker33783_33796, output_checker33784_33797);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide08.canvas), schema.core.make_fn_schema.call(null, output_schema33781_33794, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema33782_33795], null)));
t3tr0s_slides.slide08.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide08.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m33780) {
    return om.core.build.call(null, t3tr0s_slides.slide08.canvas, cursor__9685__auto__, m33780);
  };
  __GT_canvas = function(cursor__9685__auto__, m33780) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m33780);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___33820 = schema.utils.use_fn_validation;
var output_schema33804_33821 = schema.core.Any;
var input_schema33805_33822 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker33806_33823 = schema.core.checker.call(null, input_schema33805_33822);
var output_checker33807_33824 = schema.core.checker.call(null, output_schema33804_33821);
t3tr0s_slides.slide08.slide = function(ufv___33820, output_schema33804_33821, input_schema33805_33822, input_checker33806_33823, output_checker33807_33824) {
  return function slide(G__33808, G__33809) {
    var validate__5821__auto__ = ufv___33820.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___33825 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__33808, G__33809], null);
      var temp__4126__auto___33826 = input_checker33806_33823.call(null, args__5822__auto___33825);
      if (cljs.core.truth_(temp__4126__auto___33826)) {
        var error__5823__auto___33827 = temp__4126__auto___33826;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___33827)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema33805_33822, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___33825, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___33827], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__33808;
      var owner = G__33809;
      while (true) {
        if (typeof t3tr0s_slides.slide08.t33815 !== "undefined") {
        } else {
          t3tr0s_slides.slide08.t33815 = function(G__33808, input_schema33805, owner, output_checker33807, output_schema33804, validate__5821__auto__, input_checker33806, G__33809, slide, app, ufv__, meta33816) {
            this.G__33808 = G__33808;
            this.input_schema33805 = input_schema33805;
            this.owner = owner;
            this.output_checker33807 = output_checker33807;
            this.output_schema33804 = output_schema33804;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker33806 = input_checker33806;
            this.G__33809 = G__33809;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta33816 = meta33816;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide08.t33815.cljs$lang$type = true;
          t3tr0s_slides.slide08.t33815.cljs$lang$ctorStr = "t3tr0s-slides.slide08/t33815";
          t3tr0s_slides.slide08.t33815.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___33820, output_schema33804_33821, input_schema33805_33822, input_checker33806_33823, output_checker33807_33824) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide08/t33815");
            };
          }(validate__5821__auto__, ufv___33820, output_schema33804_33821, input_schema33805_33822, input_checker33806_33823, output_checker33807_33824);
          t3tr0s_slides.slide08.t33815.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide08.t33815.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___33820, output_schema33804_33821, input_schema33805_33822, input_checker33806_33823, output_checker33807_33824) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "8. Detect collision."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide08.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide08.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___33820, output_schema33804_33821, input_schema33805_33822, input_checker33806_33823, output_checker33807_33824);
          t3tr0s_slides.slide08.t33815.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___33820, output_schema33804_33821, input_schema33805_33822, input_checker33806_33823, output_checker33807_33824) {
            return function(_33817) {
              var self__ = this;
              var _33817__$1 = this;
              return self__.meta33816;
            };
          }(validate__5821__auto__, ufv___33820, output_schema33804_33821, input_schema33805_33822, input_checker33806_33823, output_checker33807_33824);
          t3tr0s_slides.slide08.t33815.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___33820, output_schema33804_33821, input_schema33805_33822, input_checker33806_33823, output_checker33807_33824) {
            return function(_33817, meta33816__$1) {
              var self__ = this;
              var _33817__$1 = this;
              return new t3tr0s_slides.slide08.t33815(self__.G__33808, self__.input_schema33805, self__.owner, self__.output_checker33807, self__.output_schema33804, self__.validate__5821__auto__, self__.input_checker33806, self__.G__33809, self__.slide, self__.app, self__.ufv__, meta33816__$1);
            };
          }(validate__5821__auto__, ufv___33820, output_schema33804_33821, input_schema33805_33822, input_checker33806_33823, output_checker33807_33824);
          t3tr0s_slides.slide08.__GT_t33815 = function(validate__5821__auto__, ufv___33820, output_schema33804_33821, input_schema33805_33822, input_checker33806_33823, output_checker33807_33824) {
            return function __GT_t33815(G__33808__$1, input_schema33805__$1, owner__$1, output_checker33807__$1, output_schema33804__$1, validate__5821__auto____$1, input_checker33806__$1, G__33809__$1, slide__$1, app__$1, ufv____$1, meta33816) {
              return new t3tr0s_slides.slide08.t33815(G__33808__$1, input_schema33805__$1, owner__$1, output_checker33807__$1, output_schema33804__$1, validate__5821__auto____$1, input_checker33806__$1, G__33809__$1, slide__$1, app__$1, ufv____$1, meta33816);
            };
          }(validate__5821__auto__, ufv___33820, output_schema33804_33821, input_schema33805_33822, input_checker33806_33823, output_checker33807_33824);
        }
        return new t3tr0s_slides.slide08.t33815(G__33808, input_schema33805_33822, owner, output_checker33807_33824, output_schema33804_33821, validate__5821__auto__, input_checker33806_33823, G__33809, slide, app, ufv___33820, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___33828 = output_checker33807_33824.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___33828)) {
        var error__5823__auto___33829 = temp__4126__auto___33828;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___33829)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema33804_33821, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___33829], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___33820, output_schema33804_33821, input_schema33805_33822, input_checker33806_33823, output_checker33807_33824);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide08.slide), schema.core.make_fn_schema.call(null, output_schema33804_33821, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema33805_33822], null)));
t3tr0s_slides.slide08.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide08.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m33803) {
    return om.core.build.call(null, t3tr0s_slides.slide08.slide, cursor__9685__auto__, m33803);
  };
  __GT_slide = function(cursor__9685__auto__, m33803) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m33803);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide08.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide08.slide, t3tr0s_slides.slide08.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide08.resume = function resume() {
  return null;
};
t3tr0s_slides.slide08.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide12");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide12.dark_green = "#143";
t3tr0s_slides.slide12.light_green = "#175";
t3tr0s_slides.slide12.dark_purple = "#449";
t3tr0s_slides.slide12.light_purple = "#6ad";
t3tr0s_slides.slide12.dark_red = "#944";
t3tr0s_slides.slide12.light_red = "#f8c";
t3tr0s_slides.slide12.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide12.rotate_coord = function rotate_coord(p__33362) {
  var vec__33364 = p__33362;
  var x = cljs.core.nth.call(null, vec__33364, 0, null);
  var y = cljs.core.nth.call(null, vec__33364, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide12.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide12.rotate_coord, piece);
};
t3tr0s_slides.slide12.rows = 20;
t3tr0s_slides.slide12.cols = 10;
t3tr0s_slides.slide12.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide12.cols, 0));
t3tr0s_slides.slide12.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide12.rows, t3tr0s_slides.slide12.empty_row));
t3tr0s_slides.slide12.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 0, 0, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 0, 1, 1, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], null)], null);
t3tr0s_slides.slide12.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null);
t3tr0s_slides.slide12.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide12.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide12.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide12.initial_pos], null));
t3tr0s_slides.slide12.write_piece = function write_piece(board, coords, p__33365, value) {
  while (true) {
    var vec__33369 = p__33365;
    var cx = cljs.core.nth.call(null, vec__33369, 0, null);
    var cy = cljs.core.nth.call(null, vec__33369, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__33370 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__33370, 0, null);
      var y = cljs.core.nth.call(null, vec__33370, 1, null);
      var G__33372 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), value);
        } catch (e33371) {
          if (e33371 instanceof Error) {
            var _ = e33371;
            return board;
          } else {
            throw e33371;
          }
        }
      }();
      var G__33373 = cljs.core.rest.call(null, coords);
      var G__33374 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      var G__33375 = value;
      board = G__33372;
      coords = G__33373;
      p__33365 = G__33374;
      value = G__33375;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide12.create_drawable_board = function create_drawable_board(board, piece, p__33376) {
  var vec__33378 = p__33376;
  var x = cljs.core.nth.call(null, vec__33378, 0, null);
  var y = cljs.core.nth.call(null, vec__33378, 1, null);
  var gy = t3tr0s_slides.slide12.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  var board1 = t3tr0s_slides.slide12.write_piece.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, gy], null), "G");
  var board2 = t3tr0s_slides.slide12.write_piece.call(null, board1, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null), "P");
  return board2;
};
t3tr0s_slides.slide12.app_drawable_board_BANG_ = function app_drawable_board_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  return t3tr0s_slides.slide12.create_drawable_board.call(null, board, piece, pos);
};
t3tr0s_slides.slide12.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__33380 = cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state);
  var map__33380__$1 = cljs.core.seq_QMARK_.call(null, map__33380) ? cljs.core.apply.call(null, cljs.core.hash_map, map__33380) : map__33380;
  var position = cljs.core.get.call(null, map__33380__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__33380__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide12.write_piece, piece, position, 1);
};
t3tr0s_slides.slide12.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__33381) {
  var vec__33385 = p__33381;
  var cx = cljs.core.nth.call(null, vec__33385, 0, null);
  var cy = cljs.core.nth.call(null, vec__33385, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__33385, cx, cy) {
    return function(p__33386) {
      var vec__33387 = p__33386;
      var x = cljs.core.nth.call(null, vec__33387, 0, null);
      var y = cljs.core.nth.call(null, vec__33387, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__33385, cx, cy), piece);
};
t3tr0s_slides.slide12.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide12.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide12.app_state))));
};
t3tr0s_slides.slide12.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var vec__33389 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var x = cljs.core.nth.call(null, vec__33389, 0, null);
  var y = cljs.core.nth.call(null, vec__33389, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide12.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide12.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var new_piece = t3tr0s_slides.slide12.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide12.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide12.get_drop_pos = function get_drop_pos(board, piece, p__33390) {
  var vec__33392 = p__33390;
  var x = cljs.core.nth.call(null, vec__33392, 0, null);
  var y = cljs.core.nth.call(null, vec__33392, 1, null);
  var collide_QMARK_ = function(vec__33392, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide12.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__33392, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide12.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var vec__33394 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var x = cljs.core.nth.call(null, vec__33394, 0, null);
  var y = cljs.core.nth.call(null, vec__33394, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var ny = t3tr0s_slides.slide12.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  t3tr0s_slides.slide12.lock_piece_BANG_.call(null);
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide12.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide12.pieces)));
};
t3tr0s_slides.slide12.filled_rows = function filled_rows(board) {
  return cljs.core.apply.call(null, cljs.core.hash_set, cljs.core.map.call(null, cljs.core.first, cljs.core.filter.call(null, function(p__33397) {
    var vec__33398 = p__33397;
    var i = cljs.core.nth.call(null, vec__33398, 0, null);
    var row = cljs.core.nth.call(null, vec__33398, 1, null);
    return cljs.core.every_QMARK_.call(null, cljs.core.pos_QMARK_, row);
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board))));
};
t3tr0s_slides.slide12.collapse_rows = function collapse_rows(rows, board) {
  var cleared_board = cljs.core.map.call(null, cljs.core.second, cljs.core.remove.call(null, function(p1__33399_SHARP_) {
    return rows.call(null, cljs.core.first.call(null, p1__33399_SHARP_));
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board)));
  var n = cljs.core.count.call(null, rows);
  var new_board = cljs.core.into.call(null, cljs.core.vec.call(null, cljs.core.repeat.call(null, n, t3tr0s_slides.slide12.empty_row)), cleared_board);
  return new_board;
};
t3tr0s_slides.slide12.data_row = function data_row(board, row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__33404(s__33405) {
      return new cljs.core.LazySeq(null, function() {
        var s__33405__$1 = s__33405;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__33405__$1);
          if (temp__4126__auto__) {
            var s__33405__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__33405__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__33405__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__33407 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__33406 = 0;
                while (true) {
                  if (i__33406 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__33406);
                    cljs.core.chunk_append.call(null, b__33407, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null))));
                    var G__33408 = i__33406 + 1;
                    i__33406 = G__33408;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33407), iter__33404.call(null, cljs.core.chunk_rest.call(null, s__33405__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33407), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__33405__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null))), iter__33404.call(null, cljs.core.rest.call(null, s__33405__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide12.cols));
  }(), " ]"], null);
};
var ufv___33422 = schema.utils.use_fn_validation;
var output_schema33410_33423 = schema.core.Any;
var input_schema33411_33424 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker33412_33425 = schema.core.checker.call(null, input_schema33411_33424);
var output_checker33413_33426 = schema.core.checker.call(null, output_schema33410_33423);
t3tr0s_slides.slide12.code = function(ufv___33422, output_schema33410_33423, input_schema33411_33424, input_checker33412_33425, output_checker33413_33426) {
  return function code(G__33414, G__33415) {
    var validate__5821__auto__ = ufv___33422.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___33427 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__33414, G__33415], null);
      var temp__4126__auto___33428 = input_checker33412_33425.call(null, args__5822__auto___33427);
      if (cljs.core.truth_(temp__4126__auto___33428)) {
        var error__5823__auto___33429 = temp__4126__auto___33428;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___33429)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema33411_33424, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___33427, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___33429], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__33414;
      var owner = G__33415;
      while (true) {
        if (typeof t3tr0s_slides.slide12.t33419 !== "undefined") {
        } else {
          t3tr0s_slides.slide12.t33419 = function(G__33415, owner, input_schema33411, validate__5821__auto__, output_schema33410, output_checker33413, G__33414, app, ufv__, code, input_checker33412, meta33420) {
            this.G__33415 = G__33415;
            this.owner = owner;
            this.input_schema33411 = input_schema33411;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema33410 = output_schema33410;
            this.output_checker33413 = output_checker33413;
            this.G__33414 = G__33414;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.input_checker33412 = input_checker33412;
            this.meta33420 = meta33420;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide12.t33419.cljs$lang$type = true;
          t3tr0s_slides.slide12.t33419.cljs$lang$ctorStr = "t3tr0s-slides.slide12/t33419";
          t3tr0s_slides.slide12.t33419.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___33422, output_schema33410_33423, input_schema33411_33424, input_checker33412_33425, output_checker33413_33426) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide12/t33419");
            };
          }(validate__5821__auto__, ufv___33422, output_schema33410_33423, input_schema33411_33424, input_checker33412_33425, output_checker33413_33426);
          t3tr0s_slides.slide12.t33419.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide12.t33419.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___33422, output_schema33410_33423, input_schema33411_33424, input_checker33412_33425, output_checker33413_33426) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " filled-rows\n", "  [board]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "-\x3e\x3e")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "map-indexed")), " ", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "vector")), " board)\n", "       (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "filter")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "fn")), " [[i row]] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "every?")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
              "pos?")), " row)))\n", "       (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "map")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), ")\n", "       (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "apply")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "hash-set")), ")))\n", "\n\n", "\x3e (filled-rows (", 
              sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " @game-state))", "\n\n", "    ", sablono.interpreter.interpret.call(null, cljs.core.pr_str.call(null, t3tr0s_slides.slide12.filled_rows.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state))))), "\n")));
            };
          }(validate__5821__auto__, ufv___33422, output_schema33410_33423, input_schema33411_33424, input_checker33412_33425, output_checker33413_33426);
          t3tr0s_slides.slide12.t33419.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___33422, output_schema33410_33423, input_schema33411_33424, input_checker33412_33425, output_checker33413_33426) {
            return function(_33421) {
              var self__ = this;
              var _33421__$1 = this;
              return self__.meta33420;
            };
          }(validate__5821__auto__, ufv___33422, output_schema33410_33423, input_schema33411_33424, input_checker33412_33425, output_checker33413_33426);
          t3tr0s_slides.slide12.t33419.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___33422, output_schema33410_33423, input_schema33411_33424, input_checker33412_33425, output_checker33413_33426) {
            return function(_33421, meta33420__$1) {
              var self__ = this;
              var _33421__$1 = this;
              return new t3tr0s_slides.slide12.t33419(self__.G__33415, self__.owner, self__.input_schema33411, self__.validate__5821__auto__, self__.output_schema33410, self__.output_checker33413, self__.G__33414, self__.app, self__.ufv__, self__.code, self__.input_checker33412, meta33420__$1);
            };
          }(validate__5821__auto__, ufv___33422, output_schema33410_33423, input_schema33411_33424, input_checker33412_33425, output_checker33413_33426);
          t3tr0s_slides.slide12.__GT_t33419 = function(validate__5821__auto__, ufv___33422, output_schema33410_33423, input_schema33411_33424, input_checker33412_33425, output_checker33413_33426) {
            return function __GT_t33419(G__33415__$1, owner__$1, input_schema33411__$1, validate__5821__auto____$1, output_schema33410__$1, output_checker33413__$1, G__33414__$1, app__$1, ufv____$1, code__$1, input_checker33412__$1, meta33420) {
              return new t3tr0s_slides.slide12.t33419(G__33415__$1, owner__$1, input_schema33411__$1, validate__5821__auto____$1, output_schema33410__$1, output_checker33413__$1, G__33414__$1, app__$1, ufv____$1, code__$1, input_checker33412__$1, meta33420);
            };
          }(validate__5821__auto__, ufv___33422, output_schema33410_33423, input_schema33411_33424, input_checker33412_33425, output_checker33413_33426);
        }
        return new t3tr0s_slides.slide12.t33419(G__33415, owner, input_schema33411_33424, validate__5821__auto__, output_schema33410_33423, output_checker33413_33426, G__33414, app, ufv___33422, code, input_checker33412_33425, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___33430 = output_checker33413_33426.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___33430)) {
        var error__5823__auto___33431 = temp__4126__auto___33430;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___33431)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema33410_33423, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___33431], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___33422, output_schema33410_33423, input_schema33411_33424, input_checker33412_33425, output_checker33413_33426);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide12.code), schema.core.make_fn_schema.call(null, output_schema33410_33423, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema33411_33424], null)));
t3tr0s_slides.slide12.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide12.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m33409) {
    return om.core.build.call(null, t3tr0s_slides.slide12.code, cursor__9685__auto__, m33409);
  };
  __GT_code = function(cursor__9685__auto__, m33409) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m33409);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide12.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide12.rows);
t3tr0s_slides.slide12.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__33432, is_center) {
  var vec__33434 = p__33432;
  var x = cljs.core.nth.call(null, vec__33434, 0, null);
  var y = cljs.core.nth.call(null, vec__33434, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide12.cell_size * x;
  var ry = t3tr0s_slides.slide12.cell_size * y;
  var rs = t3tr0s_slides.slide12.cell_size;
  var cx = t3tr0s_slides.slide12.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide12.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide12.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide12.piece_abs_coords = function piece_abs_coords(piece, p__33435) {
  var vec__33439 = p__33435;
  var cx = cljs.core.nth.call(null, vec__33439, 0, null);
  var cy = cljs.core.nth.call(null, vec__33439, 1, null);
  return cljs.core.mapv.call(null, function(vec__33439, cx, cy) {
    return function(p__33440) {
      var vec__33441 = p__33440;
      var x = cljs.core.nth.call(null, vec__33441, 0, null);
      var y = cljs.core.nth.call(null, vec__33441, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__33439, cx, cy), piece);
};
t3tr0s_slides.slide12.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__33448 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide12.piece_abs_coords.call(null, piece, pos)));
  var chunk__33449 = null;
  var count__33450 = 0;
  var i__33451 = 0;
  while (true) {
    if (i__33451 < count__33450) {
      var vec__33452 = cljs.core._nth.call(null, chunk__33449, i__33451);
      var i = cljs.core.nth.call(null, vec__33452, 0, null);
      var c = cljs.core.nth.call(null, vec__33452, 1, null);
      t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__33454 = seq__33448;
      var G__33455 = chunk__33449;
      var G__33456 = count__33450;
      var G__33457 = i__33451 + 1;
      seq__33448 = G__33454;
      chunk__33449 = G__33455;
      count__33450 = G__33456;
      i__33451 = G__33457;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__33448);
      if (temp__4126__auto__) {
        var seq__33448__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__33448__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__33448__$1);
          var G__33458 = cljs.core.chunk_rest.call(null, seq__33448__$1);
          var G__33459 = c__4309__auto__;
          var G__33460 = cljs.core.count.call(null, c__4309__auto__);
          var G__33461 = 0;
          seq__33448 = G__33458;
          chunk__33449 = G__33459;
          count__33450 = G__33460;
          i__33451 = G__33461;
          continue;
        } else {
          var vec__33453 = cljs.core.first.call(null, seq__33448__$1);
          var i = cljs.core.nth.call(null, vec__33453, 0, null);
          var c = cljs.core.nth.call(null, vec__33453, 1, null);
          t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__33462 = cljs.core.next.call(null, seq__33448__$1);
          var G__33463 = null;
          var G__33464 = 0;
          var G__33465 = 0;
          seq__33448 = G__33462;
          chunk__33449 = G__33463;
          count__33450 = G__33464;
          i__33451 = G__33465;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide12.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var filled_QMARK_ = t3tr0s_slides.slide12.filled_rows.call(null, board);
  var seq__33478 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide12.rows));
  var chunk__33483 = null;
  var count__33484 = 0;
  var i__33485 = 0;
  while (true) {
    if (i__33485 < count__33484) {
      var y = cljs.core._nth.call(null, chunk__33483, i__33485);
      var seq__33486_33490 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide12.cols));
      var chunk__33487_33491 = null;
      var count__33488_33492 = 0;
      var i__33489_33493 = 0;
      while (true) {
        if (i__33489_33493 < count__33488_33492) {
          var x_33494 = cljs.core._nth.call(null, chunk__33487_33491, i__33489_33493);
          ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
          var v_33495 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_33494], null));
          if (v_33495 === 0) {
          } else {
            t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_33494, y], null), false);
          }
          var G__33496 = seq__33486_33490;
          var G__33497 = chunk__33487_33491;
          var G__33498 = count__33488_33492;
          var G__33499 = i__33489_33493 + 1;
          seq__33486_33490 = G__33496;
          chunk__33487_33491 = G__33497;
          count__33488_33492 = G__33498;
          i__33489_33493 = G__33499;
          continue;
        } else {
          var temp__4126__auto___33500 = cljs.core.seq.call(null, seq__33486_33490);
          if (temp__4126__auto___33500) {
            var seq__33486_33501__$1 = temp__4126__auto___33500;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__33486_33501__$1)) {
              var c__4309__auto___33502 = cljs.core.chunk_first.call(null, seq__33486_33501__$1);
              var G__33503 = cljs.core.chunk_rest.call(null, seq__33486_33501__$1);
              var G__33504 = c__4309__auto___33502;
              var G__33505 = cljs.core.count.call(null, c__4309__auto___33502);
              var G__33506 = 0;
              seq__33486_33490 = G__33503;
              chunk__33487_33491 = G__33504;
              count__33488_33492 = G__33505;
              i__33489_33493 = G__33506;
              continue;
            } else {
              var x_33507 = cljs.core.first.call(null, seq__33486_33501__$1);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
              var v_33508 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_33507], null));
              if (v_33508 === 0) {
              } else {
                t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_33507, y], null), false);
              }
              var G__33509 = cljs.core.next.call(null, seq__33486_33501__$1);
              var G__33510 = null;
              var G__33511 = 0;
              var G__33512 = 0;
              seq__33486_33490 = G__33509;
              chunk__33487_33491 = G__33510;
              count__33488_33492 = G__33511;
              i__33489_33493 = G__33512;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__33513 = seq__33478;
      var G__33514 = chunk__33483;
      var G__33515 = count__33484;
      var G__33516 = i__33485 + 1;
      seq__33478 = G__33513;
      chunk__33483 = G__33514;
      count__33484 = G__33515;
      i__33485 = G__33516;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__33478);
      if (temp__4126__auto__) {
        var seq__33478__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__33478__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__33478__$1);
          var G__33517 = cljs.core.chunk_rest.call(null, seq__33478__$1);
          var G__33518 = c__4309__auto__;
          var G__33519 = cljs.core.count.call(null, c__4309__auto__);
          var G__33520 = 0;
          seq__33478 = G__33517;
          chunk__33483 = G__33518;
          count__33484 = G__33519;
          i__33485 = G__33520;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__33478__$1);
          var seq__33479_33521 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide12.cols));
          var chunk__33480_33522 = null;
          var count__33481_33523 = 0;
          var i__33482_33524 = 0;
          while (true) {
            if (i__33482_33524 < count__33481_33523) {
              var x_33525 = cljs.core._nth.call(null, chunk__33480_33522, i__33482_33524);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
              var v_33526 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_33525], null));
              if (v_33526 === 0) {
              } else {
                t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_33525, y], null), false);
              }
              var G__33527 = seq__33479_33521;
              var G__33528 = chunk__33480_33522;
              var G__33529 = count__33481_33523;
              var G__33530 = i__33482_33524 + 1;
              seq__33479_33521 = G__33527;
              chunk__33480_33522 = G__33528;
              count__33481_33523 = G__33529;
              i__33482_33524 = G__33530;
              continue;
            } else {
              var temp__4126__auto___33531__$1 = cljs.core.seq.call(null, seq__33479_33521);
              if (temp__4126__auto___33531__$1) {
                var seq__33479_33532__$1 = temp__4126__auto___33531__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__33479_33532__$1)) {
                  var c__4309__auto___33533 = cljs.core.chunk_first.call(null, seq__33479_33532__$1);
                  var G__33534 = cljs.core.chunk_rest.call(null, seq__33479_33532__$1);
                  var G__33535 = c__4309__auto___33533;
                  var G__33536 = cljs.core.count.call(null, c__4309__auto___33533);
                  var G__33537 = 0;
                  seq__33479_33521 = G__33534;
                  chunk__33480_33522 = G__33535;
                  count__33481_33523 = G__33536;
                  i__33482_33524 = G__33537;
                  continue;
                } else {
                  var x_33538 = cljs.core.first.call(null, seq__33479_33532__$1);
                  ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
                  var v_33539 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_33538], null));
                  if (v_33539 === 0) {
                  } else {
                    t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_33538, y], null), false);
                  }
                  var G__33540 = cljs.core.next.call(null, seq__33479_33532__$1);
                  var G__33541 = null;
                  var G__33542 = 0;
                  var G__33543 = 0;
                  seq__33479_33521 = G__33540;
                  chunk__33480_33522 = G__33541;
                  count__33481_33523 = G__33542;
                  i__33482_33524 = G__33543;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__33544 = cljs.core.next.call(null, seq__33478__$1);
          var G__33545 = null;
          var G__33546 = 0;
          var G__33547 = 0;
          seq__33478 = G__33544;
          chunk__33483 = G__33545;
          count__33484 = G__33546;
          i__33485 = G__33547;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide12.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide12.cell_size * t3tr0s_slides.slide12.cols, t3tr0s_slides.slide12.cell_size * t3tr0s_slides.slide12.rows);
  ctx.fillStyle = t3tr0s_slides.slide12.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide12.light_green;
  t3tr0s_slides.slide12.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  ctx.globalAlpha = 1;
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var drop_y = t3tr0s_slides.slide12.get_drop_pos.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state)), piece, pos);
  var drop_pos = cljs.core.assoc.call(null, pos, 1, drop_y);
  var fits = t3tr0s_slides.slide12.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = "#333";
    ctx.strokeStyle = "#666";
    t3tr0s_slides.slide12.draw_piece_BANG_.call(null, ctx, piece, drop_pos);
    ctx.fillStyle = fits ? t3tr0s_slides.slide12.dark_purple : t3tr0s_slides.slide12.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide12.light_purple : t3tr0s_slides.slide12.light_red;
    return t3tr0s_slides.slide12.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide12.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide12.key_name = function key_name(p1__33548_SHARP_) {
  return t3tr0s_slides.slide12.key_names.call(null, p1__33548_SHARP_.keyCode);
};
t3tr0s_slides.slide12.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide12.key_name.call(null, e);
  var G__33550_33551 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__33550_33551) {
    case "space":
      t3tr0s_slides.slide12.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide12.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide12.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide12.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___33570 = schema.utils.use_fn_validation;
var output_schema33554_33571 = schema.core.Any;
var input_schema33555_33572 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker33556_33573 = schema.core.checker.call(null, input_schema33555_33572);
var output_checker33557_33574 = schema.core.checker.call(null, output_schema33554_33571);
t3tr0s_slides.slide12.canvas = function(ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574) {
  return function canvas(G__33558, G__33559) {
    var validate__5821__auto__ = ufv___33570.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___33575 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__33558, G__33559], null);
      var temp__4126__auto___33576 = input_checker33556_33573.call(null, args__5822__auto___33575);
      if (cljs.core.truth_(temp__4126__auto___33576)) {
        var error__5823__auto___33577 = temp__4126__auto___33576;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___33577)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema33555_33572, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___33575, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___33577], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__33558;
      var owner = G__33559;
      while (true) {
        if (typeof t3tr0s_slides.slide12.t33565 !== "undefined") {
        } else {
          t3tr0s_slides.slide12.t33565 = function(output_schema33554, owner, input_checker33556, validate__5821__auto__, G__33558, input_schema33555, output_checker33557, canvas, G__33559, app, ufv__, meta33566) {
            this.output_schema33554 = output_schema33554;
            this.owner = owner;
            this.input_checker33556 = input_checker33556;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__33558 = G__33558;
            this.input_schema33555 = input_schema33555;
            this.output_checker33557 = output_checker33557;
            this.canvas = canvas;
            this.G__33559 = G__33559;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta33566 = meta33566;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide12.t33565.cljs$lang$type = true;
          t3tr0s_slides.slide12.t33565.cljs$lang$ctorStr = "t3tr0s-slides.slide12/t33565";
          t3tr0s_slides.slide12.t33565.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide12/t33565");
            };
          }(validate__5821__auto__, ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574);
          t3tr0s_slides.slide12.t33565.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide12.t33565.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574);
          t3tr0s_slides.slide12.t33565.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide12.t33565.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide12.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574);
          t3tr0s_slides.slide12.t33565.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide12.t33565.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide12.cols * t3tr0s_slides.slide12.cell_size;
              canvas__$2.height = t3tr0s_slides.slide12.rows * t3tr0s_slides.slide12.cell_size;
              return t3tr0s_slides.slide12.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574);
          t3tr0s_slides.slide12.t33565.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574) {
            return function(_33567) {
              var self__ = this;
              var _33567__$1 = this;
              return self__.meta33566;
            };
          }(validate__5821__auto__, ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574);
          t3tr0s_slides.slide12.t33565.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574) {
            return function(_33567, meta33566__$1) {
              var self__ = this;
              var _33567__$1 = this;
              return new t3tr0s_slides.slide12.t33565(self__.output_schema33554, self__.owner, self__.input_checker33556, self__.validate__5821__auto__, self__.G__33558, self__.input_schema33555, self__.output_checker33557, self__.canvas, self__.G__33559, self__.app, self__.ufv__, meta33566__$1);
            };
          }(validate__5821__auto__, ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574);
          t3tr0s_slides.slide12.__GT_t33565 = function(validate__5821__auto__, ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574) {
            return function __GT_t33565(output_schema33554__$1, owner__$1, input_checker33556__$1, validate__5821__auto____$1, G__33558__$1, input_schema33555__$1, output_checker33557__$1, canvas__$1, G__33559__$1, app__$1, ufv____$1, meta33566) {
              return new t3tr0s_slides.slide12.t33565(output_schema33554__$1, owner__$1, input_checker33556__$1, validate__5821__auto____$1, G__33558__$1, input_schema33555__$1, output_checker33557__$1, canvas__$1, G__33559__$1, app__$1, ufv____$1, meta33566);
            };
          }(validate__5821__auto__, ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574);
        }
        return new t3tr0s_slides.slide12.t33565(output_schema33554_33571, owner, input_checker33556_33573, validate__5821__auto__, G__33558, input_schema33555_33572, output_checker33557_33574, canvas, G__33559, app, ufv___33570, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___33578 = output_checker33557_33574.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___33578)) {
        var error__5823__auto___33579 = temp__4126__auto___33578;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___33579)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema33554_33571, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___33579], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___33570, output_schema33554_33571, input_schema33555_33572, input_checker33556_33573, output_checker33557_33574);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide12.canvas), schema.core.make_fn_schema.call(null, output_schema33554_33571, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema33555_33572], null)));
t3tr0s_slides.slide12.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide12.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m33553) {
    return om.core.build.call(null, t3tr0s_slides.slide12.canvas, cursor__9685__auto__, m33553);
  };
  __GT_canvas = function(cursor__9685__auto__, m33553) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m33553);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___33597 = schema.utils.use_fn_validation;
var output_schema33581_33598 = schema.core.Any;
var input_schema33582_33599 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker33583_33600 = schema.core.checker.call(null, input_schema33582_33599);
var output_checker33584_33601 = schema.core.checker.call(null, output_schema33581_33598);
t3tr0s_slides.slide12.slide = function(ufv___33597, output_schema33581_33598, input_schema33582_33599, input_checker33583_33600, output_checker33584_33601) {
  return function slide(G__33585, G__33586) {
    var validate__5821__auto__ = ufv___33597.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___33602 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__33585, G__33586], null);
      var temp__4126__auto___33603 = input_checker33583_33600.call(null, args__5822__auto___33602);
      if (cljs.core.truth_(temp__4126__auto___33603)) {
        var error__5823__auto___33604 = temp__4126__auto___33603;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___33604)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema33582_33599, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___33602, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___33604], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__33585;
      var owner = G__33586;
      while (true) {
        if (typeof t3tr0s_slides.slide12.t33592 !== "undefined") {
        } else {
          t3tr0s_slides.slide12.t33592 = function(G__33585, G__33586, owner, validate__5821__auto__, input_schema33582, output_checker33584, slide, app, ufv__, input_checker33583, output_schema33581, meta33593) {
            this.G__33585 = G__33585;
            this.G__33586 = G__33586;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema33582 = input_schema33582;
            this.output_checker33584 = output_checker33584;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_checker33583 = input_checker33583;
            this.output_schema33581 = output_schema33581;
            this.meta33593 = meta33593;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide12.t33592.cljs$lang$type = true;
          t3tr0s_slides.slide12.t33592.cljs$lang$ctorStr = "t3tr0s-slides.slide12/t33592";
          t3tr0s_slides.slide12.t33592.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___33597, output_schema33581_33598, input_schema33582_33599, input_checker33583_33600, output_checker33584_33601) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide12/t33592");
            };
          }(validate__5821__auto__, ufv___33597, output_schema33581_33598, input_schema33582_33599, input_checker33583_33600, output_checker33584_33601);
          t3tr0s_slides.slide12.t33592.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide12.t33592.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___33597, output_schema33581_33598, input_schema33582_33599, input_checker33583_33600, output_checker33584_33601) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "12. Detect filled rows."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide12.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide12.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___33597, output_schema33581_33598, input_schema33582_33599, input_checker33583_33600, output_checker33584_33601);
          t3tr0s_slides.slide12.t33592.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___33597, output_schema33581_33598, input_schema33582_33599, input_checker33583_33600, output_checker33584_33601) {
            return function(_33594) {
              var self__ = this;
              var _33594__$1 = this;
              return self__.meta33593;
            };
          }(validate__5821__auto__, ufv___33597, output_schema33581_33598, input_schema33582_33599, input_checker33583_33600, output_checker33584_33601);
          t3tr0s_slides.slide12.t33592.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___33597, output_schema33581_33598, input_schema33582_33599, input_checker33583_33600, output_checker33584_33601) {
            return function(_33594, meta33593__$1) {
              var self__ = this;
              var _33594__$1 = this;
              return new t3tr0s_slides.slide12.t33592(self__.G__33585, self__.G__33586, self__.owner, self__.validate__5821__auto__, self__.input_schema33582, self__.output_checker33584, self__.slide, self__.app, self__.ufv__, self__.input_checker33583, self__.output_schema33581, meta33593__$1);
            };
          }(validate__5821__auto__, ufv___33597, output_schema33581_33598, input_schema33582_33599, input_checker33583_33600, output_checker33584_33601);
          t3tr0s_slides.slide12.__GT_t33592 = function(validate__5821__auto__, ufv___33597, output_schema33581_33598, input_schema33582_33599, input_checker33583_33600, output_checker33584_33601) {
            return function __GT_t33592(G__33585__$1, G__33586__$1, owner__$1, validate__5821__auto____$1, input_schema33582__$1, output_checker33584__$1, slide__$1, app__$1, ufv____$1, input_checker33583__$1, output_schema33581__$1, meta33593) {
              return new t3tr0s_slides.slide12.t33592(G__33585__$1, G__33586__$1, owner__$1, validate__5821__auto____$1, input_schema33582__$1, output_checker33584__$1, slide__$1, app__$1, ufv____$1, input_checker33583__$1, output_schema33581__$1, meta33593);
            };
          }(validate__5821__auto__, ufv___33597, output_schema33581_33598, input_schema33582_33599, input_checker33583_33600, output_checker33584_33601);
        }
        return new t3tr0s_slides.slide12.t33592(G__33585, G__33586, owner, validate__5821__auto__, input_schema33582_33599, output_checker33584_33601, slide, app, ufv___33597, input_checker33583_33600, output_schema33581_33598, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___33605 = output_checker33584_33601.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___33605)) {
        var error__5823__auto___33606 = temp__4126__auto___33605;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___33606)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema33581_33598, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___33606], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___33597, output_schema33581_33598, input_schema33582_33599, input_checker33583_33600, output_checker33584_33601);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide12.slide), schema.core.make_fn_schema.call(null, output_schema33581_33598, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema33582_33599], null)));
t3tr0s_slides.slide12.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide12.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m33580) {
    return om.core.build.call(null, t3tr0s_slides.slide12.slide, cursor__9685__auto__, m33580);
  };
  __GT_slide = function(cursor__9685__auto__, m33580) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m33580);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide12.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide12.slide, t3tr0s_slides.slide12.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide12.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide12.key_down);
};
t3tr0s_slides.slide12.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide12.key_down);
};
goog.provide("t3tr0s_slides.slide09");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide09.dark_green = "#143";
t3tr0s_slides.slide09.light_green = "#175";
t3tr0s_slides.slide09.dark_purple = "#449";
t3tr0s_slides.slide09.light_purple = "#6ad";
t3tr0s_slides.slide09.dark_red = "#944";
t3tr0s_slides.slide09.light_red = "#f8c";
t3tr0s_slides.slide09.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide09.rotate_coord = function rotate_coord(p__29315) {
  var vec__29317 = p__29315;
  var x = cljs.core.nth.call(null, vec__29317, 0, null);
  var y = cljs.core.nth.call(null, vec__29317, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide09.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide09.rotate_coord, piece);
};
t3tr0s_slides.slide09.rows = 20;
t3tr0s_slides.slide09.cols = 10;
t3tr0s_slides.slide09.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide09.cols, 0));
t3tr0s_slides.slide09.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide09.rows, t3tr0s_slides.slide09.empty_row));
t3tr0s_slides.slide09.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide09.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null);
t3tr0s_slides.slide09.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide09.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide09.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide09.initial_pos], null));
t3tr0s_slides.slide09.write_piece = function write_piece(board, coords, p__29318) {
  while (true) {
    var vec__29322 = p__29318;
    var cx = cljs.core.nth.call(null, vec__29322, 0, null);
    var cy = cljs.core.nth.call(null, vec__29322, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__29323 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__29323, 0, null);
      var y = cljs.core.nth.call(null, vec__29323, 1, null);
      var G__29325 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e29324) {
          if (e29324 instanceof Error) {
            var _ = e29324;
            return board;
          } else {
            throw e29324;
          }
        }
      }();
      var G__29326 = cljs.core.rest.call(null, coords);
      var G__29327 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__29325;
      coords = G__29326;
      p__29318 = G__29327;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide09.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__29329 = cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state);
  var map__29329__$1 = cljs.core.seq_QMARK_.call(null, map__29329) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29329) : map__29329;
  var position = cljs.core.get.call(null, map__29329__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__29329__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide09.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide09.write_piece, piece, position);
};
t3tr0s_slides.slide09.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__29330) {
  var vec__29334 = p__29330;
  var cx = cljs.core.nth.call(null, vec__29334, 0, null);
  var cy = cljs.core.nth.call(null, vec__29334, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__29334, cx, cy) {
    return function(p__29335) {
      var vec__29336 = p__29335;
      var x = cljs.core.nth.call(null, vec__29336, 0, null);
      var y = cljs.core.nth.call(null, vec__29336, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__29334, cx, cy), piece);
};
t3tr0s_slides.slide09.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide09.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide09.app_state))));
};
t3tr0s_slides.slide09.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var vec__29338 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var x = cljs.core.nth.call(null, vec__29338, 0, null);
  var y = cljs.core.nth.call(null, vec__29338, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide09.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide09.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide09.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var new_piece = t3tr0s_slides.slide09.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide09.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide09.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide09.get_drop_pos = function get_drop_pos(board, piece, p__29339) {
  var vec__29341 = p__29339;
  var x = cljs.core.nth.call(null, vec__29341, 0, null);
  var y = cljs.core.nth.call(null, vec__29341, 1, null);
  var collide_QMARK_ = function(vec__29341, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide09.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__29341, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide09.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var vec__29343 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var x = cljs.core.nth.call(null, vec__29343, 0, null);
  var y = cljs.core.nth.call(null, vec__29343, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var ny = t3tr0s_slides.slide09.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide09.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  return t3tr0s_slides.slide09.lock_piece_BANG_.call(null);
};
var ufv___29357 = schema.utils.use_fn_validation;
var output_schema29345_29358 = schema.core.Any;
var input_schema29346_29359 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29347_29360 = schema.core.checker.call(null, input_schema29346_29359);
var output_checker29348_29361 = schema.core.checker.call(null, output_schema29345_29358);
t3tr0s_slides.slide09.code = function(ufv___29357, output_schema29345_29358, input_schema29346_29359, input_checker29347_29360, output_checker29348_29361) {
  return function code(G__29349, G__29350) {
    var validate__5821__auto__ = ufv___29357.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29362 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29349, G__29350], null);
      var temp__4126__auto___29363 = input_checker29347_29360.call(null, args__5822__auto___29362);
      if (cljs.core.truth_(temp__4126__auto___29363)) {
        var error__5823__auto___29364 = temp__4126__auto___29363;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___29364)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29346_29359, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29362, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29364], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29349;
      var owner = G__29350;
      while (true) {
        if (typeof t3tr0s_slides.slide09.t29354 !== "undefined") {
        } else {
          t3tr0s_slides.slide09.t29354 = function(G__29349, owner, input_checker29347, validate__5821__auto__, input_schema29346, output_checker29348, G__29350, app, ufv__, output_schema29345, code, meta29355) {
            this.G__29349 = G__29349;
            this.owner = owner;
            this.input_checker29347 = input_checker29347;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema29346 = input_schema29346;
            this.output_checker29348 = output_checker29348;
            this.G__29350 = G__29350;
            this.app = app;
            this.ufv__ = ufv__;
            this.output_schema29345 = output_schema29345;
            this.code = code;
            this.meta29355 = meta29355;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide09.t29354.cljs$lang$type = true;
          t3tr0s_slides.slide09.t29354.cljs$lang$ctorStr = "t3tr0s-slides.slide09/t29354";
          t3tr0s_slides.slide09.t29354.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29357, output_schema29345_29358, input_schema29346_29359, input_checker29347_29360, output_checker29348_29361) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide09/t29354");
            };
          }(validate__5821__auto__, ufv___29357, output_schema29345_29358, input_schema29346_29359, input_checker29347_29360, output_checker29348_29361);
          t3tr0s_slides.slide09.t29354.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide09.t29354.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29357, output_schema29345_29358, input_schema29346_29359, input_checker29347_29360, output_checker29348_29361) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " try-shift! [dx]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @game-state)\n", "        [x y] (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " @game-state)\n", "        board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " @game-state)\n", "        new-pos [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x dx) y]]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "when")), " (piece-fits? board piece new-pos)\n", 
              "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state assoc ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " new-pos))))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " try-rotate! []\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), 
              " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @game-state)\n", "        pos (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " @game-state)\n", "        board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " @game-state)\n", "        new-piece (rotate-piece piece)]\n", "    (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "when")), " (piece-fits? board new-piece pos)\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state assoc ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " new-piece))))\n", "\n\n")));
            };
          }(validate__5821__auto__, ufv___29357, output_schema29345_29358, input_schema29346_29359, input_checker29347_29360, output_checker29348_29361);
          t3tr0s_slides.slide09.t29354.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29357, output_schema29345_29358, input_schema29346_29359, input_checker29347_29360, output_checker29348_29361) {
            return function(_29356) {
              var self__ = this;
              var _29356__$1 = this;
              return self__.meta29355;
            };
          }(validate__5821__auto__, ufv___29357, output_schema29345_29358, input_schema29346_29359, input_checker29347_29360, output_checker29348_29361);
          t3tr0s_slides.slide09.t29354.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29357, output_schema29345_29358, input_schema29346_29359, input_checker29347_29360, output_checker29348_29361) {
            return function(_29356, meta29355__$1) {
              var self__ = this;
              var _29356__$1 = this;
              return new t3tr0s_slides.slide09.t29354(self__.G__29349, self__.owner, self__.input_checker29347, self__.validate__5821__auto__, self__.input_schema29346, self__.output_checker29348, self__.G__29350, self__.app, self__.ufv__, self__.output_schema29345, self__.code, meta29355__$1);
            };
          }(validate__5821__auto__, ufv___29357, output_schema29345_29358, input_schema29346_29359, input_checker29347_29360, output_checker29348_29361);
          t3tr0s_slides.slide09.__GT_t29354 = function(validate__5821__auto__, ufv___29357, output_schema29345_29358, input_schema29346_29359, input_checker29347_29360, output_checker29348_29361) {
            return function __GT_t29354(G__29349__$1, owner__$1, input_checker29347__$1, validate__5821__auto____$1, input_schema29346__$1, output_checker29348__$1, G__29350__$1, app__$1, ufv____$1, output_schema29345__$1, code__$1, meta29355) {
              return new t3tr0s_slides.slide09.t29354(G__29349__$1, owner__$1, input_checker29347__$1, validate__5821__auto____$1, input_schema29346__$1, output_checker29348__$1, G__29350__$1, app__$1, ufv____$1, output_schema29345__$1, code__$1, meta29355);
            };
          }(validate__5821__auto__, ufv___29357, output_schema29345_29358, input_schema29346_29359, input_checker29347_29360, output_checker29348_29361);
        }
        return new t3tr0s_slides.slide09.t29354(G__29349, owner, input_checker29347_29360, validate__5821__auto__, input_schema29346_29359, output_checker29348_29361, G__29350, app, ufv___29357, output_schema29345_29358, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29365 = output_checker29348_29361.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29365)) {
        var error__5823__auto___29366 = temp__4126__auto___29365;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___29366)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29345_29358, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29366], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29357, output_schema29345_29358, input_schema29346_29359, input_checker29347_29360, output_checker29348_29361);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide09.code), schema.core.make_fn_schema.call(null, output_schema29345_29358, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29346_29359], null)));
t3tr0s_slides.slide09.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide09.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m29344) {
    return om.core.build.call(null, t3tr0s_slides.slide09.code, cursor__9685__auto__, m29344);
  };
  __GT_code = function(cursor__9685__auto__, m29344) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m29344);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide09.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide09.rows);
t3tr0s_slides.slide09.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__29367, is_center) {
  var vec__29369 = p__29367;
  var x = cljs.core.nth.call(null, vec__29369, 0, null);
  var y = cljs.core.nth.call(null, vec__29369, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide09.cell_size * x;
  var ry = t3tr0s_slides.slide09.cell_size * y;
  var rs = t3tr0s_slides.slide09.cell_size;
  var cx = t3tr0s_slides.slide09.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide09.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide09.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide09.piece_abs_coords = function piece_abs_coords(piece, p__29370) {
  var vec__29374 = p__29370;
  var cx = cljs.core.nth.call(null, vec__29374, 0, null);
  var cy = cljs.core.nth.call(null, vec__29374, 1, null);
  return cljs.core.mapv.call(null, function(vec__29374, cx, cy) {
    return function(p__29375) {
      var vec__29376 = p__29375;
      var x = cljs.core.nth.call(null, vec__29376, 0, null);
      var y = cljs.core.nth.call(null, vec__29376, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__29374, cx, cy), piece);
};
t3tr0s_slides.slide09.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__29383 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide09.piece_abs_coords.call(null, piece, pos)));
  var chunk__29384 = null;
  var count__29385 = 0;
  var i__29386 = 0;
  while (true) {
    if (i__29386 < count__29385) {
      var vec__29387 = cljs.core._nth.call(null, chunk__29384, i__29386);
      var i = cljs.core.nth.call(null, vec__29387, 0, null);
      var c = cljs.core.nth.call(null, vec__29387, 1, null);
      t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__29389 = seq__29383;
      var G__29390 = chunk__29384;
      var G__29391 = count__29385;
      var G__29392 = i__29386 + 1;
      seq__29383 = G__29389;
      chunk__29384 = G__29390;
      count__29385 = G__29391;
      i__29386 = G__29392;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__29383);
      if (temp__4126__auto__) {
        var seq__29383__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__29383__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__29383__$1);
          var G__29393 = cljs.core.chunk_rest.call(null, seq__29383__$1);
          var G__29394 = c__4309__auto__;
          var G__29395 = cljs.core.count.call(null, c__4309__auto__);
          var G__29396 = 0;
          seq__29383 = G__29393;
          chunk__29384 = G__29394;
          count__29385 = G__29395;
          i__29386 = G__29396;
          continue;
        } else {
          var vec__29388 = cljs.core.first.call(null, seq__29383__$1);
          var i = cljs.core.nth.call(null, vec__29388, 0, null);
          var c = cljs.core.nth.call(null, vec__29388, 1, null);
          t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__29397 = cljs.core.next.call(null, seq__29383__$1);
          var G__29398 = null;
          var G__29399 = 0;
          var G__29400 = 0;
          seq__29383 = G__29397;
          chunk__29384 = G__29398;
          count__29385 = G__29399;
          i__29386 = G__29400;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide09.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__29413 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide09.rows));
  var chunk__29418 = null;
  var count__29419 = 0;
  var i__29420 = 0;
  while (true) {
    if (i__29420 < count__29419) {
      var y = cljs.core._nth.call(null, chunk__29418, i__29420);
      var seq__29421_29425 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide09.cols));
      var chunk__29422_29426 = null;
      var count__29423_29427 = 0;
      var i__29424_29428 = 0;
      while (true) {
        if (i__29424_29428 < count__29423_29427) {
          var x_29429 = cljs.core._nth.call(null, chunk__29422_29426, i__29424_29428);
          var v_29430 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_29429], null));
          if (v_29430 === 0) {
          } else {
            t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_29429, y], null), false);
          }
          var G__29431 = seq__29421_29425;
          var G__29432 = chunk__29422_29426;
          var G__29433 = count__29423_29427;
          var G__29434 = i__29424_29428 + 1;
          seq__29421_29425 = G__29431;
          chunk__29422_29426 = G__29432;
          count__29423_29427 = G__29433;
          i__29424_29428 = G__29434;
          continue;
        } else {
          var temp__4126__auto___29435 = cljs.core.seq.call(null, seq__29421_29425);
          if (temp__4126__auto___29435) {
            var seq__29421_29436__$1 = temp__4126__auto___29435;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__29421_29436__$1)) {
              var c__4309__auto___29437 = cljs.core.chunk_first.call(null, seq__29421_29436__$1);
              var G__29438 = cljs.core.chunk_rest.call(null, seq__29421_29436__$1);
              var G__29439 = c__4309__auto___29437;
              var G__29440 = cljs.core.count.call(null, c__4309__auto___29437);
              var G__29441 = 0;
              seq__29421_29425 = G__29438;
              chunk__29422_29426 = G__29439;
              count__29423_29427 = G__29440;
              i__29424_29428 = G__29441;
              continue;
            } else {
              var x_29442 = cljs.core.first.call(null, seq__29421_29436__$1);
              var v_29443 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_29442], null));
              if (v_29443 === 0) {
              } else {
                t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_29442, y], null), false);
              }
              var G__29444 = cljs.core.next.call(null, seq__29421_29436__$1);
              var G__29445 = null;
              var G__29446 = 0;
              var G__29447 = 0;
              seq__29421_29425 = G__29444;
              chunk__29422_29426 = G__29445;
              count__29423_29427 = G__29446;
              i__29424_29428 = G__29447;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__29448 = seq__29413;
      var G__29449 = chunk__29418;
      var G__29450 = count__29419;
      var G__29451 = i__29420 + 1;
      seq__29413 = G__29448;
      chunk__29418 = G__29449;
      count__29419 = G__29450;
      i__29420 = G__29451;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__29413);
      if (temp__4126__auto__) {
        var seq__29413__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__29413__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__29413__$1);
          var G__29452 = cljs.core.chunk_rest.call(null, seq__29413__$1);
          var G__29453 = c__4309__auto__;
          var G__29454 = cljs.core.count.call(null, c__4309__auto__);
          var G__29455 = 0;
          seq__29413 = G__29452;
          chunk__29418 = G__29453;
          count__29419 = G__29454;
          i__29420 = G__29455;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__29413__$1);
          var seq__29414_29456 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide09.cols));
          var chunk__29415_29457 = null;
          var count__29416_29458 = 0;
          var i__29417_29459 = 0;
          while (true) {
            if (i__29417_29459 < count__29416_29458) {
              var x_29460 = cljs.core._nth.call(null, chunk__29415_29457, i__29417_29459);
              var v_29461 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_29460], null));
              if (v_29461 === 0) {
              } else {
                t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_29460, y], null), false);
              }
              var G__29462 = seq__29414_29456;
              var G__29463 = chunk__29415_29457;
              var G__29464 = count__29416_29458;
              var G__29465 = i__29417_29459 + 1;
              seq__29414_29456 = G__29462;
              chunk__29415_29457 = G__29463;
              count__29416_29458 = G__29464;
              i__29417_29459 = G__29465;
              continue;
            } else {
              var temp__4126__auto___29466__$1 = cljs.core.seq.call(null, seq__29414_29456);
              if (temp__4126__auto___29466__$1) {
                var seq__29414_29467__$1 = temp__4126__auto___29466__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__29414_29467__$1)) {
                  var c__4309__auto___29468 = cljs.core.chunk_first.call(null, seq__29414_29467__$1);
                  var G__29469 = cljs.core.chunk_rest.call(null, seq__29414_29467__$1);
                  var G__29470 = c__4309__auto___29468;
                  var G__29471 = cljs.core.count.call(null, c__4309__auto___29468);
                  var G__29472 = 0;
                  seq__29414_29456 = G__29469;
                  chunk__29415_29457 = G__29470;
                  count__29416_29458 = G__29471;
                  i__29417_29459 = G__29472;
                  continue;
                } else {
                  var x_29473 = cljs.core.first.call(null, seq__29414_29467__$1);
                  var v_29474 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_29473], null));
                  if (v_29474 === 0) {
                  } else {
                    t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_29473, y], null), false);
                  }
                  var G__29475 = cljs.core.next.call(null, seq__29414_29467__$1);
                  var G__29476 = null;
                  var G__29477 = 0;
                  var G__29478 = 0;
                  seq__29414_29456 = G__29475;
                  chunk__29415_29457 = G__29476;
                  count__29416_29458 = G__29477;
                  i__29417_29459 = G__29478;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__29479 = cljs.core.next.call(null, seq__29413__$1);
          var G__29480 = null;
          var G__29481 = 0;
          var G__29482 = 0;
          seq__29413 = G__29479;
          chunk__29418 = G__29480;
          count__29419 = G__29481;
          i__29420 = G__29482;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide09.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide09.cell_size * t3tr0s_slides.slide09.cols, t3tr0s_slides.slide09.cell_size * t3tr0s_slides.slide09.rows);
  ctx.fillStyle = t3tr0s_slides.slide09.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide09.light_green;
  t3tr0s_slides.slide09.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var fits = t3tr0s_slides.slide09.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = fits ? t3tr0s_slides.slide09.dark_purple : t3tr0s_slides.slide09.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide09.light_purple : t3tr0s_slides.slide09.light_red;
    return t3tr0s_slides.slide09.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide09.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide09.key_name = function key_name(p1__29483_SHARP_) {
  return t3tr0s_slides.slide09.key_names.call(null, p1__29483_SHARP_.keyCode);
};
t3tr0s_slides.slide09.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide09.key_name.call(null, e);
  var G__29485_29486 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__29485_29486) {
    case "up":
      t3tr0s_slides.slide09.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide09.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide09.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___29505 = schema.utils.use_fn_validation;
var output_schema29489_29506 = schema.core.Any;
var input_schema29490_29507 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29491_29508 = schema.core.checker.call(null, input_schema29490_29507);
var output_checker29492_29509 = schema.core.checker.call(null, output_schema29489_29506);
t3tr0s_slides.slide09.canvas = function(ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509) {
  return function canvas(G__29493, G__29494) {
    var validate__5821__auto__ = ufv___29505.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29510 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29493, G__29494], null);
      var temp__4126__auto___29511 = input_checker29491_29508.call(null, args__5822__auto___29510);
      if (cljs.core.truth_(temp__4126__auto___29511)) {
        var error__5823__auto___29512 = temp__4126__auto___29511;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___29512)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29490_29507, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29510, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29512], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29493;
      var owner = G__29494;
      while (true) {
        if (typeof t3tr0s_slides.slide09.t29500 !== "undefined") {
        } else {
          t3tr0s_slides.slide09.t29500 = function(G__29493, output_schema29489, owner, validate__5821__auto__, input_checker29491, canvas, G__29494, input_schema29490, output_checker29492, app, ufv__, meta29501) {
            this.G__29493 = G__29493;
            this.output_schema29489 = output_schema29489;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker29491 = input_checker29491;
            this.canvas = canvas;
            this.G__29494 = G__29494;
            this.input_schema29490 = input_schema29490;
            this.output_checker29492 = output_checker29492;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta29501 = meta29501;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide09.t29500.cljs$lang$type = true;
          t3tr0s_slides.slide09.t29500.cljs$lang$ctorStr = "t3tr0s-slides.slide09/t29500";
          t3tr0s_slides.slide09.t29500.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide09/t29500");
            };
          }(validate__5821__auto__, ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509);
          t3tr0s_slides.slide09.t29500.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide09.t29500.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509);
          t3tr0s_slides.slide09.t29500.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide09.t29500.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide09.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509);
          t3tr0s_slides.slide09.t29500.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide09.t29500.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide09.cols * t3tr0s_slides.slide09.cell_size;
              canvas__$2.height = t3tr0s_slides.slide09.rows * t3tr0s_slides.slide09.cell_size;
              return t3tr0s_slides.slide09.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509);
          t3tr0s_slides.slide09.t29500.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509) {
            return function(_29502) {
              var self__ = this;
              var _29502__$1 = this;
              return self__.meta29501;
            };
          }(validate__5821__auto__, ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509);
          t3tr0s_slides.slide09.t29500.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509) {
            return function(_29502, meta29501__$1) {
              var self__ = this;
              var _29502__$1 = this;
              return new t3tr0s_slides.slide09.t29500(self__.G__29493, self__.output_schema29489, self__.owner, self__.validate__5821__auto__, self__.input_checker29491, self__.canvas, self__.G__29494, self__.input_schema29490, self__.output_checker29492, self__.app, self__.ufv__, meta29501__$1);
            };
          }(validate__5821__auto__, ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509);
          t3tr0s_slides.slide09.__GT_t29500 = function(validate__5821__auto__, ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509) {
            return function __GT_t29500(G__29493__$1, output_schema29489__$1, owner__$1, validate__5821__auto____$1, input_checker29491__$1, canvas__$1, G__29494__$1, input_schema29490__$1, output_checker29492__$1, app__$1, ufv____$1, meta29501) {
              return new t3tr0s_slides.slide09.t29500(G__29493__$1, output_schema29489__$1, owner__$1, validate__5821__auto____$1, input_checker29491__$1, canvas__$1, G__29494__$1, input_schema29490__$1, output_checker29492__$1, app__$1, ufv____$1, meta29501);
            };
          }(validate__5821__auto__, ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509);
        }
        return new t3tr0s_slides.slide09.t29500(G__29493, output_schema29489_29506, owner, validate__5821__auto__, input_checker29491_29508, canvas, G__29494, input_schema29490_29507, output_checker29492_29509, app, ufv___29505, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29513 = output_checker29492_29509.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29513)) {
        var error__5823__auto___29514 = temp__4126__auto___29513;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___29514)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29489_29506, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29514], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29505, output_schema29489_29506, input_schema29490_29507, input_checker29491_29508, output_checker29492_29509);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide09.canvas), schema.core.make_fn_schema.call(null, output_schema29489_29506, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29490_29507], null)));
t3tr0s_slides.slide09.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide09.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m29488) {
    return om.core.build.call(null, t3tr0s_slides.slide09.canvas, cursor__9685__auto__, m29488);
  };
  __GT_canvas = function(cursor__9685__auto__, m29488) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m29488);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___29532 = schema.utils.use_fn_validation;
var output_schema29516_29533 = schema.core.Any;
var input_schema29517_29534 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29518_29535 = schema.core.checker.call(null, input_schema29517_29534);
var output_checker29519_29536 = schema.core.checker.call(null, output_schema29516_29533);
t3tr0s_slides.slide09.slide = function(ufv___29532, output_schema29516_29533, input_schema29517_29534, input_checker29518_29535, output_checker29519_29536) {
  return function slide(G__29520, G__29521) {
    var validate__5821__auto__ = ufv___29532.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29537 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29520, G__29521], null);
      var temp__4126__auto___29538 = input_checker29518_29535.call(null, args__5822__auto___29537);
      if (cljs.core.truth_(temp__4126__auto___29538)) {
        var error__5823__auto___29539 = temp__4126__auto___29538;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___29539)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29517_29534, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29537, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29539], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29520;
      var owner = G__29521;
      while (true) {
        if (typeof t3tr0s_slides.slide09.t29527 !== "undefined") {
        } else {
          t3tr0s_slides.slide09.t29527 = function(G__29520, input_schema29517, owner, output_checker29519, validate__5821__auto__, G__29521, input_checker29518, output_schema29516, slide, app, ufv__, meta29528) {
            this.G__29520 = G__29520;
            this.input_schema29517 = input_schema29517;
            this.owner = owner;
            this.output_checker29519 = output_checker29519;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__29521 = G__29521;
            this.input_checker29518 = input_checker29518;
            this.output_schema29516 = output_schema29516;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta29528 = meta29528;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide09.t29527.cljs$lang$type = true;
          t3tr0s_slides.slide09.t29527.cljs$lang$ctorStr = "t3tr0s-slides.slide09/t29527";
          t3tr0s_slides.slide09.t29527.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29532, output_schema29516_29533, input_schema29517_29534, input_checker29518_29535, output_checker29519_29536) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide09/t29527");
            };
          }(validate__5821__auto__, ufv___29532, output_schema29516_29533, input_schema29517_29534, input_checker29518_29535, output_checker29519_29536);
          t3tr0s_slides.slide09.t29527.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide09.t29527.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29532, output_schema29516_29533, input_schema29517_29534, input_checker29518_29535, output_checker29519_29536) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "9. Constrain controls."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide09.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide09.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___29532, output_schema29516_29533, input_schema29517_29534, input_checker29518_29535, output_checker29519_29536);
          t3tr0s_slides.slide09.t29527.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29532, output_schema29516_29533, input_schema29517_29534, input_checker29518_29535, output_checker29519_29536) {
            return function(_29529) {
              var self__ = this;
              var _29529__$1 = this;
              return self__.meta29528;
            };
          }(validate__5821__auto__, ufv___29532, output_schema29516_29533, input_schema29517_29534, input_checker29518_29535, output_checker29519_29536);
          t3tr0s_slides.slide09.t29527.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29532, output_schema29516_29533, input_schema29517_29534, input_checker29518_29535, output_checker29519_29536) {
            return function(_29529, meta29528__$1) {
              var self__ = this;
              var _29529__$1 = this;
              return new t3tr0s_slides.slide09.t29527(self__.G__29520, self__.input_schema29517, self__.owner, self__.output_checker29519, self__.validate__5821__auto__, self__.G__29521, self__.input_checker29518, self__.output_schema29516, self__.slide, self__.app, self__.ufv__, meta29528__$1);
            };
          }(validate__5821__auto__, ufv___29532, output_schema29516_29533, input_schema29517_29534, input_checker29518_29535, output_checker29519_29536);
          t3tr0s_slides.slide09.__GT_t29527 = function(validate__5821__auto__, ufv___29532, output_schema29516_29533, input_schema29517_29534, input_checker29518_29535, output_checker29519_29536) {
            return function __GT_t29527(G__29520__$1, input_schema29517__$1, owner__$1, output_checker29519__$1, validate__5821__auto____$1, G__29521__$1, input_checker29518__$1, output_schema29516__$1, slide__$1, app__$1, ufv____$1, meta29528) {
              return new t3tr0s_slides.slide09.t29527(G__29520__$1, input_schema29517__$1, owner__$1, output_checker29519__$1, validate__5821__auto____$1, G__29521__$1, input_checker29518__$1, output_schema29516__$1, slide__$1, app__$1, ufv____$1, meta29528);
            };
          }(validate__5821__auto__, ufv___29532, output_schema29516_29533, input_schema29517_29534, input_checker29518_29535, output_checker29519_29536);
        }
        return new t3tr0s_slides.slide09.t29527(G__29520, input_schema29517_29534, owner, output_checker29519_29536, validate__5821__auto__, G__29521, input_checker29518_29535, output_schema29516_29533, slide, app, ufv___29532, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29540 = output_checker29519_29536.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29540)) {
        var error__5823__auto___29541 = temp__4126__auto___29540;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___29541)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29516_29533, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29541], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29532, output_schema29516_29533, input_schema29517_29534, input_checker29518_29535, output_checker29519_29536);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide09.slide), schema.core.make_fn_schema.call(null, output_schema29516_29533, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29517_29534], null)));
t3tr0s_slides.slide09.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide09.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m29515) {
    return om.core.build.call(null, t3tr0s_slides.slide09.slide, cursor__9685__auto__, m29515);
  };
  __GT_slide = function(cursor__9685__auto__, m29515) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m29515);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide09.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide09.slide, t3tr0s_slides.slide09.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide09.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide09.key_down);
};
t3tr0s_slides.slide09.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide09.key_down);
};
goog.provide("t3tr0s_slides.slide10");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide10.dark_green = "#143";
t3tr0s_slides.slide10.light_green = "#175";
t3tr0s_slides.slide10.dark_purple = "#449";
t3tr0s_slides.slide10.light_purple = "#6ad";
t3tr0s_slides.slide10.dark_red = "#944";
t3tr0s_slides.slide10.light_red = "#f8c";
t3tr0s_slides.slide10.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide10.rotate_coord = function rotate_coord(p__29718) {
  var vec__29720 = p__29718;
  var x = cljs.core.nth.call(null, vec__29720, 0, null);
  var y = cljs.core.nth.call(null, vec__29720, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide10.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide10.rotate_coord, piece);
};
t3tr0s_slides.slide10.rows = 20;
t3tr0s_slides.slide10.cols = 10;
t3tr0s_slides.slide10.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide10.cols, 0));
t3tr0s_slides.slide10.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide10.rows, t3tr0s_slides.slide10.empty_row));
t3tr0s_slides.slide10.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide10.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null);
t3tr0s_slides.slide10.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide10.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide10.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide10.initial_pos], null));
t3tr0s_slides.slide10.write_piece = function write_piece(board, coords, p__29721) {
  while (true) {
    var vec__29725 = p__29721;
    var cx = cljs.core.nth.call(null, vec__29725, 0, null);
    var cy = cljs.core.nth.call(null, vec__29725, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__29726 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__29726, 0, null);
      var y = cljs.core.nth.call(null, vec__29726, 1, null);
      var G__29728 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e29727) {
          if (e29727 instanceof Error) {
            var _ = e29727;
            return board;
          } else {
            throw e29727;
          }
        }
      }();
      var G__29729 = cljs.core.rest.call(null, coords);
      var G__29730 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__29728;
      coords = G__29729;
      p__29721 = G__29730;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide10.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__29732 = cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state);
  var map__29732__$1 = cljs.core.seq_QMARK_.call(null, map__29732) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29732) : map__29732;
  var position = cljs.core.get.call(null, map__29732__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__29732__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide10.write_piece, piece, position);
};
t3tr0s_slides.slide10.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__29733) {
  var vec__29737 = p__29733;
  var cx = cljs.core.nth.call(null, vec__29737, 0, null);
  var cy = cljs.core.nth.call(null, vec__29737, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__29737, cx, cy) {
    return function(p__29738) {
      var vec__29739 = p__29738;
      var x = cljs.core.nth.call(null, vec__29739, 0, null);
      var y = cljs.core.nth.call(null, vec__29739, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__29737, cx, cy), piece);
};
t3tr0s_slides.slide10.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide10.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide10.app_state))));
};
t3tr0s_slides.slide10.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var vec__29741 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var x = cljs.core.nth.call(null, vec__29741, 0, null);
  var y = cljs.core.nth.call(null, vec__29741, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide10.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide10.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var new_piece = t3tr0s_slides.slide10.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide10.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide10.get_drop_pos = function get_drop_pos(board, piece, p__29742) {
  var vec__29744 = p__29742;
  var x = cljs.core.nth.call(null, vec__29744, 0, null);
  var y = cljs.core.nth.call(null, vec__29744, 1, null);
  var collide_QMARK_ = function(vec__29744, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide10.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__29744, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide10.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var vec__29746 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var x = cljs.core.nth.call(null, vec__29746, 0, null);
  var y = cljs.core.nth.call(null, vec__29746, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var ny = t3tr0s_slides.slide10.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  t3tr0s_slides.slide10.lock_piece_BANG_.call(null);
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide10.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide10.pieces)));
};
var ufv___29760 = schema.utils.use_fn_validation;
var output_schema29748_29761 = schema.core.Any;
var input_schema29749_29762 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29750_29763 = schema.core.checker.call(null, input_schema29749_29762);
var output_checker29751_29764 = schema.core.checker.call(null, output_schema29748_29761);
t3tr0s_slides.slide10.code = function(ufv___29760, output_schema29748_29761, input_schema29749_29762, input_checker29750_29763, output_checker29751_29764) {
  return function code(G__29752, G__29753) {
    var validate__5821__auto__ = ufv___29760.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29765 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29752, G__29753], null);
      var temp__4126__auto___29766 = input_checker29750_29763.call(null, args__5822__auto___29765);
      if (cljs.core.truth_(temp__4126__auto___29766)) {
        var error__5823__auto___29767 = temp__4126__auto___29766;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___29767)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29749_29762, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29765, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29767], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29752;
      var owner = G__29753;
      while (true) {
        if (typeof t3tr0s_slides.slide10.t29757 !== "undefined") {
        } else {
          t3tr0s_slides.slide10.t29757 = function(output_schema29748, G__29752, owner, input_schema29749, validate__5821__auto__, output_checker29751, input_checker29750, G__29753, app, ufv__, code, meta29758) {
            this.output_schema29748 = output_schema29748;
            this.G__29752 = G__29752;
            this.owner = owner;
            this.input_schema29749 = input_schema29749;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker29751 = output_checker29751;
            this.input_checker29750 = input_checker29750;
            this.G__29753 = G__29753;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta29758 = meta29758;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide10.t29757.cljs$lang$type = true;
          t3tr0s_slides.slide10.t29757.cljs$lang$ctorStr = "t3tr0s-slides.slide10/t29757";
          t3tr0s_slides.slide10.t29757.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29760, output_schema29748_29761, input_schema29749_29762, input_checker29750_29763, output_checker29751_29764) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide10/t29757");
            };
          }(validate__5821__auto__, ufv___29760, output_schema29748_29761, input_schema29749_29762, input_checker29750_29763, output_checker29751_29764);
          t3tr0s_slides.slide10.t29757.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide10.t29757.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29760, output_schema29748_29761, input_schema29749_29762, input_checker29750_29763, output_checker29751_29764) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " get-drop-pos\n", "  [board piece [x y]]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [clear? #(piece-fits? board piece [x %]))\n", "        cy (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
              "first")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "remove")), " clear? (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "iterate")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "inc")), " y)))]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "max")), " y (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "dec")), " cy))))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " hard-drop! []\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @app-state)\n", "        [x y] (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " @app-state)\n", "        board (:board @app-state)\n", "        ny (get-drop-pos board piece [x y])]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " app-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), 
              " [x ny])\n", "    (lock-piece!)))\n", "\n\n")));
            };
          }(validate__5821__auto__, ufv___29760, output_schema29748_29761, input_schema29749_29762, input_checker29750_29763, output_checker29751_29764);
          t3tr0s_slides.slide10.t29757.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29760, output_schema29748_29761, input_schema29749_29762, input_checker29750_29763, output_checker29751_29764) {
            return function(_29759) {
              var self__ = this;
              var _29759__$1 = this;
              return self__.meta29758;
            };
          }(validate__5821__auto__, ufv___29760, output_schema29748_29761, input_schema29749_29762, input_checker29750_29763, output_checker29751_29764);
          t3tr0s_slides.slide10.t29757.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29760, output_schema29748_29761, input_schema29749_29762, input_checker29750_29763, output_checker29751_29764) {
            return function(_29759, meta29758__$1) {
              var self__ = this;
              var _29759__$1 = this;
              return new t3tr0s_slides.slide10.t29757(self__.output_schema29748, self__.G__29752, self__.owner, self__.input_schema29749, self__.validate__5821__auto__, self__.output_checker29751, self__.input_checker29750, self__.G__29753, self__.app, self__.ufv__, self__.code, meta29758__$1);
            };
          }(validate__5821__auto__, ufv___29760, output_schema29748_29761, input_schema29749_29762, input_checker29750_29763, output_checker29751_29764);
          t3tr0s_slides.slide10.__GT_t29757 = function(validate__5821__auto__, ufv___29760, output_schema29748_29761, input_schema29749_29762, input_checker29750_29763, output_checker29751_29764) {
            return function __GT_t29757(output_schema29748__$1, G__29752__$1, owner__$1, input_schema29749__$1, validate__5821__auto____$1, output_checker29751__$1, input_checker29750__$1, G__29753__$1, app__$1, ufv____$1, code__$1, meta29758) {
              return new t3tr0s_slides.slide10.t29757(output_schema29748__$1, G__29752__$1, owner__$1, input_schema29749__$1, validate__5821__auto____$1, output_checker29751__$1, input_checker29750__$1, G__29753__$1, app__$1, ufv____$1, code__$1, meta29758);
            };
          }(validate__5821__auto__, ufv___29760, output_schema29748_29761, input_schema29749_29762, input_checker29750_29763, output_checker29751_29764);
        }
        return new t3tr0s_slides.slide10.t29757(output_schema29748_29761, G__29752, owner, input_schema29749_29762, validate__5821__auto__, output_checker29751_29764, input_checker29750_29763, G__29753, app, ufv___29760, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29768 = output_checker29751_29764.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29768)) {
        var error__5823__auto___29769 = temp__4126__auto___29768;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___29769)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29748_29761, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29769], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29760, output_schema29748_29761, input_schema29749_29762, input_checker29750_29763, output_checker29751_29764);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide10.code), schema.core.make_fn_schema.call(null, output_schema29748_29761, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29749_29762], null)));
t3tr0s_slides.slide10.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide10.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m29747) {
    return om.core.build.call(null, t3tr0s_slides.slide10.code, cursor__9685__auto__, m29747);
  };
  __GT_code = function(cursor__9685__auto__, m29747) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m29747);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide10.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide10.rows);
t3tr0s_slides.slide10.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__29770, is_center) {
  var vec__29772 = p__29770;
  var x = cljs.core.nth.call(null, vec__29772, 0, null);
  var y = cljs.core.nth.call(null, vec__29772, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide10.cell_size * x;
  var ry = t3tr0s_slides.slide10.cell_size * y;
  var rs = t3tr0s_slides.slide10.cell_size;
  var cx = t3tr0s_slides.slide10.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide10.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide10.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide10.piece_abs_coords = function piece_abs_coords(piece, p__29773) {
  var vec__29777 = p__29773;
  var cx = cljs.core.nth.call(null, vec__29777, 0, null);
  var cy = cljs.core.nth.call(null, vec__29777, 1, null);
  return cljs.core.mapv.call(null, function(vec__29777, cx, cy) {
    return function(p__29778) {
      var vec__29779 = p__29778;
      var x = cljs.core.nth.call(null, vec__29779, 0, null);
      var y = cljs.core.nth.call(null, vec__29779, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__29777, cx, cy), piece);
};
t3tr0s_slides.slide10.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__29786 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide10.piece_abs_coords.call(null, piece, pos)));
  var chunk__29787 = null;
  var count__29788 = 0;
  var i__29789 = 0;
  while (true) {
    if (i__29789 < count__29788) {
      var vec__29790 = cljs.core._nth.call(null, chunk__29787, i__29789);
      var i = cljs.core.nth.call(null, vec__29790, 0, null);
      var c = cljs.core.nth.call(null, vec__29790, 1, null);
      t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__29792 = seq__29786;
      var G__29793 = chunk__29787;
      var G__29794 = count__29788;
      var G__29795 = i__29789 + 1;
      seq__29786 = G__29792;
      chunk__29787 = G__29793;
      count__29788 = G__29794;
      i__29789 = G__29795;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__29786);
      if (temp__4126__auto__) {
        var seq__29786__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__29786__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__29786__$1);
          var G__29796 = cljs.core.chunk_rest.call(null, seq__29786__$1);
          var G__29797 = c__4309__auto__;
          var G__29798 = cljs.core.count.call(null, c__4309__auto__);
          var G__29799 = 0;
          seq__29786 = G__29796;
          chunk__29787 = G__29797;
          count__29788 = G__29798;
          i__29789 = G__29799;
          continue;
        } else {
          var vec__29791 = cljs.core.first.call(null, seq__29786__$1);
          var i = cljs.core.nth.call(null, vec__29791, 0, null);
          var c = cljs.core.nth.call(null, vec__29791, 1, null);
          t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__29800 = cljs.core.next.call(null, seq__29786__$1);
          var G__29801 = null;
          var G__29802 = 0;
          var G__29803 = 0;
          seq__29786 = G__29800;
          chunk__29787 = G__29801;
          count__29788 = G__29802;
          i__29789 = G__29803;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide10.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__29816 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide10.rows));
  var chunk__29821 = null;
  var count__29822 = 0;
  var i__29823 = 0;
  while (true) {
    if (i__29823 < count__29822) {
      var y = cljs.core._nth.call(null, chunk__29821, i__29823);
      var seq__29824_29828 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide10.cols));
      var chunk__29825_29829 = null;
      var count__29826_29830 = 0;
      var i__29827_29831 = 0;
      while (true) {
        if (i__29827_29831 < count__29826_29830) {
          var x_29832 = cljs.core._nth.call(null, chunk__29825_29829, i__29827_29831);
          var v_29833 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_29832], null));
          if (v_29833 === 0) {
          } else {
            t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_29832, y], null), false);
          }
          var G__29834 = seq__29824_29828;
          var G__29835 = chunk__29825_29829;
          var G__29836 = count__29826_29830;
          var G__29837 = i__29827_29831 + 1;
          seq__29824_29828 = G__29834;
          chunk__29825_29829 = G__29835;
          count__29826_29830 = G__29836;
          i__29827_29831 = G__29837;
          continue;
        } else {
          var temp__4126__auto___29838 = cljs.core.seq.call(null, seq__29824_29828);
          if (temp__4126__auto___29838) {
            var seq__29824_29839__$1 = temp__4126__auto___29838;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__29824_29839__$1)) {
              var c__4309__auto___29840 = cljs.core.chunk_first.call(null, seq__29824_29839__$1);
              var G__29841 = cljs.core.chunk_rest.call(null, seq__29824_29839__$1);
              var G__29842 = c__4309__auto___29840;
              var G__29843 = cljs.core.count.call(null, c__4309__auto___29840);
              var G__29844 = 0;
              seq__29824_29828 = G__29841;
              chunk__29825_29829 = G__29842;
              count__29826_29830 = G__29843;
              i__29827_29831 = G__29844;
              continue;
            } else {
              var x_29845 = cljs.core.first.call(null, seq__29824_29839__$1);
              var v_29846 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_29845], null));
              if (v_29846 === 0) {
              } else {
                t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_29845, y], null), false);
              }
              var G__29847 = cljs.core.next.call(null, seq__29824_29839__$1);
              var G__29848 = null;
              var G__29849 = 0;
              var G__29850 = 0;
              seq__29824_29828 = G__29847;
              chunk__29825_29829 = G__29848;
              count__29826_29830 = G__29849;
              i__29827_29831 = G__29850;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__29851 = seq__29816;
      var G__29852 = chunk__29821;
      var G__29853 = count__29822;
      var G__29854 = i__29823 + 1;
      seq__29816 = G__29851;
      chunk__29821 = G__29852;
      count__29822 = G__29853;
      i__29823 = G__29854;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__29816);
      if (temp__4126__auto__) {
        var seq__29816__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__29816__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__29816__$1);
          var G__29855 = cljs.core.chunk_rest.call(null, seq__29816__$1);
          var G__29856 = c__4309__auto__;
          var G__29857 = cljs.core.count.call(null, c__4309__auto__);
          var G__29858 = 0;
          seq__29816 = G__29855;
          chunk__29821 = G__29856;
          count__29822 = G__29857;
          i__29823 = G__29858;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__29816__$1);
          var seq__29817_29859 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide10.cols));
          var chunk__29818_29860 = null;
          var count__29819_29861 = 0;
          var i__29820_29862 = 0;
          while (true) {
            if (i__29820_29862 < count__29819_29861) {
              var x_29863 = cljs.core._nth.call(null, chunk__29818_29860, i__29820_29862);
              var v_29864 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_29863], null));
              if (v_29864 === 0) {
              } else {
                t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_29863, y], null), false);
              }
              var G__29865 = seq__29817_29859;
              var G__29866 = chunk__29818_29860;
              var G__29867 = count__29819_29861;
              var G__29868 = i__29820_29862 + 1;
              seq__29817_29859 = G__29865;
              chunk__29818_29860 = G__29866;
              count__29819_29861 = G__29867;
              i__29820_29862 = G__29868;
              continue;
            } else {
              var temp__4126__auto___29869__$1 = cljs.core.seq.call(null, seq__29817_29859);
              if (temp__4126__auto___29869__$1) {
                var seq__29817_29870__$1 = temp__4126__auto___29869__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__29817_29870__$1)) {
                  var c__4309__auto___29871 = cljs.core.chunk_first.call(null, seq__29817_29870__$1);
                  var G__29872 = cljs.core.chunk_rest.call(null, seq__29817_29870__$1);
                  var G__29873 = c__4309__auto___29871;
                  var G__29874 = cljs.core.count.call(null, c__4309__auto___29871);
                  var G__29875 = 0;
                  seq__29817_29859 = G__29872;
                  chunk__29818_29860 = G__29873;
                  count__29819_29861 = G__29874;
                  i__29820_29862 = G__29875;
                  continue;
                } else {
                  var x_29876 = cljs.core.first.call(null, seq__29817_29870__$1);
                  var v_29877 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_29876], null));
                  if (v_29877 === 0) {
                  } else {
                    t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_29876, y], null), false);
                  }
                  var G__29878 = cljs.core.next.call(null, seq__29817_29870__$1);
                  var G__29879 = null;
                  var G__29880 = 0;
                  var G__29881 = 0;
                  seq__29817_29859 = G__29878;
                  chunk__29818_29860 = G__29879;
                  count__29819_29861 = G__29880;
                  i__29820_29862 = G__29881;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__29882 = cljs.core.next.call(null, seq__29816__$1);
          var G__29883 = null;
          var G__29884 = 0;
          var G__29885 = 0;
          seq__29816 = G__29882;
          chunk__29821 = G__29883;
          count__29822 = G__29884;
          i__29823 = G__29885;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide10.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide10.cell_size * t3tr0s_slides.slide10.cols, t3tr0s_slides.slide10.cell_size * t3tr0s_slides.slide10.rows);
  ctx.fillStyle = t3tr0s_slides.slide10.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide10.light_green;
  t3tr0s_slides.slide10.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var fits = t3tr0s_slides.slide10.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = fits ? t3tr0s_slides.slide10.dark_purple : t3tr0s_slides.slide10.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide10.light_purple : t3tr0s_slides.slide10.light_red;
    return t3tr0s_slides.slide10.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide10.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide10.key_name = function key_name(p1__29886_SHARP_) {
  return t3tr0s_slides.slide10.key_names.call(null, p1__29886_SHARP_.keyCode);
};
t3tr0s_slides.slide10.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide10.key_name.call(null, e);
  var G__29888_29889 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__29888_29889) {
    case "space":
      t3tr0s_slides.slide10.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide10.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide10.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide10.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___29908 = schema.utils.use_fn_validation;
var output_schema29892_29909 = schema.core.Any;
var input_schema29893_29910 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29894_29911 = schema.core.checker.call(null, input_schema29893_29910);
var output_checker29895_29912 = schema.core.checker.call(null, output_schema29892_29909);
t3tr0s_slides.slide10.canvas = function(ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912) {
  return function canvas(G__29896, G__29897) {
    var validate__5821__auto__ = ufv___29908.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29913 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29896, G__29897], null);
      var temp__4126__auto___29914 = input_checker29894_29911.call(null, args__5822__auto___29913);
      if (cljs.core.truth_(temp__4126__auto___29914)) {
        var error__5823__auto___29915 = temp__4126__auto___29914;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___29915)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29893_29910, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29913, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29915], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29896;
      var owner = G__29897;
      while (true) {
        if (typeof t3tr0s_slides.slide10.t29903 !== "undefined") {
        } else {
          t3tr0s_slides.slide10.t29903 = function(G__29896, owner, input_schema29893, validate__5821__auto__, output_schema29892, canvas, output_checker29895, app, ufv__, input_checker29894, G__29897, meta29904) {
            this.G__29896 = G__29896;
            this.owner = owner;
            this.input_schema29893 = input_schema29893;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema29892 = output_schema29892;
            this.canvas = canvas;
            this.output_checker29895 = output_checker29895;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_checker29894 = input_checker29894;
            this.G__29897 = G__29897;
            this.meta29904 = meta29904;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide10.t29903.cljs$lang$type = true;
          t3tr0s_slides.slide10.t29903.cljs$lang$ctorStr = "t3tr0s-slides.slide10/t29903";
          t3tr0s_slides.slide10.t29903.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide10/t29903");
            };
          }(validate__5821__auto__, ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912);
          t3tr0s_slides.slide10.t29903.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide10.t29903.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912);
          t3tr0s_slides.slide10.t29903.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide10.t29903.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide10.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912);
          t3tr0s_slides.slide10.t29903.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide10.t29903.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide10.cols * t3tr0s_slides.slide10.cell_size;
              canvas__$2.height = t3tr0s_slides.slide10.rows * t3tr0s_slides.slide10.cell_size;
              return t3tr0s_slides.slide10.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912);
          t3tr0s_slides.slide10.t29903.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912) {
            return function(_29905) {
              var self__ = this;
              var _29905__$1 = this;
              return self__.meta29904;
            };
          }(validate__5821__auto__, ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912);
          t3tr0s_slides.slide10.t29903.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912) {
            return function(_29905, meta29904__$1) {
              var self__ = this;
              var _29905__$1 = this;
              return new t3tr0s_slides.slide10.t29903(self__.G__29896, self__.owner, self__.input_schema29893, self__.validate__5821__auto__, self__.output_schema29892, self__.canvas, self__.output_checker29895, self__.app, self__.ufv__, self__.input_checker29894, self__.G__29897, meta29904__$1);
            };
          }(validate__5821__auto__, ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912);
          t3tr0s_slides.slide10.__GT_t29903 = function(validate__5821__auto__, ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912) {
            return function __GT_t29903(G__29896__$1, owner__$1, input_schema29893__$1, validate__5821__auto____$1, output_schema29892__$1, canvas__$1, output_checker29895__$1, app__$1, ufv____$1, input_checker29894__$1, G__29897__$1, meta29904) {
              return new t3tr0s_slides.slide10.t29903(G__29896__$1, owner__$1, input_schema29893__$1, validate__5821__auto____$1, output_schema29892__$1, canvas__$1, output_checker29895__$1, app__$1, ufv____$1, input_checker29894__$1, G__29897__$1, meta29904);
            };
          }(validate__5821__auto__, ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912);
        }
        return new t3tr0s_slides.slide10.t29903(G__29896, owner, input_schema29893_29910, validate__5821__auto__, output_schema29892_29909, canvas, output_checker29895_29912, app, ufv___29908, input_checker29894_29911, G__29897, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29916 = output_checker29895_29912.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29916)) {
        var error__5823__auto___29917 = temp__4126__auto___29916;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___29917)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29892_29909, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29917], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29908, output_schema29892_29909, input_schema29893_29910, input_checker29894_29911, output_checker29895_29912);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide10.canvas), schema.core.make_fn_schema.call(null, output_schema29892_29909, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29893_29910], null)));
t3tr0s_slides.slide10.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide10.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m29891) {
    return om.core.build.call(null, t3tr0s_slides.slide10.canvas, cursor__9685__auto__, m29891);
  };
  __GT_canvas = function(cursor__9685__auto__, m29891) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m29891);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___29935 = schema.utils.use_fn_validation;
var output_schema29919_29936 = schema.core.Any;
var input_schema29920_29937 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29921_29938 = schema.core.checker.call(null, input_schema29920_29937);
var output_checker29922_29939 = schema.core.checker.call(null, output_schema29919_29936);
t3tr0s_slides.slide10.slide = function(ufv___29935, output_schema29919_29936, input_schema29920_29937, input_checker29921_29938, output_checker29922_29939) {
  return function slide(G__29923, G__29924) {
    var validate__5821__auto__ = ufv___29935.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29940 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29923, G__29924], null);
      var temp__4126__auto___29941 = input_checker29921_29938.call(null, args__5822__auto___29940);
      if (cljs.core.truth_(temp__4126__auto___29941)) {
        var error__5823__auto___29942 = temp__4126__auto___29941;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___29942)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29920_29937, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29940, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29942], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29923;
      var owner = G__29924;
      while (true) {
        if (typeof t3tr0s_slides.slide10.t29930 !== "undefined") {
        } else {
          t3tr0s_slides.slide10.t29930 = function(owner, validate__5821__auto__, G__29924, output_schema29919, output_checker29922, input_schema29920, input_checker29921, slide, app, ufv__, G__29923, meta29931) {
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__29924 = G__29924;
            this.output_schema29919 = output_schema29919;
            this.output_checker29922 = output_checker29922;
            this.input_schema29920 = input_schema29920;
            this.input_checker29921 = input_checker29921;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.G__29923 = G__29923;
            this.meta29931 = meta29931;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide10.t29930.cljs$lang$type = true;
          t3tr0s_slides.slide10.t29930.cljs$lang$ctorStr = "t3tr0s-slides.slide10/t29930";
          t3tr0s_slides.slide10.t29930.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29935, output_schema29919_29936, input_schema29920_29937, input_checker29921_29938, output_checker29922_29939) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide10/t29930");
            };
          }(validate__5821__auto__, ufv___29935, output_schema29919_29936, input_schema29920_29937, input_checker29921_29938, output_checker29922_29939);
          t3tr0s_slides.slide10.t29930.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide10.t29930.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29935, output_schema29919_29936, input_schema29920_29937, input_checker29921_29938, output_checker29922_29939) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "10. Add hard-drop."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide10.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide10.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___29935, output_schema29919_29936, input_schema29920_29937, input_checker29921_29938, output_checker29922_29939);
          t3tr0s_slides.slide10.t29930.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29935, output_schema29919_29936, input_schema29920_29937, input_checker29921_29938, output_checker29922_29939) {
            return function(_29932) {
              var self__ = this;
              var _29932__$1 = this;
              return self__.meta29931;
            };
          }(validate__5821__auto__, ufv___29935, output_schema29919_29936, input_schema29920_29937, input_checker29921_29938, output_checker29922_29939);
          t3tr0s_slides.slide10.t29930.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29935, output_schema29919_29936, input_schema29920_29937, input_checker29921_29938, output_checker29922_29939) {
            return function(_29932, meta29931__$1) {
              var self__ = this;
              var _29932__$1 = this;
              return new t3tr0s_slides.slide10.t29930(self__.owner, self__.validate__5821__auto__, self__.G__29924, self__.output_schema29919, self__.output_checker29922, self__.input_schema29920, self__.input_checker29921, self__.slide, self__.app, self__.ufv__, self__.G__29923, meta29931__$1);
            };
          }(validate__5821__auto__, ufv___29935, output_schema29919_29936, input_schema29920_29937, input_checker29921_29938, output_checker29922_29939);
          t3tr0s_slides.slide10.__GT_t29930 = function(validate__5821__auto__, ufv___29935, output_schema29919_29936, input_schema29920_29937, input_checker29921_29938, output_checker29922_29939) {
            return function __GT_t29930(owner__$1, validate__5821__auto____$1, G__29924__$1, output_schema29919__$1, output_checker29922__$1, input_schema29920__$1, input_checker29921__$1, slide__$1, app__$1, ufv____$1, G__29923__$1, meta29931) {
              return new t3tr0s_slides.slide10.t29930(owner__$1, validate__5821__auto____$1, G__29924__$1, output_schema29919__$1, output_checker29922__$1, input_schema29920__$1, input_checker29921__$1, slide__$1, app__$1, ufv____$1, G__29923__$1, meta29931);
            };
          }(validate__5821__auto__, ufv___29935, output_schema29919_29936, input_schema29920_29937, input_checker29921_29938, output_checker29922_29939);
        }
        return new t3tr0s_slides.slide10.t29930(owner, validate__5821__auto__, G__29924, output_schema29919_29936, output_checker29922_29939, input_schema29920_29937, input_checker29921_29938, slide, app, ufv___29935, G__29923, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29943 = output_checker29922_29939.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29943)) {
        var error__5823__auto___29944 = temp__4126__auto___29943;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___29944)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29919_29936, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29944], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29935, output_schema29919_29936, input_schema29920_29937, input_checker29921_29938, output_checker29922_29939);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide10.slide), schema.core.make_fn_schema.call(null, output_schema29919_29936, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29920_29937], null)));
t3tr0s_slides.slide10.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide10.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m29918) {
    return om.core.build.call(null, t3tr0s_slides.slide10.slide, cursor__9685__auto__, m29918);
  };
  __GT_slide = function(cursor__9685__auto__, m29918) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m29918);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide10.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide10.slide, t3tr0s_slides.slide10.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide10.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide10.key_down);
};
t3tr0s_slides.slide10.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide10.key_down);
};
goog.provide("t3tr0s_slides.core");
goog.require("cljs.core");
goog.require("t3tr0s_slides.slide10");
goog.require("t3tr0s_slides.slide04");
goog.require("t3tr0s_slides.slide03");
goog.require("t3tr0s_slides.slide10");
goog.require("t3tr0s_slides.slide00");
goog.require("t3tr0s_slides.slide08");
goog.require("t3tr0s_slides.slide08");
goog.require("t3tr0s_slides.slide03");
goog.require("t3tr0s_slides.slide06");
goog.require("t3tr0s_slides.slide11");
goog.require("t3tr0s_slides.slide07");
goog.require("t3tr0s_slides.slide12");
goog.require("t3tr0s_slides.slide09");
goog.require("t3tr0s_slides.slide12");
goog.require("t3tr0s_slides.slide01");
goog.require("t3tr0s_slides.slide11");
goog.require("t3tr0s_slides.slide05");
goog.require("t3tr0s_slides.slide09");
goog.require("t3tr0s_slides.slide01");
goog.require("t3tr0s_slides.slide04");
goog.require("t3tr0s_slides.slide13");
goog.require("t3tr0s_slides.slide13");
goog.require("t3tr0s_slides.slide00");
goog.require("t3tr0s_slides.slide02");
goog.require("t3tr0s_slides.slide14");
goog.require("t3tr0s_slides.slide02");
goog.require("t3tr0s_slides.slide15");
goog.require("t3tr0s_slides.slide07");
goog.require("t3tr0s_slides.slide15");
goog.require("t3tr0s_slides.slide06");
goog.require("t3tr0s_slides.slide14");
goog.require("t3tr0s_slides.slide05");
cljs.core.enable_console_print_BANG_.call(null);
t3tr0s_slides.core.slides = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide00", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide00.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide00.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide00.stop], null), new cljs.core.PersistentArrayMap(null, 
4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide01", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide01.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide01.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide01.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide02", new cljs.core.Keyword(null, "init", "init", -1875481434), 
t3tr0s_slides.slide02.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide02.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide02.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide03", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide03.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide03.resume, new cljs.core.Keyword(null, 
"stop", "stop", -2140911342), t3tr0s_slides.slide03.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide04", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide04.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide04.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide04.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"id", "id", -1388402092), "slide05", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide05.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide05.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide05.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide06", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide06.init, 
new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide06.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide06.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide07", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide07.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide07.resume, new cljs.core.Keyword(null, "stop", 
"stop", -2140911342), t3tr0s_slides.slide07.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide08", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide08.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide08.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide08.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"id", "id", -1388402092), "slide09", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide09.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide09.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide09.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide10", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide10.init, 
new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide10.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide10.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide11", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide11.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide11.resume, new cljs.core.Keyword(null, "stop", 
"stop", -2140911342), t3tr0s_slides.slide11.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide12", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide12.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide12.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide12.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"id", "id", -1388402092), "slide13", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide13.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide13.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide13.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide14", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide14.init, 
new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide14.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide14.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide15", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide15.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide15.resume, new cljs.core.Keyword(null, "stop", 
"stop", -2140911342), t3tr0s_slides.slide15.stop], null)], null);
t3tr0s_slides.core.current_slide = cljs.core.atom.call(null, null);
t3tr0s_slides.core.on_slide_change = function on_slide_change(_, ___$1, i_prev, i) {
  if (cljs.core._EQ_.call(null, i_prev, i)) {
    return null;
  } else {
    var seq__118354_118360 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.core.slides));
    var chunk__118355_118361 = null;
    var count__118356_118362 = 0;
    var i__118357_118363 = 0;
    while (true) {
      if (i__118357_118363 < count__118356_118362) {
        var vec__118358_118364 = cljs.core._nth.call(null, chunk__118355_118361, i__118357_118363);
        var j_118365 = cljs.core.nth.call(null, vec__118358_118364, 0, null);
        var slide_118366 = cljs.core.nth.call(null, vec__118358_118364, 1, null);
        var pos_118367 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((j_118365 - i) * 100 + 50) + "%";
        var elm_118368 = document.getElementById((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(slide_118366));
        if (i_prev == null) {
          $(elm_118368).css({"left":pos_118367});
        } else {
          $(elm_118368).velocity({"left":pos_118367});
        }
        var G__118369 = seq__118354_118360;
        var G__118370 = chunk__118355_118361;
        var G__118371 = count__118356_118362;
        var G__118372 = i__118357_118363 + 1;
        seq__118354_118360 = G__118369;
        chunk__118355_118361 = G__118370;
        count__118356_118362 = G__118371;
        i__118357_118363 = G__118372;
        continue;
      } else {
        var temp__4126__auto___118373 = cljs.core.seq.call(null, seq__118354_118360);
        if (temp__4126__auto___118373) {
          var seq__118354_118374__$1 = temp__4126__auto___118373;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__118354_118374__$1)) {
            var c__4309__auto___118375 = cljs.core.chunk_first.call(null, seq__118354_118374__$1);
            var G__118376 = cljs.core.chunk_rest.call(null, seq__118354_118374__$1);
            var G__118377 = c__4309__auto___118375;
            var G__118378 = cljs.core.count.call(null, c__4309__auto___118375);
            var G__118379 = 0;
            seq__118354_118360 = G__118376;
            chunk__118355_118361 = G__118377;
            count__118356_118362 = G__118378;
            i__118357_118363 = G__118379;
            continue;
          } else {
            var vec__118359_118380 = cljs.core.first.call(null, seq__118354_118374__$1);
            var j_118381 = cljs.core.nth.call(null, vec__118359_118380, 0, null);
            var slide_118382 = cljs.core.nth.call(null, vec__118359_118380, 1, null);
            var pos_118383 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((j_118381 - i) * 100 + 50) + "%";
            var elm_118384 = document.getElementById((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(slide_118382));
            if (i_prev == null) {
              $(elm_118384).css({"left":pos_118383});
            } else {
              $(elm_118384).velocity({"left":pos_118383});
            }
            var G__118385 = cljs.core.next.call(null, seq__118354_118374__$1);
            var G__118386 = null;
            var G__118387 = 0;
            var G__118388 = 0;
            seq__118354_118360 = G__118385;
            chunk__118355_118361 = G__118386;
            count__118356_118362 = G__118387;
            i__118357_118363 = G__118388;
            continue;
          }
        } else {
        }
      }
      break;
    }
    var stop_118389 = (new cljs.core.Keyword(null, "stop", "stop", -2140911342)).cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, t3tr0s_slides.core.slides, i_prev));
    var resume_118390 = (new cljs.core.Keyword(null, "resume", "resume", -118572261)).cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, t3tr0s_slides.core.slides, i));
    if (cljs.core.truth_(stop_118389)) {
      stop_118389.call(null);
    } else {
    }
    if (cljs.core.truth_(resume_118390)) {
      resume_118390.call(null);
    } else {
    }
    return document["location"]["hash"] = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i);
  }
};
cljs.core.add_watch.call(null, t3tr0s_slides.core.current_slide, new cljs.core.Keyword(null, "slide", "slide", 142491892), t3tr0s_slides.core.on_slide_change);
t3tr0s_slides.core.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.core.key_name = function key_name(p1__118391_SHARP_) {
  return t3tr0s_slides.core.key_names.call(null, p1__118391_SHARP_.keyCode);
};
t3tr0s_slides.core.key_down = function key_down(e) {
  var kname = t3tr0s_slides.core.key_name.call(null, e);
  var shift = e.shiftKey;
  var G__118395 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__118395) {
    case "right":
      if (cljs.core.truth_(shift)) {
        cljs.core.swap_BANG_.call(null, t3tr0s_slides.core.current_slide, function(G__118395, kname, shift) {
          return function(p1__118393_SHARP_) {
            var x__3867__auto__ = cljs.core.count.call(null, t3tr0s_slides.core.slides) - 1;
            var y__3868__auto__ = p1__118393_SHARP_ + 1;
            return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
          };
        }(G__118395, kname, shift));
        return e.preventDefault();
      } else {
        return null;
      }
      break;
    case "left":
      if (cljs.core.truth_(shift)) {
        cljs.core.swap_BANG_.call(null, t3tr0s_slides.core.current_slide, function(G__118395, kname, shift) {
          return function(p1__118392_SHARP_) {
            var x__3860__auto__ = 0;
            var y__3861__auto__ = p1__118392_SHARP_ - 1;
            return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
          };
        }(G__118395, kname, shift));
        return e.preventDefault();
      } else {
        return null;
      }
      break;
    default:
      return null;
  }
};
t3tr0s_slides.core.on_hash_change = function on_hash_change() {
  var hash_ = document["location"]["hash"].replace(/^#/, "");
  if (cljs.core._EQ_.call(null, hash_, "")) {
    document["location"]["hash"] = "0";
  } else {
  }
  var slide_number = parseInt(hash_);
  var slide = cljs.core.get.call(null, t3tr0s_slides.core.slides, slide_number);
  if (cljs.core.truth_(slide)) {
    return cljs.core.reset_BANG_.call(null, t3tr0s_slides.core.current_slide, slide_number);
  } else {
    return null;
  }
};
t3tr0s_slides.core.init_slides_BANG_ = function init_slides_BANG_() {
  var seq__118403 = cljs.core.seq.call(null, t3tr0s_slides.core.slides);
  var chunk__118404 = null;
  var count__118405 = 0;
  var i__118406 = 0;
  while (true) {
    if (i__118406 < count__118405) {
      var map__118407 = cljs.core._nth.call(null, chunk__118404, i__118406);
      var map__118407__$1 = cljs.core.seq_QMARK_.call(null, map__118407) ? cljs.core.apply.call(null, cljs.core.hash_map, map__118407) : map__118407;
      var init = cljs.core.get.call(null, map__118407__$1, new cljs.core.Keyword(null, "init", "init", -1875481434));
      var id = cljs.core.get.call(null, map__118407__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
      init.call(null, id);
      var G__118409 = seq__118403;
      var G__118410 = chunk__118404;
      var G__118411 = count__118405;
      var G__118412 = i__118406 + 1;
      seq__118403 = G__118409;
      chunk__118404 = G__118410;
      count__118405 = G__118411;
      i__118406 = G__118412;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__118403);
      if (temp__4126__auto__) {
        var seq__118403__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__118403__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__118403__$1);
          var G__118413 = cljs.core.chunk_rest.call(null, seq__118403__$1);
          var G__118414 = c__4309__auto__;
          var G__118415 = cljs.core.count.call(null, c__4309__auto__);
          var G__118416 = 0;
          seq__118403 = G__118413;
          chunk__118404 = G__118414;
          count__118405 = G__118415;
          i__118406 = G__118416;
          continue;
        } else {
          var map__118408 = cljs.core.first.call(null, seq__118403__$1);
          var map__118408__$1 = cljs.core.seq_QMARK_.call(null, map__118408) ? cljs.core.apply.call(null, cljs.core.hash_map, map__118408) : map__118408;
          var init = cljs.core.get.call(null, map__118408__$1, new cljs.core.Keyword(null, "init", "init", -1875481434));
          var id = cljs.core.get.call(null, map__118408__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
          init.call(null, id);
          var G__118417 = cljs.core.next.call(null, seq__118403__$1);
          var G__118418 = null;
          var G__118419 = 0;
          var G__118420 = 0;
          seq__118403 = G__118417;
          chunk__118404 = G__118418;
          count__118405 = G__118419;
          i__118406 = G__118420;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.core.init = function init() {
  t3tr0s_slides.core.init_slides_BANG_.call(null);
  window.addEventListener("keydown", t3tr0s_slides.core.key_down);
  window["onhashchange"] = t3tr0s_slides.core.on_hash_change;
  return t3tr0s_slides.core.on_hash_change.call(null);
};
window.addEventListener("load", t3tr0s_slides.core.init);
