var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2311";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__38697__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__38697 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__38697__delegate.call(this, args);
    };
    G__38697.cljs$lang$maxFixedArity = 0;
    G__38697.cljs$lang$applyTo = function(arglist__38698) {
      var args = cljs.core.seq(arglist__38698);
      return G__38697__delegate(args);
    };
    G__38697.cljs$core$IFn$_invoke$arity$variadic = G__38697__delegate;
    return G__38697;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3541__auto__ = ty;
    if (cljs.core.truth_(and__3541__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3541__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4409__auto___38699 = len;
  var i_38700 = 0;
  while (true) {
    if (i_38700 < n__4409__auto___38699) {
      new_arr[i_38700] = arr[i_38700];
      var G__38701 = i_38700 + 1;
      i_38700 = G__38701;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__38702__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__38702 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38702__delegate.call(this, array, i, idxs);
    };
    G__38702.cljs$lang$maxFixedArity = 2;
    G__38702.cljs$lang$applyTo = function(arglist__38703) {
      var array = cljs.core.first(arglist__38703);
      arglist__38703 = cljs.core.next(arglist__38703);
      var i = cljs.core.first(arglist__38703);
      var idxs = cljs.core.rest(arglist__38703);
      return G__38702__delegate(array, i, idxs);
    };
    G__38702.cljs$core$IFn$_invoke$arity$variadic = G__38702__delegate;
    return G__38702;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__38704__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__38704 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__38704__delegate.call(this, array, idx, idx2, idxv);
    };
    G__38704.cljs$lang$maxFixedArity = 3;
    G__38704.cljs$lang$applyTo = function(arglist__38705) {
      var array = cljs.core.first(arglist__38705);
      arglist__38705 = cljs.core.next(arglist__38705);
      var idx = cljs.core.first(arglist__38705);
      arglist__38705 = cljs.core.next(arglist__38705);
      var idx2 = cljs.core.first(arglist__38705);
      var idxv = cljs.core.rest(arglist__38705);
      return G__38704__delegate(array, idx, idx2, idxv);
    };
    G__38704.cljs$core$IFn$_invoke$arity$variadic = G__38704__delegate;
    return G__38704;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj38707 = {};
  return obj38707;
}();
cljs.core.IFn = function() {
  var obj38709 = {};
  return obj38709;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj38711 = {};
  return obj38711;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3541__auto__ = value;
    if (and__3541__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4180__auto__ = value == null ? null : value;
    return function() {
      var or__3553__auto__ = cljs.core._clone[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._clone["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj38713 = {};
  return obj38713;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._count[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._count["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj38715 = {};
  return obj38715;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._empty[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._empty["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj38717 = {};
  return obj38717;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._conj[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._conj["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj38719 = {};
  return obj38719;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3541__auto__ = coll;
      if (and__3541__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4180__auto__ = coll == null ? null : coll;
      return function() {
        var or__3553__auto__ = cljs.core._nth[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._nth["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3541__auto__ = coll;
      if (and__3541__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4180__auto__ = coll == null ? null : coll;
      return function() {
        var or__3553__auto__ = cljs.core._nth[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._nth["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj38721 = {};
  return obj38721;
}();
cljs.core.ISeq = function() {
  var obj38723 = {};
  return obj38723;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._first[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._first["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._rest[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._rest["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj38725 = {};
  return obj38725;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._next[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._next["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj38727 = {};
  return obj38727;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._lookup[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._lookup["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._lookup[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._lookup["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj38729 = {};
  return obj38729;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._assoc[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._assoc["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj38731 = {};
  return obj38731;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._dissoc[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._dissoc["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj38733 = {};
  return obj38733;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._key[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._key["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._val[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._val["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj38735 = {};
  return obj38735;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._disjoin[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._disjoin["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj38737 = {};
  return obj38737;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._peek[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._peek["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._pop[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._pop["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj38739 = {};
  return obj38739;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._assoc_n[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj38741 = {};
  return obj38741;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._deref[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._deref["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj38743 = {};
  return obj38743;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj38745 = {};
  return obj38745;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._meta[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._meta["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj38747 = {};
  return obj38747;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._with_meta[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._with_meta["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj38749 = {};
  return obj38749;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3541__auto__ = coll;
      if (and__3541__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4180__auto__ = coll == null ? null : coll;
      return function() {
        var or__3553__auto__ = cljs.core._reduce[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._reduce["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3541__auto__ = coll;
      if (and__3541__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4180__auto__ = coll == null ? null : coll;
      return function() {
        var or__3553__auto__ = cljs.core._reduce[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._reduce["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj38751 = {};
  return obj38751;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj38753 = {};
  return obj38753;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._equiv[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._equiv["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj38755 = {};
  return obj38755;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._hash[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._hash["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj38757 = {};
  return obj38757;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._seq[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._seq["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj38759 = {};
  return obj38759;
}();
cljs.core.IList = function() {
  var obj38761 = {};
  return obj38761;
}();
cljs.core.IRecord = function() {
  var obj38763 = {};
  return obj38763;
}();
cljs.core.IReversible = function() {
  var obj38765 = {};
  return obj38765;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._rseq[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._rseq["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj38767 = {};
  return obj38767;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._entry_key[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._entry_key["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._comparator[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._comparator["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj38769 = {};
  return obj38769;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3541__auto__ = writer;
    if (and__3541__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4180__auto__ = writer == null ? null : writer;
    return function() {
      var or__3553__auto__ = cljs.core._write[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._write["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3541__auto__ = writer;
    if (and__3541__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4180__auto__ = writer == null ? null : writer;
    return function() {
      var or__3553__auto__ = cljs.core._flush[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._flush["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj38771 = {};
  return obj38771;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._pr_writer[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj38773 = {};
  return obj38773;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3541__auto__ = d;
    if (and__3541__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4180__auto__ = d == null ? null : d;
    return function() {
      var or__3553__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj38775 = {};
  return obj38775;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = cljs.core._notify_watches[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = cljs.core._add_watch[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._add_watch["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = cljs.core._remove_watch[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj38777 = {};
  return obj38777;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._as_transient[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._as_transient["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj38779 = {};
  return obj38779;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj38781 = {};
  return obj38781;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj38783 = {};
  return obj38783;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj38785 = {};
  return obj38785;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj38787 = {};
  return obj38787;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj38789 = {};
  return obj38789;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._compare[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._compare["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj38791 = {};
  return obj38791;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._drop_first[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._drop_first["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj38793 = {};
  return obj38793;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._chunked_first[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj38795 = {};
  return obj38795;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._chunked_next[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj38797 = {};
  return obj38797;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._name[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._name["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._namespace[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._namespace["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj38799 = {};
  return obj38799;
}();
cljs.core.IReset = function() {
  var obj38801 = {};
  return obj38801;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj38803 = {};
  return obj38803;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__38804 = i + 2;
        var G__38805 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__38804;
        h1 = G__38805;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj38807 = {};
  return obj38807;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__38808 = i + 1;
          var G__38809 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__38808;
          hash = G__38809;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj38813 = {};
      return obj38813;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__38815 = o;
    if (G__38815) {
      var bit__4196__auto__ = G__38815.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4196__auto__ || G__38815.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o == null) {
              return 0;
            } else {
              return cljs.core._hash.call(null, o);
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3541__auto__) {
        return b.ns;
      } else {
        return and__3541__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.compare.call(null, a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3964__auto__ = self__._hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__38817 = null;
  var G__38817__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__38817__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__38817 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__38817__2.call(this, self__, coll);
      case 3:
        return G__38817__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38817.cljs$core$IFn$_invoke$arity$2 = G__38817__2;
  G__38817.cljs$core$IFn$_invoke$arity$3 = G__38817__3;
  return G__38817;
}();
cljs.core.Symbol.prototype.apply = function(self__, args38816) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args38816)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__38819 = value;
  if (G__38819) {
    var bit__4203__auto__ = G__38819.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4203__auto__ || G__38819.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__38819.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__38819);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__38819);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__38821 = coll;
      if (G__38821) {
        var bit__4196__auto__ = G__38821.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4196__auto__ || G__38821.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll) + " is not ISeqable");
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__38823 = coll;
      if (G__38823) {
        var bit__4196__auto__ = G__38823.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4196__auto__ || G__38823.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__38825 = coll;
      if (G__38825) {
        var bit__4196__auto__ = G__38825.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4196__auto__ || G__38825.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__38827 = coll;
      if (G__38827) {
        var bit__4196__auto__ = G__38827.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4196__auto__ || G__38827.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__38828__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__38829 = y;
            var G__38830 = cljs.core.first.call(null, more);
            var G__38831 = cljs.core.next.call(null, more);
            x = G__38829;
            y = G__38830;
            more = G__38831;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__38828 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38828__delegate.call(this, x, y, more);
    };
    G__38828.cljs$lang$maxFixedArity = 2;
    G__38828.cljs$lang$applyTo = function(arglist__38832) {
      var x = cljs.core.first(arglist__38832);
      arglist__38832 = cljs.core.next(arglist__38832);
      var y = cljs.core.first(arglist__38832);
      var more = cljs.core.rest(arglist__38832);
      return G__38828__delegate(x, y, more);
    };
    G__38828.cljs$core$IFn$_invoke$arity$variadic = G__38828__delegate;
    return G__38828;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__38833 = n + 1;
      var G__38834 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__38835 = cljs.core.next.call(null, coll__$1);
      n = G__38833;
      hash_code = G__38834;
      coll__$1 = G__38835;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__38836 = n + 1;
      var G__38837 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__38838 = cljs.core.next.call(null, coll__$1);
      n = G__38836;
      hash_code = G__38837;
      coll__$1 = G__38838;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__38839 = nval;
            var G__38840 = n + 1;
            val = G__38839;
            n = G__38840;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__38841 = nval;
          var G__38842 = n + 1;
          val__$1 = G__38841;
          n = G__38842;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__38843 = nval;
          var G__38844 = n + 1;
          val__$1 = G__38843;
          n = G__38844;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__38845 = nval;
            var G__38846 = n + 1;
            val = G__38845;
            n = G__38846;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__38847 = nval;
          var G__38848 = n + 1;
          val__$1 = G__38847;
          n = G__38848;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__38849 = nval;
          var G__38850 = n + 1;
          val__$1 = G__38849;
          n = G__38850;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__38852 = x;
  if (G__38852) {
    var bit__4203__auto__ = G__38852.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4203__auto__ || G__38852.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__38852.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__38852);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__38852);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__38854 = x;
  if (G__38854) {
    var bit__4203__auto__ = G__38854.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4203__auto__ || G__38854.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__38854.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__38854);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__38854);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__38855 = sn;
      s = G__38855;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__38856__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__38857 = conj.call(null, coll, x);
          var G__38858 = cljs.core.first.call(null, xs);
          var G__38859 = cljs.core.next.call(null, xs);
          coll = G__38857;
          x = G__38858;
          xs = G__38859;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__38856 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38856__delegate.call(this, coll, x, xs);
    };
    G__38856.cljs$lang$maxFixedArity = 2;
    G__38856.cljs$lang$applyTo = function(arglist__38860) {
      var coll = cljs.core.first(arglist__38860);
      arglist__38860 = cljs.core.next(arglist__38860);
      var x = cljs.core.first(arglist__38860);
      var xs = cljs.core.rest(arglist__38860);
      return G__38856__delegate(coll, x, xs);
    };
    G__38856.cljs$core$IFn$_invoke$arity$variadic = G__38856__delegate;
    return G__38856;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__38861 = cljs.core.next.call(null, s);
      var G__38862 = acc + 1;
      s = G__38861;
      acc = G__38862;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__38864 = coll;
      if (G__38864) {
        var bit__4196__auto__ = G__38864.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4196__auto__ || G__38864.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__38865 = cljs.core.next.call(null, coll);
              var G__38866 = n - 1;
              coll = G__38865;
              n = G__38866;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__38867 = cljs.core.next.call(null, coll);
              var G__38868 = n - 1;
              var G__38869 = not_found;
              coll = G__38867;
              n = G__38868;
              not_found = G__38869;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__38874 = coll;
          if (G__38874) {
            var bit__4196__auto__ = G__38874.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4196__auto__ || G__38874.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__38875 = coll;
                  if (G__38875) {
                    var bit__4203__auto__ = G__38875.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4203__auto__ || G__38875.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__38875.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__38875);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__38875);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__38876 = coll;
          if (G__38876) {
            var bit__4196__auto__ = G__38876.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4196__auto__ || G__38876.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__38877 = coll;
                  if (G__38877) {
                    var bit__4203__auto__ = G__38877.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4203__auto__ || G__38877.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__38877.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__38877);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__38877);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__38880 = o;
        if (G__38880) {
          var bit__4196__auto__ = G__38880.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4196__auto__ || G__38880.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__38881 = o;
        if (G__38881) {
          var bit__4196__auto__ = G__38881.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4196__auto__ || G__38881.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__38882__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__38883 = ret;
          var G__38884 = cljs.core.first.call(null, kvs);
          var G__38885 = cljs.core.second.call(null, kvs);
          var G__38886 = cljs.core.nnext.call(null, kvs);
          coll = G__38883;
          k = G__38884;
          v = G__38885;
          kvs = G__38886;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__38882 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__38882__delegate.call(this, coll, k, v, kvs);
    };
    G__38882.cljs$lang$maxFixedArity = 3;
    G__38882.cljs$lang$applyTo = function(arglist__38887) {
      var coll = cljs.core.first(arglist__38887);
      arglist__38887 = cljs.core.next(arglist__38887);
      var k = cljs.core.first(arglist__38887);
      arglist__38887 = cljs.core.next(arglist__38887);
      var v = cljs.core.first(arglist__38887);
      var kvs = cljs.core.rest(arglist__38887);
      return G__38882__delegate(coll, k, v, kvs);
    };
    G__38882.cljs$core$IFn$_invoke$arity$variadic = G__38882__delegate;
    return G__38882;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__38888__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__38889 = ret;
            var G__38890 = cljs.core.first.call(null, ks);
            var G__38891 = cljs.core.next.call(null, ks);
            coll = G__38889;
            k = G__38890;
            ks = G__38891;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__38888 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38888__delegate.call(this, coll, k, ks);
    };
    G__38888.cljs$lang$maxFixedArity = 2;
    G__38888.cljs$lang$applyTo = function(arglist__38892) {
      var coll = cljs.core.first(arglist__38892);
      arglist__38892 = cljs.core.next(arglist__38892);
      var k = cljs.core.first(arglist__38892);
      var ks = cljs.core.rest(arglist__38892);
      return G__38888__delegate(coll, k, ks);
    };
    G__38888.cljs$core$IFn$_invoke$arity$variadic = G__38888__delegate;
    return G__38888;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3553__auto__ = goog.isFunction(f);
  if (or__3553__auto__) {
    return or__3553__auto__;
  } else {
    var G__38896 = f;
    if (G__38896) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto____$1 = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto____$1)) {
          return or__3553__auto____$1;
        } else {
          return G__38896.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__38896.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__38896);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__38896);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/MetaFn");
};
cljs.core.MetaFn.prototype.call = function() {
  var G__38898 = null;
  var G__38898__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__38898__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__38898__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__38898__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__38898__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__38898__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__38898__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__38898__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__38898__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__38898__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__38898__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__38898__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__38898__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__38898__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__38898__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__38898__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__38898__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__38898__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__38898__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__38898__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__38898__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__38898__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__38898 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__38898__1.call(this, self__);
      case 2:
        return G__38898__2.call(this, self__, a);
      case 3:
        return G__38898__3.call(this, self__, a, b);
      case 4:
        return G__38898__4.call(this, self__, a, b, c);
      case 5:
        return G__38898__5.call(this, self__, a, b, c, d);
      case 6:
        return G__38898__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__38898__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__38898__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__38898__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__38898__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__38898__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__38898__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__38898__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__38898__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__38898__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__38898__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__38898__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__38898__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__38898__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__38898__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__38898__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__38898__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38898.cljs$core$IFn$_invoke$arity$1 = G__38898__1;
  G__38898.cljs$core$IFn$_invoke$arity$2 = G__38898__2;
  G__38898.cljs$core$IFn$_invoke$arity$3 = G__38898__3;
  G__38898.cljs$core$IFn$_invoke$arity$4 = G__38898__4;
  G__38898.cljs$core$IFn$_invoke$arity$5 = G__38898__5;
  G__38898.cljs$core$IFn$_invoke$arity$6 = G__38898__6;
  G__38898.cljs$core$IFn$_invoke$arity$7 = G__38898__7;
  G__38898.cljs$core$IFn$_invoke$arity$8 = G__38898__8;
  G__38898.cljs$core$IFn$_invoke$arity$9 = G__38898__9;
  G__38898.cljs$core$IFn$_invoke$arity$10 = G__38898__10;
  G__38898.cljs$core$IFn$_invoke$arity$11 = G__38898__11;
  G__38898.cljs$core$IFn$_invoke$arity$12 = G__38898__12;
  G__38898.cljs$core$IFn$_invoke$arity$13 = G__38898__13;
  G__38898.cljs$core$IFn$_invoke$arity$14 = G__38898__14;
  G__38898.cljs$core$IFn$_invoke$arity$15 = G__38898__15;
  G__38898.cljs$core$IFn$_invoke$arity$16 = G__38898__16;
  G__38898.cljs$core$IFn$_invoke$arity$17 = G__38898__17;
  G__38898.cljs$core$IFn$_invoke$arity$18 = G__38898__18;
  G__38898.cljs$core$IFn$_invoke$arity$19 = G__38898__19;
  G__38898.cljs$core$IFn$_invoke$arity$20 = G__38898__20;
  G__38898.cljs$core$IFn$_invoke$arity$21 = G__38898__21;
  G__38898.cljs$core$IFn$_invoke$arity$22 = G__38898__22;
  return G__38898;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args38897) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args38897)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__38902 = o;
    if (G__38902) {
      var bit__4203__auto__ = G__38902.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4203__auto__ || G__38902.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__38902.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__38902);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__38902);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3541__auto__ = !(o == null);
    if (and__3541__auto__) {
      var G__38906 = o;
      if (G__38906) {
        var bit__4203__auto__ = G__38906.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4203__auto__ || G__38906.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__38906.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__38906);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__38906);
      }
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__38907__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__38908 = ret;
            var G__38909 = cljs.core.first.call(null, ks);
            var G__38910 = cljs.core.next.call(null, ks);
            coll = G__38908;
            k = G__38909;
            ks = G__38910;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__38907 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38907__delegate.call(this, coll, k, ks);
    };
    G__38907.cljs$lang$maxFixedArity = 2;
    G__38907.cljs$lang$applyTo = function(arglist__38911) {
      var coll = cljs.core.first(arglist__38911);
      arglist__38911 = cljs.core.next(arglist__38911);
      var k = cljs.core.first(arglist__38911);
      var ks = cljs.core.rest(arglist__38911);
      return G__38907__delegate(coll, k, ks);
    };
    G__38907.cljs$core$IFn$_invoke$arity$variadic = G__38907__delegate;
    return G__38907;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__38913 = x;
    if (G__38913) {
      var bit__4203__auto__ = G__38913.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4203__auto__ || G__38913.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__38913.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__38913);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__38913);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__38915 = x;
    if (G__38915) {
      var bit__4203__auto__ = G__38915.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4203__auto__ || G__38915.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__38915.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__38915);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__38915);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__38917 = x;
  if (G__38917) {
    var bit__4203__auto__ = G__38917.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4203__auto__ || G__38917.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__38917.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__38917);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__38917);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__38919 = x;
  if (G__38919) {
    var bit__4203__auto__ = G__38919.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4203__auto__ || G__38919.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__38919.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__38919);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__38919);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__38921 = x;
  if (G__38921) {
    var bit__4203__auto__ = G__38921.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4203__auto__ || G__38921.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__38921.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__38921);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__38921);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__38923 = x;
  if (G__38923) {
    var bit__4203__auto__ = G__38923.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4203__auto__ || G__38923.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__38923.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__38923);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__38923);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__38925 = x;
    if (G__38925) {
      var bit__4203__auto__ = G__38925.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4203__auto__ || G__38925.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__38925.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__38925);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__38925);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__38927 = x;
  if (G__38927) {
    var bit__4203__auto__ = G__38927.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4203__auto__ || G__38927.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__38927.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__38927);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__38927);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__38929 = x;
  if (G__38929) {
    var bit__4196__auto__ = G__38929.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4196__auto__ || G__38929.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj38933 = {};
    return obj38933;
  };
  var js_obj__1 = function() {
    var G__38934__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__38934 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__38934__delegate.call(this, keyvals);
    };
    G__38934.cljs$lang$maxFixedArity = 0;
    G__38934.cljs$lang$applyTo = function(arglist__38935) {
      var keyvals = cljs.core.seq(arglist__38935);
      return G__38934__delegate(keyvals);
    };
    G__38934.cljs$core$IFn$_invoke$arity$variadic = G__38934__delegate;
    return G__38934;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__38936 = i__$1 + 1;
      var G__38937 = j__$1 + 1;
      var G__38938 = len__$1 - 1;
      i__$1 = G__38936;
      j__$1 = G__38937;
      len__$1 = G__38938;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__38939 = i__$1 - 1;
      var G__38940 = j__$1 - 1;
      var G__38941 = len__$1 - 1;
      i__$1 = G__38939;
      j__$1 = G__38940;
      len__$1 = G__38941;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj38943 = {};
  return obj38943;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__38945 = s;
    if (G__38945) {
      var bit__4203__auto__ = G__38945.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4203__auto__ || G__38945.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__38945.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__38945);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__38945);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__38947 = s;
  if (G__38947) {
    var bit__4203__auto__ = G__38947.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4203__auto__ || G__38947.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__38947.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__38947);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__38947);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3553__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3553__auto__) {
    return or__3553__auto__;
  } else {
    var G__38951 = f;
    if (G__38951) {
      var bit__4203__auto__ = G__38951.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4203__auto__ || G__38951.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__38951.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__38951);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__38951);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__38952__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__38953 = cljs.core.conj.call(null, s, x__$1);
              var G__38954 = etc;
              s = G__38953;
              xs = G__38954;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__38952 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38952__delegate.call(this, x, y, more);
    };
    G__38952.cljs$lang$maxFixedArity = 2;
    G__38952.cljs$lang$applyTo = function(arglist__38955) {
      var x = cljs.core.first(arglist__38955);
      arglist__38955 = cljs.core.next(arglist__38955);
      var y = cljs.core.first(arglist__38955);
      var more = cljs.core.rest(arglist__38955);
      return G__38952__delegate(x, y, more);
    };
    G__38952.cljs$core$IFn$_invoke$arity$variadic = G__38952__delegate;
    return G__38952;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3553__auto__ = cljs.core.seq.call(null, coll);
    if (or__3553__auto__) {
      return or__3553__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__38957 = x;
            if (G__38957) {
              var bit__4196__auto__ = G__38957.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4196__auto__ || G__38957.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__38958 = xs;
        var G__38959 = ys;
        var G__38960 = len;
        var G__38961 = n + 1;
        xs = G__38958;
        ys = G__38959;
        len = G__38960;
        n = G__38961;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__38962 = nval;
          var G__38963 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__38962;
          coll__$1 = G__38963;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__38966 = coll;
      if (G__38966) {
        var bit__4196__auto__ = G__38966.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4196__auto__ || G__38966.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__38967 = coll;
      if (G__38967) {
        var bit__4196__auto__ = G__38967.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4196__auto__ || G__38967.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.completing = function completing(f) {
  return function() {
    var G__38968 = null;
    var G__38968__0 = function() {
      return f.call(null);
    };
    var G__38968__1 = function(x) {
      return x;
    };
    var G__38968__2 = function(x, y) {
      return f.call(null, x, y);
    };
    G__38968 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__38968__0.call(this);
        case 1:
          return G__38968__1.call(this, x);
        case 2:
          return G__38968__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__38968.cljs$core$IFn$_invoke$arity$0 = G__38968__0;
    G__38968.cljs$core$IFn$_invoke$arity$1 = G__38968__1;
    G__38968.cljs$core$IFn$_invoke$arity$2 = G__38968__2;
    return G__38968;
  }();
};
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, cljs.core.completing.call(null, f));
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    var ret__$1 = f__$1.call(null, cljs.core.reduced_QMARK_.call(null, ret) ? cljs.core.deref.call(null, ret) : ret);
    if (cljs.core.reduced_QMARK_.call(null, ret__$1)) {
      return cljs.core.deref.call(null, ret__$1);
    } else {
      return ret__$1;
    }
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__38969__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__38969 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38969__delegate.call(this, x, y, more);
    };
    G__38969.cljs$lang$maxFixedArity = 2;
    G__38969.cljs$lang$applyTo = function(arglist__38970) {
      var x = cljs.core.first(arglist__38970);
      arglist__38970 = cljs.core.next(arglist__38970);
      var y = cljs.core.first(arglist__38970);
      var more = cljs.core.rest(arglist__38970);
      return G__38969__delegate(x, y, more);
    };
    G__38969.cljs$core$IFn$_invoke$arity$variadic = G__38969__delegate;
    return G__38969;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__38971__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__38971 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38971__delegate.call(this, x, y, more);
    };
    G__38971.cljs$lang$maxFixedArity = 2;
    G__38971.cljs$lang$applyTo = function(arglist__38972) {
      var x = cljs.core.first(arglist__38972);
      arglist__38972 = cljs.core.next(arglist__38972);
      var y = cljs.core.first(arglist__38972);
      var more = cljs.core.rest(arglist__38972);
      return G__38971__delegate(x, y, more);
    };
    G__38971.cljs$core$IFn$_invoke$arity$variadic = G__38971__delegate;
    return G__38971;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__38973__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__38973 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38973__delegate.call(this, x, y, more);
    };
    G__38973.cljs$lang$maxFixedArity = 2;
    G__38973.cljs$lang$applyTo = function(arglist__38974) {
      var x = cljs.core.first(arglist__38974);
      arglist__38974 = cljs.core.next(arglist__38974);
      var y = cljs.core.first(arglist__38974);
      var more = cljs.core.rest(arglist__38974);
      return G__38973__delegate(x, y, more);
    };
    G__38973.cljs$core$IFn$_invoke$arity$variadic = G__38973__delegate;
    return G__38973;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__38975__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__38975 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38975__delegate.call(this, x, y, more);
    };
    G__38975.cljs$lang$maxFixedArity = 2;
    G__38975.cljs$lang$applyTo = function(arglist__38976) {
      var x = cljs.core.first(arglist__38976);
      arglist__38976 = cljs.core.next(arglist__38976);
      var y = cljs.core.first(arglist__38976);
      var more = cljs.core.rest(arglist__38976);
      return G__38975__delegate(x, y, more);
    };
    G__38975.cljs$core$IFn$_invoke$arity$variadic = G__38975__delegate;
    return G__38975;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__38977__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__38978 = y;
            var G__38979 = cljs.core.first.call(null, more);
            var G__38980 = cljs.core.next.call(null, more);
            x = G__38978;
            y = G__38979;
            more = G__38980;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__38977 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38977__delegate.call(this, x, y, more);
    };
    G__38977.cljs$lang$maxFixedArity = 2;
    G__38977.cljs$lang$applyTo = function(arglist__38981) {
      var x = cljs.core.first(arglist__38981);
      arglist__38981 = cljs.core.next(arglist__38981);
      var y = cljs.core.first(arglist__38981);
      var more = cljs.core.rest(arglist__38981);
      return G__38977__delegate(x, y, more);
    };
    G__38977.cljs$core$IFn$_invoke$arity$variadic = G__38977__delegate;
    return G__38977;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__38982__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__38983 = y;
            var G__38984 = cljs.core.first.call(null, more);
            var G__38985 = cljs.core.next.call(null, more);
            x = G__38983;
            y = G__38984;
            more = G__38985;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__38982 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38982__delegate.call(this, x, y, more);
    };
    G__38982.cljs$lang$maxFixedArity = 2;
    G__38982.cljs$lang$applyTo = function(arglist__38986) {
      var x = cljs.core.first(arglist__38986);
      arglist__38986 = cljs.core.next(arglist__38986);
      var y = cljs.core.first(arglist__38986);
      var more = cljs.core.rest(arglist__38986);
      return G__38982__delegate(x, y, more);
    };
    G__38982.cljs$core$IFn$_invoke$arity$variadic = G__38982__delegate;
    return G__38982;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__38987__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__38988 = y;
            var G__38989 = cljs.core.first.call(null, more);
            var G__38990 = cljs.core.next.call(null, more);
            x = G__38988;
            y = G__38989;
            more = G__38990;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__38987 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38987__delegate.call(this, x, y, more);
    };
    G__38987.cljs$lang$maxFixedArity = 2;
    G__38987.cljs$lang$applyTo = function(arglist__38991) {
      var x = cljs.core.first(arglist__38991);
      arglist__38991 = cljs.core.next(arglist__38991);
      var y = cljs.core.first(arglist__38991);
      var more = cljs.core.rest(arglist__38991);
      return G__38987__delegate(x, y, more);
    };
    G__38987.cljs$core$IFn$_invoke$arity$variadic = G__38987__delegate;
    return G__38987;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__38992__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__38993 = y;
            var G__38994 = cljs.core.first.call(null, more);
            var G__38995 = cljs.core.next.call(null, more);
            x = G__38993;
            y = G__38994;
            more = G__38995;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__38992 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38992__delegate.call(this, x, y, more);
    };
    G__38992.cljs$lang$maxFixedArity = 2;
    G__38992.cljs$lang$applyTo = function(arglist__38996) {
      var x = cljs.core.first(arglist__38996);
      arglist__38996 = cljs.core.next(arglist__38996);
      var y = cljs.core.first(arglist__38996);
      var more = cljs.core.rest(arglist__38996);
      return G__38992__delegate(x, y, more);
    };
    G__38992.cljs$core$IFn$_invoke$arity$variadic = G__38992__delegate;
    return G__38992;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3860__auto__ = x;
    var y__3861__auto__ = y;
    return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
  };
  var max__3 = function() {
    var G__38997__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3860__auto__ = x;
        var y__3861__auto__ = y;
        return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
      }(), more);
    };
    var G__38997 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38997__delegate.call(this, x, y, more);
    };
    G__38997.cljs$lang$maxFixedArity = 2;
    G__38997.cljs$lang$applyTo = function(arglist__38998) {
      var x = cljs.core.first(arglist__38998);
      arglist__38998 = cljs.core.next(arglist__38998);
      var y = cljs.core.first(arglist__38998);
      var more = cljs.core.rest(arglist__38998);
      return G__38997__delegate(x, y, more);
    };
    G__38997.cljs$core$IFn$_invoke$arity$variadic = G__38997__delegate;
    return G__38997;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3867__auto__ = x;
    var y__3868__auto__ = y;
    return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
  };
  var min__3 = function() {
    var G__38999__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3867__auto__ = x;
        var y__3868__auto__ = y;
        return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
      }(), more);
    };
    var G__38999 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__38999__delegate.call(this, x, y, more);
    };
    G__38999.cljs$lang$maxFixedArity = 2;
    G__38999.cljs$lang$applyTo = function(arglist__39000) {
      var x = cljs.core.first(arglist__39000);
      arglist__39000 = cljs.core.next(arglist__39000);
      var y = cljs.core.first(arglist__39000);
      var more = cljs.core.rest(arglist__39000);
      return G__38999__delegate(x, y, more);
    };
    G__38999.cljs$core$IFn$_invoke$arity$variadic = G__38999__delegate;
    return G__38999;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__39001__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__39001 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39001__delegate.call(this, x, y, more);
    };
    G__39001.cljs$lang$maxFixedArity = 2;
    G__39001.cljs$lang$applyTo = function(arglist__39002) {
      var x = cljs.core.first(arglist__39002);
      arglist__39002 = cljs.core.next(arglist__39002);
      var y = cljs.core.first(arglist__39002);
      var more = cljs.core.rest(arglist__39002);
      return G__39001__delegate(x, y, more);
    };
    G__39001.cljs$core$IFn$_invoke$arity$variadic = G__39001__delegate;
    return G__39001;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__39003__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__39003 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39003__delegate.call(this, x, y, more);
    };
    G__39003.cljs$lang$maxFixedArity = 2;
    G__39003.cljs$lang$applyTo = function(arglist__39004) {
      var x = cljs.core.first(arglist__39004);
      arglist__39004 = cljs.core.next(arglist__39004);
      var y = cljs.core.first(arglist__39004);
      var more = cljs.core.rest(arglist__39004);
      return G__39003__delegate(x, y, more);
    };
    G__39003.cljs$core$IFn$_invoke$arity$variadic = G__39003__delegate;
    return G__39003;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__39005__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__39005 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39005__delegate.call(this, x, y, more);
    };
    G__39005.cljs$lang$maxFixedArity = 2;
    G__39005.cljs$lang$applyTo = function(arglist__39006) {
      var x = cljs.core.first(arglist__39006);
      arglist__39006 = cljs.core.next(arglist__39006);
      var y = cljs.core.first(arglist__39006);
      var more = cljs.core.rest(arglist__39006);
      return G__39005__delegate(x, y, more);
    };
    G__39005.cljs$core$IFn$_invoke$arity$variadic = G__39005__delegate;
    return G__39005;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__39007__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__39007 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39007__delegate.call(this, x, y, more);
    };
    G__39007.cljs$lang$maxFixedArity = 2;
    G__39007.cljs$lang$applyTo = function(arglist__39008) {
      var x = cljs.core.first(arglist__39008);
      arglist__39008 = cljs.core.next(arglist__39008);
      var y = cljs.core.first(arglist__39008);
      var more = cljs.core.rest(arglist__39008);
      return G__39007__delegate(x, y, more);
    };
    G__39007.cljs$core$IFn$_invoke$arity$variadic = G__39007__delegate;
    return G__39007;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__39009__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__39009 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39009__delegate.call(this, x, y, more);
    };
    G__39009.cljs$lang$maxFixedArity = 2;
    G__39009.cljs$lang$applyTo = function(arglist__39010) {
      var x = cljs.core.first(arglist__39010);
      arglist__39010 = cljs.core.next(arglist__39010);
      var y = cljs.core.first(arglist__39010);
      var more = cljs.core.rest(arglist__39010);
      return G__39009__delegate(x, y, more);
    };
    G__39009.cljs$core$IFn$_invoke$arity$variadic = G__39009__delegate;
    return G__39009;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__39011__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__39011 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39011__delegate.call(this, x, y, more);
    };
    G__39011.cljs$lang$maxFixedArity = 2;
    G__39011.cljs$lang$applyTo = function(arglist__39012) {
      var x = cljs.core.first(arglist__39012);
      arglist__39012 = cljs.core.next(arglist__39012);
      var y = cljs.core.first(arglist__39012);
      var more = cljs.core.rest(arglist__39012);
      return G__39011__delegate(x, y, more);
    };
    G__39011.cljs$core$IFn$_invoke$arity$variadic = G__39011__delegate;
    return G__39011;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__39013__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__39013 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39013__delegate.call(this, x, y, more);
    };
    G__39013.cljs$lang$maxFixedArity = 2;
    G__39013.cljs$lang$applyTo = function(arglist__39014) {
      var x = cljs.core.first(arglist__39014);
      arglist__39014 = cljs.core.next(arglist__39014);
      var y = cljs.core.first(arglist__39014);
      var more = cljs.core.rest(arglist__39014);
      return G__39013__delegate(x, y, more);
    };
    G__39013.cljs$core$IFn$_invoke$arity$variadic = G__39013__delegate;
    return G__39013;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__39015__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__39016 = y;
            var G__39017 = cljs.core.first.call(null, more);
            var G__39018 = cljs.core.next.call(null, more);
            x = G__39016;
            y = G__39017;
            more = G__39018;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__39015 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39015__delegate.call(this, x, y, more);
    };
    G__39015.cljs$lang$maxFixedArity = 2;
    G__39015.cljs$lang$applyTo = function(arglist__39019) {
      var x = cljs.core.first(arglist__39019);
      arglist__39019 = cljs.core.next(arglist__39019);
      var y = cljs.core.first(arglist__39019);
      var more = cljs.core.rest(arglist__39019);
      return G__39015__delegate(x, y, more);
    };
    G__39015.cljs$core$IFn$_invoke$arity$variadic = G__39015__delegate;
    return G__39015;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__39020 = n__$1 - 1;
      var G__39021 = cljs.core.next.call(null, xs);
      n__$1 = G__39020;
      xs = G__39021;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__39022__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__39023 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__39024 = cljs.core.next.call(null, more);
          sb = G__39023;
          more = G__39024;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__39022 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__39022__delegate.call(this, x, ys);
    };
    G__39022.cljs$lang$maxFixedArity = 1;
    G__39022.cljs$lang$applyTo = function(arglist__39025) {
      var x = cljs.core.first(arglist__39025);
      var ys = cljs.core.rest(arglist__39025);
      return G__39022__delegate(x, ys);
    };
    G__39022.cljs$core$IFn$_invoke$arity$variadic = G__39022__delegate;
    return G__39022;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__39026 = cljs.core.next.call(null, xs);
            var G__39027 = cljs.core.next.call(null, ys);
            xs = G__39026;
            ys = G__39027;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__39028 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__39029 = cljs.core.next.call(null, s);
        res = G__39028;
        s = G__39029;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__39030 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__39031 = cljs.core.next.call(null, s);
      h = G__39030;
      s = G__39031;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__39032 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__39033 = cljs.core.next.call(null, s__$1);
      h = G__39032;
      s__$1 = G__39033;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__39040_39046 = cljs.core.seq.call(null, fn_map);
  var chunk__39041_39047 = null;
  var count__39042_39048 = 0;
  var i__39043_39049 = 0;
  while (true) {
    if (i__39043_39049 < count__39042_39048) {
      var vec__39044_39050 = cljs.core._nth.call(null, chunk__39041_39047, i__39043_39049);
      var key_name_39051 = cljs.core.nth.call(null, vec__39044_39050, 0, null);
      var f_39052 = cljs.core.nth.call(null, vec__39044_39050, 1, null);
      var str_name_39053 = cljs.core.name.call(null, key_name_39051);
      obj[str_name_39053] = f_39052;
      var G__39054 = seq__39040_39046;
      var G__39055 = chunk__39041_39047;
      var G__39056 = count__39042_39048;
      var G__39057 = i__39043_39049 + 1;
      seq__39040_39046 = G__39054;
      chunk__39041_39047 = G__39055;
      count__39042_39048 = G__39056;
      i__39043_39049 = G__39057;
      continue;
    } else {
      var temp__4126__auto___39058 = cljs.core.seq.call(null, seq__39040_39046);
      if (temp__4126__auto___39058) {
        var seq__39040_39059__$1 = temp__4126__auto___39058;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__39040_39059__$1)) {
          var c__4309__auto___39060 = cljs.core.chunk_first.call(null, seq__39040_39059__$1);
          var G__39061 = cljs.core.chunk_rest.call(null, seq__39040_39059__$1);
          var G__39062 = c__4309__auto___39060;
          var G__39063 = cljs.core.count.call(null, c__4309__auto___39060);
          var G__39064 = 0;
          seq__39040_39046 = G__39061;
          chunk__39041_39047 = G__39062;
          count__39042_39048 = G__39063;
          i__39043_39049 = G__39064;
          continue;
        } else {
          var vec__39045_39065 = cljs.core.first.call(null, seq__39040_39059__$1);
          var key_name_39066 = cljs.core.nth.call(null, vec__39045_39065, 0, null);
          var f_39067 = cljs.core.nth.call(null, vec__39045_39065, 1, null);
          var str_name_39068 = cljs.core.name.call(null, key_name_39066);
          obj[str_name_39068] = f_39067;
          var G__39069 = cljs.core.next.call(null, seq__39040_39059__$1);
          var G__39070 = null;
          var G__39071 = 0;
          var G__39072 = 0;
          seq__39040_39046 = G__39069;
          chunk__39041_39047 = G__39070;
          count__39042_39048 = G__39071;
          i__39043_39049 = G__39072;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__39074 = coll;
  if (G__39074) {
    var bit__4203__auto__ = G__39074.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4203__auto__ || G__39074.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__39074.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__39074);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__39074);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__39075 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__39075;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__39076 = i - 1;
        var G__39077 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__39076;
        r = G__39077;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__39078) {
    var xs = cljs.core.seq(arglist__39078);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3553__auto__ = coll == null;
    if (or__3553__auto__) {
      return or__3553__auto__;
    } else {
      var G__39082 = coll;
      if (G__39082) {
        var bit__4196__auto__ = G__39082.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4196__auto__ || G__39082.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__39084 = x;
  if (G__39084) {
    var bit__4203__auto__ = G__39084.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4203__auto__ || G__39084.cljs$core$IList$) {
      return true;
    } else {
      if (!G__39084.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__39084);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__39084);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__3964__auto__ = self__._hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__39086 = null;
  var G__39086__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__39086__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__39086 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39086__2.call(this, self__, coll);
      case 3:
        return G__39086__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39086.cljs$core$IFn$_invoke$arity$2 = G__39086__2;
  G__39086.cljs$core$IFn$_invoke$arity$3 = G__39086__3;
  return G__39086;
}();
cljs.core.Keyword.prototype.apply = function(self__, args39085) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args39085)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn);
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__39088 = x;
    if (G__39088) {
      var bit__4196__auto__ = G__39088.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4196__auto__ || G__39088.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error("Doesn't support namespace: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" : null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__39089 = ls.sval();
        ls = G__39089;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__39091 = s;
    if (G__39091) {
      var bit__4196__auto__ = G__39091.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4196__auto__ || G__39091.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__39092 = cljs.core.next.call(null, s__$1);
      s__$1 = G__39092;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_39093 = 0;
  var xs_39094 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_39094) {
      ret[i_39093] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_39094));
      var G__39095 = i_39093 + 1;
      var G__39096 = cljs.core.next.call(null, xs_39094);
      i_39093 = G__39095;
      xs_39094 = G__39096;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__39097 = i + 1;
          var G__39098 = cljs.core.next.call(null, s__$1);
          i = G__39097;
          s__$1 = G__39098;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4409__auto___39099 = size;
      var i_39100 = 0;
      while (true) {
        if (i_39100 < n__4409__auto___39099) {
          a[i_39100] = init_val_or_seq;
          var G__39101 = i_39100 + 1;
          i_39100 = G__39101;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__39102 = i + 1;
          var G__39103 = cljs.core.next.call(null, s__$1);
          i = G__39102;
          s__$1 = G__39103;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4409__auto___39104 = size;
      var i_39105 = 0;
      while (true) {
        if (i_39105 < n__4409__auto___39104) {
          a[i_39105] = init_val_or_seq;
          var G__39106 = i_39105 + 1;
          i_39105 = G__39106;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__39107 = i + 1;
          var G__39108 = cljs.core.next.call(null, s__$1);
          i = G__39107;
          s__$1 = G__39108;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4409__auto___39109 = size;
      var i_39110 = 0;
      while (true) {
        if (i_39110 < n__4409__auto___39109) {
          a[i_39110] = init_val_or_seq;
          var G__39111 = i_39110 + 1;
          i_39110 = G__39111;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__39112 = i + 1;
          var G__39113 = cljs.core.next.call(null, s__$1);
          i = G__39112;
          s__$1 = G__39113;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4409__auto___39114 = size;
      var i_39115 = 0;
      while (true) {
        if (i_39115 < n__4409__auto___39114) {
          a[i_39115] = init_val_or_seq;
          var G__39116 = i_39115 + 1;
          i_39115 = G__39116;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__39117 = cljs.core.next.call(null, s__$1);
        var G__39118 = i - 1;
        var G__39119 = sum + 1;
        s__$1 = G__39117;
        i = G__39118;
        sum = G__39119;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__39120__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__39120 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39120__delegate.call(this, x, y, zs);
    };
    G__39120.cljs$lang$maxFixedArity = 2;
    G__39120.cljs$lang$applyTo = function(arglist__39121) {
      var x = cljs.core.first(arglist__39121);
      arglist__39121 = cljs.core.next(arglist__39121);
      var y = cljs.core.first(arglist__39121);
      var zs = cljs.core.rest(arglist__39121);
      return G__39120__delegate(x, y, zs);
    };
    G__39120.cljs$core$IFn$_invoke$arity$variadic = G__39120__delegate;
    return G__39120;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__39122__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__39122 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__39122__delegate.call(this, a, b, c, d, more);
    };
    G__39122.cljs$lang$maxFixedArity = 4;
    G__39122.cljs$lang$applyTo = function(arglist__39123) {
      var a = cljs.core.first(arglist__39123);
      arglist__39123 = cljs.core.next(arglist__39123);
      var b = cljs.core.first(arglist__39123);
      arglist__39123 = cljs.core.next(arglist__39123);
      var c = cljs.core.first(arglist__39123);
      arglist__39123 = cljs.core.next(arglist__39123);
      var d = cljs.core.first(arglist__39123);
      var more = cljs.core.rest(arglist__39123);
      return G__39122__delegate(a, b, c, d, more);
    };
    G__39122.cljs$core$IFn$_invoke$arity$variadic = G__39122__delegate;
    return G__39122;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__39124__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__39125 = ntcoll;
          var G__39126 = cljs.core.first.call(null, vals);
          var G__39127 = cljs.core.next.call(null, vals);
          tcoll = G__39125;
          val = G__39126;
          vals = G__39127;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__39124 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39124__delegate.call(this, tcoll, val, vals);
    };
    G__39124.cljs$lang$maxFixedArity = 2;
    G__39124.cljs$lang$applyTo = function(arglist__39128) {
      var tcoll = cljs.core.first(arglist__39128);
      arglist__39128 = cljs.core.next(arglist__39128);
      var val = cljs.core.first(arglist__39128);
      var vals = cljs.core.rest(arglist__39128);
      return G__39124__delegate(tcoll, val, vals);
    };
    G__39124.cljs$core$IFn$_invoke$arity$variadic = G__39124__delegate;
    return G__39124;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__39129__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__39130 = ntcoll;
          var G__39131 = cljs.core.first.call(null, kvs);
          var G__39132 = cljs.core.second.call(null, kvs);
          var G__39133 = cljs.core.nnext.call(null, kvs);
          tcoll = G__39130;
          key = G__39131;
          val = G__39132;
          kvs = G__39133;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__39129 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__39129__delegate.call(this, tcoll, key, val, kvs);
    };
    G__39129.cljs$lang$maxFixedArity = 3;
    G__39129.cljs$lang$applyTo = function(arglist__39134) {
      var tcoll = cljs.core.first(arglist__39134);
      arglist__39134 = cljs.core.next(arglist__39134);
      var key = cljs.core.first(arglist__39134);
      arglist__39134 = cljs.core.next(arglist__39134);
      var val = cljs.core.first(arglist__39134);
      var kvs = cljs.core.rest(arglist__39134);
      return G__39129__delegate(tcoll, key, val, kvs);
    };
    G__39129.cljs$core$IFn$_invoke$arity$variadic = G__39129__delegate;
    return G__39129;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__39135__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__39136 = ntcoll;
          var G__39137 = cljs.core.first.call(null, ks);
          var G__39138 = cljs.core.next.call(null, ks);
          tcoll = G__39136;
          key = G__39137;
          ks = G__39138;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__39135 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39135__delegate.call(this, tcoll, key, ks);
    };
    G__39135.cljs$lang$maxFixedArity = 2;
    G__39135.cljs$lang$applyTo = function(arglist__39139) {
      var tcoll = cljs.core.first(arglist__39139);
      arglist__39139 = cljs.core.next(arglist__39139);
      var key = cljs.core.first(arglist__39139);
      var ks = cljs.core.rest(arglist__39139);
      return G__39135__delegate(tcoll, key, ks);
    };
    G__39135.cljs$core$IFn$_invoke$arity$variadic = G__39135__delegate;
    return G__39135;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__39140__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__39141 = ntcoll;
          var G__39142 = cljs.core.first.call(null, vals);
          var G__39143 = cljs.core.next.call(null, vals);
          tcoll = G__39141;
          val = G__39142;
          vals = G__39143;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__39140 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39140__delegate.call(this, tcoll, val, vals);
    };
    G__39140.cljs$lang$maxFixedArity = 2;
    G__39140.cljs$lang$applyTo = function(arglist__39144) {
      var tcoll = cljs.core.first(arglist__39144);
      arglist__39144 = cljs.core.next(arglist__39144);
      var val = cljs.core.first(arglist__39144);
      var vals = cljs.core.rest(arglist__39144);
      return G__39140__delegate(tcoll, val, vals);
    };
    G__39140.cljs$core$IFn$_invoke$arity$variadic = G__39140__delegate;
    return G__39140;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4453 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4453);
      } else {
        return f.call(null, a4453);
      }
    } else {
      var b4454 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4453, b4454);
        } else {
          return f.call(null, a4453, b4454);
        }
      } else {
        var c4455 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4453, b4454, c4455);
          } else {
            return f.call(null, a4453, b4454, c4455);
          }
        } else {
          var d4456 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4453, b4454, c4455, d4456);
            } else {
              return f.call(null, a4453, b4454, c4455, d4456);
            }
          } else {
            var e4457 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4453, b4454, c4455, d4456, e4457);
              } else {
                return f.call(null, a4453, b4454, c4455, d4456, e4457);
              }
            } else {
              var f4458 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4453, b4454, c4455, d4456, e4457, f4458);
                } else {
                  return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458);
                }
              } else {
                var g4459 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4453, b4454, c4455, d4456, e4457, f4458, g4459);
                  } else {
                    return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459);
                  }
                } else {
                  var h4460 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460);
                    } else {
                      return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460);
                    }
                  } else {
                    var i4461 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461);
                      } else {
                        return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461);
                      }
                    } else {
                      var j4462 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462);
                        } else {
                          return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462);
                        }
                      } else {
                        var k4463 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463);
                          } else {
                            return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463);
                          }
                        } else {
                          var l4464 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464);
                            } else {
                              return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464);
                            }
                          } else {
                            var m4465 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465);
                              } else {
                                return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465);
                              }
                            } else {
                              var n4466 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466);
                                } else {
                                  return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466);
                                }
                              } else {
                                var o4467 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467);
                                  } else {
                                    return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467);
                                  }
                                } else {
                                  var p4468 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468);
                                    } else {
                                      return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468);
                                    }
                                  } else {
                                    var q4469 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469);
                                      } else {
                                        return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469);
                                      }
                                    } else {
                                      var r4470 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470);
                                        } else {
                                          return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470);
                                        }
                                      } else {
                                        var s4471 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470, s4471);
                                          } else {
                                            return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470, s4471);
                                          }
                                        } else {
                                          var t4472 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470, s4471, t4472);
                                            } else {
                                              return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470, s4471, t4472);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__39145__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__39145 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__39145__delegate.call(this, f, a, b, c, d, args);
    };
    G__39145.cljs$lang$maxFixedArity = 5;
    G__39145.cljs$lang$applyTo = function(arglist__39146) {
      var f = cljs.core.first(arglist__39146);
      arglist__39146 = cljs.core.next(arglist__39146);
      var a = cljs.core.first(arglist__39146);
      arglist__39146 = cljs.core.next(arglist__39146);
      var b = cljs.core.first(arglist__39146);
      arglist__39146 = cljs.core.next(arglist__39146);
      var c = cljs.core.first(arglist__39146);
      arglist__39146 = cljs.core.next(arglist__39146);
      var d = cljs.core.first(arglist__39146);
      var args = cljs.core.rest(arglist__39146);
      return G__39145__delegate(f, a, b, c, d, args);
    };
    G__39145.cljs$core$IFn$_invoke$arity$variadic = G__39145__delegate;
    return G__39145;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__39147__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__39147 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__39147__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__39147.cljs$lang$maxFixedArity = 6;
    G__39147.cljs$lang$applyTo = function(arglist__39148) {
      var obj = cljs.core.first(arglist__39148);
      arglist__39148 = cljs.core.next(arglist__39148);
      var f = cljs.core.first(arglist__39148);
      arglist__39148 = cljs.core.next(arglist__39148);
      var a = cljs.core.first(arglist__39148);
      arglist__39148 = cljs.core.next(arglist__39148);
      var b = cljs.core.first(arglist__39148);
      arglist__39148 = cljs.core.next(arglist__39148);
      var c = cljs.core.first(arglist__39148);
      arglist__39148 = cljs.core.next(arglist__39148);
      var d = cljs.core.first(arglist__39148);
      var args = cljs.core.rest(arglist__39148);
      return G__39147__delegate(obj, f, a, b, c, d, args);
    };
    G__39147.cljs$core$IFn$_invoke$arity$variadic = G__39147__delegate;
    return G__39147;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__39149__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__39149 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39149__delegate.call(this, x, y, more);
    };
    G__39149.cljs$lang$maxFixedArity = 2;
    G__39149.cljs$lang$applyTo = function(arglist__39150) {
      var x = cljs.core.first(arglist__39150);
      arglist__39150 = cljs.core.next(arglist__39150);
      var y = cljs.core.first(arglist__39150);
      var more = cljs.core.rest(arglist__39150);
      return G__39149__delegate(x, y, more);
    };
    G__39149.cljs$core$IFn$_invoke$arity$variadic = G__39149__delegate;
    return G__39149;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t39154 !== "undefined") {
  } else {
    cljs.core.t39154 = function(nil_iter, meta39155) {
      this.nil_iter = nil_iter;
      this.meta39155 = meta39155;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t39154.cljs$lang$type = true;
    cljs.core.t39154.cljs$lang$ctorStr = "cljs.core/t39154";
    cljs.core.t39154.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/t39154");
    };
    cljs.core.t39154.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t39154.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t39154.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t39154.prototype.cljs$core$IMeta$_meta$arity$1 = function(_39156) {
      var self__ = this;
      var _39156__$1 = this;
      return self__.meta39155;
    };
    cljs.core.t39154.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_39156, meta39155__$1) {
      var self__ = this;
      var _39156__$1 = this;
      return new cljs.core.t39154(self__.nil_iter, meta39155__$1);
    };
    cljs.core.__GT_t39154 = function __GT_t39154(nil_iter__$1, meta39155) {
      return new cljs.core.t39154(nil_iter__$1, meta39155);
    };
  }
  return new cljs.core.t39154(nil_iter, null);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/StringIter");
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayIter");
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/SeqIter");
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq.call(null, self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next.call(null, self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not.call(null, this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first.call(null, self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        return cljs.core.seq_iter.call(null, coll);
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Stepper");
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = !(lt.stepper == null);
      if (and__3541__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3541__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/MultiStepper");
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__39157 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__39157;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4409__auto___39158 = self__.iters.length;
  var i_39159 = 0;
  while (true) {
    if (i_39159 < n__4409__auto___39158) {
      cljs.core.next[i_39159] = self__.iters[i_39159].next();
      var G__39160 = i_39159 + 1;
      i_39159 = G__39160;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var _ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = !(lt.stepper == null);
      if (and__3541__auto__) {
        return cljs.core.iter.hasNext();
      } else {
        return and__3541__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, cljs.core.apply.call(null, self__.xform, cljs.core.cons.call(null, lt, cljs.core.iter.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform, iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/LazyTransformer");
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__39161_39165 = cljs.core.seq.call(null, colls);
  var chunk__39162_39166 = null;
  var count__39163_39167 = 0;
  var i__39164_39168 = 0;
  while (true) {
    if (i__39164_39168 < count__39163_39167) {
      var coll_39169 = cljs.core._nth.call(null, chunk__39162_39166, i__39164_39168);
      iters.push(cljs.core.iter.call(null, coll_39169));
      var G__39170 = seq__39161_39165;
      var G__39171 = chunk__39162_39166;
      var G__39172 = count__39163_39167;
      var G__39173 = i__39164_39168 + 1;
      seq__39161_39165 = G__39170;
      chunk__39162_39166 = G__39171;
      count__39163_39167 = G__39172;
      i__39164_39168 = G__39173;
      continue;
    } else {
      var temp__4126__auto___39174 = cljs.core.seq.call(null, seq__39161_39165);
      if (temp__4126__auto___39174) {
        var seq__39161_39175__$1 = temp__4126__auto___39174;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__39161_39175__$1)) {
          var c__4309__auto___39176 = cljs.core.chunk_first.call(null, seq__39161_39175__$1);
          var G__39177 = cljs.core.chunk_rest.call(null, seq__39161_39175__$1);
          var G__39178 = c__4309__auto___39176;
          var G__39179 = cljs.core.count.call(null, c__4309__auto___39176);
          var G__39180 = 0;
          seq__39161_39165 = G__39177;
          chunk__39162_39166 = G__39178;
          count__39163_39167 = G__39179;
          i__39164_39168 = G__39180;
          continue;
        } else {
          var coll_39181 = cljs.core.first.call(null, seq__39161_39175__$1);
          iters.push(cljs.core.iter.call(null, coll_39181));
          var G__39182 = cljs.core.next.call(null, seq__39161_39175__$1);
          var G__39183 = null;
          var G__39184 = 0;
          var G__39185 = 0;
          seq__39161_39165 = G__39182;
          chunk__39162_39166 = G__39183;
          count__39163_39167 = G__39184;
          i__39164_39168 = G__39185;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3553__auto__ = cljs.core.seq.call(null, coll);
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__39186__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__39186 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39186__delegate.call(this, xform, coll, colls);
    };
    G__39186.cljs$lang$maxFixedArity = 2;
    G__39186.cljs$lang$applyTo = function(arglist__39187) {
      var xform = cljs.core.first(arglist__39187);
      arglist__39187 = cljs.core.next(arglist__39187);
      var coll = cljs.core.first(arglist__39187);
      var colls = cljs.core.rest(arglist__39187);
      return G__39186__delegate(xform, coll, colls);
    };
    G__39186.cljs$core$IFn$_invoke$arity$variadic = G__39186__delegate;
    return G__39186;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__39188 = pred;
        var G__39189 = cljs.core.next.call(null, coll);
        pred = G__39188;
        coll = G__39189;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3553__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        var G__39190 = pred;
        var G__39191 = cljs.core.next.call(null, coll);
        pred = G__39190;
        coll = G__39191;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error("Argument must be an integer: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__39192 = null;
    var G__39192__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__39192__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__39192__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__39192__3 = function() {
      var G__39193__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__39193 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__39193__delegate.call(this, x, y, zs);
      };
      G__39193.cljs$lang$maxFixedArity = 2;
      G__39193.cljs$lang$applyTo = function(arglist__39194) {
        var x = cljs.core.first(arglist__39194);
        arglist__39194 = cljs.core.next(arglist__39194);
        var y = cljs.core.first(arglist__39194);
        var zs = cljs.core.rest(arglist__39194);
        return G__39193__delegate(x, y, zs);
      };
      G__39193.cljs$core$IFn$_invoke$arity$variadic = G__39193__delegate;
      return G__39193;
    }();
    G__39192 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__39192__0.call(this);
        case 1:
          return G__39192__1.call(this, x);
        case 2:
          return G__39192__2.call(this, x, y);
        default:
          return G__39192__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__39192.cljs$lang$maxFixedArity = 2;
    G__39192.cljs$lang$applyTo = G__39192__3.cljs$lang$applyTo;
    G__39192.cljs$core$IFn$_invoke$arity$0 = G__39192__0;
    G__39192.cljs$core$IFn$_invoke$arity$1 = G__39192__1;
    G__39192.cljs$core$IFn$_invoke$arity$2 = G__39192__2;
    G__39192.cljs$core$IFn$_invoke$arity$variadic = G__39192__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__39192;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__39195__delegate = function(args) {
      return x;
    };
    var G__39195 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__39195__delegate.call(this, args);
    };
    G__39195.cljs$lang$maxFixedArity = 0;
    G__39195.cljs$lang$applyTo = function(arglist__39196) {
      var args = cljs.core.seq(arglist__39196);
      return G__39195__delegate(args);
    };
    G__39195.cljs$core$IFn$_invoke$arity$variadic = G__39195__delegate;
    return G__39195;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__39197 = null;
      var G__39197__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__39197__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__39197__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__39197__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__39197__4 = function() {
        var G__39198__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__39198 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__39198__delegate.call(this, x, y, z, args);
        };
        G__39198.cljs$lang$maxFixedArity = 3;
        G__39198.cljs$lang$applyTo = function(arglist__39199) {
          var x = cljs.core.first(arglist__39199);
          arglist__39199 = cljs.core.next(arglist__39199);
          var y = cljs.core.first(arglist__39199);
          arglist__39199 = cljs.core.next(arglist__39199);
          var z = cljs.core.first(arglist__39199);
          var args = cljs.core.rest(arglist__39199);
          return G__39198__delegate(x, y, z, args);
        };
        G__39198.cljs$core$IFn$_invoke$arity$variadic = G__39198__delegate;
        return G__39198;
      }();
      G__39197 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__39197__0.call(this);
          case 1:
            return G__39197__1.call(this, x);
          case 2:
            return G__39197__2.call(this, x, y);
          case 3:
            return G__39197__3.call(this, x, y, z);
          default:
            return G__39197__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__39197.cljs$lang$maxFixedArity = 3;
      G__39197.cljs$lang$applyTo = G__39197__4.cljs$lang$applyTo;
      G__39197.cljs$core$IFn$_invoke$arity$0 = G__39197__0;
      G__39197.cljs$core$IFn$_invoke$arity$1 = G__39197__1;
      G__39197.cljs$core$IFn$_invoke$arity$2 = G__39197__2;
      G__39197.cljs$core$IFn$_invoke$arity$3 = G__39197__3;
      G__39197.cljs$core$IFn$_invoke$arity$variadic = G__39197__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__39197;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__39200 = null;
      var G__39200__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__39200__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__39200__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__39200__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__39200__4 = function() {
        var G__39201__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__39201 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__39201__delegate.call(this, x, y, z, args);
        };
        G__39201.cljs$lang$maxFixedArity = 3;
        G__39201.cljs$lang$applyTo = function(arglist__39202) {
          var x = cljs.core.first(arglist__39202);
          arglist__39202 = cljs.core.next(arglist__39202);
          var y = cljs.core.first(arglist__39202);
          arglist__39202 = cljs.core.next(arglist__39202);
          var z = cljs.core.first(arglist__39202);
          var args = cljs.core.rest(arglist__39202);
          return G__39201__delegate(x, y, z, args);
        };
        G__39201.cljs$core$IFn$_invoke$arity$variadic = G__39201__delegate;
        return G__39201;
      }();
      G__39200 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__39200__0.call(this);
          case 1:
            return G__39200__1.call(this, x);
          case 2:
            return G__39200__2.call(this, x, y);
          case 3:
            return G__39200__3.call(this, x, y, z);
          default:
            return G__39200__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__39200.cljs$lang$maxFixedArity = 3;
      G__39200.cljs$lang$applyTo = G__39200__4.cljs$lang$applyTo;
      G__39200.cljs$core$IFn$_invoke$arity$0 = G__39200__0;
      G__39200.cljs$core$IFn$_invoke$arity$1 = G__39200__1;
      G__39200.cljs$core$IFn$_invoke$arity$2 = G__39200__2;
      G__39200.cljs$core$IFn$_invoke$arity$3 = G__39200__3;
      G__39200.cljs$core$IFn$_invoke$arity$variadic = G__39200__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__39200;
    }();
  };
  var comp__4 = function() {
    var G__39203__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__39204__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__39205 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__39206 = cljs.core.next.call(null, fs__$2);
                ret = G__39205;
                fs__$2 = G__39206;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__39204 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__39204__delegate.call(this, args);
          };
          G__39204.cljs$lang$maxFixedArity = 0;
          G__39204.cljs$lang$applyTo = function(arglist__39207) {
            var args = cljs.core.seq(arglist__39207);
            return G__39204__delegate(args);
          };
          G__39204.cljs$core$IFn$_invoke$arity$variadic = G__39204__delegate;
          return G__39204;
        }();
      }(fs__$1);
    };
    var G__39203 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__39203__delegate.call(this, f1, f2, f3, fs);
    };
    G__39203.cljs$lang$maxFixedArity = 3;
    G__39203.cljs$lang$applyTo = function(arglist__39208) {
      var f1 = cljs.core.first(arglist__39208);
      arglist__39208 = cljs.core.next(arglist__39208);
      var f2 = cljs.core.first(arglist__39208);
      arglist__39208 = cljs.core.next(arglist__39208);
      var f3 = cljs.core.first(arglist__39208);
      var fs = cljs.core.rest(arglist__39208);
      return G__39203__delegate(f1, f2, f3, fs);
    };
    G__39203.cljs$core$IFn$_invoke$arity$variadic = G__39203__delegate;
    return G__39203;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__39209__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__39209 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__39209__delegate.call(this, args);
      };
      G__39209.cljs$lang$maxFixedArity = 0;
      G__39209.cljs$lang$applyTo = function(arglist__39210) {
        var args = cljs.core.seq(arglist__39210);
        return G__39209__delegate(args);
      };
      G__39209.cljs$core$IFn$_invoke$arity$variadic = G__39209__delegate;
      return G__39209;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__39211__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__39211 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__39211__delegate.call(this, args);
      };
      G__39211.cljs$lang$maxFixedArity = 0;
      G__39211.cljs$lang$applyTo = function(arglist__39212) {
        var args = cljs.core.seq(arglist__39212);
        return G__39211__delegate(args);
      };
      G__39211.cljs$core$IFn$_invoke$arity$variadic = G__39211__delegate;
      return G__39211;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__39213__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__39213 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__39213__delegate.call(this, args);
      };
      G__39213.cljs$lang$maxFixedArity = 0;
      G__39213.cljs$lang$applyTo = function(arglist__39214) {
        var args = cljs.core.seq(arglist__39214);
        return G__39213__delegate(args);
      };
      G__39213.cljs$core$IFn$_invoke$arity$variadic = G__39213__delegate;
      return G__39213;
    }();
  };
  var partial__5 = function() {
    var G__39215__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__39216__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__39216 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__39216__delegate.call(this, args);
        };
        G__39216.cljs$lang$maxFixedArity = 0;
        G__39216.cljs$lang$applyTo = function(arglist__39217) {
          var args = cljs.core.seq(arglist__39217);
          return G__39216__delegate(args);
        };
        G__39216.cljs$core$IFn$_invoke$arity$variadic = G__39216__delegate;
        return G__39216;
      }();
    };
    var G__39215 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__39215__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__39215.cljs$lang$maxFixedArity = 4;
    G__39215.cljs$lang$applyTo = function(arglist__39218) {
      var f = cljs.core.first(arglist__39218);
      arglist__39218 = cljs.core.next(arglist__39218);
      var arg1 = cljs.core.first(arglist__39218);
      arglist__39218 = cljs.core.next(arglist__39218);
      var arg2 = cljs.core.first(arglist__39218);
      arglist__39218 = cljs.core.next(arglist__39218);
      var arg3 = cljs.core.first(arglist__39218);
      var more = cljs.core.rest(arglist__39218);
      return G__39215__delegate(f, arg1, arg2, arg3, more);
    };
    G__39215.cljs$core$IFn$_invoke$arity$variadic = G__39215__delegate;
    return G__39215;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__39219 = null;
      var G__39219__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__39219__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__39219__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__39219__4 = function() {
        var G__39220__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__39220 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__39220__delegate.call(this, a, b, c, ds);
        };
        G__39220.cljs$lang$maxFixedArity = 3;
        G__39220.cljs$lang$applyTo = function(arglist__39221) {
          var a = cljs.core.first(arglist__39221);
          arglist__39221 = cljs.core.next(arglist__39221);
          var b = cljs.core.first(arglist__39221);
          arglist__39221 = cljs.core.next(arglist__39221);
          var c = cljs.core.first(arglist__39221);
          var ds = cljs.core.rest(arglist__39221);
          return G__39220__delegate(a, b, c, ds);
        };
        G__39220.cljs$core$IFn$_invoke$arity$variadic = G__39220__delegate;
        return G__39220;
      }();
      G__39219 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__39219__1.call(this, a);
          case 2:
            return G__39219__2.call(this, a, b);
          case 3:
            return G__39219__3.call(this, a, b, c);
          default:
            return G__39219__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__39219.cljs$lang$maxFixedArity = 3;
      G__39219.cljs$lang$applyTo = G__39219__4.cljs$lang$applyTo;
      G__39219.cljs$core$IFn$_invoke$arity$1 = G__39219__1;
      G__39219.cljs$core$IFn$_invoke$arity$2 = G__39219__2;
      G__39219.cljs$core$IFn$_invoke$arity$3 = G__39219__3;
      G__39219.cljs$core$IFn$_invoke$arity$variadic = G__39219__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__39219;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__39222 = null;
      var G__39222__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__39222__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__39222__4 = function() {
        var G__39223__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__39223 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__39223__delegate.call(this, a, b, c, ds);
        };
        G__39223.cljs$lang$maxFixedArity = 3;
        G__39223.cljs$lang$applyTo = function(arglist__39224) {
          var a = cljs.core.first(arglist__39224);
          arglist__39224 = cljs.core.next(arglist__39224);
          var b = cljs.core.first(arglist__39224);
          arglist__39224 = cljs.core.next(arglist__39224);
          var c = cljs.core.first(arglist__39224);
          var ds = cljs.core.rest(arglist__39224);
          return G__39223__delegate(a, b, c, ds);
        };
        G__39223.cljs$core$IFn$_invoke$arity$variadic = G__39223__delegate;
        return G__39223;
      }();
      G__39222 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__39222__2.call(this, a, b);
          case 3:
            return G__39222__3.call(this, a, b, c);
          default:
            return G__39222__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__39222.cljs$lang$maxFixedArity = 3;
      G__39222.cljs$lang$applyTo = G__39222__4.cljs$lang$applyTo;
      G__39222.cljs$core$IFn$_invoke$arity$2 = G__39222__2;
      G__39222.cljs$core$IFn$_invoke$arity$3 = G__39222__3;
      G__39222.cljs$core$IFn$_invoke$arity$variadic = G__39222__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__39222;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__39225 = null;
      var G__39225__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__39225__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__39225__4 = function() {
        var G__39226__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__39226 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__39226__delegate.call(this, a, b, c, ds);
        };
        G__39226.cljs$lang$maxFixedArity = 3;
        G__39226.cljs$lang$applyTo = function(arglist__39227) {
          var a = cljs.core.first(arglist__39227);
          arglist__39227 = cljs.core.next(arglist__39227);
          var b = cljs.core.first(arglist__39227);
          arglist__39227 = cljs.core.next(arglist__39227);
          var c = cljs.core.first(arglist__39227);
          var ds = cljs.core.rest(arglist__39227);
          return G__39226__delegate(a, b, c, ds);
        };
        G__39226.cljs$core$IFn$_invoke$arity$variadic = G__39226__delegate;
        return G__39226;
      }();
      G__39225 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__39225__2.call(this, a, b);
          case 3:
            return G__39225__3.call(this, a, b, c);
          default:
            return G__39225__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__39225.cljs$lang$maxFixedArity = 3;
      G__39225.cljs$lang$applyTo = G__39225__4.cljs$lang$applyTo;
      G__39225.cljs$core$IFn$_invoke$arity$2 = G__39225__2;
      G__39225.cljs$core$IFn$_invoke$arity$3 = G__39225__3;
      G__39225.cljs$core$IFn$_invoke$arity$variadic = G__39225__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__39225;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4409__auto___39228 = size;
          var i_39229 = 0;
          while (true) {
            if (i_39229 < n__4409__auto___39228) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_39229, cljs.core._nth.call(null, c, i_39229)));
              var G__39230 = i_39229 + 1;
              i_39229 = G__39230;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(f1) {
      return function() {
        var G__39231 = null;
        var G__39231__0 = function() {
          return f1.call(null);
        };
        var G__39231__1 = function(result) {
          return f1.call(null, result);
        };
        var G__39231__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return f1.call(null, result, v);
          }
        };
        G__39231 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__39231__0.call(this);
            case 1:
              return G__39231__1.call(this, result);
            case 2:
              return G__39231__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__39231.cljs$core$IFn$_invoke$arity$0 = G__39231__0;
        G__39231.cljs$core$IFn$_invoke$arity$1 = G__39231__1;
        G__39231.cljs$core$IFn$_invoke$arity$2 = G__39231__2;
        return G__39231;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4409__auto___39232 = size;
          var i_39233 = 0;
          while (true) {
            if (i_39233 < n__4409__auto___39232) {
              var x_39234 = f.call(null, cljs.core._nth.call(null, c, i_39233));
              if (x_39234 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_39234);
              }
              var G__39235 = i_39233 + 1;
              i_39233 = G__39235;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__39236 = cljs.core.seq.call(null, self__.watches);
  var chunk__39237 = null;
  var count__39238 = 0;
  var i__39239 = 0;
  while (true) {
    if (i__39239 < count__39238) {
      var vec__39240 = cljs.core._nth.call(null, chunk__39237, i__39239);
      var key = cljs.core.nth.call(null, vec__39240, 0, null);
      var f = cljs.core.nth.call(null, vec__39240, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__39242 = seq__39236;
      var G__39243 = chunk__39237;
      var G__39244 = count__39238;
      var G__39245 = i__39239 + 1;
      seq__39236 = G__39242;
      chunk__39237 = G__39243;
      count__39238 = G__39244;
      i__39239 = G__39245;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__39236);
      if (temp__4126__auto__) {
        var seq__39236__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__39236__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__39236__$1);
          var G__39246 = cljs.core.chunk_rest.call(null, seq__39236__$1);
          var G__39247 = c__4309__auto__;
          var G__39248 = cljs.core.count.call(null, c__4309__auto__);
          var G__39249 = 0;
          seq__39236 = G__39246;
          chunk__39237 = G__39247;
          count__39238 = G__39248;
          i__39239 = G__39249;
          continue;
        } else {
          var vec__39241 = cljs.core.first.call(null, seq__39236__$1);
          var key = cljs.core.nth.call(null, vec__39241, 0, null);
          var f = cljs.core.nth.call(null, vec__39241, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__39250 = cljs.core.next.call(null, seq__39236__$1);
          var G__39251 = null;
          var G__39252 = 0;
          var G__39253 = 0;
          seq__39236 = G__39250;
          chunk__39237 = G__39251;
          count__39238 = G__39252;
          i__39239 = G__39253;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__39257__delegate = function(x, p__39254) {
      var map__39256 = p__39254;
      var map__39256__$1 = cljs.core.seq_QMARK_.call(null, map__39256) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39256) : map__39256;
      var validator = cljs.core.get.call(null, map__39256__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__39256__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__39257 = function(x, var_args) {
      var p__39254 = null;
      if (arguments.length > 1) {
        p__39254 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__39257__delegate.call(this, x, p__39254);
    };
    G__39257.cljs$lang$maxFixedArity = 1;
    G__39257.cljs$lang$applyTo = function(arglist__39258) {
      var x = cljs.core.first(arglist__39258);
      var p__39254 = cljs.core.rest(arglist__39258);
      return G__39257__delegate(x, p__39254);
    };
    G__39257.cljs$core$IFn$_invoke$arity$variadic = G__39257__delegate;
    return G__39257;
  }();
  atom = function(x, var_args) {
    var p__39254 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error("Assert failed: Validator rejected reference state\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null)))));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__39259__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__39259 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__39259__delegate.call(this, a, f, x, y, more);
    };
    G__39259.cljs$lang$maxFixedArity = 4;
    G__39259.cljs$lang$applyTo = function(arglist__39260) {
      var a = cljs.core.first(arglist__39260);
      arglist__39260 = cljs.core.next(arglist__39260);
      var f = cljs.core.first(arglist__39260);
      arglist__39260 = cljs.core.next(arglist__39260);
      var x = cljs.core.first(arglist__39260);
      arglist__39260 = cljs.core.next(arglist__39260);
      var y = cljs.core.first(arglist__39260);
      var more = cljs.core.rest(arglist__39260);
      return G__39259__delegate(a, f, x, y, more);
    };
    G__39259.cljs$core$IFn$_invoke$arity$variadic = G__39259__delegate;
    return G__39259;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__39261 = null;
          var G__39261__0 = function() {
            return f1.call(null);
          };
          var G__39261__1 = function(result) {
            return f1.call(null, result);
          };
          var G__39261__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return f1.call(null, result, v);
            }
          };
          G__39261 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__39261__0.call(this);
              case 1:
                return G__39261__1.call(this, result);
              case 2:
                return G__39261__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__39261.cljs$core$IFn$_invoke$arity$0 = G__39261__0;
          G__39261.cljs$core$IFn$_invoke$arity$1 = G__39261__1;
          G__39261.cljs$core$IFn$_invoke$arity$2 = G__39261__2;
          return G__39261;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4409__auto___39262 = size;
            var i_39263 = 0;
            while (true) {
              if (i_39263 < n__4409__auto___39262) {
                var x_39264 = f.call(null, idx + i_39263, cljs.core._nth.call(null, c, i_39263));
                if (x_39264 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_39264);
                }
                var G__39265 = i_39263 + 1;
                i_39263 = G__39265;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            return p.call(null, y);
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__39272__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__39272 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__39272__delegate.call(this, x, y, z, args);
        };
        G__39272.cljs$lang$maxFixedArity = 3;
        G__39272.cljs$lang$applyTo = function(arglist__39273) {
          var x = cljs.core.first(arglist__39273);
          arglist__39273 = cljs.core.next(arglist__39273);
          var y = cljs.core.first(arglist__39273);
          arglist__39273 = cljs.core.next(arglist__39273);
          var z = cljs.core.first(arglist__39273);
          var args = cljs.core.rest(arglist__39273);
          return G__39272__delegate(x, y, z, args);
        };
        G__39272.cljs$core$IFn$_invoke$arity$variadic = G__39272__delegate;
        return G__39272;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              var and__3541__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3541__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3541__auto____$2;
              }
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              var and__3541__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3541__auto____$2)) {
                var and__3541__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3541__auto____$3)) {
                  var and__3541__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3541__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3541__auto____$4;
                  }
                } else {
                  return and__3541__auto____$3;
                }
              } else {
                return and__3541__auto____$2;
              }
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__39274__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__39266_SHARP_) {
            var and__3541__auto__ = p1.call(null, p1__39266_SHARP_);
            if (cljs.core.truth_(and__3541__auto__)) {
              return p2.call(null, p1__39266_SHARP_);
            } else {
              return and__3541__auto__;
            }
          }, args));
        };
        var G__39274 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__39274__delegate.call(this, x, y, z, args);
        };
        G__39274.cljs$lang$maxFixedArity = 3;
        G__39274.cljs$lang$applyTo = function(arglist__39275) {
          var x = cljs.core.first(arglist__39275);
          arglist__39275 = cljs.core.next(arglist__39275);
          var y = cljs.core.first(arglist__39275);
          arglist__39275 = cljs.core.next(arglist__39275);
          var z = cljs.core.first(arglist__39275);
          var args = cljs.core.rest(arglist__39275);
          return G__39274__delegate(x, y, z, args);
        };
        G__39274.cljs$core$IFn$_invoke$arity$variadic = G__39274__delegate;
        return G__39274;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              var and__3541__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3541__auto____$2)) {
                var and__3541__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3541__auto____$3)) {
                  var and__3541__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3541__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3541__auto____$4;
                  }
                } else {
                  return and__3541__auto____$3;
                }
              } else {
                return and__3541__auto____$2;
              }
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              var and__3541__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3541__auto____$2)) {
                var and__3541__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3541__auto____$3)) {
                  var and__3541__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3541__auto____$4)) {
                    var and__3541__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3541__auto____$5)) {
                      var and__3541__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3541__auto____$6)) {
                        var and__3541__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3541__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3541__auto____$7;
                        }
                      } else {
                        return and__3541__auto____$6;
                      }
                    } else {
                      return and__3541__auto____$5;
                    }
                  } else {
                    return and__3541__auto____$4;
                  }
                } else {
                  return and__3541__auto____$3;
                }
              } else {
                return and__3541__auto____$2;
              }
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__39276__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__39267_SHARP_) {
            var and__3541__auto__ = p1.call(null, p1__39267_SHARP_);
            if (cljs.core.truth_(and__3541__auto__)) {
              var and__3541__auto____$1 = p2.call(null, p1__39267_SHARP_);
              if (cljs.core.truth_(and__3541__auto____$1)) {
                return p3.call(null, p1__39267_SHARP_);
              } else {
                return and__3541__auto____$1;
              }
            } else {
              return and__3541__auto__;
            }
          }, args));
        };
        var G__39276 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__39276__delegate.call(this, x, y, z, args);
        };
        G__39276.cljs$lang$maxFixedArity = 3;
        G__39276.cljs$lang$applyTo = function(arglist__39277) {
          var x = cljs.core.first(arglist__39277);
          arglist__39277 = cljs.core.next(arglist__39277);
          var y = cljs.core.first(arglist__39277);
          arglist__39277 = cljs.core.next(arglist__39277);
          var z = cljs.core.first(arglist__39277);
          var args = cljs.core.rest(arglist__39277);
          return G__39276__delegate(x, y, z, args);
        };
        G__39276.cljs$core$IFn$_invoke$arity$variadic = G__39276__delegate;
        return G__39276;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__39278__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__39268_SHARP_) {
                return p1__39268_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__39269_SHARP_) {
                var and__3541__auto__ = p1__39269_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3541__auto__)) {
                  return p1__39269_SHARP_.call(null, y);
                } else {
                  return and__3541__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__39270_SHARP_) {
                var and__3541__auto__ = p1__39270_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3541__auto__)) {
                  var and__3541__auto____$1 = p1__39270_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3541__auto____$1)) {
                    return p1__39270_SHARP_.call(null, z);
                  } else {
                    return and__3541__auto____$1;
                  }
                } else {
                  return and__3541__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__39279__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__39271_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__39271_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__39279 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__39279__delegate.call(this, x, y, z, args);
            };
            G__39279.cljs$lang$maxFixedArity = 3;
            G__39279.cljs$lang$applyTo = function(arglist__39280) {
              var x = cljs.core.first(arglist__39280);
              arglist__39280 = cljs.core.next(arglist__39280);
              var y = cljs.core.first(arglist__39280);
              arglist__39280 = cljs.core.next(arglist__39280);
              var z = cljs.core.first(arglist__39280);
              var args = cljs.core.rest(arglist__39280);
              return G__39279__delegate(x, y, z, args);
            };
            G__39279.cljs$core$IFn$_invoke$arity$variadic = G__39279__delegate;
            return G__39279;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__39278 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__39278__delegate.call(this, p1, p2, p3, ps);
    };
    G__39278.cljs$lang$maxFixedArity = 3;
    G__39278.cljs$lang$applyTo = function(arglist__39281) {
      var p1 = cljs.core.first(arglist__39281);
      arglist__39281 = cljs.core.next(arglist__39281);
      var p2 = cljs.core.first(arglist__39281);
      arglist__39281 = cljs.core.next(arglist__39281);
      var p3 = cljs.core.first(arglist__39281);
      var ps = cljs.core.rest(arglist__39281);
      return G__39278__delegate(p1, p2, p3, ps);
    };
    G__39278.cljs$core$IFn$_invoke$arity$variadic = G__39278__delegate;
    return G__39278;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3553__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3553__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__39288__delegate = function(x, y, z, args) {
          var or__3553__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__39288 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__39288__delegate.call(this, x, y, z, args);
        };
        G__39288.cljs$lang$maxFixedArity = 3;
        G__39288.cljs$lang$applyTo = function(arglist__39289) {
          var x = cljs.core.first(arglist__39289);
          arglist__39289 = cljs.core.next(arglist__39289);
          var y = cljs.core.first(arglist__39289);
          arglist__39289 = cljs.core.next(arglist__39289);
          var z = cljs.core.first(arglist__39289);
          var args = cljs.core.rest(arglist__39289);
          return G__39288__delegate(x, y, z, args);
        };
        G__39288.cljs$core$IFn$_invoke$arity$variadic = G__39288__delegate;
        return G__39288;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            var or__3553__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3553__auto____$2)) {
              return or__3553__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            var or__3553__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3553__auto____$2)) {
              return or__3553__auto____$2;
            } else {
              var or__3553__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3553__auto____$3)) {
                return or__3553__auto____$3;
              } else {
                var or__3553__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3553__auto____$4)) {
                  return or__3553__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__39290__delegate = function(x, y, z, args) {
          var or__3553__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3553__auto__) {
              return function(p1__39282_SHARP_) {
                var or__3553__auto____$1 = p1.call(null, p1__39282_SHARP_);
                if (cljs.core.truth_(or__3553__auto____$1)) {
                  return or__3553__auto____$1;
                } else {
                  return p2.call(null, p1__39282_SHARP_);
                }
              };
            }(or__3553__auto__), args);
          }
        };
        var G__39290 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__39290__delegate.call(this, x, y, z, args);
        };
        G__39290.cljs$lang$maxFixedArity = 3;
        G__39290.cljs$lang$applyTo = function(arglist__39291) {
          var x = cljs.core.first(arglist__39291);
          arglist__39291 = cljs.core.next(arglist__39291);
          var y = cljs.core.first(arglist__39291);
          arglist__39291 = cljs.core.next(arglist__39291);
          var z = cljs.core.first(arglist__39291);
          var args = cljs.core.rest(arglist__39291);
          return G__39290__delegate(x, y, z, args);
        };
        G__39290.cljs$core$IFn$_invoke$arity$variadic = G__39290__delegate;
        return G__39290;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            var or__3553__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3553__auto____$2)) {
              return or__3553__auto____$2;
            } else {
              var or__3553__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3553__auto____$3)) {
                return or__3553__auto____$3;
              } else {
                var or__3553__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3553__auto____$4)) {
                  return or__3553__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            var or__3553__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3553__auto____$2)) {
              return or__3553__auto____$2;
            } else {
              var or__3553__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3553__auto____$3)) {
                return or__3553__auto____$3;
              } else {
                var or__3553__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3553__auto____$4)) {
                  return or__3553__auto____$4;
                } else {
                  var or__3553__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3553__auto____$5)) {
                    return or__3553__auto____$5;
                  } else {
                    var or__3553__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3553__auto____$6)) {
                      return or__3553__auto____$6;
                    } else {
                      var or__3553__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3553__auto____$7)) {
                        return or__3553__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__39292__delegate = function(x, y, z, args) {
          var or__3553__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3553__auto__) {
              return function(p1__39283_SHARP_) {
                var or__3553__auto____$1 = p1.call(null, p1__39283_SHARP_);
                if (cljs.core.truth_(or__3553__auto____$1)) {
                  return or__3553__auto____$1;
                } else {
                  var or__3553__auto____$2 = p2.call(null, p1__39283_SHARP_);
                  if (cljs.core.truth_(or__3553__auto____$2)) {
                    return or__3553__auto____$2;
                  } else {
                    return p3.call(null, p1__39283_SHARP_);
                  }
                }
              };
            }(or__3553__auto__), args);
          }
        };
        var G__39292 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__39292__delegate.call(this, x, y, z, args);
        };
        G__39292.cljs$lang$maxFixedArity = 3;
        G__39292.cljs$lang$applyTo = function(arglist__39293) {
          var x = cljs.core.first(arglist__39293);
          arglist__39293 = cljs.core.next(arglist__39293);
          var y = cljs.core.first(arglist__39293);
          arglist__39293 = cljs.core.next(arglist__39293);
          var z = cljs.core.first(arglist__39293);
          var args = cljs.core.rest(arglist__39293);
          return G__39292__delegate(x, y, z, args);
        };
        G__39292.cljs$core$IFn$_invoke$arity$variadic = G__39292__delegate;
        return G__39292;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__39294__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__39284_SHARP_) {
                return p1__39284_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__39285_SHARP_) {
                var or__3553__auto__ = p1__39285_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3553__auto__)) {
                  return or__3553__auto__;
                } else {
                  return p1__39285_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__39286_SHARP_) {
                var or__3553__auto__ = p1__39286_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3553__auto__)) {
                  return or__3553__auto__;
                } else {
                  var or__3553__auto____$1 = p1__39286_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3553__auto____$1)) {
                    return or__3553__auto____$1;
                  } else {
                    return p1__39286_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__39295__delegate = function(x, y, z, args) {
              var or__3553__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3553__auto__)) {
                return or__3553__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3553__auto__, ps__$1) {
                  return function(p1__39287_SHARP_) {
                    return cljs.core.some.call(null, p1__39287_SHARP_, args);
                  };
                }(or__3553__auto__, ps__$1), ps__$1);
              }
            };
            var G__39295 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__39295__delegate.call(this, x, y, z, args);
            };
            G__39295.cljs$lang$maxFixedArity = 3;
            G__39295.cljs$lang$applyTo = function(arglist__39296) {
              var x = cljs.core.first(arglist__39296);
              arglist__39296 = cljs.core.next(arglist__39296);
              var y = cljs.core.first(arglist__39296);
              arglist__39296 = cljs.core.next(arglist__39296);
              var z = cljs.core.first(arglist__39296);
              var args = cljs.core.rest(arglist__39296);
              return G__39295__delegate(x, y, z, args);
            };
            G__39295.cljs$core$IFn$_invoke$arity$variadic = G__39295__delegate;
            return G__39295;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__39294 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__39294__delegate.call(this, p1, p2, p3, ps);
    };
    G__39294.cljs$lang$maxFixedArity = 3;
    G__39294.cljs$lang$applyTo = function(arglist__39297) {
      var p1 = cljs.core.first(arglist__39297);
      arglist__39297 = cljs.core.next(arglist__39297);
      var p2 = cljs.core.first(arglist__39297);
      arglist__39297 = cljs.core.next(arglist__39297);
      var p3 = cljs.core.first(arglist__39297);
      var ps = cljs.core.rest(arglist__39297);
      return G__39294__delegate(p1, p2, p3, ps);
    };
    G__39294.cljs$core$IFn$_invoke$arity$variadic = G__39294__delegate;
    return G__39294;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(f1) {
      return function() {
        var G__39299 = null;
        var G__39299__0 = function() {
          return f1.call(null);
        };
        var G__39299__1 = function(result) {
          return f1.call(null, result);
        };
        var G__39299__2 = function(result, input) {
          return f1.call(null, result, f.call(null, input));
        };
        var G__39299__3 = function() {
          var G__39300__delegate = function(result, input, inputs) {
            return f1.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__39300 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__39300__delegate.call(this, result, input, inputs);
          };
          G__39300.cljs$lang$maxFixedArity = 2;
          G__39300.cljs$lang$applyTo = function(arglist__39301) {
            var result = cljs.core.first(arglist__39301);
            arglist__39301 = cljs.core.next(arglist__39301);
            var input = cljs.core.first(arglist__39301);
            var inputs = cljs.core.rest(arglist__39301);
            return G__39300__delegate(result, input, inputs);
          };
          G__39300.cljs$core$IFn$_invoke$arity$variadic = G__39300__delegate;
          return G__39300;
        }();
        G__39299 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__39299__0.call(this);
            case 1:
              return G__39299__1.call(this, result);
            case 2:
              return G__39299__2.call(this, result, input);
            default:
              return G__39299__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__39299.cljs$lang$maxFixedArity = 2;
        G__39299.cljs$lang$applyTo = G__39299__3.cljs$lang$applyTo;
        G__39299.cljs$core$IFn$_invoke$arity$0 = G__39299__0;
        G__39299.cljs$core$IFn$_invoke$arity$1 = G__39299__1;
        G__39299.cljs$core$IFn$_invoke$arity$2 = G__39299__2;
        G__39299.cljs$core$IFn$_invoke$arity$variadic = G__39299__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__39299;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4409__auto___39302 = size;
          var i_39303 = 0;
          while (true) {
            if (i_39303 < n__4409__auto___39302) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_39303)));
              var G__39304 = i_39303 + 1;
              i_39303 = G__39304;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__39305__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__39298_SHARP_) {
          return cljs.core.apply.call(null, f, p1__39298_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__39305 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__39305__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__39305.cljs$lang$maxFixedArity = 4;
    G__39305.cljs$lang$applyTo = function(arglist__39306) {
      var f = cljs.core.first(arglist__39306);
      arglist__39306 = cljs.core.next(arglist__39306);
      var c1 = cljs.core.first(arglist__39306);
      arglist__39306 = cljs.core.next(arglist__39306);
      var c2 = cljs.core.first(arglist__39306);
      arglist__39306 = cljs.core.next(arglist__39306);
      var c3 = cljs.core.first(arglist__39306);
      var colls = cljs.core.rest(arglist__39306);
      return G__39305__delegate(f, c1, c2, c3, colls);
    };
    G__39305.cljs$core$IFn$_invoke$arity$variadic = G__39305__delegate;
    return G__39305;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__39307 = null;
          var G__39307__0 = function() {
            return f1.call(null);
          };
          var G__39307__1 = function(result) {
            return f1.call(null, result);
          };
          var G__39307__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            var result__$1 = n__$1 > 0 ? f1.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__39307 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__39307__0.call(this);
              case 1:
                return G__39307__1.call(this, result);
              case 2:
                return G__39307__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__39307.cljs$core$IFn$_invoke$arity$0 = G__39307__0;
          G__39307.cljs$core$IFn$_invoke$arity$1 = G__39307__1;
          G__39307.cljs$core$IFn$_invoke$arity$2 = G__39307__2;
          return G__39307;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__39308 = null;
          var G__39308__0 = function() {
            return f1.call(null);
          };
          var G__39308__1 = function(result) {
            return f1.call(null, result);
          };
          var G__39308__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            if (n__$1 > 0) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__39308 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__39308__0.call(this);
              case 1:
                return G__39308__1.call(this, result);
              case 2:
                return G__39308__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__39308.cljs$core$IFn$_invoke$arity$0 = G__39308__0;
          G__39308.cljs$core$IFn$_invoke$arity$1 = G__39308__1;
          G__39308.cljs$core$IFn$_invoke$arity$2 = G__39308__2;
          return G__39308;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__39309 = n__$1 - 1;
          var G__39310 = cljs.core.rest.call(null, s);
          n__$1 = G__39309;
          coll__$1 = G__39310;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__39311 = cljs.core.next.call(null, s);
      var G__39312 = cljs.core.next.call(null, lead);
      s = G__39311;
      lead = G__39312;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(f1) {
      var da = cljs.core.atom.call(null, true);
      return function(da) {
        return function() {
          var G__39313 = null;
          var G__39313__0 = function() {
            return f1.call(null);
          };
          var G__39313__1 = function(result) {
            return f1.call(null, result);
          };
          var G__39313__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3541__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3541__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3541__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.reset_BANG_.call(null, da, null);
              return f1.call(null, result, input);
            }
          };
          G__39313 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__39313__0.call(this);
              case 1:
                return G__39313__1.call(this, result);
              case 2:
                return G__39313__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__39313.cljs$core$IFn$_invoke$arity$0 = G__39313__0;
          G__39313.cljs$core$IFn$_invoke$arity$1 = G__39313__1;
          G__39313.cljs$core$IFn$_invoke$arity$2 = G__39313__2;
          return G__39313;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3541__auto__ = s;
          if (and__3541__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3541__auto__;
          }
        }())) {
          var G__39314 = pred__$1;
          var G__39315 = cljs.core.rest.call(null, s);
          pred__$1 = G__39314;
          coll__$1 = G__39315;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__39316__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__39316 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39316__delegate.call(this, c1, c2, colls);
    };
    G__39316.cljs$lang$maxFixedArity = 2;
    G__39316.cljs$lang$applyTo = function(arglist__39317) {
      var c1 = cljs.core.first(arglist__39317);
      arglist__39317 = cljs.core.next(arglist__39317);
      var c2 = cljs.core.first(arglist__39317);
      var colls = cljs.core.rest(arglist__39317);
      return G__39316__delegate(c1, c2, colls);
    };
    G__39316.cljs$core$IFn$_invoke$arity$variadic = G__39316__delegate;
    return G__39316;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__39318__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__39318 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__39318__delegate.call(this, f, coll, colls);
    };
    G__39318.cljs$lang$maxFixedArity = 2;
    G__39318.cljs$lang$applyTo = function(arglist__39319) {
      var f = cljs.core.first(arglist__39319);
      arglist__39319 = cljs.core.next(arglist__39319);
      var coll = cljs.core.first(arglist__39319);
      var colls = cljs.core.rest(arglist__39319);
      return G__39318__delegate(f, coll, colls);
    };
    G__39318.cljs$core$IFn$_invoke$arity$variadic = G__39318__delegate;
    return G__39318;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__39320 = null;
        var G__39320__0 = function() {
          return f1.call(null);
        };
        var G__39320__1 = function(result) {
          return f1.call(null, result);
        };
        var G__39320__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return result;
          }
        };
        G__39320 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__39320__0.call(this);
            case 1:
              return G__39320__1.call(this, result);
            case 2:
              return G__39320__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__39320.cljs$core$IFn$_invoke$arity$0 = G__39320__0;
        G__39320.cljs$core$IFn$_invoke$arity$1 = G__39320__1;
        G__39320.cljs$core$IFn$_invoke$arity$2 = G__39320__2;
        return G__39320;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4409__auto___39321 = size;
          var i_39322 = 0;
          while (true) {
            if (i_39322 < n__4409__auto___39321) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_39322)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_39322));
              } else {
              }
              var G__39323 = i_39322 + 1;
              i_39322 = G__39323;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__39324_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__39324_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__39327 = to;
        if (G__39327) {
          var bit__4196__auto__ = G__39327.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4196__auto__ || G__39327.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__39328 = to;
      if (G__39328) {
        var bit__4196__auto__ = G__39328.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4196__auto__ || G__39328.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__39329__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__39329 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__39329__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__39329.cljs$lang$maxFixedArity = 4;
    G__39329.cljs$lang$applyTo = function(arglist__39330) {
      var f = cljs.core.first(arglist__39330);
      arglist__39330 = cljs.core.next(arglist__39330);
      var c1 = cljs.core.first(arglist__39330);
      arglist__39330 = cljs.core.next(arglist__39330);
      var c2 = cljs.core.first(arglist__39330);
      arglist__39330 = cljs.core.next(arglist__39330);
      var c3 = cljs.core.first(arglist__39330);
      var colls = cljs.core.rest(arglist__39330);
      return G__39329__delegate(f, c1, c2, c3, colls);
    };
    G__39329.cljs$core$IFn$_invoke$arity$variadic = G__39329__delegate;
    return G__39329;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__39332 = m__$1;
          if (G__39332) {
            var bit__4203__auto__ = G__39332.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4203__auto__ || G__39332.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__39332.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__39332);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__39332);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__39333 = sentinel;
            var G__39334 = m__$2;
            var G__39335 = cljs.core.next.call(null, ks__$1);
            sentinel = G__39333;
            m__$1 = G__39334;
            ks__$1 = G__39335;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__39336, v) {
  var vec__39338 = p__39336;
  var k = cljs.core.nth.call(null, vec__39338, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__39338, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__39339, f) {
    var vec__39349 = p__39339;
    var k = cljs.core.nth.call(null, vec__39349, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__39349, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__39340, f, a) {
    var vec__39350 = p__39340;
    var k = cljs.core.nth.call(null, vec__39350, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__39350, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__39341, f, a, b) {
    var vec__39351 = p__39341;
    var k = cljs.core.nth.call(null, vec__39351, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__39351, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__39342, f, a, b, c) {
    var vec__39352 = p__39342;
    var k = cljs.core.nth.call(null, vec__39352, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__39352, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__39354__delegate = function(m, p__39343, f, a, b, c, args) {
      var vec__39353 = p__39343;
      var k = cljs.core.nth.call(null, vec__39353, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__39353, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__39354 = function(m, p__39343, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__39354__delegate.call(this, m, p__39343, f, a, b, c, args);
    };
    G__39354.cljs$lang$maxFixedArity = 6;
    G__39354.cljs$lang$applyTo = function(arglist__39355) {
      var m = cljs.core.first(arglist__39355);
      arglist__39355 = cljs.core.next(arglist__39355);
      var p__39343 = cljs.core.first(arglist__39355);
      arglist__39355 = cljs.core.next(arglist__39355);
      var f = cljs.core.first(arglist__39355);
      arglist__39355 = cljs.core.next(arglist__39355);
      var a = cljs.core.first(arglist__39355);
      arglist__39355 = cljs.core.next(arglist__39355);
      var b = cljs.core.first(arglist__39355);
      arglist__39355 = cljs.core.next(arglist__39355);
      var c = cljs.core.first(arglist__39355);
      var args = cljs.core.rest(arglist__39355);
      return G__39354__delegate(m, p__39343, f, a, b, c, args);
    };
    G__39354.cljs$core$IFn$_invoke$arity$variadic = G__39354__delegate;
    return G__39354;
  }();
  update_in = function(m, p__39343, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__39343, f);
      case 4:
        return update_in__4.call(this, m, p__39343, f, a);
      case 5:
        return update_in__5.call(this, m, p__39343, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__39343, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__39343, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4123__auto__, writer__4124__auto__, opts__4125__auto__) {
  return cljs.core._write.call(null, writer__4124__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__39356 = ll - 5;
      var G__39357 = r;
      ll = G__39356;
      ret = G__39357;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error("No item " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i) + " in vector of length " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__39358 = cljs.core.pv_aget.call(null, node, 0);
      var G__39359 = level - 5;
      node = G__39358;
      level = G__39359;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__39360 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__39361 = level - 5;
        node = G__39360;
        level = G__39361;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__39363 = j + 1;
              var G__39364 = init__$2;
              j = G__39363;
              init__$1 = G__39364;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__39365 = i + step_init[0];
        i = G__39365;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds  [0," + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt) + "]");
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4409__auto___39366 = len;
    var i_39367 = 0;
    while (true) {
      if (i_39367 < n__4409__auto___39366) {
        new_tail[i_39367] = self__.tail[i_39367];
        var G__39368 = i_39367 + 1;
        i_39367 = G__39368;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__39369 = null;
  var G__39369__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__39369__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__39369 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39369__2.call(this, self__, k);
      case 3:
        return G__39369__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39369.cljs$core$IFn$_invoke$arity$2 = G__39369__2;
  G__39369.cljs$core$IFn$_invoke$arity$3 = G__39369__3;
  return G__39369;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args39362) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args39362)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__39370 = i + 1;
        var G__39371 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__39370;
        out = G__39371;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__39372) {
    var args = cljs.core.seq(arglist__39372);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3860__auto__ = self__.end;
    var y__3861__auto__ = v_pos + 1;
    return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__39374 = null;
  var G__39374__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__39374__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__39374 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39374__2.call(this, self__, k);
      case 3:
        return G__39374__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39374.cljs$core$IFn$_invoke$arity$2 = G__39374__2;
  G__39374.cljs$core$IFn$_invoke$arity$3 = G__39374__3;
  return G__39374;
}();
cljs.core.Subvec.prototype.apply = function(self__, args39373) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args39373)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__39375 = meta;
      var G__39376 = v.v;
      var G__39377 = v.start + start;
      var G__39378 = v.start + end;
      var G__39379 = __hash;
      meta = G__39375;
      v = G__39376;
      start = G__39377;
      end = G__39378;
      __hash = G__39379;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj39383 = {};
    return obj39383;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__39384 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__39385 = level - 5;
        node = G__39384;
        level = G__39385;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__39387 = null;
  var G__39387__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39387__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39387 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39387__2.call(this, self__, k);
      case 3:
        return G__39387__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39387.cljs$core$IFn$_invoke$arity$2 = G__39387__2;
  G__39387.cljs$core$IFn$_invoke$arity$3 = G__39387__3;
  return G__39387;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args39386) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args39386)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds for TransientVector of length" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3553__auto__ = self__.front;
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3553__auto__ = self__.rear;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__39388 = i + incr;
        i = G__39388;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__39389 = i + 1;
      var G__39390 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__39389;
      out = G__39390;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj39394 = {};
    return obj39394;
  }();
  var l = ks.length;
  var i_39395 = 0;
  while (true) {
    if (i_39395 < l) {
      var k_39396 = ks[i_39395];
      new_obj[k_39396] = obj[k_39396];
      var G__39397 = i_39395 + 1;
      i_39395 = G__39397;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__39400 = cljs.core.rest.call(null, keys__$1);
        var G__39401 = init__$2;
        keys__$1 = G__39400;
        init__$1 = G__39401;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__39398_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__39398_SHARP_, self__.strobj[p1__39398_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__39402 = null;
  var G__39402__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39402__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39402 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39402__2.call(this, self__, k);
      case 3:
        return G__39402__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39402.cljs$core$IFn$_invoke$arity$2 = G__39402__2;
  G__39402.cljs$core$IFn$_invoke$arity$3 = G__39402__3;
  return G__39402;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args39399) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args39399)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj39404 = {};
  return obj39404;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.Iterator = function(s) {
  this.s = s;
};
cljs.core.Iterator.cljs$lang$type = true;
cljs.core.Iterator.cljs$lang$ctorStr = "cljs.core/Iterator";
cljs.core.Iterator.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Iterator");
};
cljs.core.Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_Iterator = function __GT_Iterator(s) {
  return new cljs.core.Iterator(s);
};
cljs.core.iterator = function iterator(coll) {
  return new cljs.core.Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.EntriesIterator.cljs$lang$type = true;
cljs.core.EntriesIterator.cljs$lang$ctorStr = "cljs.core/EntriesIterator";
cljs.core.EntriesIterator.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/EntriesIterator");
};
cljs.core.EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__39405 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__39405, 0, null);
    var v = cljs.core.nth.call(null, vec__39405, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_EntriesIterator = function __GT_EntriesIterator(s) {
  return new cljs.core.EntriesIterator(s);
};
cljs.core.entries_iterator = function entries_iterator(coll) {
  return new cljs.core.EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.SetEntriesIterator.cljs$lang$type = true;
cljs.core.SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/SetEntriesIterator";
cljs.core.SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/SetEntriesIterator");
};
cljs.core.SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_SetEntriesIterator = function __GT_SetEntriesIterator(s) {
  return new cljs.core.SetEntriesIterator(s);
};
cljs.core.set_entries_iterator = function set_entries_iterator(coll) {
  return new cljs.core.SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__39406 = i + 2;
        i = G__39406;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__39407 = i + 2;
        i = G__39407;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__39408 = i + 2;
        i = G__39408;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__39409 = i + 2;
        i = G__39409;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__39410 = i + 2;
        i = G__39410;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_39411 = 0;
  while (true) {
    if (i_39411 < l) {
      narr[i_39411] = arr[i_39411];
      var G__39412 = i_39411 + 1;
      i_39411 = G__39412;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__39414 = cljs.core.seq.call(null, coll);
  var chunk__39415 = null;
  var count__39416 = 0;
  var i__39417 = 0;
  while (true) {
    if (i__39417 < count__39416) {
      var vec__39418 = cljs.core._nth.call(null, chunk__39415, i__39417);
      var k = cljs.core.nth.call(null, vec__39418, 0, null);
      var v = cljs.core.nth.call(null, vec__39418, 1, null);
      f.call(null, v, k);
      var G__39423 = seq__39414;
      var G__39424 = chunk__39415;
      var G__39425 = count__39416;
      var G__39426 = i__39417 + 1;
      seq__39414 = G__39423;
      chunk__39415 = G__39424;
      count__39416 = G__39425;
      i__39417 = G__39426;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__39414);
      if (temp__4126__auto__) {
        var seq__39414__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__39414__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__39414__$1);
          var G__39427 = cljs.core.chunk_rest.call(null, seq__39414__$1);
          var G__39428 = c__4309__auto__;
          var G__39429 = cljs.core.count.call(null, c__4309__auto__);
          var G__39430 = 0;
          seq__39414 = G__39427;
          chunk__39415 = G__39428;
          count__39416 = G__39429;
          i__39417 = G__39430;
          continue;
        } else {
          var vec__39419 = cljs.core.first.call(null, seq__39414__$1);
          var k = cljs.core.nth.call(null, vec__39419, 0, null);
          var v = cljs.core.nth.call(null, vec__39419, 1, null);
          f.call(null, v, k);
          var G__39431 = cljs.core.next.call(null, seq__39414__$1);
          var G__39432 = null;
          var G__39433 = 0;
          var G__39434 = 0;
          seq__39414 = G__39431;
          chunk__39415 = G__39432;
          count__39416 = G__39433;
          i__39417 = G__39434;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__39435 = i + 2;
        var G__39436 = init__$2;
        i = G__39435;
        init__$1 = G__39436;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj39421 = {};
    return obj39421;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__39437 = s + 2;
            var G__39438 = d;
            s = G__39437;
            d = G__39438;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__39439 = s + 2;
            var G__39440 = d + 2;
            s = G__39439;
            d = G__39440;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__39422 = cljs.core.aclone.call(null, self__.arr);
        G__39422[idx + 1] = v;
        return G__39422;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__39441 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__39442 = cljs.core.next.call(null, es);
          ret = G__39441;
          es = G__39442;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__39443 = null;
  var G__39443__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39443__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39443 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39443__2.call(this, self__, k);
      case 3:
        return G__39443__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39443.cljs$core$IFn$_invoke$arity$2 = G__39443__2;
  G__39443.cljs$core$IFn$_invoke$arity$3 = G__39443__3;
  return G__39443;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args39413) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args39413)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__39444 = i + 2;
        var G__39445 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__39444;
        ret = G__39445;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__39446_39448 = self__.arr;
      G__39446_39448.pop();
      G__39446_39448.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__39447 = o;
      if (G__39447) {
        var bit__4203__auto__ = G__39447.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4203__auto__ || G__39447.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__39447.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__39447);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__39447);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__39449 = cljs.core.next.call(null, es);
          var G__39450 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__39449;
          tcoll__$2 = G__39450;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__39451 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__39452 = i + 2;
      out = G__39451;
      i = G__39452;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4123__auto__, writer__4124__auto__, opts__4125__auto__) {
  return cljs.core._write.call(null, writer__4124__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__39455 = cljs.core.aclone.call(null, arr);
    G__39455[i] = a;
    return G__39455;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__39456 = cljs.core.aclone.call(null, arr);
    G__39456[i] = a;
    G__39456[j] = b;
    return G__39456;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__39457 = i + 2;
        var G__39458 = init__$2;
        i = G__39457;
        init__$1 = G__39458;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_39459 = 0;
        var j_39460 = 0;
        while (true) {
          if (i_39459 < 32) {
            if ((self__.bitmap >>> i_39459 & 1) === 0) {
              var G__39461 = i_39459 + 1;
              var G__39462 = j_39460;
              i_39459 = G__39461;
              j_39460 = G__39462;
              continue;
            } else {
              nodes[i_39459] = !(self__.arr[j_39460] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_39460]), self__.arr[j_39460], self__.arr[j_39460 + 1], added_leaf_QMARK_) : self__.arr[j_39460 + 1];
              var G__39463 = i_39459 + 1;
              var G__39464 = j_39460 + 2;
              i_39459 = G__39463;
              j_39460 = G__39464;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_39465 = 0;
      var j_39466 = 0;
      while (true) {
        if (i_39465 < 32) {
          if ((self__.bitmap >>> i_39465 & 1) === 0) {
            var G__39467 = i_39465 + 1;
            var G__39468 = j_39466;
            i_39465 = G__39467;
            j_39466 = G__39468;
            continue;
          } else {
            nodes[i_39465] = !(self__.arr[j_39466] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_39466]), self__.arr[j_39466], self__.arr[j_39466 + 1], added_leaf_QMARK_) : self__.arr[j_39466 + 1];
            var G__39469 = i_39465 + 1;
            var G__39470 = j_39466 + 2;
            i_39465 = G__39469;
            j_39466 = G__39470;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__39471 = i + 1;
        var G__39472 = j + 2;
        var G__39473 = bitmap | 1 << i;
        i = G__39471;
        j = G__39472;
        bitmap = G__39473;
        continue;
      } else {
        var G__39474 = i + 1;
        var G__39475 = j;
        var G__39476 = bitmap;
        i = G__39474;
        j = G__39475;
        bitmap = G__39476;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__39477 = i + 1;
          var G__39478 = init__$2;
          i = G__39477;
          init__$1 = G__39478;
          continue;
        }
      } else {
        var G__39479 = i + 1;
        var G__39480 = init__$1;
        i = G__39479;
        init__$1 = G__39480;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__39481 = i + 2;
        i = G__39481;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__39482 = j + 2;
                j = G__39482;
                continue;
              }
            } else {
              var G__39483 = j + 2;
              j = G__39483;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__39484 = j + 1;
              j = G__39484;
              continue;
            }
          } else {
            var G__39485 = j + 1;
            j = G__39485;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__39487 = cljs.core.seq.call(null, coll);
  var chunk__39488 = null;
  var count__39489 = 0;
  var i__39490 = 0;
  while (true) {
    if (i__39490 < count__39489) {
      var vec__39491 = cljs.core._nth.call(null, chunk__39488, i__39490);
      var k = cljs.core.nth.call(null, vec__39491, 0, null);
      var v = cljs.core.nth.call(null, vec__39491, 1, null);
      f.call(null, v, k);
      var G__39495 = seq__39487;
      var G__39496 = chunk__39488;
      var G__39497 = count__39489;
      var G__39498 = i__39490 + 1;
      seq__39487 = G__39495;
      chunk__39488 = G__39496;
      count__39489 = G__39497;
      i__39490 = G__39498;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__39487);
      if (temp__4126__auto__) {
        var seq__39487__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__39487__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__39487__$1);
          var G__39499 = cljs.core.chunk_rest.call(null, seq__39487__$1);
          var G__39500 = c__4309__auto__;
          var G__39501 = cljs.core.count.call(null, c__4309__auto__);
          var G__39502 = 0;
          seq__39487 = G__39499;
          chunk__39488 = G__39500;
          count__39489 = G__39501;
          i__39490 = G__39502;
          continue;
        } else {
          var vec__39492 = cljs.core.first.call(null, seq__39487__$1);
          var k = cljs.core.nth.call(null, vec__39492, 0, null);
          var v = cljs.core.nth.call(null, vec__39492, 1, null);
          f.call(null, v, k);
          var G__39503 = cljs.core.next.call(null, seq__39487__$1);
          var G__39504 = null;
          var G__39505 = 0;
          var G__39506 = 0;
          seq__39487 = G__39503;
          chunk__39488 = G__39504;
          count__39489 = G__39505;
          i__39490 = G__39506;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj39494 = {};
    return obj39494;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__39507 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__39508 = cljs.core.next.call(null, es);
          ret = G__39507;
          es = G__39508;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__39509 = null;
  var G__39509__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39509__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39509 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39509__2.call(this, self__, k);
      case 3:
        return G__39509__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39509.cljs$core$IFn$_invoke$arity$2 = G__39509__2;
  G__39509.cljs$core$IFn$_invoke$arity$3 = G__39509__3;
  return G__39509;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args39486) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args39486)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__39510 = i + 1;
      var G__39511 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__39510;
      out = G__39511;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__39512 = o;
      if (G__39512) {
        var bit__4203__auto__ = G__39512.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4203__auto__ || G__39512.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__39512.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__39512);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__39512);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__39513 = cljs.core.next.call(null, es);
          var G__39514 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__39513;
          tcoll__$1 = G__39514;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__39515 = ascending_QMARK_ ? t.left : t.right;
      var G__39516 = cljs.core.conj.call(null, stack__$1, t);
      t = G__39515;
      stack__$1 = G__39516;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__39518 = null;
  var G__39518__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39518__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39518 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39518__2.call(this, self__, k);
      case 3:
        return G__39518__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39518.cljs$core$IFn$_invoke$arity$2 = G__39518__2;
  G__39518.cljs$core$IFn$_invoke$arity$3 = G__39518__3;
  return G__39518;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args39517) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args39517)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__39520 = null;
  var G__39520__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39520__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39520 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39520__2.call(this, self__, k);
      case 3:
        return G__39520__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39520.cljs$core$IFn$_invoke$arity$2 = G__39520__2;
  G__39520.cljs$core$IFn$_invoke$arity$3 = G__39520__3;
  return G__39520;
}();
cljs.core.RedNode.prototype.apply = function(self__, args39519) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args39519)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__39522 = cljs.core.seq.call(null, coll);
  var chunk__39523 = null;
  var count__39524 = 0;
  var i__39525 = 0;
  while (true) {
    if (i__39525 < count__39524) {
      var vec__39526 = cljs.core._nth.call(null, chunk__39523, i__39525);
      var k = cljs.core.nth.call(null, vec__39526, 0, null);
      var v = cljs.core.nth.call(null, vec__39526, 1, null);
      f.call(null, v, k);
      var G__39528 = seq__39522;
      var G__39529 = chunk__39523;
      var G__39530 = count__39524;
      var G__39531 = i__39525 + 1;
      seq__39522 = G__39528;
      chunk__39523 = G__39529;
      count__39524 = G__39530;
      i__39525 = G__39531;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__39522);
      if (temp__4126__auto__) {
        var seq__39522__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__39522__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__39522__$1);
          var G__39532 = cljs.core.chunk_rest.call(null, seq__39522__$1);
          var G__39533 = c__4309__auto__;
          var G__39534 = cljs.core.count.call(null, c__4309__auto__);
          var G__39535 = 0;
          seq__39522 = G__39532;
          chunk__39523 = G__39533;
          count__39524 = G__39534;
          i__39525 = G__39535;
          continue;
        } else {
          var vec__39527 = cljs.core.first.call(null, seq__39522__$1);
          var k = cljs.core.nth.call(null, vec__39527, 0, null);
          var v = cljs.core.nth.call(null, vec__39527, 1, null);
          f.call(null, v, k);
          var G__39536 = cljs.core.next.call(null, seq__39522__$1);
          var G__39537 = null;
          var G__39538 = 0;
          var G__39539 = 0;
          seq__39522 = G__39536;
          chunk__39523 = G__39537;
          count__39524 = G__39538;
          i__39525 = G__39539;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__39540 = t.left;
          t = G__39540;
          continue;
        } else {
          var G__39541 = t.right;
          t = G__39541;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__39542 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__39543 = cljs.core.next.call(null, es);
          ret = G__39542;
          es = G__39543;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__39544 = null;
  var G__39544__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39544__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39544 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39544__2.call(this, self__, k);
      case 3:
        return G__39544__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39544.cljs$core$IFn$_invoke$arity$2 = G__39544__2;
  G__39544.cljs$core$IFn$_invoke$arity$3 = G__39544__3;
  return G__39544;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args39521) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args39521)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__39545 = cljs.core.conj.call(null, stack, t);
              var G__39546 = t.left;
              stack = G__39545;
              t = G__39546;
              continue;
            } else {
              var G__39547 = stack;
              var G__39548 = t.right;
              stack = G__39547;
              t = G__39548;
              continue;
            }
          } else {
            if (c > 0) {
              var G__39549 = cljs.core.conj.call(null, stack, t);
              var G__39550 = t.right;
              stack = G__39549;
              t = G__39550;
              continue;
            } else {
              var G__39551 = stack;
              var G__39552 = t.left;
              stack = G__39551;
              t = G__39552;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__39553 = cljs.core.nnext.call(null, in$);
        var G__39554 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__39553;
        out = G__39554;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__39555) {
    var keyvals = cljs.core.seq(arglist__39555);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__39556) {
    var keyvals = cljs.core.seq(arglist__39556);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj39560 = {};
      return obj39560;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__39561 = cljs.core.nnext.call(null, kvs);
        kvs = G__39561;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__39562) {
    var keyvals = cljs.core.seq(arglist__39562);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__39563 = cljs.core.nnext.call(null, in$);
        var G__39564 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__39563;
        out = G__39564;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__39565) {
    var keyvals = cljs.core.seq(arglist__39565);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__39566 = cljs.core.nnext.call(null, in$);
        var G__39567 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__39566;
        out = G__39567;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__39568) {
    var comparator = cljs.core.first(arglist__39568);
    var keyvals = cljs.core.rest(arglist__39568);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__39569 = self__.mseq;
    if (G__39569) {
      var bit__4203__auto__ = G__39569.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4203__auto__ || G__39569.cljs$core$INext$) {
        return true;
      } else {
        if (!G__39569.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__39569);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__39569);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__39570 = self__.mseq;
    if (G__39570) {
      var bit__4203__auto__ = G__39570.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4203__auto__ || G__39570.cljs$core$INext$) {
        return true;
      } else {
        if (!G__39570.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__39570);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__39570);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__39571 = self__.mseq;
    if (G__39571) {
      var bit__4203__auto__ = G__39571.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4203__auto__ || G__39571.cljs$core$INext$) {
        return true;
      } else {
        if (!G__39571.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__39571);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__39571);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__39572 = self__.mseq;
    if (G__39572) {
      var bit__4203__auto__ = G__39572.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4203__auto__ || G__39572.cljs$core$INext$) {
        return true;
      } else {
        if (!G__39572.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__39572);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__39572);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__39573_SHARP_, p2__39574_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3553__auto__ = p1__39573_SHARP_;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__39574_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__39575) {
    var maps = cljs.core.seq(arglist__39575);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3553__auto__ = m1;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__39576) {
    var f = cljs.core.first(arglist__39576);
    var maps = cljs.core.rest(arglist__39576);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__39577 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__39578 = cljs.core.next.call(null, keys);
      ret = G__39577;
      keys = G__39578;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__39581 = cljs.core.seq.call(null, coll);
  var chunk__39582 = null;
  var count__39583 = 0;
  var i__39584 = 0;
  while (true) {
    if (i__39584 < count__39583) {
      var vec__39585 = cljs.core._nth.call(null, chunk__39582, i__39584);
      var k = cljs.core.nth.call(null, vec__39585, 0, null);
      var v = cljs.core.nth.call(null, vec__39585, 1, null);
      f.call(null, v, k);
      var G__39587 = seq__39581;
      var G__39588 = chunk__39582;
      var G__39589 = count__39583;
      var G__39590 = i__39584 + 1;
      seq__39581 = G__39587;
      chunk__39582 = G__39588;
      count__39583 = G__39589;
      i__39584 = G__39590;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__39581);
      if (temp__4126__auto__) {
        var seq__39581__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__39581__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__39581__$1);
          var G__39591 = cljs.core.chunk_rest.call(null, seq__39581__$1);
          var G__39592 = c__4309__auto__;
          var G__39593 = cljs.core.count.call(null, c__4309__auto__);
          var G__39594 = 0;
          seq__39581 = G__39591;
          chunk__39582 = G__39592;
          count__39583 = G__39593;
          i__39584 = G__39594;
          continue;
        } else {
          var vec__39586 = cljs.core.first.call(null, seq__39581__$1);
          var k = cljs.core.nth.call(null, vec__39586, 0, null);
          var v = cljs.core.nth.call(null, vec__39586, 1, null);
          f.call(null, v, k);
          var G__39595 = cljs.core.next.call(null, seq__39581__$1);
          var G__39596 = null;
          var G__39597 = 0;
          var G__39598 = 0;
          seq__39581 = G__39595;
          chunk__39582 = G__39596;
          count__39583 = G__39597;
          i__39584 = G__39598;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__39579_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__39579_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__39599 = null;
  var G__39599__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39599__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39599 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39599__2.call(this, self__, k);
      case 3:
        return G__39599__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39599.cljs$core$IFn$_invoke$arity$2 = G__39599__2;
  G__39599.cljs$core$IFn$_invoke$arity$3 = G__39599__3;
  return G__39599;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args39580) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args39580)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__39600 = i + 1;
        var G__39601 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__39600;
        out = G__39601;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__39602 = i + 1;
        var G__39603 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__39602;
        out = G__39603;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__39605 = null;
  var G__39605__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__39605__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__39605 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39605__2.call(this, self__, k);
      case 3:
        return G__39605__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39605.cljs$core$IFn$_invoke$arity$2 = G__39605__2;
  G__39605.cljs$core$IFn$_invoke$arity$3 = G__39605__3;
  return G__39605;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args39604) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args39604)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__39608 = cljs.core.seq.call(null, coll);
  var chunk__39609 = null;
  var count__39610 = 0;
  var i__39611 = 0;
  while (true) {
    if (i__39611 < count__39610) {
      var vec__39612 = cljs.core._nth.call(null, chunk__39609, i__39611);
      var k = cljs.core.nth.call(null, vec__39612, 0, null);
      var v = cljs.core.nth.call(null, vec__39612, 1, null);
      f.call(null, v, k);
      var G__39614 = seq__39608;
      var G__39615 = chunk__39609;
      var G__39616 = count__39610;
      var G__39617 = i__39611 + 1;
      seq__39608 = G__39614;
      chunk__39609 = G__39615;
      count__39610 = G__39616;
      i__39611 = G__39617;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__39608);
      if (temp__4126__auto__) {
        var seq__39608__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__39608__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__39608__$1);
          var G__39618 = cljs.core.chunk_rest.call(null, seq__39608__$1);
          var G__39619 = c__4309__auto__;
          var G__39620 = cljs.core.count.call(null, c__4309__auto__);
          var G__39621 = 0;
          seq__39608 = G__39618;
          chunk__39609 = G__39619;
          count__39610 = G__39620;
          i__39611 = G__39621;
          continue;
        } else {
          var vec__39613 = cljs.core.first.call(null, seq__39608__$1);
          var k = cljs.core.nth.call(null, vec__39613, 0, null);
          var v = cljs.core.nth.call(null, vec__39613, 1, null);
          f.call(null, v, k);
          var G__39622 = cljs.core.next.call(null, seq__39608__$1);
          var G__39623 = null;
          var G__39624 = 0;
          var G__39625 = 0;
          seq__39608 = G__39622;
          chunk__39609 = G__39623;
          count__39610 = G__39624;
          i__39611 = G__39625;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__39606_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__39606_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__39626 = null;
  var G__39626__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39626__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39626 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39626__2.call(this, self__, k);
      case 3:
        return G__39626__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39626.cljs$core$IFn$_invoke$arity$2 = G__39626__2;
  G__39626.cljs$core$IFn$_invoke$arity$3 = G__39626__3;
  return G__39626;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args39607) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args39607)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4403__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4403__auto__.length) {
        var G__39627 = i + 1;
        var G__39628 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__39627;
        res = G__39628;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__39629 = cljs.core._next.call(null, in$__$1);
          var G__39630 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__39629;
          out = G__39630;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__39631__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__39631 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__39631__delegate.call(this, keys);
    };
    G__39631.cljs$lang$maxFixedArity = 0;
    G__39631.cljs$lang$applyTo = function(arglist__39632) {
      var keys = cljs.core.seq(arglist__39632);
      return G__39631__delegate(keys);
    };
    G__39631.cljs$core$IFn$_invoke$arity$variadic = G__39631__delegate;
    return G__39631;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__39633) {
    var keys = cljs.core.seq(arglist__39633);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__39634) {
    var comparator = cljs.core.first(arglist__39634);
    var keys = cljs.core.rest(arglist__39634);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__39635_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__39635_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__39635_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__39636_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__39636_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__39636_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__39643, seen__$1) {
        while (true) {
          var vec__39644 = p__39643;
          var f = cljs.core.nth.call(null, vec__39644, 0, null);
          var xs__$1 = vec__39644;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__39645 = cljs.core.rest.call(null, s);
              var G__39646 = seen__$1;
              p__39643 = G__39645;
              seen__$1 = G__39646;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__39647 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__39648 = cljs.core.next.call(null, s__$1);
      ret = G__39647;
      s__$1 = G__39648;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__39650 = x;
    if (G__39650) {
      var bit__4196__auto__ = G__39650.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4196__auto__ || G__39650.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error("Doesn't support name: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__39651 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__39652 = cljs.core.next.call(null, ks);
      var G__39653 = cljs.core.next.call(null, vs);
      map = G__39651;
      ks = G__39652;
      vs = G__39653;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__39656__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__39654_SHARP_, p2__39655_SHARP_) {
        return max_key.call(null, k, p1__39654_SHARP_, p2__39655_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__39656 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__39656__delegate.call(this, k, x, y, more);
    };
    G__39656.cljs$lang$maxFixedArity = 3;
    G__39656.cljs$lang$applyTo = function(arglist__39657) {
      var k = cljs.core.first(arglist__39657);
      arglist__39657 = cljs.core.next(arglist__39657);
      var x = cljs.core.first(arglist__39657);
      arglist__39657 = cljs.core.next(arglist__39657);
      var y = cljs.core.first(arglist__39657);
      var more = cljs.core.rest(arglist__39657);
      return G__39656__delegate(k, x, y, more);
    };
    G__39656.cljs$core$IFn$_invoke$arity$variadic = G__39656__delegate;
    return G__39656;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__39660__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__39658_SHARP_, p2__39659_SHARP_) {
        return min_key.call(null, k, p1__39658_SHARP_, p2__39659_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__39660 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__39660__delegate.call(this, k, x, y, more);
    };
    G__39660.cljs$lang$maxFixedArity = 3;
    G__39660.cljs$lang$applyTo = function(arglist__39661) {
      var k = cljs.core.first(arglist__39661);
      arglist__39661 = cljs.core.next(arglist__39661);
      var x = cljs.core.first(arglist__39661);
      arglist__39661 = cljs.core.next(arglist__39661);
      var y = cljs.core.first(arglist__39661);
      var more = cljs.core.rest(arglist__39661);
      return G__39660__delegate(k, x, y, more);
    };
    G__39660.cljs$core$IFn$_invoke$arity$variadic = G__39660__delegate;
    return G__39660;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayList");
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__39662 = null;
          var G__39662__0 = function() {
            return f1.call(null);
          };
          var G__39662__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__39662__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            } else {
              return result;
            }
          };
          G__39662 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__39662__0.call(this);
              case 1:
                return G__39662__1.call(this, result);
              case 2:
                return G__39662__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__39662.cljs$core$IFn$_invoke$arity$0 = G__39662__0;
          G__39662.cljs$core$IFn$_invoke$arity$1 = G__39662__1;
          G__39662.cljs$core$IFn$_invoke$arity$2 = G__39662__2;
          return G__39662;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__39663 = null;
        var G__39663__0 = function() {
          return f1.call(null);
        };
        var G__39663__1 = function(result) {
          return f1.call(null, result);
        };
        var G__39663__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__39663 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__39663__0.call(this);
            case 1:
              return G__39663__1.call(this, result);
            case 2:
              return G__39663__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__39663.cljs$core$IFn$_invoke$arity$0 = G__39663__0;
        G__39663.cljs$core$IFn$_invoke$arity$1 = G__39663__1;
        G__39663.cljs$core$IFn$_invoke$arity$2 = G__39663__2;
        return G__39663;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__39666 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__39666, 0, null);
        var s = vec__39666;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__39667 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__39667, 0, null);
      var s = vec__39667;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__39670 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__39670, 0, null);
        var s = vec__39670;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__39671 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__39671, 0, null);
      var s = vec__39671;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__39672 = null;
          var G__39672__0 = function() {
            return f1.call(null);
          };
          var G__39672__1 = function(result) {
            return f1.call(null, result);
          };
          var G__39672__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return f1.call(null, result, input);
            } else {
              return result;
            }
          };
          G__39672 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__39672__0.call(this);
              case 1:
                return G__39672__1.call(this, result);
              case 2:
                return G__39672__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__39672.cljs$core$IFn$_invoke$arity$0 = G__39672__0;
          G__39672.cljs$core$IFn$_invoke$arity$1 = G__39672__1;
          G__39672.cljs$core$IFn$_invoke$arity$2 = G__39672__2;
          return G__39672;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__39674 = null;
          var G__39674__0 = function() {
            return f1.call(null);
          };
          var G__39674__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__39674__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.reset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              a.add(input);
              return f1.call(null, result, v);
            }
          };
          G__39674 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__39674__0.call(this);
              case 1:
                return G__39674__1.call(this, result);
              case 2:
                return G__39674__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__39674.cljs$core$IFn$_invoke$arity$0 = G__39674__0;
          G__39674.cljs$core$IFn$_invoke$arity$1 = G__39674__1;
          G__39674.cljs$core$IFn$_invoke$arity$2 = G__39674__2;
          return G__39674;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__39673_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__39673_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__39685 = null;
      var G__39685__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__39685__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__39685__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__39685__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__39685__4 = function() {
        var G__39686__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__39686 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__39686__delegate.call(this, x, y, z, args);
        };
        G__39686.cljs$lang$maxFixedArity = 3;
        G__39686.cljs$lang$applyTo = function(arglist__39687) {
          var x = cljs.core.first(arglist__39687);
          arglist__39687 = cljs.core.next(arglist__39687);
          var y = cljs.core.first(arglist__39687);
          arglist__39687 = cljs.core.next(arglist__39687);
          var z = cljs.core.first(arglist__39687);
          var args = cljs.core.rest(arglist__39687);
          return G__39686__delegate(x, y, z, args);
        };
        G__39686.cljs$core$IFn$_invoke$arity$variadic = G__39686__delegate;
        return G__39686;
      }();
      G__39685 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__39685__0.call(this);
          case 1:
            return G__39685__1.call(this, x);
          case 2:
            return G__39685__2.call(this, x, y);
          case 3:
            return G__39685__3.call(this, x, y, z);
          default:
            return G__39685__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__39685.cljs$lang$maxFixedArity = 3;
      G__39685.cljs$lang$applyTo = G__39685__4.cljs$lang$applyTo;
      G__39685.cljs$core$IFn$_invoke$arity$0 = G__39685__0;
      G__39685.cljs$core$IFn$_invoke$arity$1 = G__39685__1;
      G__39685.cljs$core$IFn$_invoke$arity$2 = G__39685__2;
      G__39685.cljs$core$IFn$_invoke$arity$3 = G__39685__3;
      G__39685.cljs$core$IFn$_invoke$arity$variadic = G__39685__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__39685;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__39688 = null;
      var G__39688__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__39688__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__39688__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__39688__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__39688__4 = function() {
        var G__39689__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__39689 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__39689__delegate.call(this, x, y, z, args);
        };
        G__39689.cljs$lang$maxFixedArity = 3;
        G__39689.cljs$lang$applyTo = function(arglist__39690) {
          var x = cljs.core.first(arglist__39690);
          arglist__39690 = cljs.core.next(arglist__39690);
          var y = cljs.core.first(arglist__39690);
          arglist__39690 = cljs.core.next(arglist__39690);
          var z = cljs.core.first(arglist__39690);
          var args = cljs.core.rest(arglist__39690);
          return G__39689__delegate(x, y, z, args);
        };
        G__39689.cljs$core$IFn$_invoke$arity$variadic = G__39689__delegate;
        return G__39689;
      }();
      G__39688 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__39688__0.call(this);
          case 1:
            return G__39688__1.call(this, x);
          case 2:
            return G__39688__2.call(this, x, y);
          case 3:
            return G__39688__3.call(this, x, y, z);
          default:
            return G__39688__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__39688.cljs$lang$maxFixedArity = 3;
      G__39688.cljs$lang$applyTo = G__39688__4.cljs$lang$applyTo;
      G__39688.cljs$core$IFn$_invoke$arity$0 = G__39688__0;
      G__39688.cljs$core$IFn$_invoke$arity$1 = G__39688__1;
      G__39688.cljs$core$IFn$_invoke$arity$2 = G__39688__2;
      G__39688.cljs$core$IFn$_invoke$arity$3 = G__39688__3;
      G__39688.cljs$core$IFn$_invoke$arity$variadic = G__39688__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__39688;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__39691 = null;
      var G__39691__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__39691__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__39691__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__39691__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__39691__4 = function() {
        var G__39692__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__39692 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__39692__delegate.call(this, x, y, z, args);
        };
        G__39692.cljs$lang$maxFixedArity = 3;
        G__39692.cljs$lang$applyTo = function(arglist__39693) {
          var x = cljs.core.first(arglist__39693);
          arglist__39693 = cljs.core.next(arglist__39693);
          var y = cljs.core.first(arglist__39693);
          arglist__39693 = cljs.core.next(arglist__39693);
          var z = cljs.core.first(arglist__39693);
          var args = cljs.core.rest(arglist__39693);
          return G__39692__delegate(x, y, z, args);
        };
        G__39692.cljs$core$IFn$_invoke$arity$variadic = G__39692__delegate;
        return G__39692;
      }();
      G__39691 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__39691__0.call(this);
          case 1:
            return G__39691__1.call(this, x);
          case 2:
            return G__39691__2.call(this, x, y);
          case 3:
            return G__39691__3.call(this, x, y, z);
          default:
            return G__39691__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__39691.cljs$lang$maxFixedArity = 3;
      G__39691.cljs$lang$applyTo = G__39691__4.cljs$lang$applyTo;
      G__39691.cljs$core$IFn$_invoke$arity$0 = G__39691__0;
      G__39691.cljs$core$IFn$_invoke$arity$1 = G__39691__1;
      G__39691.cljs$core$IFn$_invoke$arity$2 = G__39691__2;
      G__39691.cljs$core$IFn$_invoke$arity$3 = G__39691__3;
      G__39691.cljs$core$IFn$_invoke$arity$variadic = G__39691__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__39691;
    }();
  };
  var juxt__4 = function() {
    var G__39694__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__39695 = null;
          var G__39695__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__39675_SHARP_, p2__39676_SHARP_) {
                return cljs.core.conj.call(null, p1__39675_SHARP_, p2__39676_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__39695__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__39677_SHARP_, p2__39678_SHARP_) {
                return cljs.core.conj.call(null, p1__39677_SHARP_, p2__39678_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__39695__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__39679_SHARP_, p2__39680_SHARP_) {
                return cljs.core.conj.call(null, p1__39679_SHARP_, p2__39680_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__39695__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__39681_SHARP_, p2__39682_SHARP_) {
                return cljs.core.conj.call(null, p1__39681_SHARP_, p2__39682_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__39695__4 = function() {
            var G__39696__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__39683_SHARP_, p2__39684_SHARP_) {
                  return cljs.core.conj.call(null, p1__39683_SHARP_, cljs.core.apply.call(null, p2__39684_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__39696 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__39696__delegate.call(this, x, y, z, args);
            };
            G__39696.cljs$lang$maxFixedArity = 3;
            G__39696.cljs$lang$applyTo = function(arglist__39697) {
              var x = cljs.core.first(arglist__39697);
              arglist__39697 = cljs.core.next(arglist__39697);
              var y = cljs.core.first(arglist__39697);
              arglist__39697 = cljs.core.next(arglist__39697);
              var z = cljs.core.first(arglist__39697);
              var args = cljs.core.rest(arglist__39697);
              return G__39696__delegate(x, y, z, args);
            };
            G__39696.cljs$core$IFn$_invoke$arity$variadic = G__39696__delegate;
            return G__39696;
          }();
          G__39695 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__39695__0.call(this);
              case 1:
                return G__39695__1.call(this, x);
              case 2:
                return G__39695__2.call(this, x, y);
              case 3:
                return G__39695__3.call(this, x, y, z);
              default:
                return G__39695__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__39695.cljs$lang$maxFixedArity = 3;
          G__39695.cljs$lang$applyTo = G__39695__4.cljs$lang$applyTo;
          G__39695.cljs$core$IFn$_invoke$arity$0 = G__39695__0;
          G__39695.cljs$core$IFn$_invoke$arity$1 = G__39695__1;
          G__39695.cljs$core$IFn$_invoke$arity$2 = G__39695__2;
          G__39695.cljs$core$IFn$_invoke$arity$3 = G__39695__3;
          G__39695.cljs$core$IFn$_invoke$arity$variadic = G__39695__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__39695;
        }();
      }(fs__$1);
    };
    var G__39694 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__39694__delegate.call(this, f, g, h, fs);
    };
    G__39694.cljs$lang$maxFixedArity = 3;
    G__39694.cljs$lang$applyTo = function(arglist__39698) {
      var f = cljs.core.first(arglist__39698);
      arglist__39698 = cljs.core.next(arglist__39698);
      var g = cljs.core.first(arglist__39698);
      arglist__39698 = cljs.core.next(arglist__39698);
      var h = cljs.core.first(arglist__39698);
      var fs = cljs.core.rest(arglist__39698);
      return G__39694__delegate(f, g, h, fs);
    };
    G__39694.cljs$core$IFn$_invoke$arity$variadic = G__39694__delegate;
    return G__39694;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__39699 = cljs.core.next.call(null, coll);
        coll = G__39699;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__39700 = n - 1;
        var G__39701 = cljs.core.next.call(null, coll);
        n = G__39700;
        coll = G__39701;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__39703 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__39703, 0, null);
  var flags = cljs.core.nth.call(null, vec__39703, 1, null);
  var pattern = cljs.core.nth.call(null, vec__39703, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_39705 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_39706__$1 = cljs.core.next.call(null, coll);
      var n_39707 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_39706__$1 && (n_39707 == null || !(n_39707 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_39706__$1), writer, opts);
          var G__39708 = cljs.core.next.call(null, coll_39706__$1);
          var G__39709 = n_39707 - 1;
          coll_39706__$1 = G__39708;
          n_39707 = G__39709;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_39706__$1) && n_39707 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_39705;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__39714 = cljs.core.seq.call(null, ss);
    var chunk__39715 = null;
    var count__39716 = 0;
    var i__39717 = 0;
    while (true) {
      if (i__39717 < count__39716) {
        var s = cljs.core._nth.call(null, chunk__39715, i__39717);
        cljs.core._write.call(null, writer, s);
        var G__39718 = seq__39714;
        var G__39719 = chunk__39715;
        var G__39720 = count__39716;
        var G__39721 = i__39717 + 1;
        seq__39714 = G__39718;
        chunk__39715 = G__39719;
        count__39716 = G__39720;
        i__39717 = G__39721;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__39714);
        if (temp__4126__auto__) {
          var seq__39714__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__39714__$1)) {
            var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__39714__$1);
            var G__39722 = cljs.core.chunk_rest.call(null, seq__39714__$1);
            var G__39723 = c__4309__auto__;
            var G__39724 = cljs.core.count.call(null, c__4309__auto__);
            var G__39725 = 0;
            seq__39714 = G__39722;
            chunk__39715 = G__39723;
            count__39716 = G__39724;
            i__39717 = G__39725;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__39714__$1);
            cljs.core._write.call(null, writer, s);
            var G__39726 = cljs.core.next.call(null, seq__39714__$1);
            var G__39727 = null;
            var G__39728 = 0;
            var G__39729 = 0;
            seq__39714 = G__39726;
            chunk__39715 = G__39727;
            count__39716 = G__39728;
            i__39717 = G__39729;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__39730) {
    var writer = cljs.core.first(arglist__39730);
    var ss = cljs.core.rest(arglist__39730);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj39732 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj39732;
}();
cljs.core.quote_string = function quote_string(s) {
  return'"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })) + '"';
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3541__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3541__auto__)) {
          var and__3541__auto____$1 = function() {
            var G__39738 = obj;
            if (G__39738) {
              var bit__4203__auto__ = G__39738.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4203__auto__ || G__39738.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__39738.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__39738);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__39738);
            }
          }();
          if (and__3541__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3541__auto____$1;
          }
        } else {
          return and__3541__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__39739 = obj;
            if (G__39739) {
              var bit__4196__auto__ = G__39739.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4196__auto__ || G__39739.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__39741 = "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
                              ns = G__39741;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__39740 = obj;
                            if (G__39740) {
                              var bit__4203__auto__ = G__39740.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4203__auto__ || G__39740.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__39740.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__39740);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__39740);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__39746 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__39747 = null;
  var count__39748 = 0;
  var i__39749 = 0;
  while (true) {
    if (i__39749 < count__39748) {
      var obj = cljs.core._nth.call(null, chunk__39747, i__39749);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__39750 = seq__39746;
      var G__39751 = chunk__39747;
      var G__39752 = count__39748;
      var G__39753 = i__39749 + 1;
      seq__39746 = G__39750;
      chunk__39747 = G__39751;
      count__39748 = G__39752;
      i__39749 = G__39753;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__39746);
      if (temp__4126__auto__) {
        var seq__39746__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__39746__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__39746__$1);
          var G__39754 = cljs.core.chunk_rest.call(null, seq__39746__$1);
          var G__39755 = c__4309__auto__;
          var G__39756 = cljs.core.count.call(null, c__4309__auto__);
          var G__39757 = 0;
          seq__39746 = G__39754;
          chunk__39747 = G__39755;
          count__39748 = G__39756;
          i__39749 = G__39757;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__39746__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__39758 = cljs.core.next.call(null, seq__39746__$1);
          var G__39759 = null;
          var G__39760 = 0;
          var G__39761 = 0;
          seq__39746 = G__39758;
          chunk__39747 = G__39759;
          count__39748 = G__39760;
          i__39749 = G__39761;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts.call(null, objs, opts));
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__39762) {
    var objs = cljs.core.seq(arglist__39762);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__39763) {
    var objs = cljs.core.seq(arglist__39763);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__39764) {
    var objs = cljs.core.seq(arglist__39764);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__39765) {
    var objs = cljs.core.seq(arglist__39765);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__39766) {
    var objs = cljs.core.seq(arglist__39766);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__39767) {
    var objs = cljs.core.seq(arglist__39767);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__39768) {
    var objs = cljs.core.seq(arglist__39768);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__39769) {
    var objs = cljs.core.seq(arglist__39769);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__39770) {
    var iref = cljs.core.first(arglist__39770);
    arglist__39770 = cljs.core.next(arglist__39770);
    var f = cljs.core.first(arglist__39770);
    var args = cljs.core.rest(arglist__39770);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc)));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(f1) {
  return function(p1__39771_SHARP_, p2__39772_SHARP_) {
    var ret = f1.call(null, p1__39771_SHARP_, p2__39772_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.flatmap = function() {
  var flatmap = null;
  var flatmap__1 = function(f) {
    return function(f1) {
      return function() {
        var G__39773 = null;
        var G__39773__0 = function() {
          return f1.call(null);
        };
        var G__39773__1 = function(result) {
          return f1.call(null, result);
        };
        var G__39773__2 = function(result, input) {
          return cljs.core.reduce.call(null, cljs.core.preserving_reduced.call(null, f1), result, f.call(null, input));
        };
        G__39773 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__39773__0.call(this);
            case 1:
              return G__39773__1.call(this, result);
            case 2:
              return G__39773__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__39773.cljs$core$IFn$_invoke$arity$0 = G__39773__0;
        G__39773.cljs$core$IFn$_invoke$arity$1 = G__39773__1;
        G__39773.cljs$core$IFn$_invoke$arity$2 = G__39773__2;
        return G__39773;
      }();
    };
  };
  var flatmap__2 = function(f, coll) {
    return cljs.core.sequence.call(null, flatmap.call(null, f), coll);
  };
  flatmap = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return flatmap__1.call(this, f);
      case 2:
        return flatmap__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  flatmap.cljs$core$IFn$_invoke$arity$1 = flatmap__1;
  flatmap.cljs$core$IFn$_invoke$arity$2 = flatmap__2;
  return flatmap;
}();
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(f1) {
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__39774 = null;
          var G__39774__0 = function() {
            return f1.call(null);
          };
          var G__39774__1 = function(result) {
            return f1.call(null, result);
          };
          var G__39774__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.reset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__39774 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__39774__0.call(this);
              case 1:
                return G__39774__1.call(this, result);
              case 2:
                return G__39774__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__39774.cljs$core$IFn$_invoke$arity$0 = G__39774__0;
          G__39774.cljs$core$IFn$_invoke$arity$1 = G__39774__1;
          G__39774.cljs$core$IFn$_invoke$arity$2 = G__39774__2;
          return G__39774;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Iteration = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Iteration.cljs$lang$type = true;
cljs.core.Iteration.cljs$lang$ctorStr = "cljs.core/Iteration";
cljs.core.Iteration.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Iteration");
};
cljs.core.Iteration.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Iteration.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Iteration.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.__GT_Iteration = function __GT_Iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.iteration = function iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__39776_SHARP_, p2__39775_SHARP_) {
    return proc.call(null, p2__39775_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj39778 = {};
  return obj39778;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__39780 = k;
    if (G__39780) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__39780.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__39780.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__39780);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__39780);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__39794 = x;
      if (G__39794) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto__ = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return G__39794.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__39794.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__39794);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__39794);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj39796 = {};
              return obj39796;
            }();
            var seq__39797_39807 = cljs.core.seq.call(null, x);
            var chunk__39798_39808 = null;
            var count__39799_39809 = 0;
            var i__39800_39810 = 0;
            while (true) {
              if (i__39800_39810 < count__39799_39809) {
                var vec__39801_39811 = cljs.core._nth.call(null, chunk__39798_39808, i__39800_39810);
                var k_39812 = cljs.core.nth.call(null, vec__39801_39811, 0, null);
                var v_39813 = cljs.core.nth.call(null, vec__39801_39811, 1, null);
                m[cljs.core.key__GT_js.call(null, k_39812)] = clj__GT_js.call(null, v_39813);
                var G__39814 = seq__39797_39807;
                var G__39815 = chunk__39798_39808;
                var G__39816 = count__39799_39809;
                var G__39817 = i__39800_39810 + 1;
                seq__39797_39807 = G__39814;
                chunk__39798_39808 = G__39815;
                count__39799_39809 = G__39816;
                i__39800_39810 = G__39817;
                continue;
              } else {
                var temp__4126__auto___39818 = cljs.core.seq.call(null, seq__39797_39807);
                if (temp__4126__auto___39818) {
                  var seq__39797_39819__$1 = temp__4126__auto___39818;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__39797_39819__$1)) {
                    var c__4309__auto___39820 = cljs.core.chunk_first.call(null, seq__39797_39819__$1);
                    var G__39821 = cljs.core.chunk_rest.call(null, seq__39797_39819__$1);
                    var G__39822 = c__4309__auto___39820;
                    var G__39823 = cljs.core.count.call(null, c__4309__auto___39820);
                    var G__39824 = 0;
                    seq__39797_39807 = G__39821;
                    chunk__39798_39808 = G__39822;
                    count__39799_39809 = G__39823;
                    i__39800_39810 = G__39824;
                    continue;
                  } else {
                    var vec__39802_39825 = cljs.core.first.call(null, seq__39797_39819__$1);
                    var k_39826 = cljs.core.nth.call(null, vec__39802_39825, 0, null);
                    var v_39827 = cljs.core.nth.call(null, vec__39802_39825, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_39826)] = clj__GT_js.call(null, v_39827);
                    var G__39828 = cljs.core.next.call(null, seq__39797_39819__$1);
                    var G__39829 = null;
                    var G__39830 = 0;
                    var G__39831 = 0;
                    seq__39797_39807 = G__39828;
                    chunk__39798_39808 = G__39829;
                    count__39799_39809 = G__39830;
                    i__39800_39810 = G__39831;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__39803_39832 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__39804_39833 = null;
              var count__39805_39834 = 0;
              var i__39806_39835 = 0;
              while (true) {
                if (i__39806_39835 < count__39805_39834) {
                  var x_39836__$1 = cljs.core._nth.call(null, chunk__39804_39833, i__39806_39835);
                  arr.push(x_39836__$1);
                  var G__39837 = seq__39803_39832;
                  var G__39838 = chunk__39804_39833;
                  var G__39839 = count__39805_39834;
                  var G__39840 = i__39806_39835 + 1;
                  seq__39803_39832 = G__39837;
                  chunk__39804_39833 = G__39838;
                  count__39805_39834 = G__39839;
                  i__39806_39835 = G__39840;
                  continue;
                } else {
                  var temp__4126__auto___39841 = cljs.core.seq.call(null, seq__39803_39832);
                  if (temp__4126__auto___39841) {
                    var seq__39803_39842__$1 = temp__4126__auto___39841;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__39803_39842__$1)) {
                      var c__4309__auto___39843 = cljs.core.chunk_first.call(null, seq__39803_39842__$1);
                      var G__39844 = cljs.core.chunk_rest.call(null, seq__39803_39842__$1);
                      var G__39845 = c__4309__auto___39843;
                      var G__39846 = cljs.core.count.call(null, c__4309__auto___39843);
                      var G__39847 = 0;
                      seq__39803_39832 = G__39844;
                      chunk__39804_39833 = G__39845;
                      count__39805_39834 = G__39846;
                      i__39806_39835 = G__39847;
                      continue;
                    } else {
                      var x_39848__$1 = cljs.core.first.call(null, seq__39803_39842__$1);
                      arr.push(x_39848__$1);
                      var G__39849 = cljs.core.next.call(null, seq__39803_39842__$1);
                      var G__39850 = null;
                      var G__39851 = 0;
                      var G__39852 = 0;
                      seq__39803_39832 = G__39849;
                      chunk__39804_39833 = G__39850;
                      count__39805_39834 = G__39851;
                      i__39806_39835 = G__39852;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj39854 = {};
  return obj39854;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__39875__delegate = function(x, opts) {
      if (function() {
        var G__39865 = x;
        if (G__39865) {
          var bit__4203__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3553__auto__ = bit__4203__auto__;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return G__39865.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__39865.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__39865);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__39865);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__39866 = opts;
          var map__39866__$1 = cljs.core.seq_QMARK_.call(null, map__39866) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39866) : map__39866;
          var keywordize_keys = cljs.core.get.call(null, map__39866__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__39866, map__39866__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4278__auto__ = function(map__39866, map__39866__$1, keywordize_keys, keyfn) {
                          return function iter__39871(s__39872) {
                            return new cljs.core.LazySeq(null, function(map__39866, map__39866__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__39872__$1 = s__39872;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__39872__$1);
                                  if (temp__4126__auto__) {
                                    var s__39872__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__39872__$2)) {
                                      var c__4276__auto__ = cljs.core.chunk_first.call(null, s__39872__$2);
                                      var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                      var b__39874 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                      if (function() {
                                        var i__39873 = 0;
                                        while (true) {
                                          if (i__39873 < size__4277__auto__) {
                                            var k = cljs.core._nth.call(null, c__4276__auto__, i__39873);
                                            cljs.core.chunk_append.call(null, b__39874, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__39876 = i__39873 + 1;
                                            i__39873 = G__39876;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39874), iter__39871.call(null, cljs.core.chunk_rest.call(null, s__39872__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39874), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__39872__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__39871.call(null, cljs.core.rest.call(null, s__39872__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__39866, map__39866__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__39866, map__39866__$1, keywordize_keys, keyfn);
                        return iter__4278__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      return x__$1;
                    }
                  }
                }
              }
            };
          }(map__39866, map__39866__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__39875 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__39875__delegate.call(this, x, opts);
    };
    G__39875.cljs$lang$maxFixedArity = 1;
    G__39875.cljs$lang$applyTo = function(arglist__39877) {
      var x = cljs.core.first(arglist__39877);
      var opts = cljs.core.rest(arglist__39877);
      return G__39875__delegate(x, opts);
    };
    G__39875.cljs$core$IFn$_invoke$arity$variadic = G__39875__delegate;
    return G__39875;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__39878__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__39878 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__39878__delegate.call(this, args);
      };
      G__39878.cljs$lang$maxFixedArity = 0;
      G__39878.cljs$lang$applyTo = function(arglist__39879) {
        var args = cljs.core.seq(arglist__39879);
        return G__39878__delegate(args);
      };
      G__39878.cljs$core$IFn$_invoke$arity$variadic = G__39878__delegate;
      return G__39878;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__39880 = ret;
        f = G__39880;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__39881__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__39881 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__39881__delegate.call(this, f, args);
    };
    G__39881.cljs$lang$maxFixedArity = 1;
    G__39881.cljs$lang$applyTo = function(arglist__39882) {
      var f = cljs.core.first(arglist__39882);
      var args = cljs.core.rest(arglist__39882);
      return G__39881__delegate(f, args);
    };
    G__39881.cljs$core$IFn$_invoke$arity$variadic = G__39881__delegate;
    return G__39881;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__39883) {
    var f = cljs.core.first(arglist__39883);
    var args = cljs.core.rest(arglist__39883);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3553__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3553__auto__) {
      return or__3553__auto__;
    } else {
      var or__3553__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3553__auto____$1) {
        return or__3553__auto____$1;
      } else {
        var and__3541__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3541__auto__) {
          var and__3541__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3541__auto____$1) {
            var and__3541__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3541__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__39884 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__39885 = i + 1;
                  ret = G__39884;
                  i = G__39885;
                  continue;
                }
                break;
              }
            } else {
              return and__3541__auto____$2;
            }
          } else {
            return and__3541__auto____$1;
          }
        } else {
          return and__3541__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3553__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "already has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "as ancestor");
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error("Cyclic derivation:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "as ancestor");
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__39886_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__39886_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__39886_SHARP_), cljs.core.second.call(null, p1__39886_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__39887_SHARP_, p2__39888_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__39887_SHARP_, p2__39888_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3553__auto__ = cljs.core.truth_(function() {
    var and__3541__auto__ = xprefs;
    if (cljs.core.truth_(and__3541__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3541__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    var or__3553__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__39889 = cljs.core.rest.call(null, ps);
          ps = G__39889;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3553__auto____$1)) {
      return or__3553__auto____$1;
    } else {
      var or__3553__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__39890 = cljs.core.rest.call(null, ps);
            ps = G__39890;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3553__auto____$2)) {
        return or__3553__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3553__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__39893) {
    var vec__39894 = p__39893;
    var k = cljs.core.nth.call(null, vec__39894, 0, null);
    var _ = cljs.core.nth.call(null, vec__39894, 1, null);
    var e = vec__39894;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3553__auto__ = be == null;
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error("Multiple methods in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' match dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val) + " -\x3e " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(k) + " and " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, be2)) + ", and neither is preferred");
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj39896 = {};
  return obj39896;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._reset[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._reset["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._add_method[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._add_method["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._remove_method[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._remove_method["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._prefer_method[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._get_method[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._get_method["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._methods[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._methods["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._prefers[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._prefers["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error("No method in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' for dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error("Preference conflict in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + "': " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y) + " is already preferred to " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__39898 = null;
  var G__39898__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__39898__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__39898__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__39898__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__39898__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__39898__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__39898__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__39898__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__39898__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__39898__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__39898__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__39898__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__39898__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__39898__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__39898__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__39898__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__39898__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__39898__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__39898__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__39898__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__39898__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__39898 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 2:
        return G__39898__2.call(this, self__, a);
      case 3:
        return G__39898__3.call(this, self__, a, b);
      case 4:
        return G__39898__4.call(this, self__, a, b, c);
      case 5:
        return G__39898__5.call(this, self__, a, b, c, d);
      case 6:
        return G__39898__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__39898__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__39898__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__39898__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__39898__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__39898__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__39898__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__39898__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__39898__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__39898__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__39898__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__39898__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__39898__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__39898__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__39898__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__39898__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__39898__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39898.cljs$core$IFn$_invoke$arity$2 = G__39898__2;
  G__39898.cljs$core$IFn$_invoke$arity$3 = G__39898__3;
  G__39898.cljs$core$IFn$_invoke$arity$4 = G__39898__4;
  G__39898.cljs$core$IFn$_invoke$arity$5 = G__39898__5;
  G__39898.cljs$core$IFn$_invoke$arity$6 = G__39898__6;
  G__39898.cljs$core$IFn$_invoke$arity$7 = G__39898__7;
  G__39898.cljs$core$IFn$_invoke$arity$8 = G__39898__8;
  G__39898.cljs$core$IFn$_invoke$arity$9 = G__39898__9;
  G__39898.cljs$core$IFn$_invoke$arity$10 = G__39898__10;
  G__39898.cljs$core$IFn$_invoke$arity$11 = G__39898__11;
  G__39898.cljs$core$IFn$_invoke$arity$12 = G__39898__12;
  G__39898.cljs$core$IFn$_invoke$arity$13 = G__39898__13;
  G__39898.cljs$core$IFn$_invoke$arity$14 = G__39898__14;
  G__39898.cljs$core$IFn$_invoke$arity$15 = G__39898__15;
  G__39898.cljs$core$IFn$_invoke$arity$16 = G__39898__16;
  G__39898.cljs$core$IFn$_invoke$arity$17 = G__39898__17;
  G__39898.cljs$core$IFn$_invoke$arity$18 = G__39898__18;
  G__39898.cljs$core$IFn$_invoke$arity$19 = G__39898__19;
  G__39898.cljs$core$IFn$_invoke$arity$20 = G__39898__20;
  G__39898.cljs$core$IFn$_invoke$arity$21 = G__39898__21;
  G__39898.cljs$core$IFn$_invoke$arity$22 = G__39898__22;
  return G__39898;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args39897) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args39897)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, '#uuid "' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid) + '"');
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4123__auto__, writer__4124__auto__, opts__4125__auto__) {
  return cljs.core._write.call(null, writer__4124__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
goog.provide("t3tr0s_slides.syntax_highlight");
goog.require("cljs.core");
t3tr0s_slides.syntax_highlight.core = function() {
  var core__delegate = function(s) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.syntax-core-4c264", "span.syntax-core-4c264", 422234275), s], null);
  };
  var core = function(var_args) {
    var s = null;
    if (arguments.length > 0) {
      s = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return core__delegate.call(this, s);
  };
  core.cljs$lang$maxFixedArity = 0;
  core.cljs$lang$applyTo = function(arglist__47956) {
    var s = cljs.core.seq(arglist__47956);
    return core__delegate(s);
  };
  core.cljs$core$IFn$_invoke$arity$variadic = core__delegate;
  return core;
}();
t3tr0s_slides.syntax_highlight.kw = function() {
  var kw__delegate = function(s) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.syntax-kw-18cc2", "span.syntax-kw-18cc2", 511214197), s], null);
  };
  var kw = function(var_args) {
    var s = null;
    if (arguments.length > 0) {
      s = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return kw__delegate.call(this, s);
  };
  kw.cljs$lang$maxFixedArity = 0;
  kw.cljs$lang$applyTo = function(arglist__47957) {
    var s = cljs.core.seq(arglist__47957);
    return kw__delegate(s);
  };
  kw.cljs$core$IFn$_invoke$arity$variadic = kw__delegate;
  return kw;
}();
t3tr0s_slides.syntax_highlight.lit = function() {
  var lit__delegate = function(s) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.syntax-lit-60e83", "span.syntax-lit-60e83", 413499826), s], null);
  };
  var lit = function(var_args) {
    var s = null;
    if (arguments.length > 0) {
      s = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return lit__delegate.call(this, s);
  };
  lit.cljs$lang$maxFixedArity = 0;
  lit.cljs$lang$applyTo = function(arglist__47958) {
    var s = cljs.core.seq(arglist__47958);
    return lit__delegate(s);
  };
  lit.cljs$core$IFn$_invoke$arity$variadic = lit__delegate;
  return lit;
}();
t3tr0s_slides.syntax_highlight.cmt = function() {
  var cmt__delegate = function(s) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.syntax-cmt-d159d", "span.syntax-cmt-d159d", -80604452), s], null);
  };
  var cmt = function(var_args) {
    var s = null;
    if (arguments.length > 0) {
      s = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cmt__delegate.call(this, s);
  };
  cmt.cljs$lang$maxFixedArity = 0;
  cmt.cljs$lang$applyTo = function(arglist__47959) {
    var s = cljs.core.seq(arglist__47959);
    return cmt__delegate(s);
  };
  cmt.cljs$core$IFn$_invoke$arity$variadic = cmt__delegate;
  return cmt;
}();
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw "Invalid match arg: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(match);
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)));
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__40477 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__40477;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__40481 = cljs.core._EQ_;
    var expr__40482 = limit;
    if (cljs.core.truth_(pred__40481.call(null, 1, expr__40482))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__40481.call(null, 2, expr__40482))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(re), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)).split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__40484 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__40485 = limit__$1 - 1;
            var G__40486 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__40484;
            limit__$1 = G__40485;
            parts = G__40486;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__40487 = index - 1;
        index = G__40487;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___40488 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___40488)) {
        var replacement_40489 = temp__4124__auto___40488;
        buffer.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement_40489));
      } else {
        buffer.append(ch);
      }
      var G__40490 = index + 1;
      index = G__40490;
      continue;
    }
    break;
  }
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("schema.utils");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
goog.require("goog.string.format");
schema.utils.assoc_when = function() {
  var assoc_when__delegate = function(m, kvs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null))))));
    }
    return cljs.core.into.call(null, function() {
      var or__3553__auto__ = m;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), function() {
      var iter__4278__auto__ = function iter__40208(s__40209) {
        return new cljs.core.LazySeq(null, function() {
          var s__40209__$1 = s__40209;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__40209__$1);
            if (temp__4126__auto__) {
              var s__40209__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__40209__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40209__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__40211 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__40210 = 0;
                  while (true) {
                    if (i__40210 < size__4277__auto__) {
                      var vec__40214 = cljs.core._nth.call(null, c__4276__auto__, i__40210);
                      var k = cljs.core.nth.call(null, vec__40214, 0, null);
                      var v = cljs.core.nth.call(null, vec__40214, 1, null);
                      if (cljs.core.truth_(v)) {
                        cljs.core.chunk_append.call(null, b__40211, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                        var G__40216 = i__40210 + 1;
                        i__40210 = G__40216;
                        continue;
                      } else {
                        var G__40217 = i__40210 + 1;
                        i__40210 = G__40217;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40211), iter__40208.call(null, cljs.core.chunk_rest.call(null, s__40209__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40211), null);
                }
              } else {
                var vec__40215 = cljs.core.first.call(null, s__40209__$2);
                var k = cljs.core.nth.call(null, vec__40215, 0, null);
                var v = cljs.core.nth.call(null, vec__40215, 1, null);
                if (cljs.core.truth_(v)) {
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__40208.call(null, cljs.core.rest.call(null, s__40209__$2)));
                } else {
                  var G__40218 = cljs.core.rest.call(null, s__40209__$2);
                  s__40209__$1 = G__40218;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4278__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
    }());
  };
  var assoc_when = function(m, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return assoc_when__delegate.call(this, m, kvs);
  };
  assoc_when.cljs$lang$maxFixedArity = 1;
  assoc_when.cljs$lang$applyTo = function(arglist__40219) {
    var m = cljs.core.first(arglist__40219);
    var kvs = cljs.core.rest(arglist__40219);
    return assoc_when__delegate(m, kvs);
  };
  assoc_when.cljs$core$IFn$_invoke$arity$variadic = assoc_when__delegate;
  return assoc_when;
}();
schema.utils.type_of = function type_of(x) {
  return typeof x;
};
schema.utils.fn_schema_bearer = function fn_schema_bearer(f) {
  return f;
};
schema.utils.format_STAR_ = function() {
  var format_STAR___delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args);
  };
  var format_STAR_ = function(fmt, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return format_STAR___delegate.call(this, fmt, args);
  };
  format_STAR_.cljs$lang$maxFixedArity = 1;
  format_STAR_.cljs$lang$applyTo = function(arglist__40220) {
    var fmt = cljs.core.first(arglist__40220);
    var args = cljs.core.rest(arglist__40220);
    return format_STAR___delegate(fmt, args);
  };
  format_STAR_.cljs$core$IFn$_invoke$arity$variadic = format_STAR___delegate;
  return format_STAR_;
}();
schema.utils.value_name = function value_name(value) {
  var t = schema.utils.type_of.call(null, value);
  if (cljs.core.count.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(value)) < 20) {
    return value;
  } else {
    return cljs.core.symbol.call(null, "a-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(t));
  }
};
schema.utils.ValidationError = function(schema, value, expectation_delay, fail_explanation) {
  this.schema = schema;
  this.value = value;
  this.expectation_delay = expectation_delay;
  this.fail_explanation = fail_explanation;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
};
schema.utils.ValidationError.cljs$lang$type = true;
schema.utils.ValidationError.cljs$lang$ctorStr = "schema.utils/ValidationError";
schema.utils.ValidationError.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "schema.utils/ValidationError");
};
schema.utils.ValidationError.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._pr_writer.call(null, schema.utils.validation_error_explain.call(null, this$__$1), writer, opts);
};
schema.utils.__GT_ValidationError = function __GT_ValidationError(schema__$1, value, expectation_delay, fail_explanation) {
  return new schema.utils.ValidationError(schema__$1, value, expectation_delay, fail_explanation);
};
schema.utils.validation_error_explain = function validation_error_explain(err) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, err.expectation_delay)), function() {
    var or__3553__auto__ = err.fail_explanation;
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return new cljs.core.Symbol(null, "not", "not", 1044554643, null);
    }
  }());
};
schema.utils.__GT_ValidationError = function __GT_ValidationError(schema__$1, value, expectation_delay, fail_explanation) {
  return new schema.utils.ValidationError(schema__$1, value, expectation_delay, fail_explanation);
};
schema.utils.NamedError = function(name, error) {
  this.name = name;
  this.error = error;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
};
schema.utils.NamedError.cljs$lang$type = true;
schema.utils.NamedError.cljs$lang$ctorStr = "schema.utils/NamedError";
schema.utils.NamedError.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "schema.utils/NamedError");
};
schema.utils.NamedError.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._pr_writer.call(null, schema.utils.named_error_explain.call(null, this$__$1), writer, opts);
};
schema.utils.__GT_NamedError = function __GT_NamedError(name, error) {
  return new schema.utils.NamedError(name, error);
};
schema.utils.named_error_explain = function named_error_explain(err) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, err.name), err.error), new cljs.core.Symbol(null, "named", "named", 1218138048, null));
};
schema.utils.__GT_NamedError = function __GT_NamedError(name, error) {
  return new schema.utils.NamedError(name, error);
};
schema.utils.ErrorContainer = function(error, __meta, __extmap) {
  this.error = error;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.utils.ErrorContainer.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40222, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40224 = k40222 instanceof cljs.core.Keyword ? k40222.fqn : null;
  switch(G__40224) {
    case "error":
      return self__.error;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40222, else__4142__auto__);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.utils.ErrorContainer{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), self__.error], null)], null), self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.utils.ErrorContainer.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.utils.ErrorContainer(self__.error, self__.__meta, self__.__extmap, self__.__hash);
};
schema.utils.ErrorContainer.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.utils.ErrorContainer.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "error", "error", -978969032), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.utils.ErrorContainer(self__.error, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40221) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40225 = cljs.core.keyword_identical_QMARK_;
  var expr__40226 = k__4147__auto__;
  if (cljs.core.truth_(pred__40225.call(null, new cljs.core.Keyword(null, "error", "error", -978969032), expr__40226))) {
    return new schema.utils.ErrorContainer(G__40221, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.utils.ErrorContainer(self__.error, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40221), null);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), self__.error], null)], null), self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40221) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.utils.ErrorContainer(self__.error, G__40221, self__.__extmap, self__.__hash);
};
schema.utils.ErrorContainer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.utils.ErrorContainer.cljs$lang$type = true;
schema.utils.ErrorContainer.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.utils/ErrorContainer");
};
schema.utils.ErrorContainer.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.utils/ErrorContainer");
};
schema.utils.__GT_ErrorContainer = function __GT_ErrorContainer(error) {
  return new schema.utils.ErrorContainer(error);
};
schema.utils.map__GT_ErrorContainer = function map__GT_ErrorContainer(G__40223) {
  return new schema.utils.ErrorContainer((new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(G__40223), null, cljs.core.dissoc.call(null, G__40223, new cljs.core.Keyword(null, "error", "error", -978969032)));
};
schema.utils.error = function error(x) {
  if (cljs.core.truth_(x)) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "x", "x", -555367584, null))));
  }
  return schema.utils.__GT_ErrorContainer.call(null, x);
};
schema.utils.error_QMARK_ = function error_QMARK_(x) {
  return x instanceof schema.utils.ErrorContainer;
};
schema.utils.error_val = function error_val(x) {
  if (schema.utils.error_QMARK_.call(null, x)) {
    return x.error;
  } else {
    return null;
  }
};
schema.utils.wrap_error_name = function wrap_error_name(name, maybe_error) {
  var temp__4124__auto__ = schema.utils.error_val.call(null, maybe_error);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var e = temp__4124__auto__;
    return schema.utils.error.call(null, schema.utils.__GT_NamedError.call(null, name, e));
  } else {
    return maybe_error;
  }
};
schema.utils.result_builder = function result_builder(lift_to_error) {
  return function conjer(m, e) {
    var temp__4124__auto__ = schema.utils.error_val.call(null, e);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var err = temp__4124__auto__;
      return schema.utils.error.call(null, cljs.core.conj.call(null, function() {
        var or__3553__auto__ = schema.utils.error_val.call(null, m);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return lift_to_error.call(null, m);
        }
      }(), err));
    } else {
      var temp__4124__auto____$1 = schema.utils.error_val.call(null, m);
      if (cljs.core.truth_(temp__4124__auto____$1)) {
        var merr = temp__4124__auto____$1;
        return schema.utils.error.call(null, cljs.core.conj.call(null, merr, null));
      } else {
        return cljs.core.conj.call(null, m, e);
      }
    }
  };
};
schema.utils.declare_class_schema_BANG_ = function declare_class_schema_BANG_(klass, schema__$1) {
  return klass["schema$utils$schema"] = schema__$1;
};
schema.utils.class_schema = function class_schema(klass) {
  return klass["schema$utils$schema"];
};
schema.utils.PSimpleCell = function() {
  var obj40230 = {};
  return obj40230;
}();
schema.utils.get_cell = function get_cell(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.schema$utils$PSimpleCell$get_cell$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.schema$utils$PSimpleCell$get_cell$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = schema.utils.get_cell[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = schema.utils.get_cell["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSimpleCell.get_cell", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.utils.set_cell = function set_cell(this$, x) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.schema$utils$PSimpleCell$set_cell$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.schema$utils$PSimpleCell$set_cell$arity$2(this$, x);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = schema.utils.set_cell[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = schema.utils.set_cell["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSimpleCell.set_cell", this$);
        }
      }
    }().call(null, this$, x);
  }
};
schema.utils.SimpleVCell = function(q) {
  this.q = q;
};
schema.utils.SimpleVCell.cljs$lang$type = true;
schema.utils.SimpleVCell.cljs$lang$ctorStr = "schema.utils/SimpleVCell";
schema.utils.SimpleVCell.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "schema.utils/SimpleVCell");
};
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$ = true;
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$get_cell$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.q;
};
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$set_cell$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return self__.q = x;
};
schema.utils.__GT_SimpleVCell = function __GT_SimpleVCell(q) {
  return new schema.utils.SimpleVCell(q);
};
schema.utils.use_fn_validation = new schema.utils.SimpleVCell(false);
schema.utils.use_fn_validation.get_cell = cljs.core.partial.call(null, schema.utils.get_cell, schema.utils.use_fn_validation);
schema.utils.use_fn_validation.set_cell = cljs.core.partial.call(null, schema.utils.set_cell, schema.utils.use_fn_validation);
goog.provide("schema.core");
goog.require("cljs.core");
goog.require("schema.utils");
goog.require("schema.utils");
goog.require("clojure.string");
goog.require("clojure.string");
schema.core.Schema = function() {
  var obj40232 = {};
  return obj40232;
}();
schema.core.walker = function walker(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.schema$core$Schema$walker$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.schema$core$Schema$walker$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = schema.core.walker[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = schema.core.walker["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Schema.walker", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.core.explain = function explain(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.schema$core$Schema$explain$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.schema$core$Schema$explain$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = schema.core.explain[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = schema.core.explain["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Schema.explain", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.core.subschema_walker = function subschema_walker(s) {
  throw new Error("Walking is unsupported outside of start-walker; all composite schemas must eagerly bind subschema-walkers outside the returned walker.");
};
schema.core.start_walker = function start_walker(sub_walker, schema__$1) {
  var subschema_walker40234 = schema.core.subschema_walker;
  try {
    schema.core.subschema_walker = sub_walker;
    return schema.core.subschema_walker.call(null, schema__$1);
  } finally {
    schema.core.subschema_walker = subschema_walker40234;
  }
};
schema.core.checker = function checker(schema__$1) {
  return cljs.core.comp.call(null, schema.utils.error_val, schema.core.start_walker.call(null, schema.core.walker, schema__$1));
};
schema.core.check = function check(schema__$1, x) {
  return schema.core.checker.call(null, schema__$1).call(null, x);
};
schema.core.validate = function validate(schema__$1, value) {
  var temp__4126__auto___40235 = schema.core.check.call(null, schema__$1, value);
  if (cljs.core.truth_(temp__4126__auto___40235)) {
    var error_40236 = temp__4126__auto___40235;
    throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Value does not match schema: %s", cljs.core.pr_str.call(null, error_40236)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "error", "error", -978969032), error_40236], null));
  } else {
  }
  return value;
};
schema.core.Schema["function"] = true;
schema.core.walker["function"] = function(this$) {
  var class_walker = function() {
    var temp__4124__auto__ = schema.utils.class_schema.call(null, this$);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var more_schema = temp__4124__auto__;
      return schema.core.subschema_walker.call(null, more_schema);
    } else {
      return cljs.core.identity;
    }
  }();
  return function(class_walker) {
    return function(x) {
      var or__3553__auto__ = x == null || cljs.core.not.call(null, function() {
        var or__3553__auto__ = this$ === x.constructor;
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          return x instanceof this$;
        }
      }()) ? schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$, x, new cljs.core.Delay(function(class_walker) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), this$), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
        };
      }(class_walker), null), null)) : null;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return class_walker.call(null, x);
      }
    };
  }(class_walker);
};
schema.core.explain["function"] = function(this$) {
  var temp__4124__auto__ = schema.utils.class_schema.call(null, this$);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var more_schema = temp__4124__auto__;
    return schema.core.explain.call(null, more_schema);
  } else {
    return this$;
  }
};
schema.core.AnythingSchema = function(_, __meta, __extmap) {
  this._ = _;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.AnythingSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40238, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40240 = k40238 instanceof cljs.core.Keyword ? k40238.fqn : null;
  switch(G__40240) {
    case "_":
      return self__._;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40238, else__4142__auto__);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.AnythingSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199), self__._], null)], null), self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.AnythingSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.AnythingSchema(self__._, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.AnythingSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.AnythingSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "_", "_", 1453416199), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.AnythingSchema(self__._, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40237) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40241 = cljs.core.keyword_identical_QMARK_;
  var expr__40242 = k__4147__auto__;
  if (cljs.core.truth_(pred__40241.call(null, new cljs.core.Keyword(null, "_", "_", 1453416199), expr__40242))) {
    return new schema.core.AnythingSchema(G__40237, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.AnythingSchema(self__._, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40237), null);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199), self__._], null)], null), self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40237) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.AnythingSchema(self__._, G__40237, self__.__extmap, self__.__hash);
};
schema.core.AnythingSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.AnythingSchema.prototype.schema$core$Schema$ = true;
schema.core.AnythingSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.identity;
};
schema.core.AnythingSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.Symbol(null, "Any", "Any", 1277492269, null);
};
schema.core.AnythingSchema.cljs$lang$type = true;
schema.core.AnythingSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/AnythingSchema");
};
schema.core.AnythingSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/AnythingSchema");
};
schema.core.__GT_AnythingSchema = function __GT_AnythingSchema(_) {
  return new schema.core.AnythingSchema(_);
};
schema.core.map__GT_AnythingSchema = function map__GT_AnythingSchema(G__40239) {
  return new schema.core.AnythingSchema((new cljs.core.Keyword(null, "_", "_", 1453416199)).cljs$core$IFn$_invoke$arity$1(G__40239), null, cljs.core.dissoc.call(null, G__40239, new cljs.core.Keyword(null, "_", "_", 1453416199)));
};
schema.core.Any = new schema.core.AnythingSchema(null);
schema.core.EqSchema = function(v, __meta, __extmap) {
  this.v = v;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.EqSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.EqSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40246, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40248 = k40246 instanceof cljs.core.Keyword ? k40246.fqn : null;
  switch(G__40248) {
    case "v":
      return self__.v;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40246, else__4142__auto__);
  }
};
schema.core.EqSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.EqSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null)], null), self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.EqSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.EqSchema(self__.v, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.EqSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.EqSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.EqSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.EqSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "v", "v", 21465059), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.EqSchema(self__.v, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.EqSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40245) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40249 = cljs.core.keyword_identical_QMARK_;
  var expr__40250 = k__4147__auto__;
  if (cljs.core.truth_(pred__40249.call(null, new cljs.core.Keyword(null, "v", "v", 21465059), expr__40250))) {
    return new schema.core.EqSchema(G__40245, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.EqSchema(self__.v, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40245), null);
  }
};
schema.core.EqSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null)], null), self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40245) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.EqSchema(self__.v, G__40245, self__.__extmap, self__.__hash);
};
schema.core.EqSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.EqSchema.prototype.schema$core$Schema$ = true;
schema.core.EqSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core._EQ_.call(null, self__.v, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.v), new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.EqSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.v), new cljs.core.Symbol(null, "eq", "eq", 1021992460, null));
};
schema.core.EqSchema.cljs$lang$type = true;
schema.core.EqSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/EqSchema");
};
schema.core.EqSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/EqSchema");
};
schema.core.__GT_EqSchema = function __GT_EqSchema(v) {
  return new schema.core.EqSchema(v);
};
schema.core.map__GT_EqSchema = function map__GT_EqSchema(G__40247) {
  return new schema.core.EqSchema((new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(G__40247), null, cljs.core.dissoc.call(null, G__40247, new cljs.core.Keyword(null, "v", "v", 21465059)));
};
schema.core.eq = function eq(v) {
  return new schema.core.EqSchema(v);
};
schema.core.EnumSchema = function(vs, __meta, __extmap) {
  this.vs = vs;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.EnumSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.EnumSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40254, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40256 = k40254 instanceof cljs.core.Keyword ? k40254.fqn : null;
  switch(G__40256) {
    case "vs":
      return self__.vs;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40254, else__4142__auto__);
  }
};
schema.core.EnumSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.EnumSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), self__.vs], null)], null), self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.EnumSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.EnumSchema(self__.vs, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.EnumSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.EnumSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.EnumSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.EnumSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.EnumSchema(self__.vs, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.EnumSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40253) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40257 = cljs.core.keyword_identical_QMARK_;
  var expr__40258 = k__4147__auto__;
  if (cljs.core.truth_(pred__40257.call(null, new cljs.core.Keyword(null, "vs", "vs", -2022097090), expr__40258))) {
    return new schema.core.EnumSchema(G__40253, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.EnumSchema(self__.vs, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40253), null);
  }
};
schema.core.EnumSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), self__.vs], null)], null), self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40253) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.EnumSchema(self__.vs, G__40253, self__.__extmap, self__.__hash);
};
schema.core.EnumSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.EnumSchema.prototype.schema$core$Schema$ = true;
schema.core.EnumSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.contains_QMARK_.call(null, self__.vs, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.vs);
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.EnumSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "enum", "enum", -975417337, null), self__.vs);
};
schema.core.EnumSchema.cljs$lang$type = true;
schema.core.EnumSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/EnumSchema");
};
schema.core.EnumSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/EnumSchema");
};
schema.core.__GT_EnumSchema = function __GT_EnumSchema(vs) {
  return new schema.core.EnumSchema(vs);
};
schema.core.map__GT_EnumSchema = function map__GT_EnumSchema(G__40255) {
  return new schema.core.EnumSchema((new cljs.core.Keyword(null, "vs", "vs", -2022097090)).cljs$core$IFn$_invoke$arity$1(G__40255), null, cljs.core.dissoc.call(null, G__40255, new cljs.core.Keyword(null, "vs", "vs", -2022097090)));
};
schema.core.enum$ = function() {
  var enum$__delegate = function(vs) {
    return new schema.core.EnumSchema(cljs.core.set.call(null, vs));
  };
  var enum$ = function(var_args) {
    var vs = null;
    if (arguments.length > 0) {
      vs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return enum$__delegate.call(this, vs);
  };
  enum$.cljs$lang$maxFixedArity = 0;
  enum$.cljs$lang$applyTo = function(arglist__40261) {
    var vs = cljs.core.seq(arglist__40261);
    return enum$__delegate(vs);
  };
  enum$.cljs$core$IFn$_invoke$arity$variadic = enum$__delegate;
  return enum$;
}();
schema.core.Predicate = function(p_QMARK_, pred_name, __meta, __extmap) {
  this.p_QMARK_ = p_QMARK_;
  this.pred_name = pred_name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Predicate.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Predicate.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40263, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40265 = k40263 instanceof cljs.core.Keyword ? k40263.fqn : null;
  switch(G__40265) {
    case "pred-name":
      return self__.pred_name;
      break;
    case "p?":
      return self__.p_QMARK_;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40263, else__4142__auto__);
  }
};
schema.core.Predicate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Predicate{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), self__.p_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), self__.pred_name], null)], null), self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Predicate.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Predicate.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Predicate.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Predicate.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Predicate.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), null, new cljs.core.Keyword(null, "p?", "p?", -1172161701), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Predicate.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40262) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40266 = cljs.core.keyword_identical_QMARK_;
  var expr__40267 = k__4147__auto__;
  if (cljs.core.truth_(pred__40266.call(null, new cljs.core.Keyword(null, "p?", "p?", -1172161701), expr__40267))) {
    return new schema.core.Predicate(G__40262, self__.pred_name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__40266.call(null, new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), expr__40267))) {
      return new schema.core.Predicate(self__.p_QMARK_, G__40262, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40262), null);
    }
  }
};
schema.core.Predicate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), self__.p_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), self__.pred_name], null)], null), self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40262) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, G__40262, self__.__extmap, self__.__hash);
};
schema.core.Predicate.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Predicate.prototype.schema$core$Schema$ = true;
schema.core.Predicate.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      var temp__4124__auto__ = function() {
        try {
          if (cljs.core.truth_(self__.p_QMARK_.call(null, x))) {
            return null;
          } else {
            return new cljs.core.Symbol(null, "not", "not", 1044554643, null);
          }
        } catch (e40269) {
          if (e40269 instanceof Object) {
            var e = e40269;
            return new cljs.core.Symbol(null, "throws?", "throws?", 789734533, null);
          } else {
            throw e40269;
          }
        }
      }();
      if (cljs.core.truth_(temp__4124__auto__)) {
        var reason = temp__4124__auto__;
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(reason, temp__4124__auto__, this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.pred_name);
          };
        }(reason, temp__4124__auto__, this$__$1), null), reason));
      } else {
        return x;
      }
    };
  }(this$__$1);
};
schema.core.Predicate.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.integer_QMARK_)) {
    return new cljs.core.Symbol(null, "Int", "Int", -2116888740, null);
  } else {
    if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.keyword_QMARK_)) {
      return new cljs.core.Symbol(null, "Keyword", "Keyword", -850065993, null);
    } else {
      if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.symbol_QMARK_)) {
        return new cljs.core.Symbol(null, "Symbol", "Symbol", 716452869, null);
      } else {
        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.pred_name), new cljs.core.Symbol(null, "pred", "pred", -727012372, null));
      }
    }
  }
};
schema.core.Predicate.cljs$lang$type = true;
schema.core.Predicate.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Predicate");
};
schema.core.Predicate.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Predicate");
};
schema.core.__GT_Predicate = function __GT_Predicate(p_QMARK_, pred_name) {
  return new schema.core.Predicate(p_QMARK_, pred_name);
};
schema.core.map__GT_Predicate = function map__GT_Predicate(G__40264) {
  return new schema.core.Predicate((new cljs.core.Keyword(null, "p?", "p?", -1172161701)).cljs$core$IFn$_invoke$arity$1(G__40264), (new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)).cljs$core$IFn$_invoke$arity$1(G__40264), null, cljs.core.dissoc.call(null, G__40264, new cljs.core.Keyword(null, "p?", "p?", -1172161701), new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)));
};
schema.core.pred = function() {
  var pred = null;
  var pred__1 = function(p_QMARK_) {
    return pred.call(null, p_QMARK_, p_QMARK_);
  };
  var pred__2 = function(p_QMARK_, pred_name) {
    if (cljs.core.ifn_QMARK_.call(null, p_QMARK_)) {
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Not a function: %s", p_QMARK_));
    }
    return new schema.core.Predicate(p_QMARK_, pred_name);
  };
  pred = function(p_QMARK_, pred_name) {
    switch(arguments.length) {
      case 1:
        return pred__1.call(this, p_QMARK_);
      case 2:
        return pred__2.call(this, p_QMARK_, pred_name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pred.cljs$core$IFn$_invoke$arity$1 = pred__1;
  pred.cljs$core$IFn$_invoke$arity$2 = pred__2;
  return pred;
}();
schema.core.protocol_name = function protocol_name(protocol) {
  return(new cljs.core.Keyword(null, "proto-sym", "proto-sym", -886371734)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, protocol));
};
schema.core.Protocol = function(p, __meta, __extmap) {
  this.p = p;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Protocol.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Protocol.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40272, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40274 = k40272 instanceof cljs.core.Keyword ? k40272.fqn : null;
  switch(G__40274) {
    case "p":
      return self__.p;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40272, else__4142__auto__);
  }
};
schema.core.Protocol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Protocol{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), self__.p], null)], null), self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Protocol.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Protocol(self__.p, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Protocol.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Protocol.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Protocol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Protocol.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "p", "p", 151049309), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Protocol(self__.p, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Protocol.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40271) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40275 = cljs.core.keyword_identical_QMARK_;
  var expr__40276 = k__4147__auto__;
  if (cljs.core.truth_(pred__40275.call(null, new cljs.core.Keyword(null, "p", "p", 151049309), expr__40276))) {
    return new schema.core.Protocol(G__40271, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Protocol(self__.p, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40271), null);
  }
};
schema.core.Protocol.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), self__.p], null)], null), self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40271) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Protocol(self__.p, G__40271, self__.__extmap, self__.__hash);
};
schema.core.Protocol.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Protocol.prototype.schema$core$Schema$ = true;
schema.core.Protocol.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "proto-pred", "proto-pred", 1885698716)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, this$__$1)).call(null, x))) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), schema.core.protocol_name.call(null, this$__$1)), new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.Protocol.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.protocol_name.call(null, this$__$1)), new cljs.core.Symbol(null, "protocol", "protocol", -2001965651, null));
};
schema.core.Protocol.cljs$lang$type = true;
schema.core.Protocol.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Protocol");
};
schema.core.Protocol.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Protocol");
};
schema.core.__GT_Protocol = function __GT_Protocol(p) {
  return new schema.core.Protocol(p);
};
schema.core.map__GT_Protocol = function map__GT_Protocol(G__40273) {
  return new schema.core.Protocol((new cljs.core.Keyword(null, "p", "p", 151049309)).cljs$core$IFn$_invoke$arity$1(G__40273), null, cljs.core.dissoc.call(null, G__40273, new cljs.core.Keyword(null, "p", "p", 151049309)));
};
RegExp.prototype.schema$core$Schema$ = true;
RegExp.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (!(typeof x === "string")) {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "string?", "string?", -1129175764, null));
          };
        }(this$__$1), null), null));
      } else {
        if (cljs.core.not.call(null, cljs.core.re_find.call(null, this$__$1, x))) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), schema.core.explain.call(null, this$__$1)), new cljs.core.Symbol(null, "re-find", "re-find", 1143444147, null));
            };
          }(this$__$1), null), null));
        } else {
          return x;
        }
      }
    };
  }(this$__$1);
};
RegExp.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.symbol.call(null, '#"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1)).slice(1, -1)) + '"');
};
schema.core.Str = schema.core.pred.call(null, cljs.core.string_QMARK_);
schema.core.Bool = Boolean;
schema.core.Num = Number;
schema.core.Int = schema.core.pred.call(null, cljs.core.integer_QMARK_, new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null));
schema.core.Keyword = schema.core.pred.call(null, cljs.core.keyword_QMARK_, new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null));
schema.core.Symbol = schema.core.pred.call(null, cljs.core.symbol_QMARK_, new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null));
schema.core.Regex = RegExp;
schema.core.Inst = Date;
schema.core.Uuid = cljs.core.UUID;
schema.core.Maybe = function(schema, __meta, __extmap) {
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Maybe.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Maybe.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40280, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40282 = k40280 instanceof cljs.core.Keyword ? k40280.fqn : null;
  switch(G__40282) {
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40280, else__4142__auto__);
  }
};
schema.core.Maybe.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Maybe{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Maybe.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Maybe(self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Maybe.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Maybe.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Maybe.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Maybe.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Maybe(self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Maybe.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40279) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40283 = cljs.core.keyword_identical_QMARK_;
  var expr__40284 = k__4147__auto__;
  if (cljs.core.truth_(pred__40283.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__40284))) {
    return new schema.core.Maybe(G__40279, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Maybe(self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40279), null);
  }
};
schema.core.Maybe.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40279) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Maybe(self__.schema, G__40279, self__.__extmap, self__.__hash);
};
schema.core.Maybe.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Maybe.prototype.schema$core$Schema$ = true;
schema.core.Maybe.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walker = schema.core.subschema_walker.call(null, self__.schema);
  return function(sub_walker, this$__$1) {
    return function(x) {
      if (x == null) {
        return null;
      } else {
        return sub_walker.call(null, x);
      }
    };
  }(sub_walker, this$__$1);
};
schema.core.Maybe.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "maybe", "maybe", 1326133967, null));
};
schema.core.Maybe.cljs$lang$type = true;
schema.core.Maybe.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Maybe");
};
schema.core.Maybe.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Maybe");
};
schema.core.__GT_Maybe = function __GT_Maybe(schema__$1) {
  return new schema.core.Maybe(schema__$1);
};
schema.core.map__GT_Maybe = function map__GT_Maybe(G__40281) {
  return new schema.core.Maybe((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__40281), null, cljs.core.dissoc.call(null, G__40281, new cljs.core.Keyword(null, "schema", "schema", -1582001791)));
};
schema.core.maybe = function maybe(schema__$1) {
  return new schema.core.Maybe(schema__$1);
};
schema.core.NamedSchema = function(schema, name, __meta, __extmap) {
  this.schema = schema;
  this.name = name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.NamedSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.NamedSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40288, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40290 = k40288 instanceof cljs.core.Keyword ? k40288.fqn : null;
  switch(G__40290) {
    case "name":
      return self__.name;
      break;
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40288, else__4142__auto__);
  }
};
schema.core.NamedSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.NamedSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.NamedSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.NamedSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.NamedSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.NamedSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.NamedSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.NamedSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40287) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40291 = cljs.core.keyword_identical_QMARK_;
  var expr__40292 = k__4147__auto__;
  if (cljs.core.truth_(pred__40291.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__40292))) {
    return new schema.core.NamedSchema(G__40287, self__.name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__40291.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__40292))) {
      return new schema.core.NamedSchema(self__.schema, G__40287, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40287), null);
    }
  }
};
schema.core.NamedSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40287) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.NamedSchema(self__.schema, self__.name, G__40287, self__.__extmap, self__.__hash);
};
schema.core.NamedSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.NamedSchema.prototype.schema$core$Schema$ = true;
schema.core.NamedSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walker = schema.core.subschema_walker.call(null, self__.schema);
  return function(sub_walker, this$__$1) {
    return function(x) {
      return schema.utils.wrap_error_name.call(null, self__.name, sub_walker.call(null, x));
    };
  }(sub_walker, this$__$1);
};
schema.core.NamedSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.name), schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "named", "named", 1218138048, null));
};
schema.core.NamedSchema.cljs$lang$type = true;
schema.core.NamedSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/NamedSchema");
};
schema.core.NamedSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/NamedSchema");
};
schema.core.__GT_NamedSchema = function __GT_NamedSchema(schema__$1, name) {
  return new schema.core.NamedSchema(schema__$1, name);
};
schema.core.map__GT_NamedSchema = function map__GT_NamedSchema(G__40289) {
  return new schema.core.NamedSchema((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__40289), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__40289), null, cljs.core.dissoc.call(null, G__40289, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "name", "name", 1843675177)));
};
schema.core.named = function named(schema__$1, name) {
  return new schema.core.NamedSchema(schema__$1, name);
};
schema.core.Either = function(schemas, __meta, __extmap) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Either.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Either.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40296, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40298 = k40296 instanceof cljs.core.Keyword ? k40296.fqn : null;
  switch(G__40298) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40296, else__4142__auto__);
  }
};
schema.core.Either.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Either{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Either.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Either(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Either.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Either.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Either.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Either.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Either(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Either.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40295) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40299 = cljs.core.keyword_identical_QMARK_;
  var expr__40300 = k__4147__auto__;
  if (cljs.core.truth_(pred__40299.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__40300))) {
    return new schema.core.Either(G__40295, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Either(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40295), null);
  }
};
schema.core.Either.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40295) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Either(self__.schemas, G__40295, self__.__extmap, self__.__hash);
};
schema.core.Either.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Either.prototype.schema$core$Schema$ = true;
schema.core.Either.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walkers = cljs.core.mapv.call(null, schema.core.subschema_walker, self__.schemas);
  return function(sub_walkers, this$__$1) {
    return function(x) {
      var sub_walkers__$1 = cljs.core.seq.call(null, sub_walkers);
      while (true) {
        if (cljs.core.not.call(null, sub_walkers__$1)) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(sub_walkers__$1, sub_walkers, this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "schemas", "schemas", -2079365190, null)), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "%", "%", -950237169, null)), new cljs.core.Symbol(null, "check", "check", -1428126865, null))), new cljs.core.Symbol(null, "some", "some", 
              -310548046, null));
            };
          }(sub_walkers__$1, sub_walkers, this$__$1), null), null));
        } else {
          var res = cljs.core.first.call(null, sub_walkers__$1).call(null, x);
          if (!schema.utils.error_QMARK_.call(null, res)) {
            return res;
          } else {
            var G__40303 = cljs.core.next.call(null, sub_walkers__$1);
            sub_walkers__$1 = G__40303;
            continue;
          }
        }
        break;
      }
    };
  }(sub_walkers, this$__$1);
};
schema.core.Either.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "either", "either", -2144373018, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.Either.cljs$lang$type = true;
schema.core.Either.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Either");
};
schema.core.Either.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Either");
};
schema.core.__GT_Either = function __GT_Either(schemas) {
  return new schema.core.Either(schemas);
};
schema.core.map__GT_Either = function map__GT_Either(G__40297) {
  return new schema.core.Either((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__40297), null, cljs.core.dissoc.call(null, G__40297, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)));
};
schema.core.either = function() {
  var either__delegate = function(schemas) {
    return new schema.core.Either(schemas);
  };
  var either = function(var_args) {
    var schemas = null;
    if (arguments.length > 0) {
      schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return either__delegate.call(this, schemas);
  };
  either.cljs$lang$maxFixedArity = 0;
  either.cljs$lang$applyTo = function(arglist__40304) {
    var schemas = cljs.core.seq(arglist__40304);
    return either__delegate(schemas);
  };
  either.cljs$core$IFn$_invoke$arity$variadic = either__delegate;
  return either;
}();
schema.core.Both = function(schemas, __meta, __extmap) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Both.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Both.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40306, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40308 = k40306 instanceof cljs.core.Keyword ? k40306.fqn : null;
  switch(G__40308) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40306, else__4142__auto__);
  }
};
schema.core.Both.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Both{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Both.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Both(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Both.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Both.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Both.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Both.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Both(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Both.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40305) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40309 = cljs.core.keyword_identical_QMARK_;
  var expr__40310 = k__4147__auto__;
  if (cljs.core.truth_(pred__40309.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__40310))) {
    return new schema.core.Both(G__40305, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Both(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40305), null);
  }
};
schema.core.Both.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40305) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Both(self__.schemas, G__40305, self__.__extmap, self__.__hash);
};
schema.core.Both.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Both.prototype.schema$core$Schema$ = true;
schema.core.Both.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walkers = cljs.core.mapv.call(null, schema.core.subschema_walker, self__.schemas);
  return function(sub_walkers, this$__$1) {
    return function(x) {
      return cljs.core.reduce.call(null, function(sub_walkers, this$__$1) {
        return function(x__$1, sub_walker) {
          if (schema.utils.error_QMARK_.call(null, x__$1)) {
            return x__$1;
          } else {
            return sub_walker.call(null, x__$1);
          }
        };
      }(sub_walkers, this$__$1), x, sub_walkers);
    };
  }(sub_walkers, this$__$1);
};
schema.core.Both.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "both", "both", 1246882687, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.Both.cljs$lang$type = true;
schema.core.Both.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Both");
};
schema.core.Both.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Both");
};
schema.core.__GT_Both = function __GT_Both(schemas) {
  return new schema.core.Both(schemas);
};
schema.core.map__GT_Both = function map__GT_Both(G__40307) {
  return new schema.core.Both((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__40307), null, cljs.core.dissoc.call(null, G__40307, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)));
};
schema.core.both = function() {
  var both__delegate = function(schemas) {
    return new schema.core.Both(schemas);
  };
  var both = function(var_args) {
    var schemas = null;
    if (arguments.length > 0) {
      schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return both__delegate.call(this, schemas);
  };
  both.cljs$lang$maxFixedArity = 0;
  both.cljs$lang$applyTo = function(arglist__40313) {
    var schemas = cljs.core.seq(arglist__40313);
    return both__delegate(schemas);
  };
  both.cljs$core$IFn$_invoke$arity$variadic = both__delegate;
  return both;
}();
schema.core.ConditionalSchema = function(preds_and_schemas, __meta, __extmap) {
  this.preds_and_schemas = preds_and_schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.ConditionalSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40315, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40317 = k40315 instanceof cljs.core.Keyword ? k40315.fqn : null;
  switch(G__40317) {
    case "preds-and-schemas":
      return self__.preds_and_schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40315, else__4142__auto__);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.ConditionalSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), self__.preds_and_schemas], null)], null), self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.ConditionalSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.ConditionalSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.ConditionalSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40314) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40318 = cljs.core.keyword_identical_QMARK_;
  var expr__40319 = k__4147__auto__;
  if (cljs.core.truth_(pred__40318.call(null, new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), expr__40319))) {
    return new schema.core.ConditionalSchema(G__40314, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40314), null);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), self__.preds_and_schemas], null)], null), self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40314) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.ConditionalSchema(self__.preds_and_schemas, G__40314, self__.__extmap, self__.__hash);
};
schema.core.ConditionalSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.ConditionalSchema.prototype.schema$core$Schema$ = true;
schema.core.ConditionalSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var preds_and_walkers = cljs.core.mapv.call(null, function(this$__$1) {
    return function(p__40321) {
      var vec__40322 = p__40321;
      var pred = cljs.core.nth.call(null, vec__40322, 0, null);
      var schema__$1 = cljs.core.nth.call(null, vec__40322, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred, schema.core.subschema_walker.call(null, schema__$1)], null);
    };
  }(this$__$1), self__.preds_and_schemas);
  return function(preds_and_walkers, this$__$1) {
    return function(x) {
      var temp__4124__auto__ = cljs.core.first.call(null, cljs.core.filter.call(null, function(preds_and_walkers, this$__$1) {
        return function(p__40323) {
          var vec__40324 = p__40323;
          var pred = cljs.core.nth.call(null, vec__40324, 0, null);
          return pred.call(null, x);
        };
      }(preds_and_walkers, this$__$1), preds_and_walkers));
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__40325 = temp__4124__auto__;
        var _ = cljs.core.nth.call(null, vec__40325, 0, null);
        var match = cljs.core.nth.call(null, vec__40325, 1, null);
        return match.call(null, x);
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(temp__4124__auto__, preds_and_walkers, this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "matches-some-condition?", "matches-some-condition?", 2097370044, null));
          };
        }(temp__4124__auto__, preds_and_walkers, this$__$1), null), null));
      }
    };
  }(preds_and_walkers, this$__$1);
};
schema.core.ConditionalSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "conditional", "conditional", -1212542970, null), cljs.core.mapcat.call(null, function(this$__$1) {
    return function(p__40326) {
      var vec__40327 = p__40326;
      var pred = cljs.core.nth.call(null, vec__40327, 0, null);
      var schema__$1 = cljs.core.nth.call(null, vec__40327, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred, schema.core.explain.call(null, schema__$1)], null);
    };
  }(this$__$1), self__.preds_and_schemas));
};
schema.core.ConditionalSchema.cljs$lang$type = true;
schema.core.ConditionalSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/ConditionalSchema");
};
schema.core.ConditionalSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/ConditionalSchema");
};
schema.core.__GT_ConditionalSchema = function __GT_ConditionalSchema(preds_and_schemas) {
  return new schema.core.ConditionalSchema(preds_and_schemas);
};
schema.core.map__GT_ConditionalSchema = function map__GT_ConditionalSchema(G__40316) {
  return new schema.core.ConditionalSchema((new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355)).cljs$core$IFn$_invoke$arity$1(G__40316), null, cljs.core.dissoc.call(null, G__40316, new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355)));
};
schema.core.conditional = function() {
  var conditional__delegate = function(preds_and_schemas) {
    if (cljs.core.seq.call(null, preds_and_schemas) && cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, preds_and_schemas))) {
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Expected even, nonzero number of args; got %s", cljs.core.count.call(null, preds_and_schemas)));
    }
    return new schema.core.ConditionalSchema(function() {
      var iter__4278__auto__ = function iter__40337(s__40338) {
        return new cljs.core.LazySeq(null, function() {
          var s__40338__$1 = s__40338;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__40338__$1);
            if (temp__4126__auto__) {
              var s__40338__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__40338__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40338__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__40340 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__40339 = 0;
                  while (true) {
                    if (i__40339 < size__4277__auto__) {
                      var vec__40343 = cljs.core._nth.call(null, c__4276__auto__, i__40339);
                      var pred = cljs.core.nth.call(null, vec__40343, 0, null);
                      var schema__$1 = cljs.core.nth.call(null, vec__40343, 1, null);
                      cljs.core.chunk_append.call(null, b__40340, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, pred, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.constantly.call(null, true) : pred, schema__$1], null));
                      var G__40345 = i__40339 + 1;
                      i__40339 = G__40345;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40340), iter__40337.call(null, cljs.core.chunk_rest.call(null, s__40338__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40340), null);
                }
              } else {
                var vec__40344 = cljs.core.first.call(null, s__40338__$2);
                var pred = cljs.core.nth.call(null, vec__40344, 0, null);
                var schema__$1 = cljs.core.nth.call(null, vec__40344, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, pred, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.constantly.call(null, true) : pred, schema__$1], null), iter__40337.call(null, cljs.core.rest.call(null, s__40338__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4278__auto__.call(null, cljs.core.partition.call(null, 2, preds_and_schemas));
    }());
  };
  var conditional = function(var_args) {
    var preds_and_schemas = null;
    if (arguments.length > 0) {
      preds_and_schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return conditional__delegate.call(this, preds_and_schemas);
  };
  conditional.cljs$lang$maxFixedArity = 0;
  conditional.cljs$lang$applyTo = function(arglist__40346) {
    var preds_and_schemas = cljs.core.seq(arglist__40346);
    return conditional__delegate(preds_and_schemas);
  };
  conditional.cljs$core$IFn$_invoke$arity$variadic = conditional__delegate;
  return conditional;
}();
schema.core.if$ = function if$(pred, if_schema, else_schema) {
  return schema.core.conditional.call(null, pred, if_schema, cljs.core.constantly.call(null, true), else_schema);
};
schema.core._PLUS_missing_PLUS_ = new cljs.core.Keyword("schema.core", "missing", "schema.core/missing", 1420181325);
schema.core.RequiredKey = function(k, __meta, __extmap) {
  this.k = k;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.RequiredKey.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.RequiredKey.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40348, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40350 = k40348 instanceof cljs.core.Keyword ? k40348.fqn : null;
  switch(G__40350) {
    case "k":
      return self__.k;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40348, else__4142__auto__);
  }
};
schema.core.RequiredKey.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.RequiredKey{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.RequiredKey.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.RequiredKey(self__.k, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.RequiredKey.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.RequiredKey.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.RequiredKey.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.RequiredKey.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "k", "k", -2146297393), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.RequiredKey(self__.k, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.RequiredKey.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40347) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40351 = cljs.core.keyword_identical_QMARK_;
  var expr__40352 = k__4147__auto__;
  if (cljs.core.truth_(pred__40351.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), expr__40352))) {
    return new schema.core.RequiredKey(G__40347, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.RequiredKey(self__.k, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40347), null);
  }
};
schema.core.RequiredKey.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40347) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.RequiredKey(self__.k, G__40347, self__.__extmap, self__.__hash);
};
schema.core.RequiredKey.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.RequiredKey.cljs$lang$type = true;
schema.core.RequiredKey.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/RequiredKey");
};
schema.core.RequiredKey.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/RequiredKey");
};
schema.core.__GT_RequiredKey = function __GT_RequiredKey(k) {
  return new schema.core.RequiredKey(k);
};
schema.core.map__GT_RequiredKey = function map__GT_RequiredKey(G__40349) {
  return new schema.core.RequiredKey((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(G__40349), null, cljs.core.dissoc.call(null, G__40349, new cljs.core.Keyword(null, "k", "k", -2146297393)));
};
schema.core.required_key = function required_key(k) {
  if (k instanceof cljs.core.Keyword) {
    return k;
  } else {
    return new schema.core.RequiredKey(k);
  }
};
schema.core.required_key_QMARK_ = function required_key_QMARK_(ks) {
  return ks instanceof cljs.core.Keyword || ks instanceof schema.core.RequiredKey;
};
schema.core.OptionalKey = function(k, __meta, __extmap) {
  this.k = k;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.OptionalKey.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.OptionalKey.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40356, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40358 = k40356 instanceof cljs.core.Keyword ? k40356.fqn : null;
  switch(G__40358) {
    case "k":
      return self__.k;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40356, else__4142__auto__);
  }
};
schema.core.OptionalKey.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.OptionalKey{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.OptionalKey.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.OptionalKey(self__.k, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.OptionalKey.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.OptionalKey.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.OptionalKey.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.OptionalKey.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "k", "k", -2146297393), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.OptionalKey(self__.k, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.OptionalKey.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40355) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40359 = cljs.core.keyword_identical_QMARK_;
  var expr__40360 = k__4147__auto__;
  if (cljs.core.truth_(pred__40359.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), expr__40360))) {
    return new schema.core.OptionalKey(G__40355, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.OptionalKey(self__.k, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40355), null);
  }
};
schema.core.OptionalKey.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40355) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.OptionalKey(self__.k, G__40355, self__.__extmap, self__.__hash);
};
schema.core.OptionalKey.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.OptionalKey.cljs$lang$type = true;
schema.core.OptionalKey.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/OptionalKey");
};
schema.core.OptionalKey.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/OptionalKey");
};
schema.core.__GT_OptionalKey = function __GT_OptionalKey(k) {
  return new schema.core.OptionalKey(k);
};
schema.core.map__GT_OptionalKey = function map__GT_OptionalKey(G__40357) {
  return new schema.core.OptionalKey((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(G__40357), null, cljs.core.dissoc.call(null, G__40357, new cljs.core.Keyword(null, "k", "k", -2146297393)));
};
schema.core.optional_key = function optional_key(k) {
  return new schema.core.OptionalKey(k);
};
schema.core.optional_key_QMARK_ = function optional_key_QMARK_(ks) {
  return ks instanceof schema.core.OptionalKey;
};
schema.core.explicit_schema_key = function explicit_schema_key(ks) {
  if (ks instanceof cljs.core.Keyword) {
    return ks;
  } else {
    if (ks instanceof schema.core.RequiredKey) {
      return ks.k;
    } else {
      if (schema.core.optional_key_QMARK_.call(null, ks)) {
        return ks.k;
      } else {
        throw new Error(schema.utils.format_STAR_.call(null, "Bad explicit key: %s", ks));
      }
    }
  }
};
schema.core.specific_key_QMARK_ = function specific_key_QMARK_(ks) {
  return schema.core.required_key_QMARK_.call(null, ks) || schema.core.optional_key_QMARK_.call(null, ks);
};
schema.core.explain_kspec = function explain_kspec(kspec) {
  if (schema.core.specific_key_QMARK_.call(null, kspec)) {
    if (kspec instanceof cljs.core.Keyword) {
      return kspec;
    } else {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explicit_schema_key.call(null, kspec)), schema.core.required_key_QMARK_.call(null, kspec) ? new cljs.core.Symbol(null, "required-key", "required-key", 1624616412, null) : schema.core.optional_key_QMARK_.call(null, kspec) ? new cljs.core.Symbol(null, "optional-key", "optional-key", 988406145, null) : null);
    }
  } else {
    return schema.core.explain.call(null, kspec);
  }
};
schema.core.MapEntry = function(kspec, val_schema, __meta, __extmap) {
  this.kspec = kspec;
  this.val_schema = val_schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40364, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40366 = k40364 instanceof cljs.core.Keyword ? k40364.fqn : null;
  switch(G__40366) {
    case "val-schema":
      return self__.val_schema;
      break;
    case "kspec":
      return self__.kspec;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40364, else__4142__auto__);
  }
};
schema.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.MapEntry{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), self__.kspec], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), self__.val_schema], null)], null), self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.MapEntry.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.MapEntry.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), null, new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40363) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40367 = cljs.core.keyword_identical_QMARK_;
  var expr__40368 = k__4147__auto__;
  if (cljs.core.truth_(pred__40367.call(null, new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), expr__40368))) {
    return new schema.core.MapEntry(G__40363, self__.val_schema, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__40367.call(null, new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), expr__40368))) {
      return new schema.core.MapEntry(self__.kspec, G__40363, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40363), null);
    }
  }
};
schema.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), self__.kspec], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), self__.val_schema], null)], null), self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40363) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.MapEntry(self__.kspec, self__.val_schema, G__40363, self__.__extmap, self__.__hash);
};
schema.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.MapEntry.prototype.schema$core$Schema$ = true;
schema.core.MapEntry.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var val_walker = schema.core.subschema_walker.call(null, self__.val_schema);
  if (schema.core.specific_key_QMARK_.call(null, self__.kspec)) {
    var optional_QMARK_ = schema.core.optional_key_QMARK_.call(null, self__.kspec);
    var k = schema.core.explicit_schema_key.call(null, self__.kspec);
    return function(optional_QMARK_, k, val_walker, this$__$1) {
      return function(x) {
        if (schema.core._PLUS_missing_PLUS_ === x) {
          if (optional_QMARK_) {
            return null;
          } else {
            return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null)], null));
          }
        } else {
          if (!cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, x))) {
            return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(optional_QMARK_, k, val_walker, this$__$1) {
              return function() {
                return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "count", "count", -514511684, null))), 2), cljs.core._EQ_);
              };
            }(optional_QMARK_, k, val_walker, this$__$1), null), null));
          } else {
            var vec__40370 = x;
            var xk = cljs.core.nth.call(null, vec__40370, 0, null);
            var xv = cljs.core.nth.call(null, vec__40370, 1, null);
            if (cljs.core._EQ_.call(null, xk, k)) {
            } else {
              throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "xk", "xk", 741114825, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)))));
            }
            var vres = val_walker.call(null, xv);
            var temp__4124__auto__ = schema.utils.error_val.call(null, vres);
            if (cljs.core.truth_(temp__4124__auto__)) {
              var ve = temp__4124__auto__;
              return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xk, ve], null));
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xk, vres], null);
            }
          }
        }
      };
    }(optional_QMARK_, k, val_walker, this$__$1);
  } else {
    var key_walker = schema.core.subschema_walker.call(null, self__.kspec);
    return function(key_walker, val_walker, this$__$1) {
      return function(x) {
        if (!cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, x))) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(key_walker, val_walker, this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "count", "count", -514511684, null))), 2), cljs.core._EQ_);
            };
          }(key_walker, val_walker, this$__$1), null), null));
        } else {
          var out_k = key_walker.call(null, cljs.core.key.call(null, x));
          var out_ke = schema.utils.error_val.call(null, out_k);
          var out_v = val_walker.call(null, cljs.core.val.call(null, x));
          var out_ve = schema.utils.error_val.call(null, out_v);
          if (cljs.core.truth_(function() {
            var or__3553__auto__ = out_ke;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return out_ve;
            }
          }())) {
            return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
              var or__3553__auto__ = out_ke;
              if (cljs.core.truth_(or__3553__auto__)) {
                return or__3553__auto__;
              } else {
                return cljs.core.key.call(null, x);
              }
            }(), function() {
              var or__3553__auto__ = out_ve;
              if (cljs.core.truth_(or__3553__auto__)) {
                return or__3553__auto__;
              } else {
                return new cljs.core.Symbol(null, "invalid-key", "invalid-key", -1461682245, null);
              }
            }()], null));
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [out_k, out_v], null);
          }
        }
      };
    }(key_walker, val_walker, this$__$1);
  }
};
schema.core.MapEntry.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.val_schema)), schema.core.explain_kspec.call(null, self__.kspec)), new cljs.core.Symbol(null, "map-entry", "map-entry", 329617471, null));
};
schema.core.MapEntry.cljs$lang$type = true;
schema.core.MapEntry.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/MapEntry");
};
schema.core.MapEntry.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/MapEntry");
};
schema.core.__GT_MapEntry = function __GT_MapEntry(kspec, val_schema) {
  return new schema.core.MapEntry(kspec, val_schema);
};
schema.core.map__GT_MapEntry = function map__GT_MapEntry(G__40365) {
  return new schema.core.MapEntry((new cljs.core.Keyword(null, "kspec", "kspec", -1151232248)).cljs$core$IFn$_invoke$arity$1(G__40365), (new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)).cljs$core$IFn$_invoke$arity$1(G__40365), null, cljs.core.dissoc.call(null, G__40365, new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)));
};
schema.core.map_entry = function map_entry(kspec, val_schema) {
  return new schema.core.MapEntry(kspec, val_schema);
};
schema.core.find_extra_keys_schema = function find_extra_keys_schema(map_schema) {
  var key_schemata = cljs.core.remove.call(null, schema.core.specific_key_QMARK_, cljs.core.keys.call(null, map_schema));
  if (cljs.core.count.call(null, key_schemata) < 2) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "More than one non-optional/required key schemata: %s", cljs.core.vec.call(null, key_schemata)));
  }
  return cljs.core.first.call(null, key_schemata);
};
schema.core.map_walker = function map_walker(map_schema) {
  var extra_keys_schema = schema.core.find_extra_keys_schema.call(null, map_schema);
  var extra_walker = cljs.core.truth_(extra_keys_schema) ? schema.core.subschema_walker.call(null, cljs.core.apply.call(null, schema.core.map_entry, cljs.core.find.call(null, map_schema, extra_keys_schema))) : null;
  var explicit_schema = cljs.core.dissoc.call(null, map_schema, extra_keys_schema);
  var explicit_walkers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4278__auto__ = function(extra_keys_schema, extra_walker, explicit_schema) {
      return function iter__40384(s__40385) {
        return new cljs.core.LazySeq(null, function(extra_keys_schema, extra_walker, explicit_schema) {
          return function() {
            var s__40385__$1 = s__40385;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__40385__$1);
              if (temp__4126__auto__) {
                var s__40385__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__40385__$2)) {
                  var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40385__$2);
                  var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                  var b__40387 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                  if (function() {
                    var i__40386 = 0;
                    while (true) {
                      if (i__40386 < size__4277__auto__) {
                        var vec__40390 = cljs.core._nth.call(null, c__4276__auto__, i__40386);
                        var k = cljs.core.nth.call(null, vec__40390, 0, null);
                        var v = cljs.core.nth.call(null, vec__40390, 1, null);
                        cljs.core.chunk_append.call(null, b__40387, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.subschema_walker.call(null, schema.core.map_entry.call(null, k, v))], null));
                        var G__40395 = i__40386 + 1;
                        i__40386 = G__40395;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40387), iter__40384.call(null, cljs.core.chunk_rest.call(null, s__40385__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40387), null);
                  }
                } else {
                  var vec__40391 = cljs.core.first.call(null, s__40385__$2);
                  var k = cljs.core.nth.call(null, vec__40391, 0, null);
                  var v = cljs.core.nth.call(null, vec__40391, 1, null);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.subschema_walker.call(null, schema.core.map_entry.call(null, k, v))], null), iter__40384.call(null, cljs.core.rest.call(null, s__40385__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(extra_keys_schema, extra_walker, explicit_schema), null, null);
      };
    }(extra_keys_schema, extra_walker, explicit_schema);
    return iter__4278__auto__.call(null, explicit_schema);
  }());
  var err_conj = schema.utils.result_builder.call(null, cljs.core.constantly.call(null, cljs.core.PersistentArrayMap.EMPTY));
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, explicit_schema), cljs.core.count.call(null, explicit_walkers))) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Schema has multiple variants of the same explicit key: %s", cljs.core.mapv.call(null, schema.core.explain_kspec, cljs.core.apply.call(null, cljs.core.concat, cljs.core.filter.call(null, function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
      return function(p1__40372_SHARP_) {
        return cljs.core.count.call(null, p1__40372_SHARP_) > 1;
      };
    }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), cljs.core.vals.call(null, cljs.core.group_by.call(null, schema.core.explicit_schema_key, cljs.core.keys.call(null, explicit_schema))))))));
  }
  return function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
    return function(x) {
      if (!cljs.core.map_QMARK_.call(null, x)) {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, map_schema, x, new cljs.core.Delay(function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
          };
        }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), null), null));
      } else {
        var x__$1 = x;
        var explicit_walkers__$1 = cljs.core.seq.call(null, explicit_walkers);
        var out = cljs.core.PersistentArrayMap.EMPTY;
        while (true) {
          if (cljs.core.not.call(null, explicit_walkers__$1)) {
            return cljs.core.reduce.call(null, cljs.core.truth_(extra_walker) ? function(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
              return function(out__$1, e) {
                return err_conj.call(null, out__$1, extra_walker.call(null, e));
              };
            }(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) : function(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
              return function(out__$1, p__40392) {
                var vec__40393 = p__40392;
                var k = cljs.core.nth.call(null, vec__40393, 0, null);
                var _ = cljs.core.nth.call(null, vec__40393, 1, null);
                return err_conj.call(null, out__$1, schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Symbol(null, "disallowed-key", "disallowed-key", -1877785633, null)], null)));
              };
            }(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), out, x__$1);
          } else {
            var vec__40394 = cljs.core.first.call(null, explicit_walkers__$1);
            var wk = cljs.core.nth.call(null, vec__40394, 0, null);
            var wv = cljs.core.nth.call(null, vec__40394, 1, null);
            var G__40396 = cljs.core.dissoc.call(null, x__$1, wk);
            var G__40397 = cljs.core.next.call(null, explicit_walkers__$1);
            var G__40398 = err_conj.call(null, out, wv.call(null, function() {
              var or__3553__auto__ = cljs.core.find.call(null, x__$1, wk);
              if (cljs.core.truth_(or__3553__auto__)) {
                return or__3553__auto__;
              } else {
                return schema.core._PLUS_missing_PLUS_;
              }
            }()));
            x__$1 = G__40396;
            explicit_walkers__$1 = G__40397;
            out = G__40398;
            continue;
          }
          break;
        }
      }
    };
  }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj);
};
schema.core.map_explain = function map_explain(this$) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4278__auto__ = function iter__40407(s__40408) {
      return new cljs.core.LazySeq(null, function() {
        var s__40408__$1 = s__40408;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__40408__$1);
          if (temp__4126__auto__) {
            var s__40408__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__40408__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40408__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__40410 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__40409 = 0;
                while (true) {
                  if (i__40409 < size__4277__auto__) {
                    var vec__40413 = cljs.core._nth.call(null, c__4276__auto__, i__40409);
                    var k = cljs.core.nth.call(null, vec__40413, 0, null);
                    var v = cljs.core.nth.call(null, vec__40413, 1, null);
                    cljs.core.chunk_append.call(null, b__40410, cljs.core.vec.call(null, cljs.core.next.call(null, schema.core.explain.call(null, schema.core.map_entry.call(null, k, v)))));
                    var G__40415 = i__40409 + 1;
                    i__40409 = G__40415;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40410), iter__40407.call(null, cljs.core.chunk_rest.call(null, s__40408__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40410), null);
              }
            } else {
              var vec__40414 = cljs.core.first.call(null, s__40408__$2);
              var k = cljs.core.nth.call(null, vec__40414, 0, null);
              var v = cljs.core.nth.call(null, vec__40414, 1, null);
              return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.next.call(null, schema.core.explain.call(null, schema.core.map_entry.call(null, k, v)))), iter__40407.call(null, cljs.core.rest.call(null, s__40408__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, this$);
  }());
};
cljs.core.PersistentHashMap.prototype.schema$core$Schema$ = true;
cljs.core.PersistentHashMap.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_walker.call(null, this$__$1);
};
cljs.core.PersistentHashMap.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_explain.call(null, this$__$1);
};
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$ = true;
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_walker.call(null, this$__$1);
};
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_explain.call(null, this$__$1);
};
cljs.core.PersistentHashSet.prototype.schema$core$Schema$ = true;
cljs.core.PersistentHashSet.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, this$__$1), 1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Set schema must have exactly one element"));
  }
  var sub_walker = schema.core.subschema_walker.call(null, cljs.core.first.call(null, this$__$1));
  return function(sub_walker, this$__$1) {
    return function(x) {
      var or__3553__auto__ = cljs.core.set_QMARK_.call(null, x) ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(sub_walker, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "set?", "set?", 1636014792, null));
        };
      }(sub_walker, this$__$1), null), null));
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        var vec__40416 = cljs.core.juxt.call(null, cljs.core.remove, cljs.core.keep).call(null, schema.utils.error_val, cljs.core.map.call(null, sub_walker, x));
        var good = cljs.core.nth.call(null, vec__40416, 0, null);
        var bad = cljs.core.nth.call(null, vec__40416, 1, null);
        if (cljs.core.seq.call(null, bad)) {
          return schema.utils.error.call(null, cljs.core.set.call(null, bad));
        } else {
          return cljs.core.set.call(null, good);
        }
      }
    };
  }(sub_walker, this$__$1);
};
cljs.core.PersistentHashSet.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.set.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain.call(null, cljs.core.first.call(null, this$__$1))], null));
};
schema.core.One = function(schema, optional_QMARK_, name, __meta, __extmap) {
  this.schema = schema;
  this.optional_QMARK_ = optional_QMARK_;
  this.name = name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.One.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.One.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40418, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40420 = k40418 instanceof cljs.core.Keyword ? k40418.fqn : null;
  switch(G__40420) {
    case "name":
      return self__.name;
      break;
    case "optional?":
      return self__.optional_QMARK_;
      break;
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40418, else__4142__auto__);
  }
};
schema.core.One.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.One{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), self__.optional_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.One.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.One.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.One.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.One.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.One.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.One.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null, new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.One.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40417) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40421 = cljs.core.keyword_identical_QMARK_;
  var expr__40422 = k__4147__auto__;
  if (cljs.core.truth_(pred__40421.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__40422))) {
    return new schema.core.One(G__40417, self__.optional_QMARK_, self__.name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__40421.call(null, new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), expr__40422))) {
      return new schema.core.One(self__.schema, G__40417, self__.name, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__40421.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__40422))) {
        return new schema.core.One(self__.schema, self__.optional_QMARK_, G__40417, self__.__meta, self__.__extmap, null);
      } else {
        return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40417), null);
      }
    }
  }
};
schema.core.One.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), self__.optional_QMARK_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.One.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40417) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, G__40417, self__.__extmap, self__.__hash);
};
schema.core.One.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.One.cljs$lang$type = true;
schema.core.One.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/One");
};
schema.core.One.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/One");
};
schema.core.__GT_One = function __GT_One(schema__$1, optional_QMARK_, name) {
  return new schema.core.One(schema__$1, optional_QMARK_, name);
};
schema.core.map__GT_One = function map__GT_One(G__40419) {
  return new schema.core.One((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__40419), (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(G__40419), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__40419), null, cljs.core.dissoc.call(null, G__40419, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "optional?", "optional?", 
  1184638129), new cljs.core.Keyword(null, "name", "name", 1843675177)));
};
schema.core.one = function one(schema__$1, name) {
  return new schema.core.One(schema__$1, false, name);
};
schema.core.optional = function optional(schema__$1, name) {
  return new schema.core.One(schema__$1, true, name);
};
schema.core.parse_sequence_schema = function parse_sequence_schema(s) {
  var vec__40430 = cljs.core.split_with.call(null, function(p1__40425_SHARP_) {
    return p1__40425_SHARP_ instanceof schema.core.One && cljs.core.not.call(null, (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(p1__40425_SHARP_));
  }, s);
  var required = cljs.core.nth.call(null, vec__40430, 0, null);
  var more = cljs.core.nth.call(null, vec__40430, 1, null);
  var vec__40431 = cljs.core.split_with.call(null, function(vec__40430, required, more) {
    return function(p1__40426_SHARP_) {
      var and__3541__auto__ = p1__40426_SHARP_ instanceof schema.core.One;
      if (and__3541__auto__) {
        return(new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(p1__40426_SHARP_);
      } else {
        return and__3541__auto__;
      }
    };
  }(vec__40430, required, more), more);
  var optional = cljs.core.nth.call(null, vec__40431, 0, null);
  var more__$1 = cljs.core.nth.call(null, vec__40431, 1, null);
  if (cljs.core.count.call(null, more__$1) <= 1 && cljs.core.every_QMARK_.call(null, function(vec__40430, required, more, vec__40431, optional, more__$1) {
    return function(p1__40427_SHARP_) {
      return!(p1__40427_SHARP_ instanceof schema.core.One);
    };
  }(vec__40430, required, more, vec__40431, optional, more__$1), more__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Sequence schema %s does not match [one* optional* rest-schema?]", s));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.call(null, required, optional), cljs.core.first.call(null, more__$1)], null);
};
cljs.core.PersistentVector.prototype.schema$core$Schema$ = true;
cljs.core.PersistentVector.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  var vec__40432 = schema.core.parse_sequence_schema.call(null, this$__$1);
  var singles = cljs.core.nth.call(null, vec__40432, 0, null);
  var multi = cljs.core.nth.call(null, vec__40432, 1, null);
  var single_walkers = cljs.core.vec.call(null, function() {
    var iter__4278__auto__ = function(vec__40432, singles, multi, this$__$1) {
      return function iter__40433(s__40434) {
        return new cljs.core.LazySeq(null, function(vec__40432, singles, multi, this$__$1) {
          return function() {
            var s__40434__$1 = s__40434;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__40434__$1);
              if (temp__4126__auto__) {
                var s__40434__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__40434__$2)) {
                  var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40434__$2);
                  var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                  var b__40436 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                  if (function() {
                    var i__40435 = 0;
                    while (true) {
                      if (i__40435 < size__4277__auto__) {
                        var s = cljs.core._nth.call(null, c__4276__auto__, i__40435);
                        cljs.core.chunk_append.call(null, b__40436, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, schema.core.subschema_walker.call(null, s.schema)], null));
                        var G__40451 = i__40435 + 1;
                        i__40435 = G__40451;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40436), iter__40433.call(null, cljs.core.chunk_rest.call(null, s__40434__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40436), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__40434__$2);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, schema.core.subschema_walker.call(null, s.schema)], null), iter__40433.call(null, cljs.core.rest.call(null, s__40434__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(vec__40432, singles, multi, this$__$1), null, null);
      };
    }(vec__40432, singles, multi, this$__$1);
    return iter__4278__auto__.call(null, singles);
  }());
  var multi_walker = cljs.core.truth_(multi) ? schema.core.subschema_walker.call(null, multi) : null;
  var err_conj = schema.utils.result_builder.call(null, function(vec__40432, singles, multi, single_walkers, multi_walker, this$__$1) {
    return function(m) {
      return cljs.core.vec.call(null, cljs.core.repeat.call(null, cljs.core.count.call(null, m), null));
    };
  }(vec__40432, singles, multi, single_walkers, multi_walker, this$__$1));
  return function(vec__40432, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
    return function(x) {
      var or__3553__auto__ = x == null || cljs.core.sequential_QMARK_.call(null, x) ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(vec__40432, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "sequential?", "sequential?", 1102351463, null));
        };
      }(vec__40432, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null));
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        var single_walkers__$1 = single_walkers;
        var x__$1 = x;
        var out = cljs.core.PersistentVector.EMPTY;
        while (true) {
          var temp__4124__auto__ = cljs.core.first.call(null, single_walkers__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var vec__40437 = temp__4124__auto__;
            var first_single = cljs.core.nth.call(null, vec__40437, 0, null);
            var single_walker = cljs.core.nth.call(null, vec__40437, 1, null);
            if (cljs.core.empty_QMARK_.call(null, x__$1)) {
              if (cljs.core.truth_(first_single.optional_QMARK_)) {
                return out;
              } else {
                return err_conj.call(null, out, schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first, single_walkers__$1)), null, new cljs.core.Delay(function(single_walkers__$1, x__$1, out, vec__40437, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__40432, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                  return function() {
                    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "present?", "present?", -1810613791, null), function() {
                      var iter__4278__auto__ = function(single_walkers__$1, x__$1, out, vec__40437, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__40432, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                        return function iter__40438(s__40439) {
                          return new cljs.core.LazySeq(null, function(single_walkers__$1, x__$1, out, vec__40437, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__40432, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                            return function() {
                              var s__40439__$1 = s__40439;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq.call(null, s__40439__$1);
                                if (temp__4126__auto__) {
                                  var s__40439__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__40439__$2)) {
                                    var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40439__$2);
                                    var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                    var b__40441 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                    if (function() {
                                      var i__40440 = 0;
                                      while (true) {
                                        if (i__40440 < size__4277__auto__) {
                                          var vec__40444 = cljs.core._nth.call(null, c__4276__auto__, i__40440);
                                          var single = cljs.core.nth.call(null, vec__40444, 0, null);
                                          if (cljs.core.not.call(null, single.optional_QMARK_)) {
                                            cljs.core.chunk_append.call(null, b__40441, single.name);
                                            var G__40452 = i__40440 + 1;
                                            i__40440 = G__40452;
                                            continue;
                                          } else {
                                            return null;
                                          }
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40441), iter__40438.call(null, cljs.core.chunk_rest.call(null, s__40439__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40441), null);
                                    }
                                  } else {
                                    var vec__40445 = cljs.core.first.call(null, s__40439__$2);
                                    var single = cljs.core.nth.call(null, vec__40445, 0, null);
                                    if (cljs.core.not.call(null, single.optional_QMARK_)) {
                                      return cljs.core.cons.call(null, single.name, iter__40438.call(null, cljs.core.rest.call(null, s__40439__$2)));
                                    } else {
                                      return null;
                                    }
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(single_walkers__$1, x__$1, out, vec__40437, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__40432, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null, null);
                        };
                      }(single_walkers__$1, x__$1, out, vec__40437, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__40432, singles, multi, single_walkers, multi_walker, err_conj, this$__$1);
                      return iter__4278__auto__.call(null, single_walkers__$1);
                    }());
                  };
                }(single_walkers__$1, x__$1, out, vec__40437, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__40432, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null)));
              }
            } else {
              var G__40453 = cljs.core.next.call(null, single_walkers__$1);
              var G__40454 = cljs.core.rest.call(null, x__$1);
              var G__40455 = err_conj.call(null, out, schema.utils.wrap_error_name.call(null, first_single.name, single_walker.call(null, cljs.core.first.call(null, x__$1))));
              single_walkers__$1 = G__40453;
              x__$1 = G__40454;
              out = G__40455;
              continue;
            }
          } else {
            if (cljs.core.truth_(multi)) {
              return cljs.core.reduce.call(null, err_conj, out, cljs.core.map.call(null, multi_walker, x__$1));
            } else {
              if (cljs.core.seq.call(null, x__$1)) {
                return err_conj.call(null, out, schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, null, x__$1, new cljs.core.Delay(function(single_walkers__$1, x__$1, out, temp__4124__auto__, or__3553__auto__, vec__40432, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                  return function() {
                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, x__$1)), new cljs.core.Symbol(null, "has-extra-elts?", "has-extra-elts?", -1376562869, null));
                  };
                }(single_walkers__$1, x__$1, out, temp__4124__auto__, or__3553__auto__, vec__40432, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null)));
              } else {
                return out;
              }
            }
          }
          break;
        }
      }
    };
  }(vec__40432, singles, multi, single_walkers, multi_walker, err_conj, this$__$1);
};
cljs.core.PersistentVector.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  var vec__40446 = schema.core.parse_sequence_schema.call(null, this$__$1);
  var singles = cljs.core.nth.call(null, vec__40446, 0, null);
  var multi = cljs.core.nth.call(null, vec__40446, 1, null);
  return cljs.core.vec.call(null, cljs.core.concat.call(null, function() {
    var iter__4278__auto__ = function(vec__40446, singles, multi, this$__$1) {
      return function iter__40447(s__40448) {
        return new cljs.core.LazySeq(null, function(vec__40446, singles, multi, this$__$1) {
          return function() {
            var s__40448__$1 = s__40448;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__40448__$1);
              if (temp__4126__auto__) {
                var s__40448__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__40448__$2)) {
                  var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40448__$2);
                  var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                  var b__40450 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                  if (function() {
                    var i__40449 = 0;
                    while (true) {
                      if (i__40449 < size__4277__auto__) {
                        var s = cljs.core._nth.call(null, c__4276__auto__, i__40449);
                        cljs.core.chunk_append.call(null, b__40450, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(s)), schema.core.explain.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(s))), cljs.core.truth_(s.optional_QMARK_) ? new cljs.core.Symbol(null, "optional", "optional", -600484260, null) : 
                        new cljs.core.Symbol(null, "one", "one", -1719427865, null)));
                        var G__40456 = i__40449 + 1;
                        i__40449 = G__40456;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40450), iter__40447.call(null, cljs.core.chunk_rest.call(null, s__40448__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40450), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__40448__$2);
                  return cljs.core.cons.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(s)), schema.core.explain.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(s))), cljs.core.truth_(s.optional_QMARK_) ? new cljs.core.Symbol(null, "optional", "optional", -600484260, null) : new cljs.core.Symbol(null, 
                  "one", "one", -1719427865, null)), iter__40447.call(null, cljs.core.rest.call(null, s__40448__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(vec__40446, singles, multi, this$__$1), null, null);
      };
    }(vec__40446, singles, multi, this$__$1);
    return iter__4278__auto__.call(null, singles);
  }(), cljs.core.truth_(multi) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain.call(null, multi)], null) : null));
};
schema.core.pair = function pair(first_schema, first_name, second_schema, second_name) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, first_schema, first_name), schema.core.one.call(null, second_schema, second_name)], null);
};
schema.core.Record = function(klass, schema, __meta, __extmap) {
  this.klass = klass;
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Record.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Record.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40458, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40460 = k40458 instanceof cljs.core.Keyword ? k40458.fqn : null;
  switch(G__40460) {
    case "schema":
      return self__.schema;
      break;
    case "klass":
      return self__.klass;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40458, else__4142__auto__);
  }
};
schema.core.Record.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Record{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), self__.klass], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Record.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Record(self__.klass, self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Record.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Record.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Record.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Record.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "klass", "klass", -1386752349), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Record(self__.klass, self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Record.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40457) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40461 = cljs.core.keyword_identical_QMARK_;
  var expr__40462 = k__4147__auto__;
  if (cljs.core.truth_(pred__40461.call(null, new cljs.core.Keyword(null, "klass", "klass", -1386752349), expr__40462))) {
    return new schema.core.Record(G__40457, self__.schema, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__40461.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__40462))) {
      return new schema.core.Record(self__.klass, G__40457, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Record(self__.klass, self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40457), null);
    }
  }
};
schema.core.Record.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), self__.klass], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40457) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Record(self__.klass, self__.schema, G__40457, self__.__extmap, self__.__hash);
};
schema.core.Record.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Record.prototype.schema$core$Schema$ = true;
schema.core.Record.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var map_checker = schema.core.subschema_walker.call(null, self__.schema);
  var pred_checker = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "extra-validator-fn", "extra-validator-fn", 1562905865)).cljs$core$IFn$_invoke$arity$1(this$__$1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var evf = temp__4126__auto__;
      return schema.core.subschema_walker.call(null, schema.core.pred.call(null, evf));
    } else {
      return null;
    }
  }();
  return function(map_checker, pred_checker, this$__$1) {
    return function(r) {
      var or__3553__auto__ = r instanceof self__.klass ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, r, new cljs.core.Delay(function(map_checker, pred_checker, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, r)), self__.klass), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
        };
      }(map_checker, pred_checker, this$__$1), null), null));
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        var res = map_checker.call(null, r);
        if (schema.utils.error_QMARK_.call(null, res)) {
          return res;
        } else {
          var pred_res = cljs.core.truth_(pred_checker) ? pred_checker.call(null, r) : null;
          if (schema.utils.error_QMARK_.call(null, pred_res)) {
            return pred_res;
          } else {
            return cljs.core.merge.call(null, r, res);
          }
        }
      }
    };
  }(map_checker, pred_checker, this$__$1);
};
schema.core.Record.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), cljs.core.symbol.call(null, cljs.core.pr_str.call(null, self__.klass))), new cljs.core.Symbol(null, "record", "record", 861424668, null));
};
schema.core.Record.cljs$lang$type = true;
schema.core.Record.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Record");
};
schema.core.Record.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Record");
};
schema.core.__GT_Record = function __GT_Record(klass, schema__$1) {
  return new schema.core.Record(klass, schema__$1);
};
schema.core.map__GT_Record = function map__GT_Record(G__40459) {
  return new schema.core.Record((new cljs.core.Keyword(null, "klass", "klass", -1386752349)).cljs$core$IFn$_invoke$arity$1(G__40459), (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__40459), null, cljs.core.dissoc.call(null, G__40459, new cljs.core.Keyword(null, "klass", "klass", -1386752349), new cljs.core.Keyword(null, "schema", "schema", -1582001791)));
};
schema.core.record = function record(klass, schema__$1) {
  if (cljs.core.map_QMARK_.call(null, schema__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Expected map, got %s", schema.utils.type_of.call(null, schema__$1)));
  }
  return new schema.core.Record(klass, schema__$1);
};
schema.core.explain_input_schema = function explain_input_schema(input_schema) {
  var vec__40468 = cljs.core.split_with.call(null, function(p1__40465_SHARP_) {
    return p1__40465_SHARP_ instanceof schema.core.One;
  }, input_schema);
  var required = cljs.core.nth.call(null, vec__40468, 0, null);
  var more = cljs.core.nth.call(null, vec__40468, 1, null);
  return cljs.core.concat.call(null, cljs.core.map.call(null, function(vec__40468, required, more) {
    return function(p1__40466_SHARP_) {
      return schema.core.explain.call(null, p1__40466_SHARP_.schema);
    };
  }(vec__40468, required, more), required), cljs.core.seq.call(null, more) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), cljs.core.mapv.call(null, schema.core.explain, more)], null) : null);
};
schema.core.FnSchema = function(output_schema, input_schemas, __meta, __extmap) {
  this.output_schema = output_schema;
  this.input_schemas = input_schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.FnSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.FnSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k40470, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__40472 = k40470 instanceof cljs.core.Keyword ? k40470.fqn : null;
  switch(G__40472) {
    case "input-schemas":
      return self__.input_schemas;
      break;
    case "output-schema":
      return self__.output_schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k40470, else__4142__auto__);
  }
};
schema.core.FnSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.FnSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), self__.output_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), self__.input_schemas], null)], null), self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.FnSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.FnSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.FnSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.FnSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.FnSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), null, new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.FnSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__40469) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__40473 = cljs.core.keyword_identical_QMARK_;
  var expr__40474 = k__4147__auto__;
  if (cljs.core.truth_(pred__40473.call(null, new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), expr__40474))) {
    return new schema.core.FnSchema(G__40469, self__.input_schemas, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__40473.call(null, new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), expr__40474))) {
      return new schema.core.FnSchema(self__.output_schema, G__40469, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__40469), null);
    }
  }
};
schema.core.FnSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), self__.output_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), self__.input_schemas], 
  null)], null), self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__40469) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, G__40469, self__.__extmap, self__.__hash);
};
schema.core.FnSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.FnSchema.prototype.schema$core$Schema$ = true;
schema.core.FnSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.fn_QMARK_.call(null, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.FnSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.input_schemas) > 1) {
    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "\x3d\x3e*", "\x3d\x3e*", 1909690043, null), schema.core.explain.call(null, self__.output_schema), cljs.core.map.call(null, schema.core.explain_input_schema, self__.input_schemas));
  } else {
    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "\x3d\x3e", "\x3d\x3e", -813269641, null), schema.core.explain.call(null, self__.output_schema), schema.core.explain_input_schema.call(null, cljs.core.first.call(null, self__.input_schemas)));
  }
};
schema.core.FnSchema.cljs$lang$type = true;
schema.core.FnSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/FnSchema");
};
schema.core.FnSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/FnSchema");
};
schema.core.__GT_FnSchema = function __GT_FnSchema(output_schema, input_schemas) {
  return new schema.core.FnSchema(output_schema, input_schemas);
};
schema.core.map__GT_FnSchema = function map__GT_FnSchema(G__40471) {
  return new schema.core.FnSchema((new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137)).cljs$core$IFn$_invoke$arity$1(G__40471), (new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)).cljs$core$IFn$_invoke$arity$1(G__40471), null, cljs.core.dissoc.call(null, G__40471, new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)));
};
schema.core.arity = function arity(input_schema) {
  if (cljs.core.seq.call(null, input_schema)) {
    if (cljs.core.last.call(null, input_schema) instanceof schema.core.One) {
      return cljs.core.count.call(null, input_schema);
    } else {
      return Number.MAX_VALUE;
    }
  } else {
    return 0;
  }
};
schema.core.make_fn_schema = function make_fn_schema(output_schema, input_schemas) {
  if (cljs.core.seq.call(null, input_schemas)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Function must have at least one input schema"));
  }
  if (cljs.core.every_QMARK_.call(null, cljs.core.vector_QMARK_, input_schemas)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Each arity must be a vector."));
  }
  if (cljs.core.truth_(cljs.core.apply.call(null, cljs.core.distinct_QMARK_, cljs.core.map.call(null, schema.core.arity, input_schemas)))) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Arities must be distinct"));
  }
  return new schema.core.FnSchema(output_schema, cljs.core.sort_by.call(null, schema.core.arity, input_schemas));
};
schema.core.fn_validation_QMARK_ = function fn_validation_QMARK_() {
  return schema.utils.use_fn_validation.get_cell();
};
schema.core.set_fn_validation_BANG_ = function set_fn_validation_BANG_(on_QMARK_) {
  return schema.utils.use_fn_validation.set_cell(on_QMARK_);
};
schema.core.schematize_fn = function schematize_fn(f, schema__$1) {
  return cljs.core.vary_meta.call(null, f, cljs.core.assoc, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1);
};
schema.core.fn_schema = function fn_schema(f) {
  if (cljs.core.fn_QMARK_.call(null, f)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Non-function %s", schema.utils.type_of.call(null, f)));
  }
  var or__3553__auto__ = schema.utils.class_schema.call(null, schema.utils.fn_schema_bearer.call(null, f));
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    var m__5743__auto__ = cljs.core.meta.call(null, f);
    var k__5744__auto__ = new cljs.core.Keyword(null, "schema", "schema", -1582001791);
    var temp__4124__auto__ = cljs.core.find.call(null, m__5743__auto__, k__5744__auto__);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var pair__5745__auto__ = temp__4124__auto__;
      return cljs.core.val.call(null, pair__5745__auto__);
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Key %s not found in %s", k__5744__auto__, m__5743__auto__));
    }
  }
};
schema.core.schema_with_name = function schema_with_name(schema__$1, name) {
  return cljs.core.with_meta.call(null, schema__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), name], null));
};
schema.core.schema_name = function schema_name(schema__$1) {
  return(new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, schema__$1));
};
goog.provide("plumbing.fnk.schema");
goog.require("cljs.core");
goog.require("schema.utils");
goog.require("schema.utils");
goog.require("schema.core");
goog.require("schema.core");
plumbing.fnk.schema.Schema = cljs.core.with_meta.call(null, schema.core.__GT_Protocol.call(null, schema.core.Schema), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "proto-sym", "proto-sym", -886371734), new cljs.core.Symbol("s", "Schema", "s/Schema", -1305723789, null), new cljs.core.Keyword(null, "proto-pred", "proto-pred", 1885698716), function(p1__5851__5852__auto__) {
  var G__39905 = p1__5851__5852__auto__;
  if (G__39905) {
    var bit__4203__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3553__auto__ = bit__4203__auto__;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return G__39905.schema$core$Schema$;
      }
    }())) {
      return true;
    } else {
      if (!G__39905.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, schema.core.Schema, G__39905);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, schema.core.Schema, G__39905);
  }
}], null));
plumbing.fnk.schema.InputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.either.call(null, schema.core.eq.call(null, schema.core.Keyword), schema.core.OptionalKey, schema.core.Keyword), plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.OutputSchema = plumbing.fnk.schema.Schema;
plumbing.fnk.schema.IOSchemata = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.OutputSchema, new cljs.core.Symbol(null, "output", "output", 534662484, null))], null);
plumbing.fnk.schema.GraphInputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.either.call(null, schema.core.OptionalKey, schema.core.Keyword), plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.MapOutputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.GraphIOSchemata = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.GraphInputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.MapOutputSchema, new cljs.core.Symbol(null, "output", "output", 534662484, null))], null);
plumbing.fnk.schema.assert_distinct = function assert_distinct(things) {
  var repeated_things = cljs.core.seq.call(null, cljs.core.filter.call(null, function(p1__39906_SHARP_) {
    return cljs.core.val.call(null, p1__39906_SHARP_) > 1;
  }, cljs.core.frequencies.call(null, things)));
  if (cljs.core.empty_QMARK_.call(null, repeated_things)) {
    return null;
  } else {
    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Got repeated items (expected distinct): %s", repeated_things));
  }
};
plumbing.fnk.schema.safe_get = function safe_get(m, k, key_path) {
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Expected a map at key-path %s, got type %s", key_path, schema.utils.type_of.call(null, m)));
  }
  var vec__39908 = cljs.core.find.call(null, m, k);
  var _ = cljs.core.nth.call(null, vec__39908, 0, null);
  var v = cljs.core.nth.call(null, vec__39908, 1, null);
  var p = vec__39908;
  if (cljs.core.truth_(p)) {
  } else {
    throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Key %s not found in %s", k, cljs.core.keys.call(null, m)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "missing-key", "missing-key", 1259209562), new cljs.core.Keyword(null, "key", "key", -1516042587), k, new cljs.core.Keyword(null, "map", "map", 1371690461), m], null));
  }
  return v;
};
plumbing.fnk.schema.non_map_union = function non_map_union(s1, s2) {
  if (cljs.core._EQ_.call(null, s1, s2)) {
    return s1;
  } else {
    if (cljs.core._EQ_.call(null, s1, schema.core.Any)) {
      return s2;
    } else {
      if (cljs.core._EQ_.call(null, s2, schema.core.Any)) {
        return s1;
      } else {
        return schema.core.both.call(null, s1, s2);
      }
    }
  }
};
plumbing.fnk.schema.non_map_diff = function non_map_diff(s1, s2) {
  return null;
};
plumbing.fnk.schema.map_schema_QMARK_ = function map_schema_QMARK_(m) {
  return m instanceof cljs.core.PersistentArrayMap || m instanceof cljs.core.PersistentHashMap;
};
var ufv___39914 = schema.utils.use_fn_validation;
var output_schema39909_39915 = schema.core.maybe.call(null, schema.core.pair.call(null, schema.core.Keyword, "k", schema.core.Bool, "optional?"));
var input_schema39910_39916 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "k", "k", -505765866, null))], null);
var input_checker39911_39917 = schema.core.checker.call(null, input_schema39910_39916);
var output_checker39912_39918 = schema.core.checker.call(null, output_schema39909_39915);
plumbing.fnk.schema.unwrap_schema_form_key = function(ufv___39914, output_schema39909_39915, input_schema39910_39916, input_checker39911_39917, output_checker39912_39918) {
  return function unwrap_schema_form_key(G__39913) {
    var validate__5821__auto__ = ufv___39914.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___39919 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__39913], null);
      var temp__4126__auto___39920 = input_checker39911_39917.call(null, args__5822__auto___39919);
      if (cljs.core.truth_(temp__4126__auto___39920)) {
        var error__5823__auto___39921 = temp__4126__auto___39920;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "unwrap-schema-form-key", "unwrap-schema-form-key", -300088791, null), cljs.core.pr_str.call(null, error__5823__auto___39921)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema39910_39916, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___39919, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___39921], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var k = G__39913;
      while (true) {
        if (schema.core.specific_key_QMARK_.call(null, k)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.required_key_QMARK_.call(null, k)], null);
        } else {
          if (cljs.core.sequential_QMARK_.call(null, k) && !cljs.core.vector_QMARK_.call(null, k) && cljs.core._EQ_.call(null, cljs.core.count.call(null, k), 2) && cljs.core._EQ_.call(null, cljs.core.first.call(null, k), new cljs.core.Symbol("schema.core", "optional-key", "schema.core/optional-key", -170069547, null))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, k), false], null);
          } else {
            return null;
          }
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___39922 = output_checker39912_39918.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___39922)) {
        var error__5823__auto___39923 = temp__4126__auto___39922;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "unwrap-schema-form-key", "unwrap-schema-form-key", -300088791, null), cljs.core.pr_str.call(null, error__5823__auto___39923)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema39909_39915, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___39923], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___39914, output_schema39909_39915, input_schema39910_39916, input_checker39911_39917, output_checker39912_39918);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.unwrap_schema_form_key), schema.core.make_fn_schema.call(null, output_schema39909_39915, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema39910_39916], null)));
var ufv___39929 = schema.utils.use_fn_validation;
var output_schema39924_39930 = schema.core.Any;
var input_schema39925_39931 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "s", "s", -948495851, null))], null);
var input_checker39926_39932 = schema.core.checker.call(null, input_schema39925_39931);
var output_checker39927_39933 = schema.core.checker.call(null, output_schema39924_39930);
plumbing.fnk.schema.explicit_schema_key_map = function(ufv___39929, output_schema39924_39930, input_schema39925_39931, input_checker39926_39932, output_checker39927_39933) {
  return function explicit_schema_key_map(G__39928) {
    var validate__5821__auto__ = ufv___39929.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___39934 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__39928], null);
      var temp__4126__auto___39935 = input_checker39926_39932.call(null, args__5822__auto___39934);
      if (cljs.core.truth_(temp__4126__auto___39935)) {
        var error__5823__auto___39936 = temp__4126__auto___39935;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "explicit-schema-key-map", "explicit-schema-key-map", 1668953963, null), cljs.core.pr_str.call(null, error__5823__auto___39936)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema39925_39931, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___39934, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___39936], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var s = G__39928;
      while (true) {
        new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Bool], true, false);
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.keep.call(null, plumbing.fnk.schema.unwrap_schema_form_key, cljs.core.keys.call(null, s)));
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___39937 = output_checker39927_39933.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___39937)) {
        var error__5823__auto___39938 = temp__4126__auto___39937;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "explicit-schema-key-map", "explicit-schema-key-map", 1668953963, null), cljs.core.pr_str.call(null, error__5823__auto___39938)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema39924_39930, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___39938], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___39929, output_schema39924_39930, input_schema39925_39931, input_checker39926_39932, output_checker39927_39933);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.explicit_schema_key_map), schema.core.make_fn_schema.call(null, output_schema39924_39930, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema39925_39931], null)));
var ufv___39944 = schema.utils.use_fn_validation;
var output_schema39939_39945 = schema.core.Any;
var input_schema39940_39946 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Bool], true, false), new cljs.core.Symbol(null, "s", "s", -948495851, null))], null);
var input_checker39941_39947 = schema.core.checker.call(null, input_schema39940_39946);
var output_checker39942_39948 = schema.core.checker.call(null, output_schema39939_39945);
plumbing.fnk.schema.split_schema_keys = function(ufv___39944, output_schema39939_39945, input_schema39940_39946, input_checker39941_39947, output_checker39942_39948) {
  return function split_schema_keys(G__39943) {
    var validate__5821__auto__ = ufv___39944.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___39949 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__39943], null);
      var temp__4126__auto___39950 = input_checker39941_39947.call(null, args__5822__auto___39949);
      if (cljs.core.truth_(temp__4126__auto___39950)) {
        var error__5823__auto___39951 = temp__4126__auto___39950;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema-keys", "split-schema-keys", 933671594, null), cljs.core.pr_str.call(null, error__5823__auto___39951)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema39940_39946, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___39949, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___39951], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var s = G__39943;
      while (true) {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "required", "required", -846788763, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "optional", "optional", -600484260, 
        null))], null);
        return cljs.core.mapv.call(null, cljs.core.partial.call(null, cljs.core.mapv, cljs.core.key), cljs.core.juxt.call(null, cljs.core.filter, cljs.core.remove).call(null, cljs.core.val, s));
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___39952 = output_checker39942_39948.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___39952)) {
        var error__5823__auto___39953 = temp__4126__auto___39952;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema-keys", "split-schema-keys", 933671594, null), cljs.core.pr_str.call(null, error__5823__auto___39953)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema39939_39945, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", 
        "error", -978969032), error__5823__auto___39953], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___39944, output_schema39939_39945, input_schema39940_39946, input_checker39941_39947, output_checker39942_39948);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.split_schema_keys), schema.core.make_fn_schema.call(null, output_schema39939_39945, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema39940_39946], null)));
plumbing.fnk.schema.merge_on_with = function() {
  var merge_on_with__delegate = function(key_project, key_combine, val_combine, maps) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.vals.call(null, cljs.core.reduce.call(null, function(m, p__39957) {
      var vec__39958 = p__39957;
      var k = cljs.core.nth.call(null, vec__39958, 0, null);
      var v = cljs.core.nth.call(null, vec__39958, 1, null);
      var pk = key_project.call(null, k);
      var temp__4124__auto__ = cljs.core.get.call(null, m, pk);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__39959 = temp__4124__auto__;
        var ok = cljs.core.nth.call(null, vec__39959, 0, null);
        var ov = cljs.core.nth.call(null, vec__39959, 1, null);
        return cljs.core.assoc.call(null, m, pk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_combine.call(null, ok, k), val_combine.call(null, ov, v)], null));
      } else {
        return cljs.core.assoc.call(null, m, pk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
      }
    }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.apply.call(null, cljs.core.concat, maps))));
  };
  var merge_on_with = function(key_project, key_combine, val_combine, var_args) {
    var maps = null;
    if (arguments.length > 3) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return merge_on_with__delegate.call(this, key_project, key_combine, val_combine, maps);
  };
  merge_on_with.cljs$lang$maxFixedArity = 3;
  merge_on_with.cljs$lang$applyTo = function(arglist__39960) {
    var key_project = cljs.core.first(arglist__39960);
    arglist__39960 = cljs.core.next(arglist__39960);
    var key_combine = cljs.core.first(arglist__39960);
    arglist__39960 = cljs.core.next(arglist__39960);
    var val_combine = cljs.core.first(arglist__39960);
    var maps = cljs.core.rest(arglist__39960);
    return merge_on_with__delegate(key_project, key_combine, val_combine, maps);
  };
  merge_on_with.cljs$core$IFn$_invoke$arity$variadic = merge_on_with__delegate;
  return merge_on_with;
}();
var ufv___39968 = schema.utils.use_fn_validation;
var output_schema39962_39969 = plumbing.fnk.schema.InputSchema;
var input_schema39963_39970 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "i1", "i1", -572470430, null)), schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "i2", "i2", 850408895, null))], null);
var input_checker39964_39971 = schema.core.checker.call(null, input_schema39963_39970);
var output_checker39965_39972 = schema.core.checker.call(null, output_schema39962_39969);
plumbing.fnk.schema.union_input_schemata = function(ufv___39968, output_schema39962_39969, input_schema39963_39970, input_checker39964_39971, output_checker39965_39972) {
  return function union_input_schemata(G__39966, G__39967) {
    var validate__5821__auto__ = ufv___39968.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___39973 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__39966, G__39967], null);
      var temp__4126__auto___39974 = input_checker39964_39971.call(null, args__5822__auto___39973);
      if (cljs.core.truth_(temp__4126__auto___39974)) {
        var error__5823__auto___39975 = temp__4126__auto___39974;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "union-input-schemata", "union-input-schemata", -1338811970, null), cljs.core.pr_str.call(null, error__5823__auto___39975)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema39963_39970, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___39973, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___39975], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var i1 = G__39966;
      var i2 = G__39967;
      while (true) {
        return plumbing.fnk.schema.merge_on_with.call(null, function(validate__5821__auto__, ufv___39968, output_schema39962_39969, input_schema39963_39970, input_checker39964_39971, output_checker39965_39972) {
          return function(p1__39961_SHARP_) {
            if (schema.core.specific_key_QMARK_.call(null, p1__39961_SHARP_)) {
              return schema.core.explicit_schema_key.call(null, p1__39961_SHARP_);
            } else {
              return new cljs.core.Keyword(null, "extra", "extra", 1612569067);
            }
          };
        }(validate__5821__auto__, ufv___39968, output_schema39962_39969, input_schema39963_39970, input_checker39964_39971, output_checker39965_39972), function(validate__5821__auto__, ufv___39968, output_schema39962_39969, input_schema39963_39970, input_checker39964_39971, output_checker39965_39972) {
          return function(k1, k2) {
            if (schema.core.required_key_QMARK_.call(null, k1)) {
              return k1;
            } else {
              if (schema.core.required_key_QMARK_.call(null, k2)) {
                return k2;
              } else {
                if (schema.core.optional_key_QMARK_.call(null, k1)) {
                  if (cljs.core._EQ_.call(null, k1, k2)) {
                  } else {
                    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "k1", "k1", -1701777341, null), new cljs.core.Symbol(null, "k2", "k2", -1225133949, null)))));
                  }
                  return k1;
                } else {
                  if (cljs.core._EQ_.call(null, k1, k2)) {
                    return k1;
                  } else {
                    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Only one extra schema allowed"));
                  }
                }
              }
            }
          };
        }(validate__5821__auto__, ufv___39968, output_schema39962_39969, input_schema39963_39970, input_checker39964_39971, output_checker39965_39972), function(validate__5821__auto__, ufv___39968, output_schema39962_39969, input_schema39963_39970, input_checker39964_39971, output_checker39965_39972) {
          return function(s1, s2) {
            if (plumbing.fnk.schema.map_schema_QMARK_.call(null, s1) && plumbing.fnk.schema.map_schema_QMARK_.call(null, s2)) {
              return union_input_schemata.call(null, s1, s2);
            } else {
              return plumbing.fnk.schema.non_map_union.call(null, s1, s2);
            }
          };
        }(validate__5821__auto__, ufv___39968, output_schema39962_39969, input_schema39963_39970, input_checker39964_39971, output_checker39965_39972), i1, i2);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___39976 = output_checker39965_39972.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___39976)) {
        var error__5823__auto___39977 = temp__4126__auto___39976;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "union-input-schemata", "union-input-schemata", -1338811970, null), cljs.core.pr_str.call(null, error__5823__auto___39977)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema39962_39969, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___39977], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___39968, output_schema39962_39969, input_schema39963_39970, input_checker39964_39971, output_checker39965_39972);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.union_input_schemata), schema.core.make_fn_schema.call(null, output_schema39962_39969, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema39963_39970], null)));
var ufv___39983 = schema.utils.use_fn_validation;
var output_schema39978_39984 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null);
var input_schema39979_39985 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input-schema", "input-schema", 1373647181, null))], null);
var input_checker39980_39986 = schema.core.checker.call(null, input_schema39979_39985);
var output_checker39981_39987 = schema.core.checker.call(null, output_schema39978_39984);
plumbing.fnk.schema.required_toplevel_keys = function(ufv___39983, output_schema39978_39984, input_schema39979_39985, input_checker39980_39986, output_checker39981_39987) {
  return function required_toplevel_keys(G__39982) {
    var validate__5821__auto__ = ufv___39983.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___39988 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__39982], null);
      var temp__4126__auto___39989 = input_checker39980_39986.call(null, args__5822__auto___39988);
      if (cljs.core.truth_(temp__4126__auto___39989)) {
        var error__5823__auto___39990 = temp__4126__auto___39989;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "required-toplevel-keys", "required-toplevel-keys", 1052167617, null), cljs.core.pr_str.call(null, error__5823__auto___39990)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema39979_39985, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___39988, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___39990], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var input_schema = G__39982;
      while (true) {
        return cljs.core.keep.call(null, function(validate__5821__auto__, ufv___39983, output_schema39978_39984, input_schema39979_39985, input_checker39980_39986, output_checker39981_39987) {
          return function(k) {
            if (schema.core.required_key_QMARK_.call(null, k)) {
              return schema.core.explicit_schema_key.call(null, k);
            } else {
              return null;
            }
          };
        }(validate__5821__auto__, ufv___39983, output_schema39978_39984, input_schema39979_39985, input_checker39980_39986, output_checker39981_39987), cljs.core.keys.call(null, input_schema));
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___39991 = output_checker39981_39987.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___39991)) {
        var error__5823__auto___39992 = temp__4126__auto___39991;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "required-toplevel-keys", "required-toplevel-keys", 1052167617, null), cljs.core.pr_str.call(null, error__5823__auto___39992)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema39978_39984, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___39992], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___39983, output_schema39978_39984, input_schema39979_39985, input_checker39980_39986, output_checker39981_39987);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.required_toplevel_keys), schema.core.make_fn_schema.call(null, output_schema39978_39984, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema39979_39985], null)));
plumbing.fnk.schema.guess_expr_output_schema = function guess_expr_output_schema(expr) {
  if (cljs.core.map_QMARK_.call(null, expr) && cljs.core.every_QMARK_.call(null, cljs.core.keyword_QMARK_, cljs.core.keys.call(null, expr))) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
      var iter__4278__auto__ = function iter__40001(s__40002) {
        return new cljs.core.LazySeq(null, function() {
          var s__40002__$1 = s__40002;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__40002__$1);
            if (temp__4126__auto__) {
              var s__40002__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__40002__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40002__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__40004 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__40003 = 0;
                  while (true) {
                    if (i__40003 < size__4277__auto__) {
                      var vec__40007 = cljs.core._nth.call(null, c__4276__auto__, i__40003);
                      var k = cljs.core.nth.call(null, vec__40007, 0, null);
                      var v = cljs.core.nth.call(null, vec__40007, 1, null);
                      cljs.core.chunk_append.call(null, b__40004, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, guess_expr_output_schema.call(null, v)], null));
                      var G__40009 = i__40003 + 1;
                      i__40003 = G__40009;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40004), iter__40001.call(null, cljs.core.chunk_rest.call(null, s__40002__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40004), null);
                }
              } else {
                var vec__40008 = cljs.core.first.call(null, s__40002__$2);
                var k = cljs.core.nth.call(null, vec__40008, 0, null);
                var v = cljs.core.nth.call(null, vec__40008, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, guess_expr_output_schema.call(null, v)], null), iter__40001.call(null, cljs.core.rest.call(null, s__40002__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4278__auto__.call(null, expr);
    }());
  } else {
    return new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null);
  }
};
plumbing.fnk.schema.schema_diff = function schema_diff(input_schema, output_schema) {
  if (!plumbing.fnk.schema.map_schema_QMARK_.call(null, input_schema)) {
    return plumbing.fnk.schema.non_map_diff.call(null, input_schema, output_schema);
  } else {
    if (!plumbing.fnk.schema.map_schema_QMARK_.call(null, output_schema)) {
      return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, input_schema, output_schema, new cljs.core.Delay(function() {
        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, output_schema)), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
      }, null), null));
    } else {
      return cljs.core.not_empty.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
        var iter__4278__auto__ = function iter__40018(s__40019) {
          return new cljs.core.LazySeq(null, function() {
            var s__40019__$1 = s__40019;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__40019__$1);
              if (temp__4126__auto__) {
                var s__40019__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__40019__$2)) {
                  var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40019__$2);
                  var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                  var b__40021 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                  if (function() {
                    var i__40020 = 0;
                    while (true) {
                      if (i__40020 < size__4277__auto__) {
                        var vec__40024 = cljs.core._nth.call(null, c__4276__auto__, i__40020);
                        var k = cljs.core.nth.call(null, vec__40024, 0, null);
                        var v = cljs.core.nth.call(null, vec__40024, 1, null);
                        if (schema.core.specific_key_QMARK_.call(null, k)) {
                          var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                          var raw_k = schema.core.explicit_schema_key.call(null, k);
                          var present_QMARK_ = cljs.core.contains_QMARK_.call(null, output_schema, raw_k);
                          if (required_QMARK_ || present_QMARK_) {
                            var fail = !present_QMARK_ ? new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null) : schema_diff.call(null, v, cljs.core.get.call(null, output_schema, raw_k));
                            if (cljs.core.truth_(fail)) {
                              cljs.core.chunk_append.call(null, b__40021, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, fail], null));
                              var G__40026 = i__40020 + 1;
                              i__40020 = G__40026;
                              continue;
                            } else {
                              var G__40027 = i__40020 + 1;
                              i__40020 = G__40027;
                              continue;
                            }
                          } else {
                            var G__40028 = i__40020 + 1;
                            i__40020 = G__40028;
                            continue;
                          }
                        } else {
                          var G__40029 = i__40020 + 1;
                          i__40020 = G__40029;
                          continue;
                        }
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40021), iter__40018.call(null, cljs.core.chunk_rest.call(null, s__40019__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40021), null);
                  }
                } else {
                  var vec__40025 = cljs.core.first.call(null, s__40019__$2);
                  var k = cljs.core.nth.call(null, vec__40025, 0, null);
                  var v = cljs.core.nth.call(null, vec__40025, 1, null);
                  if (schema.core.specific_key_QMARK_.call(null, k)) {
                    var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                    var raw_k = schema.core.explicit_schema_key.call(null, k);
                    var present_QMARK_ = cljs.core.contains_QMARK_.call(null, output_schema, raw_k);
                    if (required_QMARK_ || present_QMARK_) {
                      var fail = !present_QMARK_ ? new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null) : schema_diff.call(null, v, cljs.core.get.call(null, output_schema, raw_k));
                      if (cljs.core.truth_(fail)) {
                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, fail], null), iter__40018.call(null, cljs.core.rest.call(null, s__40019__$2)));
                      } else {
                        var G__40030 = cljs.core.rest.call(null, s__40019__$2);
                        s__40019__$1 = G__40030;
                        continue;
                      }
                    } else {
                      var G__40031 = cljs.core.rest.call(null, s__40019__$2);
                      s__40019__$1 = G__40031;
                      continue;
                    }
                  } else {
                    var G__40032 = cljs.core.rest.call(null, s__40019__$2);
                    s__40019__$1 = G__40032;
                    continue;
                  }
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__4278__auto__.call(null, input_schema);
      }()));
    }
  }
};
plumbing.fnk.schema.assert_satisfies_schema = function assert_satisfies_schema(input_schema, output_schema) {
  var fails = plumbing.fnk.schema.schema_diff.call(null, input_schema, output_schema);
  if (cljs.core.truth_(fails)) {
    throw cljs.core.ex_info.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(fails), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "does-not-satisfy-schema", "does-not-satisfy-schema", -1543152824), new cljs.core.Keyword(null, "failures", "failures", -912916356), fails], null));
  } else {
    return null;
  }
};
var ufv___40055 = schema.utils.use_fn_validation;
var output_schema40033_40056 = schema.core.Any;
var input_schema40034_40057 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.IOSchemata, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.MapOutputSchema, 
new cljs.core.Symbol(null, "output", "output", 534662484, null))], null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null))], null);
var input_checker40035_40058 = schema.core.checker.call(null, input_schema40034_40057);
var output_checker40036_40059 = schema.core.checker.call(null, output_schema40033_40056);
plumbing.fnk.schema.compose_schemata = function(ufv___40055, output_schema40033_40056, input_schema40034_40057, input_checker40035_40058, output_checker40036_40059) {
  return function compose_schemata(G__40037, G__40038) {
    var validate__5821__auto__ = true;
    if (validate__5821__auto__) {
      var args__5822__auto___40060 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__40037, G__40038], null);
      var temp__4126__auto___40061 = input_checker40035_40058.call(null, args__5822__auto___40060);
      if (cljs.core.truth_(temp__4126__auto___40061)) {
        var error__5823__auto___40062 = temp__4126__auto___40061;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "compose-schemata", "compose-schemata", 918607729, null), cljs.core.pr_str.call(null, error__5823__auto___40062)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema40034_40057, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___40060, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___40062], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var G__40049 = G__40037;
      var vec__40051 = G__40049;
      var i2 = cljs.core.nth.call(null, vec__40051, 0, null);
      var o2 = cljs.core.nth.call(null, vec__40051, 1, null);
      var G__40050 = G__40038;
      var vec__40052 = G__40050;
      var i1 = cljs.core.nth.call(null, vec__40052, 0, null);
      var o1 = cljs.core.nth.call(null, vec__40052, 1, null);
      var G__40049__$1 = G__40049;
      var G__40050__$1 = G__40050;
      while (true) {
        var vec__40053 = G__40049__$1;
        var i2__$1 = cljs.core.nth.call(null, vec__40053, 0, null);
        var o2__$1 = cljs.core.nth.call(null, vec__40053, 1, null);
        var vec__40054 = G__40050__$1;
        var i1__$1 = cljs.core.nth.call(null, vec__40054, 0, null);
        var o1__$1 = cljs.core.nth.call(null, vec__40054, 1, null);
        plumbing.fnk.schema.assert_satisfies_schema.call(null, cljs.core.select_keys.call(null, i2__$1, cljs.core.keys.call(null, o1__$1)), o1__$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [plumbing.fnk.schema.union_input_schemata.call(null, cljs.core.apply.call(null, cljs.core.dissoc, i2__$1, cljs.core.concat.call(null, cljs.core.keys.call(null, o1__$1), cljs.core.map.call(null, schema.core.optional_key, cljs.core.keys.call(null, o1__$1)))), i1__$1), o2__$1], null);
        break;
      }
    }();
    if (validate__5821__auto__) {
      var temp__4126__auto___40063 = output_checker40036_40059.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___40063)) {
        var error__5823__auto___40064 = temp__4126__auto___40063;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "compose-schemata", "compose-schemata", 918607729, null), cljs.core.pr_str.call(null, error__5823__auto___40064)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema40033_40056, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", 
        "error", -978969032), error__5823__auto___40064], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___40055, output_schema40033_40056, input_schema40034_40057, input_checker40035_40058, output_checker40036_40059);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.compose_schemata), schema.core.make_fn_schema.call(null, output_schema40033_40056, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema40034_40057], null)));
plumbing.fnk.schema.schema_key = function schema_key(m, k) {
  if (cljs.core.contains_QMARK_.call(null, m, k)) {
    return k;
  } else {
    if (cljs.core.contains_QMARK_.call(null, m, schema.core.optional_key.call(null, k))) {
      return schema.core.optional_key.call(null, k);
    } else {
      return null;
    }
  }
};
plumbing.fnk.schema.possibly_contains_QMARK_ = function possibly_contains_QMARK_(m, k) {
  return cljs.core.boolean$.call(null, plumbing.fnk.schema.schema_key.call(null, m, k));
};
var ufv___40143 = schema.utils.use_fn_validation;
var output_schema40065_40144 = schema.core.Any;
var input_schema40066_40145 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "s", "s", -948495851, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "ks", "ks", -754231827, null))], null);
var input_checker40067_40146 = schema.core.checker.call(null, input_schema40066_40145);
var output_checker40068_40147 = schema.core.checker.call(null, output_schema40065_40144);
plumbing.fnk.schema.split_schema = function(ufv___40143, output_schema40065_40144, input_schema40066_40145, input_checker40067_40146, output_checker40068_40147) {
  return function split_schema(G__40069, G__40070) {
    var validate__5821__auto__ = ufv___40143.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___40148 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__40069, G__40070], null);
      var temp__4126__auto___40149 = input_checker40067_40146.call(null, args__5822__auto___40148);
      if (cljs.core.truth_(temp__4126__auto___40149)) {
        var error__5823__auto___40150 = temp__4126__auto___40149;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema", "split-schema", 1859174771, null), cljs.core.pr_str.call(null, error__5823__auto___40150)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema40066_40145, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___40148, new cljs.core.Keyword(null, "error", 
        "error", -978969032), error__5823__auto___40150], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var s = G__40069;
      var ks = G__40070;
      while (true) {
        var ks__$1 = cljs.core.set.call(null, ks);
        var iter__4278__auto__ = function(ks__$1, validate__5821__auto__, ufv___40143, output_schema40065_40144, input_schema40066_40145, input_checker40067_40146, output_checker40068_40147) {
          return function iter__40107(s__40108) {
            return new cljs.core.LazySeq(null, function(ks__$1, validate__5821__auto__, ufv___40143, output_schema40065_40144, input_schema40066_40145, input_checker40067_40146, output_checker40068_40147) {
              return function() {
                var s__40108__$1 = s__40108;
                while (true) {
                  var temp__4126__auto__ = cljs.core.seq.call(null, s__40108__$1);
                  if (temp__4126__auto__) {
                    var s__40108__$2 = temp__4126__auto__;
                    if (cljs.core.chunked_seq_QMARK_.call(null, s__40108__$2)) {
                      var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40108__$2);
                      var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                      var b__40110 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                      if (function() {
                        var i__40109 = 0;
                        while (true) {
                          if (i__40109 < size__4277__auto__) {
                            var in_QMARK_ = cljs.core._nth.call(null, c__4276__auto__, i__40109);
                            cljs.core.chunk_append.call(null, b__40110, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                              var iter__4278__auto__ = function(i__40109, in_QMARK_, c__4276__auto__, size__4277__auto__, b__40110, s__40108__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___40143, output_schema40065_40144, input_schema40066_40145, input_checker40067_40146, output_checker40068_40147) {
                                return function iter__40127(s__40128) {
                                  return new cljs.core.LazySeq(null, function(i__40109, in_QMARK_, c__4276__auto__, size__4277__auto__, b__40110, s__40108__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___40143, output_schema40065_40144, input_schema40066_40145, input_checker40067_40146, output_checker40068_40147) {
                                    return function() {
                                      var s__40128__$1 = s__40128;
                                      while (true) {
                                        var temp__4126__auto____$1 = cljs.core.seq.call(null, s__40128__$1);
                                        if (temp__4126__auto____$1) {
                                          var s__40128__$2 = temp__4126__auto____$1;
                                          if (cljs.core.chunked_seq_QMARK_.call(null, s__40128__$2)) {
                                            var c__4276__auto____$1 = cljs.core.chunk_first.call(null, s__40128__$2);
                                            var size__4277__auto____$1 = cljs.core.count.call(null, c__4276__auto____$1);
                                            var b__40130 = cljs.core.chunk_buffer.call(null, size__4277__auto____$1);
                                            if (function() {
                                              var i__40129 = 0;
                                              while (true) {
                                                if (i__40129 < size__4277__auto____$1) {
                                                  var vec__40133 = cljs.core._nth.call(null, c__4276__auto____$1, i__40129);
                                                  var k = cljs.core.nth.call(null, vec__40133, 0, null);
                                                  var v = cljs.core.nth.call(null, vec__40133, 1, null);
                                                  if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                                    cljs.core.chunk_append.call(null, b__40130, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                                                    var G__40151 = i__40129 + 1;
                                                    i__40129 = G__40151;
                                                    continue;
                                                  } else {
                                                    var G__40152 = i__40129 + 1;
                                                    i__40129 = G__40152;
                                                    continue;
                                                  }
                                                } else {
                                                  return true;
                                                }
                                                break;
                                              }
                                            }()) {
                                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40130), iter__40127.call(null, cljs.core.chunk_rest.call(null, s__40128__$2)));
                                            } else {
                                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40130), null);
                                            }
                                          } else {
                                            var vec__40134 = cljs.core.first.call(null, s__40128__$2);
                                            var k = cljs.core.nth.call(null, vec__40134, 0, null);
                                            var v = cljs.core.nth.call(null, vec__40134, 1, null);
                                            if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__40127.call(null, cljs.core.rest.call(null, s__40128__$2)));
                                            } else {
                                              var G__40153 = cljs.core.rest.call(null, s__40128__$2);
                                              s__40128__$1 = G__40153;
                                              continue;
                                            }
                                          }
                                        } else {
                                          return null;
                                        }
                                        break;
                                      }
                                    };
                                  }(i__40109, in_QMARK_, c__4276__auto__, size__4277__auto__, b__40110, s__40108__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___40143, output_schema40065_40144, input_schema40066_40145, input_checker40067_40146, output_checker40068_40147), null, null);
                                };
                              }(i__40109, in_QMARK_, c__4276__auto__, size__4277__auto__, b__40110, s__40108__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___40143, output_schema40065_40144, input_schema40066_40145, input_checker40067_40146, output_checker40068_40147);
                              return iter__4278__auto__.call(null, s);
                            }()));
                            var G__40154 = i__40109 + 1;
                            i__40109 = G__40154;
                            continue;
                          } else {
                            return true;
                          }
                          break;
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40110), iter__40107.call(null, cljs.core.chunk_rest.call(null, s__40108__$2)));
                      } else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40110), null);
                      }
                    } else {
                      var in_QMARK_ = cljs.core.first.call(null, s__40108__$2);
                      return cljs.core.cons.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4278__auto__ = function(in_QMARK_, s__40108__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___40143, output_schema40065_40144, input_schema40066_40145, input_checker40067_40146, output_checker40068_40147) {
                          return function iter__40135(s__40136) {
                            return new cljs.core.LazySeq(null, function(in_QMARK_, s__40108__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___40143, output_schema40065_40144, input_schema40066_40145, input_checker40067_40146, output_checker40068_40147) {
                              return function() {
                                var s__40136__$1 = s__40136;
                                while (true) {
                                  var temp__4126__auto____$1 = cljs.core.seq.call(null, s__40136__$1);
                                  if (temp__4126__auto____$1) {
                                    var s__40136__$2 = temp__4126__auto____$1;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__40136__$2)) {
                                      var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40136__$2);
                                      var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                      var b__40138 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                      if (function() {
                                        var i__40137 = 0;
                                        while (true) {
                                          if (i__40137 < size__4277__auto__) {
                                            var vec__40141 = cljs.core._nth.call(null, c__4276__auto__, i__40137);
                                            var k = cljs.core.nth.call(null, vec__40141, 0, null);
                                            var v = cljs.core.nth.call(null, vec__40141, 1, null);
                                            if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                              cljs.core.chunk_append.call(null, b__40138, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                                              var G__40155 = i__40137 + 1;
                                              i__40137 = G__40155;
                                              continue;
                                            } else {
                                              var G__40156 = i__40137 + 1;
                                              i__40137 = G__40156;
                                              continue;
                                            }
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40138), iter__40135.call(null, cljs.core.chunk_rest.call(null, s__40136__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40138), null);
                                      }
                                    } else {
                                      var vec__40142 = cljs.core.first.call(null, s__40136__$2);
                                      var k = cljs.core.nth.call(null, vec__40142, 0, null);
                                      var v = cljs.core.nth.call(null, vec__40142, 1, null);
                                      if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__40135.call(null, cljs.core.rest.call(null, s__40136__$2)));
                                      } else {
                                        var G__40157 = cljs.core.rest.call(null, s__40136__$2);
                                        s__40136__$1 = G__40157;
                                        continue;
                                      }
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(in_QMARK_, s__40108__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___40143, output_schema40065_40144, input_schema40066_40145, input_checker40067_40146, output_checker40068_40147), null, null);
                          };
                        }(in_QMARK_, s__40108__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___40143, output_schema40065_40144, input_schema40066_40145, input_checker40067_40146, output_checker40068_40147);
                        return iter__4278__auto__.call(null, s);
                      }()), iter__40107.call(null, cljs.core.rest.call(null, s__40108__$2)));
                    }
                  } else {
                    return null;
                  }
                  break;
                }
              };
            }(ks__$1, validate__5821__auto__, ufv___40143, output_schema40065_40144, input_schema40066_40145, input_checker40067_40146, output_checker40068_40147), null, null);
          };
        }(ks__$1, validate__5821__auto__, ufv___40143, output_schema40065_40144, input_schema40066_40145, input_checker40067_40146, output_checker40068_40147);
        return iter__4278__auto__.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, false], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___40158 = output_checker40068_40147.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___40158)) {
        var error__5823__auto___40159 = temp__4126__auto___40158;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema", "split-schema", 1859174771, null), cljs.core.pr_str.call(null, error__5823__auto___40159)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema40065_40144, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___40159], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___40143, output_schema40065_40144, input_schema40066_40145, input_checker40067_40146, output_checker40068_40147);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.split_schema), schema.core.make_fn_schema.call(null, output_schema40065_40144, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema40066_40145], null)));
var ufv___40190 = schema.utils.use_fn_validation;
var output_schema40160_40191 = plumbing.fnk.schema.GraphIOSchemata;
var input_schema40161_40192 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.GraphIOSchemata, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Keyword, "key"), schema.core.one.call(null, plumbing.fnk.schema.IOSchemata, "inner-schemas")], null), new cljs.core.Symbol(null, 
"arg1", "arg1", -1702536411, null))], null);
var input_checker40162_40193 = schema.core.checker.call(null, input_schema40161_40192);
var output_checker40163_40194 = schema.core.checker.call(null, output_schema40160_40191);
plumbing.fnk.schema.sequence_schemata = function(ufv___40190, output_schema40160_40191, input_schema40161_40192, input_checker40162_40193, output_checker40163_40194) {
  return function sequence_schemata(G__40164, G__40165) {
    var validate__5821__auto__ = ufv___40190.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___40195 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__40164, G__40165], null);
      var temp__4126__auto___40196 = input_checker40162_40193.call(null, args__5822__auto___40195);
      if (cljs.core.truth_(temp__4126__auto___40196)) {
        var error__5823__auto___40197 = temp__4126__auto___40196;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "sequence-schemata", "sequence-schemata", -2061205313, null), cljs.core.pr_str.call(null, error__5823__auto___40197)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema40161_40192, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___40195, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___40197], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var G__40181 = G__40164;
      var vec__40183 = G__40181;
      var i1 = cljs.core.nth.call(null, vec__40183, 0, null);
      var o1 = cljs.core.nth.call(null, vec__40183, 1, null);
      var G__40182 = G__40165;
      var vec__40184 = G__40182;
      var k = cljs.core.nth.call(null, vec__40184, 0, null);
      var vec__40185 = cljs.core.nth.call(null, vec__40184, 1, null);
      var i2 = cljs.core.nth.call(null, vec__40185, 0, null);
      var o2 = cljs.core.nth.call(null, vec__40185, 1, null);
      var G__40181__$1 = G__40181;
      var G__40182__$1 = G__40182;
      while (true) {
        var vec__40186 = G__40181__$1;
        var i1__$1 = cljs.core.nth.call(null, vec__40186, 0, null);
        var o1__$1 = cljs.core.nth.call(null, vec__40186, 1, null);
        var vec__40187 = G__40182__$1;
        var k__$1 = cljs.core.nth.call(null, vec__40187, 0, null);
        var vec__40188 = cljs.core.nth.call(null, vec__40187, 1, null);
        var i2__$1 = cljs.core.nth.call(null, vec__40188, 0, null);
        var o2__$1 = cljs.core.nth.call(null, vec__40188, 1, null);
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, i1__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Duplicate key output (possibly due to a misordered graph) %s for input %s from input %s", k__$1, schema.core.explain.call(null, i2__$1), schema.core.explain.call(null, i1__$1)));
        }
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, i2__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Node outputs a key %s in its inputs %s", k__$1, schema.core.explain.call(null, i2__$1)));
        }
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, o1__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Node outputs a duplicate key %s given inputs %s", k__$1, schema.core.explain.call(null, i1__$1)));
        }
        var vec__40189 = plumbing.fnk.schema.split_schema.call(null, i2__$1, cljs.core.keys.call(null, o1__$1));
        var used = cljs.core.nth.call(null, vec__40189, 0, null);
        var unused = cljs.core.nth.call(null, vec__40189, 1, null);
        plumbing.fnk.schema.assert_satisfies_schema.call(null, used, o1__$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [plumbing.fnk.schema.union_input_schemata.call(null, unused, i1__$1), cljs.core.assoc.call(null, o1__$1, k__$1, o2__$1)], null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___40198 = output_checker40163_40194.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___40198)) {
        var error__5823__auto___40199 = temp__4126__auto___40198;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "sequence-schemata", "sequence-schemata", -2061205313, null), cljs.core.pr_str.call(null, error__5823__auto___40199)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema40160_40191, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___40199], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___40190, output_schema40160_40191, input_schema40161_40192, input_checker40162_40193, output_checker40163_40194);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.sequence_schemata), schema.core.make_fn_schema.call(null, output_schema40160_40191, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema40161_40192], null)));
goog.provide("plumbing.core");
goog.require("cljs.core");
goog.require("plumbing.fnk.schema");
goog.require("plumbing.fnk.schema");
goog.require("schema.utils");
goog.require("schema.utils");
plumbing.core._PLUS_none_PLUS_ = new cljs.core.Keyword("plumbing.core", "missing", "plumbing.core/missing", 1721767298);
plumbing.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
  };
  var update__4 = function(m, k, f, x1) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x1));
  };
  var update__5 = function(m, k, f, x1, x2) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x1, x2));
  };
  var update__6 = function() {
    var G__40491__delegate = function(m, k, f, x1, x2, xs) {
      return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), x1, x2, xs));
    };
    var G__40491 = function(m, k, f, x1, x2, var_args) {
      var xs = null;
      if (arguments.length > 5) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__40491__delegate.call(this, m, k, f, x1, x2, xs);
    };
    G__40491.cljs$lang$maxFixedArity = 5;
    G__40491.cljs$lang$applyTo = function(arglist__40492) {
      var m = cljs.core.first(arglist__40492);
      arglist__40492 = cljs.core.next(arglist__40492);
      var k = cljs.core.first(arglist__40492);
      arglist__40492 = cljs.core.next(arglist__40492);
      var f = cljs.core.first(arglist__40492);
      arglist__40492 = cljs.core.next(arglist__40492);
      var x1 = cljs.core.first(arglist__40492);
      arglist__40492 = cljs.core.next(arglist__40492);
      var x2 = cljs.core.first(arglist__40492);
      var xs = cljs.core.rest(arglist__40492);
      return G__40491__delegate(m, k, f, x1, x2, xs);
    };
    G__40491.cljs$core$IFn$_invoke$arity$variadic = G__40491__delegate;
    return G__40491;
  }();
  update = function(m, k, f, x1, x2, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x1);
      case 5:
        return update__5.call(this, m, k, f, x1, x2);
      default:
        return update__6.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x1, x2, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 5;
  update.cljs$lang$applyTo = update__6.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$variadic = update__6.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
plumbing.core.map_vals = function map_vals(f, m) {
  if (cljs.core.sorted_QMARK_.call(null, m)) {
    return cljs.core.reduce_kv.call(null, function(out_m, k, v) {
      return cljs.core.assoc.call(null, out_m, k, f.call(null, v));
    }, cljs.core.sorted_map.call(null), m);
  } else {
    if (cljs.core.map_QMARK_.call(null, m)) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(out_m, k, v) {
        return cljs.core.assoc_BANG_.call(null, out_m, k, f.call(null, v));
      }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
    } else {
      var m_atom__7744__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
      var seq__40501_40507 = cljs.core.seq.call(null, m);
      var chunk__40502_40508 = null;
      var count__40503_40509 = 0;
      var i__40504_40510 = 0;
      while (true) {
        if (i__40504_40510 < count__40503_40509) {
          var vec__40505_40511 = cljs.core._nth.call(null, chunk__40502_40508, i__40504_40510);
          var k_40512 = cljs.core.nth.call(null, vec__40505_40511, 0, null);
          var v_40513 = cljs.core.nth.call(null, vec__40505_40511, 1, null);
          var m40500_40514 = cljs.core.deref.call(null, m_atom__7744__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m40500_40514, k_40512, f.call(null, v_40513)));
          var G__40515 = seq__40501_40507;
          var G__40516 = chunk__40502_40508;
          var G__40517 = count__40503_40509;
          var G__40518 = i__40504_40510 + 1;
          seq__40501_40507 = G__40515;
          chunk__40502_40508 = G__40516;
          count__40503_40509 = G__40517;
          i__40504_40510 = G__40518;
          continue;
        } else {
          var temp__4126__auto___40519 = cljs.core.seq.call(null, seq__40501_40507);
          if (temp__4126__auto___40519) {
            var seq__40501_40520__$1 = temp__4126__auto___40519;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__40501_40520__$1)) {
              var c__4309__auto___40521 = cljs.core.chunk_first.call(null, seq__40501_40520__$1);
              var G__40522 = cljs.core.chunk_rest.call(null, seq__40501_40520__$1);
              var G__40523 = c__4309__auto___40521;
              var G__40524 = cljs.core.count.call(null, c__4309__auto___40521);
              var G__40525 = 0;
              seq__40501_40507 = G__40522;
              chunk__40502_40508 = G__40523;
              count__40503_40509 = G__40524;
              i__40504_40510 = G__40525;
              continue;
            } else {
              var vec__40506_40526 = cljs.core.first.call(null, seq__40501_40520__$1);
              var k_40527 = cljs.core.nth.call(null, vec__40506_40526, 0, null);
              var v_40528 = cljs.core.nth.call(null, vec__40506_40526, 1, null);
              var m40500_40529 = cljs.core.deref.call(null, m_atom__7744__auto__);
              cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m40500_40529, k_40527, f.call(null, v_40528)));
              var G__40530 = cljs.core.next.call(null, seq__40501_40520__$1);
              var G__40531 = null;
              var G__40532 = 0;
              var G__40533 = 0;
              seq__40501_40507 = G__40530;
              chunk__40502_40508 = G__40531;
              count__40503_40509 = G__40532;
              i__40504_40510 = G__40533;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7744__auto__));
    }
  }
};
plumbing.core.map_keys = function map_keys(f, m) {
  if (cljs.core.map_QMARK_.call(null, m)) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(out_m, k, v) {
      return cljs.core.assoc_BANG_.call(null, out_m, f.call(null, k), v);
    }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
  } else {
    var m_atom__7744__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
    var seq__40542_40548 = cljs.core.seq.call(null, m);
    var chunk__40543_40549 = null;
    var count__40544_40550 = 0;
    var i__40545_40551 = 0;
    while (true) {
      if (i__40545_40551 < count__40544_40550) {
        var vec__40546_40552 = cljs.core._nth.call(null, chunk__40543_40549, i__40545_40551);
        var k_40553 = cljs.core.nth.call(null, vec__40546_40552, 0, null);
        var v_40554 = cljs.core.nth.call(null, vec__40546_40552, 1, null);
        var m40541_40555 = cljs.core.deref.call(null, m_atom__7744__auto__);
        cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m40541_40555, f.call(null, k_40553), v_40554));
        var G__40556 = seq__40542_40548;
        var G__40557 = chunk__40543_40549;
        var G__40558 = count__40544_40550;
        var G__40559 = i__40545_40551 + 1;
        seq__40542_40548 = G__40556;
        chunk__40543_40549 = G__40557;
        count__40544_40550 = G__40558;
        i__40545_40551 = G__40559;
        continue;
      } else {
        var temp__4126__auto___40560 = cljs.core.seq.call(null, seq__40542_40548);
        if (temp__4126__auto___40560) {
          var seq__40542_40561__$1 = temp__4126__auto___40560;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__40542_40561__$1)) {
            var c__4309__auto___40562 = cljs.core.chunk_first.call(null, seq__40542_40561__$1);
            var G__40563 = cljs.core.chunk_rest.call(null, seq__40542_40561__$1);
            var G__40564 = c__4309__auto___40562;
            var G__40565 = cljs.core.count.call(null, c__4309__auto___40562);
            var G__40566 = 0;
            seq__40542_40548 = G__40563;
            chunk__40543_40549 = G__40564;
            count__40544_40550 = G__40565;
            i__40545_40551 = G__40566;
            continue;
          } else {
            var vec__40547_40567 = cljs.core.first.call(null, seq__40542_40561__$1);
            var k_40568 = cljs.core.nth.call(null, vec__40547_40567, 0, null);
            var v_40569 = cljs.core.nth.call(null, vec__40547_40567, 1, null);
            var m40541_40570 = cljs.core.deref.call(null, m_atom__7744__auto__);
            cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m40541_40570, f.call(null, k_40568), v_40569));
            var G__40571 = cljs.core.next.call(null, seq__40542_40561__$1);
            var G__40572 = null;
            var G__40573 = 0;
            var G__40574 = 0;
            seq__40542_40548 = G__40571;
            chunk__40543_40549 = G__40572;
            count__40544_40550 = G__40573;
            i__40545_40551 = G__40574;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7744__auto__));
  }
};
plumbing.core.map_from_keys = function map_from_keys(f, ks) {
  var m_atom__7744__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
  var seq__40581_40585 = cljs.core.seq.call(null, ks);
  var chunk__40582_40586 = null;
  var count__40583_40587 = 0;
  var i__40584_40588 = 0;
  while (true) {
    if (i__40584_40588 < count__40583_40587) {
      var k_40589 = cljs.core._nth.call(null, chunk__40582_40586, i__40584_40588);
      var m40580_40590 = cljs.core.deref.call(null, m_atom__7744__auto__);
      cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m40580_40590, k_40589, f.call(null, k_40589)));
      var G__40591 = seq__40581_40585;
      var G__40592 = chunk__40582_40586;
      var G__40593 = count__40583_40587;
      var G__40594 = i__40584_40588 + 1;
      seq__40581_40585 = G__40591;
      chunk__40582_40586 = G__40592;
      count__40583_40587 = G__40593;
      i__40584_40588 = G__40594;
      continue;
    } else {
      var temp__4126__auto___40595 = cljs.core.seq.call(null, seq__40581_40585);
      if (temp__4126__auto___40595) {
        var seq__40581_40596__$1 = temp__4126__auto___40595;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__40581_40596__$1)) {
          var c__4309__auto___40597 = cljs.core.chunk_first.call(null, seq__40581_40596__$1);
          var G__40598 = cljs.core.chunk_rest.call(null, seq__40581_40596__$1);
          var G__40599 = c__4309__auto___40597;
          var G__40600 = cljs.core.count.call(null, c__4309__auto___40597);
          var G__40601 = 0;
          seq__40581_40585 = G__40598;
          chunk__40582_40586 = G__40599;
          count__40583_40587 = G__40600;
          i__40584_40588 = G__40601;
          continue;
        } else {
          var k_40602 = cljs.core.first.call(null, seq__40581_40596__$1);
          var m40580_40603 = cljs.core.deref.call(null, m_atom__7744__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m40580_40603, k_40602, f.call(null, k_40602)));
          var G__40604 = cljs.core.next.call(null, seq__40581_40596__$1);
          var G__40605 = null;
          var G__40606 = 0;
          var G__40607 = 0;
          seq__40581_40585 = G__40604;
          chunk__40582_40586 = G__40605;
          count__40583_40587 = G__40606;
          i__40584_40588 = G__40607;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7744__auto__));
};
plumbing.core.map_from_vals = function map_from_vals(f, vs) {
  var m_atom__7744__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
  var seq__40614_40618 = cljs.core.seq.call(null, vs);
  var chunk__40615_40619 = null;
  var count__40616_40620 = 0;
  var i__40617_40621 = 0;
  while (true) {
    if (i__40617_40621 < count__40616_40620) {
      var v_40622 = cljs.core._nth.call(null, chunk__40615_40619, i__40617_40621);
      var m40613_40623 = cljs.core.deref.call(null, m_atom__7744__auto__);
      cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m40613_40623, f.call(null, v_40622), v_40622));
      var G__40624 = seq__40614_40618;
      var G__40625 = chunk__40615_40619;
      var G__40626 = count__40616_40620;
      var G__40627 = i__40617_40621 + 1;
      seq__40614_40618 = G__40624;
      chunk__40615_40619 = G__40625;
      count__40616_40620 = G__40626;
      i__40617_40621 = G__40627;
      continue;
    } else {
      var temp__4126__auto___40628 = cljs.core.seq.call(null, seq__40614_40618);
      if (temp__4126__auto___40628) {
        var seq__40614_40629__$1 = temp__4126__auto___40628;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__40614_40629__$1)) {
          var c__4309__auto___40630 = cljs.core.chunk_first.call(null, seq__40614_40629__$1);
          var G__40631 = cljs.core.chunk_rest.call(null, seq__40614_40629__$1);
          var G__40632 = c__4309__auto___40630;
          var G__40633 = cljs.core.count.call(null, c__4309__auto___40630);
          var G__40634 = 0;
          seq__40614_40618 = G__40631;
          chunk__40615_40619 = G__40632;
          count__40616_40620 = G__40633;
          i__40617_40621 = G__40634;
          continue;
        } else {
          var v_40635 = cljs.core.first.call(null, seq__40614_40629__$1);
          var m40613_40636 = cljs.core.deref.call(null, m_atom__7744__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m40613_40636, f.call(null, v_40635), v_40635));
          var G__40637 = cljs.core.next.call(null, seq__40614_40629__$1);
          var G__40638 = null;
          var G__40639 = 0;
          var G__40640 = 0;
          seq__40614_40618 = G__40637;
          chunk__40615_40619 = G__40638;
          count__40616_40620 = G__40639;
          i__40617_40621 = G__40640;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7744__auto__));
};
plumbing.core.dissoc_in = function dissoc_in(m, p__40641) {
  var vec__40643 = p__40641;
  var k = cljs.core.nth.call(null, vec__40643, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__40643, 1);
  if (cljs.core.truth_(m)) {
    var temp__4124__auto__ = function() {
      var and__3541__auto__ = ks;
      if (and__3541__auto__) {
        return dissoc_in.call(null, m.call(null, k), ks);
      } else {
        return and__3541__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var res = temp__4124__auto__;
      return cljs.core.assoc.call(null, m, k, res);
    } else {
      var res = cljs.core.dissoc.call(null, m, k);
      if (cljs.core.empty_QMARK_.call(null, res)) {
        return null;
      } else {
        return res;
      }
    }
  } else {
    return null;
  }
};
plumbing.core.keywordize_map = function keywordize_map(x) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    var m_atom__7744__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
    var seq__40652_40658 = cljs.core.seq.call(null, x);
    var chunk__40653_40659 = null;
    var count__40654_40660 = 0;
    var i__40655_40661 = 0;
    while (true) {
      if (i__40655_40661 < count__40654_40660) {
        var vec__40656_40662 = cljs.core._nth.call(null, chunk__40653_40659, i__40655_40661);
        var k_40663 = cljs.core.nth.call(null, vec__40656_40662, 0, null);
        var v_40664 = cljs.core.nth.call(null, vec__40656_40662, 1, null);
        var m40651_40665 = cljs.core.deref.call(null, m_atom__7744__auto__);
        cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m40651_40665, typeof k_40663 === "string" ? cljs.core.keyword.call(null, k_40663) : k_40663, keywordize_map.call(null, v_40664)));
        var G__40666 = seq__40652_40658;
        var G__40667 = chunk__40653_40659;
        var G__40668 = count__40654_40660;
        var G__40669 = i__40655_40661 + 1;
        seq__40652_40658 = G__40666;
        chunk__40653_40659 = G__40667;
        count__40654_40660 = G__40668;
        i__40655_40661 = G__40669;
        continue;
      } else {
        var temp__4126__auto___40670 = cljs.core.seq.call(null, seq__40652_40658);
        if (temp__4126__auto___40670) {
          var seq__40652_40671__$1 = temp__4126__auto___40670;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__40652_40671__$1)) {
            var c__4309__auto___40672 = cljs.core.chunk_first.call(null, seq__40652_40671__$1);
            var G__40673 = cljs.core.chunk_rest.call(null, seq__40652_40671__$1);
            var G__40674 = c__4309__auto___40672;
            var G__40675 = cljs.core.count.call(null, c__4309__auto___40672);
            var G__40676 = 0;
            seq__40652_40658 = G__40673;
            chunk__40653_40659 = G__40674;
            count__40654_40660 = G__40675;
            i__40655_40661 = G__40676;
            continue;
          } else {
            var vec__40657_40677 = cljs.core.first.call(null, seq__40652_40671__$1);
            var k_40678 = cljs.core.nth.call(null, vec__40657_40677, 0, null);
            var v_40679 = cljs.core.nth.call(null, vec__40657_40677, 1, null);
            var m40651_40680 = cljs.core.deref.call(null, m_atom__7744__auto__);
            cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m40651_40680, typeof k_40678 === "string" ? cljs.core.keyword.call(null, k_40678) : k_40678, keywordize_map.call(null, v_40679)));
            var G__40681 = cljs.core.next.call(null, seq__40652_40671__$1);
            var G__40682 = null;
            var G__40683 = 0;
            var G__40684 = 0;
            seq__40652_40658 = G__40681;
            chunk__40653_40659 = G__40682;
            count__40654_40660 = G__40683;
            i__40655_40661 = G__40684;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7744__auto__));
  } else {
    if (cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.map.call(null, keywordize_map, x);
    } else {
      if (cljs.core.vector_QMARK_.call(null, x)) {
        return cljs.core.mapv.call(null, keywordize_map, x);
      } else {
        return x;
      }
    }
  }
};
plumbing.core.safe_get = function safe_get(m, k) {
  var temp__4124__auto__ = cljs.core.find.call(null, m, k);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var pair__7813__auto__ = temp__4124__auto__;
    return cljs.core.val.call(null, pair__7813__auto__);
  } else {
    var e = schema.utils.format_STAR_.call(null, "Key %s not found in %s", k, cljs.core.mapv.call(null, cljs.core.key, m));
    throw new Error(e);
  }
};
plumbing.core.safe_get_in = function safe_get_in(m, ks) {
  while (true) {
    if (cljs.core.seq.call(null, ks)) {
      var G__40685 = plumbing.core.safe_get.call(null, m, cljs.core.first.call(null, ks));
      var G__40686 = cljs.core.next.call(null, ks);
      m = G__40685;
      ks = G__40686;
      continue;
    } else {
      return m;
    }
    break;
  }
};
plumbing.core.assoc_when = function() {
  var assoc_when__delegate = function(m, kvs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null))))));
    }
    return cljs.core.into.call(null, function() {
      var or__3553__auto__ = m;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), function() {
      var iter__4278__auto__ = function iter__40695(s__40696) {
        return new cljs.core.LazySeq(null, function() {
          var s__40696__$1 = s__40696;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__40696__$1);
            if (temp__4126__auto__) {
              var s__40696__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__40696__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40696__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__40698 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__40697 = 0;
                  while (true) {
                    if (i__40697 < size__4277__auto__) {
                      var vec__40701 = cljs.core._nth.call(null, c__4276__auto__, i__40697);
                      var k = cljs.core.nth.call(null, vec__40701, 0, null);
                      var v = cljs.core.nth.call(null, vec__40701, 1, null);
                      if (cljs.core.truth_(v)) {
                        cljs.core.chunk_append.call(null, b__40698, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                        var G__40703 = i__40697 + 1;
                        i__40697 = G__40703;
                        continue;
                      } else {
                        var G__40704 = i__40697 + 1;
                        i__40697 = G__40704;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40698), iter__40695.call(null, cljs.core.chunk_rest.call(null, s__40696__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40698), null);
                }
              } else {
                var vec__40702 = cljs.core.first.call(null, s__40696__$2);
                var k = cljs.core.nth.call(null, vec__40702, 0, null);
                var v = cljs.core.nth.call(null, vec__40702, 1, null);
                if (cljs.core.truth_(v)) {
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__40695.call(null, cljs.core.rest.call(null, s__40696__$2)));
                } else {
                  var G__40705 = cljs.core.rest.call(null, s__40696__$2);
                  s__40696__$1 = G__40705;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4278__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
    }());
  };
  var assoc_when = function(m, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return assoc_when__delegate.call(this, m, kvs);
  };
  assoc_when.cljs$lang$maxFixedArity = 1;
  assoc_when.cljs$lang$applyTo = function(arglist__40706) {
    var m = cljs.core.first(arglist__40706);
    var kvs = cljs.core.rest(arglist__40706);
    return assoc_when__delegate(m, kvs);
  };
  assoc_when.cljs$core$IFn$_invoke$arity$variadic = assoc_when__delegate;
  return assoc_when;
}();
plumbing.core.update_in_when = function() {
  var update_in_when__delegate = function(m, key_seq, f, args) {
    var found = cljs.core.get_in.call(null, m, key_seq, plumbing.core._PLUS_none_PLUS_);
    if (!(plumbing.core._PLUS_none_PLUS_ === found)) {
      return cljs.core.assoc_in.call(null, m, key_seq, cljs.core.apply.call(null, f, found, args));
    } else {
      return m;
    }
  };
  var update_in_when = function(m, key_seq, f, var_args) {
    var args = null;
    if (arguments.length > 3) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return update_in_when__delegate.call(this, m, key_seq, f, args);
  };
  update_in_when.cljs$lang$maxFixedArity = 3;
  update_in_when.cljs$lang$applyTo = function(arglist__40707) {
    var m = cljs.core.first(arglist__40707);
    arglist__40707 = cljs.core.next(arglist__40707);
    var key_seq = cljs.core.first(arglist__40707);
    arglist__40707 = cljs.core.next(arglist__40707);
    var f = cljs.core.first(arglist__40707);
    var args = cljs.core.rest(arglist__40707);
    return update_in_when__delegate(m, key_seq, f, args);
  };
  update_in_when.cljs$core$IFn$_invoke$arity$variadic = update_in_when__delegate;
  return update_in_when;
}();
plumbing.core.grouped_map = function grouped_map(key_fn, map_fn, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = key_fn.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), map_fn.call(null, x)));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
plumbing.core.aconcat = function aconcat(s) {
  return cljs.core.concat.call(null, new cljs.core.LazySeq(null, function() {
    return cljs.core.first.call(null, s);
  }, null, null), new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.next.call(null, s);
    if (temp__4126__auto__) {
      var n = temp__4126__auto__;
      return aconcat.call(null, n);
    } else {
      return null;
    }
  }, null, null));
};
plumbing.core.unchunk = function unchunk(s) {
  if (cljs.core.seq.call(null, s)) {
    return cljs.core.cons.call(null, cljs.core.first.call(null, s), new cljs.core.LazySeq(null, function() {
      return unchunk.call(null, cljs.core.rest.call(null, s));
    }, null, null));
  } else {
    return null;
  }
};
plumbing.core.sum = function() {
  var sum = null;
  var sum__1 = function(xs) {
    return cljs.core.reduce.call(null, cljs.core._PLUS_, xs);
  };
  var sum__2 = function(f, xs) {
    return cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, f, xs));
  };
  sum = function(f, xs) {
    switch(arguments.length) {
      case 1:
        return sum__1.call(this, f);
      case 2:
        return sum__2.call(this, f, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sum.cljs$core$IFn$_invoke$arity$1 = sum__1;
  sum.cljs$core$IFn$_invoke$arity$2 = sum__2;
  return sum;
}();
plumbing.core.singleton = function singleton(xs) {
  var temp__4126__auto__ = cljs.core.seq.call(null, xs);
  if (temp__4126__auto__) {
    var xs__$1 = temp__4126__auto__;
    if (cljs.core.next.call(null, xs__$1)) {
      return null;
    } else {
      return cljs.core.first.call(null, xs__$1);
    }
  } else {
    return null;
  }
};
plumbing.core.indexed = function indexed(s) {
  return cljs.core.map_indexed.call(null, cljs.core.vector, s);
};
plumbing.core.positions = function positions(f, s) {
  return cljs.core.keep_indexed.call(null, function(i, x) {
    if (cljs.core.truth_(f.call(null, x))) {
      return i;
    } else {
      return null;
    }
  }, s);
};
plumbing.core.distinct_by = function distinct_by(f, xs) {
  var s = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
  var iter__4278__auto__ = function(s) {
    return function iter__40712(s__40713) {
      return new cljs.core.LazySeq(null, function(s) {
        return function() {
          var s__40713__$1 = s__40713;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__40713__$1);
            if (temp__4126__auto__) {
              var s__40713__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__40713__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40713__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__40715 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__40714 = 0;
                  while (true) {
                    if (i__40714 < size__4277__auto__) {
                      var x = cljs.core._nth.call(null, c__4276__auto__, i__40714);
                      var id = f.call(null, x);
                      if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, s), id)) {
                        cljs.core.chunk_append.call(null, b__40715, function() {
                          cljs.core.swap_BANG_.call(null, s, cljs.core.conj, id);
                          return x;
                        }());
                        var G__40716 = i__40714 + 1;
                        i__40714 = G__40716;
                        continue;
                      } else {
                        var G__40717 = i__40714 + 1;
                        i__40714 = G__40717;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40715), iter__40712.call(null, cljs.core.chunk_rest.call(null, s__40713__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40715), null);
                }
              } else {
                var x = cljs.core.first.call(null, s__40713__$2);
                var id = f.call(null, x);
                if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, s), id)) {
                  return cljs.core.cons.call(null, function() {
                    cljs.core.swap_BANG_.call(null, s, cljs.core.conj, id);
                    return x;
                  }(), iter__40712.call(null, cljs.core.rest.call(null, s__40713__$2)));
                } else {
                  var G__40718 = cljs.core.rest.call(null, s__40713__$2);
                  s__40713__$1 = G__40718;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        };
      }(s), null, null);
    };
  }(s);
  return iter__4278__auto__.call(null, xs);
};
plumbing.core.interleave_all = function() {
  var interleave_all__delegate = function(colls) {
    return new cljs.core.LazySeq(null, function() {
      return function helper(seqs) {
        if (cljs.core.seq.call(null, seqs)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, seqs), new cljs.core.LazySeq(null, function() {
            return helper.call(null, cljs.core.keep.call(null, cljs.core.next, seqs));
          }, null, null));
        } else {
          return null;
        }
      }.call(null, cljs.core.keep.call(null, cljs.core.seq, colls));
    }, null, null);
  };
  var interleave_all = function(var_args) {
    var colls = null;
    if (arguments.length > 0) {
      colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return interleave_all__delegate.call(this, colls);
  };
  interleave_all.cljs$lang$maxFixedArity = 0;
  interleave_all.cljs$lang$applyTo = function(arglist__40719) {
    var colls = cljs.core.seq(arglist__40719);
    return interleave_all__delegate(colls);
  };
  interleave_all.cljs$core$IFn$_invoke$arity$variadic = interleave_all__delegate;
  return interleave_all;
}();
plumbing.core.count_when = function count_when(pred, xs) {
  return cljs.core.count.call(null, cljs.core.filter.call(null, pred, xs));
};
plumbing.core.conj_when = function() {
  var conj_when = null;
  var conj_when__2 = function(coll, x) {
    if (cljs.core.truth_(x)) {
      return cljs.core.conj.call(null, coll, x);
    } else {
      return coll;
    }
  };
  var conj_when__3 = function() {
    var G__40720__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__40721 = conj_when.call(null, coll, x);
          var G__40722 = cljs.core.first.call(null, xs);
          var G__40723 = cljs.core.next.call(null, xs);
          coll = G__40721;
          x = G__40722;
          xs = G__40723;
          continue;
        } else {
          return conj_when.call(null, coll, x);
        }
        break;
      }
    };
    var G__40720 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__40720__delegate.call(this, coll, x, xs);
    };
    G__40720.cljs$lang$maxFixedArity = 2;
    G__40720.cljs$lang$applyTo = function(arglist__40724) {
      var coll = cljs.core.first(arglist__40724);
      arglist__40724 = cljs.core.next(arglist__40724);
      var x = cljs.core.first(arglist__40724);
      var xs = cljs.core.rest(arglist__40724);
      return G__40720__delegate(coll, x, xs);
    };
    G__40720.cljs$core$IFn$_invoke$arity$variadic = G__40720__delegate;
    return G__40720;
  }();
  conj_when = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj_when__2.call(this, coll, x);
      default:
        return conj_when__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_when.cljs$lang$maxFixedArity = 2;
  conj_when.cljs$lang$applyTo = conj_when__3.cljs$lang$applyTo;
  conj_when.cljs$core$IFn$_invoke$arity$2 = conj_when__2;
  conj_when.cljs$core$IFn$_invoke$arity$variadic = conj_when__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_when;
}();
plumbing.core.cons_when = function cons_when(x, s) {
  if (cljs.core.truth_(x)) {
    return cljs.core.cons.call(null, x, s);
  } else {
    return s;
  }
};
plumbing.core.rsort_by = cljs.core.comp.call(null, cljs.core.reverse, cljs.core.sort_by);
plumbing.core.swap_pair_BANG_ = function() {
  var swap_pair_BANG_ = null;
  var swap_pair_BANG___2 = function(a, f) {
    while (true) {
      var old_val = cljs.core.deref.call(null, a);
      var new_val = f.call(null, old_val);
      if (cljs.core.compare_and_set_BANG_.call(null, a, old_val, new_val)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_val, new_val], null);
      } else {
        continue;
      }
      break;
    }
  };
  var swap_pair_BANG___3 = function() {
    var G__40726__delegate = function(a, f, args) {
      return swap_pair_BANG_.call(null, a, function(p1__40725_SHARP_) {
        return cljs.core.apply.call(null, f, p1__40725_SHARP_, args);
      });
    };
    var G__40726 = function(a, f, var_args) {
      var args = null;
      if (arguments.length > 2) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__40726__delegate.call(this, a, f, args);
    };
    G__40726.cljs$lang$maxFixedArity = 2;
    G__40726.cljs$lang$applyTo = function(arglist__40727) {
      var a = cljs.core.first(arglist__40727);
      arglist__40727 = cljs.core.next(arglist__40727);
      var f = cljs.core.first(arglist__40727);
      var args = cljs.core.rest(arglist__40727);
      return G__40726__delegate(a, f, args);
    };
    G__40726.cljs$core$IFn$_invoke$arity$variadic = G__40726__delegate;
    return G__40726;
  }();
  swap_pair_BANG_ = function(a, f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return swap_pair_BANG___2.call(this, a, f);
      default:
        return swap_pair_BANG___3.cljs$core$IFn$_invoke$arity$variadic(a, f, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_pair_BANG_.cljs$lang$maxFixedArity = 2;
  swap_pair_BANG_.cljs$lang$applyTo = swap_pair_BANG___3.cljs$lang$applyTo;
  swap_pair_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_pair_BANG___2;
  swap_pair_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_pair_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return swap_pair_BANG_;
}();
plumbing.core.get_and_set_BANG_ = function get_and_set_BANG_(a, new_val) {
  return cljs.core.first.call(null, plumbing.core.swap_pair_BANG_.call(null, a, cljs.core.constantly.call(null, new_val)));
};
plumbing.core.millis = function millis() {
  return(new Date).getTime();
};
plumbing.core.mapply = function() {
  var mapply = null;
  var mapply__2 = function(f, m) {
    return cljs.core.apply.call(null, f, cljs.core.apply.call(null, cljs.core.concat, m));
  };
  var mapply__3 = function() {
    var G__40728__delegate = function(f, arg, args) {
      return cljs.core.apply.call(null, f, arg, cljs.core.concat.call(null, cljs.core.butlast.call(null, args), cljs.core.apply.call(null, cljs.core.concat, cljs.core.last.call(null, args))));
    };
    var G__40728 = function(f, arg, var_args) {
      var args = null;
      if (arguments.length > 2) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__40728__delegate.call(this, f, arg, args);
    };
    G__40728.cljs$lang$maxFixedArity = 2;
    G__40728.cljs$lang$applyTo = function(arglist__40729) {
      var f = cljs.core.first(arglist__40729);
      arglist__40729 = cljs.core.next(arglist__40729);
      var arg = cljs.core.first(arglist__40729);
      var args = cljs.core.rest(arglist__40729);
      return G__40728__delegate(f, arg, args);
    };
    G__40728.cljs$core$IFn$_invoke$arity$variadic = G__40728__delegate;
    return G__40728;
  }();
  mapply = function(f, arg, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return mapply__2.call(this, f, arg);
      default:
        return mapply__3.cljs$core$IFn$_invoke$arity$variadic(f, arg, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapply.cljs$lang$maxFixedArity = 2;
  mapply.cljs$lang$applyTo = mapply__3.cljs$lang$applyTo;
  mapply.cljs$core$IFn$_invoke$arity$2 = mapply__2;
  mapply.cljs$core$IFn$_invoke$arity$variadic = mapply__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapply;
}();
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var a = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__41131) {
    var opts__8694__auto__ = cljs.core.first(arglist__41131);
    var children__8695__auto__ = cljs.core.rest(arglist__41131);
    return a__delegate(opts__8694__auto__, children__8695__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var abbr = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__41132) {
    var opts__8694__auto__ = cljs.core.first(arglist__41132);
    var children__8695__auto__ = cljs.core.rest(arglist__41132);
    return abbr__delegate(opts__8694__auto__, children__8695__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var address = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__41133) {
    var opts__8694__auto__ = cljs.core.first(arglist__41133);
    var children__8695__auto__ = cljs.core.rest(arglist__41133);
    return address__delegate(opts__8694__auto__, children__8695__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var area = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__41134) {
    var opts__8694__auto__ = cljs.core.first(arglist__41134);
    var children__8695__auto__ = cljs.core.rest(arglist__41134);
    return area__delegate(opts__8694__auto__, children__8695__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var article = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__41135) {
    var opts__8694__auto__ = cljs.core.first(arglist__41135);
    var children__8695__auto__ = cljs.core.rest(arglist__41135);
    return article__delegate(opts__8694__auto__, children__8695__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var aside = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__41136) {
    var opts__8694__auto__ = cljs.core.first(arglist__41136);
    var children__8695__auto__ = cljs.core.rest(arglist__41136);
    return aside__delegate(opts__8694__auto__, children__8695__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var audio = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__41137) {
    var opts__8694__auto__ = cljs.core.first(arglist__41137);
    var children__8695__auto__ = cljs.core.rest(arglist__41137);
    return audio__delegate(opts__8694__auto__, children__8695__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var b = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__41138) {
    var opts__8694__auto__ = cljs.core.first(arglist__41138);
    var children__8695__auto__ = cljs.core.rest(arglist__41138);
    return b__delegate(opts__8694__auto__, children__8695__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var base = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__41139) {
    var opts__8694__auto__ = cljs.core.first(arglist__41139);
    var children__8695__auto__ = cljs.core.rest(arglist__41139);
    return base__delegate(opts__8694__auto__, children__8695__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var bdi = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__41140) {
    var opts__8694__auto__ = cljs.core.first(arglist__41140);
    var children__8695__auto__ = cljs.core.rest(arglist__41140);
    return bdi__delegate(opts__8694__auto__, children__8695__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var bdo = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__41141) {
    var opts__8694__auto__ = cljs.core.first(arglist__41141);
    var children__8695__auto__ = cljs.core.rest(arglist__41141);
    return bdo__delegate(opts__8694__auto__, children__8695__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var big = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__41142) {
    var opts__8694__auto__ = cljs.core.first(arglist__41142);
    var children__8695__auto__ = cljs.core.rest(arglist__41142);
    return big__delegate(opts__8694__auto__, children__8695__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var blockquote = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__41143) {
    var opts__8694__auto__ = cljs.core.first(arglist__41143);
    var children__8695__auto__ = cljs.core.rest(arglist__41143);
    return blockquote__delegate(opts__8694__auto__, children__8695__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var body = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__41144) {
    var opts__8694__auto__ = cljs.core.first(arglist__41144);
    var children__8695__auto__ = cljs.core.rest(arglist__41144);
    return body__delegate(opts__8694__auto__, children__8695__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var br = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__41145) {
    var opts__8694__auto__ = cljs.core.first(arglist__41145);
    var children__8695__auto__ = cljs.core.rest(arglist__41145);
    return br__delegate(opts__8694__auto__, children__8695__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var button = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__41146) {
    var opts__8694__auto__ = cljs.core.first(arglist__41146);
    var children__8695__auto__ = cljs.core.rest(arglist__41146);
    return button__delegate(opts__8694__auto__, children__8695__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var canvas = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__41147) {
    var opts__8694__auto__ = cljs.core.first(arglist__41147);
    var children__8695__auto__ = cljs.core.rest(arglist__41147);
    return canvas__delegate(opts__8694__auto__, children__8695__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var caption = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__41148) {
    var opts__8694__auto__ = cljs.core.first(arglist__41148);
    var children__8695__auto__ = cljs.core.rest(arglist__41148);
    return caption__delegate(opts__8694__auto__, children__8695__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var cite = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__41149) {
    var opts__8694__auto__ = cljs.core.first(arglist__41149);
    var children__8695__auto__ = cljs.core.rest(arglist__41149);
    return cite__delegate(opts__8694__auto__, children__8695__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var code = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__41150) {
    var opts__8694__auto__ = cljs.core.first(arglist__41150);
    var children__8695__auto__ = cljs.core.rest(arglist__41150);
    return code__delegate(opts__8694__auto__, children__8695__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var col = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__41151) {
    var opts__8694__auto__ = cljs.core.first(arglist__41151);
    var children__8695__auto__ = cljs.core.rest(arglist__41151);
    return col__delegate(opts__8694__auto__, children__8695__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var colgroup = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__41152) {
    var opts__8694__auto__ = cljs.core.first(arglist__41152);
    var children__8695__auto__ = cljs.core.rest(arglist__41152);
    return colgroup__delegate(opts__8694__auto__, children__8695__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var data = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__41153) {
    var opts__8694__auto__ = cljs.core.first(arglist__41153);
    var children__8695__auto__ = cljs.core.rest(arglist__41153);
    return data__delegate(opts__8694__auto__, children__8695__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var datalist = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__41154) {
    var opts__8694__auto__ = cljs.core.first(arglist__41154);
    var children__8695__auto__ = cljs.core.rest(arglist__41154);
    return datalist__delegate(opts__8694__auto__, children__8695__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var dd = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__41155) {
    var opts__8694__auto__ = cljs.core.first(arglist__41155);
    var children__8695__auto__ = cljs.core.rest(arglist__41155);
    return dd__delegate(opts__8694__auto__, children__8695__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var del = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__41156) {
    var opts__8694__auto__ = cljs.core.first(arglist__41156);
    var children__8695__auto__ = cljs.core.rest(arglist__41156);
    return del__delegate(opts__8694__auto__, children__8695__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var dfn = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__41157) {
    var opts__8694__auto__ = cljs.core.first(arglist__41157);
    var children__8695__auto__ = cljs.core.rest(arglist__41157);
    return dfn__delegate(opts__8694__auto__, children__8695__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var div = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__41158) {
    var opts__8694__auto__ = cljs.core.first(arglist__41158);
    var children__8695__auto__ = cljs.core.rest(arglist__41158);
    return div__delegate(opts__8694__auto__, children__8695__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var dl = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__41159) {
    var opts__8694__auto__ = cljs.core.first(arglist__41159);
    var children__8695__auto__ = cljs.core.rest(arglist__41159);
    return dl__delegate(opts__8694__auto__, children__8695__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var dt = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__41160) {
    var opts__8694__auto__ = cljs.core.first(arglist__41160);
    var children__8695__auto__ = cljs.core.rest(arglist__41160);
    return dt__delegate(opts__8694__auto__, children__8695__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var em = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__41161) {
    var opts__8694__auto__ = cljs.core.first(arglist__41161);
    var children__8695__auto__ = cljs.core.rest(arglist__41161);
    return em__delegate(opts__8694__auto__, children__8695__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var embed = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__41162) {
    var opts__8694__auto__ = cljs.core.first(arglist__41162);
    var children__8695__auto__ = cljs.core.rest(arglist__41162);
    return embed__delegate(opts__8694__auto__, children__8695__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var fieldset = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__41163) {
    var opts__8694__auto__ = cljs.core.first(arglist__41163);
    var children__8695__auto__ = cljs.core.rest(arglist__41163);
    return fieldset__delegate(opts__8694__auto__, children__8695__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var figcaption = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__41164) {
    var opts__8694__auto__ = cljs.core.first(arglist__41164);
    var children__8695__auto__ = cljs.core.rest(arglist__41164);
    return figcaption__delegate(opts__8694__auto__, children__8695__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var figure = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__41165) {
    var opts__8694__auto__ = cljs.core.first(arglist__41165);
    var children__8695__auto__ = cljs.core.rest(arglist__41165);
    return figure__delegate(opts__8694__auto__, children__8695__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var footer = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__41166) {
    var opts__8694__auto__ = cljs.core.first(arglist__41166);
    var children__8695__auto__ = cljs.core.rest(arglist__41166);
    return footer__delegate(opts__8694__auto__, children__8695__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var form = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__41167) {
    var opts__8694__auto__ = cljs.core.first(arglist__41167);
    var children__8695__auto__ = cljs.core.rest(arglist__41167);
    return form__delegate(opts__8694__auto__, children__8695__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var h1 = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__41168) {
    var opts__8694__auto__ = cljs.core.first(arglist__41168);
    var children__8695__auto__ = cljs.core.rest(arglist__41168);
    return h1__delegate(opts__8694__auto__, children__8695__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var h2 = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__41169) {
    var opts__8694__auto__ = cljs.core.first(arglist__41169);
    var children__8695__auto__ = cljs.core.rest(arglist__41169);
    return h2__delegate(opts__8694__auto__, children__8695__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var h3 = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__41170) {
    var opts__8694__auto__ = cljs.core.first(arglist__41170);
    var children__8695__auto__ = cljs.core.rest(arglist__41170);
    return h3__delegate(opts__8694__auto__, children__8695__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var h4 = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__41171) {
    var opts__8694__auto__ = cljs.core.first(arglist__41171);
    var children__8695__auto__ = cljs.core.rest(arglist__41171);
    return h4__delegate(opts__8694__auto__, children__8695__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var h5 = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__41172) {
    var opts__8694__auto__ = cljs.core.first(arglist__41172);
    var children__8695__auto__ = cljs.core.rest(arglist__41172);
    return h5__delegate(opts__8694__auto__, children__8695__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var h6 = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__41173) {
    var opts__8694__auto__ = cljs.core.first(arglist__41173);
    var children__8695__auto__ = cljs.core.rest(arglist__41173);
    return h6__delegate(opts__8694__auto__, children__8695__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var head = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__41174) {
    var opts__8694__auto__ = cljs.core.first(arglist__41174);
    var children__8695__auto__ = cljs.core.rest(arglist__41174);
    return head__delegate(opts__8694__auto__, children__8695__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var header = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__41175) {
    var opts__8694__auto__ = cljs.core.first(arglist__41175);
    var children__8695__auto__ = cljs.core.rest(arglist__41175);
    return header__delegate(opts__8694__auto__, children__8695__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var hr = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__41176) {
    var opts__8694__auto__ = cljs.core.first(arglist__41176);
    var children__8695__auto__ = cljs.core.rest(arglist__41176);
    return hr__delegate(opts__8694__auto__, children__8695__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var html = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__41177) {
    var opts__8694__auto__ = cljs.core.first(arglist__41177);
    var children__8695__auto__ = cljs.core.rest(arglist__41177);
    return html__delegate(opts__8694__auto__, children__8695__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var i = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__41178) {
    var opts__8694__auto__ = cljs.core.first(arglist__41178);
    var children__8695__auto__ = cljs.core.rest(arglist__41178);
    return i__delegate(opts__8694__auto__, children__8695__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var iframe = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__41179) {
    var opts__8694__auto__ = cljs.core.first(arglist__41179);
    var children__8695__auto__ = cljs.core.rest(arglist__41179);
    return iframe__delegate(opts__8694__auto__, children__8695__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var img = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__41180) {
    var opts__8694__auto__ = cljs.core.first(arglist__41180);
    var children__8695__auto__ = cljs.core.rest(arglist__41180);
    return img__delegate(opts__8694__auto__, children__8695__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var ins = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__41181) {
    var opts__8694__auto__ = cljs.core.first(arglist__41181);
    var children__8695__auto__ = cljs.core.rest(arglist__41181);
    return ins__delegate(opts__8694__auto__, children__8695__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var kbd = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__41182) {
    var opts__8694__auto__ = cljs.core.first(arglist__41182);
    var children__8695__auto__ = cljs.core.rest(arglist__41182);
    return kbd__delegate(opts__8694__auto__, children__8695__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var keygen = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__41183) {
    var opts__8694__auto__ = cljs.core.first(arglist__41183);
    var children__8695__auto__ = cljs.core.rest(arglist__41183);
    return keygen__delegate(opts__8694__auto__, children__8695__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var label = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__41184) {
    var opts__8694__auto__ = cljs.core.first(arglist__41184);
    var children__8695__auto__ = cljs.core.rest(arglist__41184);
    return label__delegate(opts__8694__auto__, children__8695__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var legend = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__41185) {
    var opts__8694__auto__ = cljs.core.first(arglist__41185);
    var children__8695__auto__ = cljs.core.rest(arglist__41185);
    return legend__delegate(opts__8694__auto__, children__8695__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var li = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__41186) {
    var opts__8694__auto__ = cljs.core.first(arglist__41186);
    var children__8695__auto__ = cljs.core.rest(arglist__41186);
    return li__delegate(opts__8694__auto__, children__8695__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var link = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__41187) {
    var opts__8694__auto__ = cljs.core.first(arglist__41187);
    var children__8695__auto__ = cljs.core.rest(arglist__41187);
    return link__delegate(opts__8694__auto__, children__8695__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var main = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__41188) {
    var opts__8694__auto__ = cljs.core.first(arglist__41188);
    var children__8695__auto__ = cljs.core.rest(arglist__41188);
    return main__delegate(opts__8694__auto__, children__8695__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var map = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__41189) {
    var opts__8694__auto__ = cljs.core.first(arglist__41189);
    var children__8695__auto__ = cljs.core.rest(arglist__41189);
    return map__delegate(opts__8694__auto__, children__8695__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var mark = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__41190) {
    var opts__8694__auto__ = cljs.core.first(arglist__41190);
    var children__8695__auto__ = cljs.core.rest(arglist__41190);
    return mark__delegate(opts__8694__auto__, children__8695__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var menu = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__41191) {
    var opts__8694__auto__ = cljs.core.first(arglist__41191);
    var children__8695__auto__ = cljs.core.rest(arglist__41191);
    return menu__delegate(opts__8694__auto__, children__8695__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var menuitem = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__41192) {
    var opts__8694__auto__ = cljs.core.first(arglist__41192);
    var children__8695__auto__ = cljs.core.rest(arglist__41192);
    return menuitem__delegate(opts__8694__auto__, children__8695__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var meta = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__41193) {
    var opts__8694__auto__ = cljs.core.first(arglist__41193);
    var children__8695__auto__ = cljs.core.rest(arglist__41193);
    return meta__delegate(opts__8694__auto__, children__8695__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var meter = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__41194) {
    var opts__8694__auto__ = cljs.core.first(arglist__41194);
    var children__8695__auto__ = cljs.core.rest(arglist__41194);
    return meter__delegate(opts__8694__auto__, children__8695__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var nav = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__41195) {
    var opts__8694__auto__ = cljs.core.first(arglist__41195);
    var children__8695__auto__ = cljs.core.rest(arglist__41195);
    return nav__delegate(opts__8694__auto__, children__8695__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var noscript = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__41196) {
    var opts__8694__auto__ = cljs.core.first(arglist__41196);
    var children__8695__auto__ = cljs.core.rest(arglist__41196);
    return noscript__delegate(opts__8694__auto__, children__8695__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var object = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__41197) {
    var opts__8694__auto__ = cljs.core.first(arglist__41197);
    var children__8695__auto__ = cljs.core.rest(arglist__41197);
    return object__delegate(opts__8694__auto__, children__8695__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var ol = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__41198) {
    var opts__8694__auto__ = cljs.core.first(arglist__41198);
    var children__8695__auto__ = cljs.core.rest(arglist__41198);
    return ol__delegate(opts__8694__auto__, children__8695__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var optgroup = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__41199) {
    var opts__8694__auto__ = cljs.core.first(arglist__41199);
    var children__8695__auto__ = cljs.core.rest(arglist__41199);
    return optgroup__delegate(opts__8694__auto__, children__8695__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var output = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__41200) {
    var opts__8694__auto__ = cljs.core.first(arglist__41200);
    var children__8695__auto__ = cljs.core.rest(arglist__41200);
    return output__delegate(opts__8694__auto__, children__8695__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var p = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__41201) {
    var opts__8694__auto__ = cljs.core.first(arglist__41201);
    var children__8695__auto__ = cljs.core.rest(arglist__41201);
    return p__delegate(opts__8694__auto__, children__8695__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var param = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__41202) {
    var opts__8694__auto__ = cljs.core.first(arglist__41202);
    var children__8695__auto__ = cljs.core.rest(arglist__41202);
    return param__delegate(opts__8694__auto__, children__8695__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var pre = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__41203) {
    var opts__8694__auto__ = cljs.core.first(arglist__41203);
    var children__8695__auto__ = cljs.core.rest(arglist__41203);
    return pre__delegate(opts__8694__auto__, children__8695__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var progress = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__41204) {
    var opts__8694__auto__ = cljs.core.first(arglist__41204);
    var children__8695__auto__ = cljs.core.rest(arglist__41204);
    return progress__delegate(opts__8694__auto__, children__8695__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var q = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__41205) {
    var opts__8694__auto__ = cljs.core.first(arglist__41205);
    var children__8695__auto__ = cljs.core.rest(arglist__41205);
    return q__delegate(opts__8694__auto__, children__8695__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var rp = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__41206) {
    var opts__8694__auto__ = cljs.core.first(arglist__41206);
    var children__8695__auto__ = cljs.core.rest(arglist__41206);
    return rp__delegate(opts__8694__auto__, children__8695__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var rt = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__41207) {
    var opts__8694__auto__ = cljs.core.first(arglist__41207);
    var children__8695__auto__ = cljs.core.rest(arglist__41207);
    return rt__delegate(opts__8694__auto__, children__8695__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var ruby = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__41208) {
    var opts__8694__auto__ = cljs.core.first(arglist__41208);
    var children__8695__auto__ = cljs.core.rest(arglist__41208);
    return ruby__delegate(opts__8694__auto__, children__8695__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var s = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__41209) {
    var opts__8694__auto__ = cljs.core.first(arglist__41209);
    var children__8695__auto__ = cljs.core.rest(arglist__41209);
    return s__delegate(opts__8694__auto__, children__8695__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var samp = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__41210) {
    var opts__8694__auto__ = cljs.core.first(arglist__41210);
    var children__8695__auto__ = cljs.core.rest(arglist__41210);
    return samp__delegate(opts__8694__auto__, children__8695__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var script = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__41211) {
    var opts__8694__auto__ = cljs.core.first(arglist__41211);
    var children__8695__auto__ = cljs.core.rest(arglist__41211);
    return script__delegate(opts__8694__auto__, children__8695__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var section = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__41212) {
    var opts__8694__auto__ = cljs.core.first(arglist__41212);
    var children__8695__auto__ = cljs.core.rest(arglist__41212);
    return section__delegate(opts__8694__auto__, children__8695__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var select = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__41213) {
    var opts__8694__auto__ = cljs.core.first(arglist__41213);
    var children__8695__auto__ = cljs.core.rest(arglist__41213);
    return select__delegate(opts__8694__auto__, children__8695__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var small = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__41214) {
    var opts__8694__auto__ = cljs.core.first(arglist__41214);
    var children__8695__auto__ = cljs.core.rest(arglist__41214);
    return small__delegate(opts__8694__auto__, children__8695__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var source = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__41215) {
    var opts__8694__auto__ = cljs.core.first(arglist__41215);
    var children__8695__auto__ = cljs.core.rest(arglist__41215);
    return source__delegate(opts__8694__auto__, children__8695__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var span = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__41216) {
    var opts__8694__auto__ = cljs.core.first(arglist__41216);
    var children__8695__auto__ = cljs.core.rest(arglist__41216);
    return span__delegate(opts__8694__auto__, children__8695__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var strong = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__41217) {
    var opts__8694__auto__ = cljs.core.first(arglist__41217);
    var children__8695__auto__ = cljs.core.rest(arglist__41217);
    return strong__delegate(opts__8694__auto__, children__8695__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var style = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__41218) {
    var opts__8694__auto__ = cljs.core.first(arglist__41218);
    var children__8695__auto__ = cljs.core.rest(arglist__41218);
    return style__delegate(opts__8694__auto__, children__8695__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var sub = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__41219) {
    var opts__8694__auto__ = cljs.core.first(arglist__41219);
    var children__8695__auto__ = cljs.core.rest(arglist__41219);
    return sub__delegate(opts__8694__auto__, children__8695__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var summary = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__41220) {
    var opts__8694__auto__ = cljs.core.first(arglist__41220);
    var children__8695__auto__ = cljs.core.rest(arglist__41220);
    return summary__delegate(opts__8694__auto__, children__8695__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var sup = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__41221) {
    var opts__8694__auto__ = cljs.core.first(arglist__41221);
    var children__8695__auto__ = cljs.core.rest(arglist__41221);
    return sup__delegate(opts__8694__auto__, children__8695__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var table = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__41222) {
    var opts__8694__auto__ = cljs.core.first(arglist__41222);
    var children__8695__auto__ = cljs.core.rest(arglist__41222);
    return table__delegate(opts__8694__auto__, children__8695__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var tbody = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__41223) {
    var opts__8694__auto__ = cljs.core.first(arglist__41223);
    var children__8695__auto__ = cljs.core.rest(arglist__41223);
    return tbody__delegate(opts__8694__auto__, children__8695__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var td = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__41224) {
    var opts__8694__auto__ = cljs.core.first(arglist__41224);
    var children__8695__auto__ = cljs.core.rest(arglist__41224);
    return td__delegate(opts__8694__auto__, children__8695__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var tfoot = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__41225) {
    var opts__8694__auto__ = cljs.core.first(arglist__41225);
    var children__8695__auto__ = cljs.core.rest(arglist__41225);
    return tfoot__delegate(opts__8694__auto__, children__8695__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var th = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__41226) {
    var opts__8694__auto__ = cljs.core.first(arglist__41226);
    var children__8695__auto__ = cljs.core.rest(arglist__41226);
    return th__delegate(opts__8694__auto__, children__8695__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var thead = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__41227) {
    var opts__8694__auto__ = cljs.core.first(arglist__41227);
    var children__8695__auto__ = cljs.core.rest(arglist__41227);
    return thead__delegate(opts__8694__auto__, children__8695__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var time = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__41228) {
    var opts__8694__auto__ = cljs.core.first(arglist__41228);
    var children__8695__auto__ = cljs.core.rest(arglist__41228);
    return time__delegate(opts__8694__auto__, children__8695__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var title = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__41229) {
    var opts__8694__auto__ = cljs.core.first(arglist__41229);
    var children__8695__auto__ = cljs.core.rest(arglist__41229);
    return title__delegate(opts__8694__auto__, children__8695__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var tr = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__41230) {
    var opts__8694__auto__ = cljs.core.first(arglist__41230);
    var children__8695__auto__ = cljs.core.rest(arglist__41230);
    return tr__delegate(opts__8694__auto__, children__8695__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var track = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__41231) {
    var opts__8694__auto__ = cljs.core.first(arglist__41231);
    var children__8695__auto__ = cljs.core.rest(arglist__41231);
    return track__delegate(opts__8694__auto__, children__8695__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var u = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__41232) {
    var opts__8694__auto__ = cljs.core.first(arglist__41232);
    var children__8695__auto__ = cljs.core.rest(arglist__41232);
    return u__delegate(opts__8694__auto__, children__8695__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var ul = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__41233) {
    var opts__8694__auto__ = cljs.core.first(arglist__41233);
    var children__8695__auto__ = cljs.core.rest(arglist__41233);
    return ul__delegate(opts__8694__auto__, children__8695__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var var$ = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__41234) {
    var opts__8694__auto__ = cljs.core.first(arglist__41234);
    var children__8695__auto__ = cljs.core.rest(arglist__41234);
    return var$__delegate(opts__8694__auto__, children__8695__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var video = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__41235) {
    var opts__8694__auto__ = cljs.core.first(arglist__41235);
    var children__8695__auto__ = cljs.core.rest(arglist__41235);
    return video__delegate(opts__8694__auto__, children__8695__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var wbr = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__41236) {
    var opts__8694__auto__ = cljs.core.first(arglist__41236);
    var children__8695__auto__ = cljs.core.rest(arglist__41236);
    return wbr__delegate(opts__8694__auto__, children__8695__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var circle = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__41237) {
    var opts__8694__auto__ = cljs.core.first(arglist__41237);
    var children__8695__auto__ = cljs.core.rest(arglist__41237);
    return circle__delegate(opts__8694__auto__, children__8695__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var ellipse = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__41238) {
    var opts__8694__auto__ = cljs.core.first(arglist__41238);
    var children__8695__auto__ = cljs.core.rest(arglist__41238);
    return ellipse__delegate(opts__8694__auto__, children__8695__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var g = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__41239) {
    var opts__8694__auto__ = cljs.core.first(arglist__41239);
    var children__8695__auto__ = cljs.core.rest(arglist__41239);
    return g__delegate(opts__8694__auto__, children__8695__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var line = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__41240) {
    var opts__8694__auto__ = cljs.core.first(arglist__41240);
    var children__8695__auto__ = cljs.core.rest(arglist__41240);
    return line__delegate(opts__8694__auto__, children__8695__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var path = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__41241) {
    var opts__8694__auto__ = cljs.core.first(arglist__41241);
    var children__8695__auto__ = cljs.core.rest(arglist__41241);
    return path__delegate(opts__8694__auto__, children__8695__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var polyline = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__41242) {
    var opts__8694__auto__ = cljs.core.first(arglist__41242);
    var children__8695__auto__ = cljs.core.rest(arglist__41242);
    return polyline__delegate(opts__8694__auto__, children__8695__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var rect = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__41243) {
    var opts__8694__auto__ = cljs.core.first(arglist__41243);
    var children__8695__auto__ = cljs.core.rest(arglist__41243);
    return rect__delegate(opts__8694__auto__, children__8695__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var svg = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__41244) {
    var opts__8694__auto__ = cljs.core.first(arglist__41244);
    var children__8695__auto__ = cljs.core.rest(arglist__41244);
    return svg__delegate(opts__8694__auto__, children__8695__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var text = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__41245) {
    var opts__8694__auto__ = cljs.core.first(arglist__41245);
    var children__8695__auto__ = cljs.core.rest(arglist__41245);
    return text__delegate(opts__8694__auto__, children__8695__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var defs = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__41246) {
    var opts__8694__auto__ = cljs.core.first(arglist__41246);
    var children__8695__auto__ = cljs.core.rest(arglist__41246);
    return defs__delegate(opts__8694__auto__, children__8695__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var linearGradient = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__41247) {
    var opts__8694__auto__ = cljs.core.first(arglist__41247);
    var children__8695__auto__ = cljs.core.rest(arglist__41247);
    return linearGradient__delegate(opts__8694__auto__, children__8695__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var polygon = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__41248) {
    var opts__8694__auto__ = cljs.core.first(arglist__41248);
    var children__8695__auto__ = cljs.core.rest(arglist__41248);
    return polygon__delegate(opts__8694__auto__, children__8695__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var radialGradient = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__41249) {
    var opts__8694__auto__ = cljs.core.first(arglist__41249);
    var children__8695__auto__ = cljs.core.rest(arglist__41249);
    return radialGradient__delegate(opts__8694__auto__, children__8695__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var stop = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__41250) {
    var opts__8694__auto__ = cljs.core.first(arglist__41250);
    var children__8695__auto__ = cljs.core.rest(arglist__41250);
    return stop__delegate(opts__8694__auto__, children__8695__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj40897 = {};
  return obj40897;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.display_name[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.display_name["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj40899 = {};
  return obj40899;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.init_state[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.init_state["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj40901 = {};
  return obj40901;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.should_update[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.should_update["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj40903 = {};
  return obj40903;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.will_mount[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.will_mount["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj40905 = {};
  return obj40905;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.did_mount[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.did_mount["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj40907 = {};
  return obj40907;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.will_unmount[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.will_unmount["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj40909 = {};
  return obj40909;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.will_update[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.will_update["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj40911 = {};
  return obj40911;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.did_update[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.did_update["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj40913 = {};
  return obj40913;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.will_receive_props[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.will_receive_props["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj40915 = {};
  return obj40915;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.render[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.render["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj40917 = {};
  return obj40917;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.render_state[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.render_state["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj40919 = {};
  return obj40919;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj40921 = {};
  return obj40921;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._get_state[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._get_state["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._get_state[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._get_state["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj40923 = {};
  return obj40923;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._get_render_state[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._get_render_state["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._get_render_state[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._get_render_state["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj40925 = {};
  return obj40925;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj40927 = {};
  return obj40927;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core._get_queue[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._get_queue["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj40929 = {};
  return obj40929;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = om.core._value[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._value["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj40931 = {};
  return obj40931;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3541__auto__ = cursor;
    if (and__3541__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4180__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3553__auto__ = om.core._path[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._path["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3541__auto__ = cursor;
    if (and__3541__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4180__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3553__auto__ = om.core._state[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._state["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj40933 = {};
  return obj40933;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3541__auto__ = value;
      if (and__3541__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4180__auto__ = value == null ? null : value;
      return function() {
        var or__3553__auto__ = om.core._to_cursor[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._to_cursor["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3541__auto__ = value;
      if (and__3541__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4180__auto__ = value == null ? null : value;
      return function() {
        var or__3553__auto__ = om.core._to_cursor[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._to_cursor["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj40935 = {};
  return obj40935;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3541__auto__ = cursor;
    if (and__3541__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4180__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3553__auto__ = om.core._derive[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._derive["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj40937 = {};
  return obj40937;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3541__auto__ = cursor;
    if (and__3541__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4180__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3553__auto__ = om.core._transact_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj40939 = {};
  return obj40939;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = om.core._listen_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = om.core._notify_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__40941 = state;
    if (G__40941) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__40941.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__40941.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__40941);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__40941);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__40943 = x;
  if (G__40943) {
    var bit__4203__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3553__auto__ = bit__4203__auto__;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return G__40943.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__40943.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__40943);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__40943);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_40945 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_40945;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__40947 = state;
    G__40947["__om_prev_state"] = state["__om_state"];
    G__40947["__om_state"] = pending_state;
    G__40947["__om_pending_state"] = null;
    return G__40947;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3553__auto__ = props;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3553__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, 
"componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__40948 = c;
    if (G__40948) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__40948.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__40948.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__40948);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__40948);
    }
  }()) {
    var state_40975 = this$.state;
    var _STAR_read_enabled_STAR_40949_40976 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3553__auto__ = state_40975["__om_prev_state"];
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return state_40975["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_40949_40976;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__40950 = c;
    if (G__40950) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__40950.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__40950.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__40950);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__40950);
    }
  }()) {
    var _STAR_read_enabled_STAR_40951 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_40951;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__40952 = c;
    if (G__40952) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__40952.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__40952.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__40952);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__40952);
    }
  }()) {
    var _STAR_read_enabled_STAR_40953 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_40953;
    }
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_40954 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__40955 = c;
      if (G__40955) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto__ = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return G__40955.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__40955.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__40955);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__40955);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, props["__om_cursor"]), om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            return false;
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_40954;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_40956 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__40957 = c;
      if (G__40957) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto__ = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return G__40957.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__40957.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__40957);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__40957);
      }
    }()) {
      var _STAR_parent_STAR_40958 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_40959 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_40960 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_40960;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_40959;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_40958;
      }
    } else {
      if (function() {
        var G__40961 = c;
        if (G__40961) {
          var bit__4203__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3553__auto__ = bit__4203__auto__;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return G__40961.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__40961.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__40961);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__40961);
        }
      }()) {
        var _STAR_parent_STAR_40962 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_40963 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_40964 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_40964;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_40963;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_40962;
        }
      } else {
        return c;
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_40956;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_40977 = om.core.children.call(null, this$);
  if (function() {
    var G__40965 = c_40977;
    if (G__40965) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__40965.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__40965.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__40965);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__40965);
    }
  }()) {
    var state_40978 = this$.state;
    var _STAR_read_enabled_STAR_40966_40979 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_40977, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_40966_40979;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3553__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__40967 = c;
    if (G__40967) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__40967.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__40967.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__40967);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__40967);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_40968 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_40968;
    }
  }() : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3553__auto__ = id;
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__40969 = c;
    if (G__40969) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__40969.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__40969.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__40969);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__40969);
    }
  }()) {
    var _STAR_read_enabled_STAR_40970 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_40970;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__40971 = c;
    if (G__40971) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__40971.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__40971.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__40971);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__40971);
    }
  }()) {
    var _STAR_read_enabled_STAR_40972 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_40972;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_40980 = om.core.children.call(null, this$);
  if (function() {
    var G__40973 = c_40980;
    if (G__40973) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__40973.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__40973.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__40973);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__40973);
    }
  }()) {
    var _STAR_read_enabled_STAR_40974_40981 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_40980);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_40974_40981;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x40985 = obj;
  x40985.om$core$IGetState$ = true;
  x40985.om$core$IGetState$_get_state$arity$1 = function(x40985) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3553__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x40985);
  x40985.om$core$IGetState$_get_state$arity$2 = function(x40985) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x40985);
  x40985.om$core$IGetRenderState$ = true;
  x40985.om$core$IGetRenderState$_get_render_state$arity$1 = function(x40985) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x40985);
  x40985.om$core$IGetRenderState$_get_render_state$arity$2 = function(x40985) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x40985);
  x40985.om$core$ISetState$ = true;
  x40985.om$core$ISetState$_set_state_BANG_$arity$3 = function(x40985) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_40986 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var app_state = props["__om_app_state"];
        this$__$1.state["__om_pending_state"] = val;
        if (cljs.core.truth_(function() {
          var and__3541__auto__ = !(app_state == null);
          if (and__3541__auto__) {
            return render;
          } else {
            return and__3541__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_40986;
      }
    };
  }(x40985);
  x40985.om$core$ISetState$_set_state_BANG_$arity$4 = function(x40985) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_40987 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var pstate = om.core._get_state.call(null, this$__$1);
        var app_state = props["__om_app_state"];
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (cljs.core.truth_(function() {
          var and__3541__auto__ = !(app_state == null);
          if (and__3541__auto__) {
            return render;
          } else {
            return and__3541__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_40987;
      }
    };
  }(x40985);
  return x40985;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2162591503;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__40989) {
          var vec__40990 = p__40989;
          var k = cljs.core.nth.call(null, vec__40990, 0, null);
          var v = cljs.core.nth.call(null, vec__40990, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__40991 = null;
  var G__40991__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__40991__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__40991 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__40991__2.call(this, self__, k);
      case 3:
        return G__40991__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40991.cljs$core$IFn$_invoke$arity$2 = G__40991__2;
  G__40991.cljs$core$IFn$_invoke$arity$3 = G__40991__3;
  return G__40991;
}();
om.core.MapCursor.prototype.apply = function(self__, args40988) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args40988)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2179375903;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__40993 = null;
  var G__40993__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__40993__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__40993 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__40993__2.call(this, self__, k);
      case 3:
        return G__40993__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40993.cljs$core$IFn$_invoke$arity$2 = G__40993__2;
  G__40993.cljs$core$IFn$_invoke$arity$3 = G__40993__3;
  return G__40993;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args40992) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args40992)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x40995 = cljs.core.clone.call(null, val);
  x40995.cljs$core$IEquiv$ = true;
  x40995.cljs$core$IEquiv$_equiv$arity$2 = function(x40995) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
      }
    };
  }(x40995);
  x40995.om$core$ITransact$ = true;
  x40995.om$core$ITransact$_transact_BANG_$arity$4 = function(x40995) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x40995);
  x40995.om$core$ICursor$ = true;
  x40995.om$core$ICursor$_path$arity$1 = function(x40995) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x40995);
  x40995.om$core$ICursor$_state$arity$1 = function(x40995) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x40995);
  x40995.cljs$core$IDeref$ = true;
  x40995.cljs$core$IDeref$_deref$arity$1 = function(x40995) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
      }
    };
  }(x40995);
  return x40995;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__40998 = val;
        if (G__40998) {
          var bit__4203__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3553__auto__ = bit__4203__auto__;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return G__40998.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__40998.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__40998);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__40998);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__40999 = val;
              if (G__40999) {
                var bit__4203__auto__ = G__40999.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4203__auto__ || G__40999.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__40999.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__40999);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__40999);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__41004 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__41005 = null;
  var count__41006 = 0;
  var i__41007 = 0;
  while (true) {
    if (i__41007 < count__41006) {
      var f = cljs.core._nth.call(null, chunk__41005, i__41007);
      f.call(null);
      var G__41008 = seq__41004;
      var G__41009 = chunk__41005;
      var G__41010 = count__41006;
      var G__41011 = i__41007 + 1;
      seq__41004 = G__41008;
      chunk__41005 = G__41009;
      count__41006 = G__41010;
      i__41007 = G__41011;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__41004);
      if (temp__4126__auto__) {
        var seq__41004__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__41004__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__41004__$1);
          var G__41012 = cljs.core.chunk_rest.call(null, seq__41004__$1);
          var G__41013 = c__4309__auto__;
          var G__41014 = cljs.core.count.call(null, c__4309__auto__);
          var G__41015 = 0;
          seq__41004 = G__41012;
          chunk__41005 = G__41013;
          count__41006 = G__41014;
          i__41007 = G__41015;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__41004__$1);
          f.call(null);
          var G__41016 = cljs.core.next.call(null, seq__41004__$1);
          var G__41017 = null;
          var G__41018 = 0;
          var G__41019 = 0;
          seq__41004 = G__41016;
          chunk__41005 = G__41017;
          count__41006 = G__41018;
          i__41007 = G__41019;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3553__auto__ = function() {
      var G__41024 = x;
      if (G__41024) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto__ = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return G__41024.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__41024.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__41024);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__41024);
      }
    }();
    if (or__3553__auto__) {
      return or__3553__auto__;
    } else {
      var G__41025 = x;
      if (G__41025) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto____$1 = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            return G__41025.om$core$IRenderState$;
          }
        }())) {
          return true;
        } else {
          if (!G__41025.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__41025);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__41025);
      }
    }
  }()) {
    return null;
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("Invalid Om component fn, " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(f.name) + " does not return valid instance") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
  }
};
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createClass(function() {
        var or__3553__auto__ = descriptor;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return om.core.pure_descriptor;
        }
      }());
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1428119148, null), new cljs.core.Symbol(null, 
      "m", "m", -1021758608, null)))));
    }
    if (m == null) {
      var shared = function() {
        var or__3553__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_41030 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_41030;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__41031 = m;
      var map__41031__$1 = cljs.core.seq_QMARK_.call(null, map__41031) ? cljs.core.apply.call(null, cljs.core.hash_map, map__41031) : map__41031;
      var opts = cljs.core.get.call(null, map__41031__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__41031__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__41031__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key = cljs.core.get.call(null, map__41031__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3553__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_shared":shared, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_, "__om_app_state":om.core._STAR_state_STAR_, "key":rkey, "__om_init_state":init_state, "children":opts == null ? function(map__41031, map__41031__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_41032 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_41032;
          }
        };
      }(map__41031, map__41031__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__41031, map__41031__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_41033 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_41033;
          }
        };
      }(map__41031, map__41031__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_state":state});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_41035 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_41035;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__41044 = state;
    if (G__41044) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__41044.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__41044.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__41044);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__41044);
    }
  }()) {
  } else {
    var listeners_41052 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_41053 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x41045_41054 = state;
    x41045_41054.om$core$IRenderQueue$ = true;
    x41045_41054.om$core$IRenderQueue$_get_queue$arity$1 = function(x41045_41054, listeners_41052, render_queue_41053) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_41053);
      };
    }(x41045_41054, listeners_41052, render_queue_41053);
    x41045_41054.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x41045_41054, listeners_41052, render_queue_41053) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_41053), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_41053, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x41045_41054, listeners_41052, render_queue_41053);
    x41045_41054.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x41045_41054, listeners_41052, render_queue_41053) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_41053, cljs.core.empty);
      };
    }(x41045_41054, listeners_41052, render_queue_41053);
    x41045_41054.om$core$INotify$ = true;
    x41045_41054.om$core$INotify$_listen_BANG_$arity$3 = function(x41045_41054, listeners_41052, render_queue_41053) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_41052, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x41045_41054, listeners_41052, render_queue_41053);
    x41045_41054.om$core$INotify$_unlisten_BANG_$arity$2 = function(x41045_41054, listeners_41052, render_queue_41053) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_41052, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x41045_41054, listeners_41052, render_queue_41053);
    x41045_41054.om$core$INotify$_notify_BANG_$arity$3 = function(x41045_41054, listeners_41052, render_queue_41053) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__41046_41055 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_41052));
        var chunk__41047_41056 = null;
        var count__41048_41057 = 0;
        var i__41049_41058 = 0;
        while (true) {
          if (i__41049_41058 < count__41048_41057) {
            var vec__41050_41059 = cljs.core._nth.call(null, chunk__41047_41056, i__41049_41058);
            var __41060 = cljs.core.nth.call(null, vec__41050_41059, 0, null);
            var f_41061 = cljs.core.nth.call(null, vec__41050_41059, 1, null);
            f_41061.call(null, tx_data, root_cursor);
            var G__41062 = seq__41046_41055;
            var G__41063 = chunk__41047_41056;
            var G__41064 = count__41048_41057;
            var G__41065 = i__41049_41058 + 1;
            seq__41046_41055 = G__41062;
            chunk__41047_41056 = G__41063;
            count__41048_41057 = G__41064;
            i__41049_41058 = G__41065;
            continue;
          } else {
            var temp__4126__auto___41066 = cljs.core.seq.call(null, seq__41046_41055);
            if (temp__4126__auto___41066) {
              var seq__41046_41067__$1 = temp__4126__auto___41066;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__41046_41067__$1)) {
                var c__4309__auto___41068 = cljs.core.chunk_first.call(null, seq__41046_41067__$1);
                var G__41069 = cljs.core.chunk_rest.call(null, seq__41046_41067__$1);
                var G__41070 = c__4309__auto___41068;
                var G__41071 = cljs.core.count.call(null, c__4309__auto___41068);
                var G__41072 = 0;
                seq__41046_41055 = G__41069;
                chunk__41047_41056 = G__41070;
                count__41048_41057 = G__41071;
                i__41049_41058 = G__41072;
                continue;
              } else {
                var vec__41051_41073 = cljs.core.first.call(null, seq__41046_41067__$1);
                var __41074 = cljs.core.nth.call(null, vec__41051_41073, 0, null);
                var f_41075 = cljs.core.nth.call(null, vec__41051_41073, 1, null);
                f_41075.call(null, tx_data, root_cursor);
                var G__41076 = cljs.core.next.call(null, seq__41046_41067__$1);
                var G__41077 = null;
                var G__41078 = 0;
                var G__41079 = 0;
                seq__41046_41055 = G__41076;
                chunk__41047_41056 = G__41077;
                count__41048_41057 = G__41078;
                i__41049_41058 = G__41079;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x41045_41054, listeners_41052, render_queue_41053);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__41080) {
  var map__41095 = p__41080;
  var map__41095__$1 = cljs.core.seq_QMARK_.call(null, map__41095) ? cljs.core.apply.call(null, cljs.core.hash_map, map__41095) : map__41095;
  var options = map__41095__$1;
  var instrument = cljs.core.get.call(null, map__41095__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__41095__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__41095__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__41095__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (!(target == null)) {
  } else {
    throw new Error("Assert failed: No target specified to om.core/root\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))));
  }
  var roots_SINGLEQUOTE__41109 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__41109, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__41109, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__41096 = value;
    if (G__41096) {
      var bit__4203__auto__ = G__41096.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4203__auto__ || G__41096.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__41096.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__41096);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__41096);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168));
  var rootf = function(watch_key, state, state__$1, m, map__41095, map__41095__$1, options, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_41103 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_41104 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_41104;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_41103;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__41105_41110 = cljs.core.seq.call(null, queue);
        var chunk__41106_41111 = null;
        var count__41107_41112 = 0;
        var i__41108_41113 = 0;
        while (true) {
          if (i__41108_41113 < count__41107_41112) {
            var c_41114 = cljs.core._nth.call(null, chunk__41106_41111, i__41108_41113);
            if (cljs.core.truth_(c_41114.isMounted())) {
              c_41114.forceUpdate();
            } else {
            }
            var G__41115 = seq__41105_41110;
            var G__41116 = chunk__41106_41111;
            var G__41117 = count__41107_41112;
            var G__41118 = i__41108_41113 + 1;
            seq__41105_41110 = G__41115;
            chunk__41106_41111 = G__41116;
            count__41107_41112 = G__41117;
            i__41108_41113 = G__41118;
            continue;
          } else {
            var temp__4126__auto___41119 = cljs.core.seq.call(null, seq__41105_41110);
            if (temp__4126__auto___41119) {
              var seq__41105_41120__$1 = temp__4126__auto___41119;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__41105_41120__$1)) {
                var c__4309__auto___41121 = cljs.core.chunk_first.call(null, seq__41105_41120__$1);
                var G__41122 = cljs.core.chunk_rest.call(null, seq__41105_41120__$1);
                var G__41123 = c__4309__auto___41121;
                var G__41124 = cljs.core.count.call(null, c__4309__auto___41121);
                var G__41125 = 0;
                seq__41105_41110 = G__41122;
                chunk__41106_41111 = G__41123;
                count__41107_41112 = G__41124;
                i__41108_41113 = G__41125;
                continue;
              } else {
                var c_41126 = cljs.core.first.call(null, seq__41105_41120__$1);
                if (cljs.core.truth_(c_41126.isMounted())) {
                  c_41126.forceUpdate();
                } else {
                }
                var G__41127 = cljs.core.next.call(null, seq__41105_41120__$1);
                var G__41128 = null;
                var G__41129 = 0;
                var G__41130 = 0;
                seq__41105_41110 = G__41127;
                chunk__41106_41111 = G__41128;
                count__41107_41112 = G__41129;
                i__41108_41113 = G__41130;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m, map__41095, map__41095__$1, options, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, m, rootf, map__41095, map__41095__$1, options, instrument, path, tx_listen, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(watch_key, state, state__$1, m, rootf, map__41095, map__41095__$1, options, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, m, rootf, map__41095, map__41095__$1, options, instrument, path, tx_listen, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, m, rootf, map__41095, map__41095__$1, options, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("om_tools.core");
goog.require("cljs.core");
goog.require("plumbing.core");
goog.require("plumbing.core");
goog.require("plumbing.fnk.schema");
goog.require("om.core");
goog.require("om.core");
om_tools.core.state_proxy = function state_proxy(owner) {
  if (cljs.core.truth_(owner)) {
    var get_state = function() {
      return om.core.get_state.call(null, owner);
    };
    if (typeof om_tools.core.t39902 !== "undefined") {
    } else {
      om_tools.core.t39902 = function(get_state, owner, state_proxy, meta39903) {
        this.get_state = get_state;
        this.owner = owner;
        this.state_proxy = state_proxy;
        this.meta39903 = meta39903;
        this.cljs$lang$protocol_mask$partition1$ = 98304;
        this.cljs$lang$protocol_mask$partition0$ = 425984;
      };
      om_tools.core.t39902.cljs$lang$type = true;
      om_tools.core.t39902.cljs$lang$ctorStr = "om-tools.core/t39902";
      om_tools.core.t39902.cljs$lang$ctorPrWriter = function(get_state) {
        return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
          return cljs.core._write.call(null, writer__4121__auto__, "om-tools.core/t39902");
        };
      }(get_state);
      om_tools.core.t39902.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(get_state) {
        return function(s, f) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null)));
        };
      }(get_state);
      om_tools.core.t39902.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(get_state) {
        return function(s, f, x) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null), x));
        };
      }(get_state);
      om_tools.core.t39902.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(get_state) {
        return function(s, f, x, y) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null), x, y));
        };
      }(get_state);
      om_tools.core.t39902.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(get_state) {
        return function(s, f, x, y, more) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, cljs.core.apply.call(null, f, self__.get_state.call(null), x, y, more));
        };
      }(get_state);
      om_tools.core.t39902.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(get_state) {
        return function(_, v) {
          var self__ = this;
          var ___$1 = this;
          return om.core.set_state_BANG_.call(null, self__.owner, v);
        };
      }(get_state);
      om_tools.core.t39902.prototype.cljs$core$IDeref$_deref$arity$1 = function(get_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.get_state.call(null);
        };
      }(get_state);
      om_tools.core.t39902.prototype.cljs$core$IMeta$_meta$arity$1 = function(get_state) {
        return function(_39904) {
          var self__ = this;
          var _39904__$1 = this;
          return self__.meta39903;
        };
      }(get_state);
      om_tools.core.t39902.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(get_state) {
        return function(_39904, meta39903__$1) {
          var self__ = this;
          var _39904__$1 = this;
          return new om_tools.core.t39902(self__.get_state, self__.owner, self__.state_proxy, meta39903__$1);
        };
      }(get_state);
      om_tools.core.__GT_t39902 = function(get_state) {
        return function __GT_t39902(get_state__$1, owner__$1, state_proxy__$1, meta39903) {
          return new om_tools.core.t39902(get_state__$1, owner__$1, state_proxy__$1, meta39903);
        };
      }(get_state);
    }
    return new om_tools.core.t39902(get_state, owner, state_proxy, null);
  } else {
    return null;
  }
};
om_tools.core.set_state_QMARK__BANG_ = function() {
  var set_state_QMARK__BANG_ = null;
  var set_state_QMARK__BANG___2 = function(owner, v) {
    if (cljs.core._EQ_.call(null, v, om.core.get_state.call(null, owner))) {
      return null;
    } else {
      return om.core.set_state_BANG_.call(null, owner, v);
    }
  };
  var set_state_QMARK__BANG___3 = function(owner, korks, v) {
    if (cljs.core._EQ_.call(null, v, om.core.get_state.call(null, owner, korks))) {
      return null;
    } else {
      return om.core.set_state_BANG_.call(null, owner, korks, v);
    }
  };
  set_state_QMARK__BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_QMARK__BANG___2.call(this, owner, korks);
      case 3:
        return set_state_QMARK__BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_QMARK__BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_QMARK__BANG___2;
  set_state_QMARK__BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_QMARK__BANG___3;
  return set_state_QMARK__BANG_;
}();
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__40866_SHARP_) {
      return max === p1__40866_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__40867__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__40867 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__40867__delegate.call(this, s1, s2, sets);
    };
    G__40867.cljs$lang$maxFixedArity = 2;
    G__40867.cljs$lang$applyTo = function(arglist__40868) {
      var s1 = cljs.core.first(arglist__40868);
      arglist__40868 = cljs.core.next(arglist__40868);
      var s2 = cljs.core.first(arglist__40868);
      var sets = cljs.core.rest(arglist__40868);
      return G__40867__delegate(s1, s2, sets);
    };
    G__40867.cljs$core$IFn$_invoke$arity$variadic = G__40867__delegate;
    return G__40867;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__40870 = s2;
        var G__40871 = s1;
        s1 = G__40870;
        s2 = G__40871;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__40872__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__40869_SHARP_) {
        return-cljs.core.count.call(null, p1__40869_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__40872 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__40872__delegate.call(this, s1, s2, sets);
    };
    G__40872.cljs$lang$maxFixedArity = 2;
    G__40872.cljs$lang$applyTo = function(arglist__40873) {
      var s1 = cljs.core.first(arglist__40873);
      arglist__40873 = cljs.core.next(arglist__40873);
      var s2 = cljs.core.first(arglist__40873);
      var sets = cljs.core.rest(arglist__40873);
      return G__40872__delegate(s1, s2, sets);
    };
    G__40872.cljs$core$IFn$_invoke$arity$variadic = G__40872__delegate;
    return G__40872;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__40874__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__40874 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__40874__delegate.call(this, s1, s2, sets);
    };
    G__40874.cljs$lang$maxFixedArity = 2;
    G__40874.cljs$lang$applyTo = function(arglist__40875) {
      var s1 = cljs.core.first(arglist__40875);
      arglist__40875 = cljs.core.next(arglist__40875);
      var s2 = cljs.core.first(arglist__40875);
      var sets = cljs.core.rest(arglist__40875);
      return G__40874__delegate(s1, s2, sets);
    };
    G__40874.cljs$core$IFn$_invoke$arity$variadic = G__40874__delegate;
    return G__40874;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__40876_SHARP_) {
    return cljs.core.select_keys.call(null, p1__40876_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__40879) {
    var vec__40880 = p__40879;
    var old = cljs.core.nth.call(null, vec__40880, 0, null);
    var new$ = cljs.core.nth.call(null, vec__40880, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__40881_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__40881_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__40884) {
    var vec__40885 = p__40884;
    var k = cljs.core.nth.call(null, vec__40885, 0, null);
    var v = cljs.core.nth.call(null, vec__40885, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__40892 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__40892, 0, null);
      var s = cljs.core.nth.call(null, vec__40892, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__40892, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__40892, r, s, idx) {
              return function(p1__40886_SHARP_, p2__40887_SHARP_) {
                return cljs.core.conj.call(null, p1__40886_SHARP_, cljs.core.merge.call(null, p2__40887_SHARP_, x));
              };
            }(found, ks, vec__40892, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__40892, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__40893 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__40893, 0, null);
    var s = cljs.core.nth.call(null, vec__40893, 1, null);
    var k = cljs.core.nth.call(null, vec__40893, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__40893, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__40893, r, s, k, idx) {
            return function(p1__40888_SHARP_, p2__40889_SHARP_) {
              return cljs.core.conj.call(null, p1__40888_SHARP_, cljs.core.merge.call(null, p2__40889_SHARP_, x));
            };
          }(found, vec__40893, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__40893, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__40894_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__40894_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__40895_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__40895_SHARP_);
  }, set2);
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__40834) {
    var vec__40835 = p__40834;
    var k = cljs.core.nth.call(null, vec__40835, 0, null);
    var v = cljs.core.nth.call(null, vec__40835, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__40838) {
    var vec__40839 = p__40838;
    var k = cljs.core.nth.call(null, vec__40839, 0, null);
    var v = cljs.core.nth.call(null, vec__40839, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("sablono.util");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("clojure.string");
goog.require("clojure.walk");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("goog.Uri");
sablono.util._STAR_base_url_STAR_ = null;
sablono.util.ToString = function() {
  var obj40845 = {};
  return obj40845;
}();
sablono.util.to_str = function to_str(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.sablono$util$ToString$to_str$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.sablono$util$ToString$to_str$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = sablono.util.to_str[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = sablono.util.to_str["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToString.to-str", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.ToURI = function() {
  var obj40847 = {};
  return obj40847;
}();
sablono.util.to_uri = function to_uri(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.sablono$util$ToURI$to_uri$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.sablono$util$ToURI$to_uri$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = sablono.util.to_uri[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = sablono.util.to_uri["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToURI.to-uri", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.as_str = function() {
  var as_str__delegate = function(xs) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, sablono.util.to_str, xs));
  };
  var as_str = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return as_str__delegate.call(this, xs);
  };
  as_str.cljs$lang$maxFixedArity = 0;
  as_str.cljs$lang$applyTo = function(arglist__40848) {
    var xs = cljs.core.seq(arglist__40848);
    return as_str__delegate(xs);
  };
  as_str.cljs$core$IFn$_invoke$arity$variadic = as_str__delegate;
  return as_str;
}();
sablono.util.camel_case = function camel_case(k) {
  if (cljs.core.truth_(k)) {
    var vec__40850 = clojure.string.split.call(null, cljs.core.name.call(null, k), /-/);
    var first_word = cljs.core.nth.call(null, vec__40850, 0, null);
    var words = cljs.core.nthnext.call(null, vec__40850, 1);
    if (cljs.core.empty_QMARK_.call(null, words) || cljs.core._EQ_.call(null, "aria", first_word) || cljs.core._EQ_.call(null, "data", first_word)) {
      return k;
    } else {
      return cljs.core.keyword.call(null, clojure.string.join.call(null, cljs.core.conj.call(null, cljs.core.map.call(null, clojure.string.capitalize, words), first_word)));
    }
  } else {
    return null;
  }
};
sablono.util.camel_case_keys = function camel_case_keys(m) {
  var f = function(p__40853) {
    var vec__40854 = p__40853;
    var k = cljs.core.nth.call(null, vec__40854, 0, null);
    var v = cljs.core.nth.call(null, vec__40854, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.util.camel_case.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
sablono.util.html_to_dom_attrs = function html_to_dom_attrs(attrs) {
  return clojure.set.rename_keys.call(null, sablono.util.camel_case_keys.call(null, attrs), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "className", "className", -1983287057), new cljs.core.Keyword(null, "for", "for", -1323786319), new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720)], null));
};
sablono.util.compact_map = function compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var v = cljs.core.get.call(null, m__$1, k);
    if (cljs.core.empty_QMARK_.call(null, v)) {
      return cljs.core.dissoc.call(null, m__$1, k);
    } else {
      return m__$1;
    }
  }, m, cljs.core.keys.call(null, m));
};
sablono.util.merge_with_class = function() {
  var merge_with_class__delegate = function(maps) {
    var classes = cljs.core.vec.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.mapcat.call(null, function(p1__40855_SHARP_) {
      if (cljs.core.list_QMARK_.call(null, p1__40855_SHARP_)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__40855_SHARP_], null);
      } else {
        if (cljs.core.sequential_QMARK_.call(null, p1__40855_SHARP_)) {
          return p1__40855_SHARP_;
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__40855_SHARP_], null);
        }
      }
    }, cljs.core.map.call(null, new cljs.core.Keyword(null, "class", "class", -2030961996), maps))));
    var maps__$1 = cljs.core.apply.call(null, cljs.core.merge, maps);
    if (cljs.core.empty_QMARK_.call(null, classes)) {
      return maps__$1;
    } else {
      return cljs.core.assoc.call(null, maps__$1, new cljs.core.Keyword(null, "class", "class", -2030961996), classes);
    }
  };
  var merge_with_class = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge_with_class__delegate.call(this, maps);
  };
  merge_with_class.cljs$lang$maxFixedArity = 0;
  merge_with_class.cljs$lang$applyTo = function(arglist__40856) {
    var maps = cljs.core.seq(arglist__40856);
    return merge_with_class__delegate(maps);
  };
  merge_with_class.cljs$core$IFn$_invoke$arity$variadic = merge_with_class__delegate;
  return merge_with_class;
}();
sablono.util.strip_css = function strip_css(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, /^[.#]/, "");
  } else {
    return null;
  }
};
sablono.util.match_tag = function match_tag(s) {
  var matches = cljs.core.re_seq.call(null, /[#.]?[^#.]+/, cljs.core.name.call(null, s));
  var vec__40860 = cljs.core.empty_QMARK_.call(null, matches) ? function() {
    throw cljs.core.ex_info.call(null, "Can't match CSS tag: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), s], null));
  }() : cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["#", null, ".", null], null), null)).call(null, cljs.core.ffirst.call(null, matches))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["div", matches], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, matches), cljs.core.rest.call(null, matches)], null);
  var tag_name = cljs.core.nth.call(null, vec__40860, 0, null);
  var names = cljs.core.nth.call(null, vec__40860, 1, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_name, cljs.core.first.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__40860, tag_name, names) {
    return function(p1__40857_SHARP_) {
      return cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, p1__40857_SHARP_));
    };
  }(matches, vec__40860, tag_name, names), names))), cljs.core.vec.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__40860, tag_name, names) {
    return function(p1__40858_SHARP_) {
      return cljs.core._EQ_.call(null, ".", cljs.core.first.call(null, p1__40858_SHARP_));
    };
  }(matches, vec__40860, tag_name, names), names)))], null);
};
sablono.util.normalize_element = function normalize_element(p__40861) {
  var vec__40864 = p__40861;
  var tag = cljs.core.nth.call(null, vec__40864, 0, null);
  var content = cljs.core.nthnext.call(null, vec__40864, 1);
  if (!(tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string")) {
    throw cljs.core.ex_info.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + " is not a valid element name.", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag, new cljs.core.Keyword(null, "content", "content", 15833224), content], null));
  } else {
  }
  var vec__40865 = sablono.util.match_tag.call(null, tag);
  var tag__$1 = cljs.core.nth.call(null, vec__40865, 0, null);
  var id = cljs.core.nth.call(null, vec__40865, 1, null);
  var class$ = cljs.core.nth.call(null, vec__40865, 2, null);
  var tag_attrs = sablono.util.compact_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), class$], null));
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, sablono.util.merge_with_class.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
sablono.util.join_classes = function join_classes(classes) {
  return clojure.string.join.call(null, " ", cljs.core.flatten.call(null, classes));
};
sablono.util.react_symbol = function react_symbol(tag) {
  return cljs.core.symbol.call(null, "js", "React.DOM." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, tag)));
};
sablono.util.react_fn = function react_fn(tag) {
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), null, new cljs.core.Keyword(null, "option", "option", 65132272), null, new cljs.core.Keyword(null, "input", "input", 556931961), null], null), null), cljs.core.keyword.call(null, tag))) {
    return cljs.core.symbol.call(null, "sablono.interpreter", cljs.core.name.call(null, tag));
  } else {
    return sablono.util.react_symbol.call(null, tag);
  }
};
sablono.util.attr_pattern = function attr_pattern(attr) {
  return cljs.core.re_pattern.call(null, "\\s+" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, attr)) + "\\s*\x3d\\s*['\"][^\"']+['\"]");
};
sablono.util.strip_attr = function strip_attr(s, attr) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, sablono.util.attr_pattern.call(null, attr), "");
  } else {
    return null;
  }
};
sablono.util.strip_outer = function strip_outer(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, s, /^\s*<[^>]+>\s*/, ""), /\s*<\/[^>]+>\s*$/, "");
  } else {
    return null;
  }
};
sablono.util.ToString["_"] = true;
sablono.util.to_str["_"] = function(x) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
};
sablono.util.ToString["number"] = true;
sablono.util.to_str["number"] = function(x) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
};
sablono.util.ToString["null"] = true;
sablono.util.to_str["null"] = function(_) {
  return "";
};
goog.Uri.prototype.sablono$util$ToString$ = true;
goog.Uri.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  if (cljs.core.truth_(function() {
    var or__3553__auto__ = x__$1.hasDomain();
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return x__$1.getPath() == null || cljs.core.not.call(null, cljs.core.re_matches.call(null, /^\/.*/, x__$1.getPath()));
    }
  }())) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
  } else {
    var base = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util._STAR_base_url_STAR_);
    if (cljs.core.truth_(cljs.core.re_matches.call(null, /.*\/$/, base))) {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, base, 0, cljs.core.count.call(null, base) - 1)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
    } else {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(base) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
    }
  }
};
cljs.core.Keyword.prototype.sablono$util$ToString$ = true;
cljs.core.Keyword.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.name.call(null, x__$1);
};
sablono.util.ToURI["_"] = true;
sablono.util.to_uri["_"] = function(x) {
  return new goog.Uri("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
};
goog.Uri.prototype.sablono$util$ToURI$ = true;
goog.Uri.prototype.sablono$util$ToURI$to_uri$arity$1 = function(x) {
  var x__$1 = this;
  return x__$1;
};
goog.provide("sablono.interpreter");
goog.require("cljs.core");
goog.require("sablono.util");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("clojure.string");
sablono.interpreter.IInterpreter = function() {
  var obj40841 = {};
  return obj40841;
}();
sablono.interpreter.interpret = function interpret(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.sablono$interpreter$IInterpreter$interpret$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.sablono$interpreter$IInterpreter$interpret$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = sablono.interpreter.interpret[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = sablono.interpreter.interpret["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInterpreter.interpret", this$);
        }
      }
    }().call(null, this$);
  }
};
sablono.interpreter.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
sablono.interpreter.input = sablono.interpreter.wrap_form_element.call(null, React.DOM.input, "input");
sablono.interpreter.option = sablono.interpreter.wrap_form_element.call(null, React.DOM.option, "option");
sablono.interpreter.textarea = sablono.interpreter.wrap_form_element.call(null, React.DOM.textarea, "textarea");
sablono.interpreter.dom_fn = function dom_fn(tag) {
  var temp__4124__auto__ = React.DOM[cljs.core.name.call(null, tag)];
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dom_fn__$1 = temp__4124__auto__;
    return cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "input", "input", 556931961), sablono.interpreter.input, new cljs.core.Keyword(null, "option", "option", 65132272), sablono.interpreter.option, new cljs.core.Keyword(null, "textarea", "textarea", -650375824), sablono.interpreter.textarea], null), cljs.core.keyword.call(null, tag), dom_fn__$1);
  } else {
    throw cljs.core.ex_info.call(null, "Unsupported HTML tag: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, tag)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag], null));
  }
};
sablono.interpreter.attributes = function attributes(attrs) {
  var attrs__$1 = cljs.core.clj__GT_js.call(null, sablono.util.html_to_dom_attrs.call(null, attrs));
  var class$ = attrs__$1.className;
  var class$__$1 = class$ instanceof Array ? clojure.string.join.call(null, " ", class$) : class$;
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, class$__$1))) {
    delete attrs__$1["className"];
  } else {
    attrs__$1.className = class$__$1;
  }
  return attrs__$1;
};
sablono.interpreter.element = function element(element__$1) {
  var vec__40843 = sablono.util.normalize_element.call(null, element__$1);
  var tag = cljs.core.nth.call(null, vec__40843, 0, null);
  var attrs = cljs.core.nth.call(null, vec__40843, 1, null);
  var content = cljs.core.nth.call(null, vec__40843, 2, null);
  var f = sablono.interpreter.dom_fn.call(null, tag);
  var js_attrs = sablono.interpreter.attributes.call(null, attrs);
  if (cljs.core.sequential_QMARK_.call(null, content) && cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, content))) {
    return f.call(null, js_attrs, sablono.interpreter.interpret.call(null, cljs.core.first.call(null, content)));
  } else {
    if (cljs.core.truth_(content)) {
      return cljs.core.apply.call(null, f, js_attrs, sablono.interpreter.interpret.call(null, content));
    } else {
      return f.call(null, js_attrs, null);
    }
  }
};
sablono.interpreter.interpret_seq = function interpret_seq(s) {
  return cljs.core.into_array.call(null, cljs.core.map.call(null, sablono.interpreter.interpret, s));
};
sablono.interpreter.IInterpreter["null"] = true;
sablono.interpreter.interpret["null"] = function(this$) {
  return null;
};
sablono.interpreter.IInterpreter["_"] = true;
sablono.interpreter.interpret["_"] = function(this$) {
  return this$;
};
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.List.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.List.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
goog.provide("sablono.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("sablono.interpreter");
goog.require("sablono.interpreter");
goog.require("sablono.util");
goog.require("clojure.walk");
goog.require("clojure.string");
sablono.core.wrap_attrs = function wrap_attrs(func) {
  return function() {
    var G__40732__delegate = function(args) {
      if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__40731 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag = cljs.core.nth.call(null, vec__40731, 0, null);
        var body = cljs.core.nthnext.call(null, vec__40731, 1);
        if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.merge.call(null, cljs.core.first.call(null, body), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body));
        } else {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.first.call(null, args), body);
        }
      } else {
        return cljs.core.apply.call(null, func, args);
      }
    };
    var G__40732 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__40732__delegate.call(this, args);
    };
    G__40732.cljs$lang$maxFixedArity = 0;
    G__40732.cljs$lang$applyTo = function(arglist__40733) {
      var args = cljs.core.seq(arglist__40733);
      return G__40732__delegate(args);
    };
    G__40732.cljs$core$IFn$_invoke$arity$variadic = G__40732__delegate;
    return G__40732;
  }();
};
sablono.core.update_arglists = function update_arglists(arglists) {
  var iter__4278__auto__ = function iter__40738(s__40739) {
    return new cljs.core.LazySeq(null, function() {
      var s__40739__$1 = s__40739;
      while (true) {
        var temp__4126__auto__ = cljs.core.seq.call(null, s__40739__$1);
        if (temp__4126__auto__) {
          var s__40739__$2 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__40739__$2)) {
            var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40739__$2);
            var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
            var b__40741 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
            if (function() {
              var i__40740 = 0;
              while (true) {
                if (i__40740 < size__4277__auto__) {
                  var args = cljs.core._nth.call(null, c__4276__auto__, i__40740);
                  cljs.core.chunk_append.call(null, b__40741, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)));
                  var G__40742 = i__40740 + 1;
                  i__40740 = G__40742;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40741), iter__40738.call(null, cljs.core.chunk_rest.call(null, s__40739__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40741), null);
            }
          } else {
            var args = cljs.core.first.call(null, s__40739__$2);
            return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)), iter__40738.call(null, cljs.core.rest.call(null, s__40739__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4278__auto__.call(null, arglists);
};
sablono.core.render = function render(component) {
  return React.renderComponentToString(component);
};
sablono.core.include_css = function() {
  var include_css__delegate = function(styles) {
    var iter__4278__auto__ = function iter__40747(s__40748) {
      return new cljs.core.LazySeq(null, function() {
        var s__40748__$1 = s__40748;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__40748__$1);
          if (temp__4126__auto__) {
            var s__40748__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__40748__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40748__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__40750 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__40749 = 0;
                while (true) {
                  if (i__40749 < size__4277__auto__) {
                    var style = cljs.core._nth.call(null, c__4276__auto__, i__40749);
                    cljs.core.chunk_append.call(null, b__40750, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null));
                    var G__40751 = i__40749 + 1;
                    i__40749 = G__40751;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40750), iter__40747.call(null, cljs.core.chunk_rest.call(null, s__40748__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40750), null);
              }
            } else {
              var style = cljs.core.first.call(null, s__40748__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null), iter__40747.call(null, 
              cljs.core.rest.call(null, s__40748__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, styles);
  };
  var include_css = function(var_args) {
    var styles = null;
    if (arguments.length > 0) {
      styles = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return include_css__delegate.call(this, styles);
  };
  include_css.cljs$lang$maxFixedArity = 0;
  include_css.cljs$lang$applyTo = function(arglist__40752) {
    var styles = cljs.core.seq(arglist__40752);
    return include_css__delegate(styles);
  };
  include_css.cljs$core$IFn$_invoke$arity$variadic = include_css__delegate;
  return include_css;
}();
sablono.core.include_js = function include_js(src) {
  return goog.dom.appendChild(goog.dom.getDocument().body, goog.dom.createDom("script", {"src":src}));
};
sablono.core.include_react = function include_react() {
  return sablono.core.include_js.call(null, "http://fb.me/react-0.9.0.js");
};
sablono.core.link_to40753 = function() {
  var link_to40753__delegate = function(url, content) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, url)], null), content], null);
  };
  var link_to40753 = function(url, var_args) {
    var content = null;
    if (arguments.length > 1) {
      content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link_to40753__delegate.call(this, url, content);
  };
  link_to40753.cljs$lang$maxFixedArity = 1;
  link_to40753.cljs$lang$applyTo = function(arglist__40754) {
    var url = cljs.core.first(arglist__40754);
    var content = cljs.core.rest(arglist__40754);
    return link_to40753__delegate(url, content);
  };
  link_to40753.cljs$core$IFn$_invoke$arity$variadic = link_to40753__delegate;
  return link_to40753;
}();
sablono.core.link_to = sablono.core.wrap_attrs.call(null, sablono.core.link_to40753);
sablono.core.mail_to40755 = function() {
  var mail_to40755__delegate = function(e_mail, p__40756) {
    var vec__40758 = p__40756;
    var content = cljs.core.nth.call(null, vec__40758, 0, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "mailto:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(e_mail)], null), function() {
      var or__3553__auto__ = content;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return e_mail;
      }
    }()], null);
  };
  var mail_to40755 = function(e_mail, var_args) {
    var p__40756 = null;
    if (arguments.length > 1) {
      p__40756 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mail_to40755__delegate.call(this, e_mail, p__40756);
  };
  mail_to40755.cljs$lang$maxFixedArity = 1;
  mail_to40755.cljs$lang$applyTo = function(arglist__40759) {
    var e_mail = cljs.core.first(arglist__40759);
    var p__40756 = cljs.core.rest(arglist__40759);
    return mail_to40755__delegate(e_mail, p__40756);
  };
  mail_to40755.cljs$core$IFn$_invoke$arity$variadic = mail_to40755__delegate;
  return mail_to40755;
}();
sablono.core.mail_to = sablono.core.wrap_attrs.call(null, sablono.core.mail_to40755);
sablono.core.unordered_list40760 = function unordered_list40760(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
    var iter__4278__auto__ = function iter__40765(s__40766) {
      return new cljs.core.LazySeq(null, function() {
        var s__40766__$1 = s__40766;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__40766__$1);
          if (temp__4126__auto__) {
            var s__40766__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__40766__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40766__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__40768 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__40767 = 0;
                while (true) {
                  if (i__40767 < size__4277__auto__) {
                    var x = cljs.core._nth.call(null, c__4276__auto__, i__40767);
                    cljs.core.chunk_append.call(null, b__40768, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__40769 = i__40767 + 1;
                    i__40767 = G__40769;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40768), iter__40765.call(null, cljs.core.chunk_rest.call(null, s__40766__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40768), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__40766__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__40765.call(null, cljs.core.rest.call(null, s__40766__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, coll);
  }()], null);
};
sablono.core.unordered_list = sablono.core.wrap_attrs.call(null, sablono.core.unordered_list40760);
sablono.core.ordered_list40770 = function ordered_list40770(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ol", "ol", 932524051), function() {
    var iter__4278__auto__ = function iter__40775(s__40776) {
      return new cljs.core.LazySeq(null, function() {
        var s__40776__$1 = s__40776;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__40776__$1);
          if (temp__4126__auto__) {
            var s__40776__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__40776__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40776__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__40778 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__40777 = 0;
                while (true) {
                  if (i__40777 < size__4277__auto__) {
                    var x = cljs.core._nth.call(null, c__4276__auto__, i__40777);
                    cljs.core.chunk_append.call(null, b__40778, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__40779 = i__40777 + 1;
                    i__40777 = G__40779;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40778), iter__40775.call(null, cljs.core.chunk_rest.call(null, s__40776__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40778), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__40776__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__40775.call(null, cljs.core.rest.call(null, s__40776__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, coll);
  }()], null);
};
sablono.core.ordered_list = sablono.core.wrap_attrs.call(null, sablono.core.ordered_list40770);
sablono.core.image40780 = function() {
  var image40780 = null;
  var image40780__1 = function(src) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src)], null)], null);
  };
  var image40780__2 = function(src, alt) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src), new cljs.core.Keyword(null, "alt", "alt", -3214426), alt], null)], null);
  };
  image40780 = function(src, alt) {
    switch(arguments.length) {
      case 1:
        return image40780__1.call(this, src);
      case 2:
        return image40780__2.call(this, src, alt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  image40780.cljs$core$IFn$_invoke$arity$1 = image40780__1;
  image40780.cljs$core$IFn$_invoke$arity$2 = image40780__2;
  return image40780;
}();
sablono.core.image = sablono.core.wrap_attrs.call(null, sablono.core.image40780);
sablono.core._STAR_group_STAR_ = cljs.core.PersistentVector.EMPTY;
sablono.core.make_name = function make_name(name) {
  return cljs.core.reduce.call(null, function(p1__40781_SHARP_, p2__40782_SHARP_) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__40781_SHARP_) + "[" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__40782_SHARP_) + "]";
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.make_id = function make_id(name) {
  return cljs.core.reduce.call(null, function(p1__40783_SHARP_, p2__40784_SHARP_) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__40783_SHARP_) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__40784_SHARP_);
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.input_field_STAR_ = function input_field_STAR_(type, name, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), 
  value], null)], null);
};
sablono.core.color_field40785 = function() {
  var color_field40785 = null;
  var color_field40785__1 = function(name__9485__auto__) {
    return color_field40785.call(null, name__9485__auto__, null);
  };
  var color_field40785__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "color", "color", -1642760596, null)), name__9485__auto__, value__9486__auto__);
  };
  color_field40785 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return color_field40785__1.call(this, name__9485__auto__);
      case 2:
        return color_field40785__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  color_field40785.cljs$core$IFn$_invoke$arity$1 = color_field40785__1;
  color_field40785.cljs$core$IFn$_invoke$arity$2 = color_field40785__2;
  return color_field40785;
}();
sablono.core.color_field = sablono.core.wrap_attrs.call(null, sablono.core.color_field40785);
sablono.core.date_field40786 = function() {
  var date_field40786 = null;
  var date_field40786__1 = function(name__9485__auto__) {
    return date_field40786.call(null, name__9485__auto__, null);
  };
  var date_field40786__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "date", "date", 177097065, null)), name__9485__auto__, value__9486__auto__);
  };
  date_field40786 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return date_field40786__1.call(this, name__9485__auto__);
      case 2:
        return date_field40786__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_field40786.cljs$core$IFn$_invoke$arity$1 = date_field40786__1;
  date_field40786.cljs$core$IFn$_invoke$arity$2 = date_field40786__2;
  return date_field40786;
}();
sablono.core.date_field = sablono.core.wrap_attrs.call(null, sablono.core.date_field40786);
sablono.core.datetime_field40787 = function() {
  var datetime_field40787 = null;
  var datetime_field40787__1 = function(name__9485__auto__) {
    return datetime_field40787.call(null, name__9485__auto__, null);
  };
  var datetime_field40787__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "datetime", "datetime", 2135207229, null)), name__9485__auto__, value__9486__auto__);
  };
  datetime_field40787 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_field40787__1.call(this, name__9485__auto__);
      case 2:
        return datetime_field40787__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_field40787.cljs$core$IFn$_invoke$arity$1 = datetime_field40787__1;
  datetime_field40787.cljs$core$IFn$_invoke$arity$2 = datetime_field40787__2;
  return datetime_field40787;
}();
sablono.core.datetime_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_field40787);
sablono.core.datetime_local_field40788 = function() {
  var datetime_local_field40788 = null;
  var datetime_local_field40788__1 = function(name__9485__auto__) {
    return datetime_local_field40788.call(null, name__9485__auto__, null);
  };
  var datetime_local_field40788__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "datetime-local", "datetime-local", -507312697, null)), name__9485__auto__, value__9486__auto__);
  };
  datetime_local_field40788 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_local_field40788__1.call(this, name__9485__auto__);
      case 2:
        return datetime_local_field40788__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_local_field40788.cljs$core$IFn$_invoke$arity$1 = datetime_local_field40788__1;
  datetime_local_field40788.cljs$core$IFn$_invoke$arity$2 = datetime_local_field40788__2;
  return datetime_local_field40788;
}();
sablono.core.datetime_local_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_local_field40788);
sablono.core.email_field40789 = function() {
  var email_field40789 = null;
  var email_field40789__1 = function(name__9485__auto__) {
    return email_field40789.call(null, name__9485__auto__, null);
  };
  var email_field40789__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "email", "email", -1238619063, null)), name__9485__auto__, value__9486__auto__);
  };
  email_field40789 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return email_field40789__1.call(this, name__9485__auto__);
      case 2:
        return email_field40789__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  email_field40789.cljs$core$IFn$_invoke$arity$1 = email_field40789__1;
  email_field40789.cljs$core$IFn$_invoke$arity$2 = email_field40789__2;
  return email_field40789;
}();
sablono.core.email_field = sablono.core.wrap_attrs.call(null, sablono.core.email_field40789);
sablono.core.file_field40790 = function() {
  var file_field40790 = null;
  var file_field40790__1 = function(name__9485__auto__) {
    return file_field40790.call(null, name__9485__auto__, null);
  };
  var file_field40790__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "file", "file", 370885649, null)), name__9485__auto__, value__9486__auto__);
  };
  file_field40790 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return file_field40790__1.call(this, name__9485__auto__);
      case 2:
        return file_field40790__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  file_field40790.cljs$core$IFn$_invoke$arity$1 = file_field40790__1;
  file_field40790.cljs$core$IFn$_invoke$arity$2 = file_field40790__2;
  return file_field40790;
}();
sablono.core.file_field = sablono.core.wrap_attrs.call(null, sablono.core.file_field40790);
sablono.core.hidden_field40791 = function() {
  var hidden_field40791 = null;
  var hidden_field40791__1 = function(name__9485__auto__) {
    return hidden_field40791.call(null, name__9485__auto__, null);
  };
  var hidden_field40791__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "hidden", "hidden", 1328025435, null)), name__9485__auto__, value__9486__auto__);
  };
  hidden_field40791 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return hidden_field40791__1.call(this, name__9485__auto__);
      case 2:
        return hidden_field40791__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hidden_field40791.cljs$core$IFn$_invoke$arity$1 = hidden_field40791__1;
  hidden_field40791.cljs$core$IFn$_invoke$arity$2 = hidden_field40791__2;
  return hidden_field40791;
}();
sablono.core.hidden_field = sablono.core.wrap_attrs.call(null, sablono.core.hidden_field40791);
sablono.core.month_field40792 = function() {
  var month_field40792 = null;
  var month_field40792__1 = function(name__9485__auto__) {
    return month_field40792.call(null, name__9485__auto__, null);
  };
  var month_field40792__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "month", "month", -319717006, null)), name__9485__auto__, value__9486__auto__);
  };
  month_field40792 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return month_field40792__1.call(this, name__9485__auto__);
      case 2:
        return month_field40792__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  month_field40792.cljs$core$IFn$_invoke$arity$1 = month_field40792__1;
  month_field40792.cljs$core$IFn$_invoke$arity$2 = month_field40792__2;
  return month_field40792;
}();
sablono.core.month_field = sablono.core.wrap_attrs.call(null, sablono.core.month_field40792);
sablono.core.number_field40793 = function() {
  var number_field40793 = null;
  var number_field40793__1 = function(name__9485__auto__) {
    return number_field40793.call(null, name__9485__auto__, null);
  };
  var number_field40793__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "number", "number", -1084057331, null)), name__9485__auto__, value__9486__auto__);
  };
  number_field40793 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return number_field40793__1.call(this, name__9485__auto__);
      case 2:
        return number_field40793__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  number_field40793.cljs$core$IFn$_invoke$arity$1 = number_field40793__1;
  number_field40793.cljs$core$IFn$_invoke$arity$2 = number_field40793__2;
  return number_field40793;
}();
sablono.core.number_field = sablono.core.wrap_attrs.call(null, sablono.core.number_field40793);
sablono.core.password_field40794 = function() {
  var password_field40794 = null;
  var password_field40794__1 = function(name__9485__auto__) {
    return password_field40794.call(null, name__9485__auto__, null);
  };
  var password_field40794__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "password", "password", 2057553998, null)), name__9485__auto__, value__9486__auto__);
  };
  password_field40794 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return password_field40794__1.call(this, name__9485__auto__);
      case 2:
        return password_field40794__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  password_field40794.cljs$core$IFn$_invoke$arity$1 = password_field40794__1;
  password_field40794.cljs$core$IFn$_invoke$arity$2 = password_field40794__2;
  return password_field40794;
}();
sablono.core.password_field = sablono.core.wrap_attrs.call(null, sablono.core.password_field40794);
sablono.core.range_field40795 = function() {
  var range_field40795 = null;
  var range_field40795__1 = function(name__9485__auto__) {
    return range_field40795.call(null, name__9485__auto__, null);
  };
  var range_field40795__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "range", "range", -1014743483, null)), name__9485__auto__, value__9486__auto__);
  };
  range_field40795 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return range_field40795__1.call(this, name__9485__auto__);
      case 2:
        return range_field40795__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range_field40795.cljs$core$IFn$_invoke$arity$1 = range_field40795__1;
  range_field40795.cljs$core$IFn$_invoke$arity$2 = range_field40795__2;
  return range_field40795;
}();
sablono.core.range_field = sablono.core.wrap_attrs.call(null, sablono.core.range_field40795);
sablono.core.search_field40796 = function() {
  var search_field40796 = null;
  var search_field40796__1 = function(name__9485__auto__) {
    return search_field40796.call(null, name__9485__auto__, null);
  };
  var search_field40796__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "search", "search", -1089495947, null)), name__9485__auto__, value__9486__auto__);
  };
  search_field40796 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return search_field40796__1.call(this, name__9485__auto__);
      case 2:
        return search_field40796__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  search_field40796.cljs$core$IFn$_invoke$arity$1 = search_field40796__1;
  search_field40796.cljs$core$IFn$_invoke$arity$2 = search_field40796__2;
  return search_field40796;
}();
sablono.core.search_field = sablono.core.wrap_attrs.call(null, sablono.core.search_field40796);
sablono.core.tel_field40797 = function() {
  var tel_field40797 = null;
  var tel_field40797__1 = function(name__9485__auto__) {
    return tel_field40797.call(null, name__9485__auto__, null);
  };
  var tel_field40797__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "tel", "tel", 1864669686, null)), name__9485__auto__, value__9486__auto__);
  };
  tel_field40797 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return tel_field40797__1.call(this, name__9485__auto__);
      case 2:
        return tel_field40797__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tel_field40797.cljs$core$IFn$_invoke$arity$1 = tel_field40797__1;
  tel_field40797.cljs$core$IFn$_invoke$arity$2 = tel_field40797__2;
  return tel_field40797;
}();
sablono.core.tel_field = sablono.core.wrap_attrs.call(null, sablono.core.tel_field40797);
sablono.core.text_field40798 = function() {
  var text_field40798 = null;
  var text_field40798__1 = function(name__9485__auto__) {
    return text_field40798.call(null, name__9485__auto__, null);
  };
  var text_field40798__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "text", "text", -150030170, null)), name__9485__auto__, value__9486__auto__);
  };
  text_field40798 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return text_field40798__1.call(this, name__9485__auto__);
      case 2:
        return text_field40798__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_field40798.cljs$core$IFn$_invoke$arity$1 = text_field40798__1;
  text_field40798.cljs$core$IFn$_invoke$arity$2 = text_field40798__2;
  return text_field40798;
}();
sablono.core.text_field = sablono.core.wrap_attrs.call(null, sablono.core.text_field40798);
sablono.core.time_field40799 = function() {
  var time_field40799 = null;
  var time_field40799__1 = function(name__9485__auto__) {
    return time_field40799.call(null, name__9485__auto__, null);
  };
  var time_field40799__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "time", "time", -1268547887, null)), name__9485__auto__, value__9486__auto__);
  };
  time_field40799 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return time_field40799__1.call(this, name__9485__auto__);
      case 2:
        return time_field40799__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  time_field40799.cljs$core$IFn$_invoke$arity$1 = time_field40799__1;
  time_field40799.cljs$core$IFn$_invoke$arity$2 = time_field40799__2;
  return time_field40799;
}();
sablono.core.time_field = sablono.core.wrap_attrs.call(null, sablono.core.time_field40799);
sablono.core.url_field40800 = function() {
  var url_field40800 = null;
  var url_field40800__1 = function(name__9485__auto__) {
    return url_field40800.call(null, name__9485__auto__, null);
  };
  var url_field40800__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "url", "url", 1916828573, null)), name__9485__auto__, value__9486__auto__);
  };
  url_field40800 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return url_field40800__1.call(this, name__9485__auto__);
      case 2:
        return url_field40800__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  url_field40800.cljs$core$IFn$_invoke$arity$1 = url_field40800__1;
  url_field40800.cljs$core$IFn$_invoke$arity$2 = url_field40800__2;
  return url_field40800;
}();
sablono.core.url_field = sablono.core.wrap_attrs.call(null, sablono.core.url_field40800);
sablono.core.week_field40801 = function() {
  var week_field40801 = null;
  var week_field40801__1 = function(name__9485__auto__) {
    return week_field40801.call(null, name__9485__auto__, null);
  };
  var week_field40801__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "week", "week", 314058249, null)), name__9485__auto__, value__9486__auto__);
  };
  week_field40801 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return week_field40801__1.call(this, name__9485__auto__);
      case 2:
        return week_field40801__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  week_field40801.cljs$core$IFn$_invoke$arity$1 = week_field40801__1;
  week_field40801.cljs$core$IFn$_invoke$arity$2 = week_field40801__2;
  return week_field40801;
}();
sablono.core.week_field = sablono.core.wrap_attrs.call(null, sablono.core.week_field40801);
sablono.core.file_upload = sablono.core.file_field;
sablono.core.check_box40802 = function() {
  var check_box40802 = null;
  var check_box40802__1 = function(name) {
    return check_box40802.call(null, name, null);
  };
  var check_box40802__2 = function(name, checked_QMARK_) {
    return check_box40802.call(null, name, checked_QMARK_, "true");
  };
  var check_box40802__3 = function(name, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 
    305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  check_box40802 = function(name, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return check_box40802__1.call(this, name);
      case 2:
        return check_box40802__2.call(this, name, checked_QMARK_);
      case 3:
        return check_box40802__3.call(this, name, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  check_box40802.cljs$core$IFn$_invoke$arity$1 = check_box40802__1;
  check_box40802.cljs$core$IFn$_invoke$arity$2 = check_box40802__2;
  check_box40802.cljs$core$IFn$_invoke$arity$3 = check_box40802__3;
  return check_box40802;
}();
sablono.core.check_box = sablono.core.wrap_attrs.call(null, sablono.core.check_box40802);
sablono.core.radio_button40803 = function() {
  var radio_button40803 = null;
  var radio_button40803__1 = function(group) {
    return radio_button40803.call(null, group, null);
  };
  var radio_button40803__2 = function(group, checked_QMARK_) {
    return radio_button40803.call(null, group, checked_QMARK_, "true");
  };
  var radio_button40803__3 = function(group, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "radio", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, group), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util.as_str.call(null, 
    group)) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util.as_str.call(null, value))), new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  radio_button40803 = function(group, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return radio_button40803__1.call(this, group);
      case 2:
        return radio_button40803__2.call(this, group, checked_QMARK_);
      case 3:
        return radio_button40803__3.call(this, group, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  radio_button40803.cljs$core$IFn$_invoke$arity$1 = radio_button40803__1;
  radio_button40803.cljs$core$IFn$_invoke$arity$2 = radio_button40803__2;
  radio_button40803.cljs$core$IFn$_invoke$arity$3 = radio_button40803__3;
  return radio_button40803;
}();
sablono.core.radio_button = sablono.core.wrap_attrs.call(null, sablono.core.radio_button40803);
sablono.core.select_options40804 = function() {
  var select_options40804 = null;
  var select_options40804__1 = function(coll) {
    return select_options40804.call(null, coll, null);
  };
  var select_options40804__2 = function(coll, selected) {
    var iter__4278__auto__ = function iter__40813(s__40814) {
      return new cljs.core.LazySeq(null, function() {
        var s__40814__$1 = s__40814;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__40814__$1);
          if (temp__4126__auto__) {
            var s__40814__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__40814__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__40814__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__40816 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__40815 = 0;
                while (true) {
                  if (i__40815 < size__4277__auto__) {
                    var x = cljs.core._nth.call(null, c__4276__auto__, i__40815);
                    cljs.core.chunk_append.call(null, b__40816, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                      var vec__40819 = x;
                      var text = cljs.core.nth.call(null, vec__40819, 0, null);
                      var val = cljs.core.nth.call(null, vec__40819, 1, null);
                      var disabled_QMARK_ = cljs.core.nth.call(null, vec__40819, 2, null);
                      var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                      if (cljs.core.sequential_QMARK_.call(null, val)) {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options40804.call(null, val, selected)], null);
                      } else {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                      }
                    }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null));
                    var G__40821 = i__40815 + 1;
                    i__40815 = G__40821;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40816), iter__40813.call(null, cljs.core.chunk_rest.call(null, s__40814__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40816), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__40814__$2);
              return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                var vec__40820 = x;
                var text = cljs.core.nth.call(null, vec__40820, 0, null);
                var val = cljs.core.nth.call(null, vec__40820, 1, null);
                var disabled_QMARK_ = cljs.core.nth.call(null, vec__40820, 2, null);
                var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                if (cljs.core.sequential_QMARK_.call(null, val)) {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options40804.call(null, val, selected)], null);
                } else {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                }
              }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null), iter__40813.call(null, cljs.core.rest.call(null, s__40814__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, coll);
  };
  select_options40804 = function(coll, selected) {
    switch(arguments.length) {
      case 1:
        return select_options40804__1.call(this, coll);
      case 2:
        return select_options40804__2.call(this, coll, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select_options40804.cljs$core$IFn$_invoke$arity$1 = select_options40804__1;
  select_options40804.cljs$core$IFn$_invoke$arity$2 = select_options40804__2;
  return select_options40804;
}();
sablono.core.select_options = sablono.core.wrap_attrs.call(null, sablono.core.select_options40804);
sablono.core.drop_down40822 = function() {
  var drop_down40822 = null;
  var drop_down40822__2 = function(name, options) {
    return drop_down40822.call(null, name, options, null);
  };
  var drop_down40822__3 = function(name, options, selected) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name)], null), sablono.core.select_options.call(null, options, selected)], null);
  };
  drop_down40822 = function(name, options, selected) {
    switch(arguments.length) {
      case 2:
        return drop_down40822__2.call(this, name, options);
      case 3:
        return drop_down40822__3.call(this, name, options, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_down40822.cljs$core$IFn$_invoke$arity$2 = drop_down40822__2;
  drop_down40822.cljs$core$IFn$_invoke$arity$3 = drop_down40822__3;
  return drop_down40822;
}();
sablono.core.drop_down = sablono.core.wrap_attrs.call(null, sablono.core.drop_down40822);
sablono.core.text_area40823 = function() {
  var text_area40823 = null;
  var text_area40823__1 = function(name) {
    return text_area40823.call(null, name, null);
  };
  var text_area40823__2 = function(name, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), value], null)], null);
  };
  text_area40823 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return text_area40823__1.call(this, name);
      case 2:
        return text_area40823__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_area40823.cljs$core$IFn$_invoke$arity$1 = text_area40823__1;
  text_area40823.cljs$core$IFn$_invoke$arity$2 = text_area40823__2;
  return text_area40823;
}();
sablono.core.text_area = sablono.core.wrap_attrs.call(null, sablono.core.text_area40823);
sablono.core.label40824 = function label40824(name, text) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720), sablono.core.make_id.call(null, name)], null), text], null);
};
sablono.core.label = sablono.core.wrap_attrs.call(null, sablono.core.label40824);
sablono.core.submit_button40825 = function submit_button40825(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "submit", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.submit_button = sablono.core.wrap_attrs.call(null, sablono.core.submit_button40825);
sablono.core.reset_button40826 = function reset_button40826(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "reset", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.reset_button = sablono.core.wrap_attrs.call(null, sablono.core.reset_button40826);
sablono.core.form_to40827 = function() {
  var form_to40827__delegate = function(p__40828, body) {
    var vec__40830 = p__40828;
    var method = cljs.core.nth.call(null, vec__40830, 0, null);
    var action = cljs.core.nth.call(null, vec__40830, 1, null);
    var method_str = clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
    var action_uri = sablono.util.to_uri.call(null, action);
    return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "get", "get", 1683182755), null, new cljs.core.Keyword(null, "post", "post", 269697687), null], null), null), method) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "method", "method", 55703592), method_str, new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), "POST", new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null), 
    sablono.core.hidden_field.call(null, "_method", method_str)], null), body));
  };
  var form_to40827 = function(p__40828, var_args) {
    var body = null;
    if (arguments.length > 1) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form_to40827__delegate.call(this, p__40828, body);
  };
  form_to40827.cljs$lang$maxFixedArity = 1;
  form_to40827.cljs$lang$applyTo = function(arglist__40831) {
    var p__40828 = cljs.core.first(arglist__40831);
    var body = cljs.core.rest(arglist__40831);
    return form_to40827__delegate(p__40828, body);
  };
  form_to40827.cljs$core$IFn$_invoke$arity$variadic = form_to40827__delegate;
  return form_to40827;
}();
sablono.core.form_to = sablono.core.wrap_attrs.call(null, sablono.core.form_to40827);
goog.provide("t3tr0s_slides.slide04");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide04.dark_green = "#143";
t3tr0s_slides.slide04.light_green = "#175";
t3tr0s_slides.slide04.dark_purple = "#449";
t3tr0s_slides.slide04.light_purple = "#6ad";
t3tr0s_slides.slide04.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide04.rotate_coord = function rotate_coord(p__45030) {
  var vec__45032 = p__45030;
  var x = cljs.core.nth.call(null, vec__45032, 0, null);
  var y = cljs.core.nth.call(null, vec__45032, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide04.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide04.rotate_coord, piece);
};
t3tr0s_slides.slide04.r0 = (new cljs.core.Keyword(null, "L", "L", -1038307519)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide04.pieces);
t3tr0s_slides.slide04.r1 = t3tr0s_slides.slide04.rotate_piece.call(null, t3tr0s_slides.slide04.r0);
t3tr0s_slides.slide04.r2 = t3tr0s_slides.slide04.rotate_piece.call(null, t3tr0s_slides.slide04.r1);
t3tr0s_slides.slide04.r3 = t3tr0s_slides.slide04.rotate_piece.call(null, t3tr0s_slides.slide04.r2);
t3tr0s_slides.slide04.rotations = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [t3tr0s_slides.slide04.r0, t3tr0s_slides.slide04.r1, t3tr0s_slides.slide04.r2, t3tr0s_slides.slide04.r3], null);
t3tr0s_slides.slide04.positions = new cljs.core.PersistentArrayMap.fromArray([t3tr0s_slides.slide04.r0, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null), t3tr0s_slides.slide04.r1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null), t3tr0s_slides.slide04.r2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 10], null), t3tr0s_slides.slide04.r3, new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 15], null)], true, false);
t3tr0s_slides.slide04.piece_abs_coords = function piece_abs_coords(piece) {
  var vec__45036 = t3tr0s_slides.slide04.positions.call(null, piece);
  var cx = cljs.core.nth.call(null, vec__45036, 0, null);
  var cy = cljs.core.nth.call(null, vec__45036, 1, null);
  return cljs.core.mapv.call(null, function(vec__45036, cx, cy) {
    return function(p__45037) {
      var vec__45038 = p__45037;
      var x = cljs.core.nth.call(null, vec__45038, 0, null);
      var y = cljs.core.nth.call(null, vec__45038, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__45036, cx, cy), piece);
};
t3tr0s_slides.slide04.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "index", "index", -1531685915), null], null));
t3tr0s_slides.slide04.rows = 20;
t3tr0s_slides.slide04.cols = 10;
t3tr0s_slides.slide04.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide04.cols, 0));
t3tr0s_slides.slide04.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide04.rows, t3tr0s_slides.slide04.empty_row));
t3tr0s_slides.slide04.piece_code = function piece_code(piece, pkey, app) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "piece" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(pkey), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-row-534ed" : 
  "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), piece);
  }], null), "   [", function() {
    var iter__4278__auto__ = function iter__45053(s__45054) {
      return new cljs.core.LazySeq(null, function() {
        var s__45054__$1 = s__45054;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__45054__$1);
          if (temp__4126__auto__) {
            var s__45054__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__45054__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__45054__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__45056 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__45055 = 0;
                while (true) {
                  if (i__45055 < size__4277__auto__) {
                    var vec__45061 = cljs.core._nth.call(null, c__4276__auto__, i__45055);
                    var index = cljs.core.nth.call(null, vec__45061, 0, null);
                    var vec__45062 = cljs.core.nth.call(null, vec__45061, 1, null);
                    var x = cljs.core.nth.call(null, vec__45062, 0, null);
                    var y = cljs.core.nth.call(null, vec__45062, 1, null);
                    cljs.core.chunk_append.call(null, b__45056, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "index" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, index, (new cljs.core.Keyword(null, "index", "index", 
                    -1531685915)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(i__45055, vec__45061, index, vec__45062, x, y, c__4276__auto__, size__4277__auto__, b__45056, s__45054__$2, temp__4126__auto__) {
                      return function() {
                        return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
                      };
                    }(i__45055, vec__45061, index, vec__45062, x, y, c__4276__auto__, size__4277__auto__, b__45056, s__45054__$2, temp__4126__auto__)], null), function() {
                      var pad = function(i__45055, vec__45061, index, vec__45062, x, y, c__4276__auto__, size__4277__auto__, b__45056, s__45054__$2, temp__4126__auto__) {
                        return function(p1__45039_SHARP_) {
                          if (p1__45039_SHARP_ < 0) {
                            return p1__45039_SHARP_;
                          } else {
                            return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__45039_SHARP_);
                          }
                        };
                      }(i__45055, vec__45061, index, vec__45062, x, y, c__4276__auto__, size__4277__auto__, b__45056, s__45054__$2, temp__4126__auto__);
                      var fmt = function(i__45055, pad, vec__45061, index, vec__45062, x, y, c__4276__auto__, size__4277__auto__, b__45056, s__45054__$2, temp__4126__auto__) {
                        return function(p1__45040_SHARP_) {
                          return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__45040_SHARP_));
                        };
                      }(i__45055, pad, vec__45061, index, vec__45062, x, y, c__4276__auto__, size__4277__auto__, b__45056, s__45054__$2, temp__4126__auto__);
                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), " [");
                    }()], null));
                    var G__45065 = i__45055 + 1;
                    i__45055 = G__45065;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__45056), iter__45053.call(null, cljs.core.chunk_rest.call(null, s__45054__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__45056), null);
              }
            } else {
              var vec__45063 = cljs.core.first.call(null, s__45054__$2);
              var index = cljs.core.nth.call(null, vec__45063, 0, null);
              var vec__45064 = cljs.core.nth.call(null, vec__45063, 1, null);
              var x = cljs.core.nth.call(null, vec__45064, 0, null);
              var y = cljs.core.nth.call(null, vec__45064, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "index" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, index, (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app)) ? 
              "active-col-d9099" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(vec__45063, index, vec__45064, x, y, s__45054__$2, temp__4126__auto__) {
                return function() {
                  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
                };
              }(vec__45063, index, vec__45064, x, y, s__45054__$2, temp__4126__auto__)], null), function() {
                var pad = function(vec__45063, index, vec__45064, x, y, s__45054__$2, temp__4126__auto__) {
                  return function(p1__45039_SHARP_) {
                    if (p1__45039_SHARP_ < 0) {
                      return p1__45039_SHARP_;
                    } else {
                      return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__45039_SHARP_);
                    }
                  };
                }(vec__45063, index, vec__45064, x, y, s__45054__$2, temp__4126__auto__);
                var fmt = function(pad, vec__45063, index, vec__45064, x, y, s__45054__$2, temp__4126__auto__) {
                  return function(p1__45040_SHARP_) {
                    return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__45040_SHARP_));
                  };
                }(pad, vec__45063, index, vec__45064, x, y, s__45054__$2, temp__4126__auto__);
                return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), " [");
              }()], null), iter__45053.call(null, cljs.core.rest.call(null, s__45054__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, piece));
  }(), " ]"], null);
};
var ufv___45079 = schema.utils.use_fn_validation;
var output_schema45067_45080 = schema.core.Any;
var input_schema45068_45081 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker45069_45082 = schema.core.checker.call(null, input_schema45068_45081);
var output_checker45070_45083 = schema.core.checker.call(null, output_schema45067_45080);
t3tr0s_slides.slide04.code = function(ufv___45079, output_schema45067_45080, input_schema45068_45081, input_checker45069_45082, output_checker45070_45083) {
  return function code(G__45071, G__45072) {
    var validate__5821__auto__ = ufv___45079.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___45084 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__45071, G__45072], null);
      var temp__4126__auto___45085 = input_checker45069_45082.call(null, args__5822__auto___45084);
      if (cljs.core.truth_(temp__4126__auto___45085)) {
        var error__5823__auto___45086 = temp__4126__auto___45085;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___45086)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema45068_45081, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___45084, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45086], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__45071;
      var owner = G__45072;
      while (true) {
        if (typeof t3tr0s_slides.slide04.t45076 !== "undefined") {
        } else {
          t3tr0s_slides.slide04.t45076 = function(G__45072, output_schema45067, owner, validate__5821__auto__, output_checker45070, app, G__45071, ufv__, code, input_schema45068, input_checker45069, meta45077) {
            this.G__45072 = G__45072;
            this.output_schema45067 = output_schema45067;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker45070 = output_checker45070;
            this.app = app;
            this.G__45071 = G__45071;
            this.ufv__ = ufv__;
            this.code = code;
            this.input_schema45068 = input_schema45068;
            this.input_checker45069 = input_checker45069;
            this.meta45077 = meta45077;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide04.t45076.cljs$lang$type = true;
          t3tr0s_slides.slide04.t45076.cljs$lang$ctorStr = "t3tr0s-slides.slide04/t45076";
          t3tr0s_slides.slide04.t45076.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___45079, output_schema45067_45080, input_schema45068_45081, input_checker45069_45082, output_checker45070_45083) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide04/t45076");
            };
          }(validate__5821__auto__, ufv___45079, output_schema45067_45080, input_schema45068_45081, input_checker45069_45082, output_checker45070_45083);
          t3tr0s_slides.slide04.t45076.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide04.t45076.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___45079, output_schema45067_45080, input_schema45068_45081, input_checker45069_45082, output_checker45070_45083) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " rotate-coord [[x y]]\n", "  [ (- y) x ])\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " rotate-piece [piece]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "mapv")), " rotate-coord piece))\n", 
              "\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: mouse over the pieces.")), "\n\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " r0 (:L pieces))\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide04.piece_code.call(null, t3tr0s_slides.slide04.r0, 0, self__.app)), "\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
              "def")), " r1 (rotate-piece r0))\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide04.piece_code.call(null, t3tr0s_slides.slide04.r1, 1, self__.app)), "\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " r2 (rotate-piece r1))\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide04.piece_code.call(null, t3tr0s_slides.slide04.r2, 2, self__.app)), "\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "def")), " r3 (rotate-piece r2))\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide04.piece_code.call(null, t3tr0s_slides.slide04.r3, 3, self__.app)), "\n")));
            };
          }(validate__5821__auto__, ufv___45079, output_schema45067_45080, input_schema45068_45081, input_checker45069_45082, output_checker45070_45083);
          t3tr0s_slides.slide04.t45076.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___45079, output_schema45067_45080, input_schema45068_45081, input_checker45069_45082, output_checker45070_45083) {
            return function(_45078) {
              var self__ = this;
              var _45078__$1 = this;
              return self__.meta45077;
            };
          }(validate__5821__auto__, ufv___45079, output_schema45067_45080, input_schema45068_45081, input_checker45069_45082, output_checker45070_45083);
          t3tr0s_slides.slide04.t45076.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___45079, output_schema45067_45080, input_schema45068_45081, input_checker45069_45082, output_checker45070_45083) {
            return function(_45078, meta45077__$1) {
              var self__ = this;
              var _45078__$1 = this;
              return new t3tr0s_slides.slide04.t45076(self__.G__45072, self__.output_schema45067, self__.owner, self__.validate__5821__auto__, self__.output_checker45070, self__.app, self__.G__45071, self__.ufv__, self__.code, self__.input_schema45068, self__.input_checker45069, meta45077__$1);
            };
          }(validate__5821__auto__, ufv___45079, output_schema45067_45080, input_schema45068_45081, input_checker45069_45082, output_checker45070_45083);
          t3tr0s_slides.slide04.__GT_t45076 = function(validate__5821__auto__, ufv___45079, output_schema45067_45080, input_schema45068_45081, input_checker45069_45082, output_checker45070_45083) {
            return function __GT_t45076(G__45072__$1, output_schema45067__$1, owner__$1, validate__5821__auto____$1, output_checker45070__$1, app__$1, G__45071__$1, ufv____$1, code__$1, input_schema45068__$1, input_checker45069__$1, meta45077) {
              return new t3tr0s_slides.slide04.t45076(G__45072__$1, output_schema45067__$1, owner__$1, validate__5821__auto____$1, output_checker45070__$1, app__$1, G__45071__$1, ufv____$1, code__$1, input_schema45068__$1, input_checker45069__$1, meta45077);
            };
          }(validate__5821__auto__, ufv___45079, output_schema45067_45080, input_schema45068_45081, input_checker45069_45082, output_checker45070_45083);
        }
        return new t3tr0s_slides.slide04.t45076(G__45072, output_schema45067_45080, owner, validate__5821__auto__, output_checker45070_45083, app, G__45071, ufv___45079, code, input_schema45068_45081, input_checker45069_45082, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45087 = output_checker45070_45083.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45087)) {
        var error__5823__auto___45088 = temp__4126__auto___45087;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___45088)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema45067_45080, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45088], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___45079, output_schema45067_45080, input_schema45068_45081, input_checker45069_45082, output_checker45070_45083);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide04.code), schema.core.make_fn_schema.call(null, output_schema45067_45080, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema45068_45081], null)));
t3tr0s_slides.slide04.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide04.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m45066) {
    return om.core.build.call(null, t3tr0s_slides.slide04.code, cursor__9685__auto__, m45066);
  };
  __GT_code = function(cursor__9685__auto__, m45066) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m45066);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide04.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide04.rows);
t3tr0s_slides.slide04.piece_index = function piece_index(x, y) {
  return cljs.core.some.call(null, cljs.core.identity, cljs.core.map.call(null, function(p1__45089_SHARP_) {
    return cljs.core.first.call(null, cljs.core.keep_indexed.call(null, function(i, p__45092) {
      var vec__45093 = p__45092;
      var px = cljs.core.nth.call(null, vec__45093, 0, null);
      var py = cljs.core.nth.call(null, vec__45093, 1, null);
      if (cljs.core._EQ_.call(null, px, x) && cljs.core._EQ_.call(null, py, y)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__45089_SHARP_, i], null);
      } else {
        return null;
      }
    }, t3tr0s_slides.slide04.piece_abs_coords.call(null, p1__45089_SHARP_)));
  }, t3tr0s_slides.slide04.rotations));
};
t3tr0s_slides.slide04.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide04.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide04.cell_size);
  var vec__45095 = t3tr0s_slides.slide04.piece_index.call(null, col, row);
  var piece = cljs.core.nth.call(null, vec__45095, 0, null);
  var index = cljs.core.nth.call(null, vec__45095, 1, null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return index;
    } else {
      return and__3541__auto__;
    }
  }())) {
    om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), piece);
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
  } else {
    return null;
  }
};
t3tr0s_slides.slide04.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__45096, is_piece, is_index, is_center) {
  var vec__45098 = p__45096;
  var x = cljs.core.nth.call(null, vec__45098, 0, null);
  var y = cljs.core.nth.call(null, vec__45098, 1, null);
  ctx.fillStyle = cljs.core.truth_(is_index) ? t3tr0s_slides.slide04.dark_purple : cljs.core.truth_(is_piece) ? t3tr0s_slides.slide04.dark_green : "transparent";
  ctx.strokeStyle = cljs.core.truth_(is_index) ? t3tr0s_slides.slide04.light_purple : cljs.core.truth_(is_piece) ? t3tr0s_slides.slide04.light_green : "#888";
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide04.cell_size * x;
  var ry = t3tr0s_slides.slide04.cell_size * y;
  var rs = t3tr0s_slides.slide04.cell_size;
  var cx = t3tr0s_slides.slide04.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide04.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide04.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide04.draw_piece_BANG_ = function draw_piece_BANG_(app, ctx, piece) {
  var is_piece = cljs.core._EQ_.call(null, piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app));
  var index = (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app);
  var center = t3tr0s_slides.slide04.positions.call(null, piece);
  var seq__45111_45123 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide04.piece_abs_coords.call(null, piece)));
  var chunk__45112_45124 = null;
  var count__45113_45125 = 0;
  var i__45114_45126 = 0;
  while (true) {
    if (i__45114_45126 < count__45113_45125) {
      var vec__45115_45127 = cljs.core._nth.call(null, chunk__45112_45124, i__45114_45126);
      var i_45128 = cljs.core.nth.call(null, vec__45115_45127, 0, null);
      var c_45129 = cljs.core.nth.call(null, vec__45115_45127, 1, null);
      if (cljs.core._EQ_.call(null, i_45128, index)) {
      } else {
        t3tr0s_slides.slide04.draw_cell_BANG_.call(null, ctx, c_45129, is_piece, cljs.core._EQ_.call(null, i_45128, index), cljs.core._EQ_.call(null, c_45129, center));
      }
      var G__45130 = seq__45111_45123;
      var G__45131 = chunk__45112_45124;
      var G__45132 = count__45113_45125;
      var G__45133 = i__45114_45126 + 1;
      seq__45111_45123 = G__45130;
      chunk__45112_45124 = G__45131;
      count__45113_45125 = G__45132;
      i__45114_45126 = G__45133;
      continue;
    } else {
      var temp__4126__auto___45134 = cljs.core.seq.call(null, seq__45111_45123);
      if (temp__4126__auto___45134) {
        var seq__45111_45135__$1 = temp__4126__auto___45134;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__45111_45135__$1)) {
          var c__4309__auto___45136 = cljs.core.chunk_first.call(null, seq__45111_45135__$1);
          var G__45137 = cljs.core.chunk_rest.call(null, seq__45111_45135__$1);
          var G__45138 = c__4309__auto___45136;
          var G__45139 = cljs.core.count.call(null, c__4309__auto___45136);
          var G__45140 = 0;
          seq__45111_45123 = G__45137;
          chunk__45112_45124 = G__45138;
          count__45113_45125 = G__45139;
          i__45114_45126 = G__45140;
          continue;
        } else {
          var vec__45116_45141 = cljs.core.first.call(null, seq__45111_45135__$1);
          var i_45142 = cljs.core.nth.call(null, vec__45116_45141, 0, null);
          var c_45143 = cljs.core.nth.call(null, vec__45116_45141, 1, null);
          if (cljs.core._EQ_.call(null, i_45142, index)) {
          } else {
            t3tr0s_slides.slide04.draw_cell_BANG_.call(null, ctx, c_45143, is_piece, cljs.core._EQ_.call(null, i_45142, index), cljs.core._EQ_.call(null, c_45143, center));
          }
          var G__45144 = cljs.core.next.call(null, seq__45111_45135__$1);
          var G__45145 = null;
          var G__45146 = 0;
          var G__45147 = 0;
          seq__45111_45123 = G__45144;
          chunk__45112_45124 = G__45145;
          count__45113_45125 = G__45146;
          i__45114_45126 = G__45147;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__45117 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide04.piece_abs_coords.call(null, piece)));
  var chunk__45118 = null;
  var count__45119 = 0;
  var i__45120 = 0;
  while (true) {
    if (i__45120 < count__45119) {
      var vec__45121 = cljs.core._nth.call(null, chunk__45118, i__45120);
      var i = cljs.core.nth.call(null, vec__45121, 0, null);
      var c = cljs.core.nth.call(null, vec__45121, 1, null);
      if (cljs.core._EQ_.call(null, i, index)) {
        t3tr0s_slides.slide04.draw_cell_BANG_.call(null, ctx, c, is_piece, cljs.core._EQ_.call(null, i, index), cljs.core._EQ_.call(null, c, center));
      } else {
      }
      var G__45148 = seq__45117;
      var G__45149 = chunk__45118;
      var G__45150 = count__45119;
      var G__45151 = i__45120 + 1;
      seq__45117 = G__45148;
      chunk__45118 = G__45149;
      count__45119 = G__45150;
      i__45120 = G__45151;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__45117);
      if (temp__4126__auto__) {
        var seq__45117__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__45117__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__45117__$1);
          var G__45152 = cljs.core.chunk_rest.call(null, seq__45117__$1);
          var G__45153 = c__4309__auto__;
          var G__45154 = cljs.core.count.call(null, c__4309__auto__);
          var G__45155 = 0;
          seq__45117 = G__45152;
          chunk__45118 = G__45153;
          count__45119 = G__45154;
          i__45120 = G__45155;
          continue;
        } else {
          var vec__45122 = cljs.core.first.call(null, seq__45117__$1);
          var i = cljs.core.nth.call(null, vec__45122, 0, null);
          var c = cljs.core.nth.call(null, vec__45122, 1, null);
          if (cljs.core._EQ_.call(null, i, index)) {
            t3tr0s_slides.slide04.draw_cell_BANG_.call(null, ctx, c, is_piece, cljs.core._EQ_.call(null, i, index), cljs.core._EQ_.call(null, c, center));
          } else {
          }
          var G__45156 = cljs.core.next.call(null, seq__45117__$1);
          var G__45157 = null;
          var G__45158 = 0;
          var G__45159 = 0;
          seq__45117 = G__45156;
          chunk__45118 = G__45157;
          count__45119 = G__45158;
          i__45120 = G__45159;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide04.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide04.cell_size * t3tr0s_slides.slide04.cols, t3tr0s_slides.slide04.cell_size * t3tr0s_slides.slide04.rows);
  var seq__45164 = cljs.core.seq.call(null, t3tr0s_slides.slide04.rotations);
  var chunk__45165 = null;
  var count__45166 = 0;
  var i__45167 = 0;
  while (true) {
    if (i__45167 < count__45166) {
      var p = cljs.core._nth.call(null, chunk__45165, i__45167);
      t3tr0s_slides.slide04.draw_piece_BANG_.call(null, app, ctx, p);
      var G__45168 = seq__45164;
      var G__45169 = chunk__45165;
      var G__45170 = count__45166;
      var G__45171 = i__45167 + 1;
      seq__45164 = G__45168;
      chunk__45165 = G__45169;
      count__45166 = G__45170;
      i__45167 = G__45171;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__45164);
      if (temp__4126__auto__) {
        var seq__45164__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__45164__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__45164__$1);
          var G__45172 = cljs.core.chunk_rest.call(null, seq__45164__$1);
          var G__45173 = c__4309__auto__;
          var G__45174 = cljs.core.count.call(null, c__4309__auto__);
          var G__45175 = 0;
          seq__45164 = G__45172;
          chunk__45165 = G__45173;
          count__45166 = G__45174;
          i__45167 = G__45175;
          continue;
        } else {
          var p = cljs.core.first.call(null, seq__45164__$1);
          t3tr0s_slides.slide04.draw_piece_BANG_.call(null, app, ctx, p);
          var G__45176 = cljs.core.next.call(null, seq__45164__$1);
          var G__45177 = null;
          var G__45178 = 0;
          var G__45179 = 0;
          seq__45164 = G__45176;
          chunk__45165 = G__45177;
          count__45166 = G__45178;
          i__45167 = G__45179;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
var ufv___45194 = schema.utils.use_fn_validation;
var output_schema45182_45195 = schema.core.Any;
var input_schema45183_45196 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker45184_45197 = schema.core.checker.call(null, input_schema45183_45196);
var output_checker45185_45198 = schema.core.checker.call(null, output_schema45182_45195);
t3tr0s_slides.slide04.canvas = function(ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198) {
  return function canvas(G__45186, G__45187) {
    var validate__5821__auto__ = ufv___45194.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___45199 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__45186, G__45187], null);
      var temp__4126__auto___45200 = input_checker45184_45197.call(null, args__5822__auto___45199);
      if (cljs.core.truth_(temp__4126__auto___45200)) {
        var error__5823__auto___45201 = temp__4126__auto___45200;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___45201)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema45183_45196, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___45199, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45201], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__45186;
      var owner = G__45187;
      while (true) {
        if (typeof t3tr0s_slides.slide04.t45191 !== "undefined") {
        } else {
          t3tr0s_slides.slide04.t45191 = function(owner, output_schema45182, input_schema45183, validate__5821__auto__, input_checker45184, G__45187, G__45186, canvas, app, ufv__, output_checker45185, meta45192) {
            this.owner = owner;
            this.output_schema45182 = output_schema45182;
            this.input_schema45183 = input_schema45183;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker45184 = input_checker45184;
            this.G__45187 = G__45187;
            this.G__45186 = G__45186;
            this.canvas = canvas;
            this.app = app;
            this.ufv__ = ufv__;
            this.output_checker45185 = output_checker45185;
            this.meta45192 = meta45192;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide04.t45191.cljs$lang$type = true;
          t3tr0s_slides.slide04.t45191.cljs$lang$ctorStr = "t3tr0s-slides.slide04/t45191";
          t3tr0s_slides.slide04.t45191.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide04/t45191");
            };
          }(validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198);
          t3tr0s_slides.slide04.t45191.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide04.t45191.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseMove":function(___$1, validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198) {
                return function(p1__45180_SHARP_) {
                  return t3tr0s_slides.slide04.canvas_mouse.call(null, self__.app, self__.owner, p1__45180_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198), "onMouseLeave":function(___$1, validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198) {
                return function() {
                  om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "row", "row", -570139521), null);
                  return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "col", "col", -1959363084), null);
                };
              }(___$1, validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198)}));
            };
          }(validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198);
          t3tr0s_slides.slide04.t45191.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide04.t45191.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide04.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198);
          t3tr0s_slides.slide04.t45191.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide04.t45191.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide04.cols * t3tr0s_slides.slide04.cell_size;
              canvas__$2.height = t3tr0s_slides.slide04.rows * t3tr0s_slides.slide04.cell_size;
              return t3tr0s_slides.slide04.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198);
          t3tr0s_slides.slide04.t45191.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198) {
            return function(_45193) {
              var self__ = this;
              var _45193__$1 = this;
              return self__.meta45192;
            };
          }(validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198);
          t3tr0s_slides.slide04.t45191.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198) {
            return function(_45193, meta45192__$1) {
              var self__ = this;
              var _45193__$1 = this;
              return new t3tr0s_slides.slide04.t45191(self__.owner, self__.output_schema45182, self__.input_schema45183, self__.validate__5821__auto__, self__.input_checker45184, self__.G__45187, self__.G__45186, self__.canvas, self__.app, self__.ufv__, self__.output_checker45185, meta45192__$1);
            };
          }(validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198);
          t3tr0s_slides.slide04.__GT_t45191 = function(validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198) {
            return function __GT_t45191(owner__$1, output_schema45182__$1, input_schema45183__$1, validate__5821__auto____$1, input_checker45184__$1, G__45187__$1, G__45186__$1, canvas__$1, app__$1, ufv____$1, output_checker45185__$1, meta45192) {
              return new t3tr0s_slides.slide04.t45191(owner__$1, output_schema45182__$1, input_schema45183__$1, validate__5821__auto____$1, input_checker45184__$1, G__45187__$1, G__45186__$1, canvas__$1, app__$1, ufv____$1, output_checker45185__$1, meta45192);
            };
          }(validate__5821__auto__, ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198);
        }
        return new t3tr0s_slides.slide04.t45191(owner, output_schema45182_45195, input_schema45183_45196, validate__5821__auto__, input_checker45184_45197, G__45187, G__45186, canvas, app, ufv___45194, output_checker45185_45198, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45202 = output_checker45185_45198.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45202)) {
        var error__5823__auto___45203 = temp__4126__auto___45202;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___45203)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema45182_45195, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45203], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___45194, output_schema45182_45195, input_schema45183_45196, input_checker45184_45197, output_checker45185_45198);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide04.canvas), schema.core.make_fn_schema.call(null, output_schema45182_45195, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema45183_45196], null)));
t3tr0s_slides.slide04.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide04.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m45181) {
    return om.core.build.call(null, t3tr0s_slides.slide04.canvas, cursor__9685__auto__, m45181);
  };
  __GT_canvas = function(cursor__9685__auto__, m45181) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m45181);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___45221 = schema.utils.use_fn_validation;
var output_schema45205_45222 = schema.core.Any;
var input_schema45206_45223 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker45207_45224 = schema.core.checker.call(null, input_schema45206_45223);
var output_checker45208_45225 = schema.core.checker.call(null, output_schema45205_45222);
t3tr0s_slides.slide04.slide = function(ufv___45221, output_schema45205_45222, input_schema45206_45223, input_checker45207_45224, output_checker45208_45225) {
  return function slide(G__45209, G__45210) {
    var validate__5821__auto__ = ufv___45221.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___45226 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__45209, G__45210], null);
      var temp__4126__auto___45227 = input_checker45207_45224.call(null, args__5822__auto___45226);
      if (cljs.core.truth_(temp__4126__auto___45227)) {
        var error__5823__auto___45228 = temp__4126__auto___45227;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___45228)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema45206_45223, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___45226, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45228], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__45209;
      var owner = G__45210;
      while (true) {
        if (typeof t3tr0s_slides.slide04.t45216 !== "undefined") {
        } else {
          t3tr0s_slides.slide04.t45216 = function(G__45210, owner, output_schema45205, validate__5821__auto__, input_checker45207, output_checker45208, input_schema45206, G__45209, slide, app, ufv__, meta45217) {
            this.G__45210 = G__45210;
            this.owner = owner;
            this.output_schema45205 = output_schema45205;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker45207 = input_checker45207;
            this.output_checker45208 = output_checker45208;
            this.input_schema45206 = input_schema45206;
            this.G__45209 = G__45209;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta45217 = meta45217;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide04.t45216.cljs$lang$type = true;
          t3tr0s_slides.slide04.t45216.cljs$lang$ctorStr = "t3tr0s-slides.slide04/t45216";
          t3tr0s_slides.slide04.t45216.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___45221, output_schema45205_45222, input_schema45206_45223, input_checker45207_45224, output_checker45208_45225) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide04/t45216");
            };
          }(validate__5821__auto__, ufv___45221, output_schema45205_45222, input_schema45206_45223, input_checker45207_45224, output_checker45208_45225);
          t3tr0s_slides.slide04.t45216.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide04.t45216.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___45221, output_schema45205_45222, input_schema45206_45223, input_checker45207_45224, output_checker45208_45225) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "4. Rotate Piece."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide04.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide04.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___45221, output_schema45205_45222, input_schema45206_45223, input_checker45207_45224, output_checker45208_45225);
          t3tr0s_slides.slide04.t45216.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___45221, output_schema45205_45222, input_schema45206_45223, input_checker45207_45224, output_checker45208_45225) {
            return function(_45218) {
              var self__ = this;
              var _45218__$1 = this;
              return self__.meta45217;
            };
          }(validate__5821__auto__, ufv___45221, output_schema45205_45222, input_schema45206_45223, input_checker45207_45224, output_checker45208_45225);
          t3tr0s_slides.slide04.t45216.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___45221, output_schema45205_45222, input_schema45206_45223, input_checker45207_45224, output_checker45208_45225) {
            return function(_45218, meta45217__$1) {
              var self__ = this;
              var _45218__$1 = this;
              return new t3tr0s_slides.slide04.t45216(self__.G__45210, self__.owner, self__.output_schema45205, self__.validate__5821__auto__, self__.input_checker45207, self__.output_checker45208, self__.input_schema45206, self__.G__45209, self__.slide, self__.app, self__.ufv__, meta45217__$1);
            };
          }(validate__5821__auto__, ufv___45221, output_schema45205_45222, input_schema45206_45223, input_checker45207_45224, output_checker45208_45225);
          t3tr0s_slides.slide04.__GT_t45216 = function(validate__5821__auto__, ufv___45221, output_schema45205_45222, input_schema45206_45223, input_checker45207_45224, output_checker45208_45225) {
            return function __GT_t45216(G__45210__$1, owner__$1, output_schema45205__$1, validate__5821__auto____$1, input_checker45207__$1, output_checker45208__$1, input_schema45206__$1, G__45209__$1, slide__$1, app__$1, ufv____$1, meta45217) {
              return new t3tr0s_slides.slide04.t45216(G__45210__$1, owner__$1, output_schema45205__$1, validate__5821__auto____$1, input_checker45207__$1, output_checker45208__$1, input_schema45206__$1, G__45209__$1, slide__$1, app__$1, ufv____$1, meta45217);
            };
          }(validate__5821__auto__, ufv___45221, output_schema45205_45222, input_schema45206_45223, input_checker45207_45224, output_checker45208_45225);
        }
        return new t3tr0s_slides.slide04.t45216(G__45210, owner, output_schema45205_45222, validate__5821__auto__, input_checker45207_45224, output_checker45208_45225, input_schema45206_45223, G__45209, slide, app, ufv___45221, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45229 = output_checker45208_45225.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45229)) {
        var error__5823__auto___45230 = temp__4126__auto___45229;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___45230)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema45205_45222, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45230], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___45221, output_schema45205_45222, input_schema45206_45223, input_checker45207_45224, output_checker45208_45225);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide04.slide), schema.core.make_fn_schema.call(null, output_schema45205_45222, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema45206_45223], null)));
t3tr0s_slides.slide04.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide04.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m45204) {
    return om.core.build.call(null, t3tr0s_slides.slide04.slide, cursor__9685__auto__, m45204);
  };
  __GT_slide = function(cursor__9685__auto__, m45204) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m45204);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide04.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide04.slide, t3tr0s_slides.slide04.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide04.resume = function resume() {
  return null;
};
t3tr0s_slides.slide04.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide11");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide11.dark_green = "#143";
t3tr0s_slides.slide11.light_green = "#175";
t3tr0s_slides.slide11.dark_purple = "#449";
t3tr0s_slides.slide11.light_purple = "#6ad";
t3tr0s_slides.slide11.dark_red = "#944";
t3tr0s_slides.slide11.light_red = "#f8c";
t3tr0s_slides.slide11.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide11.rotate_coord = function rotate_coord(p__46550) {
  var vec__46552 = p__46550;
  var x = cljs.core.nth.call(null, vec__46552, 0, null);
  var y = cljs.core.nth.call(null, vec__46552, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide11.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide11.rotate_coord, piece);
};
t3tr0s_slides.slide11.rows = 20;
t3tr0s_slides.slide11.cols = 10;
t3tr0s_slides.slide11.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide11.cols, 0));
t3tr0s_slides.slide11.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide11.rows, t3tr0s_slides.slide11.empty_row));
t3tr0s_slides.slide11.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide11.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null);
t3tr0s_slides.slide11.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide11.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide11.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide11.initial_pos], null));
t3tr0s_slides.slide11.write_piece = function write_piece(board, coords, p__46553, value) {
  while (true) {
    var vec__46557 = p__46553;
    var cx = cljs.core.nth.call(null, vec__46557, 0, null);
    var cy = cljs.core.nth.call(null, vec__46557, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__46558 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__46558, 0, null);
      var y = cljs.core.nth.call(null, vec__46558, 1, null);
      var G__46560 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), value);
        } catch (e46559) {
          if (e46559 instanceof Error) {
            var _ = e46559;
            return board;
          } else {
            throw e46559;
          }
        }
      }();
      var G__46561 = cljs.core.rest.call(null, coords);
      var G__46562 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      var G__46563 = value;
      board = G__46560;
      coords = G__46561;
      p__46553 = G__46562;
      value = G__46563;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide11.create_drawable_board = function create_drawable_board(board, piece, p__46564) {
  var vec__46566 = p__46564;
  var x = cljs.core.nth.call(null, vec__46566, 0, null);
  var y = cljs.core.nth.call(null, vec__46566, 1, null);
  var gy = t3tr0s_slides.slide11.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  var board1 = t3tr0s_slides.slide11.write_piece.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, gy], null), "G");
  var board2 = t3tr0s_slides.slide11.write_piece.call(null, board1, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null), "P");
  return board2;
};
t3tr0s_slides.slide11.app_drawable_board_BANG_ = function app_drawable_board_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  return t3tr0s_slides.slide11.create_drawable_board.call(null, board, piece, pos);
};
t3tr0s_slides.slide11.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__46568 = cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state);
  var map__46568__$1 = cljs.core.seq_QMARK_.call(null, map__46568) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46568) : map__46568;
  var position = cljs.core.get.call(null, map__46568__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__46568__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide11.write_piece, piece, position, 1);
};
t3tr0s_slides.slide11.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__46569) {
  var vec__46573 = p__46569;
  var cx = cljs.core.nth.call(null, vec__46573, 0, null);
  var cy = cljs.core.nth.call(null, vec__46573, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__46573, cx, cy) {
    return function(p__46574) {
      var vec__46575 = p__46574;
      var x = cljs.core.nth.call(null, vec__46575, 0, null);
      var y = cljs.core.nth.call(null, vec__46575, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__46573, cx, cy), piece);
};
t3tr0s_slides.slide11.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide11.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide11.app_state))));
};
t3tr0s_slides.slide11.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var vec__46577 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var x = cljs.core.nth.call(null, vec__46577, 0, null);
  var y = cljs.core.nth.call(null, vec__46577, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide11.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide11.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var new_piece = t3tr0s_slides.slide11.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide11.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide11.get_drop_pos = function get_drop_pos(board, piece, p__46578) {
  var vec__46580 = p__46578;
  var x = cljs.core.nth.call(null, vec__46580, 0, null);
  var y = cljs.core.nth.call(null, vec__46580, 1, null);
  var collide_QMARK_ = function(vec__46580, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide11.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__46580, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide11.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var vec__46582 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var x = cljs.core.nth.call(null, vec__46582, 0, null);
  var y = cljs.core.nth.call(null, vec__46582, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var ny = t3tr0s_slides.slide11.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  t3tr0s_slides.slide11.lock_piece_BANG_.call(null);
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide11.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide11.pieces)));
};
t3tr0s_slides.slide11.data_row = function data_row(board, row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__46587(s__46588) {
      return new cljs.core.LazySeq(null, function() {
        var s__46588__$1 = s__46588;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__46588__$1);
          if (temp__4126__auto__) {
            var s__46588__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__46588__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__46588__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__46590 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__46589 = 0;
                while (true) {
                  if (i__46589 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__46589);
                    cljs.core.chunk_append.call(null, b__46590, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null)))), " "));
                    var G__46591 = i__46589 + 1;
                    i__46589 = G__46591;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__46590), iter__46587.call(null, cljs.core.chunk_rest.call(null, s__46588__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__46590), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__46588__$2);
              return cljs.core.cons.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null)))), " "), iter__46587.call(null, cljs.core.rest.call(null, s__46588__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.cols));
  }(), " ]"], null);
};
var ufv___46671 = schema.utils.use_fn_validation;
var output_schema46593_46672 = schema.core.Any;
var input_schema46594_46673 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker46595_46674 = schema.core.checker.call(null, input_schema46594_46673);
var output_checker46596_46675 = schema.core.checker.call(null, output_schema46593_46672);
t3tr0s_slides.slide11.code = function(ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675) {
  return function code(G__46597, G__46598) {
    var validate__5821__auto__ = ufv___46671.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___46676 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__46597, G__46598], null);
      var temp__4126__auto___46677 = input_checker46595_46674.call(null, args__5822__auto___46676);
      if (cljs.core.truth_(temp__4126__auto___46677)) {
        var error__5823__auto___46678 = temp__4126__auto___46677;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___46678)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema46594_46673, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___46676, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___46678], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__46597;
      var owner = G__46598;
      while (true) {
        if (typeof t3tr0s_slides.slide11.t46635 !== "undefined") {
        } else {
          t3tr0s_slides.slide11.t46635 = function(G__46597, owner, output_schema46593, output_checker46596, input_checker46595, input_schema46594, validate__5821__auto__, app, G__46598, ufv__, code, meta46636) {
            this.G__46597 = G__46597;
            this.owner = owner;
            this.output_schema46593 = output_schema46593;
            this.output_checker46596 = output_checker46596;
            this.input_checker46595 = input_checker46595;
            this.input_schema46594 = input_schema46594;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.app = app;
            this.G__46598 = G__46598;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta46636 = meta46636;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide11.t46635.cljs$lang$type = true;
          t3tr0s_slides.slide11.t46635.cljs$lang$ctorStr = "t3tr0s-slides.slide11/t46635";
          t3tr0s_slides.slide11.t46635.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide11/t46635");
            };
          }(validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675);
          t3tr0s_slides.slide11.t46635.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide11.t46635.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs46638 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: press space to hard-drop.");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs46638) ? sablono.interpreter.attributes.call(null, attrs46638) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46638) ? new cljs.core.PersistentVector(null, 24, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " create-drawable-board\n", "  [board piece [x y]]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [gy    (get-drop-pos board piece [x y])\n", "        board1 (write-piece board piece [x gy] ", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.lit.call(null, '"G"')), ")\n", "        board2 (write-piece board piece [x y ] ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, '"P"')), ")]\n", "    board2))\n", "\n", "\x3e (create-drawable-board ...)\n", "\n", sablono.interpreter.interpret.call(null, function() {
                  var board = t3tr0s_slides.slide11.app_drawable_board_BANG_.call(null);
                  var iter__4278__auto__ = function(board, attrs46638, ___$1, validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675) {
                    return function iter__46639(s__46640) {
                      return new cljs.core.LazySeq(null, function(board, attrs46638, ___$1, validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675) {
                        return function() {
                          var s__46640__$1 = s__46640;
                          while (true) {
                            var temp__4126__auto__ = cljs.core.seq.call(null, s__46640__$1);
                            if (temp__4126__auto__) {
                              var s__46640__$2 = temp__4126__auto__;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__46640__$2)) {
                                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__46640__$2);
                                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                var b__46642 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                if (function() {
                                  var i__46641 = 0;
                                  while (true) {
                                    if (i__46641 < size__4277__auto__) {
                                      var row = cljs.core._nth.call(null, c__4276__auto__, i__46641);
                                      cljs.core.chunk_append.call(null, b__46642, function() {
                                        var pred__46649 = cljs.core._EQ_;
                                        var expr__46650 = row;
                                        if (cljs.core.truth_(pred__46649.call(null, 0, expr__46650))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "  [");
                                        } else {
                                          if (cljs.core.truth_(pred__46649.call(null, t3tr0s_slides.slide11.rows - 1, expr__46650))) {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                          } else {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                          }
                                        }
                                      }());
                                      var G__46679 = i__46641 + 1;
                                      i__46641 = G__46679;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__46642), iter__46639.call(null, cljs.core.chunk_rest.call(null, s__46640__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__46642), null);
                                }
                              } else {
                                var row = cljs.core.first.call(null, s__46640__$2);
                                return cljs.core.cons.call(null, function() {
                                  var pred__46652 = cljs.core._EQ_;
                                  var expr__46653 = row;
                                  if (cljs.core.truth_(pred__46652.call(null, 0, expr__46653))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "  [");
                                  } else {
                                    if (cljs.core.truth_(pred__46652.call(null, t3tr0s_slides.slide11.rows - 1, expr__46653))) {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                    } else {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                    }
                                  }
                                }(), iter__46639.call(null, cljs.core.rest.call(null, s__46640__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(board, attrs46638, ___$1, validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675), null, null);
                    };
                  }(board, attrs46638, ___$1, validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675);
                  return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.rows));
                }())], null) : new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46638), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "defn")), " create-drawable-board\n", "  [board piece [x y]]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [gy    (get-drop-pos board piece [x y])\n", "        board1 (write-piece board piece [x gy] ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, '"G"')), ")\n", "        board2 (write-piece board piece [x y ] ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, 
                '"P"')), ")]\n", "    board2))\n", "\n", "\x3e (create-drawable-board ...)\n", "\n", sablono.interpreter.interpret.call(null, function() {
                  var board = t3tr0s_slides.slide11.app_drawable_board_BANG_.call(null);
                  var iter__4278__auto__ = function(board, attrs46638, ___$1, validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675) {
                    return function iter__46655(s__46656) {
                      return new cljs.core.LazySeq(null, function(board, attrs46638, ___$1, validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675) {
                        return function() {
                          var s__46656__$1 = s__46656;
                          while (true) {
                            var temp__4126__auto__ = cljs.core.seq.call(null, s__46656__$1);
                            if (temp__4126__auto__) {
                              var s__46656__$2 = temp__4126__auto__;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__46656__$2)) {
                                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__46656__$2);
                                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                var b__46658 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                if (function() {
                                  var i__46657 = 0;
                                  while (true) {
                                    if (i__46657 < size__4277__auto__) {
                                      var row = cljs.core._nth.call(null, c__4276__auto__, i__46657);
                                      cljs.core.chunk_append.call(null, b__46658, function() {
                                        var pred__46665 = cljs.core._EQ_;
                                        var expr__46666 = row;
                                        if (cljs.core.truth_(pred__46665.call(null, 0, expr__46666))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "  [");
                                        } else {
                                          if (cljs.core.truth_(pred__46665.call(null, t3tr0s_slides.slide11.rows - 1, expr__46666))) {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                          } else {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                          }
                                        }
                                      }());
                                      var G__46680 = i__46657 + 1;
                                      i__46657 = G__46680;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__46658), iter__46655.call(null, cljs.core.chunk_rest.call(null, s__46656__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__46658), null);
                                }
                              } else {
                                var row = cljs.core.first.call(null, s__46656__$2);
                                return cljs.core.cons.call(null, function() {
                                  var pred__46668 = cljs.core._EQ_;
                                  var expr__46669 = row;
                                  if (cljs.core.truth_(pred__46668.call(null, 0, expr__46669))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "  [");
                                  } else {
                                    if (cljs.core.truth_(pred__46668.call(null, t3tr0s_slides.slide11.rows - 1, expr__46669))) {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                    } else {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                    }
                                  }
                                }(), iter__46655.call(null, cljs.core.rest.call(null, s__46656__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(board, attrs46638, ___$1, validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675), null, null);
                    };
                  }(board, attrs46638, ___$1, validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675);
                  return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.rows));
                }())], null)));
              }()));
            };
          }(validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675);
          t3tr0s_slides.slide11.t46635.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675) {
            return function(_46637) {
              var self__ = this;
              var _46637__$1 = this;
              return self__.meta46636;
            };
          }(validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675);
          t3tr0s_slides.slide11.t46635.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675) {
            return function(_46637, meta46636__$1) {
              var self__ = this;
              var _46637__$1 = this;
              return new t3tr0s_slides.slide11.t46635(self__.G__46597, self__.owner, self__.output_schema46593, self__.output_checker46596, self__.input_checker46595, self__.input_schema46594, self__.validate__5821__auto__, self__.app, self__.G__46598, self__.ufv__, self__.code, meta46636__$1);
            };
          }(validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675);
          t3tr0s_slides.slide11.__GT_t46635 = function(validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675) {
            return function __GT_t46635(G__46597__$1, owner__$1, output_schema46593__$1, output_checker46596__$1, input_checker46595__$1, input_schema46594__$1, validate__5821__auto____$1, app__$1, G__46598__$1, ufv____$1, code__$1, meta46636) {
              return new t3tr0s_slides.slide11.t46635(G__46597__$1, owner__$1, output_schema46593__$1, output_checker46596__$1, input_checker46595__$1, input_schema46594__$1, validate__5821__auto____$1, app__$1, G__46598__$1, ufv____$1, code__$1, meta46636);
            };
          }(validate__5821__auto__, ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675);
        }
        return new t3tr0s_slides.slide11.t46635(G__46597, owner, output_schema46593_46672, output_checker46596_46675, input_checker46595_46674, input_schema46594_46673, validate__5821__auto__, app, G__46598, ufv___46671, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___46681 = output_checker46596_46675.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___46681)) {
        var error__5823__auto___46682 = temp__4126__auto___46681;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___46682)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema46593_46672, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___46682], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___46671, output_schema46593_46672, input_schema46594_46673, input_checker46595_46674, output_checker46596_46675);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide11.code), schema.core.make_fn_schema.call(null, output_schema46593_46672, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema46594_46673], null)));
t3tr0s_slides.slide11.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide11.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m46592) {
    return om.core.build.call(null, t3tr0s_slides.slide11.code, cursor__9685__auto__, m46592);
  };
  __GT_code = function(cursor__9685__auto__, m46592) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m46592);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide11.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide11.rows);
t3tr0s_slides.slide11.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__46683, is_center) {
  var vec__46685 = p__46683;
  var x = cljs.core.nth.call(null, vec__46685, 0, null);
  var y = cljs.core.nth.call(null, vec__46685, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide11.cell_size * x;
  var ry = t3tr0s_slides.slide11.cell_size * y;
  var rs = t3tr0s_slides.slide11.cell_size;
  var cx = t3tr0s_slides.slide11.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide11.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide11.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide11.piece_abs_coords = function piece_abs_coords(piece, p__46686) {
  var vec__46690 = p__46686;
  var cx = cljs.core.nth.call(null, vec__46690, 0, null);
  var cy = cljs.core.nth.call(null, vec__46690, 1, null);
  return cljs.core.mapv.call(null, function(vec__46690, cx, cy) {
    return function(p__46691) {
      var vec__46692 = p__46691;
      var x = cljs.core.nth.call(null, vec__46692, 0, null);
      var y = cljs.core.nth.call(null, vec__46692, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__46690, cx, cy), piece);
};
t3tr0s_slides.slide11.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__46699 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide11.piece_abs_coords.call(null, piece, pos)));
  var chunk__46700 = null;
  var count__46701 = 0;
  var i__46702 = 0;
  while (true) {
    if (i__46702 < count__46701) {
      var vec__46703 = cljs.core._nth.call(null, chunk__46700, i__46702);
      var i = cljs.core.nth.call(null, vec__46703, 0, null);
      var c = cljs.core.nth.call(null, vec__46703, 1, null);
      t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__46705 = seq__46699;
      var G__46706 = chunk__46700;
      var G__46707 = count__46701;
      var G__46708 = i__46702 + 1;
      seq__46699 = G__46705;
      chunk__46700 = G__46706;
      count__46701 = G__46707;
      i__46702 = G__46708;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__46699);
      if (temp__4126__auto__) {
        var seq__46699__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__46699__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__46699__$1);
          var G__46709 = cljs.core.chunk_rest.call(null, seq__46699__$1);
          var G__46710 = c__4309__auto__;
          var G__46711 = cljs.core.count.call(null, c__4309__auto__);
          var G__46712 = 0;
          seq__46699 = G__46709;
          chunk__46700 = G__46710;
          count__46701 = G__46711;
          i__46702 = G__46712;
          continue;
        } else {
          var vec__46704 = cljs.core.first.call(null, seq__46699__$1);
          var i = cljs.core.nth.call(null, vec__46704, 0, null);
          var c = cljs.core.nth.call(null, vec__46704, 1, null);
          t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__46713 = cljs.core.next.call(null, seq__46699__$1);
          var G__46714 = null;
          var G__46715 = 0;
          var G__46716 = 0;
          seq__46699 = G__46713;
          chunk__46700 = G__46714;
          count__46701 = G__46715;
          i__46702 = G__46716;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide11.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__46729 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.rows));
  var chunk__46734 = null;
  var count__46735 = 0;
  var i__46736 = 0;
  while (true) {
    if (i__46736 < count__46735) {
      var y = cljs.core._nth.call(null, chunk__46734, i__46736);
      var seq__46737_46741 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.cols));
      var chunk__46738_46742 = null;
      var count__46739_46743 = 0;
      var i__46740_46744 = 0;
      while (true) {
        if (i__46740_46744 < count__46739_46743) {
          var x_46745 = cljs.core._nth.call(null, chunk__46738_46742, i__46740_46744);
          var v_46746 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46745], null));
          if (v_46746 === 0) {
          } else {
            t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46745, y], null), false);
          }
          var G__46747 = seq__46737_46741;
          var G__46748 = chunk__46738_46742;
          var G__46749 = count__46739_46743;
          var G__46750 = i__46740_46744 + 1;
          seq__46737_46741 = G__46747;
          chunk__46738_46742 = G__46748;
          count__46739_46743 = G__46749;
          i__46740_46744 = G__46750;
          continue;
        } else {
          var temp__4126__auto___46751 = cljs.core.seq.call(null, seq__46737_46741);
          if (temp__4126__auto___46751) {
            var seq__46737_46752__$1 = temp__4126__auto___46751;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__46737_46752__$1)) {
              var c__4309__auto___46753 = cljs.core.chunk_first.call(null, seq__46737_46752__$1);
              var G__46754 = cljs.core.chunk_rest.call(null, seq__46737_46752__$1);
              var G__46755 = c__4309__auto___46753;
              var G__46756 = cljs.core.count.call(null, c__4309__auto___46753);
              var G__46757 = 0;
              seq__46737_46741 = G__46754;
              chunk__46738_46742 = G__46755;
              count__46739_46743 = G__46756;
              i__46740_46744 = G__46757;
              continue;
            } else {
              var x_46758 = cljs.core.first.call(null, seq__46737_46752__$1);
              var v_46759 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46758], null));
              if (v_46759 === 0) {
              } else {
                t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46758, y], null), false);
              }
              var G__46760 = cljs.core.next.call(null, seq__46737_46752__$1);
              var G__46761 = null;
              var G__46762 = 0;
              var G__46763 = 0;
              seq__46737_46741 = G__46760;
              chunk__46738_46742 = G__46761;
              count__46739_46743 = G__46762;
              i__46740_46744 = G__46763;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__46764 = seq__46729;
      var G__46765 = chunk__46734;
      var G__46766 = count__46735;
      var G__46767 = i__46736 + 1;
      seq__46729 = G__46764;
      chunk__46734 = G__46765;
      count__46735 = G__46766;
      i__46736 = G__46767;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__46729);
      if (temp__4126__auto__) {
        var seq__46729__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__46729__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__46729__$1);
          var G__46768 = cljs.core.chunk_rest.call(null, seq__46729__$1);
          var G__46769 = c__4309__auto__;
          var G__46770 = cljs.core.count.call(null, c__4309__auto__);
          var G__46771 = 0;
          seq__46729 = G__46768;
          chunk__46734 = G__46769;
          count__46735 = G__46770;
          i__46736 = G__46771;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__46729__$1);
          var seq__46730_46772 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.cols));
          var chunk__46731_46773 = null;
          var count__46732_46774 = 0;
          var i__46733_46775 = 0;
          while (true) {
            if (i__46733_46775 < count__46732_46774) {
              var x_46776 = cljs.core._nth.call(null, chunk__46731_46773, i__46733_46775);
              var v_46777 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46776], null));
              if (v_46777 === 0) {
              } else {
                t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46776, y], null), false);
              }
              var G__46778 = seq__46730_46772;
              var G__46779 = chunk__46731_46773;
              var G__46780 = count__46732_46774;
              var G__46781 = i__46733_46775 + 1;
              seq__46730_46772 = G__46778;
              chunk__46731_46773 = G__46779;
              count__46732_46774 = G__46780;
              i__46733_46775 = G__46781;
              continue;
            } else {
              var temp__4126__auto___46782__$1 = cljs.core.seq.call(null, seq__46730_46772);
              if (temp__4126__auto___46782__$1) {
                var seq__46730_46783__$1 = temp__4126__auto___46782__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__46730_46783__$1)) {
                  var c__4309__auto___46784 = cljs.core.chunk_first.call(null, seq__46730_46783__$1);
                  var G__46785 = cljs.core.chunk_rest.call(null, seq__46730_46783__$1);
                  var G__46786 = c__4309__auto___46784;
                  var G__46787 = cljs.core.count.call(null, c__4309__auto___46784);
                  var G__46788 = 0;
                  seq__46730_46772 = G__46785;
                  chunk__46731_46773 = G__46786;
                  count__46732_46774 = G__46787;
                  i__46733_46775 = G__46788;
                  continue;
                } else {
                  var x_46789 = cljs.core.first.call(null, seq__46730_46783__$1);
                  var v_46790 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46789], null));
                  if (v_46790 === 0) {
                  } else {
                    t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46789, y], null), false);
                  }
                  var G__46791 = cljs.core.next.call(null, seq__46730_46783__$1);
                  var G__46792 = null;
                  var G__46793 = 0;
                  var G__46794 = 0;
                  seq__46730_46772 = G__46791;
                  chunk__46731_46773 = G__46792;
                  count__46732_46774 = G__46793;
                  i__46733_46775 = G__46794;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__46795 = cljs.core.next.call(null, seq__46729__$1);
          var G__46796 = null;
          var G__46797 = 0;
          var G__46798 = 0;
          seq__46729 = G__46795;
          chunk__46734 = G__46796;
          count__46735 = G__46797;
          i__46736 = G__46798;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide11.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide11.cell_size * t3tr0s_slides.slide11.cols, t3tr0s_slides.slide11.cell_size * t3tr0s_slides.slide11.rows);
  ctx.fillStyle = t3tr0s_slides.slide11.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide11.light_green;
  t3tr0s_slides.slide11.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var drop_y = t3tr0s_slides.slide11.get_drop_pos.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state)), piece, pos);
  var drop_pos = cljs.core.assoc.call(null, pos, 1, drop_y);
  var fits = t3tr0s_slides.slide11.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = "#333";
    ctx.strokeStyle = "#666";
    t3tr0s_slides.slide11.draw_piece_BANG_.call(null, ctx, piece, drop_pos);
    ctx.fillStyle = fits ? t3tr0s_slides.slide11.dark_purple : t3tr0s_slides.slide11.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide11.light_purple : t3tr0s_slides.slide11.light_red;
    return t3tr0s_slides.slide11.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide11.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide11.key_name = function key_name(p1__46799_SHARP_) {
  return t3tr0s_slides.slide11.key_names.call(null, p1__46799_SHARP_.keyCode);
};
t3tr0s_slides.slide11.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide11.key_name.call(null, e);
  var G__46801_46802 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__46801_46802) {
    case "space":
      t3tr0s_slides.slide11.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide11.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide11.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide11.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___46821 = schema.utils.use_fn_validation;
var output_schema46805_46822 = schema.core.Any;
var input_schema46806_46823 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker46807_46824 = schema.core.checker.call(null, input_schema46806_46823);
var output_checker46808_46825 = schema.core.checker.call(null, output_schema46805_46822);
t3tr0s_slides.slide11.canvas = function(ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825) {
  return function canvas(G__46809, G__46810) {
    var validate__5821__auto__ = ufv___46821.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___46826 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__46809, G__46810], null);
      var temp__4126__auto___46827 = input_checker46807_46824.call(null, args__5822__auto___46826);
      if (cljs.core.truth_(temp__4126__auto___46827)) {
        var error__5823__auto___46828 = temp__4126__auto___46827;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___46828)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema46806_46823, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___46826, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___46828], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__46809;
      var owner = G__46810;
      while (true) {
        if (typeof t3tr0s_slides.slide11.t46816 !== "undefined") {
        } else {
          t3tr0s_slides.slide11.t46816 = function(owner, G__46809, output_checker46808, validate__5821__auto__, G__46810, input_schema46806, canvas, input_checker46807, output_schema46805, app, ufv__, meta46817) {
            this.owner = owner;
            this.G__46809 = G__46809;
            this.output_checker46808 = output_checker46808;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__46810 = G__46810;
            this.input_schema46806 = input_schema46806;
            this.canvas = canvas;
            this.input_checker46807 = input_checker46807;
            this.output_schema46805 = output_schema46805;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta46817 = meta46817;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide11.t46816.cljs$lang$type = true;
          t3tr0s_slides.slide11.t46816.cljs$lang$ctorStr = "t3tr0s-slides.slide11/t46816";
          t3tr0s_slides.slide11.t46816.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide11/t46816");
            };
          }(validate__5821__auto__, ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825);
          t3tr0s_slides.slide11.t46816.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide11.t46816.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825);
          t3tr0s_slides.slide11.t46816.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide11.t46816.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide11.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825);
          t3tr0s_slides.slide11.t46816.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide11.t46816.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide11.cols * t3tr0s_slides.slide11.cell_size;
              canvas__$2.height = t3tr0s_slides.slide11.rows * t3tr0s_slides.slide11.cell_size;
              return t3tr0s_slides.slide11.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825);
          t3tr0s_slides.slide11.t46816.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825) {
            return function(_46818) {
              var self__ = this;
              var _46818__$1 = this;
              return self__.meta46817;
            };
          }(validate__5821__auto__, ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825);
          t3tr0s_slides.slide11.t46816.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825) {
            return function(_46818, meta46817__$1) {
              var self__ = this;
              var _46818__$1 = this;
              return new t3tr0s_slides.slide11.t46816(self__.owner, self__.G__46809, self__.output_checker46808, self__.validate__5821__auto__, self__.G__46810, self__.input_schema46806, self__.canvas, self__.input_checker46807, self__.output_schema46805, self__.app, self__.ufv__, meta46817__$1);
            };
          }(validate__5821__auto__, ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825);
          t3tr0s_slides.slide11.__GT_t46816 = function(validate__5821__auto__, ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825) {
            return function __GT_t46816(owner__$1, G__46809__$1, output_checker46808__$1, validate__5821__auto____$1, G__46810__$1, input_schema46806__$1, canvas__$1, input_checker46807__$1, output_schema46805__$1, app__$1, ufv____$1, meta46817) {
              return new t3tr0s_slides.slide11.t46816(owner__$1, G__46809__$1, output_checker46808__$1, validate__5821__auto____$1, G__46810__$1, input_schema46806__$1, canvas__$1, input_checker46807__$1, output_schema46805__$1, app__$1, ufv____$1, meta46817);
            };
          }(validate__5821__auto__, ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825);
        }
        return new t3tr0s_slides.slide11.t46816(owner, G__46809, output_checker46808_46825, validate__5821__auto__, G__46810, input_schema46806_46823, canvas, input_checker46807_46824, output_schema46805_46822, app, ufv___46821, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___46829 = output_checker46808_46825.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___46829)) {
        var error__5823__auto___46830 = temp__4126__auto___46829;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___46830)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema46805_46822, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___46830], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___46821, output_schema46805_46822, input_schema46806_46823, input_checker46807_46824, output_checker46808_46825);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide11.canvas), schema.core.make_fn_schema.call(null, output_schema46805_46822, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema46806_46823], null)));
t3tr0s_slides.slide11.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide11.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m46804) {
    return om.core.build.call(null, t3tr0s_slides.slide11.canvas, cursor__9685__auto__, m46804);
  };
  __GT_canvas = function(cursor__9685__auto__, m46804) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m46804);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___46848 = schema.utils.use_fn_validation;
var output_schema46832_46849 = schema.core.Any;
var input_schema46833_46850 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker46834_46851 = schema.core.checker.call(null, input_schema46833_46850);
var output_checker46835_46852 = schema.core.checker.call(null, output_schema46832_46849);
t3tr0s_slides.slide11.slide = function(ufv___46848, output_schema46832_46849, input_schema46833_46850, input_checker46834_46851, output_checker46835_46852) {
  return function slide(G__46836, G__46837) {
    var validate__5821__auto__ = ufv___46848.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___46853 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__46836, G__46837], null);
      var temp__4126__auto___46854 = input_checker46834_46851.call(null, args__5822__auto___46853);
      if (cljs.core.truth_(temp__4126__auto___46854)) {
        var error__5823__auto___46855 = temp__4126__auto___46854;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___46855)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema46833_46850, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___46853, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___46855], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__46836;
      var owner = G__46837;
      while (true) {
        if (typeof t3tr0s_slides.slide11.t46843 !== "undefined") {
        } else {
          t3tr0s_slides.slide11.t46843 = function(output_schema46832, input_checker46834, owner, validate__5821__auto__, G__46837, G__46836, output_checker46835, input_schema46833, slide, app, ufv__, meta46844) {
            this.output_schema46832 = output_schema46832;
            this.input_checker46834 = input_checker46834;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__46837 = G__46837;
            this.G__46836 = G__46836;
            this.output_checker46835 = output_checker46835;
            this.input_schema46833 = input_schema46833;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta46844 = meta46844;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide11.t46843.cljs$lang$type = true;
          t3tr0s_slides.slide11.t46843.cljs$lang$ctorStr = "t3tr0s-slides.slide11/t46843";
          t3tr0s_slides.slide11.t46843.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___46848, output_schema46832_46849, input_schema46833_46850, input_checker46834_46851, output_checker46835_46852) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide11/t46843");
            };
          }(validate__5821__auto__, ufv___46848, output_schema46832_46849, input_schema46833_46850, input_checker46834_46851, output_checker46835_46852);
          t3tr0s_slides.slide11.t46843.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide11.t46843.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___46848, output_schema46832_46849, input_schema46833_46850, input_checker46834_46851, output_checker46835_46852) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "11. Draw ghost piece."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide11.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide11.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___46848, output_schema46832_46849, input_schema46833_46850, input_checker46834_46851, output_checker46835_46852);
          t3tr0s_slides.slide11.t46843.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___46848, output_schema46832_46849, input_schema46833_46850, input_checker46834_46851, output_checker46835_46852) {
            return function(_46845) {
              var self__ = this;
              var _46845__$1 = this;
              return self__.meta46844;
            };
          }(validate__5821__auto__, ufv___46848, output_schema46832_46849, input_schema46833_46850, input_checker46834_46851, output_checker46835_46852);
          t3tr0s_slides.slide11.t46843.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___46848, output_schema46832_46849, input_schema46833_46850, input_checker46834_46851, output_checker46835_46852) {
            return function(_46845, meta46844__$1) {
              var self__ = this;
              var _46845__$1 = this;
              return new t3tr0s_slides.slide11.t46843(self__.output_schema46832, self__.input_checker46834, self__.owner, self__.validate__5821__auto__, self__.G__46837, self__.G__46836, self__.output_checker46835, self__.input_schema46833, self__.slide, self__.app, self__.ufv__, meta46844__$1);
            };
          }(validate__5821__auto__, ufv___46848, output_schema46832_46849, input_schema46833_46850, input_checker46834_46851, output_checker46835_46852);
          t3tr0s_slides.slide11.__GT_t46843 = function(validate__5821__auto__, ufv___46848, output_schema46832_46849, input_schema46833_46850, input_checker46834_46851, output_checker46835_46852) {
            return function __GT_t46843(output_schema46832__$1, input_checker46834__$1, owner__$1, validate__5821__auto____$1, G__46837__$1, G__46836__$1, output_checker46835__$1, input_schema46833__$1, slide__$1, app__$1, ufv____$1, meta46844) {
              return new t3tr0s_slides.slide11.t46843(output_schema46832__$1, input_checker46834__$1, owner__$1, validate__5821__auto____$1, G__46837__$1, G__46836__$1, output_checker46835__$1, input_schema46833__$1, slide__$1, app__$1, ufv____$1, meta46844);
            };
          }(validate__5821__auto__, ufv___46848, output_schema46832_46849, input_schema46833_46850, input_checker46834_46851, output_checker46835_46852);
        }
        return new t3tr0s_slides.slide11.t46843(output_schema46832_46849, input_checker46834_46851, owner, validate__5821__auto__, G__46837, G__46836, output_checker46835_46852, input_schema46833_46850, slide, app, ufv___46848, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___46856 = output_checker46835_46852.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___46856)) {
        var error__5823__auto___46857 = temp__4126__auto___46856;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___46857)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema46832_46849, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___46857], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___46848, output_schema46832_46849, input_schema46833_46850, input_checker46834_46851, output_checker46835_46852);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide11.slide), schema.core.make_fn_schema.call(null, output_schema46832_46849, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema46833_46850], null)));
t3tr0s_slides.slide11.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide11.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m46831) {
    return om.core.build.call(null, t3tr0s_slides.slide11.slide, cursor__9685__auto__, m46831);
  };
  __GT_slide = function(cursor__9685__auto__, m46831) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m46831);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide11.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide11.slide, t3tr0s_slides.slide11.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide11.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide11.key_down);
};
t3tr0s_slides.slide11.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide11.key_down);
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj43983 = {};
  return obj43983;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3541__auto__ = port;
    if (and__3541__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4180__auto__ = port == null ? null : port;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj43985 = {};
  return obj43985;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3541__auto__ = port;
    if (and__3541__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4180__auto__ = port == null ? null : port;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj43987 = {};
  return obj43987;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3541__auto__ = chan;
    if (and__3541__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4180__auto__ = chan == null ? null : chan;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3541__auto__ = chan;
    if (and__3541__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4180__auto__ = chan == null ? null : chan;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj43989 = {};
  return obj43989;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3541__auto__ = h;
    if (and__3541__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4180__auto__ = h == null ? null : h;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3541__auto__ = h;
    if (and__3541__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4180__auto__ = h == null ? null : h;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj43991 = {};
  return obj43991;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3541__auto__ = b;
    if (and__3541__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4180__auto__ = b == null ? null : b;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3541__auto__ = b;
    if (and__3541__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4180__auto__ = b == null ? null : b;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3541__auto__ = b;
    if (and__3541__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4180__auto__ = b == null ? null : b;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj43993 = {};
  return obj43993;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t43930 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t43930 = function(f, fn_handler, meta43931) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta43931 = meta43931;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t43930.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t43930.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t43930";
    cljs.core.async.impl.ioc_helpers.t43930.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.ioc-helpers/t43930");
    };
    cljs.core.async.impl.ioc_helpers.t43930.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t43930.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t43930.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t43930.prototype.cljs$core$IMeta$_meta$arity$1 = function(_43932) {
      var self__ = this;
      var _43932__$1 = this;
      return self__.meta43931;
    };
    cljs.core.async.impl.ioc_helpers.t43930.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_43932, meta43931__$1) {
      var self__ = this;
      var _43932__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t43930(self__.f, self__.fn_handler, meta43931__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t43930 = function __GT_t43930(f__$1, fn_handler__$1, meta43931) {
      return new cljs.core.async.impl.ioc_helpers.t43930(f__$1, fn_handler__$1, meta43931);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t43930(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e43934) {
    if (e43934 instanceof Object) {
      var ex = e43934;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e43934;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_43937_43939 = state;
    statearr_43937_43939[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_43937_43939[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_43938_43940 = state;
    statearr_43938_43940[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_43938_43940[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_43943_43945 = state;
    statearr_43943_43945[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_43943_43945[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_43944_43946 = state;
    statearr_43944_43946[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_43944_43946[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__43947) {
    var map__43952 = p__43947;
    var map__43952__$1 = cljs.core.seq_QMARK_.call(null, map__43952) ? cljs.core.apply.call(null, cljs.core.hash_map, map__43952) : map__43952;
    var opts = map__43952__$1;
    var statearr_43953_43956 = state;
    statearr_43953_43956[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__43952, map__43952__$1, opts) {
      return function(val) {
        var statearr_43954_43957 = state;
        statearr_43954_43957[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__43952, map__43952__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_43955_43958 = state;
      statearr_43955_43958[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__43947 = null;
    if (arguments.length > 3) {
      p__43947 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__43947);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__43959) {
    var state = cljs.core.first(arglist__43959);
    arglist__43959 = cljs.core.next(arglist__43959);
    var cont_block = cljs.core.first(arglist__43959);
    arglist__43959 = cljs.core.next(arglist__43959);
    var ports = cljs.core.first(arglist__43959);
    var p__43947 = cljs.core.rest(arglist__43959);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__43947);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k43961, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__43963 = k43961 instanceof cljs.core.Keyword ? k43961.fqn : null;
  switch(G__43963) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k43961, else__4142__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__43960) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__43964 = cljs.core.keyword_identical_QMARK_;
  var expr__43965 = k__4147__auto__;
  if (cljs.core.truth_(pred__43964.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__43965))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__43960, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__43964.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__43965))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__43960, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__43964.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__43965))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__43960, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__43964.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__43965))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__43960, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__43964.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__43965))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__43960, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__43960), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__43960) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__43960, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__43962) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__43962), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__43962), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__43962), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__43962), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__43962), null, cljs.core.dissoc.call(null, G__43962, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_43969 = state;
  statearr_43969[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_43969;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = exception;
      if (cljs.core.truth_(and__3541__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3541__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3541__auto__ = exception;
        if (cljs.core.truth_(and__3541__auto__)) {
          var and__3541__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3541__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3541__auto____$1;
          }
        } else {
          return and__3541__auto__;
        }
      }())) {
        var statearr_43975 = state;
        statearr_43975[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_43975[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_43975[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_43975[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_43975;
      } else {
        if (cljs.core.truth_(function() {
          var and__3541__auto__ = exception;
          if (cljs.core.truth_(and__3541__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3541__auto__;
          }
        }())) {
          var statearr_43976_43980 = state;
          statearr_43976_43980[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__43981 = state;
          state = G__43981;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3541__auto__ = exception;
            if (cljs.core.truth_(and__3541__auto__)) {
              var and__3541__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3541__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3541__auto____$1;
              }
            } else {
              return and__3541__auto__;
            }
          }())) {
            var statearr_43977 = state;
            statearr_43977[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_43977[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_43977;
          } else {
            if (cljs.core.truth_(function() {
              var and__3541__auto__ = cljs.core.not.call(null, exception);
              if (and__3541__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3541__auto__;
              }
            }())) {
              var statearr_43978 = state;
              statearr_43978[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_43978[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_43978;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_43979 = state;
                statearr_43979[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_43979[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_43979;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("t3tr0s_slides.slide07");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide07.dark_green = "#143";
t3tr0s_slides.slide07.light_green = "#175";
t3tr0s_slides.slide07.dark_purple = "#449";
t3tr0s_slides.slide07.light_purple = "#6ad";
t3tr0s_slides.slide07.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide07.rotate_coord = function rotate_coord(p__45583) {
  var vec__45585 = p__45583;
  var x = cljs.core.nth.call(null, vec__45585, 0, null);
  var y = cljs.core.nth.call(null, vec__45585, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide07.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide07.rotate_coord, piece);
};
t3tr0s_slides.slide07.rows = 20;
t3tr0s_slides.slide07.cols = 10;
t3tr0s_slides.slide07.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide07.cols, 0));
t3tr0s_slides.slide07.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide07.rows, t3tr0s_slides.slide07.empty_row));
t3tr0s_slides.slide07.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide07.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide07.empty_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide07.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide07.initial_pos], null));
t3tr0s_slides.slide07.write_piece = function write_piece(board, coords, p__45586) {
  while (true) {
    var vec__45590 = p__45586;
    var cx = cljs.core.nth.call(null, vec__45590, 0, null);
    var cy = cljs.core.nth.call(null, vec__45590, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__45591 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__45591, 0, null);
      var y = cljs.core.nth.call(null, vec__45591, 1, null);
      var G__45593 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e45592) {
          if (e45592 instanceof Error) {
            var _ = e45592;
            return board;
          } else {
            throw e45592;
          }
        }
      }();
      var G__45594 = cljs.core.rest.call(null, coords);
      var G__45595 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__45593;
      coords = G__45594;
      p__45586 = G__45595;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide07.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__45597 = cljs.core.deref.call(null, t3tr0s_slides.slide07.app_state);
  var map__45597__$1 = cljs.core.seq_QMARK_.call(null, map__45597) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45597) : map__45597;
  var position = cljs.core.get.call(null, map__45597__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__45597__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide07.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide07.write_piece, piece, position);
};
t3tr0s_slides.slide07.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__45602(s__45603) {
      return new cljs.core.LazySeq(null, function() {
        var s__45603__$1 = s__45603;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__45603__$1);
          if (temp__4126__auto__) {
            var s__45603__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__45603__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__45603__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__45605 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__45604 = 0;
                while (true) {
                  if (i__45604 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__45604);
                    cljs.core.chunk_append.call(null, b__45605, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide07.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null)))), " "));
                    var G__45606 = i__45604 + 1;
                    i__45604 = G__45606;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__45605), iter__45602.call(null, cljs.core.chunk_rest.call(null, s__45603__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__45605), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__45603__$2);
              return cljs.core.cons.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide07.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null)))), " "), iter__45602.call(null, cljs.core.rest.call(null, s__45603__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.cols));
  }(), " ]"], null);
};
var ufv___45686 = schema.utils.use_fn_validation;
var output_schema45608_45687 = schema.core.Any;
var input_schema45609_45688 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker45610_45689 = schema.core.checker.call(null, input_schema45609_45688);
var output_checker45611_45690 = schema.core.checker.call(null, output_schema45608_45687);
t3tr0s_slides.slide07.code = function(ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690) {
  return function code(G__45612, G__45613) {
    var validate__5821__auto__ = ufv___45686.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___45691 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__45612, G__45613], null);
      var temp__4126__auto___45692 = input_checker45610_45689.call(null, args__5822__auto___45691);
      if (cljs.core.truth_(temp__4126__auto___45692)) {
        var error__5823__auto___45693 = temp__4126__auto___45692;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___45693)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema45609_45688, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___45691, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45693], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__45612;
      var owner = G__45613;
      while (true) {
        if (typeof t3tr0s_slides.slide07.t45650 !== "undefined") {
        } else {
          t3tr0s_slides.slide07.t45650 = function(output_checker45611, G__45613, owner, validate__5821__auto__, input_schema45609, output_schema45608, input_checker45610, app, G__45612, ufv__, code, meta45651) {
            this.output_checker45611 = output_checker45611;
            this.G__45613 = G__45613;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema45609 = input_schema45609;
            this.output_schema45608 = output_schema45608;
            this.input_checker45610 = input_checker45610;
            this.app = app;
            this.G__45612 = G__45612;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta45651 = meta45651;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide07.t45650.cljs$lang$type = true;
          t3tr0s_slides.slide07.t45650.cljs$lang$ctorStr = "t3tr0s-slides.slide07/t45650";
          t3tr0s_slides.slide07.t45650.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide07/t45650");
            };
          }(validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690);
          t3tr0s_slides.slide07.t45650.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide07.t45650.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs45653 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: click-drag canvas on the right");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs45653) ? sablono.interpreter.attributes.call(null, attrs45653) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45653) ? cljs.core.PersistentVector.fromArray(["\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " write-piece\n", "  [board coords [cx cy]]\n", "  (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "if-let")), " [[x y] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), " coords)]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "recur")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "assoc-in")), " board [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "+")), " y cy) (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x cx)] ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "1")), ")\n", "           (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "rest")), " coords)\n", "           [cx cy])\n", "    board))\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "defn")), " lock-piece! []\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [{", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":keys")), " [piece position]} @game-state]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "update-in")), " [", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), "]\n", "        write-piece piece position)))\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " @game-state)\n", "\n", cljs.core.into_array.call(null, function() {
                  var iter__4278__auto__ = function(attrs45653, ___$1, validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690) {
                    return function iter__45654(s__45655) {
                      return new cljs.core.LazySeq(null, function(attrs45653, ___$1, validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690) {
                        return function() {
                          var s__45655__$1 = s__45655;
                          while (true) {
                            var temp__4126__auto__ = cljs.core.seq.call(null, s__45655__$1);
                            if (temp__4126__auto__) {
                              var s__45655__$2 = temp__4126__auto__;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__45655__$2)) {
                                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__45655__$2);
                                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                var b__45657 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                if (function() {
                                  var i__45656 = 0;
                                  while (true) {
                                    if (i__45656 < size__4277__auto__) {
                                      var row = cljs.core._nth.call(null, c__4276__auto__, i__45656);
                                      cljs.core.chunk_append.call(null, b__45657, sablono.interpreter.interpret.call(null, function() {
                                        var pred__45664 = cljs.core._EQ_;
                                        var expr__45665 = row;
                                        if (cljs.core.truth_(pred__45664.call(null, 0, expr__45665))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "  [");
                                        } else {
                                          if (cljs.core.truth_(pred__45664.call(null, t3tr0s_slides.slide07.rows - 1, expr__45665))) {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                          } else {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                          }
                                        }
                                      }()));
                                      var G__45694 = i__45656 + 1;
                                      i__45656 = G__45694;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__45657), iter__45654.call(null, cljs.core.chunk_rest.call(null, s__45655__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__45657), null);
                                }
                              } else {
                                var row = cljs.core.first.call(null, s__45655__$2);
                                return cljs.core.cons.call(null, sablono.interpreter.interpret.call(null, function() {
                                  var pred__45667 = cljs.core._EQ_;
                                  var expr__45668 = row;
                                  if (cljs.core.truth_(pred__45667.call(null, 0, expr__45668))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "  [");
                                  } else {
                                    if (cljs.core.truth_(pred__45667.call(null, t3tr0s_slides.slide07.rows - 1, expr__45668))) {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                    } else {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                    }
                                  }
                                }()), iter__45654.call(null, cljs.core.rest.call(null, s__45655__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(attrs45653, ___$1, validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690), null, null);
                    };
                  }(attrs45653, ___$1, validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690);
                  return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.rows));
                }())], true) : cljs.core.PersistentVector.fromArray([sablono.interpreter.interpret.call(null, attrs45653), "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " write-piece\n", "  [board coords [cx cy]]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "if-let")), " [[x y] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), 
                " coords)]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "recur")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "assoc-in")), " board [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " y cy) (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x cx)] ", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.lit.call(null, "1")), ")\n", "           (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "rest")), " coords)\n", "           [cx cy])\n", "    board))\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " lock-piece! []\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [{", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.kw.call(null, ":keys")), " [piece position]} @game-state]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " [", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), "]\n", "        write-piece piece position)))\n", "\n", "\x3e (", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " @game-state)\n", "\n", cljs.core.into_array.call(null, function() {
                  var iter__4278__auto__ = function(attrs45653, ___$1, validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690) {
                    return function iter__45670(s__45671) {
                      return new cljs.core.LazySeq(null, function(attrs45653, ___$1, validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690) {
                        return function() {
                          var s__45671__$1 = s__45671;
                          while (true) {
                            var temp__4126__auto__ = cljs.core.seq.call(null, s__45671__$1);
                            if (temp__4126__auto__) {
                              var s__45671__$2 = temp__4126__auto__;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__45671__$2)) {
                                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__45671__$2);
                                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                var b__45673 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                if (function() {
                                  var i__45672 = 0;
                                  while (true) {
                                    if (i__45672 < size__4277__auto__) {
                                      var row = cljs.core._nth.call(null, c__4276__auto__, i__45672);
                                      cljs.core.chunk_append.call(null, b__45673, sablono.interpreter.interpret.call(null, function() {
                                        var pred__45680 = cljs.core._EQ_;
                                        var expr__45681 = row;
                                        if (cljs.core.truth_(pred__45680.call(null, 0, expr__45681))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "  [");
                                        } else {
                                          if (cljs.core.truth_(pred__45680.call(null, t3tr0s_slides.slide07.rows - 1, expr__45681))) {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                          } else {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                          }
                                        }
                                      }()));
                                      var G__45695 = i__45672 + 1;
                                      i__45672 = G__45695;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__45673), iter__45670.call(null, cljs.core.chunk_rest.call(null, s__45671__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__45673), null);
                                }
                              } else {
                                var row = cljs.core.first.call(null, s__45671__$2);
                                return cljs.core.cons.call(null, sablono.interpreter.interpret.call(null, function() {
                                  var pred__45683 = cljs.core._EQ_;
                                  var expr__45684 = row;
                                  if (cljs.core.truth_(pred__45683.call(null, 0, expr__45684))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "  [");
                                  } else {
                                    if (cljs.core.truth_(pred__45683.call(null, t3tr0s_slides.slide07.rows - 1, expr__45684))) {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                    } else {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                    }
                                  }
                                }()), iter__45670.call(null, cljs.core.rest.call(null, s__45671__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(attrs45653, ___$1, validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690), null, null);
                    };
                  }(attrs45653, ___$1, validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690);
                  return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.rows));
                }())], true)));
              }()));
            };
          }(validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690);
          t3tr0s_slides.slide07.t45650.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690) {
            return function(_45652) {
              var self__ = this;
              var _45652__$1 = this;
              return self__.meta45651;
            };
          }(validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690);
          t3tr0s_slides.slide07.t45650.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690) {
            return function(_45652, meta45651__$1) {
              var self__ = this;
              var _45652__$1 = this;
              return new t3tr0s_slides.slide07.t45650(self__.output_checker45611, self__.G__45613, self__.owner, self__.validate__5821__auto__, self__.input_schema45609, self__.output_schema45608, self__.input_checker45610, self__.app, self__.G__45612, self__.ufv__, self__.code, meta45651__$1);
            };
          }(validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690);
          t3tr0s_slides.slide07.__GT_t45650 = function(validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690) {
            return function __GT_t45650(output_checker45611__$1, G__45613__$1, owner__$1, validate__5821__auto____$1, input_schema45609__$1, output_schema45608__$1, input_checker45610__$1, app__$1, G__45612__$1, ufv____$1, code__$1, meta45651) {
              return new t3tr0s_slides.slide07.t45650(output_checker45611__$1, G__45613__$1, owner__$1, validate__5821__auto____$1, input_schema45609__$1, output_schema45608__$1, input_checker45610__$1, app__$1, G__45612__$1, ufv____$1, code__$1, meta45651);
            };
          }(validate__5821__auto__, ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690);
        }
        return new t3tr0s_slides.slide07.t45650(output_checker45611_45690, G__45613, owner, validate__5821__auto__, input_schema45609_45688, output_schema45608_45687, input_checker45610_45689, app, G__45612, ufv___45686, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45696 = output_checker45611_45690.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45696)) {
        var error__5823__auto___45697 = temp__4126__auto___45696;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___45697)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema45608_45687, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45697], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___45686, output_schema45608_45687, input_schema45609_45688, input_checker45610_45689, output_checker45611_45690);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide07.code), schema.core.make_fn_schema.call(null, output_schema45608_45687, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema45609_45688], null)));
t3tr0s_slides.slide07.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide07.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m45607) {
    return om.core.build.call(null, t3tr0s_slides.slide07.code, cursor__9685__auto__, m45607);
  };
  __GT_code = function(cursor__9685__auto__, m45607) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m45607);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide07.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide07.rows);
t3tr0s_slides.slide07.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__45698, is_center) {
  var vec__45700 = p__45698;
  var x = cljs.core.nth.call(null, vec__45700, 0, null);
  var y = cljs.core.nth.call(null, vec__45700, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide07.cell_size * x;
  var ry = t3tr0s_slides.slide07.cell_size * y;
  var rs = t3tr0s_slides.slide07.cell_size;
  var cx = t3tr0s_slides.slide07.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide07.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide07.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide07.piece_abs_coords = function piece_abs_coords(piece, p__45701) {
  var vec__45705 = p__45701;
  var cx = cljs.core.nth.call(null, vec__45705, 0, null);
  var cy = cljs.core.nth.call(null, vec__45705, 1, null);
  return cljs.core.mapv.call(null, function(vec__45705, cx, cy) {
    return function(p__45706) {
      var vec__45707 = p__45706;
      var x = cljs.core.nth.call(null, vec__45707, 0, null);
      var y = cljs.core.nth.call(null, vec__45707, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__45705, cx, cy), piece);
};
t3tr0s_slides.slide07.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__45714 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide07.piece_abs_coords.call(null, piece, pos)));
  var chunk__45715 = null;
  var count__45716 = 0;
  var i__45717 = 0;
  while (true) {
    if (i__45717 < count__45716) {
      var vec__45718 = cljs.core._nth.call(null, chunk__45715, i__45717);
      var i = cljs.core.nth.call(null, vec__45718, 0, null);
      var c = cljs.core.nth.call(null, vec__45718, 1, null);
      t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__45720 = seq__45714;
      var G__45721 = chunk__45715;
      var G__45722 = count__45716;
      var G__45723 = i__45717 + 1;
      seq__45714 = G__45720;
      chunk__45715 = G__45721;
      count__45716 = G__45722;
      i__45717 = G__45723;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__45714);
      if (temp__4126__auto__) {
        var seq__45714__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__45714__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__45714__$1);
          var G__45724 = cljs.core.chunk_rest.call(null, seq__45714__$1);
          var G__45725 = c__4309__auto__;
          var G__45726 = cljs.core.count.call(null, c__4309__auto__);
          var G__45727 = 0;
          seq__45714 = G__45724;
          chunk__45715 = G__45725;
          count__45716 = G__45726;
          i__45717 = G__45727;
          continue;
        } else {
          var vec__45719 = cljs.core.first.call(null, seq__45714__$1);
          var i = cljs.core.nth.call(null, vec__45719, 0, null);
          var c = cljs.core.nth.call(null, vec__45719, 1, null);
          t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__45728 = cljs.core.next.call(null, seq__45714__$1);
          var G__45729 = null;
          var G__45730 = 0;
          var G__45731 = 0;
          seq__45714 = G__45728;
          chunk__45715 = G__45729;
          count__45716 = G__45730;
          i__45717 = G__45731;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide07.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__45744 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.rows));
  var chunk__45749 = null;
  var count__45750 = 0;
  var i__45751 = 0;
  while (true) {
    if (i__45751 < count__45750) {
      var y = cljs.core._nth.call(null, chunk__45749, i__45751);
      var seq__45752_45756 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.cols));
      var chunk__45753_45757 = null;
      var count__45754_45758 = 0;
      var i__45755_45759 = 0;
      while (true) {
        if (i__45755_45759 < count__45754_45758) {
          var x_45760 = cljs.core._nth.call(null, chunk__45753_45757, i__45755_45759);
          var v_45761 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_45760], null));
          if (v_45761 === 0) {
          } else {
            t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_45760, y], null), false);
          }
          var G__45762 = seq__45752_45756;
          var G__45763 = chunk__45753_45757;
          var G__45764 = count__45754_45758;
          var G__45765 = i__45755_45759 + 1;
          seq__45752_45756 = G__45762;
          chunk__45753_45757 = G__45763;
          count__45754_45758 = G__45764;
          i__45755_45759 = G__45765;
          continue;
        } else {
          var temp__4126__auto___45766 = cljs.core.seq.call(null, seq__45752_45756);
          if (temp__4126__auto___45766) {
            var seq__45752_45767__$1 = temp__4126__auto___45766;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__45752_45767__$1)) {
              var c__4309__auto___45768 = cljs.core.chunk_first.call(null, seq__45752_45767__$1);
              var G__45769 = cljs.core.chunk_rest.call(null, seq__45752_45767__$1);
              var G__45770 = c__4309__auto___45768;
              var G__45771 = cljs.core.count.call(null, c__4309__auto___45768);
              var G__45772 = 0;
              seq__45752_45756 = G__45769;
              chunk__45753_45757 = G__45770;
              count__45754_45758 = G__45771;
              i__45755_45759 = G__45772;
              continue;
            } else {
              var x_45773 = cljs.core.first.call(null, seq__45752_45767__$1);
              var v_45774 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_45773], null));
              if (v_45774 === 0) {
              } else {
                t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_45773, y], null), false);
              }
              var G__45775 = cljs.core.next.call(null, seq__45752_45767__$1);
              var G__45776 = null;
              var G__45777 = 0;
              var G__45778 = 0;
              seq__45752_45756 = G__45775;
              chunk__45753_45757 = G__45776;
              count__45754_45758 = G__45777;
              i__45755_45759 = G__45778;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__45779 = seq__45744;
      var G__45780 = chunk__45749;
      var G__45781 = count__45750;
      var G__45782 = i__45751 + 1;
      seq__45744 = G__45779;
      chunk__45749 = G__45780;
      count__45750 = G__45781;
      i__45751 = G__45782;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__45744);
      if (temp__4126__auto__) {
        var seq__45744__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__45744__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__45744__$1);
          var G__45783 = cljs.core.chunk_rest.call(null, seq__45744__$1);
          var G__45784 = c__4309__auto__;
          var G__45785 = cljs.core.count.call(null, c__4309__auto__);
          var G__45786 = 0;
          seq__45744 = G__45783;
          chunk__45749 = G__45784;
          count__45750 = G__45785;
          i__45751 = G__45786;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__45744__$1);
          var seq__45745_45787 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.cols));
          var chunk__45746_45788 = null;
          var count__45747_45789 = 0;
          var i__45748_45790 = 0;
          while (true) {
            if (i__45748_45790 < count__45747_45789) {
              var x_45791 = cljs.core._nth.call(null, chunk__45746_45788, i__45748_45790);
              var v_45792 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_45791], null));
              if (v_45792 === 0) {
              } else {
                t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_45791, y], null), false);
              }
              var G__45793 = seq__45745_45787;
              var G__45794 = chunk__45746_45788;
              var G__45795 = count__45747_45789;
              var G__45796 = i__45748_45790 + 1;
              seq__45745_45787 = G__45793;
              chunk__45746_45788 = G__45794;
              count__45747_45789 = G__45795;
              i__45748_45790 = G__45796;
              continue;
            } else {
              var temp__4126__auto___45797__$1 = cljs.core.seq.call(null, seq__45745_45787);
              if (temp__4126__auto___45797__$1) {
                var seq__45745_45798__$1 = temp__4126__auto___45797__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__45745_45798__$1)) {
                  var c__4309__auto___45799 = cljs.core.chunk_first.call(null, seq__45745_45798__$1);
                  var G__45800 = cljs.core.chunk_rest.call(null, seq__45745_45798__$1);
                  var G__45801 = c__4309__auto___45799;
                  var G__45802 = cljs.core.count.call(null, c__4309__auto___45799);
                  var G__45803 = 0;
                  seq__45745_45787 = G__45800;
                  chunk__45746_45788 = G__45801;
                  count__45747_45789 = G__45802;
                  i__45748_45790 = G__45803;
                  continue;
                } else {
                  var x_45804 = cljs.core.first.call(null, seq__45745_45798__$1);
                  var v_45805 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_45804], null));
                  if (v_45805 === 0) {
                  } else {
                    t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_45804, y], null), false);
                  }
                  var G__45806 = cljs.core.next.call(null, seq__45745_45798__$1);
                  var G__45807 = null;
                  var G__45808 = 0;
                  var G__45809 = 0;
                  seq__45745_45787 = G__45806;
                  chunk__45746_45788 = G__45807;
                  count__45747_45789 = G__45808;
                  i__45748_45790 = G__45809;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__45810 = cljs.core.next.call(null, seq__45744__$1);
          var G__45811 = null;
          var G__45812 = 0;
          var G__45813 = 0;
          seq__45744 = G__45810;
          chunk__45749 = G__45811;
          count__45750 = G__45812;
          i__45751 = G__45813;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide07.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide07.cell_size * t3tr0s_slides.slide07.cols, t3tr0s_slides.slide07.cell_size * t3tr0s_slides.slide07.rows);
  ctx.fillStyle = t3tr0s_slides.slide07.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide07.light_green;
  t3tr0s_slides.slide07.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = t3tr0s_slides.slide07.dark_purple;
    ctx.strokeStyle = t3tr0s_slides.slide07.light_purple;
    return t3tr0s_slides.slide07.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide07.canvas_mouse = function canvas_mouse(app, owner, e) {
  var clicking = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "clicking", "clicking", 1769354153));
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide07.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide07.cell_size);
  om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [col, row], null));
  if (cljs.core.truth_(clicking)) {
    return t3tr0s_slides.slide07.lock_piece_BANG_.call(null);
  } else {
    return null;
  }
};
var ufv___45828 = schema.utils.use_fn_validation;
var output_schema45816_45829 = schema.core.Any;
var input_schema45817_45830 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker45818_45831 = schema.core.checker.call(null, input_schema45817_45830);
var output_checker45819_45832 = schema.core.checker.call(null, output_schema45816_45829);
t3tr0s_slides.slide07.canvas = function(ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832) {
  return function canvas(G__45820, G__45821) {
    var validate__5821__auto__ = ufv___45828.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___45833 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__45820, G__45821], null);
      var temp__4126__auto___45834 = input_checker45818_45831.call(null, args__5822__auto___45833);
      if (cljs.core.truth_(temp__4126__auto___45834)) {
        var error__5823__auto___45835 = temp__4126__auto___45834;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___45835)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema45817_45830, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___45833, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45835], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__45820;
      var owner = G__45821;
      while (true) {
        if (typeof t3tr0s_slides.slide07.t45825 !== "undefined") {
        } else {
          t3tr0s_slides.slide07.t45825 = function(owner, G__45820, output_checker45819, input_schema45817, validate__5821__auto__, G__45821, output_schema45816, canvas, input_checker45818, app, ufv__, meta45826) {
            this.owner = owner;
            this.G__45820 = G__45820;
            this.output_checker45819 = output_checker45819;
            this.input_schema45817 = input_schema45817;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__45821 = G__45821;
            this.output_schema45816 = output_schema45816;
            this.canvas = canvas;
            this.input_checker45818 = input_checker45818;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta45826 = meta45826;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide07.t45825.cljs$lang$type = true;
          t3tr0s_slides.slide07.t45825.cljs$lang$ctorStr = "t3tr0s-slides.slide07/t45825";
          t3tr0s_slides.slide07.t45825.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide07/t45825");
            };
          }(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832);
          t3tr0s_slides.slide07.t45825.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide07.t45825.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseDown":function(___$1, validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832) {
                return function() {
                  om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "clicking", "clicking", 1769354153), true);
                  return t3tr0s_slides.slide07.lock_piece_BANG_.call(null);
                };
              }(___$1, validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832), "onMouseUp":function(___$1, validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832) {
                return function() {
                  return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "clicking", "clicking", 1769354153), false);
                };
              }(___$1, validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832), "onMouseLeave":function(___$1, validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832) {
                return function() {
                  return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "clicking", "clicking", 1769354153), false);
                };
              }(___$1, validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832), "onMouseMove":function(___$1, validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832) {
                return function(p1__45814_SHARP_) {
                  return t3tr0s_slides.slide07.canvas_mouse.call(null, self__.app, self__.owner, p1__45814_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832)}));
            };
          }(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832);
          t3tr0s_slides.slide07.t45825.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide07.t45825.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide07.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832);
          t3tr0s_slides.slide07.t45825.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide07.t45825.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide07.cols * t3tr0s_slides.slide07.cell_size;
              canvas__$2.height = t3tr0s_slides.slide07.rows * t3tr0s_slides.slide07.cell_size;
              return t3tr0s_slides.slide07.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832);
          t3tr0s_slides.slide07.t45825.prototype.om$core$IInitState$ = true;
          t3tr0s_slides.slide07.t45825.prototype.om$core$IInitState$init_state$arity$1 = function(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clicking", "clicking", 1769354153), false], null);
            };
          }(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832);
          t3tr0s_slides.slide07.t45825.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832) {
            return function(_45827) {
              var self__ = this;
              var _45827__$1 = this;
              return self__.meta45826;
            };
          }(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832);
          t3tr0s_slides.slide07.t45825.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832) {
            return function(_45827, meta45826__$1) {
              var self__ = this;
              var _45827__$1 = this;
              return new t3tr0s_slides.slide07.t45825(self__.owner, self__.G__45820, self__.output_checker45819, self__.input_schema45817, self__.validate__5821__auto__, self__.G__45821, self__.output_schema45816, self__.canvas, self__.input_checker45818, self__.app, self__.ufv__, meta45826__$1);
            };
          }(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832);
          t3tr0s_slides.slide07.__GT_t45825 = function(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832) {
            return function __GT_t45825(owner__$1, G__45820__$1, output_checker45819__$1, input_schema45817__$1, validate__5821__auto____$1, G__45821__$1, output_schema45816__$1, canvas__$1, input_checker45818__$1, app__$1, ufv____$1, meta45826) {
              return new t3tr0s_slides.slide07.t45825(owner__$1, G__45820__$1, output_checker45819__$1, input_schema45817__$1, validate__5821__auto____$1, G__45821__$1, output_schema45816__$1, canvas__$1, input_checker45818__$1, app__$1, ufv____$1, meta45826);
            };
          }(validate__5821__auto__, ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832);
        }
        return new t3tr0s_slides.slide07.t45825(owner, G__45820, output_checker45819_45832, input_schema45817_45830, validate__5821__auto__, G__45821, output_schema45816_45829, canvas, input_checker45818_45831, app, ufv___45828, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45836 = output_checker45819_45832.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45836)) {
        var error__5823__auto___45837 = temp__4126__auto___45836;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___45837)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema45816_45829, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45837], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___45828, output_schema45816_45829, input_schema45817_45830, input_checker45818_45831, output_checker45819_45832);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide07.canvas), schema.core.make_fn_schema.call(null, output_schema45816_45829, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema45817_45830], null)));
t3tr0s_slides.slide07.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide07.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m45815) {
    return om.core.build.call(null, t3tr0s_slides.slide07.canvas, cursor__9685__auto__, m45815);
  };
  __GT_canvas = function(cursor__9685__auto__, m45815) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m45815);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___45855 = schema.utils.use_fn_validation;
var output_schema45839_45856 = schema.core.Any;
var input_schema45840_45857 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker45841_45858 = schema.core.checker.call(null, input_schema45840_45857);
var output_checker45842_45859 = schema.core.checker.call(null, output_schema45839_45856);
t3tr0s_slides.slide07.slide = function(ufv___45855, output_schema45839_45856, input_schema45840_45857, input_checker45841_45858, output_checker45842_45859) {
  return function slide(G__45843, G__45844) {
    var validate__5821__auto__ = ufv___45855.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___45860 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__45843, G__45844], null);
      var temp__4126__auto___45861 = input_checker45841_45858.call(null, args__5822__auto___45860);
      if (cljs.core.truth_(temp__4126__auto___45861)) {
        var error__5823__auto___45862 = temp__4126__auto___45861;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___45862)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema45840_45857, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___45860, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45862], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__45843;
      var owner = G__45844;
      while (true) {
        if (typeof t3tr0s_slides.slide07.t45850 !== "undefined") {
        } else {
          t3tr0s_slides.slide07.t45850 = function(owner, input_schema45840, output_schema45839, input_checker45841, G__45843, validate__5821__auto__, G__45844, slide, output_checker45842, app, ufv__, meta45851) {
            this.owner = owner;
            this.input_schema45840 = input_schema45840;
            this.output_schema45839 = output_schema45839;
            this.input_checker45841 = input_checker45841;
            this.G__45843 = G__45843;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__45844 = G__45844;
            this.slide = slide;
            this.output_checker45842 = output_checker45842;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta45851 = meta45851;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide07.t45850.cljs$lang$type = true;
          t3tr0s_slides.slide07.t45850.cljs$lang$ctorStr = "t3tr0s-slides.slide07/t45850";
          t3tr0s_slides.slide07.t45850.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___45855, output_schema45839_45856, input_schema45840_45857, input_checker45841_45858, output_checker45842_45859) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide07/t45850");
            };
          }(validate__5821__auto__, ufv___45855, output_schema45839_45856, input_schema45840_45857, input_checker45841_45858, output_checker45842_45859);
          t3tr0s_slides.slide07.t45850.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide07.t45850.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___45855, output_schema45839_45856, input_schema45840_45857, input_checker45841_45858, output_checker45842_45859) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "7. Write piece to board."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide07.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide07.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___45855, output_schema45839_45856, input_schema45840_45857, input_checker45841_45858, output_checker45842_45859);
          t3tr0s_slides.slide07.t45850.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___45855, output_schema45839_45856, input_schema45840_45857, input_checker45841_45858, output_checker45842_45859) {
            return function(_45852) {
              var self__ = this;
              var _45852__$1 = this;
              return self__.meta45851;
            };
          }(validate__5821__auto__, ufv___45855, output_schema45839_45856, input_schema45840_45857, input_checker45841_45858, output_checker45842_45859);
          t3tr0s_slides.slide07.t45850.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___45855, output_schema45839_45856, input_schema45840_45857, input_checker45841_45858, output_checker45842_45859) {
            return function(_45852, meta45851__$1) {
              var self__ = this;
              var _45852__$1 = this;
              return new t3tr0s_slides.slide07.t45850(self__.owner, self__.input_schema45840, self__.output_schema45839, self__.input_checker45841, self__.G__45843, self__.validate__5821__auto__, self__.G__45844, self__.slide, self__.output_checker45842, self__.app, self__.ufv__, meta45851__$1);
            };
          }(validate__5821__auto__, ufv___45855, output_schema45839_45856, input_schema45840_45857, input_checker45841_45858, output_checker45842_45859);
          t3tr0s_slides.slide07.__GT_t45850 = function(validate__5821__auto__, ufv___45855, output_schema45839_45856, input_schema45840_45857, input_checker45841_45858, output_checker45842_45859) {
            return function __GT_t45850(owner__$1, input_schema45840__$1, output_schema45839__$1, input_checker45841__$1, G__45843__$1, validate__5821__auto____$1, G__45844__$1, slide__$1, output_checker45842__$1, app__$1, ufv____$1, meta45851) {
              return new t3tr0s_slides.slide07.t45850(owner__$1, input_schema45840__$1, output_schema45839__$1, input_checker45841__$1, G__45843__$1, validate__5821__auto____$1, G__45844__$1, slide__$1, output_checker45842__$1, app__$1, ufv____$1, meta45851);
            };
          }(validate__5821__auto__, ufv___45855, output_schema45839_45856, input_schema45840_45857, input_checker45841_45858, output_checker45842_45859);
        }
        return new t3tr0s_slides.slide07.t45850(owner, input_schema45840_45857, output_schema45839_45856, input_checker45841_45858, G__45843, validate__5821__auto__, G__45844, slide, output_checker45842_45859, app, ufv___45855, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45863 = output_checker45842_45859.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45863)) {
        var error__5823__auto___45864 = temp__4126__auto___45863;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___45864)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema45839_45856, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45864], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___45855, output_schema45839_45856, input_schema45840_45857, input_checker45841_45858, output_checker45842_45859);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide07.slide), schema.core.make_fn_schema.call(null, output_schema45839_45856, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema45840_45857], null)));
t3tr0s_slides.slide07.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide07.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m45838) {
    return om.core.build.call(null, t3tr0s_slides.slide07.slide, cursor__9685__auto__, m45838);
  };
  __GT_slide = function(cursor__9685__auto__, m45838) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m45838);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide07.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide07.slide, t3tr0s_slides.slide07.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide07.resume = function resume() {
  return null;
};
t3tr0s_slides.slide07.stop = function stop() {
  return null;
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__43994 = cnt + 1;
      cnt = G__43994;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4409__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4409__auto__) {
      var v_43995 = this$.pop();
      if (keep_QMARK_.call(null, v_43995)) {
        this$.unshift(v_43995);
      } else {
      }
      var G__43996 = x + 1;
      x = G__43996;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: Can't create a ring buffer of size 0\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0))));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error("Assert failed: Can't add to a full buffer\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -97582774, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_43997 = 0;
  while (true) {
    var m_43998 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_43998 == null) {
    } else {
      m_43998.call(null);
      if (count_43997 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__43999 = count_43997 + 1;
        count_43997 = G__43999;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3541__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3541__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t44003 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t44003 = function(val, box, meta44004) {
      this.val = val;
      this.box = box;
      this.meta44004 = meta44004;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t44003.cljs$lang$type = true;
    cljs.core.async.impl.channels.t44003.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t44003";
    cljs.core.async.impl.channels.t44003.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.channels/t44003");
    };
    cljs.core.async.impl.channels.t44003.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t44003.prototype.cljs$core$IMeta$_meta$arity$1 = function(_44005) {
      var self__ = this;
      var _44005__$1 = this;
      return self__.meta44004;
    };
    cljs.core.async.impl.channels.t44003.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_44005, meta44004__$1) {
      var self__ = this;
      var _44005__$1 = this;
      return new cljs.core.async.impl.channels.t44003(self__.val, self__.box, meta44004__$1);
    };
    cljs.core.async.impl.channels.__GT_t44003 = function __GT_t44003(val__$1, box__$1, meta44004) {
      return new cljs.core.async.impl.channels.t44003(val__$1, box__$1, meta44004);
    };
  }
  return new cljs.core.async.impl.channels.t44003(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4123__auto__, writer__4124__auto__, opts__4125__auto__) {
  return cljs.core._write.call(null, writer__4124__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_44006 = self__.takes.pop();
      if (taker_44006 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_44006)) {
          var take_cb_44007 = cljs.core.async.impl.protocols.commit.call(null, taker_44006);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_44007, taker_44006, this$__$1) {
            return function() {
              return take_cb_44007.call(null, null);
            };
          }(take_cb_44007, taker_44006, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        var putter_44008 = self__.puts.pop();
        if (!(putter_44008 == null)) {
          var put_handler_44009 = putter_44008.handler;
          var val_44010 = putter_44008.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_44009)) {
            var put_cb_44011 = cljs.core.async.impl.protocols.commit.call(null, put_handler_44009);
            var __44012__$1 = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, function(put_cb_44011, __44012__$1, put_handler_44009, val_44010, putter_44008, _, retval, this$__$1) {
              return function() {
                return put_cb_44011.call(null, true);
              };
            }(put_cb_44011, __44012__$1, put_handler_44009, val_44010, putter_44008, _, retval, this$__$1));
            cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val_44010);
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      return retval;
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, function(put_cb, _, put_handler, val, putter, this$__$1) {
              return function() {
                return put_cb.call(null, true);
              };
            }(put_cb, _, put_handler, val, putter, this$__$1));
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending takes are allowed on a single channel.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, 
              "takes", "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error("Assert failed: Can't put nil in on a channel\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null))))));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker, closed__$1, this$__$1) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker, closed__$1, this$__$1));
          return cljs.core.async.impl.channels.box.call(null, true);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, true);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending puts are allowed on a single channel. Consider using a windowed buffer.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false);
};
goog.provide("t3tr0s_slides.slide01");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide01.dark_green = "#143";
t3tr0s_slides.slide01.light_green = "#175";
t3tr0s_slides.slide01.dark_purple = "#449";
t3tr0s_slides.slide01.light_purple = "#6ad";
t3tr0s_slides.slide01.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "row", "row", -570139521), null, new cljs.core.Keyword(null, "col", "col", -1959363084), null], null));
t3tr0s_slides.slide01.rows = 20;
t3tr0s_slides.slide01.cols = 10;
t3tr0s_slides.slide01.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide01.cols, 0));
t3tr0s_slides.slide01.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide01.rows, t3tr0s_slides.slide01.empty_row));
t3tr0s_slides.slide01.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "key", "key", -1516042587), "row" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(row), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, row, (new cljs.core.Keyword(null, "row", "row", -570139521)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-row-534ed" : 
  "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "row", "row", -570139521), row);
  }, new cljs.core.Keyword(null, "onMouseLeave", "onMouseLeave", 1446726903), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "row", "row", -570139521), null);
  }], null), "[", function() {
    var iter__4278__auto__ = function iter__44492(s__44493) {
      return new cljs.core.LazySeq(null, function() {
        var s__44493__$1 = s__44493;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__44493__$1);
          if (temp__4126__auto__) {
            var s__44493__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__44493__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__44493__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__44495 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__44494 = 0;
                while (true) {
                  if (i__44494 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__44494);
                    cljs.core.chunk_append.call(null, b__44495, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "key", "key", -1516042587), "row" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(row) + "col" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(col), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, 
                    row, (new cljs.core.Keyword(null, "row", "row", -570139521)).cljs$core$IFn$_invoke$arity$1(app)) && cljs.core._EQ_.call(null, col, (new cljs.core.Keyword(null, "col", "col", -1959363084)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : null, new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(i__44494, col, c__4276__auto__, size__4277__auto__, b__44495, s__44493__$2, temp__4126__auto__) {
                      return function() {
                        return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), col);
                      };
                    }(i__44494, col, c__4276__auto__, size__4277__auto__, b__44495, s__44493__$2, temp__4126__auto__), new cljs.core.Keyword(null, "onMouseLeave", "onMouseLeave", 1446726903), function(i__44494, col, c__4276__auto__, size__4277__auto__, b__44495, s__44493__$2, temp__4126__auto__) {
                      return function() {
                        return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), null);
                      };
                    }(i__44494, col, c__4276__auto__, size__4277__auto__, b__44495, s__44493__$2, temp__4126__auto__)], null), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, t3tr0s_slides.slide01.empty_board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null)))), " ")], null));
                    var G__44496 = i__44494 + 1;
                    i__44494 = G__44496;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__44495), iter__44492.call(null, cljs.core.chunk_rest.call(null, s__44493__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__44495), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__44493__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "key", "key", -1516042587), "row" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(row) + "col" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(col), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, row, (new cljs.core.Keyword(null, 
              "row", "row", -570139521)).cljs$core$IFn$_invoke$arity$1(app)) && cljs.core._EQ_.call(null, col, (new cljs.core.Keyword(null, "col", "col", -1959363084)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : null, new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(col, s__44493__$2, temp__4126__auto__) {
                return function() {
                  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), col);
                };
              }(col, s__44493__$2, temp__4126__auto__), new cljs.core.Keyword(null, "onMouseLeave", "onMouseLeave", 1446726903), function(col, s__44493__$2, temp__4126__auto__) {
                return function() {
                  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), null);
                };
              }(col, s__44493__$2, temp__4126__auto__)], null), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, t3tr0s_slides.slide01.empty_board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null)))), " ")], null), iter__44492.call(null, cljs.core.rest.call(null, s__44493__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide01.cols));
  }(), " ]"], null);
};
var ufv___44542 = schema.utils.use_fn_validation;
var output_schema44498_44543 = schema.core.Any;
var input_schema44499_44544 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker44500_44545 = schema.core.checker.call(null, input_schema44499_44544);
var output_checker44501_44546 = schema.core.checker.call(null, output_schema44498_44543);
t3tr0s_slides.slide01.code = function(ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546) {
  return function code(G__44502, G__44503) {
    var validate__5821__auto__ = ufv___44542.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___44547 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__44502, G__44503], null);
      var temp__4126__auto___44548 = input_checker44500_44545.call(null, args__5822__auto___44547);
      if (cljs.core.truth_(temp__4126__auto___44548)) {
        var error__5823__auto___44549 = temp__4126__auto___44548;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___44549)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema44499_44544, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___44547, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___44549], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__44502;
      var owner = G__44503;
      while (true) {
        if (typeof t3tr0s_slides.slide01.t44523 !== "undefined") {
        } else {
          t3tr0s_slides.slide01.t44523 = function(owner, input_schema44499, validate__5821__auto__, G__44502, G__44503, output_checker44501, output_schema44498, app, input_checker44500, ufv__, code, meta44524) {
            this.owner = owner;
            this.input_schema44499 = input_schema44499;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__44502 = G__44502;
            this.G__44503 = G__44503;
            this.output_checker44501 = output_checker44501;
            this.output_schema44498 = output_schema44498;
            this.app = app;
            this.input_checker44500 = input_checker44500;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta44524 = meta44524;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide01.t44523.cljs$lang$type = true;
          t3tr0s_slides.slide01.t44523.cljs$lang$ctorStr = "t3tr0s-slides.slide01/t44523";
          t3tr0s_slides.slide01.t44523.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide01/t44523");
            };
          }(validate__5821__auto__, ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546);
          t3tr0s_slides.slide01.t44523.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide01.t44523.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code({"id":"lang-clj", "ref":"code"}, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " rows ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "20")), ")\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " cols ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, 
              "10")), ")\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " empty-row (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vec")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "repeat")), " cols ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "0")), ")))\n", "(", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "def")), " empty-board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vec")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "repeat")), " rows empty-row)))\n"), React.DOM.code(null, "\x3e empty-board\n\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: mouse over the zeros.")), "\n", "\n", 
              cljs.core.into_array.call(null, function() {
                var iter__4278__auto__ = function(___$1, validate__5821__auto__, ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546) {
                  return function iter__44526(s__44527) {
                    return new cljs.core.LazySeq(null, function(___$1, validate__5821__auto__, ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546) {
                      return function() {
                        var s__44527__$1 = s__44527;
                        while (true) {
                          var temp__4126__auto__ = cljs.core.seq.call(null, s__44527__$1);
                          if (temp__4126__auto__) {
                            var s__44527__$2 = temp__4126__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__44527__$2)) {
                              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__44527__$2);
                              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                              var b__44529 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                              if (function() {
                                var i__44528 = 0;
                                while (true) {
                                  if (i__44528 < size__4277__auto__) {
                                    var row = cljs.core._nth.call(null, c__4276__auto__, i__44528);
                                    cljs.core.chunk_append.call(null, b__44529, sablono.interpreter.interpret.call(null, function() {
                                      var pred__44536 = cljs.core._EQ_;
                                      var expr__44537 = row;
                                      if (cljs.core.truth_(pred__44536.call(null, 0, expr__44537))) {
                                        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "  [");
                                      } else {
                                        if (cljs.core.truth_(pred__44536.call(null, t3tr0s_slides.slide01.rows - 1, expr__44537))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "   ");
                                        } else {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "   ");
                                        }
                                      }
                                    }()));
                                    var G__44550 = i__44528 + 1;
                                    i__44528 = G__44550;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__44529), iter__44526.call(null, cljs.core.chunk_rest.call(null, s__44527__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__44529), null);
                              }
                            } else {
                              var row = cljs.core.first.call(null, s__44527__$2);
                              return cljs.core.cons.call(null, sablono.interpreter.interpret.call(null, function() {
                                var pred__44539 = cljs.core._EQ_;
                                var expr__44540 = row;
                                if (cljs.core.truth_(pred__44539.call(null, 0, expr__44540))) {
                                  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "  [");
                                } else {
                                  if (cljs.core.truth_(pred__44539.call(null, t3tr0s_slides.slide01.rows - 1, expr__44540))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "   ");
                                  } else {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "   ");
                                  }
                                }
                              }()), iter__44526.call(null, cljs.core.rest.call(null, s__44527__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(___$1, validate__5821__auto__, ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546), null, null);
                  };
                }(___$1, validate__5821__auto__, ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546);
                return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide01.rows));
              }()))));
            };
          }(validate__5821__auto__, ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546);
          t3tr0s_slides.slide01.t44523.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546) {
            return function(_44525) {
              var self__ = this;
              var _44525__$1 = this;
              return self__.meta44524;
            };
          }(validate__5821__auto__, ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546);
          t3tr0s_slides.slide01.t44523.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546) {
            return function(_44525, meta44524__$1) {
              var self__ = this;
              var _44525__$1 = this;
              return new t3tr0s_slides.slide01.t44523(self__.owner, self__.input_schema44499, self__.validate__5821__auto__, self__.G__44502, self__.G__44503, self__.output_checker44501, self__.output_schema44498, self__.app, self__.input_checker44500, self__.ufv__, self__.code, meta44524__$1);
            };
          }(validate__5821__auto__, ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546);
          t3tr0s_slides.slide01.__GT_t44523 = function(validate__5821__auto__, ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546) {
            return function __GT_t44523(owner__$1, input_schema44499__$1, validate__5821__auto____$1, G__44502__$1, G__44503__$1, output_checker44501__$1, output_schema44498__$1, app__$1, input_checker44500__$1, ufv____$1, code__$1, meta44524) {
              return new t3tr0s_slides.slide01.t44523(owner__$1, input_schema44499__$1, validate__5821__auto____$1, G__44502__$1, G__44503__$1, output_checker44501__$1, output_schema44498__$1, app__$1, input_checker44500__$1, ufv____$1, code__$1, meta44524);
            };
          }(validate__5821__auto__, ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546);
        }
        return new t3tr0s_slides.slide01.t44523(owner, input_schema44499_44544, validate__5821__auto__, G__44502, G__44503, output_checker44501_44546, output_schema44498_44543, app, input_checker44500_44545, ufv___44542, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___44551 = output_checker44501_44546.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___44551)) {
        var error__5823__auto___44552 = temp__4126__auto___44551;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___44552)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema44498_44543, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___44552], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___44542, output_schema44498_44543, input_schema44499_44544, input_checker44500_44545, output_checker44501_44546);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide01.code), schema.core.make_fn_schema.call(null, output_schema44498_44543, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema44499_44544], null)));
t3tr0s_slides.slide01.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide01.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m44497) {
    return om.core.build.call(null, t3tr0s_slides.slide01.code, cursor__9685__auto__, m44497);
  };
  __GT_code = function(cursor__9685__auto__, m44497) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m44497);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide01.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide01.rows);
t3tr0s_slides.slide01.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide01.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide01.cell_size);
  om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "row", "row", -570139521), row);
  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), col);
};
t3tr0s_slides.slide01.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__44553) {
  var vec__44555 = p__44553;
  var x = cljs.core.nth.call(null, vec__44555, 0, null);
  var y = cljs.core.nth.call(null, vec__44555, 1, null);
  var rx = t3tr0s_slides.slide01.cell_size * x;
  var ry = t3tr0s_slides.slide01.cell_size * y;
  var rs = t3tr0s_slides.slide01.cell_size;
  ctx.fillRect(rx, ry, rs, rs);
  return ctx.strokeRect(rx, ry, rs, rs);
};
t3tr0s_slides.slide01.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  var x = (new cljs.core.Keyword(null, "col", "col", -1959363084)).cljs$core$IFn$_invoke$arity$1(app);
  var y = (new cljs.core.Keyword(null, "row", "row", -570139521)).cljs$core$IFn$_invoke$arity$1(app);
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide01.cell_size * t3tr0s_slides.slide01.cols, t3tr0s_slides.slide01.cell_size * t3tr0s_slides.slide01.rows);
  ctx.lineWidth = 2;
  if (cljs.core.truth_(y)) {
    ctx.fillStyle = t3tr0s_slides.slide01.dark_green;
    ctx.strokeStyle = t3tr0s_slides.slide01.light_green;
    var seq__44562_44568 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide01.cols));
    var chunk__44564_44569 = null;
    var count__44565_44570 = 0;
    var i__44566_44571 = 0;
    while (true) {
      if (i__44566_44571 < count__44565_44570) {
        var x0_44572 = cljs.core._nth.call(null, chunk__44564_44569, i__44566_44571);
        if (cljs.core.not_EQ_.call(null, x0_44572, x)) {
          t3tr0s_slides.slide01.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x0_44572, y], null));
          var G__44573 = seq__44562_44568;
          var G__44574 = chunk__44564_44569;
          var G__44575 = count__44565_44570;
          var G__44576 = i__44566_44571 + 1;
          seq__44562_44568 = G__44573;
          chunk__44564_44569 = G__44574;
          count__44565_44570 = G__44575;
          i__44566_44571 = G__44576;
          continue;
        } else {
          var G__44577 = seq__44562_44568;
          var G__44578 = chunk__44564_44569;
          var G__44579 = count__44565_44570;
          var G__44580 = i__44566_44571 + 1;
          seq__44562_44568 = G__44577;
          chunk__44564_44569 = G__44578;
          count__44565_44570 = G__44579;
          i__44566_44571 = G__44580;
          continue;
        }
      } else {
        var temp__4126__auto___44581 = cljs.core.seq.call(null, seq__44562_44568);
        if (temp__4126__auto___44581) {
          var seq__44562_44582__$1 = temp__4126__auto___44581;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__44562_44582__$1)) {
            var c__4309__auto___44583 = cljs.core.chunk_first.call(null, seq__44562_44582__$1);
            var G__44584 = cljs.core.chunk_rest.call(null, seq__44562_44582__$1);
            var G__44585 = c__4309__auto___44583;
            var G__44586 = cljs.core.count.call(null, c__4309__auto___44583);
            var G__44587 = 0;
            seq__44562_44568 = G__44584;
            chunk__44564_44569 = G__44585;
            count__44565_44570 = G__44586;
            i__44566_44571 = G__44587;
            continue;
          } else {
            var x0_44588 = cljs.core.first.call(null, seq__44562_44582__$1);
            if (cljs.core.not_EQ_.call(null, x0_44588, x)) {
              t3tr0s_slides.slide01.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x0_44588, y], null));
              var G__44589 = cljs.core.next.call(null, seq__44562_44582__$1);
              var G__44590 = null;
              var G__44591 = 0;
              var G__44592 = 0;
              seq__44562_44568 = G__44589;
              chunk__44564_44569 = G__44590;
              count__44565_44570 = G__44591;
              i__44566_44571 = G__44592;
              continue;
            } else {
              var G__44593 = cljs.core.next.call(null, seq__44562_44582__$1);
              var G__44594 = null;
              var G__44595 = 0;
              var G__44596 = 0;
              seq__44562_44568 = G__44593;
              chunk__44564_44569 = G__44594;
              count__44565_44570 = G__44595;
              i__44566_44571 = G__44596;
              continue;
            }
          }
        } else {
        }
      }
      break;
    }
    ctx.fillStyle = t3tr0s_slides.slide01.dark_purple;
    ctx.strokeStyle = t3tr0s_slides.slide01.light_purple;
    if (cljs.core.truth_(x)) {
      return t3tr0s_slides.slide01.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
var ufv___44611 = schema.utils.use_fn_validation;
var output_schema44599_44612 = schema.core.Any;
var input_schema44600_44613 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker44601_44614 = schema.core.checker.call(null, input_schema44600_44613);
var output_checker44602_44615 = schema.core.checker.call(null, output_schema44599_44612);
t3tr0s_slides.slide01.canvas = function(ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615) {
  return function canvas(G__44603, G__44604) {
    var validate__5821__auto__ = ufv___44611.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___44616 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__44603, G__44604], null);
      var temp__4126__auto___44617 = input_checker44601_44614.call(null, args__5822__auto___44616);
      if (cljs.core.truth_(temp__4126__auto___44617)) {
        var error__5823__auto___44618 = temp__4126__auto___44617;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___44618)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema44600_44613, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___44616, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___44618], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__44603;
      var owner = G__44604;
      while (true) {
        if (typeof t3tr0s_slides.slide01.t44608 !== "undefined") {
        } else {
          t3tr0s_slides.slide01.t44608 = function(G__44604, owner, output_checker44602, validate__5821__auto__, output_schema44599, input_checker44601, input_schema44600, G__44603, canvas, app, ufv__, meta44609) {
            this.G__44604 = G__44604;
            this.owner = owner;
            this.output_checker44602 = output_checker44602;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema44599 = output_schema44599;
            this.input_checker44601 = input_checker44601;
            this.input_schema44600 = input_schema44600;
            this.G__44603 = G__44603;
            this.canvas = canvas;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta44609 = meta44609;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide01.t44608.cljs$lang$type = true;
          t3tr0s_slides.slide01.t44608.cljs$lang$ctorStr = "t3tr0s-slides.slide01/t44608";
          t3tr0s_slides.slide01.t44608.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide01/t44608");
            };
          }(validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615);
          t3tr0s_slides.slide01.t44608.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide01.t44608.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseMove":function(___$1, validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615) {
                return function(p1__44597_SHARP_) {
                  return t3tr0s_slides.slide01.canvas_mouse.call(null, self__.app, self__.owner, p1__44597_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615), "onMouseLeave":function(___$1, validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615) {
                return function() {
                  om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "row", "row", -570139521), null);
                  return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "col", "col", -1959363084), null);
                };
              }(___$1, validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615)}));
            };
          }(validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615);
          t3tr0s_slides.slide01.t44608.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide01.t44608.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide01.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615);
          t3tr0s_slides.slide01.t44608.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide01.t44608.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide01.cols * t3tr0s_slides.slide01.cell_size;
              canvas__$2.height = t3tr0s_slides.slide01.rows * t3tr0s_slides.slide01.cell_size;
              return t3tr0s_slides.slide01.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615);
          t3tr0s_slides.slide01.t44608.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615) {
            return function(_44610) {
              var self__ = this;
              var _44610__$1 = this;
              return self__.meta44609;
            };
          }(validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615);
          t3tr0s_slides.slide01.t44608.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615) {
            return function(_44610, meta44609__$1) {
              var self__ = this;
              var _44610__$1 = this;
              return new t3tr0s_slides.slide01.t44608(self__.G__44604, self__.owner, self__.output_checker44602, self__.validate__5821__auto__, self__.output_schema44599, self__.input_checker44601, self__.input_schema44600, self__.G__44603, self__.canvas, self__.app, self__.ufv__, meta44609__$1);
            };
          }(validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615);
          t3tr0s_slides.slide01.__GT_t44608 = function(validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615) {
            return function __GT_t44608(G__44604__$1, owner__$1, output_checker44602__$1, validate__5821__auto____$1, output_schema44599__$1, input_checker44601__$1, input_schema44600__$1, G__44603__$1, canvas__$1, app__$1, ufv____$1, meta44609) {
              return new t3tr0s_slides.slide01.t44608(G__44604__$1, owner__$1, output_checker44602__$1, validate__5821__auto____$1, output_schema44599__$1, input_checker44601__$1, input_schema44600__$1, G__44603__$1, canvas__$1, app__$1, ufv____$1, meta44609);
            };
          }(validate__5821__auto__, ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615);
        }
        return new t3tr0s_slides.slide01.t44608(G__44604, owner, output_checker44602_44615, validate__5821__auto__, output_schema44599_44612, input_checker44601_44614, input_schema44600_44613, G__44603, canvas, app, ufv___44611, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___44619 = output_checker44602_44615.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___44619)) {
        var error__5823__auto___44620 = temp__4126__auto___44619;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___44620)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema44599_44612, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___44620], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___44611, output_schema44599_44612, input_schema44600_44613, input_checker44601_44614, output_checker44602_44615);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide01.canvas), schema.core.make_fn_schema.call(null, output_schema44599_44612, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema44600_44613], null)));
t3tr0s_slides.slide01.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide01.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m44598) {
    return om.core.build.call(null, t3tr0s_slides.slide01.canvas, cursor__9685__auto__, m44598);
  };
  __GT_canvas = function(cursor__9685__auto__, m44598) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m44598);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___44638 = schema.utils.use_fn_validation;
var output_schema44622_44639 = schema.core.Any;
var input_schema44623_44640 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker44624_44641 = schema.core.checker.call(null, input_schema44623_44640);
var output_checker44625_44642 = schema.core.checker.call(null, output_schema44622_44639);
t3tr0s_slides.slide01.slide = function(ufv___44638, output_schema44622_44639, input_schema44623_44640, input_checker44624_44641, output_checker44625_44642) {
  return function slide(G__44626, G__44627) {
    var validate__5821__auto__ = ufv___44638.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___44643 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__44626, G__44627], null);
      var temp__4126__auto___44644 = input_checker44624_44641.call(null, args__5822__auto___44643);
      if (cljs.core.truth_(temp__4126__auto___44644)) {
        var error__5823__auto___44645 = temp__4126__auto___44644;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___44645)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema44623_44640, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___44643, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___44645], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__44626;
      var owner = G__44627;
      while (true) {
        if (typeof t3tr0s_slides.slide01.t44633 !== "undefined") {
        } else {
          t3tr0s_slides.slide01.t44633 = function(input_schema44623, owner, output_checker44625, G__44627, validate__5821__auto__, output_schema44622, G__44626, input_checker44624, slide, app, ufv__, meta44634) {
            this.input_schema44623 = input_schema44623;
            this.owner = owner;
            this.output_checker44625 = output_checker44625;
            this.G__44627 = G__44627;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema44622 = output_schema44622;
            this.G__44626 = G__44626;
            this.input_checker44624 = input_checker44624;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta44634 = meta44634;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide01.t44633.cljs$lang$type = true;
          t3tr0s_slides.slide01.t44633.cljs$lang$ctorStr = "t3tr0s-slides.slide01/t44633";
          t3tr0s_slides.slide01.t44633.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___44638, output_schema44622_44639, input_schema44623_44640, input_checker44624_44641, output_checker44625_44642) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide01/t44633");
            };
          }(validate__5821__auto__, ufv___44638, output_schema44622_44639, input_schema44623_44640, input_checker44624_44641, output_checker44625_44642);
          t3tr0s_slides.slide01.t44633.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide01.t44633.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___44638, output_schema44622_44639, input_schema44623_44640, input_checker44624_44641, output_checker44625_44642) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "1. Create the board."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide01.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide01.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___44638, output_schema44622_44639, input_schema44623_44640, input_checker44624_44641, output_checker44625_44642);
          t3tr0s_slides.slide01.t44633.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___44638, output_schema44622_44639, input_schema44623_44640, input_checker44624_44641, output_checker44625_44642) {
            return function(_44635) {
              var self__ = this;
              var _44635__$1 = this;
              return self__.meta44634;
            };
          }(validate__5821__auto__, ufv___44638, output_schema44622_44639, input_schema44623_44640, input_checker44624_44641, output_checker44625_44642);
          t3tr0s_slides.slide01.t44633.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___44638, output_schema44622_44639, input_schema44623_44640, input_checker44624_44641, output_checker44625_44642) {
            return function(_44635, meta44634__$1) {
              var self__ = this;
              var _44635__$1 = this;
              return new t3tr0s_slides.slide01.t44633(self__.input_schema44623, self__.owner, self__.output_checker44625, self__.G__44627, self__.validate__5821__auto__, self__.output_schema44622, self__.G__44626, self__.input_checker44624, self__.slide, self__.app, self__.ufv__, meta44634__$1);
            };
          }(validate__5821__auto__, ufv___44638, output_schema44622_44639, input_schema44623_44640, input_checker44624_44641, output_checker44625_44642);
          t3tr0s_slides.slide01.__GT_t44633 = function(validate__5821__auto__, ufv___44638, output_schema44622_44639, input_schema44623_44640, input_checker44624_44641, output_checker44625_44642) {
            return function __GT_t44633(input_schema44623__$1, owner__$1, output_checker44625__$1, G__44627__$1, validate__5821__auto____$1, output_schema44622__$1, G__44626__$1, input_checker44624__$1, slide__$1, app__$1, ufv____$1, meta44634) {
              return new t3tr0s_slides.slide01.t44633(input_schema44623__$1, owner__$1, output_checker44625__$1, G__44627__$1, validate__5821__auto____$1, output_schema44622__$1, G__44626__$1, input_checker44624__$1, slide__$1, app__$1, ufv____$1, meta44634);
            };
          }(validate__5821__auto__, ufv___44638, output_schema44622_44639, input_schema44623_44640, input_checker44624_44641, output_checker44625_44642);
        }
        return new t3tr0s_slides.slide01.t44633(input_schema44623_44640, owner, output_checker44625_44642, G__44627, validate__5821__auto__, output_schema44622_44639, G__44626, input_checker44624_44641, slide, app, ufv___44638, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___44646 = output_checker44625_44642.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___44646)) {
        var error__5823__auto___44647 = temp__4126__auto___44646;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___44647)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema44622_44639, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___44647], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___44638, output_schema44622_44639, input_schema44623_44640, input_checker44624_44641, output_checker44625_44642);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide01.slide), schema.core.make_fn_schema.call(null, output_schema44622_44639, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema44623_44640], null)));
t3tr0s_slides.slide01.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide01.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m44621) {
    return om.core.build.call(null, t3tr0s_slides.slide01.slide, cursor__9685__auto__, m44621);
  };
  __GT_slide = function(cursor__9685__auto__, m44621) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m44621);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide01.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide01.slide, t3tr0s_slides.slide01.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide01.resume = function resume() {
  return null;
};
t3tr0s_slides.slide01.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide00");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide00.dark_green = "#143";
t3tr0s_slides.slide00.light_green = "#175";
t3tr0s_slides.slide00.dark_purple = "#449";
t3tr0s_slides.slide00.light_purple = "#6ad";
t3tr0s_slides.slide00.dark_red = "#944";
t3tr0s_slides.slide00.light_red = "#f8c";
t3tr0s_slides.slide00.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide00.rotate_coord = function rotate_coord(p__44262) {
  var vec__44264 = p__44262;
  var x = cljs.core.nth.call(null, vec__44264, 0, null);
  var y = cljs.core.nth.call(null, vec__44264, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide00.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide00.rotate_coord, piece);
};
t3tr0s_slides.slide00.rows = 20;
t3tr0s_slides.slide00.cols = 10;
t3tr0s_slides.slide00.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide00.cols, 0));
t3tr0s_slides.slide00.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide00.rows, t3tr0s_slides.slide00.empty_row));
t3tr0s_slides.slide00.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 1, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 
0, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 1, 0, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 1, 1, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 1, 1, 0, 1, 1, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide00.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide00.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide00.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.last.call(null, cljs.core.take.call(null, 4, cljs.core.iterate.call(null, t3tr0s_slides.slide00.rotate_piece, (new cljs.core.Keyword(null, "L", "L", -1038307519)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide00.pieces)))), new cljs.core.Keyword(null, 
"position", "position", -2011731912), t3tr0s_slides.slide00.initial_pos], null));
t3tr0s_slides.slide00.write_piece = function write_piece(board, coords, p__44265) {
  while (true) {
    var vec__44269 = p__44265;
    var cx = cljs.core.nth.call(null, vec__44269, 0, null);
    var cy = cljs.core.nth.call(null, vec__44269, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__44270 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__44270, 0, null);
      var y = cljs.core.nth.call(null, vec__44270, 1, null);
      var G__44272 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e44271) {
          if (e44271 instanceof Error) {
            var _ = e44271;
            return board;
          } else {
            throw e44271;
          }
        }
      }();
      var G__44273 = cljs.core.rest.call(null, coords);
      var G__44274 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__44272;
      coords = G__44273;
      p__44265 = G__44274;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide00.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__44276 = cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state);
  var map__44276__$1 = cljs.core.seq_QMARK_.call(null, map__44276) ? cljs.core.apply.call(null, cljs.core.hash_map, map__44276) : map__44276;
  var position = cljs.core.get.call(null, map__44276__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__44276__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide00.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide00.write_piece, piece, position);
};
t3tr0s_slides.slide00.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__44277) {
  var vec__44281 = p__44277;
  var cx = cljs.core.nth.call(null, vec__44281, 0, null);
  var cy = cljs.core.nth.call(null, vec__44281, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__44281, cx, cy) {
    return function(p__44282) {
      var vec__44283 = p__44282;
      var x = cljs.core.nth.call(null, vec__44283, 0, null);
      var y = cljs.core.nth.call(null, vec__44283, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__44281, cx, cy), piece);
};
t3tr0s_slides.slide00.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide00.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide00.app_state))));
};
t3tr0s_slides.slide00.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__44288(s__44289) {
      return new cljs.core.LazySeq(null, function() {
        var s__44289__$1 = s__44289;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__44289__$1);
          if (temp__4126__auto__) {
            var s__44289__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__44289__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__44289__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__44291 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__44290 = 0;
                while (true) {
                  if (i__44290 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__44290);
                    cljs.core.chunk_append.call(null, b__44291, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))));
                    var G__44292 = i__44290 + 1;
                    i__44290 = G__44292;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__44291), iter__44288.call(null, cljs.core.chunk_rest.call(null, s__44289__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__44291), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__44289__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))), iter__44288.call(null, cljs.core.rest.call(null, s__44289__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide00.cols));
  }(), " ]"], null);
};
var ufv___44308 = schema.utils.use_fn_validation;
var output_schema44294_44309 = schema.core.Any;
var input_schema44295_44310 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker44296_44311 = schema.core.checker.call(null, input_schema44295_44310);
var output_checker44297_44312 = schema.core.checker.call(null, output_schema44294_44309);
t3tr0s_slides.slide00.code = function(ufv___44308, output_schema44294_44309, input_schema44295_44310, input_checker44296_44311, output_checker44297_44312) {
  return function code(G__44298, G__44299) {
    var validate__5821__auto__ = ufv___44308.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___44313 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__44298, G__44299], null);
      var temp__4126__auto___44314 = input_checker44296_44311.call(null, args__5822__auto___44313);
      if (cljs.core.truth_(temp__4126__auto___44314)) {
        var error__5823__auto___44315 = temp__4126__auto___44314;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___44315)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema44295_44310, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___44313, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___44315], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__44298;
      var owner = G__44299;
      while (true) {
        if (typeof t3tr0s_slides.slide00.t44304 !== "undefined") {
        } else {
          t3tr0s_slides.slide00.t44304 = function(owner, G__44298, output_checker44297, validate__5821__auto__, G__44299, input_schema44295, input_checker44296, output_schema44294, app, ufv__, code, meta44305) {
            this.owner = owner;
            this.G__44298 = G__44298;
            this.output_checker44297 = output_checker44297;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__44299 = G__44299;
            this.input_schema44295 = input_schema44295;
            this.input_checker44296 = input_checker44296;
            this.output_schema44294 = output_schema44294;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta44305 = meta44305;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide00.t44304.cljs$lang$type = true;
          t3tr0s_slides.slide00.t44304.cljs$lang$ctorStr = "t3tr0s-slides.slide00/t44304";
          t3tr0s_slides.slide00.t44304.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___44308, output_schema44294_44309, input_schema44295_44310, input_checker44296_44311, output_checker44297_44312) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide00/t44304");
            };
          }(validate__5821__auto__, ufv___44308, output_schema44294_44309, input_schema44295_44310, input_checker44296_44311, output_checker44297_44312);
          t3tr0s_slides.slide00.t44304.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide00.t44304.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___44308, output_schema44294_44309, input_schema44295_44310, input_checker44296_44311, output_checker44297_44312) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs44307 = t3tr0s_slides.syntax_highlight.cmt.call(null, ";; This is an animated \x26 interactive guide to ");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs44307) ? sablono.interpreter.attributes.call(null, attrs44307) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs44307) ? new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; building a game in ClojureScript, because")), "\n", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; I find the design patterns very interesting.")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; This requires some knowledge of ClojureScript,")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; which you can find ", t3tr0s_slides.syntax_highlight.kw.call(null, new cljs.core.PersistentVector(null, 
                3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "https://github.com/shaunlebron/ClojureScript-Syntax-in-15-minutes"], null), "here"], null)), ".")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Created by ", t3tr0s_slides.syntax_highlight.core.call(null, new cljs.core.PersistentVector(null, 
                3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "http://twitter.com/shaunlebron"], null), "@shaunlebron"], null)))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Styling borrowed from ", t3tr0s_slides.syntax_highlight.lit.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "http://twitter.com/ibdknox"], null), "@ibdknox"], null)), " :)")), "\n", "\n\n\n\n\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; ")), "SHIFT + RIGHT for next slide", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, " ----------------\x3e\x3e"))], 
                null) : new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs44307), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; building a game in ClojureScript, because")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; I find the design patterns very interesting.")), "\n", "\n", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.cmt.call(null, ";; This requires some knowledge of ClojureScript,")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; which you can find ", t3tr0s_slides.syntax_highlight.kw.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", 
                -793805698), "https://github.com/shaunlebron/ClojureScript-Syntax-in-15-minutes"], null), "here"], null)), ".")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Created by ", t3tr0s_slides.syntax_highlight.core.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", 
                "href", -793805698), "http://twitter.com/shaunlebron"], null), "@shaunlebron"], null)))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Styling borrowed from ", t3tr0s_slides.syntax_highlight.lit.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), 
                "http://twitter.com/ibdknox"], null), "@ibdknox"], null)), " :)")), "\n", "\n\n\n\n\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; ")), "SHIFT + RIGHT for next slide", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, " ----------------\x3e\x3e"))], null)));
              }()));
            };
          }(validate__5821__auto__, ufv___44308, output_schema44294_44309, input_schema44295_44310, input_checker44296_44311, output_checker44297_44312);
          t3tr0s_slides.slide00.t44304.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___44308, output_schema44294_44309, input_schema44295_44310, input_checker44296_44311, output_checker44297_44312) {
            return function(_44306) {
              var self__ = this;
              var _44306__$1 = this;
              return self__.meta44305;
            };
          }(validate__5821__auto__, ufv___44308, output_schema44294_44309, input_schema44295_44310, input_checker44296_44311, output_checker44297_44312);
          t3tr0s_slides.slide00.t44304.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___44308, output_schema44294_44309, input_schema44295_44310, input_checker44296_44311, output_checker44297_44312) {
            return function(_44306, meta44305__$1) {
              var self__ = this;
              var _44306__$1 = this;
              return new t3tr0s_slides.slide00.t44304(self__.owner, self__.G__44298, self__.output_checker44297, self__.validate__5821__auto__, self__.G__44299, self__.input_schema44295, self__.input_checker44296, self__.output_schema44294, self__.app, self__.ufv__, self__.code, meta44305__$1);
            };
          }(validate__5821__auto__, ufv___44308, output_schema44294_44309, input_schema44295_44310, input_checker44296_44311, output_checker44297_44312);
          t3tr0s_slides.slide00.__GT_t44304 = function(validate__5821__auto__, ufv___44308, output_schema44294_44309, input_schema44295_44310, input_checker44296_44311, output_checker44297_44312) {
            return function __GT_t44304(owner__$1, G__44298__$1, output_checker44297__$1, validate__5821__auto____$1, G__44299__$1, input_schema44295__$1, input_checker44296__$1, output_schema44294__$1, app__$1, ufv____$1, code__$1, meta44305) {
              return new t3tr0s_slides.slide00.t44304(owner__$1, G__44298__$1, output_checker44297__$1, validate__5821__auto____$1, G__44299__$1, input_schema44295__$1, input_checker44296__$1, output_schema44294__$1, app__$1, ufv____$1, code__$1, meta44305);
            };
          }(validate__5821__auto__, ufv___44308, output_schema44294_44309, input_schema44295_44310, input_checker44296_44311, output_checker44297_44312);
        }
        return new t3tr0s_slides.slide00.t44304(owner, G__44298, output_checker44297_44312, validate__5821__auto__, G__44299, input_schema44295_44310, input_checker44296_44311, output_schema44294_44309, app, ufv___44308, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___44316 = output_checker44297_44312.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___44316)) {
        var error__5823__auto___44317 = temp__4126__auto___44316;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___44317)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema44294_44309, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___44317], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___44308, output_schema44294_44309, input_schema44295_44310, input_checker44296_44311, output_checker44297_44312);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide00.code), schema.core.make_fn_schema.call(null, output_schema44294_44309, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema44295_44310], null)));
t3tr0s_slides.slide00.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide00.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m44293) {
    return om.core.build.call(null, t3tr0s_slides.slide00.code, cursor__9685__auto__, m44293);
  };
  __GT_code = function(cursor__9685__auto__, m44293) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m44293);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide00.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide00.rows);
t3tr0s_slides.slide00.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__44318, is_center) {
  var vec__44320 = p__44318;
  var x = cljs.core.nth.call(null, vec__44320, 0, null);
  var y = cljs.core.nth.call(null, vec__44320, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide00.cell_size * x;
  var ry = t3tr0s_slides.slide00.cell_size * y;
  var rs = t3tr0s_slides.slide00.cell_size;
  var cx = t3tr0s_slides.slide00.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide00.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide00.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide00.piece_abs_coords = function piece_abs_coords(piece, p__44321) {
  var vec__44325 = p__44321;
  var cx = cljs.core.nth.call(null, vec__44325, 0, null);
  var cy = cljs.core.nth.call(null, vec__44325, 1, null);
  return cljs.core.mapv.call(null, function(vec__44325, cx, cy) {
    return function(p__44326) {
      var vec__44327 = p__44326;
      var x = cljs.core.nth.call(null, vec__44327, 0, null);
      var y = cljs.core.nth.call(null, vec__44327, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__44325, cx, cy), piece);
};
t3tr0s_slides.slide00.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__44334 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide00.piece_abs_coords.call(null, piece, pos)));
  var chunk__44335 = null;
  var count__44336 = 0;
  var i__44337 = 0;
  while (true) {
    if (i__44337 < count__44336) {
      var vec__44338 = cljs.core._nth.call(null, chunk__44335, i__44337);
      var i = cljs.core.nth.call(null, vec__44338, 0, null);
      var c = cljs.core.nth.call(null, vec__44338, 1, null);
      t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__44340 = seq__44334;
      var G__44341 = chunk__44335;
      var G__44342 = count__44336;
      var G__44343 = i__44337 + 1;
      seq__44334 = G__44340;
      chunk__44335 = G__44341;
      count__44336 = G__44342;
      i__44337 = G__44343;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__44334);
      if (temp__4126__auto__) {
        var seq__44334__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__44334__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__44334__$1);
          var G__44344 = cljs.core.chunk_rest.call(null, seq__44334__$1);
          var G__44345 = c__4309__auto__;
          var G__44346 = cljs.core.count.call(null, c__4309__auto__);
          var G__44347 = 0;
          seq__44334 = G__44344;
          chunk__44335 = G__44345;
          count__44336 = G__44346;
          i__44337 = G__44347;
          continue;
        } else {
          var vec__44339 = cljs.core.first.call(null, seq__44334__$1);
          var i = cljs.core.nth.call(null, vec__44339, 0, null);
          var c = cljs.core.nth.call(null, vec__44339, 1, null);
          t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__44348 = cljs.core.next.call(null, seq__44334__$1);
          var G__44349 = null;
          var G__44350 = 0;
          var G__44351 = 0;
          seq__44334 = G__44348;
          chunk__44335 = G__44349;
          count__44336 = G__44350;
          i__44337 = G__44351;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide00.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__44364 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide00.rows));
  var chunk__44369 = null;
  var count__44370 = 0;
  var i__44371 = 0;
  while (true) {
    if (i__44371 < count__44370) {
      var y = cljs.core._nth.call(null, chunk__44369, i__44371);
      var seq__44372_44376 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide00.cols));
      var chunk__44373_44377 = null;
      var count__44374_44378 = 0;
      var i__44375_44379 = 0;
      while (true) {
        if (i__44375_44379 < count__44374_44378) {
          var x_44380 = cljs.core._nth.call(null, chunk__44373_44377, i__44375_44379);
          var v_44381 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_44380], null));
          if (v_44381 === 0) {
          } else {
            t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_44380, y], null), false);
          }
          var G__44382 = seq__44372_44376;
          var G__44383 = chunk__44373_44377;
          var G__44384 = count__44374_44378;
          var G__44385 = i__44375_44379 + 1;
          seq__44372_44376 = G__44382;
          chunk__44373_44377 = G__44383;
          count__44374_44378 = G__44384;
          i__44375_44379 = G__44385;
          continue;
        } else {
          var temp__4126__auto___44386 = cljs.core.seq.call(null, seq__44372_44376);
          if (temp__4126__auto___44386) {
            var seq__44372_44387__$1 = temp__4126__auto___44386;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__44372_44387__$1)) {
              var c__4309__auto___44388 = cljs.core.chunk_first.call(null, seq__44372_44387__$1);
              var G__44389 = cljs.core.chunk_rest.call(null, seq__44372_44387__$1);
              var G__44390 = c__4309__auto___44388;
              var G__44391 = cljs.core.count.call(null, c__4309__auto___44388);
              var G__44392 = 0;
              seq__44372_44376 = G__44389;
              chunk__44373_44377 = G__44390;
              count__44374_44378 = G__44391;
              i__44375_44379 = G__44392;
              continue;
            } else {
              var x_44393 = cljs.core.first.call(null, seq__44372_44387__$1);
              var v_44394 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_44393], null));
              if (v_44394 === 0) {
              } else {
                t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_44393, y], null), false);
              }
              var G__44395 = cljs.core.next.call(null, seq__44372_44387__$1);
              var G__44396 = null;
              var G__44397 = 0;
              var G__44398 = 0;
              seq__44372_44376 = G__44395;
              chunk__44373_44377 = G__44396;
              count__44374_44378 = G__44397;
              i__44375_44379 = G__44398;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__44399 = seq__44364;
      var G__44400 = chunk__44369;
      var G__44401 = count__44370;
      var G__44402 = i__44371 + 1;
      seq__44364 = G__44399;
      chunk__44369 = G__44400;
      count__44370 = G__44401;
      i__44371 = G__44402;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__44364);
      if (temp__4126__auto__) {
        var seq__44364__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__44364__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__44364__$1);
          var G__44403 = cljs.core.chunk_rest.call(null, seq__44364__$1);
          var G__44404 = c__4309__auto__;
          var G__44405 = cljs.core.count.call(null, c__4309__auto__);
          var G__44406 = 0;
          seq__44364 = G__44403;
          chunk__44369 = G__44404;
          count__44370 = G__44405;
          i__44371 = G__44406;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__44364__$1);
          var seq__44365_44407 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide00.cols));
          var chunk__44366_44408 = null;
          var count__44367_44409 = 0;
          var i__44368_44410 = 0;
          while (true) {
            if (i__44368_44410 < count__44367_44409) {
              var x_44411 = cljs.core._nth.call(null, chunk__44366_44408, i__44368_44410);
              var v_44412 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_44411], null));
              if (v_44412 === 0) {
              } else {
                t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_44411, y], null), false);
              }
              var G__44413 = seq__44365_44407;
              var G__44414 = chunk__44366_44408;
              var G__44415 = count__44367_44409;
              var G__44416 = i__44368_44410 + 1;
              seq__44365_44407 = G__44413;
              chunk__44366_44408 = G__44414;
              count__44367_44409 = G__44415;
              i__44368_44410 = G__44416;
              continue;
            } else {
              var temp__4126__auto___44417__$1 = cljs.core.seq.call(null, seq__44365_44407);
              if (temp__4126__auto___44417__$1) {
                var seq__44365_44418__$1 = temp__4126__auto___44417__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__44365_44418__$1)) {
                  var c__4309__auto___44419 = cljs.core.chunk_first.call(null, seq__44365_44418__$1);
                  var G__44420 = cljs.core.chunk_rest.call(null, seq__44365_44418__$1);
                  var G__44421 = c__4309__auto___44419;
                  var G__44422 = cljs.core.count.call(null, c__4309__auto___44419);
                  var G__44423 = 0;
                  seq__44365_44407 = G__44420;
                  chunk__44366_44408 = G__44421;
                  count__44367_44409 = G__44422;
                  i__44368_44410 = G__44423;
                  continue;
                } else {
                  var x_44424 = cljs.core.first.call(null, seq__44365_44418__$1);
                  var v_44425 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_44424], null));
                  if (v_44425 === 0) {
                  } else {
                    t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_44424, y], null), false);
                  }
                  var G__44426 = cljs.core.next.call(null, seq__44365_44418__$1);
                  var G__44427 = null;
                  var G__44428 = 0;
                  var G__44429 = 0;
                  seq__44365_44407 = G__44426;
                  chunk__44366_44408 = G__44427;
                  count__44367_44409 = G__44428;
                  i__44368_44410 = G__44429;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__44430 = cljs.core.next.call(null, seq__44364__$1);
          var G__44431 = null;
          var G__44432 = 0;
          var G__44433 = 0;
          seq__44364 = G__44430;
          chunk__44369 = G__44431;
          count__44370 = G__44432;
          i__44371 = G__44433;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide00.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide00.cell_size * t3tr0s_slides.slide00.cols, t3tr0s_slides.slide00.cell_size * t3tr0s_slides.slide00.rows);
  ctx.fillStyle = t3tr0s_slides.slide00.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide00.light_green;
  t3tr0s_slides.slide00.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var fits = t3tr0s_slides.slide00.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = fits ? t3tr0s_slides.slide00.dark_purple : t3tr0s_slides.slide00.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide00.light_purple : t3tr0s_slides.slide00.light_red;
    return t3tr0s_slides.slide00.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
var ufv___44451 = schema.utils.use_fn_validation;
var output_schema44435_44452 = schema.core.Any;
var input_schema44436_44453 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker44437_44454 = schema.core.checker.call(null, input_schema44436_44453);
var output_checker44438_44455 = schema.core.checker.call(null, output_schema44435_44452);
t3tr0s_slides.slide00.canvas = function(ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455) {
  return function canvas(G__44439, G__44440) {
    var validate__5821__auto__ = ufv___44451.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___44456 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__44439, G__44440], null);
      var temp__4126__auto___44457 = input_checker44437_44454.call(null, args__5822__auto___44456);
      if (cljs.core.truth_(temp__4126__auto___44457)) {
        var error__5823__auto___44458 = temp__4126__auto___44457;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___44458)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema44436_44453, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___44456, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___44458], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__44439;
      var owner = G__44440;
      while (true) {
        if (typeof t3tr0s_slides.slide00.t44446 !== "undefined") {
        } else {
          t3tr0s_slides.slide00.t44446 = function(G__44440, owner, input_checker44437, validate__5821__auto__, output_schema44435, canvas, input_schema44436, output_checker44438, app, ufv__, G__44439, meta44447) {
            this.G__44440 = G__44440;
            this.owner = owner;
            this.input_checker44437 = input_checker44437;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema44435 = output_schema44435;
            this.canvas = canvas;
            this.input_schema44436 = input_schema44436;
            this.output_checker44438 = output_checker44438;
            this.app = app;
            this.ufv__ = ufv__;
            this.G__44439 = G__44439;
            this.meta44447 = meta44447;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide00.t44446.cljs$lang$type = true;
          t3tr0s_slides.slide00.t44446.cljs$lang$ctorStr = "t3tr0s-slides.slide00/t44446";
          t3tr0s_slides.slide00.t44446.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide00/t44446");
            };
          }(validate__5821__auto__, ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455);
          t3tr0s_slides.slide00.t44446.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide00.t44446.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas"}));
            };
          }(validate__5821__auto__, ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455);
          t3tr0s_slides.slide00.t44446.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide00.t44446.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide00.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455);
          t3tr0s_slides.slide00.t44446.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide00.t44446.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide00.cols * t3tr0s_slides.slide00.cell_size;
              canvas__$2.height = t3tr0s_slides.slide00.rows * t3tr0s_slides.slide00.cell_size;
              return t3tr0s_slides.slide00.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455);
          t3tr0s_slides.slide00.t44446.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455) {
            return function(_44448) {
              var self__ = this;
              var _44448__$1 = this;
              return self__.meta44447;
            };
          }(validate__5821__auto__, ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455);
          t3tr0s_slides.slide00.t44446.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455) {
            return function(_44448, meta44447__$1) {
              var self__ = this;
              var _44448__$1 = this;
              return new t3tr0s_slides.slide00.t44446(self__.G__44440, self__.owner, self__.input_checker44437, self__.validate__5821__auto__, self__.output_schema44435, self__.canvas, self__.input_schema44436, self__.output_checker44438, self__.app, self__.ufv__, self__.G__44439, meta44447__$1);
            };
          }(validate__5821__auto__, ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455);
          t3tr0s_slides.slide00.__GT_t44446 = function(validate__5821__auto__, ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455) {
            return function __GT_t44446(G__44440__$1, owner__$1, input_checker44437__$1, validate__5821__auto____$1, output_schema44435__$1, canvas__$1, input_schema44436__$1, output_checker44438__$1, app__$1, ufv____$1, G__44439__$1, meta44447) {
              return new t3tr0s_slides.slide00.t44446(G__44440__$1, owner__$1, input_checker44437__$1, validate__5821__auto____$1, output_schema44435__$1, canvas__$1, input_schema44436__$1, output_checker44438__$1, app__$1, ufv____$1, G__44439__$1, meta44447);
            };
          }(validate__5821__auto__, ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455);
        }
        return new t3tr0s_slides.slide00.t44446(G__44440, owner, input_checker44437_44454, validate__5821__auto__, output_schema44435_44452, canvas, input_schema44436_44453, output_checker44438_44455, app, ufv___44451, G__44439, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___44459 = output_checker44438_44455.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___44459)) {
        var error__5823__auto___44460 = temp__4126__auto___44459;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___44460)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema44435_44452, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___44460], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___44451, output_schema44435_44452, input_schema44436_44453, input_checker44437_44454, output_checker44438_44455);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide00.canvas), schema.core.make_fn_schema.call(null, output_schema44435_44452, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema44436_44453], null)));
t3tr0s_slides.slide00.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide00.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m44434) {
    return om.core.build.call(null, t3tr0s_slides.slide00.canvas, cursor__9685__auto__, m44434);
  };
  __GT_canvas = function(cursor__9685__auto__, m44434) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m44434);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___44478 = schema.utils.use_fn_validation;
var output_schema44462_44479 = schema.core.Any;
var input_schema44463_44480 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker44464_44481 = schema.core.checker.call(null, input_schema44463_44480);
var output_checker44465_44482 = schema.core.checker.call(null, output_schema44462_44479);
t3tr0s_slides.slide00.slide = function(ufv___44478, output_schema44462_44479, input_schema44463_44480, input_checker44464_44481, output_checker44465_44482) {
  return function slide(G__44466, G__44467) {
    var validate__5821__auto__ = ufv___44478.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___44483 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__44466, G__44467], null);
      var temp__4126__auto___44484 = input_checker44464_44481.call(null, args__5822__auto___44483);
      if (cljs.core.truth_(temp__4126__auto___44484)) {
        var error__5823__auto___44485 = temp__4126__auto___44484;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___44485)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema44463_44480, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___44483, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___44485], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__44466;
      var owner = G__44467;
      while (true) {
        if (typeof t3tr0s_slides.slide00.t44473 !== "undefined") {
        } else {
          t3tr0s_slides.slide00.t44473 = function(output_schema44462, owner, G__44466, validate__5821__auto__, output_checker44465, G__44467, input_checker44464, slide, app, input_schema44463, ufv__, meta44474) {
            this.output_schema44462 = output_schema44462;
            this.owner = owner;
            this.G__44466 = G__44466;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker44465 = output_checker44465;
            this.G__44467 = G__44467;
            this.input_checker44464 = input_checker44464;
            this.slide = slide;
            this.app = app;
            this.input_schema44463 = input_schema44463;
            this.ufv__ = ufv__;
            this.meta44474 = meta44474;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide00.t44473.cljs$lang$type = true;
          t3tr0s_slides.slide00.t44473.cljs$lang$ctorStr = "t3tr0s-slides.slide00/t44473";
          t3tr0s_slides.slide00.t44473.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___44478, output_schema44462_44479, input_schema44463_44480, input_checker44464_44481, output_checker44465_44482) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide00/t44473");
            };
          }(validate__5821__auto__, ufv___44478, output_schema44462_44479, input_schema44463_44480, input_checker44464_44481, output_checker44465_44482);
          t3tr0s_slides.slide00.t44473.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide00.t44473.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___44478, output_schema44462_44479, input_schema44463_44480, input_checker44464_44481, output_checker44465_44482) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "Tetris in ClojureScript"), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide00.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide00.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___44478, output_schema44462_44479, input_schema44463_44480, input_checker44464_44481, output_checker44465_44482);
          t3tr0s_slides.slide00.t44473.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___44478, output_schema44462_44479, input_schema44463_44480, input_checker44464_44481, output_checker44465_44482) {
            return function(_44475) {
              var self__ = this;
              var _44475__$1 = this;
              return self__.meta44474;
            };
          }(validate__5821__auto__, ufv___44478, output_schema44462_44479, input_schema44463_44480, input_checker44464_44481, output_checker44465_44482);
          t3tr0s_slides.slide00.t44473.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___44478, output_schema44462_44479, input_schema44463_44480, input_checker44464_44481, output_checker44465_44482) {
            return function(_44475, meta44474__$1) {
              var self__ = this;
              var _44475__$1 = this;
              return new t3tr0s_slides.slide00.t44473(self__.output_schema44462, self__.owner, self__.G__44466, self__.validate__5821__auto__, self__.output_checker44465, self__.G__44467, self__.input_checker44464, self__.slide, self__.app, self__.input_schema44463, self__.ufv__, meta44474__$1);
            };
          }(validate__5821__auto__, ufv___44478, output_schema44462_44479, input_schema44463_44480, input_checker44464_44481, output_checker44465_44482);
          t3tr0s_slides.slide00.__GT_t44473 = function(validate__5821__auto__, ufv___44478, output_schema44462_44479, input_schema44463_44480, input_checker44464_44481, output_checker44465_44482) {
            return function __GT_t44473(output_schema44462__$1, owner__$1, G__44466__$1, validate__5821__auto____$1, output_checker44465__$1, G__44467__$1, input_checker44464__$1, slide__$1, app__$1, input_schema44463__$1, ufv____$1, meta44474) {
              return new t3tr0s_slides.slide00.t44473(output_schema44462__$1, owner__$1, G__44466__$1, validate__5821__auto____$1, output_checker44465__$1, G__44467__$1, input_checker44464__$1, slide__$1, app__$1, input_schema44463__$1, ufv____$1, meta44474);
            };
          }(validate__5821__auto__, ufv___44478, output_schema44462_44479, input_schema44463_44480, input_checker44464_44481, output_checker44465_44482);
        }
        return new t3tr0s_slides.slide00.t44473(output_schema44462_44479, owner, G__44466, validate__5821__auto__, output_checker44465_44482, G__44467, input_checker44464_44481, slide, app, input_schema44463_44480, ufv___44478, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___44486 = output_checker44465_44482.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___44486)) {
        var error__5823__auto___44487 = temp__4126__auto___44486;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___44487)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema44462_44479, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___44487], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___44478, output_schema44462_44479, input_schema44463_44480, input_checker44464_44481, output_checker44465_44482);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide00.slide), schema.core.make_fn_schema.call(null, output_schema44462_44479, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema44463_44480], null)));
t3tr0s_slides.slide00.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide00.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m44461) {
    return om.core.build.call(null, t3tr0s_slides.slide00.slide, cursor__9685__auto__, m44461);
  };
  __GT_slide = function(cursor__9685__auto__, m44461) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m44461);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide00.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide00.slide, t3tr0s_slides.slide00.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide00.resume = function resume() {
  return null;
};
t3tr0s_slides.slide00.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide05");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide05.dark_green = "#143";
t3tr0s_slides.slide05.light_green = "#175";
t3tr0s_slides.slide05.dark_purple = "#449";
t3tr0s_slides.slide05.light_purple = "#6ad";
t3tr0s_slides.slide05.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide05.rotate_coord = function rotate_coord(p__45231) {
  var vec__45233 = p__45231;
  var x = cljs.core.nth.call(null, vec__45233, 0, null);
  var y = cljs.core.nth.call(null, vec__45233, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide05.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide05.rotate_coord, piece);
};
t3tr0s_slides.slide05.move_left = function move_left(p__45234) {
  var vec__45236 = p__45234;
  var x = cljs.core.nth.call(null, vec__45236, 0, null);
  var y = cljs.core.nth.call(null, vec__45236, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x - 1, y], null);
};
t3tr0s_slides.slide05.move_right = function move_right(p__45237) {
  var vec__45239 = p__45237;
  var x = cljs.core.nth.call(null, vec__45239, 0, null);
  var y = cljs.core.nth.call(null, vec__45239, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + 1, y], null);
};
t3tr0s_slides.slide05.move_down = function move_down(p__45240) {
  var vec__45242 = p__45240;
  var x = cljs.core.nth.call(null, vec__45242, 0, null);
  var y = cljs.core.nth.call(null, vec__45242, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y + 1], null);
};
t3tr0s_slides.slide05.g0 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null), new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "J", "J", 1394734828)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide05.pieces)], null);
t3tr0s_slides.slide05.g1 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g0, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_left);
t3tr0s_slides.slide05.g2 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_left);
t3tr0s_slides.slide05.g3 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g2, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide05.rotate_piece);
t3tr0s_slides.slide05.g4 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g3, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g5 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g4, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g6 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g5, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide05.rotate_piece);
t3tr0s_slides.slide05.g7 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g6, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_right);
t3tr0s_slides.slide05.g8 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g7, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_right);
t3tr0s_slides.slide05.g9 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g8, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide05.rotate_piece);
t3tr0s_slides.slide05.g10 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g9, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g11 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g10, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g12 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g11, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g13 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g12, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g14 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g13, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g15 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g14, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.states = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [t3tr0s_slides.slide05.g0, t3tr0s_slides.slide05.g1, t3tr0s_slides.slide05.g2, t3tr0s_slides.slide05.g3, t3tr0s_slides.slide05.g4, t3tr0s_slides.slide05.g5, t3tr0s_slides.slide05.g6, t3tr0s_slides.slide05.g7, t3tr0s_slides.slide05.g8, t3tr0s_slides.slide05.g9, t3tr0s_slides.slide05.g10, t3tr0s_slides.slide05.g11, t3tr0s_slides.slide05.g12, t3tr0s_slides.slide05.g13, t3tr0s_slides.slide05.g14, 
t3tr0s_slides.slide05.g15], null);
t3tr0s_slides.slide05.state_places = cljs.core.PersistentHashMap.fromArrays([t3tr0s_slides.slide05.g5, t3tr0s_slides.slide05.g6, t3tr0s_slides.slide05.g13, t3tr0s_slides.slide05.g0, t3tr0s_slides.slide05.g4, t3tr0s_slides.slide05.g2, t3tr0s_slides.slide05.g11, t3tr0s_slides.slide05.g14, t3tr0s_slides.slide05.g10, t3tr0s_slides.slide05.g9, t3tr0s_slides.slide05.g3, t3tr0s_slides.slide05.g8, t3tr0s_slides.slide05.g1, t3tr0s_slides.slide05.g15, t3tr0s_slides.slide05.g12, t3tr0s_slides.slide05.g7], [5, 
6, 13, 0, 4, 2, 11, 14, 10, 9, 3, 8, 1, 15, 12, 7]);
t3tr0s_slides.slide05.rotate_coord = function rotate_coord(p__45243) {
  var vec__45245 = p__45243;
  var x = cljs.core.nth.call(null, vec__45245, 0, null);
  var y = cljs.core.nth.call(null, vec__45245, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide05.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide05.rotate_coord, piece);
};
t3tr0s_slides.slide05.piece_abs_coords = function piece_abs_coords(piece, p__45246) {
  var vec__45250 = p__45246;
  var cx = cljs.core.nth.call(null, vec__45250, 0, null);
  var cy = cljs.core.nth.call(null, vec__45250, 1, null);
  return cljs.core.mapv.call(null, function(vec__45250, cx, cy) {
    return function(p__45251) {
      var vec__45252 = p__45251;
      var x = cljs.core.nth.call(null, vec__45252, 0, null);
      var y = cljs.core.nth.call(null, vec__45252, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__45250, cx, cy), piece);
};
t3tr0s_slides.slide05.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "position", "position", -2011731912), null], null));
t3tr0s_slides.slide05.rows = 20;
t3tr0s_slides.slide05.cols = 10;
t3tr0s_slides.slide05.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide05.cols, 0));
t3tr0s_slides.slide05.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide05.rows, t3tr0s_slides.slide05.empty_row));
t3tr0s_slides.slide05.state_code = function state_code(app, state, code_str) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "state" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(code_str), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, state, app) ? "active-col-d9099" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), 
  function() {
    return om.core.update_BANG_.call(null, app, state);
  }], null), code_str], null);
};
var ufv___45266 = schema.utils.use_fn_validation;
var output_schema45254_45267 = schema.core.Any;
var input_schema45255_45268 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker45256_45269 = schema.core.checker.call(null, input_schema45255_45268);
var output_checker45257_45270 = schema.core.checker.call(null, output_schema45254_45267);
t3tr0s_slides.slide05.code = function(ufv___45266, output_schema45254_45267, input_schema45255_45268, input_checker45256_45269, output_checker45257_45270) {
  return function code(G__45258, G__45259) {
    var validate__5821__auto__ = ufv___45266.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___45271 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__45258, G__45259], null);
      var temp__4126__auto___45272 = input_checker45256_45269.call(null, args__5822__auto___45271);
      if (cljs.core.truth_(temp__4126__auto___45272)) {
        var error__5823__auto___45273 = temp__4126__auto___45272;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___45273)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema45255_45268, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___45271, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45273], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__45258;
      var owner = G__45259;
      while (true) {
        if (typeof t3tr0s_slides.slide05.t45263 !== "undefined") {
        } else {
          t3tr0s_slides.slide05.t45263 = function(output_checker45257, owner, G__45258, output_schema45254, input_checker45256, validate__5821__auto__, input_schema45255, G__45259, app, ufv__, code, meta45264) {
            this.output_checker45257 = output_checker45257;
            this.owner = owner;
            this.G__45258 = G__45258;
            this.output_schema45254 = output_schema45254;
            this.input_checker45256 = input_checker45256;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema45255 = input_schema45255;
            this.G__45259 = G__45259;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta45264 = meta45264;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide05.t45263.cljs$lang$type = true;
          t3tr0s_slides.slide05.t45263.cljs$lang$ctorStr = "t3tr0s-slides.slide05/t45263";
          t3tr0s_slides.slide05.t45263.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___45266, output_schema45254_45267, input_schema45255_45268, input_checker45256_45269, output_checker45257_45270) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide05/t45263");
            };
          }(validate__5821__auto__, ufv___45266, output_schema45254_45267, input_schema45255_45268, input_checker45256_45269, output_checker45257_45270);
          t3tr0s_slides.slide05.t45263.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide05.t45263.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___45266, output_schema45254_45267, input_schema45255_45268, input_checker45256_45269, output_checker45257_45270) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " move-left  [[x y]] [ (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "dec")), " x)      y  ])\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " move-right [[x y]] [ (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "inc")), " x)      y  ])\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " move-down  [[x y]] [      x  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "inc")), " y) ])\n", "\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: mouse over the states.")), "\n\n", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g0, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " pieces)})\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":J")), "] :piece ("), t3tr0s_slides.syntax_highlight.lit.call(null, 
              "6")), " "), t3tr0s_slides.syntax_highlight.lit.call(null, "4")), " ["), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g0  {"), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g1, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-left))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g0  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g1  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g2, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-left))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g1  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g2  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g3, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]    rotate-piece))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " g2  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g3  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g4, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g3  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g4  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, 
              self__.app, t3tr0s_slides.slide05.g5, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g4  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g5  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g6, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]    rotate-piece))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " g5  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g6  ("), t3tr0s_slides.syntax_highlight.core.call(null, 
              "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g7, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-right))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g6  ["), t3tr0s_slides.syntax_highlight.core.call(null, 
              "update-in")), " g7  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g8, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-right))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":position")), " g7  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g8  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g9, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
              "]    rotate-piece))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " g8  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g9  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g10, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g9  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g10 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g11, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g10 ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g11 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g12, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g11 ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g12 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, 
              self__.app, t3tr0s_slides.slide05.g13, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g12 ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g13 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g14, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g13 ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g14 ("), t3tr0s_slides.syntax_highlight.core.call(null, 
              "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g15, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g14 ["), t3tr0s_slides.syntax_highlight.core.call(null, 
              "update-in")), " g15 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))))));
            };
          }(validate__5821__auto__, ufv___45266, output_schema45254_45267, input_schema45255_45268, input_checker45256_45269, output_checker45257_45270);
          t3tr0s_slides.slide05.t45263.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___45266, output_schema45254_45267, input_schema45255_45268, input_checker45256_45269, output_checker45257_45270) {
            return function(_45265) {
              var self__ = this;
              var _45265__$1 = this;
              return self__.meta45264;
            };
          }(validate__5821__auto__, ufv___45266, output_schema45254_45267, input_schema45255_45268, input_checker45256_45269, output_checker45257_45270);
          t3tr0s_slides.slide05.t45263.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___45266, output_schema45254_45267, input_schema45255_45268, input_checker45256_45269, output_checker45257_45270) {
            return function(_45265, meta45264__$1) {
              var self__ = this;
              var _45265__$1 = this;
              return new t3tr0s_slides.slide05.t45263(self__.output_checker45257, self__.owner, self__.G__45258, self__.output_schema45254, self__.input_checker45256, self__.validate__5821__auto__, self__.input_schema45255, self__.G__45259, self__.app, self__.ufv__, self__.code, meta45264__$1);
            };
          }(validate__5821__auto__, ufv___45266, output_schema45254_45267, input_schema45255_45268, input_checker45256_45269, output_checker45257_45270);
          t3tr0s_slides.slide05.__GT_t45263 = function(validate__5821__auto__, ufv___45266, output_schema45254_45267, input_schema45255_45268, input_checker45256_45269, output_checker45257_45270) {
            return function __GT_t45263(output_checker45257__$1, owner__$1, G__45258__$1, output_schema45254__$1, input_checker45256__$1, validate__5821__auto____$1, input_schema45255__$1, G__45259__$1, app__$1, ufv____$1, code__$1, meta45264) {
              return new t3tr0s_slides.slide05.t45263(output_checker45257__$1, owner__$1, G__45258__$1, output_schema45254__$1, input_checker45256__$1, validate__5821__auto____$1, input_schema45255__$1, G__45259__$1, app__$1, ufv____$1, code__$1, meta45264);
            };
          }(validate__5821__auto__, ufv___45266, output_schema45254_45267, input_schema45255_45268, input_checker45256_45269, output_checker45257_45270);
        }
        return new t3tr0s_slides.slide05.t45263(output_checker45257_45270, owner, G__45258, output_schema45254_45267, input_checker45256_45269, validate__5821__auto__, input_schema45255_45268, G__45259, app, ufv___45266, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45274 = output_checker45257_45270.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45274)) {
        var error__5823__auto___45275 = temp__4126__auto___45274;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___45275)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema45254_45267, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45275], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___45266, output_schema45254_45267, input_schema45255_45268, input_checker45256_45269, output_checker45257_45270);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide05.code), schema.core.make_fn_schema.call(null, output_schema45254_45267, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema45255_45268], null)));
t3tr0s_slides.slide05.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide05.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m45253) {
    return om.core.build.call(null, t3tr0s_slides.slide05.code, cursor__9685__auto__, m45253);
  };
  __GT_code = function(cursor__9685__auto__, m45253) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m45253);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide05.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide05.rows);
t3tr0s_slides.slide05.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__45276, is_center) {
  var vec__45278 = p__45276;
  var x = cljs.core.nth.call(null, vec__45278, 0, null);
  var y = cljs.core.nth.call(null, vec__45278, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide05.cell_size * x;
  var ry = t3tr0s_slides.slide05.cell_size * y;
  var rs = t3tr0s_slides.slide05.cell_size;
  var cx = t3tr0s_slides.slide05.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide05.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide05.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide05.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__45285 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide05.piece_abs_coords.call(null, piece, pos)));
  var chunk__45286 = null;
  var count__45287 = 0;
  var i__45288 = 0;
  while (true) {
    if (i__45288 < count__45287) {
      var vec__45289 = cljs.core._nth.call(null, chunk__45286, i__45288);
      var i = cljs.core.nth.call(null, vec__45289, 0, null);
      var c = cljs.core.nth.call(null, vec__45289, 1, null);
      t3tr0s_slides.slide05.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__45291 = seq__45285;
      var G__45292 = chunk__45286;
      var G__45293 = count__45287;
      var G__45294 = i__45288 + 1;
      seq__45285 = G__45291;
      chunk__45286 = G__45292;
      count__45287 = G__45293;
      i__45288 = G__45294;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__45285);
      if (temp__4126__auto__) {
        var seq__45285__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__45285__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__45285__$1);
          var G__45295 = cljs.core.chunk_rest.call(null, seq__45285__$1);
          var G__45296 = c__4309__auto__;
          var G__45297 = cljs.core.count.call(null, c__4309__auto__);
          var G__45298 = 0;
          seq__45285 = G__45295;
          chunk__45286 = G__45296;
          count__45287 = G__45297;
          i__45288 = G__45298;
          continue;
        } else {
          var vec__45290 = cljs.core.first.call(null, seq__45285__$1);
          var i = cljs.core.nth.call(null, vec__45290, 0, null);
          var c = cljs.core.nth.call(null, vec__45290, 1, null);
          t3tr0s_slides.slide05.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__45299 = cljs.core.next.call(null, seq__45285__$1);
          var G__45300 = null;
          var G__45301 = 0;
          var G__45302 = 0;
          seq__45285 = G__45299;
          chunk__45286 = G__45300;
          count__45287 = G__45301;
          i__45288 = G__45302;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide05.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide05.cell_size * t3tr0s_slides.slide05.cols, t3tr0s_slides.slide05.cell_size * t3tr0s_slides.slide05.rows);
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    var places_45319 = t3tr0s_slides.slide05.state_places.call(null, app);
    ctx.fillStyle = "#555";
    ctx.strokeStyle = "#AAA";
    var seq__45311_45320 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, cljs.core.take.call(null, places_45319, t3tr0s_slides.slide05.states)));
    var chunk__45312_45321 = null;
    var count__45313_45322 = 0;
    var i__45314_45323 = 0;
    while (true) {
      if (i__45314_45323 < count__45313_45322) {
        var vec__45315_45324 = cljs.core._nth.call(null, chunk__45312_45321, i__45314_45323);
        var i_45325 = cljs.core.nth.call(null, vec__45315_45324, 0, null);
        var map__45316_45326 = cljs.core.nth.call(null, vec__45315_45324, 1, null);
        var map__45316_45327__$1 = cljs.core.seq_QMARK_.call(null, map__45316_45326) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45316_45326) : map__45316_45326;
        var position_45328 = cljs.core.get.call(null, map__45316_45327__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
        var piece_45329__$1 = cljs.core.get.call(null, map__45316_45327__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
        var x_45330 = 7;
        ctx.globalAlpha = function() {
          var x__3860__auto__ = 0;
          var y__3861__auto__ = function() {
            var x__3867__auto__ = x_45330;
            var y__3868__auto__ = i_45325 - (places_45319 - x_45330);
            return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
          }();
          return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
        }() / x_45330 / 5;
        t3tr0s_slides.slide05.draw_piece_BANG_.call(null, ctx, piece_45329__$1, position_45328);
        var G__45331 = seq__45311_45320;
        var G__45332 = chunk__45312_45321;
        var G__45333 = count__45313_45322;
        var G__45334 = i__45314_45323 + 1;
        seq__45311_45320 = G__45331;
        chunk__45312_45321 = G__45332;
        count__45313_45322 = G__45333;
        i__45314_45323 = G__45334;
        continue;
      } else {
        var temp__4126__auto___45335 = cljs.core.seq.call(null, seq__45311_45320);
        if (temp__4126__auto___45335) {
          var seq__45311_45336__$1 = temp__4126__auto___45335;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__45311_45336__$1)) {
            var c__4309__auto___45337 = cljs.core.chunk_first.call(null, seq__45311_45336__$1);
            var G__45338 = cljs.core.chunk_rest.call(null, seq__45311_45336__$1);
            var G__45339 = c__4309__auto___45337;
            var G__45340 = cljs.core.count.call(null, c__4309__auto___45337);
            var G__45341 = 0;
            seq__45311_45320 = G__45338;
            chunk__45312_45321 = G__45339;
            count__45313_45322 = G__45340;
            i__45314_45323 = G__45341;
            continue;
          } else {
            var vec__45317_45342 = cljs.core.first.call(null, seq__45311_45336__$1);
            var i_45343 = cljs.core.nth.call(null, vec__45317_45342, 0, null);
            var map__45318_45344 = cljs.core.nth.call(null, vec__45317_45342, 1, null);
            var map__45318_45345__$1 = cljs.core.seq_QMARK_.call(null, map__45318_45344) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45318_45344) : map__45318_45344;
            var position_45346 = cljs.core.get.call(null, map__45318_45345__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
            var piece_45347__$1 = cljs.core.get.call(null, map__45318_45345__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
            var x_45348 = 7;
            ctx.globalAlpha = function() {
              var x__3860__auto__ = 0;
              var y__3861__auto__ = function() {
                var x__3867__auto__ = x_45348;
                var y__3868__auto__ = i_45343 - (places_45319 - x_45348);
                return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
              }();
              return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
            }() / x_45348 / 5;
            t3tr0s_slides.slide05.draw_piece_BANG_.call(null, ctx, piece_45347__$1, position_45346);
            var G__45349 = cljs.core.next.call(null, seq__45311_45336__$1);
            var G__45350 = null;
            var G__45351 = 0;
            var G__45352 = 0;
            seq__45311_45320 = G__45349;
            chunk__45312_45321 = G__45350;
            count__45313_45322 = G__45351;
            i__45314_45323 = G__45352;
            continue;
          }
        } else {
        }
      }
      break;
    }
    ctx.globalAlpha = 1;
    ctx.fillStyle = t3tr0s_slides.slide05.dark_purple;
    ctx.strokeStyle = t3tr0s_slides.slide05.light_purple;
    return t3tr0s_slides.slide05.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
var ufv___45370 = schema.utils.use_fn_validation;
var output_schema45354_45371 = schema.core.Any;
var input_schema45355_45372 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker45356_45373 = schema.core.checker.call(null, input_schema45355_45372);
var output_checker45357_45374 = schema.core.checker.call(null, output_schema45354_45371);
t3tr0s_slides.slide05.canvas = function(ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374) {
  return function canvas(G__45358, G__45359) {
    var validate__5821__auto__ = ufv___45370.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___45375 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__45358, G__45359], null);
      var temp__4126__auto___45376 = input_checker45356_45373.call(null, args__5822__auto___45375);
      if (cljs.core.truth_(temp__4126__auto___45376)) {
        var error__5823__auto___45377 = temp__4126__auto___45376;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___45377)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema45355_45372, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___45375, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45377], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__45358;
      var owner = G__45359;
      while (true) {
        if (typeof t3tr0s_slides.slide05.t45365 !== "undefined") {
        } else {
          t3tr0s_slides.slide05.t45365 = function(owner, G__45358, output_checker45357, G__45359, validate__5821__auto__, input_checker45356, output_schema45354, canvas, input_schema45355, app, ufv__, meta45366) {
            this.owner = owner;
            this.G__45358 = G__45358;
            this.output_checker45357 = output_checker45357;
            this.G__45359 = G__45359;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker45356 = input_checker45356;
            this.output_schema45354 = output_schema45354;
            this.canvas = canvas;
            this.input_schema45355 = input_schema45355;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta45366 = meta45366;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide05.t45365.cljs$lang$type = true;
          t3tr0s_slides.slide05.t45365.cljs$lang$ctorStr = "t3tr0s-slides.slide05/t45365";
          t3tr0s_slides.slide05.t45365.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide05/t45365");
            };
          }(validate__5821__auto__, ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374);
          t3tr0s_slides.slide05.t45365.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide05.t45365.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374);
          t3tr0s_slides.slide05.t45365.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide05.t45365.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide05.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374);
          t3tr0s_slides.slide05.t45365.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide05.t45365.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide05.cols * t3tr0s_slides.slide05.cell_size;
              canvas__$2.height = t3tr0s_slides.slide05.rows * t3tr0s_slides.slide05.cell_size;
              return t3tr0s_slides.slide05.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374);
          t3tr0s_slides.slide05.t45365.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374) {
            return function(_45367) {
              var self__ = this;
              var _45367__$1 = this;
              return self__.meta45366;
            };
          }(validate__5821__auto__, ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374);
          t3tr0s_slides.slide05.t45365.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374) {
            return function(_45367, meta45366__$1) {
              var self__ = this;
              var _45367__$1 = this;
              return new t3tr0s_slides.slide05.t45365(self__.owner, self__.G__45358, self__.output_checker45357, self__.G__45359, self__.validate__5821__auto__, self__.input_checker45356, self__.output_schema45354, self__.canvas, self__.input_schema45355, self__.app, self__.ufv__, meta45366__$1);
            };
          }(validate__5821__auto__, ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374);
          t3tr0s_slides.slide05.__GT_t45365 = function(validate__5821__auto__, ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374) {
            return function __GT_t45365(owner__$1, G__45358__$1, output_checker45357__$1, G__45359__$1, validate__5821__auto____$1, input_checker45356__$1, output_schema45354__$1, canvas__$1, input_schema45355__$1, app__$1, ufv____$1, meta45366) {
              return new t3tr0s_slides.slide05.t45365(owner__$1, G__45358__$1, output_checker45357__$1, G__45359__$1, validate__5821__auto____$1, input_checker45356__$1, output_schema45354__$1, canvas__$1, input_schema45355__$1, app__$1, ufv____$1, meta45366);
            };
          }(validate__5821__auto__, ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374);
        }
        return new t3tr0s_slides.slide05.t45365(owner, G__45358, output_checker45357_45374, G__45359, validate__5821__auto__, input_checker45356_45373, output_schema45354_45371, canvas, input_schema45355_45372, app, ufv___45370, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45378 = output_checker45357_45374.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45378)) {
        var error__5823__auto___45379 = temp__4126__auto___45378;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___45379)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema45354_45371, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45379], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___45370, output_schema45354_45371, input_schema45355_45372, input_checker45356_45373, output_checker45357_45374);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide05.canvas), schema.core.make_fn_schema.call(null, output_schema45354_45371, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema45355_45372], null)));
t3tr0s_slides.slide05.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide05.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m45353) {
    return om.core.build.call(null, t3tr0s_slides.slide05.canvas, cursor__9685__auto__, m45353);
  };
  __GT_canvas = function(cursor__9685__auto__, m45353) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m45353);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___45397 = schema.utils.use_fn_validation;
var output_schema45381_45398 = schema.core.Any;
var input_schema45382_45399 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker45383_45400 = schema.core.checker.call(null, input_schema45382_45399);
var output_checker45384_45401 = schema.core.checker.call(null, output_schema45381_45398);
t3tr0s_slides.slide05.slide = function(ufv___45397, output_schema45381_45398, input_schema45382_45399, input_checker45383_45400, output_checker45384_45401) {
  return function slide(G__45385, G__45386) {
    var validate__5821__auto__ = ufv___45397.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___45402 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__45385, G__45386], null);
      var temp__4126__auto___45403 = input_checker45383_45400.call(null, args__5822__auto___45402);
      if (cljs.core.truth_(temp__4126__auto___45403)) {
        var error__5823__auto___45404 = temp__4126__auto___45403;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___45404)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema45382_45399, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___45402, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45404], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__45385;
      var owner = G__45386;
      while (true) {
        if (typeof t3tr0s_slides.slide05.t45392 !== "undefined") {
        } else {
          t3tr0s_slides.slide05.t45392 = function(owner, G__45386, validate__5821__auto__, output_checker45384, input_schema45382, G__45385, output_schema45381, slide, app, ufv__, input_checker45383, meta45393) {
            this.owner = owner;
            this.G__45386 = G__45386;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker45384 = output_checker45384;
            this.input_schema45382 = input_schema45382;
            this.G__45385 = G__45385;
            this.output_schema45381 = output_schema45381;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_checker45383 = input_checker45383;
            this.meta45393 = meta45393;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide05.t45392.cljs$lang$type = true;
          t3tr0s_slides.slide05.t45392.cljs$lang$ctorStr = "t3tr0s-slides.slide05/t45392";
          t3tr0s_slides.slide05.t45392.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___45397, output_schema45381_45398, input_schema45382_45399, input_checker45383_45400, output_checker45384_45401) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide05/t45392");
            };
          }(validate__5821__auto__, ufv___45397, output_schema45381_45398, input_schema45382_45399, input_checker45383_45400, output_checker45384_45401);
          t3tr0s_slides.slide05.t45392.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide05.t45392.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___45397, output_schema45381_45398, input_schema45382_45399, input_checker45383_45400, output_checker45384_45401) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "5. Test state progression."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide05.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide05.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___45397, output_schema45381_45398, input_schema45382_45399, input_checker45383_45400, output_checker45384_45401);
          t3tr0s_slides.slide05.t45392.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___45397, output_schema45381_45398, input_schema45382_45399, input_checker45383_45400, output_checker45384_45401) {
            return function(_45394) {
              var self__ = this;
              var _45394__$1 = this;
              return self__.meta45393;
            };
          }(validate__5821__auto__, ufv___45397, output_schema45381_45398, input_schema45382_45399, input_checker45383_45400, output_checker45384_45401);
          t3tr0s_slides.slide05.t45392.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___45397, output_schema45381_45398, input_schema45382_45399, input_checker45383_45400, output_checker45384_45401) {
            return function(_45394, meta45393__$1) {
              var self__ = this;
              var _45394__$1 = this;
              return new t3tr0s_slides.slide05.t45392(self__.owner, self__.G__45386, self__.validate__5821__auto__, self__.output_checker45384, self__.input_schema45382, self__.G__45385, self__.output_schema45381, self__.slide, self__.app, self__.ufv__, self__.input_checker45383, meta45393__$1);
            };
          }(validate__5821__auto__, ufv___45397, output_schema45381_45398, input_schema45382_45399, input_checker45383_45400, output_checker45384_45401);
          t3tr0s_slides.slide05.__GT_t45392 = function(validate__5821__auto__, ufv___45397, output_schema45381_45398, input_schema45382_45399, input_checker45383_45400, output_checker45384_45401) {
            return function __GT_t45392(owner__$1, G__45386__$1, validate__5821__auto____$1, output_checker45384__$1, input_schema45382__$1, G__45385__$1, output_schema45381__$1, slide__$1, app__$1, ufv____$1, input_checker45383__$1, meta45393) {
              return new t3tr0s_slides.slide05.t45392(owner__$1, G__45386__$1, validate__5821__auto____$1, output_checker45384__$1, input_schema45382__$1, G__45385__$1, output_schema45381__$1, slide__$1, app__$1, ufv____$1, input_checker45383__$1, meta45393);
            };
          }(validate__5821__auto__, ufv___45397, output_schema45381_45398, input_schema45382_45399, input_checker45383_45400, output_checker45384_45401);
        }
        return new t3tr0s_slides.slide05.t45392(owner, G__45386, validate__5821__auto__, output_checker45384_45401, input_schema45382_45399, G__45385, output_schema45381_45398, slide, app, ufv___45397, input_checker45383_45400, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45405 = output_checker45384_45401.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45405)) {
        var error__5823__auto___45406 = temp__4126__auto___45405;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___45406)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema45381_45398, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45406], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___45397, output_schema45381_45398, input_schema45382_45399, input_checker45383_45400, output_checker45384_45401);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide05.slide), schema.core.make_fn_schema.call(null, output_schema45381_45398, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema45382_45399], null)));
t3tr0s_slides.slide05.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide05.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m45380) {
    return om.core.build.call(null, t3tr0s_slides.slide05.slide, cursor__9685__auto__, m45380);
  };
  __GT_slide = function(cursor__9685__auto__, m45380) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m45380);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide05.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide05.slide, t3tr0s_slides.slide05.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide05.resume = function resume() {
  return null;
};
t3tr0s_slides.slide05.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide02");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide02.dark_green = "#143";
t3tr0s_slides.slide02.light_green = "#175";
t3tr0s_slides.slide02.dark_purple = "#449";
t3tr0s_slides.slide02.light_purple = "#6ad";
t3tr0s_slides.slide02.piece_keys = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.Keyword(null, "Z", "Z", 459124588)], null);
t3tr0s_slides.slide02.positions = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 1], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 4], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[4, 7], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 10], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 13], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 16], null), new cljs.core.Keyword(null, "Z", "Z", 
459124588), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 19], null)], null);
t3tr0s_slides.slide02.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide02.piece_abs_coords = function piece_abs_coords(piece) {
  var vec__44651 = t3tr0s_slides.slide02.positions.call(null, piece);
  var cx = cljs.core.nth.call(null, vec__44651, 0, null);
  var cy = cljs.core.nth.call(null, vec__44651, 1, null);
  return cljs.core.mapv.call(null, function(vec__44651, cx, cy) {
    return function(p__44652) {
      var vec__44653 = p__44652;
      var x = cljs.core.nth.call(null, vec__44653, 0, null);
      var y = cljs.core.nth.call(null, vec__44653, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__44651, cx, cy), t3tr0s_slides.slide02.pieces.call(null, piece));
};
t3tr0s_slides.slide02.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "index", "index", -1531685915), null], null));
t3tr0s_slides.slide02.rows = 20;
t3tr0s_slides.slide02.cols = 10;
t3tr0s_slides.slide02.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide02.cols, 0));
t3tr0s_slides.slide02.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide02.rows, t3tr0s_slides.slide02.empty_row));
t3tr0s_slides.slide02.data_row = function data_row(piece, app) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "piece" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(piece), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app)) ? 
  "active-row-534ed" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), piece);
  }], null), "[", function() {
    var iter__4278__auto__ = function iter__44668(s__44669) {
      return new cljs.core.LazySeq(null, function() {
        var s__44669__$1 = s__44669;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__44669__$1);
          if (temp__4126__auto__) {
            var s__44669__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__44669__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__44669__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__44671 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__44670 = 0;
                while (true) {
                  if (i__44670 < size__4277__auto__) {
                    var vec__44676 = cljs.core._nth.call(null, c__4276__auto__, i__44670);
                    var index = cljs.core.nth.call(null, vec__44676, 0, null);
                    var vec__44677 = cljs.core.nth.call(null, vec__44676, 1, null);
                    var x = cljs.core.nth.call(null, vec__44677, 0, null);
                    var y = cljs.core.nth.call(null, vec__44677, 1, null);
                    cljs.core.chunk_append.call(null, b__44671, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "piece" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(piece) + "index" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, 
                    piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app)) && cljs.core._EQ_.call(null, index, (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : null, new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(i__44670, vec__44676, index, vec__44677, x, y, c__4276__auto__, size__4277__auto__, b__44671, s__44669__$2, temp__4126__auto__) {
                      return function() {
                        return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
                      };
                    }(i__44670, vec__44676, index, vec__44677, x, y, c__4276__auto__, size__4277__auto__, b__44671, s__44669__$2, temp__4126__auto__)], null), function() {
                      var pad = function(i__44670, vec__44676, index, vec__44677, x, y, c__4276__auto__, size__4277__auto__, b__44671, s__44669__$2, temp__4126__auto__) {
                        return function(p1__44654_SHARP_) {
                          if (p1__44654_SHARP_ < 0) {
                            return p1__44654_SHARP_;
                          } else {
                            return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__44654_SHARP_);
                          }
                        };
                      }(i__44670, vec__44676, index, vec__44677, x, y, c__4276__auto__, size__4277__auto__, b__44671, s__44669__$2, temp__4126__auto__);
                      var fmt = function(i__44670, pad, vec__44676, index, vec__44677, x, y, c__4276__auto__, size__4277__auto__, b__44671, s__44669__$2, temp__4126__auto__) {
                        return function(p1__44655_SHARP_) {
                          return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__44655_SHARP_));
                        };
                      }(i__44670, pad, vec__44676, index, vec__44677, x, y, c__4276__auto__, size__4277__auto__, b__44671, s__44669__$2, temp__4126__auto__);
                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), " [");
                    }()], null));
                    var G__44680 = i__44670 + 1;
                    i__44670 = G__44680;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__44671), iter__44668.call(null, cljs.core.chunk_rest.call(null, s__44669__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__44671), null);
              }
            } else {
              var vec__44678 = cljs.core.first.call(null, s__44669__$2);
              var index = cljs.core.nth.call(null, vec__44678, 0, null);
              var vec__44679 = cljs.core.nth.call(null, vec__44678, 1, null);
              var x = cljs.core.nth.call(null, vec__44679, 0, null);
              var y = cljs.core.nth.call(null, vec__44679, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "piece" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(piece) + "index" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, piece, 
              (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app)) && cljs.core._EQ_.call(null, index, (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : null, new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(vec__44678, index, vec__44679, x, y, s__44669__$2, temp__4126__auto__) {
                return function() {
                  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
                };
              }(vec__44678, index, vec__44679, x, y, s__44669__$2, temp__4126__auto__)], null), function() {
                var pad = function(vec__44678, index, vec__44679, x, y, s__44669__$2, temp__4126__auto__) {
                  return function(p1__44654_SHARP_) {
                    if (p1__44654_SHARP_ < 0) {
                      return p1__44654_SHARP_;
                    } else {
                      return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__44654_SHARP_);
                    }
                  };
                }(vec__44678, index, vec__44679, x, y, s__44669__$2, temp__4126__auto__);
                var fmt = function(pad, vec__44678, index, vec__44679, x, y, s__44669__$2, temp__4126__auto__) {
                  return function(p1__44655_SHARP_) {
                    return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__44655_SHARP_));
                  };
                }(pad, vec__44678, index, vec__44679, x, y, s__44669__$2, temp__4126__auto__);
                return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), " [");
              }()], null), iter__44668.call(null, cljs.core.rest.call(null, s__44669__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide02.pieces.call(null, piece)));
  }(), " ]"], null);
};
var ufv___44760 = schema.utils.use_fn_validation;
var output_schema44682_44761 = schema.core.Any;
var input_schema44683_44762 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker44684_44763 = schema.core.checker.call(null, input_schema44683_44762);
var output_checker44685_44764 = schema.core.checker.call(null, output_schema44682_44761);
t3tr0s_slides.slide02.code = function(ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764) {
  return function code(G__44686, G__44687) {
    var validate__5821__auto__ = ufv___44760.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___44765 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__44686, G__44687], null);
      var temp__4126__auto___44766 = input_checker44684_44763.call(null, args__5822__auto___44765);
      if (cljs.core.truth_(temp__4126__auto___44766)) {
        var error__5823__auto___44767 = temp__4126__auto___44766;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___44767)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema44683_44762, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___44765, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___44767], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__44686;
      var owner = G__44687;
      while (true) {
        if (typeof t3tr0s_slides.slide02.t44724 !== "undefined") {
        } else {
          t3tr0s_slides.slide02.t44724 = function(owner, validate__5821__auto__, output_schema44682, input_schema44683, output_checker44685, G__44686, G__44687, input_checker44684, app, ufv__, code, meta44725) {
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema44682 = output_schema44682;
            this.input_schema44683 = input_schema44683;
            this.output_checker44685 = output_checker44685;
            this.G__44686 = G__44686;
            this.G__44687 = G__44687;
            this.input_checker44684 = input_checker44684;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta44725 = meta44725;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide02.t44724.cljs$lang$type = true;
          t3tr0s_slides.slide02.t44724.cljs$lang$ctorStr = "t3tr0s-slides.slide02/t44724";
          t3tr0s_slides.slide02.t44724.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide02/t44724");
            };
          }(validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764);
          t3tr0s_slides.slide02.t44724.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide02.t44724.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs44727 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: mouse over the pieces.");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs44727) ? sablono.interpreter.attributes.call(null, attrs44727) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs44727) ? new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " pieces\n", sablono.interpreter.interpret.call(null, 
                function() {
                  var ps = t3tr0s_slides.slide02.piece_keys;
                  var first_p = cljs.core.first.call(null, ps);
                  var last_p = cljs.core.last.call(null, ps);
                  var iter__4278__auto__ = function(ps, first_p, last_p, attrs44727, ___$1, validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764) {
                    return function iter__44728(s__44729) {
                      return new cljs.core.LazySeq(null, function(ps, first_p, last_p, attrs44727, ___$1, validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764) {
                        return function() {
                          var s__44729__$1 = s__44729;
                          while (true) {
                            var temp__4126__auto__ = cljs.core.seq.call(null, s__44729__$1);
                            if (temp__4126__auto__) {
                              var s__44729__$2 = temp__4126__auto__;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__44729__$2)) {
                                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__44729__$2);
                                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                var b__44731 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                if (function() {
                                  var i__44730 = 0;
                                  while (true) {
                                    if (i__44730 < size__4277__auto__) {
                                      var p = cljs.core._nth.call(null, c__4276__auto__, i__44730);
                                      cljs.core.chunk_append.call(null, b__44731, function() {
                                        var pred__44738 = cljs.core._EQ_;
                                        var expr__44739 = p;
                                        if (cljs.core.truth_(pred__44738.call(null, first_p, expr__44739))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "  {");
                                        } else {
                                          if (cljs.core.truth_(pred__44738.call(null, last_p, expr__44739))) {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "})\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                          } else {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                          }
                                        }
                                      }());
                                      var G__44768 = i__44730 + 1;
                                      i__44730 = G__44768;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__44731), iter__44728.call(null, cljs.core.chunk_rest.call(null, s__44729__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__44731), null);
                                }
                              } else {
                                var p = cljs.core.first.call(null, s__44729__$2);
                                return cljs.core.cons.call(null, function() {
                                  var pred__44741 = cljs.core._EQ_;
                                  var expr__44742 = p;
                                  if (cljs.core.truth_(pred__44741.call(null, first_p, expr__44742))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "  {");
                                  } else {
                                    if (cljs.core.truth_(pred__44741.call(null, last_p, expr__44742))) {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "})\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                    } else {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                    }
                                  }
                                }(), iter__44728.call(null, cljs.core.rest.call(null, s__44729__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(ps, first_p, last_p, attrs44727, ___$1, validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764), null, null);
                    };
                  }(ps, first_p, last_p, attrs44727, ___$1, validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764);
                  return iter__4278__auto__.call(null, ps);
                }()), "\n\n", sablono.interpreter.interpret.call(null, function() {
                  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(self__.app);
                  if (cljs.core.truth_(temp__4126__auto__)) {
                    var p = temp__4126__auto__;
                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
                      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(self__.app);
                      if (cljs.core.truth_(temp__4126__auto____$1)) {
                        var i = temp__4126__auto____$1;
                        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.syntax_highlight.cmt.call(null, "; coord \x3d ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, t3tr0s_slides.slide02.pieces.call(null, p), i))));
                      } else {
                        return null;
                      }
                    }()), "\n"), t3tr0s_slides.syntax_highlight.cmt.call(null, "; piece \x3d ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p)));
                  } else {
                    return null;
                  }
                }())], null) : new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs44727), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " pieces\n", sablono.interpreter.interpret.call(null, function() {
                  var ps = t3tr0s_slides.slide02.piece_keys;
                  var first_p = cljs.core.first.call(null, ps);
                  var last_p = cljs.core.last.call(null, ps);
                  var iter__4278__auto__ = function(ps, first_p, last_p, attrs44727, ___$1, validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764) {
                    return function iter__44744(s__44745) {
                      return new cljs.core.LazySeq(null, function(ps, first_p, last_p, attrs44727, ___$1, validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764) {
                        return function() {
                          var s__44745__$1 = s__44745;
                          while (true) {
                            var temp__4126__auto__ = cljs.core.seq.call(null, s__44745__$1);
                            if (temp__4126__auto__) {
                              var s__44745__$2 = temp__4126__auto__;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__44745__$2)) {
                                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__44745__$2);
                                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                var b__44747 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                if (function() {
                                  var i__44746 = 0;
                                  while (true) {
                                    if (i__44746 < size__4277__auto__) {
                                      var p = cljs.core._nth.call(null, c__4276__auto__, i__44746);
                                      cljs.core.chunk_append.call(null, b__44747, function() {
                                        var pred__44754 = cljs.core._EQ_;
                                        var expr__44755 = p;
                                        if (cljs.core.truth_(pred__44754.call(null, first_p, expr__44755))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "  {");
                                        } else {
                                          if (cljs.core.truth_(pred__44754.call(null, last_p, expr__44755))) {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "})\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                          } else {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                          }
                                        }
                                      }());
                                      var G__44769 = i__44746 + 1;
                                      i__44746 = G__44769;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__44747), iter__44744.call(null, cljs.core.chunk_rest.call(null, s__44745__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__44747), null);
                                }
                              } else {
                                var p = cljs.core.first.call(null, s__44745__$2);
                                return cljs.core.cons.call(null, function() {
                                  var pred__44757 = cljs.core._EQ_;
                                  var expr__44758 = p;
                                  if (cljs.core.truth_(pred__44757.call(null, first_p, expr__44758))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "  {");
                                  } else {
                                    if (cljs.core.truth_(pred__44757.call(null, last_p, expr__44758))) {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "})\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                    } else {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                    }
                                  }
                                }(), iter__44744.call(null, cljs.core.rest.call(null, s__44745__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(ps, first_p, last_p, attrs44727, ___$1, validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764), null, null);
                    };
                  }(ps, first_p, last_p, attrs44727, ___$1, validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764);
                  return iter__4278__auto__.call(null, ps);
                }()), "\n\n", sablono.interpreter.interpret.call(null, function() {
                  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(self__.app);
                  if (cljs.core.truth_(temp__4126__auto__)) {
                    var p = temp__4126__auto__;
                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
                      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(self__.app);
                      if (cljs.core.truth_(temp__4126__auto____$1)) {
                        var i = temp__4126__auto____$1;
                        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.syntax_highlight.cmt.call(null, "; coord \x3d ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, t3tr0s_slides.slide02.pieces.call(null, p), i))));
                      } else {
                        return null;
                      }
                    }()), "\n"), t3tr0s_slides.syntax_highlight.cmt.call(null, "; piece \x3d ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p)));
                  } else {
                    return null;
                  }
                }())], null)));
              }()));
            };
          }(validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764);
          t3tr0s_slides.slide02.t44724.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764) {
            return function(_44726) {
              var self__ = this;
              var _44726__$1 = this;
              return self__.meta44725;
            };
          }(validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764);
          t3tr0s_slides.slide02.t44724.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764) {
            return function(_44726, meta44725__$1) {
              var self__ = this;
              var _44726__$1 = this;
              return new t3tr0s_slides.slide02.t44724(self__.owner, self__.validate__5821__auto__, self__.output_schema44682, self__.input_schema44683, self__.output_checker44685, self__.G__44686, self__.G__44687, self__.input_checker44684, self__.app, self__.ufv__, self__.code, meta44725__$1);
            };
          }(validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764);
          t3tr0s_slides.slide02.__GT_t44724 = function(validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764) {
            return function __GT_t44724(owner__$1, validate__5821__auto____$1, output_schema44682__$1, input_schema44683__$1, output_checker44685__$1, G__44686__$1, G__44687__$1, input_checker44684__$1, app__$1, ufv____$1, code__$1, meta44725) {
              return new t3tr0s_slides.slide02.t44724(owner__$1, validate__5821__auto____$1, output_schema44682__$1, input_schema44683__$1, output_checker44685__$1, G__44686__$1, G__44687__$1, input_checker44684__$1, app__$1, ufv____$1, code__$1, meta44725);
            };
          }(validate__5821__auto__, ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764);
        }
        return new t3tr0s_slides.slide02.t44724(owner, validate__5821__auto__, output_schema44682_44761, input_schema44683_44762, output_checker44685_44764, G__44686, G__44687, input_checker44684_44763, app, ufv___44760, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___44770 = output_checker44685_44764.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___44770)) {
        var error__5823__auto___44771 = temp__4126__auto___44770;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___44771)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema44682_44761, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___44771], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___44760, output_schema44682_44761, input_schema44683_44762, input_checker44684_44763, output_checker44685_44764);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide02.code), schema.core.make_fn_schema.call(null, output_schema44682_44761, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema44683_44762], null)));
t3tr0s_slides.slide02.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide02.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m44681) {
    return om.core.build.call(null, t3tr0s_slides.slide02.code, cursor__9685__auto__, m44681);
  };
  __GT_code = function(cursor__9685__auto__, m44681) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m44681);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide02.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide02.rows);
t3tr0s_slides.slide02.piece_index = function piece_index(x, y) {
  return cljs.core.some.call(null, cljs.core.identity, cljs.core.map.call(null, function(p1__44772_SHARP_) {
    return cljs.core.first.call(null, cljs.core.keep_indexed.call(null, function(i, p__44775) {
      var vec__44776 = p__44775;
      var px = cljs.core.nth.call(null, vec__44776, 0, null);
      var py = cljs.core.nth.call(null, vec__44776, 1, null);
      if (cljs.core._EQ_.call(null, px, x) && cljs.core._EQ_.call(null, py, y)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__44772_SHARP_, i], null);
      } else {
        return null;
      }
    }, t3tr0s_slides.slide02.piece_abs_coords.call(null, p1__44772_SHARP_)));
  }, cljs.core.keys.call(null, t3tr0s_slides.slide02.pieces)));
};
t3tr0s_slides.slide02.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide02.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide02.cell_size);
  var vec__44778 = t3tr0s_slides.slide02.piece_index.call(null, col, row);
  var piece = cljs.core.nth.call(null, vec__44778, 0, null);
  var index = cljs.core.nth.call(null, vec__44778, 1, null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return index;
    } else {
      return and__3541__auto__;
    }
  }())) {
    om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), piece);
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
  } else {
    return null;
  }
};
t3tr0s_slides.slide02.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__44779, is_piece, is_index, is_center) {
  var vec__44781 = p__44779;
  var x = cljs.core.nth.call(null, vec__44781, 0, null);
  var y = cljs.core.nth.call(null, vec__44781, 1, null);
  ctx.fillStyle = cljs.core.truth_(is_index) ? t3tr0s_slides.slide02.dark_purple : cljs.core.truth_(is_piece) ? t3tr0s_slides.slide02.dark_green : "transparent";
  ctx.strokeStyle = cljs.core.truth_(is_index) ? t3tr0s_slides.slide02.light_purple : cljs.core.truth_(is_piece) ? t3tr0s_slides.slide02.light_green : "#888";
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide02.cell_size * x;
  var ry = t3tr0s_slides.slide02.cell_size * y;
  var rs = t3tr0s_slides.slide02.cell_size;
  var cx = t3tr0s_slides.slide02.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide02.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide02.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide02.draw_piece_BANG_ = function draw_piece_BANG_(app, ctx, piece) {
  var is_piece = cljs.core._EQ_.call(null, piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app));
  var index = function() {
    var and__3541__auto__ = is_piece;
    if (and__3541__auto__) {
      return(new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app);
    } else {
      return and__3541__auto__;
    }
  }();
  var center = t3tr0s_slides.slide02.positions.call(null, piece);
  var seq__44794_44806 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide02.piece_abs_coords.call(null, piece)));
  var chunk__44795_44807 = null;
  var count__44796_44808 = 0;
  var i__44797_44809 = 0;
  while (true) {
    if (i__44797_44809 < count__44796_44808) {
      var vec__44798_44810 = cljs.core._nth.call(null, chunk__44795_44807, i__44797_44809);
      var i_44811 = cljs.core.nth.call(null, vec__44798_44810, 0, null);
      var c_44812 = cljs.core.nth.call(null, vec__44798_44810, 1, null);
      if (cljs.core._EQ_.call(null, i_44811, index)) {
      } else {
        t3tr0s_slides.slide02.draw_cell_BANG_.call(null, ctx, c_44812, is_piece, cljs.core._EQ_.call(null, i_44811, index), cljs.core._EQ_.call(null, c_44812, center));
      }
      var G__44813 = seq__44794_44806;
      var G__44814 = chunk__44795_44807;
      var G__44815 = count__44796_44808;
      var G__44816 = i__44797_44809 + 1;
      seq__44794_44806 = G__44813;
      chunk__44795_44807 = G__44814;
      count__44796_44808 = G__44815;
      i__44797_44809 = G__44816;
      continue;
    } else {
      var temp__4126__auto___44817 = cljs.core.seq.call(null, seq__44794_44806);
      if (temp__4126__auto___44817) {
        var seq__44794_44818__$1 = temp__4126__auto___44817;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__44794_44818__$1)) {
          var c__4309__auto___44819 = cljs.core.chunk_first.call(null, seq__44794_44818__$1);
          var G__44820 = cljs.core.chunk_rest.call(null, seq__44794_44818__$1);
          var G__44821 = c__4309__auto___44819;
          var G__44822 = cljs.core.count.call(null, c__4309__auto___44819);
          var G__44823 = 0;
          seq__44794_44806 = G__44820;
          chunk__44795_44807 = G__44821;
          count__44796_44808 = G__44822;
          i__44797_44809 = G__44823;
          continue;
        } else {
          var vec__44799_44824 = cljs.core.first.call(null, seq__44794_44818__$1);
          var i_44825 = cljs.core.nth.call(null, vec__44799_44824, 0, null);
          var c_44826 = cljs.core.nth.call(null, vec__44799_44824, 1, null);
          if (cljs.core._EQ_.call(null, i_44825, index)) {
          } else {
            t3tr0s_slides.slide02.draw_cell_BANG_.call(null, ctx, c_44826, is_piece, cljs.core._EQ_.call(null, i_44825, index), cljs.core._EQ_.call(null, c_44826, center));
          }
          var G__44827 = cljs.core.next.call(null, seq__44794_44818__$1);
          var G__44828 = null;
          var G__44829 = 0;
          var G__44830 = 0;
          seq__44794_44806 = G__44827;
          chunk__44795_44807 = G__44828;
          count__44796_44808 = G__44829;
          i__44797_44809 = G__44830;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__44800 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide02.piece_abs_coords.call(null, piece)));
  var chunk__44801 = null;
  var count__44802 = 0;
  var i__44803 = 0;
  while (true) {
    if (i__44803 < count__44802) {
      var vec__44804 = cljs.core._nth.call(null, chunk__44801, i__44803);
      var i = cljs.core.nth.call(null, vec__44804, 0, null);
      var c = cljs.core.nth.call(null, vec__44804, 1, null);
      if (cljs.core._EQ_.call(null, i, index)) {
        t3tr0s_slides.slide02.draw_cell_BANG_.call(null, ctx, c, is_piece, cljs.core._EQ_.call(null, i, index), cljs.core._EQ_.call(null, c, center));
      } else {
      }
      var G__44831 = seq__44800;
      var G__44832 = chunk__44801;
      var G__44833 = count__44802;
      var G__44834 = i__44803 + 1;
      seq__44800 = G__44831;
      chunk__44801 = G__44832;
      count__44802 = G__44833;
      i__44803 = G__44834;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__44800);
      if (temp__4126__auto__) {
        var seq__44800__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__44800__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__44800__$1);
          var G__44835 = cljs.core.chunk_rest.call(null, seq__44800__$1);
          var G__44836 = c__4309__auto__;
          var G__44837 = cljs.core.count.call(null, c__4309__auto__);
          var G__44838 = 0;
          seq__44800 = G__44835;
          chunk__44801 = G__44836;
          count__44802 = G__44837;
          i__44803 = G__44838;
          continue;
        } else {
          var vec__44805 = cljs.core.first.call(null, seq__44800__$1);
          var i = cljs.core.nth.call(null, vec__44805, 0, null);
          var c = cljs.core.nth.call(null, vec__44805, 1, null);
          if (cljs.core._EQ_.call(null, i, index)) {
            t3tr0s_slides.slide02.draw_cell_BANG_.call(null, ctx, c, is_piece, cljs.core._EQ_.call(null, i, index), cljs.core._EQ_.call(null, c, center));
          } else {
          }
          var G__44839 = cljs.core.next.call(null, seq__44800__$1);
          var G__44840 = null;
          var G__44841 = 0;
          var G__44842 = 0;
          seq__44800 = G__44839;
          chunk__44801 = G__44840;
          count__44802 = G__44841;
          i__44803 = G__44842;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide02.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide02.cell_size * t3tr0s_slides.slide02.cols, t3tr0s_slides.slide02.cell_size * t3tr0s_slides.slide02.rows);
  var seq__44847 = cljs.core.seq.call(null, t3tr0s_slides.slide02.piece_keys);
  var chunk__44848 = null;
  var count__44849 = 0;
  var i__44850 = 0;
  while (true) {
    if (i__44850 < count__44849) {
      var p = cljs.core._nth.call(null, chunk__44848, i__44850);
      t3tr0s_slides.slide02.draw_piece_BANG_.call(null, app, ctx, p);
      var G__44851 = seq__44847;
      var G__44852 = chunk__44848;
      var G__44853 = count__44849;
      var G__44854 = i__44850 + 1;
      seq__44847 = G__44851;
      chunk__44848 = G__44852;
      count__44849 = G__44853;
      i__44850 = G__44854;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__44847);
      if (temp__4126__auto__) {
        var seq__44847__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__44847__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__44847__$1);
          var G__44855 = cljs.core.chunk_rest.call(null, seq__44847__$1);
          var G__44856 = c__4309__auto__;
          var G__44857 = cljs.core.count.call(null, c__4309__auto__);
          var G__44858 = 0;
          seq__44847 = G__44855;
          chunk__44848 = G__44856;
          count__44849 = G__44857;
          i__44850 = G__44858;
          continue;
        } else {
          var p = cljs.core.first.call(null, seq__44847__$1);
          t3tr0s_slides.slide02.draw_piece_BANG_.call(null, app, ctx, p);
          var G__44859 = cljs.core.next.call(null, seq__44847__$1);
          var G__44860 = null;
          var G__44861 = 0;
          var G__44862 = 0;
          seq__44847 = G__44859;
          chunk__44848 = G__44860;
          count__44849 = G__44861;
          i__44850 = G__44862;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
var ufv___44877 = schema.utils.use_fn_validation;
var output_schema44865_44878 = schema.core.Any;
var input_schema44866_44879 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker44867_44880 = schema.core.checker.call(null, input_schema44866_44879);
var output_checker44868_44881 = schema.core.checker.call(null, output_schema44865_44878);
t3tr0s_slides.slide02.canvas = function(ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881) {
  return function canvas(G__44869, G__44870) {
    var validate__5821__auto__ = ufv___44877.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___44882 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__44869, G__44870], null);
      var temp__4126__auto___44883 = input_checker44867_44880.call(null, args__5822__auto___44882);
      if (cljs.core.truth_(temp__4126__auto___44883)) {
        var error__5823__auto___44884 = temp__4126__auto___44883;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___44884)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema44866_44879, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___44882, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___44884], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__44869;
      var owner = G__44870;
      while (true) {
        if (typeof t3tr0s_slides.slide02.t44874 !== "undefined") {
        } else {
          t3tr0s_slides.slide02.t44874 = function(input_checker44867, G__44870, G__44869, output_checker44868, owner, validate__5821__auto__, canvas, output_schema44865, app, ufv__, input_schema44866, meta44875) {
            this.input_checker44867 = input_checker44867;
            this.G__44870 = G__44870;
            this.G__44869 = G__44869;
            this.output_checker44868 = output_checker44868;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.canvas = canvas;
            this.output_schema44865 = output_schema44865;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_schema44866 = input_schema44866;
            this.meta44875 = meta44875;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide02.t44874.cljs$lang$type = true;
          t3tr0s_slides.slide02.t44874.cljs$lang$ctorStr = "t3tr0s-slides.slide02/t44874";
          t3tr0s_slides.slide02.t44874.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide02/t44874");
            };
          }(validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881);
          t3tr0s_slides.slide02.t44874.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide02.t44874.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseMove":function(___$1, validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881) {
                return function(p1__44863_SHARP_) {
                  return t3tr0s_slides.slide02.canvas_mouse.call(null, self__.app, self__.owner, p1__44863_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881)}));
            };
          }(validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881);
          t3tr0s_slides.slide02.t44874.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide02.t44874.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide02.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881);
          t3tr0s_slides.slide02.t44874.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide02.t44874.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide02.cols * t3tr0s_slides.slide02.cell_size;
              canvas__$2.height = t3tr0s_slides.slide02.rows * t3tr0s_slides.slide02.cell_size;
              return t3tr0s_slides.slide02.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881);
          t3tr0s_slides.slide02.t44874.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881) {
            return function(_44876) {
              var self__ = this;
              var _44876__$1 = this;
              return self__.meta44875;
            };
          }(validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881);
          t3tr0s_slides.slide02.t44874.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881) {
            return function(_44876, meta44875__$1) {
              var self__ = this;
              var _44876__$1 = this;
              return new t3tr0s_slides.slide02.t44874(self__.input_checker44867, self__.G__44870, self__.G__44869, self__.output_checker44868, self__.owner, self__.validate__5821__auto__, self__.canvas, self__.output_schema44865, self__.app, self__.ufv__, self__.input_schema44866, meta44875__$1);
            };
          }(validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881);
          t3tr0s_slides.slide02.__GT_t44874 = function(validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881) {
            return function __GT_t44874(input_checker44867__$1, G__44870__$1, G__44869__$1, output_checker44868__$1, owner__$1, validate__5821__auto____$1, canvas__$1, output_schema44865__$1, app__$1, ufv____$1, input_schema44866__$1, meta44875) {
              return new t3tr0s_slides.slide02.t44874(input_checker44867__$1, G__44870__$1, G__44869__$1, output_checker44868__$1, owner__$1, validate__5821__auto____$1, canvas__$1, output_schema44865__$1, app__$1, ufv____$1, input_schema44866__$1, meta44875);
            };
          }(validate__5821__auto__, ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881);
        }
        return new t3tr0s_slides.slide02.t44874(input_checker44867_44880, G__44870, G__44869, output_checker44868_44881, owner, validate__5821__auto__, canvas, output_schema44865_44878, app, ufv___44877, input_schema44866_44879, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___44885 = output_checker44868_44881.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___44885)) {
        var error__5823__auto___44886 = temp__4126__auto___44885;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___44886)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema44865_44878, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___44886], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___44877, output_schema44865_44878, input_schema44866_44879, input_checker44867_44880, output_checker44868_44881);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide02.canvas), schema.core.make_fn_schema.call(null, output_schema44865_44878, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema44866_44879], null)));
t3tr0s_slides.slide02.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide02.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m44864) {
    return om.core.build.call(null, t3tr0s_slides.slide02.canvas, cursor__9685__auto__, m44864);
  };
  __GT_canvas = function(cursor__9685__auto__, m44864) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m44864);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___44904 = schema.utils.use_fn_validation;
var output_schema44888_44905 = schema.core.Any;
var input_schema44889_44906 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker44890_44907 = schema.core.checker.call(null, input_schema44889_44906);
var output_checker44891_44908 = schema.core.checker.call(null, output_schema44888_44905);
t3tr0s_slides.slide02.slide = function(ufv___44904, output_schema44888_44905, input_schema44889_44906, input_checker44890_44907, output_checker44891_44908) {
  return function slide(G__44892, G__44893) {
    var validate__5821__auto__ = ufv___44904.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___44909 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__44892, G__44893], null);
      var temp__4126__auto___44910 = input_checker44890_44907.call(null, args__5822__auto___44909);
      if (cljs.core.truth_(temp__4126__auto___44910)) {
        var error__5823__auto___44911 = temp__4126__auto___44910;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___44911)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema44889_44906, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___44909, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___44911], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__44892;
      var owner = G__44893;
      while (true) {
        if (typeof t3tr0s_slides.slide02.t44899 !== "undefined") {
        } else {
          t3tr0s_slides.slide02.t44899 = function(owner, validate__5821__auto__, G__44893, output_schema44888, output_checker44891, input_checker44890, input_schema44889, G__44892, slide, app, ufv__, meta44900) {
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__44893 = G__44893;
            this.output_schema44888 = output_schema44888;
            this.output_checker44891 = output_checker44891;
            this.input_checker44890 = input_checker44890;
            this.input_schema44889 = input_schema44889;
            this.G__44892 = G__44892;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta44900 = meta44900;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide02.t44899.cljs$lang$type = true;
          t3tr0s_slides.slide02.t44899.cljs$lang$ctorStr = "t3tr0s-slides.slide02/t44899";
          t3tr0s_slides.slide02.t44899.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___44904, output_schema44888_44905, input_schema44889_44906, input_checker44890_44907, output_checker44891_44908) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide02/t44899");
            };
          }(validate__5821__auto__, ufv___44904, output_schema44888_44905, input_schema44889_44906, input_checker44890_44907, output_checker44891_44908);
          t3tr0s_slides.slide02.t44899.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide02.t44899.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___44904, output_schema44888_44905, input_schema44889_44906, input_checker44890_44907, output_checker44891_44908) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "2. Create the pieces."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide02.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide02.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___44904, output_schema44888_44905, input_schema44889_44906, input_checker44890_44907, output_checker44891_44908);
          t3tr0s_slides.slide02.t44899.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___44904, output_schema44888_44905, input_schema44889_44906, input_checker44890_44907, output_checker44891_44908) {
            return function(_44901) {
              var self__ = this;
              var _44901__$1 = this;
              return self__.meta44900;
            };
          }(validate__5821__auto__, ufv___44904, output_schema44888_44905, input_schema44889_44906, input_checker44890_44907, output_checker44891_44908);
          t3tr0s_slides.slide02.t44899.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___44904, output_schema44888_44905, input_schema44889_44906, input_checker44890_44907, output_checker44891_44908) {
            return function(_44901, meta44900__$1) {
              var self__ = this;
              var _44901__$1 = this;
              return new t3tr0s_slides.slide02.t44899(self__.owner, self__.validate__5821__auto__, self__.G__44893, self__.output_schema44888, self__.output_checker44891, self__.input_checker44890, self__.input_schema44889, self__.G__44892, self__.slide, self__.app, self__.ufv__, meta44900__$1);
            };
          }(validate__5821__auto__, ufv___44904, output_schema44888_44905, input_schema44889_44906, input_checker44890_44907, output_checker44891_44908);
          t3tr0s_slides.slide02.__GT_t44899 = function(validate__5821__auto__, ufv___44904, output_schema44888_44905, input_schema44889_44906, input_checker44890_44907, output_checker44891_44908) {
            return function __GT_t44899(owner__$1, validate__5821__auto____$1, G__44893__$1, output_schema44888__$1, output_checker44891__$1, input_checker44890__$1, input_schema44889__$1, G__44892__$1, slide__$1, app__$1, ufv____$1, meta44900) {
              return new t3tr0s_slides.slide02.t44899(owner__$1, validate__5821__auto____$1, G__44893__$1, output_schema44888__$1, output_checker44891__$1, input_checker44890__$1, input_schema44889__$1, G__44892__$1, slide__$1, app__$1, ufv____$1, meta44900);
            };
          }(validate__5821__auto__, ufv___44904, output_schema44888_44905, input_schema44889_44906, input_checker44890_44907, output_checker44891_44908);
        }
        return new t3tr0s_slides.slide02.t44899(owner, validate__5821__auto__, G__44893, output_schema44888_44905, output_checker44891_44908, input_checker44890_44907, input_schema44889_44906, G__44892, slide, app, ufv___44904, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___44912 = output_checker44891_44908.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___44912)) {
        var error__5823__auto___44913 = temp__4126__auto___44912;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___44913)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema44888_44905, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___44913], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___44904, output_schema44888_44905, input_schema44889_44906, input_checker44890_44907, output_checker44891_44908);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide02.slide), schema.core.make_fn_schema.call(null, output_schema44888_44905, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema44889_44906], null)));
t3tr0s_slides.slide02.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide02.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m44887) {
    return om.core.build.call(null, t3tr0s_slides.slide02.slide, cursor__9685__auto__, m44887);
  };
  __GT_slide = function(cursor__9685__auto__, m44887) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m44887);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide02.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide02.slide, t3tr0s_slides.slide02.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide02.resume = function resume() {
  return null;
};
t3tr0s_slides.slide02.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide06");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide06.dark_green = "#143";
t3tr0s_slides.slide06.light_green = "#175";
t3tr0s_slides.slide06.dark_purple = "#449";
t3tr0s_slides.slide06.light_purple = "#6ad";
t3tr0s_slides.slide06.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide06.rotate_coord = function rotate_coord(p__45407) {
  var vec__45409 = p__45407;
  var x = cljs.core.nth.call(null, vec__45409, 0, null);
  var y = cljs.core.nth.call(null, vec__45409, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide06.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide06.rotate_coord, piece);
};
t3tr0s_slides.slide06.move_left = function move_left(p__45410) {
  var vec__45412 = p__45410;
  var x = cljs.core.nth.call(null, vec__45412, 0, null);
  var y = cljs.core.nth.call(null, vec__45412, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x - 1, y], null);
};
t3tr0s_slides.slide06.move_right = function move_right(p__45413) {
  var vec__45415 = p__45413;
  var x = cljs.core.nth.call(null, vec__45415, 0, null);
  var y = cljs.core.nth.call(null, vec__45415, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + 1, y], null);
};
t3tr0s_slides.slide06.move_down = function move_down(p__45416) {
  var vec__45418 = p__45416;
  var x = cljs.core.nth.call(null, vec__45418, 0, null);
  var y = cljs.core.nth.call(null, vec__45418, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y + 1], null);
};
t3tr0s_slides.slide06.g0 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null), new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "J", "J", 1394734828)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide06.pieces)], null);
t3tr0s_slides.slide06.g1 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g0, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_left);
t3tr0s_slides.slide06.g2 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_left);
t3tr0s_slides.slide06.g3 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g2, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide06.rotate_piece);
t3tr0s_slides.slide06.g4 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g3, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g5 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g4, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g6 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g5, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide06.rotate_piece);
t3tr0s_slides.slide06.g7 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g6, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_right);
t3tr0s_slides.slide06.g8 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g7, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_right);
t3tr0s_slides.slide06.g9 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g8, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide06.rotate_piece);
t3tr0s_slides.slide06.g10 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g9, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g11 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g10, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g12 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g11, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g13 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g12, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g14 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g13, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g15 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g14, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.states = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [t3tr0s_slides.slide06.g0, t3tr0s_slides.slide06.g1, t3tr0s_slides.slide06.g2, t3tr0s_slides.slide06.g3, t3tr0s_slides.slide06.g4, t3tr0s_slides.slide06.g5, t3tr0s_slides.slide06.g6, t3tr0s_slides.slide06.g7, t3tr0s_slides.slide06.g8, t3tr0s_slides.slide06.g9, t3tr0s_slides.slide06.g10, t3tr0s_slides.slide06.g11, t3tr0s_slides.slide06.g12, t3tr0s_slides.slide06.g13, t3tr0s_slides.slide06.g14, 
t3tr0s_slides.slide06.g15], null);
t3tr0s_slides.slide06.state_places = cljs.core.PersistentHashMap.fromArrays([t3tr0s_slides.slide06.g5, t3tr0s_slides.slide06.g6, t3tr0s_slides.slide06.g13, t3tr0s_slides.slide06.g0, t3tr0s_slides.slide06.g4, t3tr0s_slides.slide06.g2, t3tr0s_slides.slide06.g11, t3tr0s_slides.slide06.g14, t3tr0s_slides.slide06.g10, t3tr0s_slides.slide06.g9, t3tr0s_slides.slide06.g3, t3tr0s_slides.slide06.g8, t3tr0s_slides.slide06.g1, t3tr0s_slides.slide06.g15, t3tr0s_slides.slide06.g12, t3tr0s_slides.slide06.g7], [5, 
6, 13, 0, 4, 2, 11, 14, 10, 9, 3, 8, 1, 15, 12, 7]);
t3tr0s_slides.slide06.rotate_coord = function rotate_coord(p__45419) {
  var vec__45421 = p__45419;
  var x = cljs.core.nth.call(null, vec__45421, 0, null);
  var y = cljs.core.nth.call(null, vec__45421, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide06.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide06.rotate_coord, piece);
};
t3tr0s_slides.slide06.piece_abs_coords = function piece_abs_coords(piece, p__45422) {
  var vec__45426 = p__45422;
  var cx = cljs.core.nth.call(null, vec__45426, 0, null);
  var cy = cljs.core.nth.call(null, vec__45426, 1, null);
  return cljs.core.mapv.call(null, function(vec__45426, cx, cy) {
    return function(p__45427) {
      var vec__45428 = p__45427;
      var x = cljs.core.nth.call(null, vec__45428, 0, null);
      var y = cljs.core.nth.call(null, vec__45428, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__45426, cx, cy), piece);
};
t3tr0s_slides.slide06.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "position", "position", -2011731912), null], null));
t3tr0s_slides.slide06.rows = 20;
t3tr0s_slides.slide06.cols = 10;
t3tr0s_slides.slide06.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide06.cols, 0));
t3tr0s_slides.slide06.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide06.rows, t3tr0s_slides.slide06.empty_row));
t3tr0s_slides.slide06.state_code = function state_code(app, rkey, state, code_str) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), rkey, new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, state, app) ? "active-col-d9099" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, state);
  }], null), code_str], null);
};
var ufv___45442 = schema.utils.use_fn_validation;
var output_schema45430_45443 = schema.core.Any;
var input_schema45431_45444 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker45432_45445 = schema.core.checker.call(null, input_schema45431_45444);
var output_checker45433_45446 = schema.core.checker.call(null, output_schema45430_45443);
t3tr0s_slides.slide06.code = function(ufv___45442, output_schema45430_45443, input_schema45431_45444, input_checker45432_45445, output_checker45433_45446) {
  return function code(G__45434, G__45435) {
    var validate__5821__auto__ = ufv___45442.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___45447 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__45434, G__45435], null);
      var temp__4126__auto___45448 = input_checker45432_45445.call(null, args__5822__auto___45447);
      if (cljs.core.truth_(temp__4126__auto___45448)) {
        var error__5823__auto___45449 = temp__4126__auto___45448;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___45449)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema45431_45444, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___45447, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45449], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__45434;
      var owner = G__45435;
      while (true) {
        if (typeof t3tr0s_slides.slide06.t45439 !== "undefined") {
        } else {
          t3tr0s_slides.slide06.t45439 = function(owner, output_checker45433, input_schema45431, validate__5821__auto__, G__45434, input_checker45432, output_schema45430, app, G__45435, ufv__, code, meta45440) {
            this.owner = owner;
            this.output_checker45433 = output_checker45433;
            this.input_schema45431 = input_schema45431;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__45434 = G__45434;
            this.input_checker45432 = input_checker45432;
            this.output_schema45430 = output_schema45430;
            this.app = app;
            this.G__45435 = G__45435;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta45440 = meta45440;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide06.t45439.cljs$lang$type = true;
          t3tr0s_slides.slide06.t45439.cljs$lang$ctorStr = "t3tr0s-slides.slide06/t45439";
          t3tr0s_slides.slide06.t45439.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___45442, output_schema45430_45443, input_schema45431_45444, input_checker45432_45445, output_checker45433_45446) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide06/t45439");
            };
          }(validate__5821__auto__, ufv___45442, output_schema45430_45443, input_schema45431_45444, input_checker45432_45445, output_checker45433_45446);
          t3tr0s_slides.slide06.t45439.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide06.t45439.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___45442, output_schema45430_45443, input_schema45431_45444, input_checker45432_45445, output_checker45433_45446) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code({"id":"lang-clj", "ref":"code"}, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " game-state\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "atom")), " {", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " empty-board]\n", "         ", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":J")), " pieces)\n", "         ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " [", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "4")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "6")), "]}))\n", 
              "\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: mouse over the states.")), "\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g1", t3tr0s_slides.slide06.g1, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-left)\n"), 
              t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g2", t3tr0s_slides.slide06.g2, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-left)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g3", t3tr0s_slides.slide06.g3, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]    rotate-piece)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g4", t3tr0s_slides.slide06.g4, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, 
              self__.app, "g5", t3tr0s_slides.slide06.g5, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.slide06.state_code.call(null, self__.app, "g6", t3tr0s_slides.slide06.g6, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]    rotate-piece)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, 
              "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g7", t3tr0s_slides.slide06.g7, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-right)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, 
              "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g8", t3tr0s_slides.slide06.g8, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-right)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g9", t3tr0s_slides.slide06.g9, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
              "]    rotate-piece)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g10", t3tr0s_slides.slide06.g10, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g11", t3tr0s_slides.slide06.g11, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g12", 
              t3tr0s_slides.slide06.g12, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.slide06.state_code.call(null, self__.app, "g13", t3tr0s_slides.slide06.g13, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, 
              "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g14", t3tr0s_slides.slide06.g14, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, 
              "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g15", t3tr0s_slides.slide06.g15, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))))));
            };
          }(validate__5821__auto__, ufv___45442, output_schema45430_45443, input_schema45431_45444, input_checker45432_45445, output_checker45433_45446);
          t3tr0s_slides.slide06.t45439.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___45442, output_schema45430_45443, input_schema45431_45444, input_checker45432_45445, output_checker45433_45446) {
            return function(_45441) {
              var self__ = this;
              var _45441__$1 = this;
              return self__.meta45440;
            };
          }(validate__5821__auto__, ufv___45442, output_schema45430_45443, input_schema45431_45444, input_checker45432_45445, output_checker45433_45446);
          t3tr0s_slides.slide06.t45439.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___45442, output_schema45430_45443, input_schema45431_45444, input_checker45432_45445, output_checker45433_45446) {
            return function(_45441, meta45440__$1) {
              var self__ = this;
              var _45441__$1 = this;
              return new t3tr0s_slides.slide06.t45439(self__.owner, self__.output_checker45433, self__.input_schema45431, self__.validate__5821__auto__, self__.G__45434, self__.input_checker45432, self__.output_schema45430, self__.app, self__.G__45435, self__.ufv__, self__.code, meta45440__$1);
            };
          }(validate__5821__auto__, ufv___45442, output_schema45430_45443, input_schema45431_45444, input_checker45432_45445, output_checker45433_45446);
          t3tr0s_slides.slide06.__GT_t45439 = function(validate__5821__auto__, ufv___45442, output_schema45430_45443, input_schema45431_45444, input_checker45432_45445, output_checker45433_45446) {
            return function __GT_t45439(owner__$1, output_checker45433__$1, input_schema45431__$1, validate__5821__auto____$1, G__45434__$1, input_checker45432__$1, output_schema45430__$1, app__$1, G__45435__$1, ufv____$1, code__$1, meta45440) {
              return new t3tr0s_slides.slide06.t45439(owner__$1, output_checker45433__$1, input_schema45431__$1, validate__5821__auto____$1, G__45434__$1, input_checker45432__$1, output_schema45430__$1, app__$1, G__45435__$1, ufv____$1, code__$1, meta45440);
            };
          }(validate__5821__auto__, ufv___45442, output_schema45430_45443, input_schema45431_45444, input_checker45432_45445, output_checker45433_45446);
        }
        return new t3tr0s_slides.slide06.t45439(owner, output_checker45433_45446, input_schema45431_45444, validate__5821__auto__, G__45434, input_checker45432_45445, output_schema45430_45443, app, G__45435, ufv___45442, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45450 = output_checker45433_45446.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45450)) {
        var error__5823__auto___45451 = temp__4126__auto___45450;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___45451)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema45430_45443, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45451], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___45442, output_schema45430_45443, input_schema45431_45444, input_checker45432_45445, output_checker45433_45446);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide06.code), schema.core.make_fn_schema.call(null, output_schema45430_45443, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema45431_45444], null)));
t3tr0s_slides.slide06.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide06.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m45429) {
    return om.core.build.call(null, t3tr0s_slides.slide06.code, cursor__9685__auto__, m45429);
  };
  __GT_code = function(cursor__9685__auto__, m45429) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m45429);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide06.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide06.rows);
t3tr0s_slides.slide06.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__45452, is_center) {
  var vec__45454 = p__45452;
  var x = cljs.core.nth.call(null, vec__45454, 0, null);
  var y = cljs.core.nth.call(null, vec__45454, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide06.cell_size * x;
  var ry = t3tr0s_slides.slide06.cell_size * y;
  var rs = t3tr0s_slides.slide06.cell_size;
  var cx = t3tr0s_slides.slide06.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide06.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide06.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide06.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__45461 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide06.piece_abs_coords.call(null, piece, pos)));
  var chunk__45462 = null;
  var count__45463 = 0;
  var i__45464 = 0;
  while (true) {
    if (i__45464 < count__45463) {
      var vec__45465 = cljs.core._nth.call(null, chunk__45462, i__45464);
      var i = cljs.core.nth.call(null, vec__45465, 0, null);
      var c = cljs.core.nth.call(null, vec__45465, 1, null);
      t3tr0s_slides.slide06.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__45467 = seq__45461;
      var G__45468 = chunk__45462;
      var G__45469 = count__45463;
      var G__45470 = i__45464 + 1;
      seq__45461 = G__45467;
      chunk__45462 = G__45468;
      count__45463 = G__45469;
      i__45464 = G__45470;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__45461);
      if (temp__4126__auto__) {
        var seq__45461__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__45461__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__45461__$1);
          var G__45471 = cljs.core.chunk_rest.call(null, seq__45461__$1);
          var G__45472 = c__4309__auto__;
          var G__45473 = cljs.core.count.call(null, c__4309__auto__);
          var G__45474 = 0;
          seq__45461 = G__45471;
          chunk__45462 = G__45472;
          count__45463 = G__45473;
          i__45464 = G__45474;
          continue;
        } else {
          var vec__45466 = cljs.core.first.call(null, seq__45461__$1);
          var i = cljs.core.nth.call(null, vec__45466, 0, null);
          var c = cljs.core.nth.call(null, vec__45466, 1, null);
          t3tr0s_slides.slide06.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__45475 = cljs.core.next.call(null, seq__45461__$1);
          var G__45476 = null;
          var G__45477 = 0;
          var G__45478 = 0;
          seq__45461 = G__45475;
          chunk__45462 = G__45476;
          count__45463 = G__45477;
          i__45464 = G__45478;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide06.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide06.cell_size * t3tr0s_slides.slide06.cols, t3tr0s_slides.slide06.cell_size * t3tr0s_slides.slide06.rows);
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    var places_45495 = t3tr0s_slides.slide06.state_places.call(null, app);
    ctx.fillStyle = "#555";
    ctx.strokeStyle = "#AAA";
    var seq__45487_45496 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, cljs.core.take.call(null, places_45495, t3tr0s_slides.slide06.states)));
    var chunk__45488_45497 = null;
    var count__45489_45498 = 0;
    var i__45490_45499 = 0;
    while (true) {
      if (i__45490_45499 < count__45489_45498) {
        var vec__45491_45500 = cljs.core._nth.call(null, chunk__45488_45497, i__45490_45499);
        var i_45501 = cljs.core.nth.call(null, vec__45491_45500, 0, null);
        var map__45492_45502 = cljs.core.nth.call(null, vec__45491_45500, 1, null);
        var map__45492_45503__$1 = cljs.core.seq_QMARK_.call(null, map__45492_45502) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45492_45502) : map__45492_45502;
        var position_45504 = cljs.core.get.call(null, map__45492_45503__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
        var piece_45505__$1 = cljs.core.get.call(null, map__45492_45503__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
        var x_45506 = 7;
        ctx.globalAlpha = function() {
          var x__3860__auto__ = 0;
          var y__3861__auto__ = function() {
            var x__3867__auto__ = x_45506;
            var y__3868__auto__ = i_45501 - (places_45495 - x_45506);
            return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
          }();
          return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
        }() / x_45506 / 5;
        t3tr0s_slides.slide06.draw_piece_BANG_.call(null, ctx, piece_45505__$1, position_45504);
        var G__45507 = seq__45487_45496;
        var G__45508 = chunk__45488_45497;
        var G__45509 = count__45489_45498;
        var G__45510 = i__45490_45499 + 1;
        seq__45487_45496 = G__45507;
        chunk__45488_45497 = G__45508;
        count__45489_45498 = G__45509;
        i__45490_45499 = G__45510;
        continue;
      } else {
        var temp__4126__auto___45511 = cljs.core.seq.call(null, seq__45487_45496);
        if (temp__4126__auto___45511) {
          var seq__45487_45512__$1 = temp__4126__auto___45511;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__45487_45512__$1)) {
            var c__4309__auto___45513 = cljs.core.chunk_first.call(null, seq__45487_45512__$1);
            var G__45514 = cljs.core.chunk_rest.call(null, seq__45487_45512__$1);
            var G__45515 = c__4309__auto___45513;
            var G__45516 = cljs.core.count.call(null, c__4309__auto___45513);
            var G__45517 = 0;
            seq__45487_45496 = G__45514;
            chunk__45488_45497 = G__45515;
            count__45489_45498 = G__45516;
            i__45490_45499 = G__45517;
            continue;
          } else {
            var vec__45493_45518 = cljs.core.first.call(null, seq__45487_45512__$1);
            var i_45519 = cljs.core.nth.call(null, vec__45493_45518, 0, null);
            var map__45494_45520 = cljs.core.nth.call(null, vec__45493_45518, 1, null);
            var map__45494_45521__$1 = cljs.core.seq_QMARK_.call(null, map__45494_45520) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45494_45520) : map__45494_45520;
            var position_45522 = cljs.core.get.call(null, map__45494_45521__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
            var piece_45523__$1 = cljs.core.get.call(null, map__45494_45521__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
            var x_45524 = 7;
            ctx.globalAlpha = function() {
              var x__3860__auto__ = 0;
              var y__3861__auto__ = function() {
                var x__3867__auto__ = x_45524;
                var y__3868__auto__ = i_45519 - (places_45495 - x_45524);
                return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
              }();
              return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
            }() / x_45524 / 5;
            t3tr0s_slides.slide06.draw_piece_BANG_.call(null, ctx, piece_45523__$1, position_45522);
            var G__45525 = cljs.core.next.call(null, seq__45487_45512__$1);
            var G__45526 = null;
            var G__45527 = 0;
            var G__45528 = 0;
            seq__45487_45496 = G__45525;
            chunk__45488_45497 = G__45526;
            count__45489_45498 = G__45527;
            i__45490_45499 = G__45528;
            continue;
          }
        } else {
        }
      }
      break;
    }
    ctx.globalAlpha = 1;
    ctx.fillStyle = t3tr0s_slides.slide06.dark_purple;
    ctx.strokeStyle = t3tr0s_slides.slide06.light_purple;
    return t3tr0s_slides.slide06.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
var ufv___45546 = schema.utils.use_fn_validation;
var output_schema45530_45547 = schema.core.Any;
var input_schema45531_45548 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker45532_45549 = schema.core.checker.call(null, input_schema45531_45548);
var output_checker45533_45550 = schema.core.checker.call(null, output_schema45530_45547);
t3tr0s_slides.slide06.canvas = function(ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550) {
  return function canvas(G__45534, G__45535) {
    var validate__5821__auto__ = ufv___45546.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___45551 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__45534, G__45535], null);
      var temp__4126__auto___45552 = input_checker45532_45549.call(null, args__5822__auto___45551);
      if (cljs.core.truth_(temp__4126__auto___45552)) {
        var error__5823__auto___45553 = temp__4126__auto___45552;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___45553)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema45531_45548, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___45551, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45553], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__45534;
      var owner = G__45535;
      while (true) {
        if (typeof t3tr0s_slides.slide06.t45541 !== "undefined") {
        } else {
          t3tr0s_slides.slide06.t45541 = function(owner, output_checker45533, validate__5821__auto__, output_schema45530, input_schema45531, canvas, G__45535, input_checker45532, app, ufv__, G__45534, meta45542) {
            this.owner = owner;
            this.output_checker45533 = output_checker45533;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema45530 = output_schema45530;
            this.input_schema45531 = input_schema45531;
            this.canvas = canvas;
            this.G__45535 = G__45535;
            this.input_checker45532 = input_checker45532;
            this.app = app;
            this.ufv__ = ufv__;
            this.G__45534 = G__45534;
            this.meta45542 = meta45542;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide06.t45541.cljs$lang$type = true;
          t3tr0s_slides.slide06.t45541.cljs$lang$ctorStr = "t3tr0s-slides.slide06/t45541";
          t3tr0s_slides.slide06.t45541.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide06/t45541");
            };
          }(validate__5821__auto__, ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550);
          t3tr0s_slides.slide06.t45541.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide06.t45541.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550);
          t3tr0s_slides.slide06.t45541.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide06.t45541.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide06.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550);
          t3tr0s_slides.slide06.t45541.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide06.t45541.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide06.cols * t3tr0s_slides.slide06.cell_size;
              canvas__$2.height = t3tr0s_slides.slide06.rows * t3tr0s_slides.slide06.cell_size;
              return t3tr0s_slides.slide06.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550);
          t3tr0s_slides.slide06.t45541.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550) {
            return function(_45543) {
              var self__ = this;
              var _45543__$1 = this;
              return self__.meta45542;
            };
          }(validate__5821__auto__, ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550);
          t3tr0s_slides.slide06.t45541.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550) {
            return function(_45543, meta45542__$1) {
              var self__ = this;
              var _45543__$1 = this;
              return new t3tr0s_slides.slide06.t45541(self__.owner, self__.output_checker45533, self__.validate__5821__auto__, self__.output_schema45530, self__.input_schema45531, self__.canvas, self__.G__45535, self__.input_checker45532, self__.app, self__.ufv__, self__.G__45534, meta45542__$1);
            };
          }(validate__5821__auto__, ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550);
          t3tr0s_slides.slide06.__GT_t45541 = function(validate__5821__auto__, ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550) {
            return function __GT_t45541(owner__$1, output_checker45533__$1, validate__5821__auto____$1, output_schema45530__$1, input_schema45531__$1, canvas__$1, G__45535__$1, input_checker45532__$1, app__$1, ufv____$1, G__45534__$1, meta45542) {
              return new t3tr0s_slides.slide06.t45541(owner__$1, output_checker45533__$1, validate__5821__auto____$1, output_schema45530__$1, input_schema45531__$1, canvas__$1, G__45535__$1, input_checker45532__$1, app__$1, ufv____$1, G__45534__$1, meta45542);
            };
          }(validate__5821__auto__, ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550);
        }
        return new t3tr0s_slides.slide06.t45541(owner, output_checker45533_45550, validate__5821__auto__, output_schema45530_45547, input_schema45531_45548, canvas, G__45535, input_checker45532_45549, app, ufv___45546, G__45534, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45554 = output_checker45533_45550.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45554)) {
        var error__5823__auto___45555 = temp__4126__auto___45554;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___45555)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema45530_45547, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45555], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___45546, output_schema45530_45547, input_schema45531_45548, input_checker45532_45549, output_checker45533_45550);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide06.canvas), schema.core.make_fn_schema.call(null, output_schema45530_45547, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema45531_45548], null)));
t3tr0s_slides.slide06.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide06.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m45529) {
    return om.core.build.call(null, t3tr0s_slides.slide06.canvas, cursor__9685__auto__, m45529);
  };
  __GT_canvas = function(cursor__9685__auto__, m45529) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m45529);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___45573 = schema.utils.use_fn_validation;
var output_schema45557_45574 = schema.core.Any;
var input_schema45558_45575 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker45559_45576 = schema.core.checker.call(null, input_schema45558_45575);
var output_checker45560_45577 = schema.core.checker.call(null, output_schema45557_45574);
t3tr0s_slides.slide06.slide = function(ufv___45573, output_schema45557_45574, input_schema45558_45575, input_checker45559_45576, output_checker45560_45577) {
  return function slide(G__45561, G__45562) {
    var validate__5821__auto__ = ufv___45573.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___45578 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__45561, G__45562], null);
      var temp__4126__auto___45579 = input_checker45559_45576.call(null, args__5822__auto___45578);
      if (cljs.core.truth_(temp__4126__auto___45579)) {
        var error__5823__auto___45580 = temp__4126__auto___45579;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___45580)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema45558_45575, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___45578, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45580], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__45561;
      var owner = G__45562;
      while (true) {
        if (typeof t3tr0s_slides.slide06.t45568 !== "undefined") {
        } else {
          t3tr0s_slides.slide06.t45568 = function(owner, output_checker45560, validate__5821__auto__, G__45561, output_schema45557, G__45562, input_schema45558, slide, app, ufv__, input_checker45559, meta45569) {
            this.owner = owner;
            this.output_checker45560 = output_checker45560;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__45561 = G__45561;
            this.output_schema45557 = output_schema45557;
            this.G__45562 = G__45562;
            this.input_schema45558 = input_schema45558;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_checker45559 = input_checker45559;
            this.meta45569 = meta45569;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide06.t45568.cljs$lang$type = true;
          t3tr0s_slides.slide06.t45568.cljs$lang$ctorStr = "t3tr0s-slides.slide06/t45568";
          t3tr0s_slides.slide06.t45568.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___45573, output_schema45557_45574, input_schema45558_45575, input_checker45559_45576, output_checker45560_45577) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide06/t45568");
            };
          }(validate__5821__auto__, ufv___45573, output_schema45557_45574, input_schema45558_45575, input_checker45559_45576, output_checker45560_45577);
          t3tr0s_slides.slide06.t45568.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide06.t45568.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___45573, output_schema45557_45574, input_schema45558_45575, input_checker45559_45576, output_checker45560_45577) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "6. Store the state."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide06.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide06.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___45573, output_schema45557_45574, input_schema45558_45575, input_checker45559_45576, output_checker45560_45577);
          t3tr0s_slides.slide06.t45568.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___45573, output_schema45557_45574, input_schema45558_45575, input_checker45559_45576, output_checker45560_45577) {
            return function(_45570) {
              var self__ = this;
              var _45570__$1 = this;
              return self__.meta45569;
            };
          }(validate__5821__auto__, ufv___45573, output_schema45557_45574, input_schema45558_45575, input_checker45559_45576, output_checker45560_45577);
          t3tr0s_slides.slide06.t45568.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___45573, output_schema45557_45574, input_schema45558_45575, input_checker45559_45576, output_checker45560_45577) {
            return function(_45570, meta45569__$1) {
              var self__ = this;
              var _45570__$1 = this;
              return new t3tr0s_slides.slide06.t45568(self__.owner, self__.output_checker45560, self__.validate__5821__auto__, self__.G__45561, self__.output_schema45557, self__.G__45562, self__.input_schema45558, self__.slide, self__.app, self__.ufv__, self__.input_checker45559, meta45569__$1);
            };
          }(validate__5821__auto__, ufv___45573, output_schema45557_45574, input_schema45558_45575, input_checker45559_45576, output_checker45560_45577);
          t3tr0s_slides.slide06.__GT_t45568 = function(validate__5821__auto__, ufv___45573, output_schema45557_45574, input_schema45558_45575, input_checker45559_45576, output_checker45560_45577) {
            return function __GT_t45568(owner__$1, output_checker45560__$1, validate__5821__auto____$1, G__45561__$1, output_schema45557__$1, G__45562__$1, input_schema45558__$1, slide__$1, app__$1, ufv____$1, input_checker45559__$1, meta45569) {
              return new t3tr0s_slides.slide06.t45568(owner__$1, output_checker45560__$1, validate__5821__auto____$1, G__45561__$1, output_schema45557__$1, G__45562__$1, input_schema45558__$1, slide__$1, app__$1, ufv____$1, input_checker45559__$1, meta45569);
            };
          }(validate__5821__auto__, ufv___45573, output_schema45557_45574, input_schema45558_45575, input_checker45559_45576, output_checker45560_45577);
        }
        return new t3tr0s_slides.slide06.t45568(owner, output_checker45560_45577, validate__5821__auto__, G__45561, output_schema45557_45574, G__45562, input_schema45558_45575, slide, app, ufv___45573, input_checker45559_45576, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45581 = output_checker45560_45577.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45581)) {
        var error__5823__auto___45582 = temp__4126__auto___45581;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___45582)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema45557_45574, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45582], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___45573, output_schema45557_45574, input_schema45558_45575, input_checker45559_45576, output_checker45560_45577);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide06.slide), schema.core.make_fn_schema.call(null, output_schema45557_45574, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema45558_45575], null)));
t3tr0s_slides.slide06.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide06.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m45556) {
    return om.core.build.call(null, t3tr0s_slides.slide06.slide, cursor__9685__auto__, m45556);
  };
  __GT_slide = function(cursor__9685__auto__, m45556) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m45556);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide06.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide06.slide, t3tr0s_slides.slide06.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide06.resume = function resume() {
  return null;
};
t3tr0s_slides.slide06.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide13");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide13.dark_green = "#143";
t3tr0s_slides.slide13.light_green = "#175";
t3tr0s_slides.slide13.dark_purple = "#449";
t3tr0s_slides.slide13.light_purple = "#6ad";
t3tr0s_slides.slide13.dark_red = "#944";
t3tr0s_slides.slide13.light_red = "#f8c";
t3tr0s_slides.slide13.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide13.rotate_coord = function rotate_coord(p__47105) {
  var vec__47107 = p__47105;
  var x = cljs.core.nth.call(null, vec__47107, 0, null);
  var y = cljs.core.nth.call(null, vec__47107, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide13.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide13.rotate_coord, piece);
};
t3tr0s_slides.slide13.rows = 20;
t3tr0s_slides.slide13.cols = 10;
t3tr0s_slides.slide13.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide13.cols, 0));
t3tr0s_slides.slide13.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide13.rows, t3tr0s_slides.slide13.empty_row));
t3tr0s_slides.slide13.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 1, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 1, 1, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 1, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 1, 1, 1], null)], null);
t3tr0s_slides.slide13.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [5, 2], null);
t3tr0s_slides.slide13.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide13.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), t3tr0s_slides.slide13.rotate_piece.call(null, (new cljs.core.Keyword(null, "I", "I", 1827140963)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide13.pieces)), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide13.initial_pos], 
null));
t3tr0s_slides.slide13.write_piece = function write_piece(board, coords, p__47108, value) {
  while (true) {
    var vec__47112 = p__47108;
    var cx = cljs.core.nth.call(null, vec__47112, 0, null);
    var cy = cljs.core.nth.call(null, vec__47112, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__47113 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__47113, 0, null);
      var y = cljs.core.nth.call(null, vec__47113, 1, null);
      var G__47115 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), value);
        } catch (e47114) {
          if (e47114 instanceof Error) {
            var _ = e47114;
            return board;
          } else {
            throw e47114;
          }
        }
      }();
      var G__47116 = cljs.core.rest.call(null, coords);
      var G__47117 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      var G__47118 = value;
      board = G__47115;
      coords = G__47116;
      p__47108 = G__47117;
      value = G__47118;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide13.create_drawable_board = function create_drawable_board(board, piece, p__47119) {
  var vec__47121 = p__47119;
  var x = cljs.core.nth.call(null, vec__47121, 0, null);
  var y = cljs.core.nth.call(null, vec__47121, 1, null);
  var gy = t3tr0s_slides.slide13.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  var board1 = t3tr0s_slides.slide13.write_piece.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, gy], null), "G");
  var board2 = t3tr0s_slides.slide13.write_piece.call(null, board1, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null), "P");
  return board2;
};
t3tr0s_slides.slide13.app_drawable_board_BANG_ = function app_drawable_board_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  return t3tr0s_slides.slide13.create_drawable_board.call(null, board, piece, pos);
};
t3tr0s_slides.slide13.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__47123 = cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state);
  var map__47123__$1 = cljs.core.seq_QMARK_.call(null, map__47123) ? cljs.core.apply.call(null, cljs.core.hash_map, map__47123) : map__47123;
  var position = cljs.core.get.call(null, map__47123__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__47123__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide13.write_piece, piece, position, 1);
};
t3tr0s_slides.slide13.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__47124) {
  var vec__47128 = p__47124;
  var cx = cljs.core.nth.call(null, vec__47128, 0, null);
  var cy = cljs.core.nth.call(null, vec__47128, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__47128, cx, cy) {
    return function(p__47129) {
      var vec__47130 = p__47129;
      var x = cljs.core.nth.call(null, vec__47130, 0, null);
      var y = cljs.core.nth.call(null, vec__47130, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__47128, cx, cy), piece);
};
t3tr0s_slides.slide13.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide13.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide13.app_state))));
};
t3tr0s_slides.slide13.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var vec__47132 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var x = cljs.core.nth.call(null, vec__47132, 0, null);
  var y = cljs.core.nth.call(null, vec__47132, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide13.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide13.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var new_piece = t3tr0s_slides.slide13.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide13.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide13.get_drop_pos = function get_drop_pos(board, piece, p__47133) {
  var vec__47135 = p__47133;
  var x = cljs.core.nth.call(null, vec__47135, 0, null);
  var y = cljs.core.nth.call(null, vec__47135, 1, null);
  var collide_QMARK_ = function(vec__47135, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide13.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__47135, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide13.filled_rows = function filled_rows(board) {
  return cljs.core.apply.call(null, cljs.core.hash_set, cljs.core.map.call(null, cljs.core.first, cljs.core.filter.call(null, function(p__47138) {
    var vec__47139 = p__47138;
    var i = cljs.core.nth.call(null, vec__47139, 0, null);
    var row = cljs.core.nth.call(null, vec__47139, 1, null);
    return cljs.core.every_QMARK_.call(null, cljs.core.pos_QMARK_, row);
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board))));
};
t3tr0s_slides.slide13.collapse_rows = function collapse_rows(board, rows) {
  var cleared_board = cljs.core.map.call(null, cljs.core.second, cljs.core.remove.call(null, function(p1__47140_SHARP_) {
    return rows.call(null, cljs.core.first.call(null, p1__47140_SHARP_));
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board)));
  var n = cljs.core.count.call(null, rows);
  var new_board = cljs.core.into.call(null, cljs.core.vec.call(null, cljs.core.repeat.call(null, n, t3tr0s_slides.slide13.empty_row)), cleared_board);
  return new_board;
};
t3tr0s_slides.slide13.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var vec__47142 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var x = cljs.core.nth.call(null, vec__47142, 0, null);
  var y = cljs.core.nth.call(null, vec__47142, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var ny = t3tr0s_slides.slide13.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  t3tr0s_slides.slide13.lock_piece_BANG_.call(null);
  var board__$1 = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide13.collapse_rows.call(null, board__$1, t3tr0s_slides.slide13.filled_rows.call(null, board__$1)), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide13.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide13.pieces)));
};
t3tr0s_slides.slide13.data_row = function data_row(board, row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__47147(s__47148) {
      return new cljs.core.LazySeq(null, function() {
        var s__47148__$1 = s__47148;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__47148__$1);
          if (temp__4126__auto__) {
            var s__47148__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__47148__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__47148__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__47150 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__47149 = 0;
                while (true) {
                  if (i__47149 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__47149);
                    cljs.core.chunk_append.call(null, b__47150, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null))));
                    var G__47151 = i__47149 + 1;
                    i__47149 = G__47151;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__47150), iter__47147.call(null, cljs.core.chunk_rest.call(null, s__47148__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__47150), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__47148__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null))), iter__47147.call(null, cljs.core.rest.call(null, s__47148__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide13.cols));
  }(), " ]"], null);
};
var ufv___47167 = schema.utils.use_fn_validation;
var output_schema47153_47168 = schema.core.Any;
var input_schema47154_47169 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker47155_47170 = schema.core.checker.call(null, input_schema47154_47169);
var output_checker47156_47171 = schema.core.checker.call(null, output_schema47153_47168);
t3tr0s_slides.slide13.code = function(ufv___47167, output_schema47153_47168, input_schema47154_47169, input_checker47155_47170, output_checker47156_47171) {
  return function code(G__47157, G__47158) {
    var validate__5821__auto__ = ufv___47167.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___47172 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__47157, G__47158], null);
      var temp__4126__auto___47173 = input_checker47155_47170.call(null, args__5822__auto___47172);
      if (cljs.core.truth_(temp__4126__auto___47173)) {
        var error__5823__auto___47174 = temp__4126__auto___47173;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___47174)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema47154_47169, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___47172, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___47174], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__47157;
      var owner = G__47158;
      while (true) {
        if (typeof t3tr0s_slides.slide13.t47163 !== "undefined") {
        } else {
          t3tr0s_slides.slide13.t47163 = function(owner, output_schema47153, G__47158, input_checker47155, input_schema47154, validate__5821__auto__, output_checker47156, G__47157, app, ufv__, code, meta47164) {
            this.owner = owner;
            this.output_schema47153 = output_schema47153;
            this.G__47158 = G__47158;
            this.input_checker47155 = input_checker47155;
            this.input_schema47154 = input_schema47154;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker47156 = output_checker47156;
            this.G__47157 = G__47157;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta47164 = meta47164;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide13.t47163.cljs$lang$type = true;
          t3tr0s_slides.slide13.t47163.cljs$lang$ctorStr = "t3tr0s-slides.slide13/t47163";
          t3tr0s_slides.slide13.t47163.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___47167, output_schema47153_47168, input_schema47154_47169, input_checker47155_47170, output_checker47156_47171) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide13/t47163");
            };
          }(validate__5821__auto__, ufv___47167, output_schema47153_47168, input_schema47154_47169, input_checker47155_47170, output_checker47156_47171);
          t3tr0s_slides.slide13.t47163.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide13.t47163.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___47167, output_schema47153_47168, input_schema47154_47169, input_checker47155_47170, output_checker47156_47171) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs47166 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: press space to hard-drop.");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs47166) ? sablono.interpreter.attributes.call(null, attrs47166) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs47166) ? cljs.core.PersistentVector.fromArray(["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
                ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " collapse-rows\n", "  [board]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [filled? (filled-rows board)\n", "        cleared (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "-\x3e\x3e")), " board\n", "                     (", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "map-indexed")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vector")), ")\n", "                     (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "remove")), " #(filled? (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), " %)))\n", "                     (map ", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "second")), "))\n", "        n (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "count")), " filled?)]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "into")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vec")), " (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "repeat")), " n empty-row)) cleared)))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " [", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), "] collapse-rows)\n", "\n\n"], true) : cljs.core.PersistentVector.fromArray([sablono.interpreter.interpret.call(null, 
                attrs47166), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " collapse-rows\n", "  [board]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "let")), " [filled? (filled-rows board)\n", "        cleared (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "-\x3e\x3e")), " board\n", "                     (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "map-indexed")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vector")), ")\n", "                     (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "remove")), " #(filled? (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), " %)))\n", "                     (map ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "second")), "))\n", "        n (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "count")), " filled?)]\n", "    (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "into")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vec")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "repeat")), " n empty-row)) cleared)))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "update-in")), " [", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), "] collapse-rows)\n", "\n\n"], true)));
              }()));
            };
          }(validate__5821__auto__, ufv___47167, output_schema47153_47168, input_schema47154_47169, input_checker47155_47170, output_checker47156_47171);
          t3tr0s_slides.slide13.t47163.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___47167, output_schema47153_47168, input_schema47154_47169, input_checker47155_47170, output_checker47156_47171) {
            return function(_47165) {
              var self__ = this;
              var _47165__$1 = this;
              return self__.meta47164;
            };
          }(validate__5821__auto__, ufv___47167, output_schema47153_47168, input_schema47154_47169, input_checker47155_47170, output_checker47156_47171);
          t3tr0s_slides.slide13.t47163.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___47167, output_schema47153_47168, input_schema47154_47169, input_checker47155_47170, output_checker47156_47171) {
            return function(_47165, meta47164__$1) {
              var self__ = this;
              var _47165__$1 = this;
              return new t3tr0s_slides.slide13.t47163(self__.owner, self__.output_schema47153, self__.G__47158, self__.input_checker47155, self__.input_schema47154, self__.validate__5821__auto__, self__.output_checker47156, self__.G__47157, self__.app, self__.ufv__, self__.code, meta47164__$1);
            };
          }(validate__5821__auto__, ufv___47167, output_schema47153_47168, input_schema47154_47169, input_checker47155_47170, output_checker47156_47171);
          t3tr0s_slides.slide13.__GT_t47163 = function(validate__5821__auto__, ufv___47167, output_schema47153_47168, input_schema47154_47169, input_checker47155_47170, output_checker47156_47171) {
            return function __GT_t47163(owner__$1, output_schema47153__$1, G__47158__$1, input_checker47155__$1, input_schema47154__$1, validate__5821__auto____$1, output_checker47156__$1, G__47157__$1, app__$1, ufv____$1, code__$1, meta47164) {
              return new t3tr0s_slides.slide13.t47163(owner__$1, output_schema47153__$1, G__47158__$1, input_checker47155__$1, input_schema47154__$1, validate__5821__auto____$1, output_checker47156__$1, G__47157__$1, app__$1, ufv____$1, code__$1, meta47164);
            };
          }(validate__5821__auto__, ufv___47167, output_schema47153_47168, input_schema47154_47169, input_checker47155_47170, output_checker47156_47171);
        }
        return new t3tr0s_slides.slide13.t47163(owner, output_schema47153_47168, G__47158, input_checker47155_47170, input_schema47154_47169, validate__5821__auto__, output_checker47156_47171, G__47157, app, ufv___47167, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___47175 = output_checker47156_47171.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___47175)) {
        var error__5823__auto___47176 = temp__4126__auto___47175;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___47176)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema47153_47168, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___47176], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___47167, output_schema47153_47168, input_schema47154_47169, input_checker47155_47170, output_checker47156_47171);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide13.code), schema.core.make_fn_schema.call(null, output_schema47153_47168, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema47154_47169], null)));
t3tr0s_slides.slide13.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide13.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m47152) {
    return om.core.build.call(null, t3tr0s_slides.slide13.code, cursor__9685__auto__, m47152);
  };
  __GT_code = function(cursor__9685__auto__, m47152) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m47152);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide13.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide13.rows);
t3tr0s_slides.slide13.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__47177, is_center) {
  var vec__47179 = p__47177;
  var x = cljs.core.nth.call(null, vec__47179, 0, null);
  var y = cljs.core.nth.call(null, vec__47179, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide13.cell_size * x;
  var ry = t3tr0s_slides.slide13.cell_size * y;
  var rs = t3tr0s_slides.slide13.cell_size;
  var cx = t3tr0s_slides.slide13.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide13.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide13.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide13.piece_abs_coords = function piece_abs_coords(piece, p__47180) {
  var vec__47184 = p__47180;
  var cx = cljs.core.nth.call(null, vec__47184, 0, null);
  var cy = cljs.core.nth.call(null, vec__47184, 1, null);
  return cljs.core.mapv.call(null, function(vec__47184, cx, cy) {
    return function(p__47185) {
      var vec__47186 = p__47185;
      var x = cljs.core.nth.call(null, vec__47186, 0, null);
      var y = cljs.core.nth.call(null, vec__47186, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__47184, cx, cy), piece);
};
t3tr0s_slides.slide13.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__47193 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide13.piece_abs_coords.call(null, piece, pos)));
  var chunk__47194 = null;
  var count__47195 = 0;
  var i__47196 = 0;
  while (true) {
    if (i__47196 < count__47195) {
      var vec__47197 = cljs.core._nth.call(null, chunk__47194, i__47196);
      var i = cljs.core.nth.call(null, vec__47197, 0, null);
      var c = cljs.core.nth.call(null, vec__47197, 1, null);
      t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__47199 = seq__47193;
      var G__47200 = chunk__47194;
      var G__47201 = count__47195;
      var G__47202 = i__47196 + 1;
      seq__47193 = G__47199;
      chunk__47194 = G__47200;
      count__47195 = G__47201;
      i__47196 = G__47202;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__47193);
      if (temp__4126__auto__) {
        var seq__47193__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__47193__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__47193__$1);
          var G__47203 = cljs.core.chunk_rest.call(null, seq__47193__$1);
          var G__47204 = c__4309__auto__;
          var G__47205 = cljs.core.count.call(null, c__4309__auto__);
          var G__47206 = 0;
          seq__47193 = G__47203;
          chunk__47194 = G__47204;
          count__47195 = G__47205;
          i__47196 = G__47206;
          continue;
        } else {
          var vec__47198 = cljs.core.first.call(null, seq__47193__$1);
          var i = cljs.core.nth.call(null, vec__47198, 0, null);
          var c = cljs.core.nth.call(null, vec__47198, 1, null);
          t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__47207 = cljs.core.next.call(null, seq__47193__$1);
          var G__47208 = null;
          var G__47209 = 0;
          var G__47210 = 0;
          seq__47193 = G__47207;
          chunk__47194 = G__47208;
          count__47195 = G__47209;
          i__47196 = G__47210;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide13.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var filled_QMARK_ = t3tr0s_slides.slide13.filled_rows.call(null, board);
  var seq__47223 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide13.rows));
  var chunk__47228 = null;
  var count__47229 = 0;
  var i__47230 = 0;
  while (true) {
    if (i__47230 < count__47229) {
      var y = cljs.core._nth.call(null, chunk__47228, i__47230);
      var seq__47231_47235 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide13.cols));
      var chunk__47232_47236 = null;
      var count__47233_47237 = 0;
      var i__47234_47238 = 0;
      while (true) {
        if (i__47234_47238 < count__47233_47237) {
          var x_47239 = cljs.core._nth.call(null, chunk__47232_47236, i__47234_47238);
          ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
          var v_47240 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_47239], null));
          if (v_47240 === 0) {
          } else {
            t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_47239, y], null), false);
          }
          var G__47241 = seq__47231_47235;
          var G__47242 = chunk__47232_47236;
          var G__47243 = count__47233_47237;
          var G__47244 = i__47234_47238 + 1;
          seq__47231_47235 = G__47241;
          chunk__47232_47236 = G__47242;
          count__47233_47237 = G__47243;
          i__47234_47238 = G__47244;
          continue;
        } else {
          var temp__4126__auto___47245 = cljs.core.seq.call(null, seq__47231_47235);
          if (temp__4126__auto___47245) {
            var seq__47231_47246__$1 = temp__4126__auto___47245;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__47231_47246__$1)) {
              var c__4309__auto___47247 = cljs.core.chunk_first.call(null, seq__47231_47246__$1);
              var G__47248 = cljs.core.chunk_rest.call(null, seq__47231_47246__$1);
              var G__47249 = c__4309__auto___47247;
              var G__47250 = cljs.core.count.call(null, c__4309__auto___47247);
              var G__47251 = 0;
              seq__47231_47235 = G__47248;
              chunk__47232_47236 = G__47249;
              count__47233_47237 = G__47250;
              i__47234_47238 = G__47251;
              continue;
            } else {
              var x_47252 = cljs.core.first.call(null, seq__47231_47246__$1);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
              var v_47253 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_47252], null));
              if (v_47253 === 0) {
              } else {
                t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_47252, y], null), false);
              }
              var G__47254 = cljs.core.next.call(null, seq__47231_47246__$1);
              var G__47255 = null;
              var G__47256 = 0;
              var G__47257 = 0;
              seq__47231_47235 = G__47254;
              chunk__47232_47236 = G__47255;
              count__47233_47237 = G__47256;
              i__47234_47238 = G__47257;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__47258 = seq__47223;
      var G__47259 = chunk__47228;
      var G__47260 = count__47229;
      var G__47261 = i__47230 + 1;
      seq__47223 = G__47258;
      chunk__47228 = G__47259;
      count__47229 = G__47260;
      i__47230 = G__47261;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__47223);
      if (temp__4126__auto__) {
        var seq__47223__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__47223__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__47223__$1);
          var G__47262 = cljs.core.chunk_rest.call(null, seq__47223__$1);
          var G__47263 = c__4309__auto__;
          var G__47264 = cljs.core.count.call(null, c__4309__auto__);
          var G__47265 = 0;
          seq__47223 = G__47262;
          chunk__47228 = G__47263;
          count__47229 = G__47264;
          i__47230 = G__47265;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__47223__$1);
          var seq__47224_47266 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide13.cols));
          var chunk__47225_47267 = null;
          var count__47226_47268 = 0;
          var i__47227_47269 = 0;
          while (true) {
            if (i__47227_47269 < count__47226_47268) {
              var x_47270 = cljs.core._nth.call(null, chunk__47225_47267, i__47227_47269);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
              var v_47271 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_47270], null));
              if (v_47271 === 0) {
              } else {
                t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_47270, y], null), false);
              }
              var G__47272 = seq__47224_47266;
              var G__47273 = chunk__47225_47267;
              var G__47274 = count__47226_47268;
              var G__47275 = i__47227_47269 + 1;
              seq__47224_47266 = G__47272;
              chunk__47225_47267 = G__47273;
              count__47226_47268 = G__47274;
              i__47227_47269 = G__47275;
              continue;
            } else {
              var temp__4126__auto___47276__$1 = cljs.core.seq.call(null, seq__47224_47266);
              if (temp__4126__auto___47276__$1) {
                var seq__47224_47277__$1 = temp__4126__auto___47276__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__47224_47277__$1)) {
                  var c__4309__auto___47278 = cljs.core.chunk_first.call(null, seq__47224_47277__$1);
                  var G__47279 = cljs.core.chunk_rest.call(null, seq__47224_47277__$1);
                  var G__47280 = c__4309__auto___47278;
                  var G__47281 = cljs.core.count.call(null, c__4309__auto___47278);
                  var G__47282 = 0;
                  seq__47224_47266 = G__47279;
                  chunk__47225_47267 = G__47280;
                  count__47226_47268 = G__47281;
                  i__47227_47269 = G__47282;
                  continue;
                } else {
                  var x_47283 = cljs.core.first.call(null, seq__47224_47277__$1);
                  ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
                  var v_47284 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_47283], null));
                  if (v_47284 === 0) {
                  } else {
                    t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_47283, y], null), false);
                  }
                  var G__47285 = cljs.core.next.call(null, seq__47224_47277__$1);
                  var G__47286 = null;
                  var G__47287 = 0;
                  var G__47288 = 0;
                  seq__47224_47266 = G__47285;
                  chunk__47225_47267 = G__47286;
                  count__47226_47268 = G__47287;
                  i__47227_47269 = G__47288;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__47289 = cljs.core.next.call(null, seq__47223__$1);
          var G__47290 = null;
          var G__47291 = 0;
          var G__47292 = 0;
          seq__47223 = G__47289;
          chunk__47228 = G__47290;
          count__47229 = G__47291;
          i__47230 = G__47292;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide13.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide13.cell_size * t3tr0s_slides.slide13.cols, t3tr0s_slides.slide13.cell_size * t3tr0s_slides.slide13.rows);
  ctx.fillStyle = t3tr0s_slides.slide13.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide13.light_green;
  t3tr0s_slides.slide13.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  ctx.globalAlpha = 1;
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var drop_y = t3tr0s_slides.slide13.get_drop_pos.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state)), piece, pos);
  var drop_pos = cljs.core.assoc.call(null, pos, 1, drop_y);
  var fits = t3tr0s_slides.slide13.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = "#333";
    ctx.strokeStyle = "#666";
    t3tr0s_slides.slide13.draw_piece_BANG_.call(null, ctx, piece, drop_pos);
    ctx.fillStyle = fits ? t3tr0s_slides.slide13.dark_purple : t3tr0s_slides.slide13.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide13.light_purple : t3tr0s_slides.slide13.light_red;
    return t3tr0s_slides.slide13.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide13.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide13.key_name = function key_name(p1__47293_SHARP_) {
  return t3tr0s_slides.slide13.key_names.call(null, p1__47293_SHARP_.keyCode);
};
t3tr0s_slides.slide13.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide13.key_name.call(null, e);
  var G__47295_47296 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__47295_47296) {
    case "space":
      t3tr0s_slides.slide13.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide13.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide13.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide13.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___47315 = schema.utils.use_fn_validation;
var output_schema47299_47316 = schema.core.Any;
var input_schema47300_47317 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker47301_47318 = schema.core.checker.call(null, input_schema47300_47317);
var output_checker47302_47319 = schema.core.checker.call(null, output_schema47299_47316);
t3tr0s_slides.slide13.canvas = function(ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319) {
  return function canvas(G__47303, G__47304) {
    var validate__5821__auto__ = ufv___47315.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___47320 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__47303, G__47304], null);
      var temp__4126__auto___47321 = input_checker47301_47318.call(null, args__5822__auto___47320);
      if (cljs.core.truth_(temp__4126__auto___47321)) {
        var error__5823__auto___47322 = temp__4126__auto___47321;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___47322)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema47300_47317, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___47320, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___47322], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__47303;
      var owner = G__47304;
      while (true) {
        if (typeof t3tr0s_slides.slide13.t47310 !== "undefined") {
        } else {
          t3tr0s_slides.slide13.t47310 = function(G__47303, owner, output_checker47302, validate__5821__auto__, input_checker47301, input_schema47300, canvas, G__47304, app, ufv__, output_schema47299, meta47311) {
            this.G__47303 = G__47303;
            this.owner = owner;
            this.output_checker47302 = output_checker47302;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker47301 = input_checker47301;
            this.input_schema47300 = input_schema47300;
            this.canvas = canvas;
            this.G__47304 = G__47304;
            this.app = app;
            this.ufv__ = ufv__;
            this.output_schema47299 = output_schema47299;
            this.meta47311 = meta47311;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide13.t47310.cljs$lang$type = true;
          t3tr0s_slides.slide13.t47310.cljs$lang$ctorStr = "t3tr0s-slides.slide13/t47310";
          t3tr0s_slides.slide13.t47310.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide13/t47310");
            };
          }(validate__5821__auto__, ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319);
          t3tr0s_slides.slide13.t47310.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide13.t47310.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319);
          t3tr0s_slides.slide13.t47310.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide13.t47310.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide13.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319);
          t3tr0s_slides.slide13.t47310.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide13.t47310.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide13.cols * t3tr0s_slides.slide13.cell_size;
              canvas__$2.height = t3tr0s_slides.slide13.rows * t3tr0s_slides.slide13.cell_size;
              return t3tr0s_slides.slide13.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319);
          t3tr0s_slides.slide13.t47310.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319) {
            return function(_47312) {
              var self__ = this;
              var _47312__$1 = this;
              return self__.meta47311;
            };
          }(validate__5821__auto__, ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319);
          t3tr0s_slides.slide13.t47310.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319) {
            return function(_47312, meta47311__$1) {
              var self__ = this;
              var _47312__$1 = this;
              return new t3tr0s_slides.slide13.t47310(self__.G__47303, self__.owner, self__.output_checker47302, self__.validate__5821__auto__, self__.input_checker47301, self__.input_schema47300, self__.canvas, self__.G__47304, self__.app, self__.ufv__, self__.output_schema47299, meta47311__$1);
            };
          }(validate__5821__auto__, ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319);
          t3tr0s_slides.slide13.__GT_t47310 = function(validate__5821__auto__, ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319) {
            return function __GT_t47310(G__47303__$1, owner__$1, output_checker47302__$1, validate__5821__auto____$1, input_checker47301__$1, input_schema47300__$1, canvas__$1, G__47304__$1, app__$1, ufv____$1, output_schema47299__$1, meta47311) {
              return new t3tr0s_slides.slide13.t47310(G__47303__$1, owner__$1, output_checker47302__$1, validate__5821__auto____$1, input_checker47301__$1, input_schema47300__$1, canvas__$1, G__47304__$1, app__$1, ufv____$1, output_schema47299__$1, meta47311);
            };
          }(validate__5821__auto__, ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319);
        }
        return new t3tr0s_slides.slide13.t47310(G__47303, owner, output_checker47302_47319, validate__5821__auto__, input_checker47301_47318, input_schema47300_47317, canvas, G__47304, app, ufv___47315, output_schema47299_47316, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___47323 = output_checker47302_47319.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___47323)) {
        var error__5823__auto___47324 = temp__4126__auto___47323;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___47324)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema47299_47316, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___47324], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___47315, output_schema47299_47316, input_schema47300_47317, input_checker47301_47318, output_checker47302_47319);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide13.canvas), schema.core.make_fn_schema.call(null, output_schema47299_47316, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema47300_47317], null)));
t3tr0s_slides.slide13.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide13.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m47298) {
    return om.core.build.call(null, t3tr0s_slides.slide13.canvas, cursor__9685__auto__, m47298);
  };
  __GT_canvas = function(cursor__9685__auto__, m47298) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m47298);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___47342 = schema.utils.use_fn_validation;
var output_schema47326_47343 = schema.core.Any;
var input_schema47327_47344 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker47328_47345 = schema.core.checker.call(null, input_schema47327_47344);
var output_checker47329_47346 = schema.core.checker.call(null, output_schema47326_47343);
t3tr0s_slides.slide13.slide = function(ufv___47342, output_schema47326_47343, input_schema47327_47344, input_checker47328_47345, output_checker47329_47346) {
  return function slide(G__47330, G__47331) {
    var validate__5821__auto__ = ufv___47342.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___47347 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__47330, G__47331], null);
      var temp__4126__auto___47348 = input_checker47328_47345.call(null, args__5822__auto___47347);
      if (cljs.core.truth_(temp__4126__auto___47348)) {
        var error__5823__auto___47349 = temp__4126__auto___47348;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___47349)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema47327_47344, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___47347, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___47349], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__47330;
      var owner = G__47331;
      while (true) {
        if (typeof t3tr0s_slides.slide13.t47337 !== "undefined") {
        } else {
          t3tr0s_slides.slide13.t47337 = function(output_checker47329, owner, input_checker47328, validate__5821__auto__, G__47330, G__47331, input_schema47327, slide, app, output_schema47326, ufv__, meta47338) {
            this.output_checker47329 = output_checker47329;
            this.owner = owner;
            this.input_checker47328 = input_checker47328;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__47330 = G__47330;
            this.G__47331 = G__47331;
            this.input_schema47327 = input_schema47327;
            this.slide = slide;
            this.app = app;
            this.output_schema47326 = output_schema47326;
            this.ufv__ = ufv__;
            this.meta47338 = meta47338;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide13.t47337.cljs$lang$type = true;
          t3tr0s_slides.slide13.t47337.cljs$lang$ctorStr = "t3tr0s-slides.slide13/t47337";
          t3tr0s_slides.slide13.t47337.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___47342, output_schema47326_47343, input_schema47327_47344, input_checker47328_47345, output_checker47329_47346) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide13/t47337");
            };
          }(validate__5821__auto__, ufv___47342, output_schema47326_47343, input_schema47327_47344, input_checker47328_47345, output_checker47329_47346);
          t3tr0s_slides.slide13.t47337.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide13.t47337.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___47342, output_schema47326_47343, input_schema47327_47344, input_checker47328_47345, output_checker47329_47346) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "13. Collapse rows."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide13.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide13.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___47342, output_schema47326_47343, input_schema47327_47344, input_checker47328_47345, output_checker47329_47346);
          t3tr0s_slides.slide13.t47337.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___47342, output_schema47326_47343, input_schema47327_47344, input_checker47328_47345, output_checker47329_47346) {
            return function(_47339) {
              var self__ = this;
              var _47339__$1 = this;
              return self__.meta47338;
            };
          }(validate__5821__auto__, ufv___47342, output_schema47326_47343, input_schema47327_47344, input_checker47328_47345, output_checker47329_47346);
          t3tr0s_slides.slide13.t47337.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___47342, output_schema47326_47343, input_schema47327_47344, input_checker47328_47345, output_checker47329_47346) {
            return function(_47339, meta47338__$1) {
              var self__ = this;
              var _47339__$1 = this;
              return new t3tr0s_slides.slide13.t47337(self__.output_checker47329, self__.owner, self__.input_checker47328, self__.validate__5821__auto__, self__.G__47330, self__.G__47331, self__.input_schema47327, self__.slide, self__.app, self__.output_schema47326, self__.ufv__, meta47338__$1);
            };
          }(validate__5821__auto__, ufv___47342, output_schema47326_47343, input_schema47327_47344, input_checker47328_47345, output_checker47329_47346);
          t3tr0s_slides.slide13.__GT_t47337 = function(validate__5821__auto__, ufv___47342, output_schema47326_47343, input_schema47327_47344, input_checker47328_47345, output_checker47329_47346) {
            return function __GT_t47337(output_checker47329__$1, owner__$1, input_checker47328__$1, validate__5821__auto____$1, G__47330__$1, G__47331__$1, input_schema47327__$1, slide__$1, app__$1, output_schema47326__$1, ufv____$1, meta47338) {
              return new t3tr0s_slides.slide13.t47337(output_checker47329__$1, owner__$1, input_checker47328__$1, validate__5821__auto____$1, G__47330__$1, G__47331__$1, input_schema47327__$1, slide__$1, app__$1, output_schema47326__$1, ufv____$1, meta47338);
            };
          }(validate__5821__auto__, ufv___47342, output_schema47326_47343, input_schema47327_47344, input_checker47328_47345, output_checker47329_47346);
        }
        return new t3tr0s_slides.slide13.t47337(output_checker47329_47346, owner, input_checker47328_47345, validate__5821__auto__, G__47330, G__47331, input_schema47327_47344, slide, app, output_schema47326_47343, ufv___47342, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___47350 = output_checker47329_47346.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___47350)) {
        var error__5823__auto___47351 = temp__4126__auto___47350;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___47351)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema47326_47343, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___47351], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___47342, output_schema47326_47343, input_schema47327_47344, input_checker47328_47345, output_checker47329_47346);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide13.slide), schema.core.make_fn_schema.call(null, output_schema47326_47343, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema47327_47344], null)));
t3tr0s_slides.slide13.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide13.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m47325) {
    return om.core.build.call(null, t3tr0s_slides.slide13.slide, cursor__9685__auto__, m47325);
  };
  __GT_slide = function(cursor__9685__auto__, m47325) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m47325);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide13.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide13.slide, t3tr0s_slides.slide13.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide13.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide13.key_down);
};
t3tr0s_slides.slide13.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide13.key_down);
};
goog.provide("t3tr0s_slides.slide03");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide03.dark_green = "#143";
t3tr0s_slides.slide03.light_green = "#175";
t3tr0s_slides.slide03.dark_purple = "#449";
t3tr0s_slides.slide03.light_purple = "#6ad";
t3tr0s_slides.slide03.next_piece = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.Keyword(null, 
"L", "L", -1038307519), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.Keyword(null, "I", "I", 1827140963)], null);
t3tr0s_slides.slide03.piece_keys = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.Keyword(null, "Z", "Z", 459124588)], null);
t3tr0s_slides.slide03.positions = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 1], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 4], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[4, 7], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 10], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 13], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 16], null), new cljs.core.Keyword(null, "Z", "Z", 
459124588), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 19], null)], null);
t3tr0s_slides.slide03.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide03.piece_abs_coords = function piece_abs_coords(piece, p__44914) {
  var vec__44918 = p__44914;
  var cx = cljs.core.nth.call(null, vec__44918, 0, null);
  var cy = cljs.core.nth.call(null, vec__44918, 1, null);
  return cljs.core.mapv.call(null, function(vec__44918, cx, cy) {
    return function(p__44919) {
      var vec__44920 = p__44919;
      var x = cljs.core.nth.call(null, vec__44920, 0, null);
      var y = cljs.core.nth.call(null, vec__44920, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__44918, cx, cy), t3tr0s_slides.slide03.pieces.call(null, piece));
};
t3tr0s_slides.slide03.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide03.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide03.initial_pos, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), null], null));
t3tr0s_slides.slide03.rows = 20;
t3tr0s_slides.slide03.cols = 10;
t3tr0s_slides.slide03.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide03.cols, 0));
t3tr0s_slides.slide03.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide03.rows, t3tr0s_slides.slide03.empty_row));
t3tr0s_slides.slide03.piece_code = function piece_code(app) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "highlight", "highlight", -800930873)).cljs$core$IFn$_invoke$arity$1(app), new cljs.core.Keyword(null, "piece", "piece", 1396691784)) ? "clickable-ae1bb" : "", new cljs.core.Keyword(null, "onMouseEnter", 
  "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  }, new cljs.core.Keyword(null, "onMouseLeave", "onMouseLeave", 1446726903), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), null);
  }, new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function() {
    return om.core.transact_BANG_.call(null, app, new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835), t3tr0s_slides.slide03.next_piece);
  }], null), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " pieces)"), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835)).cljs$core$IFn$_invoke$arity$1(app)))), "(")], null);
};
t3tr0s_slides.slide03.full_piece = function full_piece(piece) {
  var pad = function(p1__44921_SHARP_) {
    if (p1__44921_SHARP_ < 0) {
      return p1__44921_SHARP_;
    } else {
      return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__44921_SHARP_);
    }
  };
  var fmt = function(pad) {
    return function(p1__44922_SHARP_) {
      return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__44922_SHARP_));
    };
  }(pad);
  var fmt_coord = function(pad, fmt) {
    return function(p__44925) {
      var vec__44926 = p__44925;
      var x = cljs.core.nth.call(null, vec__44926, 0, null);
      var y = cljs.core.nth.call(null, vec__44926, 1, null);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), "[");
    };
  }(pad, fmt);
  return cljs.core.interpose.call(null, " ", cljs.core.map.call(null, fmt_coord, piece));
};
t3tr0s_slides.slide03.position_code = function position_code(app) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "highlight", "highlight", -800930873)).cljs$core$IFn$_invoke$arity$1(app), new cljs.core.Keyword(null, "position", "position", -2011731912)) ? "active-col-d9099" : ""], null), function() {
    var vec__44928 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
    var x = cljs.core.nth.call(null, vec__44928, 0, null);
    var y = cljs.core.nth.call(null, vec__44928, 1, null);
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), t3tr0s_slides.syntax_highlight.lit.call(null, y)), " "), t3tr0s_slides.syntax_highlight.lit.call(null, x)), "[");
  }()], null);
};
var ufv___44942 = schema.utils.use_fn_validation;
var output_schema44930_44943 = schema.core.Any;
var input_schema44931_44944 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker44932_44945 = schema.core.checker.call(null, input_schema44931_44944);
var output_checker44933_44946 = schema.core.checker.call(null, output_schema44930_44943);
t3tr0s_slides.slide03.code = function(ufv___44942, output_schema44930_44943, input_schema44931_44944, input_checker44932_44945, output_checker44933_44946) {
  return function code(G__44934, G__44935) {
    var validate__5821__auto__ = ufv___44942.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___44947 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__44934, G__44935], null);
      var temp__4126__auto___44948 = input_checker44932_44945.call(null, args__5822__auto___44947);
      if (cljs.core.truth_(temp__4126__auto___44948)) {
        var error__5823__auto___44949 = temp__4126__auto___44948;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___44949)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema44931_44944, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___44947, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___44949], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__44934;
      var owner = G__44935;
      while (true) {
        if (typeof t3tr0s_slides.slide03.t44939 !== "undefined") {
        } else {
          t3tr0s_slides.slide03.t44939 = function(input_schema44931, owner, output_schema44930, validate__5821__auto__, output_checker44933, G__44934, input_checker44932, G__44935, app, ufv__, code, meta44940) {
            this.input_schema44931 = input_schema44931;
            this.owner = owner;
            this.output_schema44930 = output_schema44930;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker44933 = output_checker44933;
            this.G__44934 = G__44934;
            this.input_checker44932 = input_checker44932;
            this.G__44935 = G__44935;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta44940 = meta44940;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide03.t44939.cljs$lang$type = true;
          t3tr0s_slides.slide03.t44939.cljs$lang$ctorStr = "t3tr0s-slides.slide03/t44939";
          t3tr0s_slides.slide03.t44939.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___44942, output_schema44930_44943, input_schema44931_44944, input_checker44932_44945, output_checker44933_44946) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide03/t44939");
            };
          }(validate__5821__auto__, ufv___44942, output_schema44930_44943, input_schema44931_44944, input_checker44932_44945, output_checker44933_44946);
          t3tr0s_slides.slide03.t44939.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide03.t44939.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___44942, output_schema44930_44943, input_schema44931_44944, input_checker44932_44945, output_checker44933_44946) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " initial-state {", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " empty-board\n", "                    ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.lit.call(null, "nil")), "\n", "                    ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "nil")), "})\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: click piece below to change,")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
              "; and mouse over the canvas to move.")), "\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " initial-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide03.piece_code.call(null, self__.app)), "\n", "                       ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":position")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide03.position_code.call(null, self__.app)), ")\n", "\n", "  {", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ", React.DOM.span({"className":cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "highlight", "highlight", -800930873)).cljs$core$IFn$_invoke$arity$1(self__.app), new cljs.core.Keyword(null, "piece", "piece", 1396691784)) ? "active-col-d9099" : 
              ""}, sablono.interpreter.interpret.call(null, t3tr0s_slides.slide03.full_piece.call(null, t3tr0s_slides.slide03.pieces.call(null, (new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835)).cljs$core$IFn$_invoke$arity$1(self__.app))))), "\n", "   ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide03.position_code.call(null, self__.app)), "\n", "   ", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " [[ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", 
              "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]]}\n")));
            };
          }(validate__5821__auto__, ufv___44942, output_schema44930_44943, input_schema44931_44944, input_checker44932_44945, output_checker44933_44946);
          t3tr0s_slides.slide03.t44939.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___44942, output_schema44930_44943, input_schema44931_44944, input_checker44932_44945, output_checker44933_44946) {
            return function(_44941) {
              var self__ = this;
              var _44941__$1 = this;
              return self__.meta44940;
            };
          }(validate__5821__auto__, ufv___44942, output_schema44930_44943, input_schema44931_44944, input_checker44932_44945, output_checker44933_44946);
          t3tr0s_slides.slide03.t44939.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___44942, output_schema44930_44943, input_schema44931_44944, input_checker44932_44945, output_checker44933_44946) {
            return function(_44941, meta44940__$1) {
              var self__ = this;
              var _44941__$1 = this;
              return new t3tr0s_slides.slide03.t44939(self__.input_schema44931, self__.owner, self__.output_schema44930, self__.validate__5821__auto__, self__.output_checker44933, self__.G__44934, self__.input_checker44932, self__.G__44935, self__.app, self__.ufv__, self__.code, meta44940__$1);
            };
          }(validate__5821__auto__, ufv___44942, output_schema44930_44943, input_schema44931_44944, input_checker44932_44945, output_checker44933_44946);
          t3tr0s_slides.slide03.__GT_t44939 = function(validate__5821__auto__, ufv___44942, output_schema44930_44943, input_schema44931_44944, input_checker44932_44945, output_checker44933_44946) {
            return function __GT_t44939(input_schema44931__$1, owner__$1, output_schema44930__$1, validate__5821__auto____$1, output_checker44933__$1, G__44934__$1, input_checker44932__$1, G__44935__$1, app__$1, ufv____$1, code__$1, meta44940) {
              return new t3tr0s_slides.slide03.t44939(input_schema44931__$1, owner__$1, output_schema44930__$1, validate__5821__auto____$1, output_checker44933__$1, G__44934__$1, input_checker44932__$1, G__44935__$1, app__$1, ufv____$1, code__$1, meta44940);
            };
          }(validate__5821__auto__, ufv___44942, output_schema44930_44943, input_schema44931_44944, input_checker44932_44945, output_checker44933_44946);
        }
        return new t3tr0s_slides.slide03.t44939(input_schema44931_44944, owner, output_schema44930_44943, validate__5821__auto__, output_checker44933_44946, G__44934, input_checker44932_44945, G__44935, app, ufv___44942, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___44950 = output_checker44933_44946.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___44950)) {
        var error__5823__auto___44951 = temp__4126__auto___44950;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___44951)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema44930_44943, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___44951], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___44942, output_schema44930_44943, input_schema44931_44944, input_checker44932_44945, output_checker44933_44946);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide03.code), schema.core.make_fn_schema.call(null, output_schema44930_44943, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema44931_44944], null)));
t3tr0s_slides.slide03.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide03.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m44929) {
    return om.core.build.call(null, t3tr0s_slides.slide03.code, cursor__9685__auto__, m44929);
  };
  __GT_code = function(cursor__9685__auto__, m44929) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m44929);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide03.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide03.rows);
t3tr0s_slides.slide03.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide03.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide03.cell_size);
  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [col, row], null));
};
t3tr0s_slides.slide03.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__44952, is_center) {
  var vec__44954 = p__44952;
  var x = cljs.core.nth.call(null, vec__44954, 0, null);
  var y = cljs.core.nth.call(null, vec__44954, 1, null);
  ctx.fillStyle = t3tr0s_slides.slide03.dark_purple;
  ctx.strokeStyle = t3tr0s_slides.slide03.light_purple;
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide03.cell_size * x;
  var ry = t3tr0s_slides.slide03.cell_size * y;
  var rs = t3tr0s_slides.slide03.cell_size;
  var cx = t3tr0s_slides.slide03.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide03.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide03.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide03.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__44961 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide03.piece_abs_coords.call(null, piece, pos)));
  var chunk__44962 = null;
  var count__44963 = 0;
  var i__44964 = 0;
  while (true) {
    if (i__44964 < count__44963) {
      var vec__44965 = cljs.core._nth.call(null, chunk__44962, i__44964);
      var i = cljs.core.nth.call(null, vec__44965, 0, null);
      var c = cljs.core.nth.call(null, vec__44965, 1, null);
      t3tr0s_slides.slide03.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__44967 = seq__44961;
      var G__44968 = chunk__44962;
      var G__44969 = count__44963;
      var G__44970 = i__44964 + 1;
      seq__44961 = G__44967;
      chunk__44962 = G__44968;
      count__44963 = G__44969;
      i__44964 = G__44970;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__44961);
      if (temp__4126__auto__) {
        var seq__44961__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__44961__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__44961__$1);
          var G__44971 = cljs.core.chunk_rest.call(null, seq__44961__$1);
          var G__44972 = c__4309__auto__;
          var G__44973 = cljs.core.count.call(null, c__4309__auto__);
          var G__44974 = 0;
          seq__44961 = G__44971;
          chunk__44962 = G__44972;
          count__44963 = G__44973;
          i__44964 = G__44974;
          continue;
        } else {
          var vec__44966 = cljs.core.first.call(null, seq__44961__$1);
          var i = cljs.core.nth.call(null, vec__44966, 0, null);
          var c = cljs.core.nth.call(null, vec__44966, 1, null);
          t3tr0s_slides.slide03.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__44975 = cljs.core.next.call(null, seq__44961__$1);
          var G__44976 = null;
          var G__44977 = 0;
          var G__44978 = 0;
          seq__44961 = G__44975;
          chunk__44962 = G__44976;
          count__44963 = G__44977;
          i__44964 = G__44978;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide03.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide03.cell_size * t3tr0s_slides.slide03.cols, t3tr0s_slides.slide03.cell_size * t3tr0s_slides.slide03.rows);
  return t3tr0s_slides.slide03.draw_piece_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835)).cljs$core$IFn$_invoke$arity$1(app), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app));
};
var ufv___44993 = schema.utils.use_fn_validation;
var output_schema44981_44994 = schema.core.Any;
var input_schema44982_44995 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker44983_44996 = schema.core.checker.call(null, input_schema44982_44995);
var output_checker44984_44997 = schema.core.checker.call(null, output_schema44981_44994);
t3tr0s_slides.slide03.canvas = function(ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997) {
  return function canvas(G__44985, G__44986) {
    var validate__5821__auto__ = ufv___44993.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___44998 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__44985, G__44986], null);
      var temp__4126__auto___44999 = input_checker44983_44996.call(null, args__5822__auto___44998);
      if (cljs.core.truth_(temp__4126__auto___44999)) {
        var error__5823__auto___45000 = temp__4126__auto___44999;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___45000)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema44982_44995, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___44998, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45000], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__44985;
      var owner = G__44986;
      while (true) {
        if (typeof t3tr0s_slides.slide03.t44990 !== "undefined") {
        } else {
          t3tr0s_slides.slide03.t44990 = function(owner, G__44985, output_schema44981, validate__5821__auto__, input_checker44983, canvas, G__44986, input_schema44982, output_checker44984, app, ufv__, meta44991) {
            this.owner = owner;
            this.G__44985 = G__44985;
            this.output_schema44981 = output_schema44981;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker44983 = input_checker44983;
            this.canvas = canvas;
            this.G__44986 = G__44986;
            this.input_schema44982 = input_schema44982;
            this.output_checker44984 = output_checker44984;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta44991 = meta44991;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide03.t44990.cljs$lang$type = true;
          t3tr0s_slides.slide03.t44990.cljs$lang$ctorStr = "t3tr0s-slides.slide03/t44990";
          t3tr0s_slides.slide03.t44990.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide03/t44990");
            };
          }(validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997);
          t3tr0s_slides.slide03.t44990.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide03.t44990.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseMove":function(___$1, validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997) {
                return function(p1__44979_SHARP_) {
                  t3tr0s_slides.slide03.canvas_mouse.call(null, self__.app, self__.owner, p1__44979_SHARP_);
                  return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), new cljs.core.Keyword(null, "position", "position", -2011731912));
                };
              }(___$1, validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997), "onMouseLeave":function(___$1, validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997) {
                return function() {
                  om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide03.initial_pos);
                  return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), null);
                };
              }(___$1, validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997)}));
            };
          }(validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997);
          t3tr0s_slides.slide03.t44990.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide03.t44990.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide03.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997);
          t3tr0s_slides.slide03.t44990.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide03.t44990.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide03.cols * t3tr0s_slides.slide03.cell_size;
              canvas__$2.height = t3tr0s_slides.slide03.rows * t3tr0s_slides.slide03.cell_size;
              return t3tr0s_slides.slide03.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997);
          t3tr0s_slides.slide03.t44990.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997) {
            return function(_44992) {
              var self__ = this;
              var _44992__$1 = this;
              return self__.meta44991;
            };
          }(validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997);
          t3tr0s_slides.slide03.t44990.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997) {
            return function(_44992, meta44991__$1) {
              var self__ = this;
              var _44992__$1 = this;
              return new t3tr0s_slides.slide03.t44990(self__.owner, self__.G__44985, self__.output_schema44981, self__.validate__5821__auto__, self__.input_checker44983, self__.canvas, self__.G__44986, self__.input_schema44982, self__.output_checker44984, self__.app, self__.ufv__, meta44991__$1);
            };
          }(validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997);
          t3tr0s_slides.slide03.__GT_t44990 = function(validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997) {
            return function __GT_t44990(owner__$1, G__44985__$1, output_schema44981__$1, validate__5821__auto____$1, input_checker44983__$1, canvas__$1, G__44986__$1, input_schema44982__$1, output_checker44984__$1, app__$1, ufv____$1, meta44991) {
              return new t3tr0s_slides.slide03.t44990(owner__$1, G__44985__$1, output_schema44981__$1, validate__5821__auto____$1, input_checker44983__$1, canvas__$1, G__44986__$1, input_schema44982__$1, output_checker44984__$1, app__$1, ufv____$1, meta44991);
            };
          }(validate__5821__auto__, ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997);
        }
        return new t3tr0s_slides.slide03.t44990(owner, G__44985, output_schema44981_44994, validate__5821__auto__, input_checker44983_44996, canvas, G__44986, input_schema44982_44995, output_checker44984_44997, app, ufv___44993, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45001 = output_checker44984_44997.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45001)) {
        var error__5823__auto___45002 = temp__4126__auto___45001;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___45002)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema44981_44994, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45002], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___44993, output_schema44981_44994, input_schema44982_44995, input_checker44983_44996, output_checker44984_44997);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide03.canvas), schema.core.make_fn_schema.call(null, output_schema44981_44994, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema44982_44995], null)));
t3tr0s_slides.slide03.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide03.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m44980) {
    return om.core.build.call(null, t3tr0s_slides.slide03.canvas, cursor__9685__auto__, m44980);
  };
  __GT_canvas = function(cursor__9685__auto__, m44980) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m44980);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___45020 = schema.utils.use_fn_validation;
var output_schema45004_45021 = schema.core.Any;
var input_schema45005_45022 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker45006_45023 = schema.core.checker.call(null, input_schema45005_45022);
var output_checker45007_45024 = schema.core.checker.call(null, output_schema45004_45021);
t3tr0s_slides.slide03.slide = function(ufv___45020, output_schema45004_45021, input_schema45005_45022, input_checker45006_45023, output_checker45007_45024) {
  return function slide(G__45008, G__45009) {
    var validate__5821__auto__ = ufv___45020.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___45025 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__45008, G__45009], null);
      var temp__4126__auto___45026 = input_checker45006_45023.call(null, args__5822__auto___45025);
      if (cljs.core.truth_(temp__4126__auto___45026)) {
        var error__5823__auto___45027 = temp__4126__auto___45026;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___45027)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema45005_45022, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___45025, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45027], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__45008;
      var owner = G__45009;
      while (true) {
        if (typeof t3tr0s_slides.slide03.t45015 !== "undefined") {
        } else {
          t3tr0s_slides.slide03.t45015 = function(owner, G__45008, output_schema45004, input_schema45005, validate__5821__auto__, G__45009, output_checker45007, input_checker45006, slide, app, ufv__, meta45016) {
            this.owner = owner;
            this.G__45008 = G__45008;
            this.output_schema45004 = output_schema45004;
            this.input_schema45005 = input_schema45005;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__45009 = G__45009;
            this.output_checker45007 = output_checker45007;
            this.input_checker45006 = input_checker45006;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta45016 = meta45016;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide03.t45015.cljs$lang$type = true;
          t3tr0s_slides.slide03.t45015.cljs$lang$ctorStr = "t3tr0s-slides.slide03/t45015";
          t3tr0s_slides.slide03.t45015.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___45020, output_schema45004_45021, input_schema45005_45022, input_checker45006_45023, output_checker45007_45024) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide03/t45015");
            };
          }(validate__5821__auto__, ufv___45020, output_schema45004_45021, input_schema45005_45022, input_checker45006_45023, output_checker45007_45024);
          t3tr0s_slides.slide03.t45015.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide03.t45015.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___45020, output_schema45004_45021, input_schema45005_45022, input_checker45006_45023, output_checker45007_45024) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "3. Create initial state."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide03.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide03.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___45020, output_schema45004_45021, input_schema45005_45022, input_checker45006_45023, output_checker45007_45024);
          t3tr0s_slides.slide03.t45015.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___45020, output_schema45004_45021, input_schema45005_45022, input_checker45006_45023, output_checker45007_45024) {
            return function(_45017) {
              var self__ = this;
              var _45017__$1 = this;
              return self__.meta45016;
            };
          }(validate__5821__auto__, ufv___45020, output_schema45004_45021, input_schema45005_45022, input_checker45006_45023, output_checker45007_45024);
          t3tr0s_slides.slide03.t45015.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___45020, output_schema45004_45021, input_schema45005_45022, input_checker45006_45023, output_checker45007_45024) {
            return function(_45017, meta45016__$1) {
              var self__ = this;
              var _45017__$1 = this;
              return new t3tr0s_slides.slide03.t45015(self__.owner, self__.G__45008, self__.output_schema45004, self__.input_schema45005, self__.validate__5821__auto__, self__.G__45009, self__.output_checker45007, self__.input_checker45006, self__.slide, self__.app, self__.ufv__, meta45016__$1);
            };
          }(validate__5821__auto__, ufv___45020, output_schema45004_45021, input_schema45005_45022, input_checker45006_45023, output_checker45007_45024);
          t3tr0s_slides.slide03.__GT_t45015 = function(validate__5821__auto__, ufv___45020, output_schema45004_45021, input_schema45005_45022, input_checker45006_45023, output_checker45007_45024) {
            return function __GT_t45015(owner__$1, G__45008__$1, output_schema45004__$1, input_schema45005__$1, validate__5821__auto____$1, G__45009__$1, output_checker45007__$1, input_checker45006__$1, slide__$1, app__$1, ufv____$1, meta45016) {
              return new t3tr0s_slides.slide03.t45015(owner__$1, G__45008__$1, output_schema45004__$1, input_schema45005__$1, validate__5821__auto____$1, G__45009__$1, output_checker45007__$1, input_checker45006__$1, slide__$1, app__$1, ufv____$1, meta45016);
            };
          }(validate__5821__auto__, ufv___45020, output_schema45004_45021, input_schema45005_45022, input_checker45006_45023, output_checker45007_45024);
        }
        return new t3tr0s_slides.slide03.t45015(owner, G__45008, output_schema45004_45021, input_schema45005_45022, validate__5821__auto__, G__45009, output_checker45007_45024, input_checker45006_45023, slide, app, ufv___45020, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45028 = output_checker45007_45024.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45028)) {
        var error__5823__auto___45029 = temp__4126__auto___45028;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___45029)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema45004_45021, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45029], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___45020, output_schema45004_45021, input_schema45005_45022, input_checker45006_45023, output_checker45007_45024);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide03.slide), schema.core.make_fn_schema.call(null, output_schema45004_45021, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema45005_45022], null)));
t3tr0s_slides.slide03.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide03.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m45003) {
    return om.core.build.call(null, t3tr0s_slides.slide03.slide, cursor__9685__auto__, m45003);
  };
  __GT_slide = function(cursor__9685__auto__, m45003) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m45003);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide03.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide03.slide, t3tr0s_slides.slide03.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide03.resume = function resume() {
  return null;
};
t3tr0s_slides.slide03.stop = function stop() {
  return null;
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__43903 = level + 1;
        level = G__43903;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_43904 = 0;
    while (true) {
      if (i_43904 < arr.length) {
        arr[i_43904] = null;
        var G__43905 = i_43904 + 1;
        i_43904 = G__43905;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__43906 = x_SINGLEQUOTE_;
                x__$1 = G__43906;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__43907 = x__$1;
        var G__43908 = k;
        var G__43909 = level - 1;
        var G__43910 = update;
        x = G__43907;
        k = G__43908;
        level = G__43909;
        update = G__43910;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_43911 = self__.level + 1;
      while (true) {
        if (i_43911 <= new_level + 1) {
          update[i_43911] = self__.header;
          var G__43912 = i_43911 + 1;
          i_43911 = G__43912;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_43913 = 0;
    while (true) {
      if (i_43913 <= self__.level) {
        var links_43914 = update[i_43913].forward;
        if (links_43914[i_43913] === x__$1) {
          links_43914[i_43913] = x__$1.forward[i_43913];
          var G__43915 = i_43913 + 1;
          i_43913 = G__43915;
          continue;
        } else {
          var G__43916 = i_43913 + 1;
          i_43913 = G__43916;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__43917 = x_SINGLEQUOTE_;
              x__$1 = G__43917;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__43918 = nx;
        var G__43919 = level__$1 - 1;
        x = G__43918;
        level__$1 = G__43919;
        continue;
      } else {
        var G__43920 = x;
        var G__43921 = level__$1 - 1;
        x = G__43920;
        level__$1 = G__43921;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__43922 = x_SINGLEQUOTE_;
              x__$1 = G__43922;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__43923 = nx;
        var G__43924 = level__$1 - 1;
        x = G__43923;
        level__$1 = G__43924;
        continue;
      } else {
        var G__43925 = x;
        var G__43926 = level__$1 - 1;
        x = G__43925;
        level__$1 = G__43926;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3553__auto__ = cljs.core.truth_(function() {
    var and__3541__auto__ = me;
    if (cljs.core.truth_(and__3541__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3541__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3553__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3553__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t41254 !== "undefined") {
  } else {
    cljs.core.async.t41254 = function(f, fn_handler, meta41255) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta41255 = meta41255;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t41254.cljs$lang$type = true;
    cljs.core.async.t41254.cljs$lang$ctorStr = "cljs.core.async/t41254";
    cljs.core.async.t41254.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t41254");
    };
    cljs.core.async.t41254.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t41254.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t41254.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t41254.prototype.cljs$core$IMeta$_meta$arity$1 = function(_41256) {
      var self__ = this;
      var _41256__$1 = this;
      return self__.meta41255;
    };
    cljs.core.async.t41254.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_41256, meta41255__$1) {
      var self__ = this;
      var _41256__$1 = this;
      return new cljs.core.async.t41254(self__.f, self__.fn_handler, meta41255__$1);
    };
    cljs.core.async.__GT_t41254 = function __GT_t41254(f__$1, fn_handler__$1, meta41255) {
      return new cljs.core.async.t41254(f__$1, fn_handler__$1, meta41255);
    };
  }
  return new cljs.core.async.t41254(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__41258 = buff;
  if (G__41258) {
    var bit__4203__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3553__auto__ = bit__4203__auto__;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return G__41258.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__41258.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__41258);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__41258);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_41259 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_41259);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_41259, ret) {
          return function() {
            return fn1.call(null, val_41259);
          };
        }(val_41259, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4409__auto___41260 = n;
  var x_41261 = 0;
  while (true) {
    if (x_41261 < n__4409__auto___41260) {
      a[x_41261] = 0;
      var G__41262 = x_41261 + 1;
      x_41261 = G__41262;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__41263 = i + 1;
      i = G__41263;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t41267 !== "undefined") {
  } else {
    cljs.core.async.t41267 = function(flag, alt_flag, meta41268) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta41268 = meta41268;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t41267.cljs$lang$type = true;
    cljs.core.async.t41267.cljs$lang$ctorStr = "cljs.core.async/t41267";
    cljs.core.async.t41267.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
        return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t41267");
      };
    }(flag);
    cljs.core.async.t41267.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t41267.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t41267.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t41267.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_41269) {
        var self__ = this;
        var _41269__$1 = this;
        return self__.meta41268;
      };
    }(flag);
    cljs.core.async.t41267.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_41269, meta41268__$1) {
        var self__ = this;
        var _41269__$1 = this;
        return new cljs.core.async.t41267(self__.flag, self__.alt_flag, meta41268__$1);
      };
    }(flag);
    cljs.core.async.__GT_t41267 = function(flag) {
      return function __GT_t41267(flag__$1, alt_flag__$1, meta41268) {
        return new cljs.core.async.t41267(flag__$1, alt_flag__$1, meta41268);
      };
    }(flag);
  }
  return new cljs.core.async.t41267(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t41273 !== "undefined") {
  } else {
    cljs.core.async.t41273 = function(cb, flag, alt_handler, meta41274) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta41274 = meta41274;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t41273.cljs$lang$type = true;
    cljs.core.async.t41273.cljs$lang$ctorStr = "cljs.core.async/t41273";
    cljs.core.async.t41273.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t41273");
    };
    cljs.core.async.t41273.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t41273.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t41273.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t41273.prototype.cljs$core$IMeta$_meta$arity$1 = function(_41275) {
      var self__ = this;
      var _41275__$1 = this;
      return self__.meta41274;
    };
    cljs.core.async.t41273.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_41275, meta41274__$1) {
      var self__ = this;
      var _41275__$1 = this;
      return new cljs.core.async.t41273(self__.cb, self__.flag, self__.alt_handler, meta41274__$1);
    };
    cljs.core.async.__GT_t41273 = function __GT_t41273(cb__$1, flag__$1, alt_handler__$1, meta41274) {
      return new cljs.core.async.t41273(cb__$1, flag__$1, alt_handler__$1, meta41274);
    };
  }
  return new cljs.core.async.t41273(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__41276_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__41276_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__41277_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__41277_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3553__auto__ = wport;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__41278 = i + 1;
          i = G__41278;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3553__auto__ = ret;
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3541__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3541__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3541__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__41279) {
    var map__41281 = p__41279;
    var map__41281__$1 = cljs.core.seq_QMARK_.call(null, map__41281) ? cljs.core.apply.call(null, cljs.core.hash_map, map__41281) : map__41281;
    var opts = map__41281__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__41279 = null;
    if (arguments.length > 1) {
      p__41279 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__41279);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__41282) {
    var ports = cljs.core.first(arglist__41282);
    var p__41279 = cljs.core.rest(arglist__41282);
    return alts_BANG___delegate(ports, p__41279);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t41290 !== "undefined") {
  } else {
    cljs.core.async.t41290 = function(ch, f, map_LT_, meta41291) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta41291 = meta41291;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t41290.cljs$lang$type = true;
    cljs.core.async.t41290.cljs$lang$ctorStr = "cljs.core.async/t41290";
    cljs.core.async.t41290.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t41290");
    };
    cljs.core.async.t41290.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t41290.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t41290.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t41290.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t41293 !== "undefined") {
        } else {
          cljs.core.async.t41293 = function(fn1, _, meta41291, ch, f, map_LT_, meta41294) {
            this.fn1 = fn1;
            this._ = _;
            this.meta41291 = meta41291;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta41294 = meta41294;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t41293.cljs$lang$type = true;
          cljs.core.async.t41293.cljs$lang$ctorStr = "cljs.core.async/t41293";
          cljs.core.async.t41293.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t41293");
            };
          }(___$1);
          cljs.core.async.t41293.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t41293.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t41293.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t41293.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$4, ___$1) {
                return function(p1__41283_SHARP_) {
                  return f1.call(null, p1__41283_SHARP_ == null ? null : self__.f.call(null, p1__41283_SHARP_));
                };
              }(f1, ___$4, ___$1);
            };
          }(___$1);
          cljs.core.async.t41293.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_41295) {
              var self__ = this;
              var _41295__$1 = this;
              return self__.meta41294;
            };
          }(___$1);
          cljs.core.async.t41293.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_41295, meta41294__$1) {
              var self__ = this;
              var _41295__$1 = this;
              return new cljs.core.async.t41293(self__.fn1, self__._, self__.meta41291, self__.ch, self__.f, self__.map_LT_, meta41294__$1);
            };
          }(___$1);
          cljs.core.async.__GT_t41293 = function(___$1) {
            return function __GT_t41293(fn1__$1, ___$2, meta41291__$1, ch__$2, f__$2, map_LT___$2, meta41294) {
              return new cljs.core.async.t41293(fn1__$1, ___$2, meta41291__$1, ch__$2, f__$2, map_LT___$2, meta41294);
            };
          }(___$1);
        }
        return new cljs.core.async.t41293(fn1, ___$1, self__.meta41291, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3541__auto__ = ret;
        if (cljs.core.truth_(and__3541__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3541__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t41290.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t41290.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t41290.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t41290.prototype.cljs$core$IMeta$_meta$arity$1 = function(_41292) {
      var self__ = this;
      var _41292__$1 = this;
      return self__.meta41291;
    };
    cljs.core.async.t41290.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_41292, meta41291__$1) {
      var self__ = this;
      var _41292__$1 = this;
      return new cljs.core.async.t41290(self__.ch, self__.f, self__.map_LT_, meta41291__$1);
    };
    cljs.core.async.__GT_t41290 = function __GT_t41290(ch__$1, f__$1, map_LT___$1, meta41291) {
      return new cljs.core.async.t41290(ch__$1, f__$1, map_LT___$1, meta41291);
    };
  }
  return new cljs.core.async.t41290(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t41299 !== "undefined") {
  } else {
    cljs.core.async.t41299 = function(ch, f, map_GT_, meta41300) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta41300 = meta41300;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t41299.cljs$lang$type = true;
    cljs.core.async.t41299.cljs$lang$ctorStr = "cljs.core.async/t41299";
    cljs.core.async.t41299.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t41299");
    };
    cljs.core.async.t41299.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t41299.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t41299.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t41299.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t41299.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t41299.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t41299.prototype.cljs$core$IMeta$_meta$arity$1 = function(_41301) {
      var self__ = this;
      var _41301__$1 = this;
      return self__.meta41300;
    };
    cljs.core.async.t41299.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_41301, meta41300__$1) {
      var self__ = this;
      var _41301__$1 = this;
      return new cljs.core.async.t41299(self__.ch, self__.f, self__.map_GT_, meta41300__$1);
    };
    cljs.core.async.__GT_t41299 = function __GT_t41299(ch__$1, f__$1, map_GT___$1, meta41300) {
      return new cljs.core.async.t41299(ch__$1, f__$1, map_GT___$1, meta41300);
    };
  }
  return new cljs.core.async.t41299(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t41305 !== "undefined") {
  } else {
    cljs.core.async.t41305 = function(ch, p, filter_GT_, meta41306) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta41306 = meta41306;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t41305.cljs$lang$type = true;
    cljs.core.async.t41305.cljs$lang$ctorStr = "cljs.core.async/t41305";
    cljs.core.async.t41305.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t41305");
    };
    cljs.core.async.t41305.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t41305.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t41305.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t41305.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t41305.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t41305.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t41305.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t41305.prototype.cljs$core$IMeta$_meta$arity$1 = function(_41307) {
      var self__ = this;
      var _41307__$1 = this;
      return self__.meta41306;
    };
    cljs.core.async.t41305.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_41307, meta41306__$1) {
      var self__ = this;
      var _41307__$1 = this;
      return new cljs.core.async.t41305(self__.ch, self__.p, self__.filter_GT_, meta41306__$1);
    };
    cljs.core.async.__GT_t41305 = function __GT_t41305(ch__$1, p__$1, filter_GT___$1, meta41306) {
      return new cljs.core.async.t41305(ch__$1, p__$1, filter_GT___$1, meta41306);
    };
  }
  return new cljs.core.async.t41305(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__12747__auto___41390 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___41390, out) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___41390, out) {
            return function(state_41369) {
              var state_val_41370 = state_41369[1];
              if (state_val_41370 === 7) {
                var inst_41365 = state_41369[2];
                var state_41369__$1 = state_41369;
                var statearr_41371_41391 = state_41369__$1;
                statearr_41371_41391[2] = inst_41365;
                statearr_41371_41391[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_41370 === 1) {
                  var state_41369__$1 = state_41369;
                  var statearr_41372_41392 = state_41369__$1;
                  statearr_41372_41392[2] = null;
                  statearr_41372_41392[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_41370 === 4) {
                    var inst_41351 = state_41369[7];
                    var inst_41351__$1 = state_41369[2];
                    var inst_41352 = inst_41351__$1 == null;
                    var state_41369__$1 = function() {
                      var statearr_41373 = state_41369;
                      statearr_41373[7] = inst_41351__$1;
                      return statearr_41373;
                    }();
                    if (cljs.core.truth_(inst_41352)) {
                      var statearr_41374_41393 = state_41369__$1;
                      statearr_41374_41393[1] = 5;
                    } else {
                      var statearr_41375_41394 = state_41369__$1;
                      statearr_41375_41394[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_41370 === 6) {
                      var inst_41351 = state_41369[7];
                      var inst_41356 = p.call(null, inst_41351);
                      var state_41369__$1 = state_41369;
                      if (cljs.core.truth_(inst_41356)) {
                        var statearr_41376_41395 = state_41369__$1;
                        statearr_41376_41395[1] = 8;
                      } else {
                        var statearr_41377_41396 = state_41369__$1;
                        statearr_41377_41396[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_41370 === 3) {
                        var inst_41367 = state_41369[2];
                        var state_41369__$1 = state_41369;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_41369__$1, inst_41367);
                      } else {
                        if (state_val_41370 === 2) {
                          var state_41369__$1 = state_41369;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_41369__$1, 4, ch);
                        } else {
                          if (state_val_41370 === 11) {
                            var inst_41359 = state_41369[2];
                            var state_41369__$1 = state_41369;
                            var statearr_41378_41397 = state_41369__$1;
                            statearr_41378_41397[2] = inst_41359;
                            statearr_41378_41397[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_41370 === 9) {
                              var state_41369__$1 = state_41369;
                              var statearr_41379_41398 = state_41369__$1;
                              statearr_41379_41398[2] = null;
                              statearr_41379_41398[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_41370 === 5) {
                                var inst_41354 = cljs.core.async.close_BANG_.call(null, out);
                                var state_41369__$1 = state_41369;
                                var statearr_41380_41399 = state_41369__$1;
                                statearr_41380_41399[2] = inst_41354;
                                statearr_41380_41399[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_41370 === 10) {
                                  var inst_41362 = state_41369[2];
                                  var state_41369__$1 = function() {
                                    var statearr_41381 = state_41369;
                                    statearr_41381[8] = inst_41362;
                                    return statearr_41381;
                                  }();
                                  var statearr_41382_41400 = state_41369__$1;
                                  statearr_41382_41400[2] = null;
                                  statearr_41382_41400[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_41370 === 8) {
                                    var inst_41351 = state_41369[7];
                                    var state_41369__$1 = state_41369;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_41369__$1, 11, out, inst_41351);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___41390, out);
          return function(switch__12682__auto__, c__12747__auto___41390, out) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_41386 = [null, null, null, null, null, null, null, null, null];
                statearr_41386[0] = state_machine__12683__auto__;
                statearr_41386[1] = 1;
                return statearr_41386;
              };
              var state_machine__12683__auto____1 = function(state_41369) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_41369);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e41387) {
                      if (e41387 instanceof Object) {
                        var ex__12686__auto__ = e41387;
                        var statearr_41388_41401 = state_41369;
                        statearr_41388_41401[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_41369);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e41387;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__41402 = state_41369;
                    state_41369 = G__41402;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_41369) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_41369);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___41390, out);
        }();
        var state__12749__auto__ = function() {
          var statearr_41389 = f__12748__auto__.call(null);
          statearr_41389[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___41390;
          return statearr_41389;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___41390, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__12747__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto__) {
    return function() {
      var f__12748__auto__ = function() {
        var switch__12682__auto__ = function(c__12747__auto__) {
          return function(state_41568) {
            var state_val_41569 = state_41568[1];
            if (state_val_41569 === 7) {
              var inst_41564 = state_41568[2];
              var state_41568__$1 = state_41568;
              var statearr_41570_41611 = state_41568__$1;
              statearr_41570_41611[2] = inst_41564;
              statearr_41570_41611[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_41569 === 20) {
                var inst_41534 = state_41568[7];
                var inst_41545 = state_41568[2];
                var inst_41546 = cljs.core.next.call(null, inst_41534);
                var inst_41520 = inst_41546;
                var inst_41521 = null;
                var inst_41522 = 0;
                var inst_41523 = 0;
                var state_41568__$1 = function() {
                  var statearr_41571 = state_41568;
                  statearr_41571[8] = inst_41523;
                  statearr_41571[9] = inst_41520;
                  statearr_41571[10] = inst_41521;
                  statearr_41571[11] = inst_41545;
                  statearr_41571[12] = inst_41522;
                  return statearr_41571;
                }();
                var statearr_41572_41612 = state_41568__$1;
                statearr_41572_41612[2] = null;
                statearr_41572_41612[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_41569 === 1) {
                  var state_41568__$1 = state_41568;
                  var statearr_41573_41613 = state_41568__$1;
                  statearr_41573_41613[2] = null;
                  statearr_41573_41613[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_41569 === 4) {
                    var inst_41509 = state_41568[13];
                    var inst_41509__$1 = state_41568[2];
                    var inst_41510 = inst_41509__$1 == null;
                    var state_41568__$1 = function() {
                      var statearr_41574 = state_41568;
                      statearr_41574[13] = inst_41509__$1;
                      return statearr_41574;
                    }();
                    if (cljs.core.truth_(inst_41510)) {
                      var statearr_41575_41614 = state_41568__$1;
                      statearr_41575_41614[1] = 5;
                    } else {
                      var statearr_41576_41615 = state_41568__$1;
                      statearr_41576_41615[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_41569 === 15) {
                      var state_41568__$1 = state_41568;
                      var statearr_41580_41616 = state_41568__$1;
                      statearr_41580_41616[2] = null;
                      statearr_41580_41616[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_41569 === 21) {
                        var state_41568__$1 = state_41568;
                        var statearr_41581_41617 = state_41568__$1;
                        statearr_41581_41617[2] = null;
                        statearr_41581_41617[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_41569 === 13) {
                          var inst_41523 = state_41568[8];
                          var inst_41520 = state_41568[9];
                          var inst_41521 = state_41568[10];
                          var inst_41522 = state_41568[12];
                          var inst_41530 = state_41568[2];
                          var inst_41531 = inst_41523 + 1;
                          var tmp41577 = inst_41520;
                          var tmp41578 = inst_41521;
                          var tmp41579 = inst_41522;
                          var inst_41520__$1 = tmp41577;
                          var inst_41521__$1 = tmp41578;
                          var inst_41522__$1 = tmp41579;
                          var inst_41523__$1 = inst_41531;
                          var state_41568__$1 = function() {
                            var statearr_41582 = state_41568;
                            statearr_41582[8] = inst_41523__$1;
                            statearr_41582[9] = inst_41520__$1;
                            statearr_41582[10] = inst_41521__$1;
                            statearr_41582[14] = inst_41530;
                            statearr_41582[12] = inst_41522__$1;
                            return statearr_41582;
                          }();
                          var statearr_41583_41618 = state_41568__$1;
                          statearr_41583_41618[2] = null;
                          statearr_41583_41618[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_41569 === 22) {
                            var state_41568__$1 = state_41568;
                            var statearr_41584_41619 = state_41568__$1;
                            statearr_41584_41619[2] = null;
                            statearr_41584_41619[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_41569 === 6) {
                              var inst_41509 = state_41568[13];
                              var inst_41518 = f.call(null, inst_41509);
                              var inst_41519 = cljs.core.seq.call(null, inst_41518);
                              var inst_41520 = inst_41519;
                              var inst_41521 = null;
                              var inst_41522 = 0;
                              var inst_41523 = 0;
                              var state_41568__$1 = function() {
                                var statearr_41585 = state_41568;
                                statearr_41585[8] = inst_41523;
                                statearr_41585[9] = inst_41520;
                                statearr_41585[10] = inst_41521;
                                statearr_41585[12] = inst_41522;
                                return statearr_41585;
                              }();
                              var statearr_41586_41620 = state_41568__$1;
                              statearr_41586_41620[2] = null;
                              statearr_41586_41620[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_41569 === 17) {
                                var inst_41534 = state_41568[7];
                                var inst_41538 = cljs.core.chunk_first.call(null, inst_41534);
                                var inst_41539 = cljs.core.chunk_rest.call(null, inst_41534);
                                var inst_41540 = cljs.core.count.call(null, inst_41538);
                                var inst_41520 = inst_41539;
                                var inst_41521 = inst_41538;
                                var inst_41522 = inst_41540;
                                var inst_41523 = 0;
                                var state_41568__$1 = function() {
                                  var statearr_41587 = state_41568;
                                  statearr_41587[8] = inst_41523;
                                  statearr_41587[9] = inst_41520;
                                  statearr_41587[10] = inst_41521;
                                  statearr_41587[12] = inst_41522;
                                  return statearr_41587;
                                }();
                                var statearr_41588_41621 = state_41568__$1;
                                statearr_41588_41621[2] = null;
                                statearr_41588_41621[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_41569 === 3) {
                                  var inst_41566 = state_41568[2];
                                  var state_41568__$1 = state_41568;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_41568__$1, inst_41566);
                                } else {
                                  if (state_val_41569 === 12) {
                                    var inst_41554 = state_41568[2];
                                    var state_41568__$1 = state_41568;
                                    var statearr_41589_41622 = state_41568__$1;
                                    statearr_41589_41622[2] = inst_41554;
                                    statearr_41589_41622[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_41569 === 2) {
                                      var state_41568__$1 = state_41568;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_41568__$1, 4, in$);
                                    } else {
                                      if (state_val_41569 === 23) {
                                        var inst_41562 = state_41568[2];
                                        var state_41568__$1 = state_41568;
                                        var statearr_41590_41623 = state_41568__$1;
                                        statearr_41590_41623[2] = inst_41562;
                                        statearr_41590_41623[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_41569 === 19) {
                                          var inst_41549 = state_41568[2];
                                          var state_41568__$1 = state_41568;
                                          var statearr_41591_41624 = state_41568__$1;
                                          statearr_41591_41624[2] = inst_41549;
                                          statearr_41591_41624[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_41569 === 11) {
                                            var inst_41520 = state_41568[9];
                                            var inst_41534 = state_41568[7];
                                            var inst_41534__$1 = cljs.core.seq.call(null, inst_41520);
                                            var state_41568__$1 = function() {
                                              var statearr_41592 = state_41568;
                                              statearr_41592[7] = inst_41534__$1;
                                              return statearr_41592;
                                            }();
                                            if (inst_41534__$1) {
                                              var statearr_41593_41625 = state_41568__$1;
                                              statearr_41593_41625[1] = 14;
                                            } else {
                                              var statearr_41594_41626 = state_41568__$1;
                                              statearr_41594_41626[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_41569 === 9) {
                                              var inst_41556 = state_41568[2];
                                              var inst_41557 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_41568__$1 = function() {
                                                var statearr_41595 = state_41568;
                                                statearr_41595[15] = inst_41556;
                                                return statearr_41595;
                                              }();
                                              if (cljs.core.truth_(inst_41557)) {
                                                var statearr_41596_41627 = state_41568__$1;
                                                statearr_41596_41627[1] = 21;
                                              } else {
                                                var statearr_41597_41628 = state_41568__$1;
                                                statearr_41597_41628[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_41569 === 5) {
                                                var inst_41512 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_41568__$1 = state_41568;
                                                var statearr_41598_41629 = state_41568__$1;
                                                statearr_41598_41629[2] = inst_41512;
                                                statearr_41598_41629[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_41569 === 14) {
                                                  var inst_41534 = state_41568[7];
                                                  var inst_41536 = cljs.core.chunked_seq_QMARK_.call(null, inst_41534);
                                                  var state_41568__$1 = state_41568;
                                                  if (inst_41536) {
                                                    var statearr_41599_41630 = state_41568__$1;
                                                    statearr_41599_41630[1] = 17;
                                                  } else {
                                                    var statearr_41600_41631 = state_41568__$1;
                                                    statearr_41600_41631[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_41569 === 16) {
                                                    var inst_41552 = state_41568[2];
                                                    var state_41568__$1 = state_41568;
                                                    var statearr_41601_41632 = state_41568__$1;
                                                    statearr_41601_41632[2] = inst_41552;
                                                    statearr_41601_41632[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_41569 === 10) {
                                                      var inst_41523 = state_41568[8];
                                                      var inst_41521 = state_41568[10];
                                                      var inst_41528 = cljs.core._nth.call(null, inst_41521, inst_41523);
                                                      var state_41568__$1 = state_41568;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_41568__$1, 13, out, inst_41528);
                                                    } else {
                                                      if (state_val_41569 === 18) {
                                                        var inst_41534 = state_41568[7];
                                                        var inst_41543 = cljs.core.first.call(null, inst_41534);
                                                        var state_41568__$1 = state_41568;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_41568__$1, 20, out, inst_41543);
                                                      } else {
                                                        if (state_val_41569 === 8) {
                                                          var inst_41523 = state_41568[8];
                                                          var inst_41522 = state_41568[12];
                                                          var inst_41525 = inst_41523 < inst_41522;
                                                          var inst_41526 = inst_41525;
                                                          var state_41568__$1 = state_41568;
                                                          if (cljs.core.truth_(inst_41526)) {
                                                            var statearr_41602_41633 = state_41568__$1;
                                                            statearr_41602_41633[1] = 10;
                                                          } else {
                                                            var statearr_41603_41634 = state_41568__$1;
                                                            statearr_41603_41634[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12747__auto__);
        return function(switch__12682__auto__, c__12747__auto__) {
          return function() {
            var state_machine__12683__auto__ = null;
            var state_machine__12683__auto____0 = function() {
              var statearr_41607 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_41607[0] = state_machine__12683__auto__;
              statearr_41607[1] = 1;
              return statearr_41607;
            };
            var state_machine__12683__auto____1 = function(state_41568) {
              while (true) {
                var ret_value__12684__auto__ = function() {
                  try {
                    while (true) {
                      var result__12685__auto__ = switch__12682__auto__.call(null, state_41568);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12685__auto__;
                      }
                      break;
                    }
                  } catch (e41608) {
                    if (e41608 instanceof Object) {
                      var ex__12686__auto__ = e41608;
                      var statearr_41609_41635 = state_41568;
                      statearr_41609_41635[5] = ex__12686__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_41568);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e41608;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__41636 = state_41568;
                  state_41568 = G__41636;
                  continue;
                } else {
                  return ret_value__12684__auto__;
                }
                break;
              }
            };
            state_machine__12683__auto__ = function(state_41568) {
              switch(arguments.length) {
                case 0:
                  return state_machine__12683__auto____0.call(this);
                case 1:
                  return state_machine__12683__auto____1.call(this, state_41568);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
            return state_machine__12683__auto__;
          }();
        }(switch__12682__auto__, c__12747__auto__);
      }();
      var state__12749__auto__ = function() {
        var statearr_41610 = f__12748__auto__.call(null);
        statearr_41610[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto__;
        return statearr_41610;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
    };
  }(c__12747__auto__));
  return c__12747__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__12747__auto___41731 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___41731) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___41731) {
            return function(state_41707) {
              var state_val_41708 = state_41707[1];
              if (state_val_41708 === 7) {
                var inst_41703 = state_41707[2];
                var state_41707__$1 = state_41707;
                var statearr_41709_41732 = state_41707__$1;
                statearr_41709_41732[2] = inst_41703;
                statearr_41709_41732[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_41708 === 1) {
                  var state_41707__$1 = state_41707;
                  var statearr_41710_41733 = state_41707__$1;
                  statearr_41710_41733[2] = null;
                  statearr_41710_41733[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_41708 === 4) {
                    var inst_41686 = state_41707[7];
                    var inst_41686__$1 = state_41707[2];
                    var inst_41687 = inst_41686__$1 == null;
                    var state_41707__$1 = function() {
                      var statearr_41711 = state_41707;
                      statearr_41711[7] = inst_41686__$1;
                      return statearr_41711;
                    }();
                    if (cljs.core.truth_(inst_41687)) {
                      var statearr_41712_41734 = state_41707__$1;
                      statearr_41712_41734[1] = 5;
                    } else {
                      var statearr_41713_41735 = state_41707__$1;
                      statearr_41713_41735[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_41708 === 13) {
                      var state_41707__$1 = state_41707;
                      var statearr_41714_41736 = state_41707__$1;
                      statearr_41714_41736[2] = null;
                      statearr_41714_41736[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_41708 === 6) {
                        var inst_41686 = state_41707[7];
                        var state_41707__$1 = state_41707;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_41707__$1, 11, to, inst_41686);
                      } else {
                        if (state_val_41708 === 3) {
                          var inst_41705 = state_41707[2];
                          var state_41707__$1 = state_41707;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_41707__$1, inst_41705);
                        } else {
                          if (state_val_41708 === 12) {
                            var state_41707__$1 = state_41707;
                            var statearr_41715_41737 = state_41707__$1;
                            statearr_41715_41737[2] = null;
                            statearr_41715_41737[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_41708 === 2) {
                              var state_41707__$1 = state_41707;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_41707__$1, 4, from);
                            } else {
                              if (state_val_41708 === 11) {
                                var inst_41696 = state_41707[2];
                                var state_41707__$1 = state_41707;
                                if (cljs.core.truth_(inst_41696)) {
                                  var statearr_41716_41738 = state_41707__$1;
                                  statearr_41716_41738[1] = 12;
                                } else {
                                  var statearr_41717_41739 = state_41707__$1;
                                  statearr_41717_41739[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_41708 === 9) {
                                  var state_41707__$1 = state_41707;
                                  var statearr_41718_41740 = state_41707__$1;
                                  statearr_41718_41740[2] = null;
                                  statearr_41718_41740[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_41708 === 5) {
                                    var state_41707__$1 = state_41707;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_41719_41741 = state_41707__$1;
                                      statearr_41719_41741[1] = 8;
                                    } else {
                                      var statearr_41720_41742 = state_41707__$1;
                                      statearr_41720_41742[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_41708 === 14) {
                                      var inst_41701 = state_41707[2];
                                      var state_41707__$1 = state_41707;
                                      var statearr_41721_41743 = state_41707__$1;
                                      statearr_41721_41743[2] = inst_41701;
                                      statearr_41721_41743[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_41708 === 10) {
                                        var inst_41693 = state_41707[2];
                                        var state_41707__$1 = state_41707;
                                        var statearr_41722_41744 = state_41707__$1;
                                        statearr_41722_41744[2] = inst_41693;
                                        statearr_41722_41744[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_41708 === 8) {
                                          var inst_41690 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_41707__$1 = state_41707;
                                          var statearr_41723_41745 = state_41707__$1;
                                          statearr_41723_41745[2] = inst_41690;
                                          statearr_41723_41745[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___41731);
          return function(switch__12682__auto__, c__12747__auto___41731) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_41727 = [null, null, null, null, null, null, null, null];
                statearr_41727[0] = state_machine__12683__auto__;
                statearr_41727[1] = 1;
                return statearr_41727;
              };
              var state_machine__12683__auto____1 = function(state_41707) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_41707);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e41728) {
                      if (e41728 instanceof Object) {
                        var ex__12686__auto__ = e41728;
                        var statearr_41729_41746 = state_41707;
                        statearr_41729_41746[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_41707);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e41728;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__41747 = state_41707;
                    state_41707 = G__41747;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_41707) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_41707);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___41731);
        }();
        var state__12749__auto__ = function() {
          var statearr_41730 = f__12748__auto__.call(null);
          statearr_41730[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___41731;
          return statearr_41730;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___41731));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__12747__auto___41848 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___41848, tc, fc) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___41848, tc, fc) {
            return function(state_41823) {
              var state_val_41824 = state_41823[1];
              if (state_val_41824 === 7) {
                var inst_41819 = state_41823[2];
                var state_41823__$1 = state_41823;
                var statearr_41825_41849 = state_41823__$1;
                statearr_41825_41849[2] = inst_41819;
                statearr_41825_41849[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_41824 === 1) {
                  var state_41823__$1 = state_41823;
                  var statearr_41826_41850 = state_41823__$1;
                  statearr_41826_41850[2] = null;
                  statearr_41826_41850[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_41824 === 4) {
                    var inst_41800 = state_41823[7];
                    var inst_41800__$1 = state_41823[2];
                    var inst_41801 = inst_41800__$1 == null;
                    var state_41823__$1 = function() {
                      var statearr_41827 = state_41823;
                      statearr_41827[7] = inst_41800__$1;
                      return statearr_41827;
                    }();
                    if (cljs.core.truth_(inst_41801)) {
                      var statearr_41828_41851 = state_41823__$1;
                      statearr_41828_41851[1] = 5;
                    } else {
                      var statearr_41829_41852 = state_41823__$1;
                      statearr_41829_41852[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_41824 === 13) {
                      var state_41823__$1 = state_41823;
                      var statearr_41830_41853 = state_41823__$1;
                      statearr_41830_41853[2] = null;
                      statearr_41830_41853[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_41824 === 6) {
                        var inst_41800 = state_41823[7];
                        var inst_41806 = p.call(null, inst_41800);
                        var state_41823__$1 = state_41823;
                        if (cljs.core.truth_(inst_41806)) {
                          var statearr_41831_41854 = state_41823__$1;
                          statearr_41831_41854[1] = 9;
                        } else {
                          var statearr_41832_41855 = state_41823__$1;
                          statearr_41832_41855[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_41824 === 3) {
                          var inst_41821 = state_41823[2];
                          var state_41823__$1 = state_41823;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_41823__$1, inst_41821);
                        } else {
                          if (state_val_41824 === 12) {
                            var state_41823__$1 = state_41823;
                            var statearr_41833_41856 = state_41823__$1;
                            statearr_41833_41856[2] = null;
                            statearr_41833_41856[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_41824 === 2) {
                              var state_41823__$1 = state_41823;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_41823__$1, 4, ch);
                            } else {
                              if (state_val_41824 === 11) {
                                var inst_41800 = state_41823[7];
                                var inst_41810 = state_41823[2];
                                var state_41823__$1 = state_41823;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_41823__$1, 8, inst_41810, inst_41800);
                              } else {
                                if (state_val_41824 === 9) {
                                  var state_41823__$1 = state_41823;
                                  var statearr_41834_41857 = state_41823__$1;
                                  statearr_41834_41857[2] = tc;
                                  statearr_41834_41857[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_41824 === 5) {
                                    var inst_41803 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_41804 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_41823__$1 = function() {
                                      var statearr_41835 = state_41823;
                                      statearr_41835[8] = inst_41803;
                                      return statearr_41835;
                                    }();
                                    var statearr_41836_41858 = state_41823__$1;
                                    statearr_41836_41858[2] = inst_41804;
                                    statearr_41836_41858[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_41824 === 14) {
                                      var inst_41817 = state_41823[2];
                                      var state_41823__$1 = state_41823;
                                      var statearr_41837_41859 = state_41823__$1;
                                      statearr_41837_41859[2] = inst_41817;
                                      statearr_41837_41859[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_41824 === 10) {
                                        var state_41823__$1 = state_41823;
                                        var statearr_41838_41860 = state_41823__$1;
                                        statearr_41838_41860[2] = fc;
                                        statearr_41838_41860[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_41824 === 8) {
                                          var inst_41812 = state_41823[2];
                                          var state_41823__$1 = state_41823;
                                          if (cljs.core.truth_(inst_41812)) {
                                            var statearr_41839_41861 = state_41823__$1;
                                            statearr_41839_41861[1] = 12;
                                          } else {
                                            var statearr_41840_41862 = state_41823__$1;
                                            statearr_41840_41862[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___41848, tc, fc);
          return function(switch__12682__auto__, c__12747__auto___41848, tc, fc) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_41844 = [null, null, null, null, null, null, null, null, null];
                statearr_41844[0] = state_machine__12683__auto__;
                statearr_41844[1] = 1;
                return statearr_41844;
              };
              var state_machine__12683__auto____1 = function(state_41823) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_41823);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e41845) {
                      if (e41845 instanceof Object) {
                        var ex__12686__auto__ = e41845;
                        var statearr_41846_41863 = state_41823;
                        statearr_41846_41863[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_41823);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e41845;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__41864 = state_41823;
                    state_41823 = G__41864;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_41823) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_41823);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___41848, tc, fc);
        }();
        var state__12749__auto__ = function() {
          var statearr_41847 = f__12748__auto__.call(null);
          statearr_41847[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___41848;
          return statearr_41847;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___41848, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__12747__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto__) {
    return function() {
      var f__12748__auto__ = function() {
        var switch__12682__auto__ = function(c__12747__auto__) {
          return function(state_41911) {
            var state_val_41912 = state_41911[1];
            if (state_val_41912 === 7) {
              var inst_41907 = state_41911[2];
              var state_41911__$1 = state_41911;
              var statearr_41913_41929 = state_41911__$1;
              statearr_41913_41929[2] = inst_41907;
              statearr_41913_41929[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_41912 === 6) {
                var inst_41900 = state_41911[7];
                var inst_41897 = state_41911[8];
                var inst_41904 = f.call(null, inst_41897, inst_41900);
                var inst_41897__$1 = inst_41904;
                var state_41911__$1 = function() {
                  var statearr_41914 = state_41911;
                  statearr_41914[8] = inst_41897__$1;
                  return statearr_41914;
                }();
                var statearr_41915_41930 = state_41911__$1;
                statearr_41915_41930[2] = null;
                statearr_41915_41930[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_41912 === 5) {
                  var inst_41897 = state_41911[8];
                  var state_41911__$1 = state_41911;
                  var statearr_41916_41931 = state_41911__$1;
                  statearr_41916_41931[2] = inst_41897;
                  statearr_41916_41931[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_41912 === 4) {
                    var inst_41900 = state_41911[7];
                    var inst_41900__$1 = state_41911[2];
                    var inst_41901 = inst_41900__$1 == null;
                    var state_41911__$1 = function() {
                      var statearr_41917 = state_41911;
                      statearr_41917[7] = inst_41900__$1;
                      return statearr_41917;
                    }();
                    if (cljs.core.truth_(inst_41901)) {
                      var statearr_41918_41932 = state_41911__$1;
                      statearr_41918_41932[1] = 5;
                    } else {
                      var statearr_41919_41933 = state_41911__$1;
                      statearr_41919_41933[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_41912 === 3) {
                      var inst_41909 = state_41911[2];
                      var state_41911__$1 = state_41911;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_41911__$1, inst_41909);
                    } else {
                      if (state_val_41912 === 2) {
                        var state_41911__$1 = state_41911;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_41911__$1, 4, ch);
                      } else {
                        if (state_val_41912 === 1) {
                          var inst_41897 = init;
                          var state_41911__$1 = function() {
                            var statearr_41920 = state_41911;
                            statearr_41920[8] = inst_41897;
                            return statearr_41920;
                          }();
                          var statearr_41921_41934 = state_41911__$1;
                          statearr_41921_41934[2] = null;
                          statearr_41921_41934[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12747__auto__);
        return function(switch__12682__auto__, c__12747__auto__) {
          return function() {
            var state_machine__12683__auto__ = null;
            var state_machine__12683__auto____0 = function() {
              var statearr_41925 = [null, null, null, null, null, null, null, null, null];
              statearr_41925[0] = state_machine__12683__auto__;
              statearr_41925[1] = 1;
              return statearr_41925;
            };
            var state_machine__12683__auto____1 = function(state_41911) {
              while (true) {
                var ret_value__12684__auto__ = function() {
                  try {
                    while (true) {
                      var result__12685__auto__ = switch__12682__auto__.call(null, state_41911);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12685__auto__;
                      }
                      break;
                    }
                  } catch (e41926) {
                    if (e41926 instanceof Object) {
                      var ex__12686__auto__ = e41926;
                      var statearr_41927_41935 = state_41911;
                      statearr_41927_41935[5] = ex__12686__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_41911);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e41926;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__41936 = state_41911;
                  state_41911 = G__41936;
                  continue;
                } else {
                  return ret_value__12684__auto__;
                }
                break;
              }
            };
            state_machine__12683__auto__ = function(state_41911) {
              switch(arguments.length) {
                case 0:
                  return state_machine__12683__auto____0.call(this);
                case 1:
                  return state_machine__12683__auto____1.call(this, state_41911);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
            return state_machine__12683__auto__;
          }();
        }(switch__12682__auto__, c__12747__auto__);
      }();
      var state__12749__auto__ = function() {
        var statearr_41928 = f__12748__auto__.call(null);
        statearr_41928[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto__;
        return statearr_41928;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
    };
  }(c__12747__auto__));
  return c__12747__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__12747__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto__) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto__) {
            return function(state_42010) {
              var state_val_42011 = state_42010[1];
              if (state_val_42011 === 7) {
                var inst_41992 = state_42010[2];
                var state_42010__$1 = state_42010;
                var statearr_42012_42035 = state_42010__$1;
                statearr_42012_42035[2] = inst_41992;
                statearr_42012_42035[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_42011 === 1) {
                  var inst_41986 = cljs.core.seq.call(null, coll);
                  var inst_41987 = inst_41986;
                  var state_42010__$1 = function() {
                    var statearr_42013 = state_42010;
                    statearr_42013[7] = inst_41987;
                    return statearr_42013;
                  }();
                  var statearr_42014_42036 = state_42010__$1;
                  statearr_42014_42036[2] = null;
                  statearr_42014_42036[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_42011 === 4) {
                    var inst_41987 = state_42010[7];
                    var inst_41990 = cljs.core.first.call(null, inst_41987);
                    var state_42010__$1 = state_42010;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_42010__$1, 7, ch, inst_41990);
                  } else {
                    if (state_val_42011 === 13) {
                      var inst_42004 = state_42010[2];
                      var state_42010__$1 = state_42010;
                      var statearr_42015_42037 = state_42010__$1;
                      statearr_42015_42037[2] = inst_42004;
                      statearr_42015_42037[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_42011 === 6) {
                        var inst_41995 = state_42010[2];
                        var state_42010__$1 = state_42010;
                        if (cljs.core.truth_(inst_41995)) {
                          var statearr_42016_42038 = state_42010__$1;
                          statearr_42016_42038[1] = 8;
                        } else {
                          var statearr_42017_42039 = state_42010__$1;
                          statearr_42017_42039[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_42011 === 3) {
                          var inst_42008 = state_42010[2];
                          var state_42010__$1 = state_42010;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_42010__$1, inst_42008);
                        } else {
                          if (state_val_42011 === 12) {
                            var state_42010__$1 = state_42010;
                            var statearr_42018_42040 = state_42010__$1;
                            statearr_42018_42040[2] = null;
                            statearr_42018_42040[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_42011 === 2) {
                              var inst_41987 = state_42010[7];
                              var state_42010__$1 = state_42010;
                              if (cljs.core.truth_(inst_41987)) {
                                var statearr_42019_42041 = state_42010__$1;
                                statearr_42019_42041[1] = 4;
                              } else {
                                var statearr_42020_42042 = state_42010__$1;
                                statearr_42020_42042[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_42011 === 11) {
                                var inst_42001 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_42010__$1 = state_42010;
                                var statearr_42021_42043 = state_42010__$1;
                                statearr_42021_42043[2] = inst_42001;
                                statearr_42021_42043[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_42011 === 9) {
                                  var state_42010__$1 = state_42010;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_42022_42044 = state_42010__$1;
                                    statearr_42022_42044[1] = 11;
                                  } else {
                                    var statearr_42023_42045 = state_42010__$1;
                                    statearr_42023_42045[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_42011 === 5) {
                                    var inst_41987 = state_42010[7];
                                    var state_42010__$1 = state_42010;
                                    var statearr_42024_42046 = state_42010__$1;
                                    statearr_42024_42046[2] = inst_41987;
                                    statearr_42024_42046[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_42011 === 10) {
                                      var inst_42006 = state_42010[2];
                                      var state_42010__$1 = state_42010;
                                      var statearr_42025_42047 = state_42010__$1;
                                      statearr_42025_42047[2] = inst_42006;
                                      statearr_42025_42047[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_42011 === 8) {
                                        var inst_41987 = state_42010[7];
                                        var inst_41997 = cljs.core.next.call(null, inst_41987);
                                        var inst_41987__$1 = inst_41997;
                                        var state_42010__$1 = function() {
                                          var statearr_42026 = state_42010;
                                          statearr_42026[7] = inst_41987__$1;
                                          return statearr_42026;
                                        }();
                                        var statearr_42027_42048 = state_42010__$1;
                                        statearr_42027_42048[2] = null;
                                        statearr_42027_42048[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto__);
          return function(switch__12682__auto__, c__12747__auto__) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_42031 = [null, null, null, null, null, null, null, null];
                statearr_42031[0] = state_machine__12683__auto__;
                statearr_42031[1] = 1;
                return statearr_42031;
              };
              var state_machine__12683__auto____1 = function(state_42010) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_42010);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e42032) {
                      if (e42032 instanceof Object) {
                        var ex__12686__auto__ = e42032;
                        var statearr_42033_42049 = state_42010;
                        statearr_42033_42049[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_42010);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e42032;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__42050 = state_42010;
                    state_42010 = G__42050;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_42010) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_42010);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto__);
        }();
        var state__12749__auto__ = function() {
          var statearr_42034 = f__12748__auto__.call(null);
          statearr_42034[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto__;
          return statearr_42034;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto__));
    return c__12747__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj42052 = {};
  return obj42052;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3541__auto__ = _;
    if (and__3541__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4180__auto__ = _ == null ? null : _;
    return function() {
      var or__3553__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj42054 = {};
  return obj42054;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t42276 !== "undefined") {
    } else {
      cljs.core.async.t42276 = function(cs, ch, mult, meta42277) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta42277 = meta42277;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t42276.cljs$lang$type = true;
      cljs.core.async.t42276.cljs$lang$ctorStr = "cljs.core.async/t42276";
      cljs.core.async.t42276.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
          return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t42276");
        };
      }(cs);
      cljs.core.async.t42276.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t42276.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t42276.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t42276.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t42276.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t42276.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t42276.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_42278) {
          var self__ = this;
          var _42278__$1 = this;
          return self__.meta42277;
        };
      }(cs);
      cljs.core.async.t42276.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_42278, meta42277__$1) {
          var self__ = this;
          var _42278__$1 = this;
          return new cljs.core.async.t42276(self__.cs, self__.ch, self__.mult, meta42277__$1);
        };
      }(cs);
      cljs.core.async.__GT_t42276 = function(cs) {
        return function __GT_t42276(cs__$1, ch__$1, mult__$1, meta42277) {
          return new cljs.core.async.t42276(cs__$1, ch__$1, mult__$1, meta42277);
        };
      }(cs);
    }
    return new cljs.core.async.t42276(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__12747__auto___42497 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___42497, cs, m, dchan, dctr, done) {
    return function() {
      var f__12748__auto__ = function() {
        var switch__12682__auto__ = function(c__12747__auto___42497, cs, m, dchan, dctr, done) {
          return function(state_42409) {
            var state_val_42410 = state_42409[1];
            if (state_val_42410 === 7) {
              var inst_42405 = state_42409[2];
              var state_42409__$1 = state_42409;
              var statearr_42411_42498 = state_42409__$1;
              statearr_42411_42498[2] = inst_42405;
              statearr_42411_42498[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_42410 === 20) {
                var inst_42310 = state_42409[7];
                var inst_42320 = cljs.core.first.call(null, inst_42310);
                var inst_42321 = cljs.core.nth.call(null, inst_42320, 0, null);
                var inst_42322 = cljs.core.nth.call(null, inst_42320, 1, null);
                var state_42409__$1 = function() {
                  var statearr_42412 = state_42409;
                  statearr_42412[8] = inst_42321;
                  return statearr_42412;
                }();
                if (cljs.core.truth_(inst_42322)) {
                  var statearr_42413_42499 = state_42409__$1;
                  statearr_42413_42499[1] = 22;
                } else {
                  var statearr_42414_42500 = state_42409__$1;
                  statearr_42414_42500[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_42410 === 27) {
                  var inst_42281 = state_42409[9];
                  var inst_42350 = state_42409[10];
                  var inst_42357 = state_42409[11];
                  var inst_42352 = state_42409[12];
                  var inst_42357__$1 = cljs.core._nth.call(null, inst_42350, inst_42352);
                  var inst_42358 = cljs.core.async.put_BANG_.call(null, inst_42357__$1, inst_42281, done);
                  var state_42409__$1 = function() {
                    var statearr_42415 = state_42409;
                    statearr_42415[11] = inst_42357__$1;
                    return statearr_42415;
                  }();
                  if (cljs.core.truth_(inst_42358)) {
                    var statearr_42416_42501 = state_42409__$1;
                    statearr_42416_42501[1] = 30;
                  } else {
                    var statearr_42417_42502 = state_42409__$1;
                    statearr_42417_42502[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_42410 === 1) {
                    var state_42409__$1 = state_42409;
                    var statearr_42418_42503 = state_42409__$1;
                    statearr_42418_42503[2] = null;
                    statearr_42418_42503[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_42410 === 24) {
                      var inst_42310 = state_42409[7];
                      var inst_42327 = state_42409[2];
                      var inst_42328 = cljs.core.next.call(null, inst_42310);
                      var inst_42290 = inst_42328;
                      var inst_42291 = null;
                      var inst_42292 = 0;
                      var inst_42293 = 0;
                      var state_42409__$1 = function() {
                        var statearr_42419 = state_42409;
                        statearr_42419[13] = inst_42291;
                        statearr_42419[14] = inst_42327;
                        statearr_42419[15] = inst_42292;
                        statearr_42419[16] = inst_42290;
                        statearr_42419[17] = inst_42293;
                        return statearr_42419;
                      }();
                      var statearr_42420_42504 = state_42409__$1;
                      statearr_42420_42504[2] = null;
                      statearr_42420_42504[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_42410 === 39) {
                        var state_42409__$1 = state_42409;
                        var statearr_42424_42505 = state_42409__$1;
                        statearr_42424_42505[2] = null;
                        statearr_42424_42505[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_42410 === 4) {
                          var inst_42281 = state_42409[9];
                          var inst_42281__$1 = state_42409[2];
                          var inst_42282 = inst_42281__$1 == null;
                          var state_42409__$1 = function() {
                            var statearr_42425 = state_42409;
                            statearr_42425[9] = inst_42281__$1;
                            return statearr_42425;
                          }();
                          if (cljs.core.truth_(inst_42282)) {
                            var statearr_42426_42506 = state_42409__$1;
                            statearr_42426_42506[1] = 5;
                          } else {
                            var statearr_42427_42507 = state_42409__$1;
                            statearr_42427_42507[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_42410 === 15) {
                            var inst_42291 = state_42409[13];
                            var inst_42292 = state_42409[15];
                            var inst_42290 = state_42409[16];
                            var inst_42293 = state_42409[17];
                            var inst_42306 = state_42409[2];
                            var inst_42307 = inst_42293 + 1;
                            var tmp42421 = inst_42291;
                            var tmp42422 = inst_42292;
                            var tmp42423 = inst_42290;
                            var inst_42290__$1 = tmp42423;
                            var inst_42291__$1 = tmp42421;
                            var inst_42292__$1 = tmp42422;
                            var inst_42293__$1 = inst_42307;
                            var state_42409__$1 = function() {
                              var statearr_42428 = state_42409;
                              statearr_42428[18] = inst_42306;
                              statearr_42428[13] = inst_42291__$1;
                              statearr_42428[15] = inst_42292__$1;
                              statearr_42428[16] = inst_42290__$1;
                              statearr_42428[17] = inst_42293__$1;
                              return statearr_42428;
                            }();
                            var statearr_42429_42508 = state_42409__$1;
                            statearr_42429_42508[2] = null;
                            statearr_42429_42508[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_42410 === 21) {
                              var inst_42331 = state_42409[2];
                              var state_42409__$1 = state_42409;
                              var statearr_42433_42509 = state_42409__$1;
                              statearr_42433_42509[2] = inst_42331;
                              statearr_42433_42509[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_42410 === 31) {
                                var inst_42357 = state_42409[11];
                                var inst_42361 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                var inst_42362 = cljs.core.async.untap_STAR_.call(null, m, inst_42357);
                                var state_42409__$1 = function() {
                                  var statearr_42434 = state_42409;
                                  statearr_42434[19] = inst_42361;
                                  return statearr_42434;
                                }();
                                var statearr_42435_42510 = state_42409__$1;
                                statearr_42435_42510[2] = inst_42362;
                                statearr_42435_42510[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_42410 === 32) {
                                  var inst_42350 = state_42409[10];
                                  var inst_42351 = state_42409[20];
                                  var inst_42349 = state_42409[21];
                                  var inst_42352 = state_42409[12];
                                  var inst_42364 = state_42409[2];
                                  var inst_42365 = inst_42352 + 1;
                                  var tmp42430 = inst_42350;
                                  var tmp42431 = inst_42351;
                                  var tmp42432 = inst_42349;
                                  var inst_42349__$1 = tmp42432;
                                  var inst_42350__$1 = tmp42430;
                                  var inst_42351__$1 = tmp42431;
                                  var inst_42352__$1 = inst_42365;
                                  var state_42409__$1 = function() {
                                    var statearr_42436 = state_42409;
                                    statearr_42436[22] = inst_42364;
                                    statearr_42436[10] = inst_42350__$1;
                                    statearr_42436[20] = inst_42351__$1;
                                    statearr_42436[21] = inst_42349__$1;
                                    statearr_42436[12] = inst_42352__$1;
                                    return statearr_42436;
                                  }();
                                  var statearr_42437_42511 = state_42409__$1;
                                  statearr_42437_42511[2] = null;
                                  statearr_42437_42511[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_42410 === 40) {
                                    var inst_42377 = state_42409[23];
                                    var inst_42381 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                    var inst_42382 = cljs.core.async.untap_STAR_.call(null, m, inst_42377);
                                    var state_42409__$1 = function() {
                                      var statearr_42438 = state_42409;
                                      statearr_42438[24] = inst_42381;
                                      return statearr_42438;
                                    }();
                                    var statearr_42439_42512 = state_42409__$1;
                                    statearr_42439_42512[2] = inst_42382;
                                    statearr_42439_42512[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_42410 === 33) {
                                      var inst_42368 = state_42409[25];
                                      var inst_42370 = cljs.core.chunked_seq_QMARK_.call(null, inst_42368);
                                      var state_42409__$1 = state_42409;
                                      if (inst_42370) {
                                        var statearr_42440_42513 = state_42409__$1;
                                        statearr_42440_42513[1] = 36;
                                      } else {
                                        var statearr_42441_42514 = state_42409__$1;
                                        statearr_42441_42514[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_42410 === 13) {
                                        var inst_42300 = state_42409[26];
                                        var inst_42303 = cljs.core.async.close_BANG_.call(null, inst_42300);
                                        var state_42409__$1 = state_42409;
                                        var statearr_42442_42515 = state_42409__$1;
                                        statearr_42442_42515[2] = inst_42303;
                                        statearr_42442_42515[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_42410 === 22) {
                                          var inst_42321 = state_42409[8];
                                          var inst_42324 = cljs.core.async.close_BANG_.call(null, inst_42321);
                                          var state_42409__$1 = state_42409;
                                          var statearr_42443_42516 = state_42409__$1;
                                          statearr_42443_42516[2] = inst_42324;
                                          statearr_42443_42516[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_42410 === 36) {
                                            var inst_42368 = state_42409[25];
                                            var inst_42372 = cljs.core.chunk_first.call(null, inst_42368);
                                            var inst_42373 = cljs.core.chunk_rest.call(null, inst_42368);
                                            var inst_42374 = cljs.core.count.call(null, inst_42372);
                                            var inst_42349 = inst_42373;
                                            var inst_42350 = inst_42372;
                                            var inst_42351 = inst_42374;
                                            var inst_42352 = 0;
                                            var state_42409__$1 = function() {
                                              var statearr_42444 = state_42409;
                                              statearr_42444[10] = inst_42350;
                                              statearr_42444[20] = inst_42351;
                                              statearr_42444[21] = inst_42349;
                                              statearr_42444[12] = inst_42352;
                                              return statearr_42444;
                                            }();
                                            var statearr_42445_42517 = state_42409__$1;
                                            statearr_42445_42517[2] = null;
                                            statearr_42445_42517[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_42410 === 41) {
                                              var inst_42368 = state_42409[25];
                                              var inst_42384 = state_42409[2];
                                              var inst_42385 = cljs.core.next.call(null, inst_42368);
                                              var inst_42349 = inst_42385;
                                              var inst_42350 = null;
                                              var inst_42351 = 0;
                                              var inst_42352 = 0;
                                              var state_42409__$1 = function() {
                                                var statearr_42446 = state_42409;
                                                statearr_42446[10] = inst_42350;
                                                statearr_42446[20] = inst_42351;
                                                statearr_42446[21] = inst_42349;
                                                statearr_42446[27] = inst_42384;
                                                statearr_42446[12] = inst_42352;
                                                return statearr_42446;
                                              }();
                                              var statearr_42447_42518 = state_42409__$1;
                                              statearr_42447_42518[2] = null;
                                              statearr_42447_42518[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_42410 === 43) {
                                                var state_42409__$1 = state_42409;
                                                var statearr_42448_42519 = state_42409__$1;
                                                statearr_42448_42519[2] = null;
                                                statearr_42448_42519[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_42410 === 29) {
                                                  var inst_42393 = state_42409[2];
                                                  var state_42409__$1 = state_42409;
                                                  var statearr_42449_42520 = state_42409__$1;
                                                  statearr_42449_42520[2] = inst_42393;
                                                  statearr_42449_42520[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_42410 === 44) {
                                                    var inst_42402 = state_42409[2];
                                                    var state_42409__$1 = function() {
                                                      var statearr_42450 = state_42409;
                                                      statearr_42450[28] = inst_42402;
                                                      return statearr_42450;
                                                    }();
                                                    var statearr_42451_42521 = state_42409__$1;
                                                    statearr_42451_42521[2] = null;
                                                    statearr_42451_42521[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_42410 === 6) {
                                                      var inst_42341 = state_42409[29];
                                                      var inst_42340 = cljs.core.deref.call(null, cs);
                                                      var inst_42341__$1 = cljs.core.keys.call(null, inst_42340);
                                                      var inst_42342 = cljs.core.count.call(null, inst_42341__$1);
                                                      var inst_42343 = cljs.core.reset_BANG_.call(null, dctr, inst_42342);
                                                      var inst_42348 = cljs.core.seq.call(null, inst_42341__$1);
                                                      var inst_42349 = inst_42348;
                                                      var inst_42350 = null;
                                                      var inst_42351 = 0;
                                                      var inst_42352 = 0;
                                                      var state_42409__$1 = function() {
                                                        var statearr_42452 = state_42409;
                                                        statearr_42452[29] = inst_42341__$1;
                                                        statearr_42452[10] = inst_42350;
                                                        statearr_42452[20] = inst_42351;
                                                        statearr_42452[21] = inst_42349;
                                                        statearr_42452[30] = inst_42343;
                                                        statearr_42452[12] = inst_42352;
                                                        return statearr_42452;
                                                      }();
                                                      var statearr_42453_42522 = state_42409__$1;
                                                      statearr_42453_42522[2] = null;
                                                      statearr_42453_42522[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_42410 === 28) {
                                                        var inst_42349 = state_42409[21];
                                                        var inst_42368 = state_42409[25];
                                                        var inst_42368__$1 = cljs.core.seq.call(null, inst_42349);
                                                        var state_42409__$1 = function() {
                                                          var statearr_42454 = state_42409;
                                                          statearr_42454[25] = inst_42368__$1;
                                                          return statearr_42454;
                                                        }();
                                                        if (inst_42368__$1) {
                                                          var statearr_42455_42523 = state_42409__$1;
                                                          statearr_42455_42523[1] = 33;
                                                        } else {
                                                          var statearr_42456_42524 = state_42409__$1;
                                                          statearr_42456_42524[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_42410 === 25) {
                                                          var inst_42351 = state_42409[20];
                                                          var inst_42352 = state_42409[12];
                                                          var inst_42354 = inst_42352 < inst_42351;
                                                          var inst_42355 = inst_42354;
                                                          var state_42409__$1 = state_42409;
                                                          if (cljs.core.truth_(inst_42355)) {
                                                            var statearr_42457_42525 = state_42409__$1;
                                                            statearr_42457_42525[1] = 27;
                                                          } else {
                                                            var statearr_42458_42526 = state_42409__$1;
                                                            statearr_42458_42526[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_42410 === 34) {
                                                            var state_42409__$1 = state_42409;
                                                            var statearr_42459_42527 = state_42409__$1;
                                                            statearr_42459_42527[2] = null;
                                                            statearr_42459_42527[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_42410 === 17) {
                                                              var state_42409__$1 = state_42409;
                                                              var statearr_42460_42528 = state_42409__$1;
                                                              statearr_42460_42528[2] = null;
                                                              statearr_42460_42528[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_42410 === 3) {
                                                                var inst_42407 = state_42409[2];
                                                                var state_42409__$1 = state_42409;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_42409__$1, inst_42407);
                                                              } else {
                                                                if (state_val_42410 === 12) {
                                                                  var inst_42336 = state_42409[2];
                                                                  var state_42409__$1 = state_42409;
                                                                  var statearr_42461_42529 = state_42409__$1;
                                                                  statearr_42461_42529[2] = inst_42336;
                                                                  statearr_42461_42529[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_42410 === 2) {
                                                                    var state_42409__$1 = state_42409;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_42409__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_42410 === 23) {
                                                                      var state_42409__$1 = state_42409;
                                                                      var statearr_42462_42530 = state_42409__$1;
                                                                      statearr_42462_42530[2] = null;
                                                                      statearr_42462_42530[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_42410 === 35) {
                                                                        var inst_42391 = state_42409[2];
                                                                        var state_42409__$1 = state_42409;
                                                                        var statearr_42463_42531 = state_42409__$1;
                                                                        statearr_42463_42531[2] = inst_42391;
                                                                        statearr_42463_42531[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_42410 === 19) {
                                                                          var inst_42310 = state_42409[7];
                                                                          var inst_42314 = cljs.core.chunk_first.call(null, inst_42310);
                                                                          var inst_42315 = cljs.core.chunk_rest.call(null, inst_42310);
                                                                          var inst_42316 = cljs.core.count.call(null, inst_42314);
                                                                          var inst_42290 = inst_42315;
                                                                          var inst_42291 = inst_42314;
                                                                          var inst_42292 = inst_42316;
                                                                          var inst_42293 = 0;
                                                                          var state_42409__$1 = function() {
                                                                            var statearr_42464 = state_42409;
                                                                            statearr_42464[13] = inst_42291;
                                                                            statearr_42464[15] = inst_42292;
                                                                            statearr_42464[16] = inst_42290;
                                                                            statearr_42464[17] = inst_42293;
                                                                            return statearr_42464;
                                                                          }();
                                                                          var statearr_42465_42532 = state_42409__$1;
                                                                          statearr_42465_42532[2] = null;
                                                                          statearr_42465_42532[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_42410 === 11) {
                                                                            var inst_42310 = state_42409[7];
                                                                            var inst_42290 = state_42409[16];
                                                                            var inst_42310__$1 = cljs.core.seq.call(null, inst_42290);
                                                                            var state_42409__$1 = function() {
                                                                              var statearr_42466 = state_42409;
                                                                              statearr_42466[7] = inst_42310__$1;
                                                                              return statearr_42466;
                                                                            }();
                                                                            if (inst_42310__$1) {
                                                                              var statearr_42467_42533 = state_42409__$1;
                                                                              statearr_42467_42533[1] = 16;
                                                                            } else {
                                                                              var statearr_42468_42534 = state_42409__$1;
                                                                              statearr_42468_42534[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_42410 === 9) {
                                                                              var inst_42338 = state_42409[2];
                                                                              var state_42409__$1 = state_42409;
                                                                              var statearr_42469_42535 = state_42409__$1;
                                                                              statearr_42469_42535[2] = inst_42338;
                                                                              statearr_42469_42535[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_42410 === 5) {
                                                                                var inst_42288 = cljs.core.deref.call(null, cs);
                                                                                var inst_42289 = cljs.core.seq.call(null, inst_42288);
                                                                                var inst_42290 = inst_42289;
                                                                                var inst_42291 = null;
                                                                                var inst_42292 = 0;
                                                                                var inst_42293 = 0;
                                                                                var state_42409__$1 = function() {
                                                                                  var statearr_42470 = state_42409;
                                                                                  statearr_42470[13] = inst_42291;
                                                                                  statearr_42470[15] = inst_42292;
                                                                                  statearr_42470[16] = inst_42290;
                                                                                  statearr_42470[17] = inst_42293;
                                                                                  return statearr_42470;
                                                                                }();
                                                                                var statearr_42471_42536 = state_42409__$1;
                                                                                statearr_42471_42536[2] = null;
                                                                                statearr_42471_42536[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_42410 === 14) {
                                                                                  var state_42409__$1 = state_42409;
                                                                                  var statearr_42472_42537 = state_42409__$1;
                                                                                  statearr_42472_42537[2] = null;
                                                                                  statearr_42472_42537[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_42410 === 45) {
                                                                                    var inst_42399 = state_42409[2];
                                                                                    var state_42409__$1 = state_42409;
                                                                                    var statearr_42473_42538 = state_42409__$1;
                                                                                    statearr_42473_42538[2] = inst_42399;
                                                                                    statearr_42473_42538[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_42410 === 26) {
                                                                                      var inst_42341 = state_42409[29];
                                                                                      var inst_42395 = state_42409[2];
                                                                                      var inst_42396 = cljs.core.seq.call(null, inst_42341);
                                                                                      var state_42409__$1 = function() {
                                                                                        var statearr_42474 = state_42409;
                                                                                        statearr_42474[31] = inst_42395;
                                                                                        return statearr_42474;
                                                                                      }();
                                                                                      if (inst_42396) {
                                                                                        var statearr_42475_42539 = state_42409__$1;
                                                                                        statearr_42475_42539[1] = 42;
                                                                                      } else {
                                                                                        var statearr_42476_42540 = state_42409__$1;
                                                                                        statearr_42476_42540[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_42410 === 16) {
                                                                                        var inst_42310 = state_42409[7];
                                                                                        var inst_42312 = cljs.core.chunked_seq_QMARK_.call(null, inst_42310);
                                                                                        var state_42409__$1 = state_42409;
                                                                                        if (inst_42312) {
                                                                                          var statearr_42477_42541 = state_42409__$1;
                                                                                          statearr_42477_42541[1] = 19;
                                                                                        } else {
                                                                                          var statearr_42478_42542 = state_42409__$1;
                                                                                          statearr_42478_42542[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_42410 === 38) {
                                                                                          var inst_42388 = state_42409[2];
                                                                                          var state_42409__$1 = state_42409;
                                                                                          var statearr_42479_42543 = state_42409__$1;
                                                                                          statearr_42479_42543[2] = inst_42388;
                                                                                          statearr_42479_42543[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_42410 === 30) {
                                                                                            var state_42409__$1 = state_42409;
                                                                                            var statearr_42480_42544 = state_42409__$1;
                                                                                            statearr_42480_42544[2] = null;
                                                                                            statearr_42480_42544[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_42410 === 10) {
                                                                                              var inst_42291 = state_42409[13];
                                                                                              var inst_42293 = state_42409[17];
                                                                                              var inst_42299 = cljs.core._nth.call(null, inst_42291, inst_42293);
                                                                                              var inst_42300 = cljs.core.nth.call(null, inst_42299, 0, null);
                                                                                              var inst_42301 = cljs.core.nth.call(null, inst_42299, 1, null);
                                                                                              var state_42409__$1 = function() {
                                                                                                var statearr_42481 = state_42409;
                                                                                                statearr_42481[26] = inst_42300;
                                                                                                return statearr_42481;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_42301)) {
                                                                                                var statearr_42482_42545 = state_42409__$1;
                                                                                                statearr_42482_42545[1] = 13;
                                                                                              } else {
                                                                                                var statearr_42483_42546 = state_42409__$1;
                                                                                                statearr_42483_42546[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_42410 === 18) {
                                                                                                var inst_42334 = state_42409[2];
                                                                                                var state_42409__$1 = state_42409;
                                                                                                var statearr_42484_42547 = state_42409__$1;
                                                                                                statearr_42484_42547[2] = inst_42334;
                                                                                                statearr_42484_42547[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_42410 === 42) {
                                                                                                  var state_42409__$1 = state_42409;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_42409__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_42410 === 37) {
                                                                                                    var inst_42281 = state_42409[9];
                                                                                                    var inst_42368 = state_42409[25];
                                                                                                    var inst_42377 = state_42409[23];
                                                                                                    var inst_42377__$1 = cljs.core.first.call(null, inst_42368);
                                                                                                    var inst_42378 = cljs.core.async.put_BANG_.call(null, inst_42377__$1, inst_42281, done);
                                                                                                    var state_42409__$1 = function() {
                                                                                                      var statearr_42485 = state_42409;
                                                                                                      statearr_42485[23] = inst_42377__$1;
                                                                                                      return statearr_42485;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_42378)) {
                                                                                                      var statearr_42486_42548 = state_42409__$1;
                                                                                                      statearr_42486_42548[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_42487_42549 = state_42409__$1;
                                                                                                      statearr_42487_42549[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_42410 === 8) {
                                                                                                      var inst_42292 = state_42409[15];
                                                                                                      var inst_42293 = state_42409[17];
                                                                                                      var inst_42295 = inst_42293 < inst_42292;
                                                                                                      var inst_42296 = inst_42295;
                                                                                                      var state_42409__$1 = state_42409;
                                                                                                      if (cljs.core.truth_(inst_42296)) {
                                                                                                        var statearr_42488_42550 = state_42409__$1;
                                                                                                        statearr_42488_42550[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_42489_42551 = state_42409__$1;
                                                                                                        statearr_42489_42551[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12747__auto___42497, cs, m, dchan, dctr, done);
        return function(switch__12682__auto__, c__12747__auto___42497, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__12683__auto__ = null;
            var state_machine__12683__auto____0 = function() {
              var statearr_42493 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_42493[0] = state_machine__12683__auto__;
              statearr_42493[1] = 1;
              return statearr_42493;
            };
            var state_machine__12683__auto____1 = function(state_42409) {
              while (true) {
                var ret_value__12684__auto__ = function() {
                  try {
                    while (true) {
                      var result__12685__auto__ = switch__12682__auto__.call(null, state_42409);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12685__auto__;
                      }
                      break;
                    }
                  } catch (e42494) {
                    if (e42494 instanceof Object) {
                      var ex__12686__auto__ = e42494;
                      var statearr_42495_42552 = state_42409;
                      statearr_42495_42552[5] = ex__12686__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_42409);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e42494;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__42553 = state_42409;
                  state_42409 = G__42553;
                  continue;
                } else {
                  return ret_value__12684__auto__;
                }
                break;
              }
            };
            state_machine__12683__auto__ = function(state_42409) {
              switch(arguments.length) {
                case 0:
                  return state_machine__12683__auto____0.call(this);
                case 1:
                  return state_machine__12683__auto____1.call(this, state_42409);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
            return state_machine__12683__auto__;
          }();
        }(switch__12682__auto__, c__12747__auto___42497, cs, m, dchan, dctr, done);
      }();
      var state__12749__auto__ = function() {
        var statearr_42496 = f__12748__auto__.call(null);
        statearr_42496[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___42497;
        return statearr_42496;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
    };
  }(c__12747__auto___42497, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj42555 = {};
  return obj42555;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t42675 !== "undefined") {
    } else {
      cljs.core.async.t42675 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta42676) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta42676 = meta42676;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t42675.cljs$lang$type = true;
      cljs.core.async.t42675.cljs$lang$ctorStr = "cljs.core.async/t42675";
      cljs.core.async.t42675.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
          return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t42675");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t42675.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t42675.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t42675.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t42675.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t42675.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t42675.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("mode must be one of: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.solo_modes)) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null)))));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t42675.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t42675.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t42675.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_42677) {
          var self__ = this;
          var _42677__$1 = this;
          return self__.meta42676;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t42675.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_42677, meta42676__$1) {
          var self__ = this;
          var _42677__$1 = this;
          return new cljs.core.async.t42675(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta42676__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t42675 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t42675(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta42676) {
          return new cljs.core.async.t42675(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta42676);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t42675(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, null);
  }();
  var c__12747__auto___42794 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___42794, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__12748__auto__ = function() {
        var switch__12682__auto__ = function(c__12747__auto___42794, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_42747) {
            var state_val_42748 = state_42747[1];
            if (state_val_42748 === 7) {
              var inst_42691 = state_42747[7];
              var inst_42696 = cljs.core.apply.call(null, cljs.core.hash_map, inst_42691);
              var state_42747__$1 = state_42747;
              var statearr_42749_42795 = state_42747__$1;
              statearr_42749_42795[2] = inst_42696;
              statearr_42749_42795[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_42748 === 20) {
                var inst_42706 = state_42747[8];
                var state_42747__$1 = state_42747;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_42747__$1, 23, out, inst_42706);
              } else {
                if (state_val_42748 === 1) {
                  var inst_42681 = state_42747[9];
                  var inst_42681__$1 = calc_state.call(null);
                  var inst_42682 = cljs.core.seq_QMARK_.call(null, inst_42681__$1);
                  var state_42747__$1 = function() {
                    var statearr_42750 = state_42747;
                    statearr_42750[9] = inst_42681__$1;
                    return statearr_42750;
                  }();
                  if (inst_42682) {
                    var statearr_42751_42796 = state_42747__$1;
                    statearr_42751_42796[1] = 2;
                  } else {
                    var statearr_42752_42797 = state_42747__$1;
                    statearr_42752_42797[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_42748 === 24) {
                    var inst_42699 = state_42747[10];
                    var inst_42691 = inst_42699;
                    var state_42747__$1 = function() {
                      var statearr_42753 = state_42747;
                      statearr_42753[7] = inst_42691;
                      return statearr_42753;
                    }();
                    var statearr_42754_42798 = state_42747__$1;
                    statearr_42754_42798[2] = null;
                    statearr_42754_42798[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_42748 === 4) {
                      var inst_42681 = state_42747[9];
                      var inst_42687 = state_42747[2];
                      var inst_42688 = cljs.core.get.call(null, inst_42687, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_42689 = cljs.core.get.call(null, inst_42687, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_42690 = cljs.core.get.call(null, inst_42687, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_42691 = inst_42681;
                      var state_42747__$1 = function() {
                        var statearr_42755 = state_42747;
                        statearr_42755[7] = inst_42691;
                        statearr_42755[11] = inst_42690;
                        statearr_42755[12] = inst_42689;
                        statearr_42755[13] = inst_42688;
                        return statearr_42755;
                      }();
                      var statearr_42756_42799 = state_42747__$1;
                      statearr_42756_42799[2] = null;
                      statearr_42756_42799[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_42748 === 15) {
                        var state_42747__$1 = state_42747;
                        var statearr_42757_42800 = state_42747__$1;
                        statearr_42757_42800[2] = null;
                        statearr_42757_42800[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_42748 === 21) {
                          var inst_42699 = state_42747[10];
                          var inst_42691 = inst_42699;
                          var state_42747__$1 = function() {
                            var statearr_42758 = state_42747;
                            statearr_42758[7] = inst_42691;
                            return statearr_42758;
                          }();
                          var statearr_42759_42801 = state_42747__$1;
                          statearr_42759_42801[2] = null;
                          statearr_42759_42801[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_42748 === 13) {
                            var inst_42743 = state_42747[2];
                            var state_42747__$1 = state_42747;
                            var statearr_42760_42802 = state_42747__$1;
                            statearr_42760_42802[2] = inst_42743;
                            statearr_42760_42802[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_42748 === 22) {
                              var inst_42741 = state_42747[2];
                              var state_42747__$1 = state_42747;
                              var statearr_42761_42803 = state_42747__$1;
                              statearr_42761_42803[2] = inst_42741;
                              statearr_42761_42803[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_42748 === 6) {
                                var inst_42745 = state_42747[2];
                                var state_42747__$1 = state_42747;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_42747__$1, inst_42745);
                              } else {
                                if (state_val_42748 === 25) {
                                  var state_42747__$1 = state_42747;
                                  var statearr_42762_42804 = state_42747__$1;
                                  statearr_42762_42804[2] = null;
                                  statearr_42762_42804[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_42748 === 17) {
                                    var inst_42721 = state_42747[14];
                                    var state_42747__$1 = state_42747;
                                    var statearr_42763_42805 = state_42747__$1;
                                    statearr_42763_42805[2] = inst_42721;
                                    statearr_42763_42805[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_42748 === 3) {
                                      var inst_42681 = state_42747[9];
                                      var state_42747__$1 = state_42747;
                                      var statearr_42764_42806 = state_42747__$1;
                                      statearr_42764_42806[2] = inst_42681;
                                      statearr_42764_42806[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_42748 === 12) {
                                        var inst_42702 = state_42747[15];
                                        var inst_42707 = state_42747[16];
                                        var inst_42721 = state_42747[14];
                                        var inst_42721__$1 = inst_42702.call(null, inst_42707);
                                        var state_42747__$1 = function() {
                                          var statearr_42765 = state_42747;
                                          statearr_42765[14] = inst_42721__$1;
                                          return statearr_42765;
                                        }();
                                        if (cljs.core.truth_(inst_42721__$1)) {
                                          var statearr_42766_42807 = state_42747__$1;
                                          statearr_42766_42807[1] = 17;
                                        } else {
                                          var statearr_42767_42808 = state_42747__$1;
                                          statearr_42767_42808[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_42748 === 2) {
                                          var inst_42681 = state_42747[9];
                                          var inst_42684 = cljs.core.apply.call(null, cljs.core.hash_map, inst_42681);
                                          var state_42747__$1 = state_42747;
                                          var statearr_42768_42809 = state_42747__$1;
                                          statearr_42768_42809[2] = inst_42684;
                                          statearr_42768_42809[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_42748 === 23) {
                                            var inst_42732 = state_42747[2];
                                            var state_42747__$1 = state_42747;
                                            if (cljs.core.truth_(inst_42732)) {
                                              var statearr_42769_42810 = state_42747__$1;
                                              statearr_42769_42810[1] = 24;
                                            } else {
                                              var statearr_42770_42811 = state_42747__$1;
                                              statearr_42770_42811[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_42748 === 19) {
                                              var inst_42729 = state_42747[2];
                                              var state_42747__$1 = state_42747;
                                              if (cljs.core.truth_(inst_42729)) {
                                                var statearr_42771_42812 = state_42747__$1;
                                                statearr_42771_42812[1] = 20;
                                              } else {
                                                var statearr_42772_42813 = state_42747__$1;
                                                statearr_42772_42813[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_42748 === 11) {
                                                var inst_42706 = state_42747[8];
                                                var inst_42712 = inst_42706 == null;
                                                var state_42747__$1 = state_42747;
                                                if (cljs.core.truth_(inst_42712)) {
                                                  var statearr_42773_42814 = state_42747__$1;
                                                  statearr_42773_42814[1] = 14;
                                                } else {
                                                  var statearr_42774_42815 = state_42747__$1;
                                                  statearr_42774_42815[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_42748 === 9) {
                                                  var inst_42699 = state_42747[10];
                                                  var inst_42699__$1 = state_42747[2];
                                                  var inst_42700 = cljs.core.get.call(null, inst_42699__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_42701 = cljs.core.get.call(null, inst_42699__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_42702 = cljs.core.get.call(null, inst_42699__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_42747__$1 = function() {
                                                    var statearr_42775 = state_42747;
                                                    statearr_42775[15] = inst_42702;
                                                    statearr_42775[17] = inst_42701;
                                                    statearr_42775[10] = inst_42699__$1;
                                                    return statearr_42775;
                                                  }();
                                                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_42747__$1, 10, inst_42700);
                                                } else {
                                                  if (state_val_42748 === 5) {
                                                    var inst_42691 = state_42747[7];
                                                    var inst_42694 = cljs.core.seq_QMARK_.call(null, inst_42691);
                                                    var state_42747__$1 = state_42747;
                                                    if (inst_42694) {
                                                      var statearr_42776_42816 = state_42747__$1;
                                                      statearr_42776_42816[1] = 7;
                                                    } else {
                                                      var statearr_42777_42817 = state_42747__$1;
                                                      statearr_42777_42817[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_42748 === 14) {
                                                      var inst_42707 = state_42747[16];
                                                      var inst_42714 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_42707);
                                                      var state_42747__$1 = state_42747;
                                                      var statearr_42778_42818 = state_42747__$1;
                                                      statearr_42778_42818[2] = inst_42714;
                                                      statearr_42778_42818[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_42748 === 26) {
                                                        var inst_42737 = state_42747[2];
                                                        var state_42747__$1 = state_42747;
                                                        var statearr_42779_42819 = state_42747__$1;
                                                        statearr_42779_42819[2] = inst_42737;
                                                        statearr_42779_42819[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_42748 === 16) {
                                                          var inst_42717 = state_42747[2];
                                                          var inst_42718 = calc_state.call(null);
                                                          var inst_42691 = inst_42718;
                                                          var state_42747__$1 = function() {
                                                            var statearr_42780 = state_42747;
                                                            statearr_42780[18] = inst_42717;
                                                            statearr_42780[7] = inst_42691;
                                                            return statearr_42780;
                                                          }();
                                                          var statearr_42781_42820 = state_42747__$1;
                                                          statearr_42781_42820[2] = null;
                                                          statearr_42781_42820[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_42748 === 10) {
                                                            var inst_42707 = state_42747[16];
                                                            var inst_42706 = state_42747[8];
                                                            var inst_42705 = state_42747[2];
                                                            var inst_42706__$1 = cljs.core.nth.call(null, inst_42705, 0, null);
                                                            var inst_42707__$1 = cljs.core.nth.call(null, inst_42705, 1, null);
                                                            var inst_42708 = inst_42706__$1 == null;
                                                            var inst_42709 = cljs.core._EQ_.call(null, inst_42707__$1, change);
                                                            var inst_42710 = inst_42708 || inst_42709;
                                                            var state_42747__$1 = function() {
                                                              var statearr_42782 = state_42747;
                                                              statearr_42782[16] = inst_42707__$1;
                                                              statearr_42782[8] = inst_42706__$1;
                                                              return statearr_42782;
                                                            }();
                                                            if (cljs.core.truth_(inst_42710)) {
                                                              var statearr_42783_42821 = state_42747__$1;
                                                              statearr_42783_42821[1] = 11;
                                                            } else {
                                                              var statearr_42784_42822 = state_42747__$1;
                                                              statearr_42784_42822[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_42748 === 18) {
                                                              var inst_42702 = state_42747[15];
                                                              var inst_42707 = state_42747[16];
                                                              var inst_42701 = state_42747[17];
                                                              var inst_42724 = cljs.core.empty_QMARK_.call(null, inst_42702);
                                                              var inst_42725 = inst_42701.call(null, inst_42707);
                                                              var inst_42726 = cljs.core.not.call(null, inst_42725);
                                                              var inst_42727 = inst_42724 && inst_42726;
                                                              var state_42747__$1 = state_42747;
                                                              var statearr_42785_42823 = state_42747__$1;
                                                              statearr_42785_42823[2] = inst_42727;
                                                              statearr_42785_42823[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_42748 === 8) {
                                                                var inst_42691 = state_42747[7];
                                                                var state_42747__$1 = state_42747;
                                                                var statearr_42786_42824 = state_42747__$1;
                                                                statearr_42786_42824[2] = inst_42691;
                                                                statearr_42786_42824[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12747__auto___42794, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__12682__auto__, c__12747__auto___42794, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__12683__auto__ = null;
            var state_machine__12683__auto____0 = function() {
              var statearr_42790 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_42790[0] = state_machine__12683__auto__;
              statearr_42790[1] = 1;
              return statearr_42790;
            };
            var state_machine__12683__auto____1 = function(state_42747) {
              while (true) {
                var ret_value__12684__auto__ = function() {
                  try {
                    while (true) {
                      var result__12685__auto__ = switch__12682__auto__.call(null, state_42747);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12685__auto__;
                      }
                      break;
                    }
                  } catch (e42791) {
                    if (e42791 instanceof Object) {
                      var ex__12686__auto__ = e42791;
                      var statearr_42792_42825 = state_42747;
                      statearr_42792_42825[5] = ex__12686__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_42747);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e42791;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__42826 = state_42747;
                  state_42747 = G__42826;
                  continue;
                } else {
                  return ret_value__12684__auto__;
                }
                break;
              }
            };
            state_machine__12683__auto__ = function(state_42747) {
              switch(arguments.length) {
                case 0:
                  return state_machine__12683__auto____0.call(this);
                case 1:
                  return state_machine__12683__auto____1.call(this, state_42747);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
            return state_machine__12683__auto__;
          }();
        }(switch__12682__auto__, c__12747__auto___42794, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__12749__auto__ = function() {
        var statearr_42793 = f__12748__auto__.call(null);
        statearr_42793[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___42794;
        return statearr_42793;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
    };
  }(c__12747__auto___42794, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj42828 = {};
  return obj42828;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3541__auto__ = p;
    if (and__3541__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4180__auto__ = p == null ? null : p;
    return function() {
      var or__3553__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3541__auto__ = p;
    if (and__3541__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4180__auto__ = p == null ? null : p;
    return function() {
      var or__3553__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3541__auto__ = p;
      if (and__3541__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4180__auto__ = p == null ? null : p;
      return function() {
        var or__3553__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3541__auto__ = p;
      if (and__3541__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4180__auto__ = p == null ? null : p;
      return function() {
        var or__3553__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3553__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3553__auto__, mults) {
            return function(p1__42829_SHARP_) {
              if (cljs.core.truth_(p1__42829_SHARP_.call(null, topic))) {
                return p1__42829_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__42829_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3553__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t42952 !== "undefined") {
      } else {
        cljs.core.async.t42952 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta42953) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta42953 = meta42953;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t42952.cljs$lang$type = true;
        cljs.core.async.t42952.cljs$lang$ctorStr = "cljs.core.async/t42952";
        cljs.core.async.t42952.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
            return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t42952");
          };
        }(mults, ensure_mult);
        cljs.core.async.t42952.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t42952.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t42952.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t42952.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t42952.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t42952.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t42952.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t42952.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_42954) {
            var self__ = this;
            var _42954__$1 = this;
            return self__.meta42953;
          };
        }(mults, ensure_mult);
        cljs.core.async.t42952.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_42954, meta42953__$1) {
            var self__ = this;
            var _42954__$1 = this;
            return new cljs.core.async.t42952(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta42953__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t42952 = function(mults, ensure_mult) {
          return function __GT_t42952(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta42953) {
            return new cljs.core.async.t42952(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta42953);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t42952(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__12747__auto___43074 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___43074, mults, ensure_mult, p) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___43074, mults, ensure_mult, p) {
            return function(state_43026) {
              var state_val_43027 = state_43026[1];
              if (state_val_43027 === 7) {
                var inst_43022 = state_43026[2];
                var state_43026__$1 = state_43026;
                var statearr_43028_43075 = state_43026__$1;
                statearr_43028_43075[2] = inst_43022;
                statearr_43028_43075[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_43027 === 20) {
                  var state_43026__$1 = state_43026;
                  var statearr_43029_43076 = state_43026__$1;
                  statearr_43029_43076[2] = null;
                  statearr_43029_43076[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_43027 === 1) {
                    var state_43026__$1 = state_43026;
                    var statearr_43030_43077 = state_43026__$1;
                    statearr_43030_43077[2] = null;
                    statearr_43030_43077[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_43027 === 24) {
                      var inst_43005 = state_43026[7];
                      var inst_43014 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_43005);
                      var state_43026__$1 = state_43026;
                      var statearr_43031_43078 = state_43026__$1;
                      statearr_43031_43078[2] = inst_43014;
                      statearr_43031_43078[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_43027 === 4) {
                        var inst_42957 = state_43026[8];
                        var inst_42957__$1 = state_43026[2];
                        var inst_42958 = inst_42957__$1 == null;
                        var state_43026__$1 = function() {
                          var statearr_43032 = state_43026;
                          statearr_43032[8] = inst_42957__$1;
                          return statearr_43032;
                        }();
                        if (cljs.core.truth_(inst_42958)) {
                          var statearr_43033_43079 = state_43026__$1;
                          statearr_43033_43079[1] = 5;
                        } else {
                          var statearr_43034_43080 = state_43026__$1;
                          statearr_43034_43080[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_43027 === 15) {
                          var inst_42999 = state_43026[2];
                          var state_43026__$1 = state_43026;
                          var statearr_43035_43081 = state_43026__$1;
                          statearr_43035_43081[2] = inst_42999;
                          statearr_43035_43081[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_43027 === 21) {
                            var inst_43019 = state_43026[2];
                            var state_43026__$1 = function() {
                              var statearr_43036 = state_43026;
                              statearr_43036[9] = inst_43019;
                              return statearr_43036;
                            }();
                            var statearr_43037_43082 = state_43026__$1;
                            statearr_43037_43082[2] = null;
                            statearr_43037_43082[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_43027 === 13) {
                              var inst_42981 = state_43026[10];
                              var inst_42983 = cljs.core.chunked_seq_QMARK_.call(null, inst_42981);
                              var state_43026__$1 = state_43026;
                              if (inst_42983) {
                                var statearr_43038_43083 = state_43026__$1;
                                statearr_43038_43083[1] = 16;
                              } else {
                                var statearr_43039_43084 = state_43026__$1;
                                statearr_43039_43084[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_43027 === 22) {
                                var inst_43011 = state_43026[2];
                                var state_43026__$1 = state_43026;
                                if (cljs.core.truth_(inst_43011)) {
                                  var statearr_43040_43085 = state_43026__$1;
                                  statearr_43040_43085[1] = 23;
                                } else {
                                  var statearr_43041_43086 = state_43026__$1;
                                  statearr_43041_43086[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_43027 === 6) {
                                  var inst_42957 = state_43026[8];
                                  var inst_43007 = state_43026[11];
                                  var inst_43005 = state_43026[7];
                                  var inst_43005__$1 = topic_fn.call(null, inst_42957);
                                  var inst_43006 = cljs.core.deref.call(null, mults);
                                  var inst_43007__$1 = cljs.core.get.call(null, inst_43006, inst_43005__$1);
                                  var state_43026__$1 = function() {
                                    var statearr_43042 = state_43026;
                                    statearr_43042[11] = inst_43007__$1;
                                    statearr_43042[7] = inst_43005__$1;
                                    return statearr_43042;
                                  }();
                                  if (cljs.core.truth_(inst_43007__$1)) {
                                    var statearr_43043_43087 = state_43026__$1;
                                    statearr_43043_43087[1] = 19;
                                  } else {
                                    var statearr_43044_43088 = state_43026__$1;
                                    statearr_43044_43088[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_43027 === 25) {
                                    var inst_43016 = state_43026[2];
                                    var state_43026__$1 = state_43026;
                                    var statearr_43045_43089 = state_43026__$1;
                                    statearr_43045_43089[2] = inst_43016;
                                    statearr_43045_43089[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_43027 === 17) {
                                      var inst_42981 = state_43026[10];
                                      var inst_42990 = cljs.core.first.call(null, inst_42981);
                                      var inst_42991 = cljs.core.async.muxch_STAR_.call(null, inst_42990);
                                      var inst_42992 = cljs.core.async.close_BANG_.call(null, inst_42991);
                                      var inst_42993 = cljs.core.next.call(null, inst_42981);
                                      var inst_42967 = inst_42993;
                                      var inst_42968 = null;
                                      var inst_42969 = 0;
                                      var inst_42970 = 0;
                                      var state_43026__$1 = function() {
                                        var statearr_43046 = state_43026;
                                        statearr_43046[12] = inst_42992;
                                        statearr_43046[13] = inst_42969;
                                        statearr_43046[14] = inst_42967;
                                        statearr_43046[15] = inst_42968;
                                        statearr_43046[16] = inst_42970;
                                        return statearr_43046;
                                      }();
                                      var statearr_43047_43090 = state_43026__$1;
                                      statearr_43047_43090[2] = null;
                                      statearr_43047_43090[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_43027 === 3) {
                                        var inst_43024 = state_43026[2];
                                        var state_43026__$1 = state_43026;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_43026__$1, inst_43024);
                                      } else {
                                        if (state_val_43027 === 12) {
                                          var inst_43001 = state_43026[2];
                                          var state_43026__$1 = state_43026;
                                          var statearr_43048_43091 = state_43026__$1;
                                          statearr_43048_43091[2] = inst_43001;
                                          statearr_43048_43091[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_43027 === 2) {
                                            var state_43026__$1 = state_43026;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_43026__$1, 4, ch);
                                          } else {
                                            if (state_val_43027 === 23) {
                                              var state_43026__$1 = state_43026;
                                              var statearr_43049_43092 = state_43026__$1;
                                              statearr_43049_43092[2] = null;
                                              statearr_43049_43092[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_43027 === 19) {
                                                var inst_42957 = state_43026[8];
                                                var inst_43007 = state_43026[11];
                                                var inst_43009 = cljs.core.async.muxch_STAR_.call(null, inst_43007);
                                                var state_43026__$1 = state_43026;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_43026__$1, 22, inst_43009, inst_42957);
                                              } else {
                                                if (state_val_43027 === 11) {
                                                  var inst_42967 = state_43026[14];
                                                  var inst_42981 = state_43026[10];
                                                  var inst_42981__$1 = cljs.core.seq.call(null, inst_42967);
                                                  var state_43026__$1 = function() {
                                                    var statearr_43050 = state_43026;
                                                    statearr_43050[10] = inst_42981__$1;
                                                    return statearr_43050;
                                                  }();
                                                  if (inst_42981__$1) {
                                                    var statearr_43051_43093 = state_43026__$1;
                                                    statearr_43051_43093[1] = 13;
                                                  } else {
                                                    var statearr_43052_43094 = state_43026__$1;
                                                    statearr_43052_43094[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_43027 === 9) {
                                                    var inst_43003 = state_43026[2];
                                                    var state_43026__$1 = state_43026;
                                                    var statearr_43053_43095 = state_43026__$1;
                                                    statearr_43053_43095[2] = inst_43003;
                                                    statearr_43053_43095[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_43027 === 5) {
                                                      var inst_42964 = cljs.core.deref.call(null, mults);
                                                      var inst_42965 = cljs.core.vals.call(null, inst_42964);
                                                      var inst_42966 = cljs.core.seq.call(null, inst_42965);
                                                      var inst_42967 = inst_42966;
                                                      var inst_42968 = null;
                                                      var inst_42969 = 0;
                                                      var inst_42970 = 0;
                                                      var state_43026__$1 = function() {
                                                        var statearr_43054 = state_43026;
                                                        statearr_43054[13] = inst_42969;
                                                        statearr_43054[14] = inst_42967;
                                                        statearr_43054[15] = inst_42968;
                                                        statearr_43054[16] = inst_42970;
                                                        return statearr_43054;
                                                      }();
                                                      var statearr_43055_43096 = state_43026__$1;
                                                      statearr_43055_43096[2] = null;
                                                      statearr_43055_43096[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_43027 === 14) {
                                                        var state_43026__$1 = state_43026;
                                                        var statearr_43059_43097 = state_43026__$1;
                                                        statearr_43059_43097[2] = null;
                                                        statearr_43059_43097[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_43027 === 16) {
                                                          var inst_42981 = state_43026[10];
                                                          var inst_42985 = cljs.core.chunk_first.call(null, inst_42981);
                                                          var inst_42986 = cljs.core.chunk_rest.call(null, inst_42981);
                                                          var inst_42987 = cljs.core.count.call(null, inst_42985);
                                                          var inst_42967 = inst_42986;
                                                          var inst_42968 = inst_42985;
                                                          var inst_42969 = inst_42987;
                                                          var inst_42970 = 0;
                                                          var state_43026__$1 = function() {
                                                            var statearr_43060 = state_43026;
                                                            statearr_43060[13] = inst_42969;
                                                            statearr_43060[14] = inst_42967;
                                                            statearr_43060[15] = inst_42968;
                                                            statearr_43060[16] = inst_42970;
                                                            return statearr_43060;
                                                          }();
                                                          var statearr_43061_43098 = state_43026__$1;
                                                          statearr_43061_43098[2] = null;
                                                          statearr_43061_43098[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_43027 === 10) {
                                                            var inst_42969 = state_43026[13];
                                                            var inst_42967 = state_43026[14];
                                                            var inst_42968 = state_43026[15];
                                                            var inst_42970 = state_43026[16];
                                                            var inst_42975 = cljs.core._nth.call(null, inst_42968, inst_42970);
                                                            var inst_42976 = cljs.core.async.muxch_STAR_.call(null, inst_42975);
                                                            var inst_42977 = cljs.core.async.close_BANG_.call(null, inst_42976);
                                                            var inst_42978 = inst_42970 + 1;
                                                            var tmp43056 = inst_42969;
                                                            var tmp43057 = inst_42967;
                                                            var tmp43058 = inst_42968;
                                                            var inst_42967__$1 = tmp43057;
                                                            var inst_42968__$1 = tmp43058;
                                                            var inst_42969__$1 = tmp43056;
                                                            var inst_42970__$1 = inst_42978;
                                                            var state_43026__$1 = function() {
                                                              var statearr_43062 = state_43026;
                                                              statearr_43062[13] = inst_42969__$1;
                                                              statearr_43062[17] = inst_42977;
                                                              statearr_43062[14] = inst_42967__$1;
                                                              statearr_43062[15] = inst_42968__$1;
                                                              statearr_43062[16] = inst_42970__$1;
                                                              return statearr_43062;
                                                            }();
                                                            var statearr_43063_43099 = state_43026__$1;
                                                            statearr_43063_43099[2] = null;
                                                            statearr_43063_43099[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_43027 === 18) {
                                                              var inst_42996 = state_43026[2];
                                                              var state_43026__$1 = state_43026;
                                                              var statearr_43064_43100 = state_43026__$1;
                                                              statearr_43064_43100[2] = inst_42996;
                                                              statearr_43064_43100[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_43027 === 8) {
                                                                var inst_42969 = state_43026[13];
                                                                var inst_42970 = state_43026[16];
                                                                var inst_42972 = inst_42970 < inst_42969;
                                                                var inst_42973 = inst_42972;
                                                                var state_43026__$1 = state_43026;
                                                                if (cljs.core.truth_(inst_42973)) {
                                                                  var statearr_43065_43101 = state_43026__$1;
                                                                  statearr_43065_43101[1] = 10;
                                                                } else {
                                                                  var statearr_43066_43102 = state_43026__$1;
                                                                  statearr_43066_43102[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___43074, mults, ensure_mult, p);
          return function(switch__12682__auto__, c__12747__auto___43074, mults, ensure_mult, p) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_43070 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_43070[0] = state_machine__12683__auto__;
                statearr_43070[1] = 1;
                return statearr_43070;
              };
              var state_machine__12683__auto____1 = function(state_43026) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_43026);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e43071) {
                      if (e43071 instanceof Object) {
                        var ex__12686__auto__ = e43071;
                        var statearr_43072_43103 = state_43026;
                        statearr_43072_43103[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_43026);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e43071;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__43104 = state_43026;
                    state_43026 = G__43104;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_43026) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_43026);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___43074, mults, ensure_mult, p);
        }();
        var state__12749__auto__ = function() {
          var statearr_43073 = f__12748__auto__.call(null);
          statearr_43073[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___43074;
          return statearr_43073;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___43074, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__12747__auto___43241 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___43241, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___43241, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_43211) {
              var state_val_43212 = state_43211[1];
              if (state_val_43212 === 7) {
                var state_43211__$1 = state_43211;
                var statearr_43213_43242 = state_43211__$1;
                statearr_43213_43242[2] = null;
                statearr_43213_43242[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_43212 === 1) {
                  var state_43211__$1 = state_43211;
                  var statearr_43214_43243 = state_43211__$1;
                  statearr_43214_43243[2] = null;
                  statearr_43214_43243[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_43212 === 4) {
                    var inst_43175 = state_43211[7];
                    var inst_43177 = inst_43175 < cnt;
                    var state_43211__$1 = state_43211;
                    if (cljs.core.truth_(inst_43177)) {
                      var statearr_43215_43244 = state_43211__$1;
                      statearr_43215_43244[1] = 6;
                    } else {
                      var statearr_43216_43245 = state_43211__$1;
                      statearr_43216_43245[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_43212 === 15) {
                      var inst_43207 = state_43211[2];
                      var state_43211__$1 = state_43211;
                      var statearr_43217_43246 = state_43211__$1;
                      statearr_43217_43246[2] = inst_43207;
                      statearr_43217_43246[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_43212 === 13) {
                        var inst_43200 = cljs.core.async.close_BANG_.call(null, out);
                        var state_43211__$1 = state_43211;
                        var statearr_43218_43247 = state_43211__$1;
                        statearr_43218_43247[2] = inst_43200;
                        statearr_43218_43247[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_43212 === 6) {
                          var state_43211__$1 = state_43211;
                          var statearr_43219_43248 = state_43211__$1;
                          statearr_43219_43248[2] = null;
                          statearr_43219_43248[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_43212 === 3) {
                            var inst_43209 = state_43211[2];
                            var state_43211__$1 = state_43211;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_43211__$1, inst_43209);
                          } else {
                            if (state_val_43212 === 12) {
                              var inst_43197 = state_43211[8];
                              var inst_43197__$1 = state_43211[2];
                              var inst_43198 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_43197__$1);
                              var state_43211__$1 = function() {
                                var statearr_43220 = state_43211;
                                statearr_43220[8] = inst_43197__$1;
                                return statearr_43220;
                              }();
                              if (cljs.core.truth_(inst_43198)) {
                                var statearr_43221_43249 = state_43211__$1;
                                statearr_43221_43249[1] = 13;
                              } else {
                                var statearr_43222_43250 = state_43211__$1;
                                statearr_43222_43250[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_43212 === 2) {
                                var inst_43174 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_43175 = 0;
                                var state_43211__$1 = function() {
                                  var statearr_43223 = state_43211;
                                  statearr_43223[9] = inst_43174;
                                  statearr_43223[7] = inst_43175;
                                  return statearr_43223;
                                }();
                                var statearr_43224_43251 = state_43211__$1;
                                statearr_43224_43251[2] = null;
                                statearr_43224_43251[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_43212 === 11) {
                                  var inst_43175 = state_43211[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_43211, 10, Object, null, 9);
                                  var inst_43184 = chs__$1.call(null, inst_43175);
                                  var inst_43185 = done.call(null, inst_43175);
                                  var inst_43186 = cljs.core.async.take_BANG_.call(null, inst_43184, inst_43185);
                                  var state_43211__$1 = state_43211;
                                  var statearr_43225_43252 = state_43211__$1;
                                  statearr_43225_43252[2] = inst_43186;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_43211__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_43212 === 9) {
                                    var inst_43175 = state_43211[7];
                                    var inst_43188 = state_43211[2];
                                    var inst_43189 = inst_43175 + 1;
                                    var inst_43175__$1 = inst_43189;
                                    var state_43211__$1 = function() {
                                      var statearr_43226 = state_43211;
                                      statearr_43226[10] = inst_43188;
                                      statearr_43226[7] = inst_43175__$1;
                                      return statearr_43226;
                                    }();
                                    var statearr_43227_43253 = state_43211__$1;
                                    statearr_43227_43253[2] = null;
                                    statearr_43227_43253[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_43212 === 5) {
                                      var inst_43195 = state_43211[2];
                                      var state_43211__$1 = function() {
                                        var statearr_43228 = state_43211;
                                        statearr_43228[11] = inst_43195;
                                        return statearr_43228;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_43211__$1, 12, dchan);
                                    } else {
                                      if (state_val_43212 === 14) {
                                        var inst_43197 = state_43211[8];
                                        var inst_43202 = cljs.core.apply.call(null, f, inst_43197);
                                        var state_43211__$1 = state_43211;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_43211__$1, 16, out, inst_43202);
                                      } else {
                                        if (state_val_43212 === 16) {
                                          var inst_43204 = state_43211[2];
                                          var state_43211__$1 = function() {
                                            var statearr_43229 = state_43211;
                                            statearr_43229[12] = inst_43204;
                                            return statearr_43229;
                                          }();
                                          var statearr_43230_43254 = state_43211__$1;
                                          statearr_43230_43254[2] = null;
                                          statearr_43230_43254[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_43212 === 10) {
                                            var inst_43179 = state_43211[2];
                                            var inst_43180 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_43211__$1 = function() {
                                              var statearr_43231 = state_43211;
                                              statearr_43231[13] = inst_43179;
                                              return statearr_43231;
                                            }();
                                            var statearr_43232_43255 = state_43211__$1;
                                            statearr_43232_43255[2] = inst_43180;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_43211__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_43212 === 8) {
                                              var inst_43193 = state_43211[2];
                                              var state_43211__$1 = state_43211;
                                              var statearr_43233_43256 = state_43211__$1;
                                              statearr_43233_43256[2] = inst_43193;
                                              statearr_43233_43256[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___43241, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__12682__auto__, c__12747__auto___43241, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_43237 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_43237[0] = state_machine__12683__auto__;
                statearr_43237[1] = 1;
                return statearr_43237;
              };
              var state_machine__12683__auto____1 = function(state_43211) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_43211);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e43238) {
                      if (e43238 instanceof Object) {
                        var ex__12686__auto__ = e43238;
                        var statearr_43239_43257 = state_43211;
                        statearr_43239_43257[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_43211);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e43238;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__43258 = state_43211;
                    state_43211 = G__43258;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_43211) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_43211);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___43241, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__12749__auto__ = function() {
          var statearr_43240 = f__12748__auto__.call(null);
          statearr_43240[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___43241;
          return statearr_43240;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___43241, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__12747__auto___43366 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___43366, out) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___43366, out) {
            return function(state_43342) {
              var state_val_43343 = state_43342[1];
              if (state_val_43343 === 7) {
                var inst_43322 = state_43342[7];
                var inst_43321 = state_43342[8];
                var inst_43321__$1 = state_43342[2];
                var inst_43322__$1 = cljs.core.nth.call(null, inst_43321__$1, 0, null);
                var inst_43323 = cljs.core.nth.call(null, inst_43321__$1, 1, null);
                var inst_43324 = inst_43322__$1 == null;
                var state_43342__$1 = function() {
                  var statearr_43344 = state_43342;
                  statearr_43344[7] = inst_43322__$1;
                  statearr_43344[9] = inst_43323;
                  statearr_43344[8] = inst_43321__$1;
                  return statearr_43344;
                }();
                if (cljs.core.truth_(inst_43324)) {
                  var statearr_43345_43367 = state_43342__$1;
                  statearr_43345_43367[1] = 8;
                } else {
                  var statearr_43346_43368 = state_43342__$1;
                  statearr_43346_43368[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_43343 === 1) {
                  var inst_43313 = cljs.core.vec.call(null, chs);
                  var inst_43314 = inst_43313;
                  var state_43342__$1 = function() {
                    var statearr_43347 = state_43342;
                    statearr_43347[10] = inst_43314;
                    return statearr_43347;
                  }();
                  var statearr_43348_43369 = state_43342__$1;
                  statearr_43348_43369[2] = null;
                  statearr_43348_43369[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_43343 === 4) {
                    var inst_43314 = state_43342[10];
                    var state_43342__$1 = state_43342;
                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_43342__$1, 7, inst_43314);
                  } else {
                    if (state_val_43343 === 6) {
                      var inst_43338 = state_43342[2];
                      var state_43342__$1 = state_43342;
                      var statearr_43349_43370 = state_43342__$1;
                      statearr_43349_43370[2] = inst_43338;
                      statearr_43349_43370[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_43343 === 3) {
                        var inst_43340 = state_43342[2];
                        var state_43342__$1 = state_43342;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_43342__$1, inst_43340);
                      } else {
                        if (state_val_43343 === 2) {
                          var inst_43314 = state_43342[10];
                          var inst_43316 = cljs.core.count.call(null, inst_43314);
                          var inst_43317 = inst_43316 > 0;
                          var state_43342__$1 = state_43342;
                          if (cljs.core.truth_(inst_43317)) {
                            var statearr_43351_43371 = state_43342__$1;
                            statearr_43351_43371[1] = 4;
                          } else {
                            var statearr_43352_43372 = state_43342__$1;
                            statearr_43352_43372[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_43343 === 11) {
                            var inst_43314 = state_43342[10];
                            var inst_43331 = state_43342[2];
                            var tmp43350 = inst_43314;
                            var inst_43314__$1 = tmp43350;
                            var state_43342__$1 = function() {
                              var statearr_43353 = state_43342;
                              statearr_43353[10] = inst_43314__$1;
                              statearr_43353[11] = inst_43331;
                              return statearr_43353;
                            }();
                            var statearr_43354_43373 = state_43342__$1;
                            statearr_43354_43373[2] = null;
                            statearr_43354_43373[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_43343 === 9) {
                              var inst_43322 = state_43342[7];
                              var state_43342__$1 = state_43342;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_43342__$1, 11, out, inst_43322);
                            } else {
                              if (state_val_43343 === 5) {
                                var inst_43336 = cljs.core.async.close_BANG_.call(null, out);
                                var state_43342__$1 = state_43342;
                                var statearr_43355_43374 = state_43342__$1;
                                statearr_43355_43374[2] = inst_43336;
                                statearr_43355_43374[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_43343 === 10) {
                                  var inst_43334 = state_43342[2];
                                  var state_43342__$1 = state_43342;
                                  var statearr_43356_43375 = state_43342__$1;
                                  statearr_43356_43375[2] = inst_43334;
                                  statearr_43356_43375[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_43343 === 8) {
                                    var inst_43322 = state_43342[7];
                                    var inst_43323 = state_43342[9];
                                    var inst_43314 = state_43342[10];
                                    var inst_43321 = state_43342[8];
                                    var inst_43326 = function() {
                                      var c = inst_43323;
                                      var v = inst_43322;
                                      var vec__43319 = inst_43321;
                                      var cs = inst_43314;
                                      return function(c, v, vec__43319, cs, inst_43322, inst_43323, inst_43314, inst_43321, state_val_43343, c__12747__auto___43366, out) {
                                        return function(p1__43259_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__43259_SHARP_);
                                        };
                                      }(c, v, vec__43319, cs, inst_43322, inst_43323, inst_43314, inst_43321, state_val_43343, c__12747__auto___43366, out);
                                    }();
                                    var inst_43327 = cljs.core.filterv.call(null, inst_43326, inst_43314);
                                    var inst_43314__$1 = inst_43327;
                                    var state_43342__$1 = function() {
                                      var statearr_43357 = state_43342;
                                      statearr_43357[10] = inst_43314__$1;
                                      return statearr_43357;
                                    }();
                                    var statearr_43358_43376 = state_43342__$1;
                                    statearr_43358_43376[2] = null;
                                    statearr_43358_43376[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___43366, out);
          return function(switch__12682__auto__, c__12747__auto___43366, out) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_43362 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_43362[0] = state_machine__12683__auto__;
                statearr_43362[1] = 1;
                return statearr_43362;
              };
              var state_machine__12683__auto____1 = function(state_43342) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_43342);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e43363) {
                      if (e43363 instanceof Object) {
                        var ex__12686__auto__ = e43363;
                        var statearr_43364_43377 = state_43342;
                        statearr_43364_43377[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_43342);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e43363;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__43378 = state_43342;
                    state_43342 = G__43378;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_43342) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_43342);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___43366, out);
        }();
        var state__12749__auto__ = function() {
          var statearr_43365 = f__12748__auto__.call(null);
          statearr_43365[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___43366;
          return statearr_43365;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___43366, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__12747__auto___43471 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___43471, out) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___43471, out) {
            return function(state_43448) {
              var state_val_43449 = state_43448[1];
              if (state_val_43449 === 7) {
                var inst_43430 = state_43448[7];
                var inst_43430__$1 = state_43448[2];
                var inst_43431 = inst_43430__$1 == null;
                var inst_43432 = cljs.core.not.call(null, inst_43431);
                var state_43448__$1 = function() {
                  var statearr_43450 = state_43448;
                  statearr_43450[7] = inst_43430__$1;
                  return statearr_43450;
                }();
                if (inst_43432) {
                  var statearr_43451_43472 = state_43448__$1;
                  statearr_43451_43472[1] = 8;
                } else {
                  var statearr_43452_43473 = state_43448__$1;
                  statearr_43452_43473[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_43449 === 1) {
                  var inst_43425 = 0;
                  var state_43448__$1 = function() {
                    var statearr_43453 = state_43448;
                    statearr_43453[8] = inst_43425;
                    return statearr_43453;
                  }();
                  var statearr_43454_43474 = state_43448__$1;
                  statearr_43454_43474[2] = null;
                  statearr_43454_43474[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_43449 === 4) {
                    var state_43448__$1 = state_43448;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_43448__$1, 7, ch);
                  } else {
                    if (state_val_43449 === 6) {
                      var inst_43443 = state_43448[2];
                      var state_43448__$1 = state_43448;
                      var statearr_43455_43475 = state_43448__$1;
                      statearr_43455_43475[2] = inst_43443;
                      statearr_43455_43475[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_43449 === 3) {
                        var inst_43445 = state_43448[2];
                        var inst_43446 = cljs.core.async.close_BANG_.call(null, out);
                        var state_43448__$1 = function() {
                          var statearr_43456 = state_43448;
                          statearr_43456[9] = inst_43445;
                          return statearr_43456;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_43448__$1, inst_43446);
                      } else {
                        if (state_val_43449 === 2) {
                          var inst_43425 = state_43448[8];
                          var inst_43427 = inst_43425 < n;
                          var state_43448__$1 = state_43448;
                          if (cljs.core.truth_(inst_43427)) {
                            var statearr_43457_43476 = state_43448__$1;
                            statearr_43457_43476[1] = 4;
                          } else {
                            var statearr_43458_43477 = state_43448__$1;
                            statearr_43458_43477[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_43449 === 11) {
                            var inst_43425 = state_43448[8];
                            var inst_43435 = state_43448[2];
                            var inst_43436 = inst_43425 + 1;
                            var inst_43425__$1 = inst_43436;
                            var state_43448__$1 = function() {
                              var statearr_43459 = state_43448;
                              statearr_43459[10] = inst_43435;
                              statearr_43459[8] = inst_43425__$1;
                              return statearr_43459;
                            }();
                            var statearr_43460_43478 = state_43448__$1;
                            statearr_43460_43478[2] = null;
                            statearr_43460_43478[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_43449 === 9) {
                              var state_43448__$1 = state_43448;
                              var statearr_43461_43479 = state_43448__$1;
                              statearr_43461_43479[2] = null;
                              statearr_43461_43479[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_43449 === 5) {
                                var state_43448__$1 = state_43448;
                                var statearr_43462_43480 = state_43448__$1;
                                statearr_43462_43480[2] = null;
                                statearr_43462_43480[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_43449 === 10) {
                                  var inst_43440 = state_43448[2];
                                  var state_43448__$1 = state_43448;
                                  var statearr_43463_43481 = state_43448__$1;
                                  statearr_43463_43481[2] = inst_43440;
                                  statearr_43463_43481[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_43449 === 8) {
                                    var inst_43430 = state_43448[7];
                                    var state_43448__$1 = state_43448;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_43448__$1, 11, out, inst_43430);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___43471, out);
          return function(switch__12682__auto__, c__12747__auto___43471, out) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_43467 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_43467[0] = state_machine__12683__auto__;
                statearr_43467[1] = 1;
                return statearr_43467;
              };
              var state_machine__12683__auto____1 = function(state_43448) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_43448);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e43468) {
                      if (e43468 instanceof Object) {
                        var ex__12686__auto__ = e43468;
                        var statearr_43469_43482 = state_43448;
                        statearr_43469_43482[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_43448);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e43468;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__43483 = state_43448;
                    state_43448 = G__43483;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_43448) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_43448);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___43471, out);
        }();
        var state__12749__auto__ = function() {
          var statearr_43470 = f__12748__auto__.call(null);
          statearr_43470[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___43471;
          return statearr_43470;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___43471, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__12747__auto___43580 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___43580, out) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___43580, out) {
            return function(state_43555) {
              var state_val_43556 = state_43555[1];
              if (state_val_43556 === 7) {
                var inst_43550 = state_43555[2];
                var state_43555__$1 = state_43555;
                var statearr_43557_43581 = state_43555__$1;
                statearr_43557_43581[2] = inst_43550;
                statearr_43557_43581[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_43556 === 1) {
                  var inst_43532 = null;
                  var state_43555__$1 = function() {
                    var statearr_43558 = state_43555;
                    statearr_43558[7] = inst_43532;
                    return statearr_43558;
                  }();
                  var statearr_43559_43582 = state_43555__$1;
                  statearr_43559_43582[2] = null;
                  statearr_43559_43582[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_43556 === 4) {
                    var inst_43535 = state_43555[8];
                    var inst_43535__$1 = state_43555[2];
                    var inst_43536 = inst_43535__$1 == null;
                    var inst_43537 = cljs.core.not.call(null, inst_43536);
                    var state_43555__$1 = function() {
                      var statearr_43560 = state_43555;
                      statearr_43560[8] = inst_43535__$1;
                      return statearr_43560;
                    }();
                    if (inst_43537) {
                      var statearr_43561_43583 = state_43555__$1;
                      statearr_43561_43583[1] = 5;
                    } else {
                      var statearr_43562_43584 = state_43555__$1;
                      statearr_43562_43584[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_43556 === 6) {
                      var state_43555__$1 = state_43555;
                      var statearr_43563_43585 = state_43555__$1;
                      statearr_43563_43585[2] = null;
                      statearr_43563_43585[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_43556 === 3) {
                        var inst_43552 = state_43555[2];
                        var inst_43553 = cljs.core.async.close_BANG_.call(null, out);
                        var state_43555__$1 = function() {
                          var statearr_43564 = state_43555;
                          statearr_43564[9] = inst_43552;
                          return statearr_43564;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_43555__$1, inst_43553);
                      } else {
                        if (state_val_43556 === 2) {
                          var state_43555__$1 = state_43555;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_43555__$1, 4, ch);
                        } else {
                          if (state_val_43556 === 11) {
                            var inst_43535 = state_43555[8];
                            var inst_43544 = state_43555[2];
                            var inst_43532 = inst_43535;
                            var state_43555__$1 = function() {
                              var statearr_43565 = state_43555;
                              statearr_43565[7] = inst_43532;
                              statearr_43565[10] = inst_43544;
                              return statearr_43565;
                            }();
                            var statearr_43566_43586 = state_43555__$1;
                            statearr_43566_43586[2] = null;
                            statearr_43566_43586[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_43556 === 9) {
                              var inst_43535 = state_43555[8];
                              var state_43555__$1 = state_43555;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_43555__$1, 11, out, inst_43535);
                            } else {
                              if (state_val_43556 === 5) {
                                var inst_43532 = state_43555[7];
                                var inst_43535 = state_43555[8];
                                var inst_43539 = cljs.core._EQ_.call(null, inst_43535, inst_43532);
                                var state_43555__$1 = state_43555;
                                if (inst_43539) {
                                  var statearr_43568_43587 = state_43555__$1;
                                  statearr_43568_43587[1] = 8;
                                } else {
                                  var statearr_43569_43588 = state_43555__$1;
                                  statearr_43569_43588[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_43556 === 10) {
                                  var inst_43547 = state_43555[2];
                                  var state_43555__$1 = state_43555;
                                  var statearr_43570_43589 = state_43555__$1;
                                  statearr_43570_43589[2] = inst_43547;
                                  statearr_43570_43589[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_43556 === 8) {
                                    var inst_43532 = state_43555[7];
                                    var tmp43567 = inst_43532;
                                    var inst_43532__$1 = tmp43567;
                                    var state_43555__$1 = function() {
                                      var statearr_43571 = state_43555;
                                      statearr_43571[7] = inst_43532__$1;
                                      return statearr_43571;
                                    }();
                                    var statearr_43572_43590 = state_43555__$1;
                                    statearr_43572_43590[2] = null;
                                    statearr_43572_43590[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___43580, out);
          return function(switch__12682__auto__, c__12747__auto___43580, out) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_43576 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_43576[0] = state_machine__12683__auto__;
                statearr_43576[1] = 1;
                return statearr_43576;
              };
              var state_machine__12683__auto____1 = function(state_43555) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_43555);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e43577) {
                      if (e43577 instanceof Object) {
                        var ex__12686__auto__ = e43577;
                        var statearr_43578_43591 = state_43555;
                        statearr_43578_43591[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_43555);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e43577;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__43592 = state_43555;
                    state_43555 = G__43592;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_43555) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_43555);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___43580, out);
        }();
        var state__12749__auto__ = function() {
          var statearr_43579 = f__12748__auto__.call(null);
          statearr_43579[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___43580;
          return statearr_43579;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___43580, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__12747__auto___43727 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___43727, out) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___43727, out) {
            return function(state_43697) {
              var state_val_43698 = state_43697[1];
              if (state_val_43698 === 7) {
                var inst_43693 = state_43697[2];
                var state_43697__$1 = state_43697;
                var statearr_43699_43728 = state_43697__$1;
                statearr_43699_43728[2] = inst_43693;
                statearr_43699_43728[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_43698 === 1) {
                  var inst_43660 = new Array(n);
                  var inst_43661 = inst_43660;
                  var inst_43662 = 0;
                  var state_43697__$1 = function() {
                    var statearr_43700 = state_43697;
                    statearr_43700[7] = inst_43661;
                    statearr_43700[8] = inst_43662;
                    return statearr_43700;
                  }();
                  var statearr_43701_43729 = state_43697__$1;
                  statearr_43701_43729[2] = null;
                  statearr_43701_43729[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_43698 === 4) {
                    var inst_43665 = state_43697[9];
                    var inst_43665__$1 = state_43697[2];
                    var inst_43666 = inst_43665__$1 == null;
                    var inst_43667 = cljs.core.not.call(null, inst_43666);
                    var state_43697__$1 = function() {
                      var statearr_43702 = state_43697;
                      statearr_43702[9] = inst_43665__$1;
                      return statearr_43702;
                    }();
                    if (inst_43667) {
                      var statearr_43703_43730 = state_43697__$1;
                      statearr_43703_43730[1] = 5;
                    } else {
                      var statearr_43704_43731 = state_43697__$1;
                      statearr_43704_43731[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_43698 === 15) {
                      var inst_43687 = state_43697[2];
                      var state_43697__$1 = state_43697;
                      var statearr_43705_43732 = state_43697__$1;
                      statearr_43705_43732[2] = inst_43687;
                      statearr_43705_43732[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_43698 === 13) {
                        var state_43697__$1 = state_43697;
                        var statearr_43706_43733 = state_43697__$1;
                        statearr_43706_43733[2] = null;
                        statearr_43706_43733[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_43698 === 6) {
                          var inst_43662 = state_43697[8];
                          var inst_43683 = inst_43662 > 0;
                          var state_43697__$1 = state_43697;
                          if (cljs.core.truth_(inst_43683)) {
                            var statearr_43707_43734 = state_43697__$1;
                            statearr_43707_43734[1] = 12;
                          } else {
                            var statearr_43708_43735 = state_43697__$1;
                            statearr_43708_43735[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_43698 === 3) {
                            var inst_43695 = state_43697[2];
                            var state_43697__$1 = state_43697;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_43697__$1, inst_43695);
                          } else {
                            if (state_val_43698 === 12) {
                              var inst_43661 = state_43697[7];
                              var inst_43685 = cljs.core.vec.call(null, inst_43661);
                              var state_43697__$1 = state_43697;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_43697__$1, 15, out, inst_43685);
                            } else {
                              if (state_val_43698 === 2) {
                                var state_43697__$1 = state_43697;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_43697__$1, 4, ch);
                              } else {
                                if (state_val_43698 === 11) {
                                  var inst_43677 = state_43697[2];
                                  var inst_43678 = new Array(n);
                                  var inst_43661 = inst_43678;
                                  var inst_43662 = 0;
                                  var state_43697__$1 = function() {
                                    var statearr_43709 = state_43697;
                                    statearr_43709[10] = inst_43677;
                                    statearr_43709[7] = inst_43661;
                                    statearr_43709[8] = inst_43662;
                                    return statearr_43709;
                                  }();
                                  var statearr_43710_43736 = state_43697__$1;
                                  statearr_43710_43736[2] = null;
                                  statearr_43710_43736[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_43698 === 9) {
                                    var inst_43661 = state_43697[7];
                                    var inst_43675 = cljs.core.vec.call(null, inst_43661);
                                    var state_43697__$1 = state_43697;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_43697__$1, 11, out, inst_43675);
                                  } else {
                                    if (state_val_43698 === 5) {
                                      var inst_43670 = state_43697[11];
                                      var inst_43665 = state_43697[9];
                                      var inst_43661 = state_43697[7];
                                      var inst_43662 = state_43697[8];
                                      var inst_43669 = inst_43661[inst_43662] = inst_43665;
                                      var inst_43670__$1 = inst_43662 + 1;
                                      var inst_43671 = inst_43670__$1 < n;
                                      var state_43697__$1 = function() {
                                        var statearr_43711 = state_43697;
                                        statearr_43711[11] = inst_43670__$1;
                                        statearr_43711[12] = inst_43669;
                                        return statearr_43711;
                                      }();
                                      if (cljs.core.truth_(inst_43671)) {
                                        var statearr_43712_43737 = state_43697__$1;
                                        statearr_43712_43737[1] = 8;
                                      } else {
                                        var statearr_43713_43738 = state_43697__$1;
                                        statearr_43713_43738[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_43698 === 14) {
                                        var inst_43690 = state_43697[2];
                                        var inst_43691 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_43697__$1 = function() {
                                          var statearr_43715 = state_43697;
                                          statearr_43715[13] = inst_43690;
                                          return statearr_43715;
                                        }();
                                        var statearr_43716_43739 = state_43697__$1;
                                        statearr_43716_43739[2] = inst_43691;
                                        statearr_43716_43739[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_43698 === 10) {
                                          var inst_43681 = state_43697[2];
                                          var state_43697__$1 = state_43697;
                                          var statearr_43717_43740 = state_43697__$1;
                                          statearr_43717_43740[2] = inst_43681;
                                          statearr_43717_43740[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_43698 === 8) {
                                            var inst_43670 = state_43697[11];
                                            var inst_43661 = state_43697[7];
                                            var tmp43714 = inst_43661;
                                            var inst_43661__$1 = tmp43714;
                                            var inst_43662 = inst_43670;
                                            var state_43697__$1 = function() {
                                              var statearr_43718 = state_43697;
                                              statearr_43718[7] = inst_43661__$1;
                                              statearr_43718[8] = inst_43662;
                                              return statearr_43718;
                                            }();
                                            var statearr_43719_43741 = state_43697__$1;
                                            statearr_43719_43741[2] = null;
                                            statearr_43719_43741[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___43727, out);
          return function(switch__12682__auto__, c__12747__auto___43727, out) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_43723 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_43723[0] = state_machine__12683__auto__;
                statearr_43723[1] = 1;
                return statearr_43723;
              };
              var state_machine__12683__auto____1 = function(state_43697) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_43697);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e43724) {
                      if (e43724 instanceof Object) {
                        var ex__12686__auto__ = e43724;
                        var statearr_43725_43742 = state_43697;
                        statearr_43725_43742[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_43697);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e43724;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__43743 = state_43697;
                    state_43697 = G__43743;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_43697) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_43697);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___43727, out);
        }();
        var state__12749__auto__ = function() {
          var statearr_43726 = f__12748__auto__.call(null);
          statearr_43726[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___43727;
          return statearr_43726;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___43727, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__12747__auto___43886 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___43886, out) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___43886, out) {
            return function(state_43856) {
              var state_val_43857 = state_43856[1];
              if (state_val_43857 === 7) {
                var inst_43852 = state_43856[2];
                var state_43856__$1 = state_43856;
                var statearr_43858_43887 = state_43856__$1;
                statearr_43858_43887[2] = inst_43852;
                statearr_43858_43887[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_43857 === 1) {
                  var inst_43815 = [];
                  var inst_43816 = inst_43815;
                  var inst_43817 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_43856__$1 = function() {
                    var statearr_43859 = state_43856;
                    statearr_43859[7] = inst_43817;
                    statearr_43859[8] = inst_43816;
                    return statearr_43859;
                  }();
                  var statearr_43860_43888 = state_43856__$1;
                  statearr_43860_43888[2] = null;
                  statearr_43860_43888[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_43857 === 4) {
                    var inst_43820 = state_43856[9];
                    var inst_43820__$1 = state_43856[2];
                    var inst_43821 = inst_43820__$1 == null;
                    var inst_43822 = cljs.core.not.call(null, inst_43821);
                    var state_43856__$1 = function() {
                      var statearr_43861 = state_43856;
                      statearr_43861[9] = inst_43820__$1;
                      return statearr_43861;
                    }();
                    if (inst_43822) {
                      var statearr_43862_43889 = state_43856__$1;
                      statearr_43862_43889[1] = 5;
                    } else {
                      var statearr_43863_43890 = state_43856__$1;
                      statearr_43863_43890[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_43857 === 15) {
                      var inst_43846 = state_43856[2];
                      var state_43856__$1 = state_43856;
                      var statearr_43864_43891 = state_43856__$1;
                      statearr_43864_43891[2] = inst_43846;
                      statearr_43864_43891[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_43857 === 13) {
                        var state_43856__$1 = state_43856;
                        var statearr_43865_43892 = state_43856__$1;
                        statearr_43865_43892[2] = null;
                        statearr_43865_43892[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_43857 === 6) {
                          var inst_43816 = state_43856[8];
                          var inst_43841 = inst_43816.length;
                          var inst_43842 = inst_43841 > 0;
                          var state_43856__$1 = state_43856;
                          if (cljs.core.truth_(inst_43842)) {
                            var statearr_43866_43893 = state_43856__$1;
                            statearr_43866_43893[1] = 12;
                          } else {
                            var statearr_43867_43894 = state_43856__$1;
                            statearr_43867_43894[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_43857 === 3) {
                            var inst_43854 = state_43856[2];
                            var state_43856__$1 = state_43856;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_43856__$1, inst_43854);
                          } else {
                            if (state_val_43857 === 12) {
                              var inst_43816 = state_43856[8];
                              var inst_43844 = cljs.core.vec.call(null, inst_43816);
                              var state_43856__$1 = state_43856;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_43856__$1, 15, out, inst_43844);
                            } else {
                              if (state_val_43857 === 2) {
                                var state_43856__$1 = state_43856;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_43856__$1, 4, ch);
                              } else {
                                if (state_val_43857 === 11) {
                                  var inst_43824 = state_43856[10];
                                  var inst_43820 = state_43856[9];
                                  var inst_43834 = state_43856[2];
                                  var inst_43835 = [];
                                  var inst_43836 = inst_43835.push(inst_43820);
                                  var inst_43816 = inst_43835;
                                  var inst_43817 = inst_43824;
                                  var state_43856__$1 = function() {
                                    var statearr_43868 = state_43856;
                                    statearr_43868[7] = inst_43817;
                                    statearr_43868[11] = inst_43836;
                                    statearr_43868[8] = inst_43816;
                                    statearr_43868[12] = inst_43834;
                                    return statearr_43868;
                                  }();
                                  var statearr_43869_43895 = state_43856__$1;
                                  statearr_43869_43895[2] = null;
                                  statearr_43869_43895[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_43857 === 9) {
                                    var inst_43816 = state_43856[8];
                                    var inst_43832 = cljs.core.vec.call(null, inst_43816);
                                    var state_43856__$1 = state_43856;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_43856__$1, 11, out, inst_43832);
                                  } else {
                                    if (state_val_43857 === 5) {
                                      var inst_43817 = state_43856[7];
                                      var inst_43824 = state_43856[10];
                                      var inst_43820 = state_43856[9];
                                      var inst_43824__$1 = f.call(null, inst_43820);
                                      var inst_43825 = cljs.core._EQ_.call(null, inst_43824__$1, inst_43817);
                                      var inst_43826 = cljs.core.keyword_identical_QMARK_.call(null, inst_43817, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_43827 = inst_43825 || inst_43826;
                                      var state_43856__$1 = function() {
                                        var statearr_43870 = state_43856;
                                        statearr_43870[10] = inst_43824__$1;
                                        return statearr_43870;
                                      }();
                                      if (cljs.core.truth_(inst_43827)) {
                                        var statearr_43871_43896 = state_43856__$1;
                                        statearr_43871_43896[1] = 8;
                                      } else {
                                        var statearr_43872_43897 = state_43856__$1;
                                        statearr_43872_43897[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_43857 === 14) {
                                        var inst_43849 = state_43856[2];
                                        var inst_43850 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_43856__$1 = function() {
                                          var statearr_43874 = state_43856;
                                          statearr_43874[13] = inst_43849;
                                          return statearr_43874;
                                        }();
                                        var statearr_43875_43898 = state_43856__$1;
                                        statearr_43875_43898[2] = inst_43850;
                                        statearr_43875_43898[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_43857 === 10) {
                                          var inst_43839 = state_43856[2];
                                          var state_43856__$1 = state_43856;
                                          var statearr_43876_43899 = state_43856__$1;
                                          statearr_43876_43899[2] = inst_43839;
                                          statearr_43876_43899[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_43857 === 8) {
                                            var inst_43824 = state_43856[10];
                                            var inst_43820 = state_43856[9];
                                            var inst_43816 = state_43856[8];
                                            var inst_43829 = inst_43816.push(inst_43820);
                                            var tmp43873 = inst_43816;
                                            var inst_43816__$1 = tmp43873;
                                            var inst_43817 = inst_43824;
                                            var state_43856__$1 = function() {
                                              var statearr_43877 = state_43856;
                                              statearr_43877[14] = inst_43829;
                                              statearr_43877[7] = inst_43817;
                                              statearr_43877[8] = inst_43816__$1;
                                              return statearr_43877;
                                            }();
                                            var statearr_43878_43900 = state_43856__$1;
                                            statearr_43878_43900[2] = null;
                                            statearr_43878_43900[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___43886, out);
          return function(switch__12682__auto__, c__12747__auto___43886, out) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_43882 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_43882[0] = state_machine__12683__auto__;
                statearr_43882[1] = 1;
                return statearr_43882;
              };
              var state_machine__12683__auto____1 = function(state_43856) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_43856);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e43883) {
                      if (e43883 instanceof Object) {
                        var ex__12686__auto__ = e43883;
                        var statearr_43884_43901 = state_43856;
                        statearr_43884_43901[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_43856);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e43883;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__43902 = state_43856;
                    state_43856 = G__43902;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_43856) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_43856);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___43886, out);
        }();
        var state__12749__auto__ = function() {
          var statearr_43885 = f__12748__auto__.call(null);
          statearr_43885[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___43886;
          return statearr_43885;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___43886, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("t3tr0s_slides.slide14");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
goog.require("cljs.core.async");
t3tr0s_slides.slide14.dark_green = "#143";
t3tr0s_slides.slide14.light_green = "#175";
t3tr0s_slides.slide14.dark_purple = "#449";
t3tr0s_slides.slide14.light_purple = "#6ad";
t3tr0s_slides.slide14.dark_red = "#944";
t3tr0s_slides.slide14.light_red = "#f8c";
t3tr0s_slides.slide14.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide14.rotate_coord = function rotate_coord(p__47352) {
  var vec__47354 = p__47352;
  var x = cljs.core.nth.call(null, vec__47354, 0, null);
  var y = cljs.core.nth.call(null, vec__47354, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide14.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide14.rotate_coord, piece);
};
t3tr0s_slides.slide14.nrows = 20;
t3tr0s_slides.slide14.ncols = 10;
t3tr0s_slides.slide14.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide14.ncols, 0));
t3tr0s_slides.slide14.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide14.nrows, t3tr0s_slides.slide14.empty_row));
t3tr0s_slides.slide14.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 1, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 1, 1, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 1, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 1, 1, 1], null)], null);
t3tr0s_slides.slide14.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [5, 2], null);
t3tr0s_slides.slide14.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide14.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), t3tr0s_slides.slide14.rotate_piece.call(null, (new cljs.core.Keyword(null, "I", "I", 1827140963)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide14.pieces)), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide14.initial_pos], 
null));
t3tr0s_slides.slide14.write_piece = function write_piece(board, coords, p__47355, value) {
  while (true) {
    var vec__47359 = p__47355;
    var cx = cljs.core.nth.call(null, vec__47359, 0, null);
    var cy = cljs.core.nth.call(null, vec__47359, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__47360 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__47360, 0, null);
      var y = cljs.core.nth.call(null, vec__47360, 1, null);
      var G__47362 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), value);
        } catch (e47361) {
          if (e47361 instanceof Error) {
            var _ = e47361;
            return board;
          } else {
            throw e47361;
          }
        }
      }();
      var G__47363 = cljs.core.rest.call(null, coords);
      var G__47364 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      var G__47365 = value;
      board = G__47362;
      coords = G__47363;
      p__47355 = G__47364;
      value = G__47365;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide14.create_drawable_board = function create_drawable_board(board, piece, p__47366) {
  var vec__47368 = p__47366;
  var x = cljs.core.nth.call(null, vec__47368, 0, null);
  var y = cljs.core.nth.call(null, vec__47368, 1, null);
  var gy = t3tr0s_slides.slide14.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  var board1 = t3tr0s_slides.slide14.write_piece.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, gy], null), "G");
  var board2 = t3tr0s_slides.slide14.write_piece.call(null, board1, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null), "P");
  return board2;
};
t3tr0s_slides.slide14.app_drawable_board_BANG_ = function app_drawable_board_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  return t3tr0s_slides.slide14.create_drawable_board.call(null, board, piece, pos);
};
t3tr0s_slides.slide14.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__47370 = cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state);
  var map__47370__$1 = cljs.core.seq_QMARK_.call(null, map__47370) ? cljs.core.apply.call(null, cljs.core.hash_map, map__47370) : map__47370;
  var position = cljs.core.get.call(null, map__47370__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__47370__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide14.write_piece, piece, position, 1);
};
t3tr0s_slides.slide14.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__47371) {
  var vec__47375 = p__47371;
  var cx = cljs.core.nth.call(null, vec__47375, 0, null);
  var cy = cljs.core.nth.call(null, vec__47375, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__47375, cx, cy) {
    return function(p__47376) {
      var vec__47377 = p__47376;
      var x = cljs.core.nth.call(null, vec__47377, 0, null);
      var y = cljs.core.nth.call(null, vec__47377, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__47375, cx, cy), piece);
};
t3tr0s_slides.slide14.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide14.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide14.app_state))));
};
t3tr0s_slides.slide14.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  if (cljs.core.truth_(temp__4126__auto__)) {
    var piece = temp__4126__auto__;
    var vec__47379 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var x = cljs.core.nth.call(null, vec__47379, 0, null);
    var y = cljs.core.nth.call(null, vec__47379, 1, null);
    var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
    if (t3tr0s_slides.slide14.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
      return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.try_rotate_BANG_ = function try_rotate_BANG_() {
  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  if (cljs.core.truth_(temp__4126__auto__)) {
    var piece = temp__4126__auto__;
    var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var new_piece = t3tr0s_slides.slide14.rotate_piece.call(null, piece);
    if (t3tr0s_slides.slide14.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
      return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.get_drop_pos = function get_drop_pos(board, piece, p__47380) {
  var vec__47382 = p__47380;
  var x = cljs.core.nth.call(null, vec__47382, 0, null);
  var y = cljs.core.nth.call(null, vec__47382, 1, null);
  var collide_QMARK_ = function(vec__47382, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide14.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__47382, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide14.filled_rows = function filled_rows(board) {
  return cljs.core.apply.call(null, cljs.core.hash_set, cljs.core.map.call(null, cljs.core.first, cljs.core.filter.call(null, function(p__47385) {
    var vec__47386 = p__47385;
    var i = cljs.core.nth.call(null, vec__47386, 0, null);
    var row = cljs.core.nth.call(null, vec__47386, 1, null);
    return cljs.core.every_QMARK_.call(null, cljs.core.pos_QMARK_, row);
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board))));
};
t3tr0s_slides.slide14.collapse_rows = function collapse_rows(board, rows) {
  var cleared_board = cljs.core.map.call(null, cljs.core.second, cljs.core.remove.call(null, function(p1__47387_SHARP_) {
    return rows.call(null, cljs.core.first.call(null, p1__47387_SHARP_));
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board)));
  var n = cljs.core.count.call(null, rows);
  var new_board = cljs.core.into.call(null, cljs.core.vec.call(null, cljs.core.repeat.call(null, n, t3tr0s_slides.slide14.empty_row)), cleared_board);
  return new_board;
};
t3tr0s_slides.slide14.clear_rows = function clear_rows(board, rows) {
  return cljs.core.vec.call(null, cljs.core.map_indexed.call(null, function(i, row) {
    if (cljs.core.truth_(rows.call(null, i))) {
      return t3tr0s_slides.slide14.empty_row;
    } else {
      return row;
    }
  }, board));
};
t3tr0s_slides.slide14.prev_filled = cljs.core.atom.call(null, null);
t3tr0s_slides.slide14.prev_cleared = cljs.core.atom.call(null, null);
t3tr0s_slides.slide14.prev_collapsed = cljs.core.atom.call(null, null);
t3tr0s_slides.slide14.anim_index = cljs.core.atom.call(null, null);
t3tr0s_slides.slide14.on_change_anim_index = function on_change_anim_index(_, ___$1, ___$2, i) {
  if (cljs.core.truth_(i)) {
    return cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.get.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_cleared), cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_filled), cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_cleared), cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_collapsed)], null), i));
  } else {
    return null;
  }
};
cljs.core.add_watch.call(null, t3tr0s_slides.slide14.anim_index, new cljs.core.Keyword(null, "history", "history", -247395220), t3tr0s_slides.slide14.on_change_anim_index);
t3tr0s_slides.slide14.go_go_collapse_BANG_ = function go_go_collapse_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  var rows = t3tr0s_slides.slide14.filled_rows.call(null, board);
  var cleared = t3tr0s_slides.slide14.clear_rows.call(null, board, rows);
  var collapsed = t3tr0s_slides.slide14.collapse_rows.call(null, board, rows);
  cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.prev_filled, cljs.core.assoc.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state), new cljs.core.Keyword(null, "board", "board", -1907017633), board));
  cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.prev_cleared, cljs.core.assoc.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state), new cljs.core.Keyword(null, "board", "board", -1907017633), cleared));
  cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.prev_collapsed, cljs.core.assoc.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state), new cljs.core.Keyword(null, "board", "board", -1907017633), collapsed));
  var c__12747__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto__, board, rows, cleared, collapsed) {
    return function() {
      var f__12748__auto__ = function() {
        var switch__12682__auto__ = function(c__12747__auto__, board, rows, cleared, collapsed) {
          return function(state_47468) {
            var state_val_47469 = state_47468[1];
            if (state_val_47469 === 7) {
              var inst_47446 = state_47468[2];
              var inst_47447 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, 1);
              var inst_47448 = cljs.core.async.timeout.call(null, 170);
              var state_47468__$1 = function() {
                var statearr_47470 = state_47468;
                statearr_47470[7] = inst_47446;
                statearr_47470[8] = inst_47447;
                return statearr_47470;
              }();
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_47468__$1, 8, inst_47448);
            } else {
              if (state_val_47469 === 1) {
                var inst_47439 = 0;
                var state_47468__$1 = function() {
                  var statearr_47471 = state_47468;
                  statearr_47471[9] = inst_47439;
                  return statearr_47471;
                }();
                var statearr_47472_47490 = state_47468__$1;
                statearr_47472_47490[2] = null;
                statearr_47472_47490[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_47469 === 4) {
                  var inst_47443 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, 0);
                  var inst_47444 = cljs.core.async.timeout.call(null, 170);
                  var state_47468__$1 = function() {
                    var statearr_47473 = state_47468;
                    statearr_47473[10] = inst_47443;
                    return statearr_47473;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_47468__$1, 7, inst_47444);
                } else {
                  if (state_val_47469 === 6) {
                    var inst_47455 = state_47468[2];
                    var state_47468__$1 = state_47468;
                    var statearr_47474_47491 = state_47468__$1;
                    statearr_47474_47491[2] = inst_47455;
                    statearr_47474_47491[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_47469 === 3) {
                      var inst_47457 = state_47468[2];
                      var inst_47458 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, 2);
                      var inst_47459 = cljs.core.async.timeout.call(null, 220);
                      var state_47468__$1 = function() {
                        var statearr_47475 = state_47468;
                        statearr_47475[11] = inst_47458;
                        statearr_47475[12] = inst_47457;
                        return statearr_47475;
                      }();
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_47468__$1, 9, inst_47459);
                    } else {
                      if (state_val_47469 === 2) {
                        var inst_47439 = state_47468[9];
                        var inst_47441 = inst_47439 < 3;
                        var state_47468__$1 = state_47468;
                        if (cljs.core.truth_(inst_47441)) {
                          var statearr_47476_47492 = state_47468__$1;
                          statearr_47476_47492[1] = 4;
                        } else {
                          var statearr_47477_47493 = state_47468__$1;
                          statearr_47477_47493[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_47469 === 9) {
                          var inst_47461 = state_47468[2];
                          var inst_47462 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, 3);
                          var inst_47463 = cljs.core.async.timeout.call(null, 170);
                          var state_47468__$1 = function() {
                            var statearr_47478 = state_47468;
                            statearr_47478[13] = inst_47462;
                            statearr_47478[14] = inst_47461;
                            return statearr_47478;
                          }();
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_47468__$1, 10, inst_47463);
                        } else {
                          if (state_val_47469 === 5) {
                            var state_47468__$1 = state_47468;
                            var statearr_47479_47494 = state_47468__$1;
                            statearr_47479_47494[2] = null;
                            statearr_47479_47494[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_47469 === 10) {
                              var inst_47465 = state_47468[2];
                              var inst_47466 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, null);
                              var state_47468__$1 = function() {
                                var statearr_47480 = state_47468;
                                statearr_47480[15] = inst_47465;
                                return statearr_47480;
                              }();
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_47468__$1, inst_47466);
                            } else {
                              if (state_val_47469 === 8) {
                                var inst_47439 = state_47468[9];
                                var inst_47450 = state_47468[2];
                                var inst_47451 = inst_47439 + 1;
                                var inst_47439__$1 = inst_47451;
                                var state_47468__$1 = function() {
                                  var statearr_47481 = state_47468;
                                  statearr_47481[16] = inst_47450;
                                  statearr_47481[9] = inst_47439__$1;
                                  return statearr_47481;
                                }();
                                var statearr_47482_47495 = state_47468__$1;
                                statearr_47482_47495[2] = null;
                                statearr_47482_47495[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12747__auto__, board, rows, cleared, collapsed);
        return function(switch__12682__auto__, c__12747__auto__, board, rows, cleared, collapsed) {
          return function() {
            var state_machine__12683__auto__ = null;
            var state_machine__12683__auto____0 = function() {
              var statearr_47486 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_47486[0] = state_machine__12683__auto__;
              statearr_47486[1] = 1;
              return statearr_47486;
            };
            var state_machine__12683__auto____1 = function(state_47468) {
              while (true) {
                var ret_value__12684__auto__ = function() {
                  try {
                    while (true) {
                      var result__12685__auto__ = switch__12682__auto__.call(null, state_47468);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12685__auto__;
                      }
                      break;
                    }
                  } catch (e47487) {
                    if (e47487 instanceof Object) {
                      var ex__12686__auto__ = e47487;
                      var statearr_47488_47496 = state_47468;
                      statearr_47488_47496[5] = ex__12686__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_47468);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e47487;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__47497 = state_47468;
                  state_47468 = G__47497;
                  continue;
                } else {
                  return ret_value__12684__auto__;
                }
                break;
              }
            };
            state_machine__12683__auto__ = function(state_47468) {
              switch(arguments.length) {
                case 0:
                  return state_machine__12683__auto____0.call(this);
                case 1:
                  return state_machine__12683__auto____1.call(this, state_47468);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
            return state_machine__12683__auto__;
          }();
        }(switch__12682__auto__, c__12747__auto__, board, rows, cleared, collapsed);
      }();
      var state__12749__auto__ = function() {
        var statearr_47489 = f__12748__auto__.call(null);
        statearr_47489[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto__;
        return statearr_47489;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
    };
  }(c__12747__auto__, board, rows, cleared, collapsed));
  return c__12747__auto__;
};
t3tr0s_slides.slide14.spawn_piece_BANG_ = function spawn_piece_BANG_() {
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide14.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide14.pieces)));
};
t3tr0s_slides.slide14.hard_drop_BANG_ = function hard_drop_BANG_() {
  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  if (cljs.core.truth_(temp__4126__auto__)) {
    var piece = temp__4126__auto__;
    var vec__47514 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var x = cljs.core.nth.call(null, vec__47514, 0, null);
    var y = cljs.core.nth.call(null, vec__47514, 1, null);
    var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var ny = t3tr0s_slides.slide14.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
    cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
    t3tr0s_slides.slide14.lock_piece_BANG_.call(null);
    var board__$1 = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var rows = t3tr0s_slides.slide14.filled_rows.call(null, board__$1);
    if (cljs.core.empty_QMARK_.call(null, rows)) {
      return t3tr0s_slides.slide14.spawn_piece_BANG_.call(null);
    } else {
      cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "position", "position", -2011731912), null);
      var c__12747__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto__, board__$1, rows, vec__47514, x, y, board, ny, piece, temp__4126__auto__) {
        return function() {
          var f__12748__auto__ = function() {
            var switch__12682__auto__ = function(c__12747__auto__, board__$1, rows, vec__47514, x, y, board, ny, piece, temp__4126__auto__) {
              return function(state_47520) {
                var state_val_47521 = state_47520[1];
                if (state_val_47521 === 2) {
                  var inst_47517 = state_47520[2];
                  var inst_47518 = t3tr0s_slides.slide14.spawn_piece_BANG_.call(null);
                  var state_47520__$1 = function() {
                    var statearr_47522 = state_47520;
                    statearr_47522[7] = inst_47517;
                    return statearr_47522;
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_47520__$1, inst_47518);
                } else {
                  if (state_val_47521 === 1) {
                    var inst_47515 = t3tr0s_slides.slide14.go_go_collapse_BANG_.call(null);
                    var state_47520__$1 = state_47520;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_47520__$1, 2, inst_47515);
                  } else {
                    return null;
                  }
                }
              };
            }(c__12747__auto__, board__$1, rows, vec__47514, x, y, board, ny, piece, temp__4126__auto__);
            return function(switch__12682__auto__, c__12747__auto__, board__$1, rows, vec__47514, x, y, board, ny, piece, temp__4126__auto__) {
              return function() {
                var state_machine__12683__auto__ = null;
                var state_machine__12683__auto____0 = function() {
                  var statearr_47526 = [null, null, null, null, null, null, null, null];
                  statearr_47526[0] = state_machine__12683__auto__;
                  statearr_47526[1] = 1;
                  return statearr_47526;
                };
                var state_machine__12683__auto____1 = function(state_47520) {
                  while (true) {
                    var ret_value__12684__auto__ = function() {
                      try {
                        while (true) {
                          var result__12685__auto__ = switch__12682__auto__.call(null, state_47520);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__12685__auto__;
                          }
                          break;
                        }
                      } catch (e47527) {
                        if (e47527 instanceof Object) {
                          var ex__12686__auto__ = e47527;
                          var statearr_47528_47530 = state_47520;
                          statearr_47528_47530[5] = ex__12686__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_47520);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e47527;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__47531 = state_47520;
                      state_47520 = G__47531;
                      continue;
                    } else {
                      return ret_value__12684__auto__;
                    }
                    break;
                  }
                };
                state_machine__12683__auto__ = function(state_47520) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__12683__auto____0.call(this);
                    case 1:
                      return state_machine__12683__auto____1.call(this, state_47520);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
                state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
                return state_machine__12683__auto__;
              }();
            }(switch__12682__auto__, c__12747__auto__, board__$1, rows, vec__47514, x, y, board, ny, piece, temp__4126__auto__);
          }();
          var state__12749__auto__ = function() {
            var statearr_47529 = f__12748__auto__.call(null);
            statearr_47529[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto__;
            return statearr_47529;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
        };
      }(c__12747__auto__, board__$1, rows, vec__47514, x, y, board, ny, piece, temp__4126__auto__));
      return c__12747__auto__;
    }
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.data_row = function data_row(index, content) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide14.anim_index), index) ? "active-row-534ed" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    if (cljs.core.truth_(cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_filled))) {
      return cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, index);
    } else {
      return null;
    }
  }], null), content], null);
};
var ufv___47545 = schema.utils.use_fn_validation;
var output_schema47533_47546 = schema.core.Any;
var input_schema47534_47547 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker47535_47548 = schema.core.checker.call(null, input_schema47534_47547);
var output_checker47536_47549 = schema.core.checker.call(null, output_schema47533_47546);
t3tr0s_slides.slide14.code = function(ufv___47545, output_schema47533_47546, input_schema47534_47547, input_checker47535_47548, output_checker47536_47549) {
  return function code(G__47537, G__47538) {
    var validate__5821__auto__ = ufv___47545.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___47550 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__47537, G__47538], null);
      var temp__4126__auto___47551 = input_checker47535_47548.call(null, args__5822__auto___47550);
      if (cljs.core.truth_(temp__4126__auto___47551)) {
        var error__5823__auto___47552 = temp__4126__auto___47551;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___47552)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema47534_47547, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___47550, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___47552], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__47537;
      var owner = G__47538;
      while (true) {
        if (typeof t3tr0s_slides.slide14.t47542 !== "undefined") {
        } else {
          t3tr0s_slides.slide14.t47542 = function(output_checker47536, owner, validate__5821__auto__, input_checker47535, G__47538, input_schema47534, output_schema47533, G__47537, app, ufv__, code, meta47543) {
            this.output_checker47536 = output_checker47536;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker47535 = input_checker47535;
            this.G__47538 = G__47538;
            this.input_schema47534 = input_schema47534;
            this.output_schema47533 = output_schema47533;
            this.G__47537 = G__47537;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta47543 = meta47543;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide14.t47542.cljs$lang$type = true;
          t3tr0s_slides.slide14.t47542.cljs$lang$ctorStr = "t3tr0s-slides.slide14/t47542";
          t3tr0s_slides.slide14.t47542.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___47545, output_schema47533_47546, input_schema47534_47547, input_checker47535_47548, output_checker47536_47549) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide14/t47542");
            };
          }(validate__5821__auto__, ufv___47545, output_schema47533_47546, input_schema47534_47547, input_checker47535_47548, output_checker47536_47549);
          t3tr0s_slides.slide14.t47542.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide14.t47542.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___47545, output_schema47533_47546, input_schema47534_47547, input_checker47535_47548, output_checker47536_47549) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " clear-rows\n", "  [board rows]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vec")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "map-indexed")), "\n", "   (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "fn")), " [i row]\n", "     (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "if")), " (rows i) empty-row row)) board)))\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " go-go-collapse! []\n", "\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [board     (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.lit.call(null, ":board")), " @game-state)\n", "        rows      (filled-rows board)\n", "        cleared   (clear-rows board rows)\n", "        collapsed (collapse-rows board rows)]\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: knock out some rows on the right,")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         then mouse over states below.")), 
              "\n", "\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "go")), "\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "dotimes")), " [_ ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "3")), "]\n", "\n", "        ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide14.data_row.call(null, 0, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " cleared)"), t3tr0s_slides.syntax_highlight.lit.call(null, ":board")), " "), t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), "\n", "        (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "\x3c!")), 
              " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "timeout")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "170")), "))\n", "\n", "        ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide14.data_row.call(null, 1, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core.List.EMPTY, " board)"), t3tr0s_slides.syntax_highlight.lit.call(null, ":board")), " "), t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), "\n", "        (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "\x3c!")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "timeout")), " ", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.lit.call(null, "170")), ")))\n", "\n", "      ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide14.data_row.call(null, 2, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " cleared)"), t3tr0s_slides.syntax_highlight.lit.call(null, ":board")), " "), t3tr0s_slides.syntax_highlight.core.call(null, 
              "assoc")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), "\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "\x3c!")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "timeout")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "220")), "))\n", "\n", "      ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide14.data_row.call(null, 
              3, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " collapsed)"), t3tr0s_slides.syntax_highlight.lit.call(null, ":board")), " "), t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), ")))\n")));
            };
          }(validate__5821__auto__, ufv___47545, output_schema47533_47546, input_schema47534_47547, input_checker47535_47548, output_checker47536_47549);
          t3tr0s_slides.slide14.t47542.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___47545, output_schema47533_47546, input_schema47534_47547, input_checker47535_47548, output_checker47536_47549) {
            return function(_47544) {
              var self__ = this;
              var _47544__$1 = this;
              return self__.meta47543;
            };
          }(validate__5821__auto__, ufv___47545, output_schema47533_47546, input_schema47534_47547, input_checker47535_47548, output_checker47536_47549);
          t3tr0s_slides.slide14.t47542.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___47545, output_schema47533_47546, input_schema47534_47547, input_checker47535_47548, output_checker47536_47549) {
            return function(_47544, meta47543__$1) {
              var self__ = this;
              var _47544__$1 = this;
              return new t3tr0s_slides.slide14.t47542(self__.output_checker47536, self__.owner, self__.validate__5821__auto__, self__.input_checker47535, self__.G__47538, self__.input_schema47534, self__.output_schema47533, self__.G__47537, self__.app, self__.ufv__, self__.code, meta47543__$1);
            };
          }(validate__5821__auto__, ufv___47545, output_schema47533_47546, input_schema47534_47547, input_checker47535_47548, output_checker47536_47549);
          t3tr0s_slides.slide14.__GT_t47542 = function(validate__5821__auto__, ufv___47545, output_schema47533_47546, input_schema47534_47547, input_checker47535_47548, output_checker47536_47549) {
            return function __GT_t47542(output_checker47536__$1, owner__$1, validate__5821__auto____$1, input_checker47535__$1, G__47538__$1, input_schema47534__$1, output_schema47533__$1, G__47537__$1, app__$1, ufv____$1, code__$1, meta47543) {
              return new t3tr0s_slides.slide14.t47542(output_checker47536__$1, owner__$1, validate__5821__auto____$1, input_checker47535__$1, G__47538__$1, input_schema47534__$1, output_schema47533__$1, G__47537__$1, app__$1, ufv____$1, code__$1, meta47543);
            };
          }(validate__5821__auto__, ufv___47545, output_schema47533_47546, input_schema47534_47547, input_checker47535_47548, output_checker47536_47549);
        }
        return new t3tr0s_slides.slide14.t47542(output_checker47536_47549, owner, validate__5821__auto__, input_checker47535_47548, G__47538, input_schema47534_47547, output_schema47533_47546, G__47537, app, ufv___47545, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___47553 = output_checker47536_47549.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___47553)) {
        var error__5823__auto___47554 = temp__4126__auto___47553;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___47554)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema47533_47546, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___47554], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___47545, output_schema47533_47546, input_schema47534_47547, input_checker47535_47548, output_checker47536_47549);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide14.code), schema.core.make_fn_schema.call(null, output_schema47533_47546, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema47534_47547], null)));
t3tr0s_slides.slide14.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide14.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m47532) {
    return om.core.build.call(null, t3tr0s_slides.slide14.code, cursor__9685__auto__, m47532);
  };
  __GT_code = function(cursor__9685__auto__, m47532) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m47532);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide14.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide14.nrows);
t3tr0s_slides.slide14.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__47555, is_center) {
  var vec__47557 = p__47555;
  var x = cljs.core.nth.call(null, vec__47557, 0, null);
  var y = cljs.core.nth.call(null, vec__47557, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide14.cell_size * x;
  var ry = t3tr0s_slides.slide14.cell_size * y;
  var rs = t3tr0s_slides.slide14.cell_size;
  var cx = t3tr0s_slides.slide14.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide14.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide14.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.piece_abs_coords = function piece_abs_coords(piece, p__47558) {
  var vec__47562 = p__47558;
  var cx = cljs.core.nth.call(null, vec__47562, 0, null);
  var cy = cljs.core.nth.call(null, vec__47562, 1, null);
  return cljs.core.mapv.call(null, function(vec__47562, cx, cy) {
    return function(p__47563) {
      var vec__47564 = p__47563;
      var x = cljs.core.nth.call(null, vec__47564, 0, null);
      var y = cljs.core.nth.call(null, vec__47564, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__47562, cx, cy), piece);
};
t3tr0s_slides.slide14.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__47571 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide14.piece_abs_coords.call(null, piece, pos)));
  var chunk__47572 = null;
  var count__47573 = 0;
  var i__47574 = 0;
  while (true) {
    if (i__47574 < count__47573) {
      var vec__47575 = cljs.core._nth.call(null, chunk__47572, i__47574);
      var i = cljs.core.nth.call(null, vec__47575, 0, null);
      var c = cljs.core.nth.call(null, vec__47575, 1, null);
      t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__47577 = seq__47571;
      var G__47578 = chunk__47572;
      var G__47579 = count__47573;
      var G__47580 = i__47574 + 1;
      seq__47571 = G__47577;
      chunk__47572 = G__47578;
      count__47573 = G__47579;
      i__47574 = G__47580;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__47571);
      if (temp__4126__auto__) {
        var seq__47571__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__47571__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__47571__$1);
          var G__47581 = cljs.core.chunk_rest.call(null, seq__47571__$1);
          var G__47582 = c__4309__auto__;
          var G__47583 = cljs.core.count.call(null, c__4309__auto__);
          var G__47584 = 0;
          seq__47571 = G__47581;
          chunk__47572 = G__47582;
          count__47573 = G__47583;
          i__47574 = G__47584;
          continue;
        } else {
          var vec__47576 = cljs.core.first.call(null, seq__47571__$1);
          var i = cljs.core.nth.call(null, vec__47576, 0, null);
          var c = cljs.core.nth.call(null, vec__47576, 1, null);
          t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__47585 = cljs.core.next.call(null, seq__47571__$1);
          var G__47586 = null;
          var G__47587 = 0;
          var G__47588 = 0;
          seq__47571 = G__47585;
          chunk__47572 = G__47586;
          count__47573 = G__47587;
          i__47574 = G__47588;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide14.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var filled_QMARK_ = t3tr0s_slides.slide14.filled_rows.call(null, board);
  var seq__47601 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide14.nrows));
  var chunk__47606 = null;
  var count__47607 = 0;
  var i__47608 = 0;
  while (true) {
    if (i__47608 < count__47607) {
      var y = cljs.core._nth.call(null, chunk__47606, i__47608);
      var seq__47609_47613 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide14.ncols));
      var chunk__47610_47614 = null;
      var count__47611_47615 = 0;
      var i__47612_47616 = 0;
      while (true) {
        if (i__47612_47616 < count__47611_47615) {
          var x_47617 = cljs.core._nth.call(null, chunk__47610_47614, i__47612_47616);
          ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .3 : 1;
          var v_47618 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_47617], null));
          if (v_47618 === 0) {
          } else {
            t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_47617, y], null), false);
          }
          var G__47619 = seq__47609_47613;
          var G__47620 = chunk__47610_47614;
          var G__47621 = count__47611_47615;
          var G__47622 = i__47612_47616 + 1;
          seq__47609_47613 = G__47619;
          chunk__47610_47614 = G__47620;
          count__47611_47615 = G__47621;
          i__47612_47616 = G__47622;
          continue;
        } else {
          var temp__4126__auto___47623 = cljs.core.seq.call(null, seq__47609_47613);
          if (temp__4126__auto___47623) {
            var seq__47609_47624__$1 = temp__4126__auto___47623;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__47609_47624__$1)) {
              var c__4309__auto___47625 = cljs.core.chunk_first.call(null, seq__47609_47624__$1);
              var G__47626 = cljs.core.chunk_rest.call(null, seq__47609_47624__$1);
              var G__47627 = c__4309__auto___47625;
              var G__47628 = cljs.core.count.call(null, c__4309__auto___47625);
              var G__47629 = 0;
              seq__47609_47613 = G__47626;
              chunk__47610_47614 = G__47627;
              count__47611_47615 = G__47628;
              i__47612_47616 = G__47629;
              continue;
            } else {
              var x_47630 = cljs.core.first.call(null, seq__47609_47624__$1);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .3 : 1;
              var v_47631 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_47630], null));
              if (v_47631 === 0) {
              } else {
                t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_47630, y], null), false);
              }
              var G__47632 = cljs.core.next.call(null, seq__47609_47624__$1);
              var G__47633 = null;
              var G__47634 = 0;
              var G__47635 = 0;
              seq__47609_47613 = G__47632;
              chunk__47610_47614 = G__47633;
              count__47611_47615 = G__47634;
              i__47612_47616 = G__47635;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__47636 = seq__47601;
      var G__47637 = chunk__47606;
      var G__47638 = count__47607;
      var G__47639 = i__47608 + 1;
      seq__47601 = G__47636;
      chunk__47606 = G__47637;
      count__47607 = G__47638;
      i__47608 = G__47639;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__47601);
      if (temp__4126__auto__) {
        var seq__47601__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__47601__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__47601__$1);
          var G__47640 = cljs.core.chunk_rest.call(null, seq__47601__$1);
          var G__47641 = c__4309__auto__;
          var G__47642 = cljs.core.count.call(null, c__4309__auto__);
          var G__47643 = 0;
          seq__47601 = G__47640;
          chunk__47606 = G__47641;
          count__47607 = G__47642;
          i__47608 = G__47643;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__47601__$1);
          var seq__47602_47644 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide14.ncols));
          var chunk__47603_47645 = null;
          var count__47604_47646 = 0;
          var i__47605_47647 = 0;
          while (true) {
            if (i__47605_47647 < count__47604_47646) {
              var x_47648 = cljs.core._nth.call(null, chunk__47603_47645, i__47605_47647);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .3 : 1;
              var v_47649 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_47648], null));
              if (v_47649 === 0) {
              } else {
                t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_47648, y], null), false);
              }
              var G__47650 = seq__47602_47644;
              var G__47651 = chunk__47603_47645;
              var G__47652 = count__47604_47646;
              var G__47653 = i__47605_47647 + 1;
              seq__47602_47644 = G__47650;
              chunk__47603_47645 = G__47651;
              count__47604_47646 = G__47652;
              i__47605_47647 = G__47653;
              continue;
            } else {
              var temp__4126__auto___47654__$1 = cljs.core.seq.call(null, seq__47602_47644);
              if (temp__4126__auto___47654__$1) {
                var seq__47602_47655__$1 = temp__4126__auto___47654__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__47602_47655__$1)) {
                  var c__4309__auto___47656 = cljs.core.chunk_first.call(null, seq__47602_47655__$1);
                  var G__47657 = cljs.core.chunk_rest.call(null, seq__47602_47655__$1);
                  var G__47658 = c__4309__auto___47656;
                  var G__47659 = cljs.core.count.call(null, c__4309__auto___47656);
                  var G__47660 = 0;
                  seq__47602_47644 = G__47657;
                  chunk__47603_47645 = G__47658;
                  count__47604_47646 = G__47659;
                  i__47605_47647 = G__47660;
                  continue;
                } else {
                  var x_47661 = cljs.core.first.call(null, seq__47602_47655__$1);
                  ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .3 : 1;
                  var v_47662 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_47661], null));
                  if (v_47662 === 0) {
                  } else {
                    t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_47661, y], null), false);
                  }
                  var G__47663 = cljs.core.next.call(null, seq__47602_47655__$1);
                  var G__47664 = null;
                  var G__47665 = 0;
                  var G__47666 = 0;
                  seq__47602_47644 = G__47663;
                  chunk__47603_47645 = G__47664;
                  count__47604_47646 = G__47665;
                  i__47605_47647 = G__47666;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__47667 = cljs.core.next.call(null, seq__47601__$1);
          var G__47668 = null;
          var G__47669 = 0;
          var G__47670 = 0;
          seq__47601 = G__47667;
          chunk__47606 = G__47668;
          count__47607 = G__47669;
          i__47608 = G__47670;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide14.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide14.cell_size * t3tr0s_slides.slide14.ncols, t3tr0s_slides.slide14.cell_size * t3tr0s_slides.slide14.nrows);
  ctx.fillStyle = t3tr0s_slides.slide14.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide14.light_green;
  t3tr0s_slides.slide14.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  ctx.globalAlpha = 1;
  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var piece = temp__4126__auto__;
    var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
    var drop_y = t3tr0s_slides.slide14.get_drop_pos.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state)), piece, pos);
    var drop_pos = cljs.core.assoc.call(null, pos, 1, drop_y);
    var fits = t3tr0s_slides.slide14.app_piece_fits_QMARK_.call(null);
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = piece;
      if (cljs.core.truth_(and__3541__auto__)) {
        return pos;
      } else {
        return and__3541__auto__;
      }
    }())) {
      ctx.fillStyle = "#333";
      ctx.strokeStyle = "#666";
      t3tr0s_slides.slide14.draw_piece_BANG_.call(null, ctx, piece, drop_pos);
      ctx.fillStyle = fits ? t3tr0s_slides.slide14.dark_purple : t3tr0s_slides.slide14.dark_red;
      ctx.strokeStyle = fits ? t3tr0s_slides.slide14.light_purple : t3tr0s_slides.slide14.light_red;
      return t3tr0s_slides.slide14.draw_piece_BANG_.call(null, ctx, piece, pos);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide14.key_name = function key_name(p1__47671_SHARP_) {
  return t3tr0s_slides.slide14.key_names.call(null, p1__47671_SHARP_.keyCode);
};
t3tr0s_slides.slide14.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide14.key_name.call(null, e);
  var G__47673_47674 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__47673_47674) {
    case "space":
      t3tr0s_slides.slide14.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide14.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide14.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide14.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___47693 = schema.utils.use_fn_validation;
var output_schema47677_47694 = schema.core.Any;
var input_schema47678_47695 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker47679_47696 = schema.core.checker.call(null, input_schema47678_47695);
var output_checker47680_47697 = schema.core.checker.call(null, output_schema47677_47694);
t3tr0s_slides.slide14.canvas = function(ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697) {
  return function canvas(G__47681, G__47682) {
    var validate__5821__auto__ = ufv___47693.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___47698 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__47681, G__47682], null);
      var temp__4126__auto___47699 = input_checker47679_47696.call(null, args__5822__auto___47698);
      if (cljs.core.truth_(temp__4126__auto___47699)) {
        var error__5823__auto___47700 = temp__4126__auto___47699;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___47700)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema47678_47695, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___47698, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___47700], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__47681;
      var owner = G__47682;
      while (true) {
        if (typeof t3tr0s_slides.slide14.t47688 !== "undefined") {
        } else {
          t3tr0s_slides.slide14.t47688 = function(owner, output_schema47677, input_checker47679, validate__5821__auto__, output_checker47680, G__47682, canvas, G__47681, input_schema47678, app, ufv__, meta47689) {
            this.owner = owner;
            this.output_schema47677 = output_schema47677;
            this.input_checker47679 = input_checker47679;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker47680 = output_checker47680;
            this.G__47682 = G__47682;
            this.canvas = canvas;
            this.G__47681 = G__47681;
            this.input_schema47678 = input_schema47678;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta47689 = meta47689;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide14.t47688.cljs$lang$type = true;
          t3tr0s_slides.slide14.t47688.cljs$lang$ctorStr = "t3tr0s-slides.slide14/t47688";
          t3tr0s_slides.slide14.t47688.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide14/t47688");
            };
          }(validate__5821__auto__, ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697);
          t3tr0s_slides.slide14.t47688.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide14.t47688.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697);
          t3tr0s_slides.slide14.t47688.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide14.t47688.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide14.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697);
          t3tr0s_slides.slide14.t47688.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide14.t47688.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide14.ncols * t3tr0s_slides.slide14.cell_size;
              canvas__$2.height = t3tr0s_slides.slide14.nrows * t3tr0s_slides.slide14.cell_size;
              return t3tr0s_slides.slide14.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697);
          t3tr0s_slides.slide14.t47688.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697) {
            return function(_47690) {
              var self__ = this;
              var _47690__$1 = this;
              return self__.meta47689;
            };
          }(validate__5821__auto__, ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697);
          t3tr0s_slides.slide14.t47688.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697) {
            return function(_47690, meta47689__$1) {
              var self__ = this;
              var _47690__$1 = this;
              return new t3tr0s_slides.slide14.t47688(self__.owner, self__.output_schema47677, self__.input_checker47679, self__.validate__5821__auto__, self__.output_checker47680, self__.G__47682, self__.canvas, self__.G__47681, self__.input_schema47678, self__.app, self__.ufv__, meta47689__$1);
            };
          }(validate__5821__auto__, ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697);
          t3tr0s_slides.slide14.__GT_t47688 = function(validate__5821__auto__, ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697) {
            return function __GT_t47688(owner__$1, output_schema47677__$1, input_checker47679__$1, validate__5821__auto____$1, output_checker47680__$1, G__47682__$1, canvas__$1, G__47681__$1, input_schema47678__$1, app__$1, ufv____$1, meta47689) {
              return new t3tr0s_slides.slide14.t47688(owner__$1, output_schema47677__$1, input_checker47679__$1, validate__5821__auto____$1, output_checker47680__$1, G__47682__$1, canvas__$1, G__47681__$1, input_schema47678__$1, app__$1, ufv____$1, meta47689);
            };
          }(validate__5821__auto__, ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697);
        }
        return new t3tr0s_slides.slide14.t47688(owner, output_schema47677_47694, input_checker47679_47696, validate__5821__auto__, output_checker47680_47697, G__47682, canvas, G__47681, input_schema47678_47695, app, ufv___47693, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___47701 = output_checker47680_47697.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___47701)) {
        var error__5823__auto___47702 = temp__4126__auto___47701;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___47702)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema47677_47694, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___47702], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___47693, output_schema47677_47694, input_schema47678_47695, input_checker47679_47696, output_checker47680_47697);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide14.canvas), schema.core.make_fn_schema.call(null, output_schema47677_47694, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema47678_47695], null)));
t3tr0s_slides.slide14.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide14.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m47676) {
    return om.core.build.call(null, t3tr0s_slides.slide14.canvas, cursor__9685__auto__, m47676);
  };
  __GT_canvas = function(cursor__9685__auto__, m47676) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m47676);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___47720 = schema.utils.use_fn_validation;
var output_schema47704_47721 = schema.core.Any;
var input_schema47705_47722 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker47706_47723 = schema.core.checker.call(null, input_schema47705_47722);
var output_checker47707_47724 = schema.core.checker.call(null, output_schema47704_47721);
t3tr0s_slides.slide14.slide = function(ufv___47720, output_schema47704_47721, input_schema47705_47722, input_checker47706_47723, output_checker47707_47724) {
  return function slide(G__47708, G__47709) {
    var validate__5821__auto__ = ufv___47720.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___47725 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__47708, G__47709], null);
      var temp__4126__auto___47726 = input_checker47706_47723.call(null, args__5822__auto___47725);
      if (cljs.core.truth_(temp__4126__auto___47726)) {
        var error__5823__auto___47727 = temp__4126__auto___47726;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___47727)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema47705_47722, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___47725, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___47727], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__47708;
      var owner = G__47709;
      while (true) {
        if (typeof t3tr0s_slides.slide14.t47715 !== "undefined") {
        } else {
          t3tr0s_slides.slide14.t47715 = function(input_schema47705, output_schema47704, input_checker47706, owner, output_checker47707, validate__5821__auto__, G__47709, slide, app, ufv__, G__47708, meta47716) {
            this.input_schema47705 = input_schema47705;
            this.output_schema47704 = output_schema47704;
            this.input_checker47706 = input_checker47706;
            this.owner = owner;
            this.output_checker47707 = output_checker47707;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__47709 = G__47709;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.G__47708 = G__47708;
            this.meta47716 = meta47716;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide14.t47715.cljs$lang$type = true;
          t3tr0s_slides.slide14.t47715.cljs$lang$ctorStr = "t3tr0s-slides.slide14/t47715";
          t3tr0s_slides.slide14.t47715.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___47720, output_schema47704_47721, input_schema47705_47722, input_checker47706_47723, output_checker47707_47724) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide14/t47715");
            };
          }(validate__5821__auto__, ufv___47720, output_schema47704_47721, input_schema47705_47722, input_checker47706_47723, output_checker47707_47724);
          t3tr0s_slides.slide14.t47715.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide14.t47715.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___47720, output_schema47704_47721, input_schema47705_47722, input_checker47706_47723, output_checker47707_47724) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "14. Animate collapse."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide14.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide14.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___47720, output_schema47704_47721, input_schema47705_47722, input_checker47706_47723, output_checker47707_47724);
          t3tr0s_slides.slide14.t47715.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___47720, output_schema47704_47721, input_schema47705_47722, input_checker47706_47723, output_checker47707_47724) {
            return function(_47717) {
              var self__ = this;
              var _47717__$1 = this;
              return self__.meta47716;
            };
          }(validate__5821__auto__, ufv___47720, output_schema47704_47721, input_schema47705_47722, input_checker47706_47723, output_checker47707_47724);
          t3tr0s_slides.slide14.t47715.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___47720, output_schema47704_47721, input_schema47705_47722, input_checker47706_47723, output_checker47707_47724) {
            return function(_47717, meta47716__$1) {
              var self__ = this;
              var _47717__$1 = this;
              return new t3tr0s_slides.slide14.t47715(self__.input_schema47705, self__.output_schema47704, self__.input_checker47706, self__.owner, self__.output_checker47707, self__.validate__5821__auto__, self__.G__47709, self__.slide, self__.app, self__.ufv__, self__.G__47708, meta47716__$1);
            };
          }(validate__5821__auto__, ufv___47720, output_schema47704_47721, input_schema47705_47722, input_checker47706_47723, output_checker47707_47724);
          t3tr0s_slides.slide14.__GT_t47715 = function(validate__5821__auto__, ufv___47720, output_schema47704_47721, input_schema47705_47722, input_checker47706_47723, output_checker47707_47724) {
            return function __GT_t47715(input_schema47705__$1, output_schema47704__$1, input_checker47706__$1, owner__$1, output_checker47707__$1, validate__5821__auto____$1, G__47709__$1, slide__$1, app__$1, ufv____$1, G__47708__$1, meta47716) {
              return new t3tr0s_slides.slide14.t47715(input_schema47705__$1, output_schema47704__$1, input_checker47706__$1, owner__$1, output_checker47707__$1, validate__5821__auto____$1, G__47709__$1, slide__$1, app__$1, ufv____$1, G__47708__$1, meta47716);
            };
          }(validate__5821__auto__, ufv___47720, output_schema47704_47721, input_schema47705_47722, input_checker47706_47723, output_checker47707_47724);
        }
        return new t3tr0s_slides.slide14.t47715(input_schema47705_47722, output_schema47704_47721, input_checker47706_47723, owner, output_checker47707_47724, validate__5821__auto__, G__47709, slide, app, ufv___47720, G__47708, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___47728 = output_checker47707_47724.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___47728)) {
        var error__5823__auto___47729 = temp__4126__auto___47728;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___47729)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema47704_47721, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___47729], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___47720, output_schema47704_47721, input_schema47705_47722, input_checker47706_47723, output_checker47707_47724);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide14.slide), schema.core.make_fn_schema.call(null, output_schema47704_47721, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema47705_47722], null)));
t3tr0s_slides.slide14.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide14.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m47703) {
    return om.core.build.call(null, t3tr0s_slides.slide14.slide, cursor__9685__auto__, m47703);
  };
  __GT_slide = function(cursor__9685__auto__, m47703) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m47703);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide14.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide14.slide, t3tr0s_slides.slide14.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide14.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide14.key_down);
};
t3tr0s_slides.slide14.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide14.key_down);
};
goog.provide("t3tr0s_slides.slide15");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide15.dark_green = "#143";
t3tr0s_slides.slide15.light_green = "#175";
t3tr0s_slides.slide15.dark_purple = "#449";
t3tr0s_slides.slide15.light_purple = "#6ad";
t3tr0s_slides.slide15.dark_red = "#944";
t3tr0s_slides.slide15.light_red = "#f8c";
t3tr0s_slides.slide15.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide15.rotate_coord = function rotate_coord(p__15857) {
  var vec__15859 = p__15857;
  var x = cljs.core.nth.call(null, vec__15859, 0, null);
  var y = cljs.core.nth.call(null, vec__15859, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide15.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide15.rotate_coord, piece);
};
t3tr0s_slides.slide15.rows = 20;
t3tr0s_slides.slide15.cols = 10;
t3tr0s_slides.slide15.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide15.cols, 0));
t3tr0s_slides.slide15.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide15.rows, t3tr0s_slides.slide15.empty_row));
t3tr0s_slides.slide15.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 1, 0, 0, 1, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 1, 0, 0, 0, 0, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 1, 1, 1, 1, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 1, 0, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 1, 1, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 1, 1, 0, 1, 1, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide15.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide15.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide15.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.last.call(null, cljs.core.take.call(null, 4, cljs.core.iterate.call(null, t3tr0s_slides.slide15.rotate_piece, (new cljs.core.Keyword(null, "L", "L", -1038307519)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide15.pieces)))), new cljs.core.Keyword(null, 
"position", "position", -2011731912), t3tr0s_slides.slide15.initial_pos], null));
t3tr0s_slides.slide15.write_piece = function write_piece(board, coords, p__15860) {
  while (true) {
    var vec__15864 = p__15860;
    var cx = cljs.core.nth.call(null, vec__15864, 0, null);
    var cy = cljs.core.nth.call(null, vec__15864, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__15865 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__15865, 0, null);
      var y = cljs.core.nth.call(null, vec__15865, 1, null);
      var G__15867 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e15866) {
          if (e15866 instanceof Error) {
            var _ = e15866;
            return board;
          } else {
            throw e15866;
          }
        }
      }();
      var G__15868 = cljs.core.rest.call(null, coords);
      var G__15869 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__15867;
      coords = G__15868;
      p__15860 = G__15869;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide15.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__15871 = cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state);
  var map__15871__$1 = cljs.core.seq_QMARK_.call(null, map__15871) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15871) : map__15871;
  var position = cljs.core.get.call(null, map__15871__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__15871__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide15.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide15.write_piece, piece, position);
};
t3tr0s_slides.slide15.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__15872) {
  var vec__15876 = p__15872;
  var cx = cljs.core.nth.call(null, vec__15876, 0, null);
  var cy = cljs.core.nth.call(null, vec__15876, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__15876, cx, cy) {
    return function(p__15877) {
      var vec__15878 = p__15877;
      var x = cljs.core.nth.call(null, vec__15878, 0, null);
      var y = cljs.core.nth.call(null, vec__15878, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__15876, cx, cy), piece);
};
t3tr0s_slides.slide15.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide15.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide15.app_state))));
};
t3tr0s_slides.slide15.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__15883(s__15884) {
      return new cljs.core.LazySeq(null, function() {
        var s__15884__$1 = s__15884;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__15884__$1);
          if (temp__4126__auto__) {
            var s__15884__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__15884__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__15884__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__15886 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__15885 = 0;
                while (true) {
                  if (i__15885 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__15885);
                    cljs.core.chunk_append.call(null, b__15886, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))));
                    var G__15887 = i__15885 + 1;
                    i__15885 = G__15887;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15886), iter__15883.call(null, cljs.core.chunk_rest.call(null, s__15884__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15886), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__15884__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))), iter__15883.call(null, cljs.core.rest.call(null, s__15884__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide15.cols));
  }(), " ]"], null);
};
var ufv___15903 = schema.utils.use_fn_validation;
var output_schema15889_15904 = schema.core.Any;
var input_schema15890_15905 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker15891_15906 = schema.core.checker.call(null, input_schema15890_15905);
var output_checker15892_15907 = schema.core.checker.call(null, output_schema15889_15904);
t3tr0s_slides.slide15.code = function(ufv___15903, output_schema15889_15904, input_schema15890_15905, input_checker15891_15906, output_checker15892_15907) {
  return function code(G__15893, G__15894) {
    var validate__5821__auto__ = ufv___15903.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___15908 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__15893, G__15894], null);
      var temp__4126__auto___15909 = input_checker15891_15906.call(null, args__5822__auto___15908);
      if (cljs.core.truth_(temp__4126__auto___15909)) {
        var error__5823__auto___15910 = temp__4126__auto___15909;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___15910)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema15890_15905, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___15908, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___15910], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__15893;
      var owner = G__15894;
      while (true) {
        if (typeof t3tr0s_slides.slide15.t15899 !== "undefined") {
        } else {
          t3tr0s_slides.slide15.t15899 = function(input_schema15890, output_schema15889, output_checker15892, owner, G__15893, input_checker15891, validate__5821__auto__, G__15894, app, ufv__, code, meta15900) {
            this.input_schema15890 = input_schema15890;
            this.output_schema15889 = output_schema15889;
            this.output_checker15892 = output_checker15892;
            this.owner = owner;
            this.G__15893 = G__15893;
            this.input_checker15891 = input_checker15891;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__15894 = G__15894;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta15900 = meta15900;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide15.t15899.cljs$lang$type = true;
          t3tr0s_slides.slide15.t15899.cljs$lang$ctorStr = "t3tr0s-slides.slide15/t15899";
          t3tr0s_slides.slide15.t15899.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___15903, output_schema15889_15904, input_schema15890_15905, input_checker15891_15906, output_checker15892_15907) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide15/t15899");
            };
          }(validate__5821__auto__, ufv___15903, output_schema15889_15904, input_schema15890_15905, input_checker15891_15906, output_checker15892_15907);
          t3tr0s_slides.slide15.t15899.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide15.t15899.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___15903, output_schema15889_15904, input_schema15890_15905, input_checker15891_15906, output_checker15892_15907) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs15902 = t3tr0s_slides.syntax_highlight.cmt.call(null, ";; You can probably guess how to implement the");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs15902) ? sablono.interpreter.attributes.call(null, attrs15902) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs15902) ? new cljs.core.PersistentVector(null, 30, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; rest of the features, like gravity and")), "\n", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.cmt.call(null, ";; the game over animation.")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Now go play some ", t3tr0s_slides.syntax_highlight.kw.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "https://github.com/imalooney/t3tr0s"], 
                null), "T3TR0S"], null)), "!")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Thanks to these cool people:")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Elaine Looney"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, 
                "Luis Gutierrez"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Chris Oakman"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Brett Darnell"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, 
                "Phil Gambling"))), "\n", "\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; If you really want to look at the code")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; for this presentation...")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; ")), sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, new cljs.core.PersistentVector(null, 
                3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "https://github.com/shaunlebron/t3tr0s-slides"], null), "here it is."], null))), "\n"], null) : new cljs.core.PersistentVector(null, 31, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs15902), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
                ";; rest of the features, like gravity and")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; the game over animation.")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Now go play some ", t3tr0s_slides.syntax_highlight.kw.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 
                1, [new cljs.core.Keyword(null, "href", "href", -793805698), "https://github.com/imalooney/t3tr0s"], null), "T3TR0S"], null)), "!")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Thanks to these cool people:")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Elaine Looney"))), "\n", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Luis Gutierrez"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Chris Oakman"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Brett Darnell"))), "\n", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Phil Gambling"))), "\n", "\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; If you really want to look at the code")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; for this presentation...")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
                ";; ")), sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "https://github.com/shaunlebron/t3tr0s-slides"], null), "here it is."], null))), "\n"], null)));
              }()));
            };
          }(validate__5821__auto__, ufv___15903, output_schema15889_15904, input_schema15890_15905, input_checker15891_15906, output_checker15892_15907);
          t3tr0s_slides.slide15.t15899.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___15903, output_schema15889_15904, input_schema15890_15905, input_checker15891_15906, output_checker15892_15907) {
            return function(_15901) {
              var self__ = this;
              var _15901__$1 = this;
              return self__.meta15900;
            };
          }(validate__5821__auto__, ufv___15903, output_schema15889_15904, input_schema15890_15905, input_checker15891_15906, output_checker15892_15907);
          t3tr0s_slides.slide15.t15899.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___15903, output_schema15889_15904, input_schema15890_15905, input_checker15891_15906, output_checker15892_15907) {
            return function(_15901, meta15900__$1) {
              var self__ = this;
              var _15901__$1 = this;
              return new t3tr0s_slides.slide15.t15899(self__.input_schema15890, self__.output_schema15889, self__.output_checker15892, self__.owner, self__.G__15893, self__.input_checker15891, self__.validate__5821__auto__, self__.G__15894, self__.app, self__.ufv__, self__.code, meta15900__$1);
            };
          }(validate__5821__auto__, ufv___15903, output_schema15889_15904, input_schema15890_15905, input_checker15891_15906, output_checker15892_15907);
          t3tr0s_slides.slide15.__GT_t15899 = function(validate__5821__auto__, ufv___15903, output_schema15889_15904, input_schema15890_15905, input_checker15891_15906, output_checker15892_15907) {
            return function __GT_t15899(input_schema15890__$1, output_schema15889__$1, output_checker15892__$1, owner__$1, G__15893__$1, input_checker15891__$1, validate__5821__auto____$1, G__15894__$1, app__$1, ufv____$1, code__$1, meta15900) {
              return new t3tr0s_slides.slide15.t15899(input_schema15890__$1, output_schema15889__$1, output_checker15892__$1, owner__$1, G__15893__$1, input_checker15891__$1, validate__5821__auto____$1, G__15894__$1, app__$1, ufv____$1, code__$1, meta15900);
            };
          }(validate__5821__auto__, ufv___15903, output_schema15889_15904, input_schema15890_15905, input_checker15891_15906, output_checker15892_15907);
        }
        return new t3tr0s_slides.slide15.t15899(input_schema15890_15905, output_schema15889_15904, output_checker15892_15907, owner, G__15893, input_checker15891_15906, validate__5821__auto__, G__15894, app, ufv___15903, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___15911 = output_checker15892_15907.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___15911)) {
        var error__5823__auto___15912 = temp__4126__auto___15911;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___15912)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema15889_15904, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___15912], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___15903, output_schema15889_15904, input_schema15890_15905, input_checker15891_15906, output_checker15892_15907);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide15.code), schema.core.make_fn_schema.call(null, output_schema15889_15904, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema15890_15905], null)));
t3tr0s_slides.slide15.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide15.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m15888) {
    return om.core.build.call(null, t3tr0s_slides.slide15.code, cursor__9685__auto__, m15888);
  };
  __GT_code = function(cursor__9685__auto__, m15888) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m15888);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide15.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide15.rows);
t3tr0s_slides.slide15.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__15913, is_center) {
  var vec__15915 = p__15913;
  var x = cljs.core.nth.call(null, vec__15915, 0, null);
  var y = cljs.core.nth.call(null, vec__15915, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide15.cell_size * x;
  var ry = t3tr0s_slides.slide15.cell_size * y;
  var rs = t3tr0s_slides.slide15.cell_size;
  var cx = t3tr0s_slides.slide15.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide15.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide15.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide15.piece_abs_coords = function piece_abs_coords(piece, p__15916) {
  var vec__15920 = p__15916;
  var cx = cljs.core.nth.call(null, vec__15920, 0, null);
  var cy = cljs.core.nth.call(null, vec__15920, 1, null);
  return cljs.core.mapv.call(null, function(vec__15920, cx, cy) {
    return function(p__15921) {
      var vec__15922 = p__15921;
      var x = cljs.core.nth.call(null, vec__15922, 0, null);
      var y = cljs.core.nth.call(null, vec__15922, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__15920, cx, cy), piece);
};
t3tr0s_slides.slide15.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__15929 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide15.piece_abs_coords.call(null, piece, pos)));
  var chunk__15930 = null;
  var count__15931 = 0;
  var i__15932 = 0;
  while (true) {
    if (i__15932 < count__15931) {
      var vec__15933 = cljs.core._nth.call(null, chunk__15930, i__15932);
      var i = cljs.core.nth.call(null, vec__15933, 0, null);
      var c = cljs.core.nth.call(null, vec__15933, 1, null);
      t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__15935 = seq__15929;
      var G__15936 = chunk__15930;
      var G__15937 = count__15931;
      var G__15938 = i__15932 + 1;
      seq__15929 = G__15935;
      chunk__15930 = G__15936;
      count__15931 = G__15937;
      i__15932 = G__15938;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__15929);
      if (temp__4126__auto__) {
        var seq__15929__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15929__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__15929__$1);
          var G__15939 = cljs.core.chunk_rest.call(null, seq__15929__$1);
          var G__15940 = c__4309__auto__;
          var G__15941 = cljs.core.count.call(null, c__4309__auto__);
          var G__15942 = 0;
          seq__15929 = G__15939;
          chunk__15930 = G__15940;
          count__15931 = G__15941;
          i__15932 = G__15942;
          continue;
        } else {
          var vec__15934 = cljs.core.first.call(null, seq__15929__$1);
          var i = cljs.core.nth.call(null, vec__15934, 0, null);
          var c = cljs.core.nth.call(null, vec__15934, 1, null);
          t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__15943 = cljs.core.next.call(null, seq__15929__$1);
          var G__15944 = null;
          var G__15945 = 0;
          var G__15946 = 0;
          seq__15929 = G__15943;
          chunk__15930 = G__15944;
          count__15931 = G__15945;
          i__15932 = G__15946;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide15.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__15959 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide15.rows));
  var chunk__15964 = null;
  var count__15965 = 0;
  var i__15966 = 0;
  while (true) {
    if (i__15966 < count__15965) {
      var y = cljs.core._nth.call(null, chunk__15964, i__15966);
      var seq__15967_15971 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide15.cols));
      var chunk__15968_15972 = null;
      var count__15969_15973 = 0;
      var i__15970_15974 = 0;
      while (true) {
        if (i__15970_15974 < count__15969_15973) {
          var x_15975 = cljs.core._nth.call(null, chunk__15968_15972, i__15970_15974);
          var v_15976 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_15975], null));
          if (v_15976 === 0) {
          } else {
            t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_15975, y], null), false);
          }
          var G__15977 = seq__15967_15971;
          var G__15978 = chunk__15968_15972;
          var G__15979 = count__15969_15973;
          var G__15980 = i__15970_15974 + 1;
          seq__15967_15971 = G__15977;
          chunk__15968_15972 = G__15978;
          count__15969_15973 = G__15979;
          i__15970_15974 = G__15980;
          continue;
        } else {
          var temp__4126__auto___15981 = cljs.core.seq.call(null, seq__15967_15971);
          if (temp__4126__auto___15981) {
            var seq__15967_15982__$1 = temp__4126__auto___15981;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__15967_15982__$1)) {
              var c__4309__auto___15983 = cljs.core.chunk_first.call(null, seq__15967_15982__$1);
              var G__15984 = cljs.core.chunk_rest.call(null, seq__15967_15982__$1);
              var G__15985 = c__4309__auto___15983;
              var G__15986 = cljs.core.count.call(null, c__4309__auto___15983);
              var G__15987 = 0;
              seq__15967_15971 = G__15984;
              chunk__15968_15972 = G__15985;
              count__15969_15973 = G__15986;
              i__15970_15974 = G__15987;
              continue;
            } else {
              var x_15988 = cljs.core.first.call(null, seq__15967_15982__$1);
              var v_15989 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_15988], null));
              if (v_15989 === 0) {
              } else {
                t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_15988, y], null), false);
              }
              var G__15990 = cljs.core.next.call(null, seq__15967_15982__$1);
              var G__15991 = null;
              var G__15992 = 0;
              var G__15993 = 0;
              seq__15967_15971 = G__15990;
              chunk__15968_15972 = G__15991;
              count__15969_15973 = G__15992;
              i__15970_15974 = G__15993;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__15994 = seq__15959;
      var G__15995 = chunk__15964;
      var G__15996 = count__15965;
      var G__15997 = i__15966 + 1;
      seq__15959 = G__15994;
      chunk__15964 = G__15995;
      count__15965 = G__15996;
      i__15966 = G__15997;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__15959);
      if (temp__4126__auto__) {
        var seq__15959__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15959__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__15959__$1);
          var G__15998 = cljs.core.chunk_rest.call(null, seq__15959__$1);
          var G__15999 = c__4309__auto__;
          var G__16000 = cljs.core.count.call(null, c__4309__auto__);
          var G__16001 = 0;
          seq__15959 = G__15998;
          chunk__15964 = G__15999;
          count__15965 = G__16000;
          i__15966 = G__16001;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__15959__$1);
          var seq__15960_16002 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide15.cols));
          var chunk__15961_16003 = null;
          var count__15962_16004 = 0;
          var i__15963_16005 = 0;
          while (true) {
            if (i__15963_16005 < count__15962_16004) {
              var x_16006 = cljs.core._nth.call(null, chunk__15961_16003, i__15963_16005);
              var v_16007 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_16006], null));
              if (v_16007 === 0) {
              } else {
                t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_16006, y], null), false);
              }
              var G__16008 = seq__15960_16002;
              var G__16009 = chunk__15961_16003;
              var G__16010 = count__15962_16004;
              var G__16011 = i__15963_16005 + 1;
              seq__15960_16002 = G__16008;
              chunk__15961_16003 = G__16009;
              count__15962_16004 = G__16010;
              i__15963_16005 = G__16011;
              continue;
            } else {
              var temp__4126__auto___16012__$1 = cljs.core.seq.call(null, seq__15960_16002);
              if (temp__4126__auto___16012__$1) {
                var seq__15960_16013__$1 = temp__4126__auto___16012__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__15960_16013__$1)) {
                  var c__4309__auto___16014 = cljs.core.chunk_first.call(null, seq__15960_16013__$1);
                  var G__16015 = cljs.core.chunk_rest.call(null, seq__15960_16013__$1);
                  var G__16016 = c__4309__auto___16014;
                  var G__16017 = cljs.core.count.call(null, c__4309__auto___16014);
                  var G__16018 = 0;
                  seq__15960_16002 = G__16015;
                  chunk__15961_16003 = G__16016;
                  count__15962_16004 = G__16017;
                  i__15963_16005 = G__16018;
                  continue;
                } else {
                  var x_16019 = cljs.core.first.call(null, seq__15960_16013__$1);
                  var v_16020 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_16019], null));
                  if (v_16020 === 0) {
                  } else {
                    t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_16019, y], null), false);
                  }
                  var G__16021 = cljs.core.next.call(null, seq__15960_16013__$1);
                  var G__16022 = null;
                  var G__16023 = 0;
                  var G__16024 = 0;
                  seq__15960_16002 = G__16021;
                  chunk__15961_16003 = G__16022;
                  count__15962_16004 = G__16023;
                  i__15963_16005 = G__16024;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__16025 = cljs.core.next.call(null, seq__15959__$1);
          var G__16026 = null;
          var G__16027 = 0;
          var G__16028 = 0;
          seq__15959 = G__16025;
          chunk__15964 = G__16026;
          count__15965 = G__16027;
          i__15966 = G__16028;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide15.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide15.cell_size * t3tr0s_slides.slide15.cols, t3tr0s_slides.slide15.cell_size * t3tr0s_slides.slide15.rows);
  ctx.fillStyle = t3tr0s_slides.slide15.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide15.light_green;
  return t3tr0s_slides.slide15.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
};
var ufv___16046 = schema.utils.use_fn_validation;
var output_schema16030_16047 = schema.core.Any;
var input_schema16031_16048 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker16032_16049 = schema.core.checker.call(null, input_schema16031_16048);
var output_checker16033_16050 = schema.core.checker.call(null, output_schema16030_16047);
t3tr0s_slides.slide15.canvas = function(ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050) {
  return function canvas(G__16034, G__16035) {
    var validate__5821__auto__ = ufv___16046.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___16051 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__16034, G__16035], null);
      var temp__4126__auto___16052 = input_checker16032_16049.call(null, args__5822__auto___16051);
      if (cljs.core.truth_(temp__4126__auto___16052)) {
        var error__5823__auto___16053 = temp__4126__auto___16052;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___16053)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema16031_16048, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___16051, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___16053], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__16034;
      var owner = G__16035;
      while (true) {
        if (typeof t3tr0s_slides.slide15.t16041 !== "undefined") {
        } else {
          t3tr0s_slides.slide15.t16041 = function(G__16035, owner, output_checker16033, validate__5821__auto__, input_schema16031, G__16034, canvas, app, output_schema16030, input_checker16032, ufv__, meta16042) {
            this.G__16035 = G__16035;
            this.owner = owner;
            this.output_checker16033 = output_checker16033;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema16031 = input_schema16031;
            this.G__16034 = G__16034;
            this.canvas = canvas;
            this.app = app;
            this.output_schema16030 = output_schema16030;
            this.input_checker16032 = input_checker16032;
            this.ufv__ = ufv__;
            this.meta16042 = meta16042;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide15.t16041.cljs$lang$type = true;
          t3tr0s_slides.slide15.t16041.cljs$lang$ctorStr = "t3tr0s-slides.slide15/t16041";
          t3tr0s_slides.slide15.t16041.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide15/t16041");
            };
          }(validate__5821__auto__, ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050);
          t3tr0s_slides.slide15.t16041.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide15.t16041.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas"}));
            };
          }(validate__5821__auto__, ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050);
          t3tr0s_slides.slide15.t16041.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide15.t16041.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide15.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050);
          t3tr0s_slides.slide15.t16041.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide15.t16041.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide15.cols * t3tr0s_slides.slide15.cell_size;
              canvas__$2.height = t3tr0s_slides.slide15.rows * t3tr0s_slides.slide15.cell_size;
              return t3tr0s_slides.slide15.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050);
          t3tr0s_slides.slide15.t16041.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050) {
            return function(_16043) {
              var self__ = this;
              var _16043__$1 = this;
              return self__.meta16042;
            };
          }(validate__5821__auto__, ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050);
          t3tr0s_slides.slide15.t16041.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050) {
            return function(_16043, meta16042__$1) {
              var self__ = this;
              var _16043__$1 = this;
              return new t3tr0s_slides.slide15.t16041(self__.G__16035, self__.owner, self__.output_checker16033, self__.validate__5821__auto__, self__.input_schema16031, self__.G__16034, self__.canvas, self__.app, self__.output_schema16030, self__.input_checker16032, self__.ufv__, meta16042__$1);
            };
          }(validate__5821__auto__, ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050);
          t3tr0s_slides.slide15.__GT_t16041 = function(validate__5821__auto__, ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050) {
            return function __GT_t16041(G__16035__$1, owner__$1, output_checker16033__$1, validate__5821__auto____$1, input_schema16031__$1, G__16034__$1, canvas__$1, app__$1, output_schema16030__$1, input_checker16032__$1, ufv____$1, meta16042) {
              return new t3tr0s_slides.slide15.t16041(G__16035__$1, owner__$1, output_checker16033__$1, validate__5821__auto____$1, input_schema16031__$1, G__16034__$1, canvas__$1, app__$1, output_schema16030__$1, input_checker16032__$1, ufv____$1, meta16042);
            };
          }(validate__5821__auto__, ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050);
        }
        return new t3tr0s_slides.slide15.t16041(G__16035, owner, output_checker16033_16050, validate__5821__auto__, input_schema16031_16048, G__16034, canvas, app, output_schema16030_16047, input_checker16032_16049, ufv___16046, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___16054 = output_checker16033_16050.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___16054)) {
        var error__5823__auto___16055 = temp__4126__auto___16054;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___16055)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema16030_16047, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___16055], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___16046, output_schema16030_16047, input_schema16031_16048, input_checker16032_16049, output_checker16033_16050);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide15.canvas), schema.core.make_fn_schema.call(null, output_schema16030_16047, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema16031_16048], null)));
t3tr0s_slides.slide15.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide15.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m16029) {
    return om.core.build.call(null, t3tr0s_slides.slide15.canvas, cursor__9685__auto__, m16029);
  };
  __GT_canvas = function(cursor__9685__auto__, m16029) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m16029);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___16073 = schema.utils.use_fn_validation;
var output_schema16057_16074 = schema.core.Any;
var input_schema16058_16075 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker16059_16076 = schema.core.checker.call(null, input_schema16058_16075);
var output_checker16060_16077 = schema.core.checker.call(null, output_schema16057_16074);
t3tr0s_slides.slide15.slide = function(ufv___16073, output_schema16057_16074, input_schema16058_16075, input_checker16059_16076, output_checker16060_16077) {
  return function slide(G__16061, G__16062) {
    var validate__5821__auto__ = ufv___16073.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___16078 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__16061, G__16062], null);
      var temp__4126__auto___16079 = input_checker16059_16076.call(null, args__5822__auto___16078);
      if (cljs.core.truth_(temp__4126__auto___16079)) {
        var error__5823__auto___16080 = temp__4126__auto___16079;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___16080)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema16058_16075, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___16078, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___16080], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__16061;
      var owner = G__16062;
      while (true) {
        if (typeof t3tr0s_slides.slide15.t16068 !== "undefined") {
        } else {
          t3tr0s_slides.slide15.t16068 = function(owner, G__16062, input_schema16058, output_checker16060, validate__5821__auto__, input_checker16059, output_schema16057, G__16061, slide, app, ufv__, meta16069) {
            this.owner = owner;
            this.G__16062 = G__16062;
            this.input_schema16058 = input_schema16058;
            this.output_checker16060 = output_checker16060;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker16059 = input_checker16059;
            this.output_schema16057 = output_schema16057;
            this.G__16061 = G__16061;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta16069 = meta16069;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide15.t16068.cljs$lang$type = true;
          t3tr0s_slides.slide15.t16068.cljs$lang$ctorStr = "t3tr0s-slides.slide15/t16068";
          t3tr0s_slides.slide15.t16068.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___16073, output_schema16057_16074, input_schema16058_16075, input_checker16059_16076, output_checker16060_16077) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide15/t16068");
            };
          }(validate__5821__auto__, ufv___16073, output_schema16057_16074, input_schema16058_16075, input_checker16059_16076, output_checker16060_16077);
          t3tr0s_slides.slide15.t16068.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide15.t16068.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___16073, output_schema16057_16074, input_schema16058_16075, input_checker16059_16076, output_checker16060_16077) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "That's all for now..."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide15.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide15.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___16073, output_schema16057_16074, input_schema16058_16075, input_checker16059_16076, output_checker16060_16077);
          t3tr0s_slides.slide15.t16068.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___16073, output_schema16057_16074, input_schema16058_16075, input_checker16059_16076, output_checker16060_16077) {
            return function(_16070) {
              var self__ = this;
              var _16070__$1 = this;
              return self__.meta16069;
            };
          }(validate__5821__auto__, ufv___16073, output_schema16057_16074, input_schema16058_16075, input_checker16059_16076, output_checker16060_16077);
          t3tr0s_slides.slide15.t16068.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___16073, output_schema16057_16074, input_schema16058_16075, input_checker16059_16076, output_checker16060_16077) {
            return function(_16070, meta16069__$1) {
              var self__ = this;
              var _16070__$1 = this;
              return new t3tr0s_slides.slide15.t16068(self__.owner, self__.G__16062, self__.input_schema16058, self__.output_checker16060, self__.validate__5821__auto__, self__.input_checker16059, self__.output_schema16057, self__.G__16061, self__.slide, self__.app, self__.ufv__, meta16069__$1);
            };
          }(validate__5821__auto__, ufv___16073, output_schema16057_16074, input_schema16058_16075, input_checker16059_16076, output_checker16060_16077);
          t3tr0s_slides.slide15.__GT_t16068 = function(validate__5821__auto__, ufv___16073, output_schema16057_16074, input_schema16058_16075, input_checker16059_16076, output_checker16060_16077) {
            return function __GT_t16068(owner__$1, G__16062__$1, input_schema16058__$1, output_checker16060__$1, validate__5821__auto____$1, input_checker16059__$1, output_schema16057__$1, G__16061__$1, slide__$1, app__$1, ufv____$1, meta16069) {
              return new t3tr0s_slides.slide15.t16068(owner__$1, G__16062__$1, input_schema16058__$1, output_checker16060__$1, validate__5821__auto____$1, input_checker16059__$1, output_schema16057__$1, G__16061__$1, slide__$1, app__$1, ufv____$1, meta16069);
            };
          }(validate__5821__auto__, ufv___16073, output_schema16057_16074, input_schema16058_16075, input_checker16059_16076, output_checker16060_16077);
        }
        return new t3tr0s_slides.slide15.t16068(owner, G__16062, input_schema16058_16075, output_checker16060_16077, validate__5821__auto__, input_checker16059_16076, output_schema16057_16074, G__16061, slide, app, ufv___16073, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___16081 = output_checker16060_16077.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___16081)) {
        var error__5823__auto___16082 = temp__4126__auto___16081;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___16082)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema16057_16074, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___16082], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___16073, output_schema16057_16074, input_schema16058_16075, input_checker16059_16076, output_checker16060_16077);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide15.slide), schema.core.make_fn_schema.call(null, output_schema16057_16074, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema16058_16075], null)));
t3tr0s_slides.slide15.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide15.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m16056) {
    return om.core.build.call(null, t3tr0s_slides.slide15.slide, cursor__9685__auto__, m16056);
  };
  __GT_slide = function(cursor__9685__auto__, m16056) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m16056);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide15.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide15.slide, t3tr0s_slides.slide15.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide15.resume = function resume() {
  return null;
};
t3tr0s_slides.slide15.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide08");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide08.dark_green = "#143";
t3tr0s_slides.slide08.light_green = "#175";
t3tr0s_slides.slide08.dark_purple = "#449";
t3tr0s_slides.slide08.light_purple = "#6ad";
t3tr0s_slides.slide08.dark_red = "#944";
t3tr0s_slides.slide08.light_red = "#f8c";
t3tr0s_slides.slide08.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide08.rotate_coord = function rotate_coord(p__45865) {
  var vec__45867 = p__45865;
  var x = cljs.core.nth.call(null, vec__45867, 0, null);
  var y = cljs.core.nth.call(null, vec__45867, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide08.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide08.rotate_coord, piece);
};
t3tr0s_slides.slide08.rows = 20;
t3tr0s_slides.slide08.cols = 10;
t3tr0s_slides.slide08.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide08.cols, 0));
t3tr0s_slides.slide08.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide08.rows, t3tr0s_slides.slide08.empty_row));
t3tr0s_slides.slide08.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 0, 0, 0, 0, 0, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 0, 0, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 0, 1, 0, 1, 1, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide08.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide08.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide08.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide08.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide08.initial_pos], null));
t3tr0s_slides.slide08.write_piece = function write_piece(board, coords, p__45868) {
  while (true) {
    var vec__45872 = p__45868;
    var cx = cljs.core.nth.call(null, vec__45872, 0, null);
    var cy = cljs.core.nth.call(null, vec__45872, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__45873 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__45873, 0, null);
      var y = cljs.core.nth.call(null, vec__45873, 1, null);
      var G__45875 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e45874) {
          if (e45874 instanceof Error) {
            var _ = e45874;
            return board;
          } else {
            throw e45874;
          }
        }
      }();
      var G__45876 = cljs.core.rest.call(null, coords);
      var G__45877 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__45875;
      coords = G__45876;
      p__45868 = G__45877;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide08.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__45879 = cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state);
  var map__45879__$1 = cljs.core.seq_QMARK_.call(null, map__45879) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45879) : map__45879;
  var position = cljs.core.get.call(null, map__45879__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__45879__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide08.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide08.write_piece, piece, position);
};
t3tr0s_slides.slide08.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__45880) {
  var vec__45884 = p__45880;
  var cx = cljs.core.nth.call(null, vec__45884, 0, null);
  var cy = cljs.core.nth.call(null, vec__45884, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__45884, cx, cy) {
    return function(p__45885) {
      var vec__45886 = p__45885;
      var x = cljs.core.nth.call(null, vec__45886, 0, null);
      var y = cljs.core.nth.call(null, vec__45886, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__45884, cx, cy), piece);
};
t3tr0s_slides.slide08.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide08.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide08.app_state))));
};
t3tr0s_slides.slide08.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__45891(s__45892) {
      return new cljs.core.LazySeq(null, function() {
        var s__45892__$1 = s__45892;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__45892__$1);
          if (temp__4126__auto__) {
            var s__45892__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__45892__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__45892__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__45894 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__45893 = 0;
                while (true) {
                  if (i__45893 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__45893);
                    cljs.core.chunk_append.call(null, b__45894, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))));
                    var G__45895 = i__45893 + 1;
                    i__45893 = G__45895;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__45894), iter__45891.call(null, cljs.core.chunk_rest.call(null, s__45892__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__45894), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__45892__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))), iter__45891.call(null, cljs.core.rest.call(null, s__45892__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide08.cols));
  }(), " ]"], null);
};
var ufv___45915 = schema.utils.use_fn_validation;
var output_schema45897_45916 = schema.core.Any;
var input_schema45898_45917 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker45899_45918 = schema.core.checker.call(null, input_schema45898_45917);
var output_checker45900_45919 = schema.core.checker.call(null, output_schema45897_45916);
t3tr0s_slides.slide08.code = function(ufv___45915, output_schema45897_45916, input_schema45898_45917, input_checker45899_45918, output_checker45900_45919) {
  return function code(G__45901, G__45902) {
    var validate__5821__auto__ = ufv___45915.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___45920 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__45901, G__45902], null);
      var temp__4126__auto___45921 = input_checker45899_45918.call(null, args__5822__auto___45920);
      if (cljs.core.truth_(temp__4126__auto___45921)) {
        var error__5823__auto___45922 = temp__4126__auto___45921;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___45922)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema45898_45917, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___45920, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___45922], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__45901;
      var owner = G__45902;
      while (true) {
        if (typeof t3tr0s_slides.slide08.t45909 !== "undefined") {
        } else {
          t3tr0s_slides.slide08.t45909 = function(input_schema45898, owner, output_checker45900, validate__5821__auto__, input_checker45899, G__45902, G__45901, app, ufv__, code, output_schema45897, meta45910) {
            this.input_schema45898 = input_schema45898;
            this.owner = owner;
            this.output_checker45900 = output_checker45900;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker45899 = input_checker45899;
            this.G__45902 = G__45902;
            this.G__45901 = G__45901;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.output_schema45897 = output_schema45897;
            this.meta45910 = meta45910;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide08.t45909.cljs$lang$type = true;
          t3tr0s_slides.slide08.t45909.cljs$lang$ctorStr = "t3tr0s-slides.slide08/t45909";
          t3tr0s_slides.slide08.t45909.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___45915, output_schema45897_45916, input_schema45898_45917, input_checker45899_45918, output_checker45900_45919) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide08/t45909");
            };
          }(validate__5821__auto__, ufv___45915, output_schema45897_45916, input_schema45898_45917, input_checker45899_45918, output_checker45900_45919);
          t3tr0s_slides.slide08.t45909.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide08.t45909.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___45915, output_schema45897_45916, input_schema45898_45917, input_checker45899_45918, output_checker45900_45919) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs45912 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: move the piece on the right");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs45912) ? sablono.interpreter.attributes.call(null, attrs45912) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45912) ? cljs.core.PersistentVector.fromArray(["\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " piece-fits?\n", "  [board piece [cx cy]]\n", "  (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "every?")), "\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "fn")), " [[x y]]\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "zero?")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "get-in")), " board [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "+")), " y cy) (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x cx)])))\n", "    piece))\n", "\n\n", "\x3e (piece-fits? board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":T")), " pieces) ", sablono.interpreter.interpret.call(null, function() {
                  var vec__45913 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state));
                  var x = cljs.core.nth.call(null, vec__45913, 0, null);
                  var y = cljs.core.nth.call(null, vec__45913, 1, null);
                  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), t3tr0s_slides.syntax_highlight.lit.call(null, y)), " "), t3tr0s_slides.syntax_highlight.lit.call(null, x)), "[");
                }()), ")\n", "\n", "   ", sablono.interpreter.interpret.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide08.app_piece_fits_QMARK_.call(null))), "\n", "\n"], true) : cljs.core.PersistentVector.fromArray([sablono.interpreter.interpret.call(null, attrs45912), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " piece-fits?\n", "  [board piece [cx cy]]\n", "  (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "every?")), "\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "fn")), " [[x y]]\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "zero?")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "get-in")), " board [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "+")), " y cy) (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x cx)])))\n", "    piece))\n", "\n\n", "\x3e (piece-fits? board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":T")), " pieces) ", sablono.interpreter.interpret.call(null, function() {
                  var vec__45914 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state));
                  var x = cljs.core.nth.call(null, vec__45914, 0, null);
                  var y = cljs.core.nth.call(null, vec__45914, 1, null);
                  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), t3tr0s_slides.syntax_highlight.lit.call(null, y)), " "), t3tr0s_slides.syntax_highlight.lit.call(null, x)), "[");
                }()), ")\n", "\n", "   ", sablono.interpreter.interpret.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide08.app_piece_fits_QMARK_.call(null))), "\n", "\n"], true)));
              }()));
            };
          }(validate__5821__auto__, ufv___45915, output_schema45897_45916, input_schema45898_45917, input_checker45899_45918, output_checker45900_45919);
          t3tr0s_slides.slide08.t45909.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___45915, output_schema45897_45916, input_schema45898_45917, input_checker45899_45918, output_checker45900_45919) {
            return function(_45911) {
              var self__ = this;
              var _45911__$1 = this;
              return self__.meta45910;
            };
          }(validate__5821__auto__, ufv___45915, output_schema45897_45916, input_schema45898_45917, input_checker45899_45918, output_checker45900_45919);
          t3tr0s_slides.slide08.t45909.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___45915, output_schema45897_45916, input_schema45898_45917, input_checker45899_45918, output_checker45900_45919) {
            return function(_45911, meta45910__$1) {
              var self__ = this;
              var _45911__$1 = this;
              return new t3tr0s_slides.slide08.t45909(self__.input_schema45898, self__.owner, self__.output_checker45900, self__.validate__5821__auto__, self__.input_checker45899, self__.G__45902, self__.G__45901, self__.app, self__.ufv__, self__.code, self__.output_schema45897, meta45910__$1);
            };
          }(validate__5821__auto__, ufv___45915, output_schema45897_45916, input_schema45898_45917, input_checker45899_45918, output_checker45900_45919);
          t3tr0s_slides.slide08.__GT_t45909 = function(validate__5821__auto__, ufv___45915, output_schema45897_45916, input_schema45898_45917, input_checker45899_45918, output_checker45900_45919) {
            return function __GT_t45909(input_schema45898__$1, owner__$1, output_checker45900__$1, validate__5821__auto____$1, input_checker45899__$1, G__45902__$1, G__45901__$1, app__$1, ufv____$1, code__$1, output_schema45897__$1, meta45910) {
              return new t3tr0s_slides.slide08.t45909(input_schema45898__$1, owner__$1, output_checker45900__$1, validate__5821__auto____$1, input_checker45899__$1, G__45902__$1, G__45901__$1, app__$1, ufv____$1, code__$1, output_schema45897__$1, meta45910);
            };
          }(validate__5821__auto__, ufv___45915, output_schema45897_45916, input_schema45898_45917, input_checker45899_45918, output_checker45900_45919);
        }
        return new t3tr0s_slides.slide08.t45909(input_schema45898_45917, owner, output_checker45900_45919, validate__5821__auto__, input_checker45899_45918, G__45902, G__45901, app, ufv___45915, code, output_schema45897_45916, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___45923 = output_checker45900_45919.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___45923)) {
        var error__5823__auto___45924 = temp__4126__auto___45923;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___45924)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema45897_45916, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___45924], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___45915, output_schema45897_45916, input_schema45898_45917, input_checker45899_45918, output_checker45900_45919);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide08.code), schema.core.make_fn_schema.call(null, output_schema45897_45916, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema45898_45917], null)));
t3tr0s_slides.slide08.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide08.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m45896) {
    return om.core.build.call(null, t3tr0s_slides.slide08.code, cursor__9685__auto__, m45896);
  };
  __GT_code = function(cursor__9685__auto__, m45896) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m45896);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide08.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide08.rows);
t3tr0s_slides.slide08.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__45925, is_center) {
  var vec__45927 = p__45925;
  var x = cljs.core.nth.call(null, vec__45927, 0, null);
  var y = cljs.core.nth.call(null, vec__45927, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide08.cell_size * x;
  var ry = t3tr0s_slides.slide08.cell_size * y;
  var rs = t3tr0s_slides.slide08.cell_size;
  var cx = t3tr0s_slides.slide08.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide08.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide08.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide08.piece_abs_coords = function piece_abs_coords(piece, p__45928) {
  var vec__45932 = p__45928;
  var cx = cljs.core.nth.call(null, vec__45932, 0, null);
  var cy = cljs.core.nth.call(null, vec__45932, 1, null);
  return cljs.core.mapv.call(null, function(vec__45932, cx, cy) {
    return function(p__45933) {
      var vec__45934 = p__45933;
      var x = cljs.core.nth.call(null, vec__45934, 0, null);
      var y = cljs.core.nth.call(null, vec__45934, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__45932, cx, cy), piece);
};
t3tr0s_slides.slide08.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__45941 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide08.piece_abs_coords.call(null, piece, pos)));
  var chunk__45942 = null;
  var count__45943 = 0;
  var i__45944 = 0;
  while (true) {
    if (i__45944 < count__45943) {
      var vec__45945 = cljs.core._nth.call(null, chunk__45942, i__45944);
      var i = cljs.core.nth.call(null, vec__45945, 0, null);
      var c = cljs.core.nth.call(null, vec__45945, 1, null);
      t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__45947 = seq__45941;
      var G__45948 = chunk__45942;
      var G__45949 = count__45943;
      var G__45950 = i__45944 + 1;
      seq__45941 = G__45947;
      chunk__45942 = G__45948;
      count__45943 = G__45949;
      i__45944 = G__45950;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__45941);
      if (temp__4126__auto__) {
        var seq__45941__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__45941__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__45941__$1);
          var G__45951 = cljs.core.chunk_rest.call(null, seq__45941__$1);
          var G__45952 = c__4309__auto__;
          var G__45953 = cljs.core.count.call(null, c__4309__auto__);
          var G__45954 = 0;
          seq__45941 = G__45951;
          chunk__45942 = G__45952;
          count__45943 = G__45953;
          i__45944 = G__45954;
          continue;
        } else {
          var vec__45946 = cljs.core.first.call(null, seq__45941__$1);
          var i = cljs.core.nth.call(null, vec__45946, 0, null);
          var c = cljs.core.nth.call(null, vec__45946, 1, null);
          t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__45955 = cljs.core.next.call(null, seq__45941__$1);
          var G__45956 = null;
          var G__45957 = 0;
          var G__45958 = 0;
          seq__45941 = G__45955;
          chunk__45942 = G__45956;
          count__45943 = G__45957;
          i__45944 = G__45958;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide08.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__45971 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide08.rows));
  var chunk__45976 = null;
  var count__45977 = 0;
  var i__45978 = 0;
  while (true) {
    if (i__45978 < count__45977) {
      var y = cljs.core._nth.call(null, chunk__45976, i__45978);
      var seq__45979_45983 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide08.cols));
      var chunk__45980_45984 = null;
      var count__45981_45985 = 0;
      var i__45982_45986 = 0;
      while (true) {
        if (i__45982_45986 < count__45981_45985) {
          var x_45987 = cljs.core._nth.call(null, chunk__45980_45984, i__45982_45986);
          var v_45988 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_45987], null));
          if (v_45988 === 0) {
          } else {
            t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_45987, y], null), false);
          }
          var G__45989 = seq__45979_45983;
          var G__45990 = chunk__45980_45984;
          var G__45991 = count__45981_45985;
          var G__45992 = i__45982_45986 + 1;
          seq__45979_45983 = G__45989;
          chunk__45980_45984 = G__45990;
          count__45981_45985 = G__45991;
          i__45982_45986 = G__45992;
          continue;
        } else {
          var temp__4126__auto___45993 = cljs.core.seq.call(null, seq__45979_45983);
          if (temp__4126__auto___45993) {
            var seq__45979_45994__$1 = temp__4126__auto___45993;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__45979_45994__$1)) {
              var c__4309__auto___45995 = cljs.core.chunk_first.call(null, seq__45979_45994__$1);
              var G__45996 = cljs.core.chunk_rest.call(null, seq__45979_45994__$1);
              var G__45997 = c__4309__auto___45995;
              var G__45998 = cljs.core.count.call(null, c__4309__auto___45995);
              var G__45999 = 0;
              seq__45979_45983 = G__45996;
              chunk__45980_45984 = G__45997;
              count__45981_45985 = G__45998;
              i__45982_45986 = G__45999;
              continue;
            } else {
              var x_46000 = cljs.core.first.call(null, seq__45979_45994__$1);
              var v_46001 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46000], null));
              if (v_46001 === 0) {
              } else {
                t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46000, y], null), false);
              }
              var G__46002 = cljs.core.next.call(null, seq__45979_45994__$1);
              var G__46003 = null;
              var G__46004 = 0;
              var G__46005 = 0;
              seq__45979_45983 = G__46002;
              chunk__45980_45984 = G__46003;
              count__45981_45985 = G__46004;
              i__45982_45986 = G__46005;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__46006 = seq__45971;
      var G__46007 = chunk__45976;
      var G__46008 = count__45977;
      var G__46009 = i__45978 + 1;
      seq__45971 = G__46006;
      chunk__45976 = G__46007;
      count__45977 = G__46008;
      i__45978 = G__46009;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__45971);
      if (temp__4126__auto__) {
        var seq__45971__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__45971__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__45971__$1);
          var G__46010 = cljs.core.chunk_rest.call(null, seq__45971__$1);
          var G__46011 = c__4309__auto__;
          var G__46012 = cljs.core.count.call(null, c__4309__auto__);
          var G__46013 = 0;
          seq__45971 = G__46010;
          chunk__45976 = G__46011;
          count__45977 = G__46012;
          i__45978 = G__46013;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__45971__$1);
          var seq__45972_46014 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide08.cols));
          var chunk__45973_46015 = null;
          var count__45974_46016 = 0;
          var i__45975_46017 = 0;
          while (true) {
            if (i__45975_46017 < count__45974_46016) {
              var x_46018 = cljs.core._nth.call(null, chunk__45973_46015, i__45975_46017);
              var v_46019 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46018], null));
              if (v_46019 === 0) {
              } else {
                t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46018, y], null), false);
              }
              var G__46020 = seq__45972_46014;
              var G__46021 = chunk__45973_46015;
              var G__46022 = count__45974_46016;
              var G__46023 = i__45975_46017 + 1;
              seq__45972_46014 = G__46020;
              chunk__45973_46015 = G__46021;
              count__45974_46016 = G__46022;
              i__45975_46017 = G__46023;
              continue;
            } else {
              var temp__4126__auto___46024__$1 = cljs.core.seq.call(null, seq__45972_46014);
              if (temp__4126__auto___46024__$1) {
                var seq__45972_46025__$1 = temp__4126__auto___46024__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__45972_46025__$1)) {
                  var c__4309__auto___46026 = cljs.core.chunk_first.call(null, seq__45972_46025__$1);
                  var G__46027 = cljs.core.chunk_rest.call(null, seq__45972_46025__$1);
                  var G__46028 = c__4309__auto___46026;
                  var G__46029 = cljs.core.count.call(null, c__4309__auto___46026);
                  var G__46030 = 0;
                  seq__45972_46014 = G__46027;
                  chunk__45973_46015 = G__46028;
                  count__45974_46016 = G__46029;
                  i__45975_46017 = G__46030;
                  continue;
                } else {
                  var x_46031 = cljs.core.first.call(null, seq__45972_46025__$1);
                  var v_46032 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46031], null));
                  if (v_46032 === 0) {
                  } else {
                    t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46031, y], null), false);
                  }
                  var G__46033 = cljs.core.next.call(null, seq__45972_46025__$1);
                  var G__46034 = null;
                  var G__46035 = 0;
                  var G__46036 = 0;
                  seq__45972_46014 = G__46033;
                  chunk__45973_46015 = G__46034;
                  count__45974_46016 = G__46035;
                  i__45975_46017 = G__46036;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__46037 = cljs.core.next.call(null, seq__45971__$1);
          var G__46038 = null;
          var G__46039 = 0;
          var G__46040 = 0;
          seq__45971 = G__46037;
          chunk__45976 = G__46038;
          count__45977 = G__46039;
          i__45978 = G__46040;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide08.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide08.cell_size * t3tr0s_slides.slide08.cols, t3tr0s_slides.slide08.cell_size * t3tr0s_slides.slide08.rows);
  ctx.fillStyle = t3tr0s_slides.slide08.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide08.light_green;
  t3tr0s_slides.slide08.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var fits = t3tr0s_slides.slide08.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = fits ? t3tr0s_slides.slide08.dark_purple : t3tr0s_slides.slide08.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide08.light_purple : t3tr0s_slides.slide08.light_red;
    return t3tr0s_slides.slide08.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide08.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide08.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide08.cell_size);
  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [col, row], null));
};
var ufv___46055 = schema.utils.use_fn_validation;
var output_schema46043_46056 = schema.core.Any;
var input_schema46044_46057 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker46045_46058 = schema.core.checker.call(null, input_schema46044_46057);
var output_checker46046_46059 = schema.core.checker.call(null, output_schema46043_46056);
t3tr0s_slides.slide08.canvas = function(ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059) {
  return function canvas(G__46047, G__46048) {
    var validate__5821__auto__ = ufv___46055.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___46060 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__46047, G__46048], null);
      var temp__4126__auto___46061 = input_checker46045_46058.call(null, args__5822__auto___46060);
      if (cljs.core.truth_(temp__4126__auto___46061)) {
        var error__5823__auto___46062 = temp__4126__auto___46061;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___46062)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema46044_46057, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___46060, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___46062], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__46047;
      var owner = G__46048;
      while (true) {
        if (typeof t3tr0s_slides.slide08.t46052 !== "undefined") {
        } else {
          t3tr0s_slides.slide08.t46052 = function(owner, input_schema46044, input_checker46045, output_checker46046, validate__5821__auto__, output_schema46043, G__46048, canvas, G__46047, app, ufv__, meta46053) {
            this.owner = owner;
            this.input_schema46044 = input_schema46044;
            this.input_checker46045 = input_checker46045;
            this.output_checker46046 = output_checker46046;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema46043 = output_schema46043;
            this.G__46048 = G__46048;
            this.canvas = canvas;
            this.G__46047 = G__46047;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta46053 = meta46053;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide08.t46052.cljs$lang$type = true;
          t3tr0s_slides.slide08.t46052.cljs$lang$ctorStr = "t3tr0s-slides.slide08/t46052";
          t3tr0s_slides.slide08.t46052.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide08/t46052");
            };
          }(validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059);
          t3tr0s_slides.slide08.t46052.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide08.t46052.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseDown":function(___$1, validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059) {
                return function() {
                  return om.core.transact_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), t3tr0s_slides.slide08.rotate_piece);
                };
              }(___$1, validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059), "onMouseMove":function(___$1, validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059) {
                return function(p1__46041_SHARP_) {
                  return t3tr0s_slides.slide08.canvas_mouse.call(null, self__.app, self__.owner, p1__46041_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059)}));
            };
          }(validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059);
          t3tr0s_slides.slide08.t46052.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide08.t46052.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide08.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059);
          t3tr0s_slides.slide08.t46052.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide08.t46052.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide08.cols * t3tr0s_slides.slide08.cell_size;
              canvas__$2.height = t3tr0s_slides.slide08.rows * t3tr0s_slides.slide08.cell_size;
              return t3tr0s_slides.slide08.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059);
          t3tr0s_slides.slide08.t46052.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059) {
            return function(_46054) {
              var self__ = this;
              var _46054__$1 = this;
              return self__.meta46053;
            };
          }(validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059);
          t3tr0s_slides.slide08.t46052.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059) {
            return function(_46054, meta46053__$1) {
              var self__ = this;
              var _46054__$1 = this;
              return new t3tr0s_slides.slide08.t46052(self__.owner, self__.input_schema46044, self__.input_checker46045, self__.output_checker46046, self__.validate__5821__auto__, self__.output_schema46043, self__.G__46048, self__.canvas, self__.G__46047, self__.app, self__.ufv__, meta46053__$1);
            };
          }(validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059);
          t3tr0s_slides.slide08.__GT_t46052 = function(validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059) {
            return function __GT_t46052(owner__$1, input_schema46044__$1, input_checker46045__$1, output_checker46046__$1, validate__5821__auto____$1, output_schema46043__$1, G__46048__$1, canvas__$1, G__46047__$1, app__$1, ufv____$1, meta46053) {
              return new t3tr0s_slides.slide08.t46052(owner__$1, input_schema46044__$1, input_checker46045__$1, output_checker46046__$1, validate__5821__auto____$1, output_schema46043__$1, G__46048__$1, canvas__$1, G__46047__$1, app__$1, ufv____$1, meta46053);
            };
          }(validate__5821__auto__, ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059);
        }
        return new t3tr0s_slides.slide08.t46052(owner, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059, validate__5821__auto__, output_schema46043_46056, G__46048, canvas, G__46047, app, ufv___46055, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___46063 = output_checker46046_46059.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___46063)) {
        var error__5823__auto___46064 = temp__4126__auto___46063;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___46064)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema46043_46056, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___46064], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___46055, output_schema46043_46056, input_schema46044_46057, input_checker46045_46058, output_checker46046_46059);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide08.canvas), schema.core.make_fn_schema.call(null, output_schema46043_46056, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema46044_46057], null)));
t3tr0s_slides.slide08.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide08.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m46042) {
    return om.core.build.call(null, t3tr0s_slides.slide08.canvas, cursor__9685__auto__, m46042);
  };
  __GT_canvas = function(cursor__9685__auto__, m46042) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m46042);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___46082 = schema.utils.use_fn_validation;
var output_schema46066_46083 = schema.core.Any;
var input_schema46067_46084 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker46068_46085 = schema.core.checker.call(null, input_schema46067_46084);
var output_checker46069_46086 = schema.core.checker.call(null, output_schema46066_46083);
t3tr0s_slides.slide08.slide = function(ufv___46082, output_schema46066_46083, input_schema46067_46084, input_checker46068_46085, output_checker46069_46086) {
  return function slide(G__46070, G__46071) {
    var validate__5821__auto__ = ufv___46082.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___46087 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__46070, G__46071], null);
      var temp__4126__auto___46088 = input_checker46068_46085.call(null, args__5822__auto___46087);
      if (cljs.core.truth_(temp__4126__auto___46088)) {
        var error__5823__auto___46089 = temp__4126__auto___46088;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___46089)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema46067_46084, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___46087, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___46089], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__46070;
      var owner = G__46071;
      while (true) {
        if (typeof t3tr0s_slides.slide08.t46077 !== "undefined") {
        } else {
          t3tr0s_slides.slide08.t46077 = function(owner, validate__5821__auto__, output_schema46066, output_checker46069, input_schema46067, slide, input_checker46068, app, ufv__, G__46070, G__46071, meta46078) {
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema46066 = output_schema46066;
            this.output_checker46069 = output_checker46069;
            this.input_schema46067 = input_schema46067;
            this.slide = slide;
            this.input_checker46068 = input_checker46068;
            this.app = app;
            this.ufv__ = ufv__;
            this.G__46070 = G__46070;
            this.G__46071 = G__46071;
            this.meta46078 = meta46078;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide08.t46077.cljs$lang$type = true;
          t3tr0s_slides.slide08.t46077.cljs$lang$ctorStr = "t3tr0s-slides.slide08/t46077";
          t3tr0s_slides.slide08.t46077.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___46082, output_schema46066_46083, input_schema46067_46084, input_checker46068_46085, output_checker46069_46086) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide08/t46077");
            };
          }(validate__5821__auto__, ufv___46082, output_schema46066_46083, input_schema46067_46084, input_checker46068_46085, output_checker46069_46086);
          t3tr0s_slides.slide08.t46077.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide08.t46077.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___46082, output_schema46066_46083, input_schema46067_46084, input_checker46068_46085, output_checker46069_46086) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "8. Detect collision."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide08.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide08.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___46082, output_schema46066_46083, input_schema46067_46084, input_checker46068_46085, output_checker46069_46086);
          t3tr0s_slides.slide08.t46077.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___46082, output_schema46066_46083, input_schema46067_46084, input_checker46068_46085, output_checker46069_46086) {
            return function(_46079) {
              var self__ = this;
              var _46079__$1 = this;
              return self__.meta46078;
            };
          }(validate__5821__auto__, ufv___46082, output_schema46066_46083, input_schema46067_46084, input_checker46068_46085, output_checker46069_46086);
          t3tr0s_slides.slide08.t46077.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___46082, output_schema46066_46083, input_schema46067_46084, input_checker46068_46085, output_checker46069_46086) {
            return function(_46079, meta46078__$1) {
              var self__ = this;
              var _46079__$1 = this;
              return new t3tr0s_slides.slide08.t46077(self__.owner, self__.validate__5821__auto__, self__.output_schema46066, self__.output_checker46069, self__.input_schema46067, self__.slide, self__.input_checker46068, self__.app, self__.ufv__, self__.G__46070, self__.G__46071, meta46078__$1);
            };
          }(validate__5821__auto__, ufv___46082, output_schema46066_46083, input_schema46067_46084, input_checker46068_46085, output_checker46069_46086);
          t3tr0s_slides.slide08.__GT_t46077 = function(validate__5821__auto__, ufv___46082, output_schema46066_46083, input_schema46067_46084, input_checker46068_46085, output_checker46069_46086) {
            return function __GT_t46077(owner__$1, validate__5821__auto____$1, output_schema46066__$1, output_checker46069__$1, input_schema46067__$1, slide__$1, input_checker46068__$1, app__$1, ufv____$1, G__46070__$1, G__46071__$1, meta46078) {
              return new t3tr0s_slides.slide08.t46077(owner__$1, validate__5821__auto____$1, output_schema46066__$1, output_checker46069__$1, input_schema46067__$1, slide__$1, input_checker46068__$1, app__$1, ufv____$1, G__46070__$1, G__46071__$1, meta46078);
            };
          }(validate__5821__auto__, ufv___46082, output_schema46066_46083, input_schema46067_46084, input_checker46068_46085, output_checker46069_46086);
        }
        return new t3tr0s_slides.slide08.t46077(owner, validate__5821__auto__, output_schema46066_46083, output_checker46069_46086, input_schema46067_46084, slide, input_checker46068_46085, app, ufv___46082, G__46070, G__46071, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___46090 = output_checker46069_46086.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___46090)) {
        var error__5823__auto___46091 = temp__4126__auto___46090;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___46091)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema46066_46083, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___46091], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___46082, output_schema46066_46083, input_schema46067_46084, input_checker46068_46085, output_checker46069_46086);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide08.slide), schema.core.make_fn_schema.call(null, output_schema46066_46083, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema46067_46084], null)));
t3tr0s_slides.slide08.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide08.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m46065) {
    return om.core.build.call(null, t3tr0s_slides.slide08.slide, cursor__9685__auto__, m46065);
  };
  __GT_slide = function(cursor__9685__auto__, m46065) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m46065);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide08.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide08.slide, t3tr0s_slides.slide08.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide08.resume = function resume() {
  return null;
};
t3tr0s_slides.slide08.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide12");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide12.dark_green = "#143";
t3tr0s_slides.slide12.light_green = "#175";
t3tr0s_slides.slide12.dark_purple = "#449";
t3tr0s_slides.slide12.light_purple = "#6ad";
t3tr0s_slides.slide12.dark_red = "#944";
t3tr0s_slides.slide12.light_red = "#f8c";
t3tr0s_slides.slide12.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide12.rotate_coord = function rotate_coord(p__46858) {
  var vec__46860 = p__46858;
  var x = cljs.core.nth.call(null, vec__46860, 0, null);
  var y = cljs.core.nth.call(null, vec__46860, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide12.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide12.rotate_coord, piece);
};
t3tr0s_slides.slide12.rows = 20;
t3tr0s_slides.slide12.cols = 10;
t3tr0s_slides.slide12.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide12.cols, 0));
t3tr0s_slides.slide12.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide12.rows, t3tr0s_slides.slide12.empty_row));
t3tr0s_slides.slide12.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 0, 0, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 0, 1, 1, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], null)], null);
t3tr0s_slides.slide12.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null);
t3tr0s_slides.slide12.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide12.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide12.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide12.initial_pos], null));
t3tr0s_slides.slide12.write_piece = function write_piece(board, coords, p__46861, value) {
  while (true) {
    var vec__46865 = p__46861;
    var cx = cljs.core.nth.call(null, vec__46865, 0, null);
    var cy = cljs.core.nth.call(null, vec__46865, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__46866 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__46866, 0, null);
      var y = cljs.core.nth.call(null, vec__46866, 1, null);
      var G__46868 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), value);
        } catch (e46867) {
          if (e46867 instanceof Error) {
            var _ = e46867;
            return board;
          } else {
            throw e46867;
          }
        }
      }();
      var G__46869 = cljs.core.rest.call(null, coords);
      var G__46870 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      var G__46871 = value;
      board = G__46868;
      coords = G__46869;
      p__46861 = G__46870;
      value = G__46871;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide12.create_drawable_board = function create_drawable_board(board, piece, p__46872) {
  var vec__46874 = p__46872;
  var x = cljs.core.nth.call(null, vec__46874, 0, null);
  var y = cljs.core.nth.call(null, vec__46874, 1, null);
  var gy = t3tr0s_slides.slide12.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  var board1 = t3tr0s_slides.slide12.write_piece.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, gy], null), "G");
  var board2 = t3tr0s_slides.slide12.write_piece.call(null, board1, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null), "P");
  return board2;
};
t3tr0s_slides.slide12.app_drawable_board_BANG_ = function app_drawable_board_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  return t3tr0s_slides.slide12.create_drawable_board.call(null, board, piece, pos);
};
t3tr0s_slides.slide12.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__46876 = cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state);
  var map__46876__$1 = cljs.core.seq_QMARK_.call(null, map__46876) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46876) : map__46876;
  var position = cljs.core.get.call(null, map__46876__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__46876__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide12.write_piece, piece, position, 1);
};
t3tr0s_slides.slide12.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__46877) {
  var vec__46881 = p__46877;
  var cx = cljs.core.nth.call(null, vec__46881, 0, null);
  var cy = cljs.core.nth.call(null, vec__46881, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__46881, cx, cy) {
    return function(p__46882) {
      var vec__46883 = p__46882;
      var x = cljs.core.nth.call(null, vec__46883, 0, null);
      var y = cljs.core.nth.call(null, vec__46883, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__46881, cx, cy), piece);
};
t3tr0s_slides.slide12.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide12.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide12.app_state))));
};
t3tr0s_slides.slide12.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var vec__46885 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var x = cljs.core.nth.call(null, vec__46885, 0, null);
  var y = cljs.core.nth.call(null, vec__46885, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide12.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide12.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var new_piece = t3tr0s_slides.slide12.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide12.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide12.get_drop_pos = function get_drop_pos(board, piece, p__46886) {
  var vec__46888 = p__46886;
  var x = cljs.core.nth.call(null, vec__46888, 0, null);
  var y = cljs.core.nth.call(null, vec__46888, 1, null);
  var collide_QMARK_ = function(vec__46888, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide12.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__46888, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide12.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var vec__46890 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var x = cljs.core.nth.call(null, vec__46890, 0, null);
  var y = cljs.core.nth.call(null, vec__46890, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var ny = t3tr0s_slides.slide12.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  t3tr0s_slides.slide12.lock_piece_BANG_.call(null);
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide12.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide12.pieces)));
};
t3tr0s_slides.slide12.filled_rows = function filled_rows(board) {
  return cljs.core.apply.call(null, cljs.core.hash_set, cljs.core.map.call(null, cljs.core.first, cljs.core.filter.call(null, function(p__46893) {
    var vec__46894 = p__46893;
    var i = cljs.core.nth.call(null, vec__46894, 0, null);
    var row = cljs.core.nth.call(null, vec__46894, 1, null);
    return cljs.core.every_QMARK_.call(null, cljs.core.pos_QMARK_, row);
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board))));
};
t3tr0s_slides.slide12.collapse_rows = function collapse_rows(rows, board) {
  var cleared_board = cljs.core.map.call(null, cljs.core.second, cljs.core.remove.call(null, function(p1__46895_SHARP_) {
    return rows.call(null, cljs.core.first.call(null, p1__46895_SHARP_));
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board)));
  var n = cljs.core.count.call(null, rows);
  var new_board = cljs.core.into.call(null, cljs.core.vec.call(null, cljs.core.repeat.call(null, n, t3tr0s_slides.slide12.empty_row)), cleared_board);
  return new_board;
};
t3tr0s_slides.slide12.data_row = function data_row(board, row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__46900(s__46901) {
      return new cljs.core.LazySeq(null, function() {
        var s__46901__$1 = s__46901;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__46901__$1);
          if (temp__4126__auto__) {
            var s__46901__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__46901__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__46901__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__46903 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__46902 = 0;
                while (true) {
                  if (i__46902 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__46902);
                    cljs.core.chunk_append.call(null, b__46903, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null))));
                    var G__46904 = i__46902 + 1;
                    i__46902 = G__46904;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__46903), iter__46900.call(null, cljs.core.chunk_rest.call(null, s__46901__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__46903), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__46901__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null))), iter__46900.call(null, cljs.core.rest.call(null, s__46901__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide12.cols));
  }(), " ]"], null);
};
var ufv___46920 = schema.utils.use_fn_validation;
var output_schema46906_46921 = schema.core.Any;
var input_schema46907_46922 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker46908_46923 = schema.core.checker.call(null, input_schema46907_46922);
var output_checker46909_46924 = schema.core.checker.call(null, output_schema46906_46921);
t3tr0s_slides.slide12.code = function(ufv___46920, output_schema46906_46921, input_schema46907_46922, input_checker46908_46923, output_checker46909_46924) {
  return function code(G__46910, G__46911) {
    var validate__5821__auto__ = ufv___46920.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___46925 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__46910, G__46911], null);
      var temp__4126__auto___46926 = input_checker46908_46923.call(null, args__5822__auto___46925);
      if (cljs.core.truth_(temp__4126__auto___46926)) {
        var error__5823__auto___46927 = temp__4126__auto___46926;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___46927)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema46907_46922, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___46925, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___46927], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__46910;
      var owner = G__46911;
      while (true) {
        if (typeof t3tr0s_slides.slide12.t46916 !== "undefined") {
        } else {
          t3tr0s_slides.slide12.t46916 = function(G__46911, owner, validate__5821__auto__, input_checker46908, output_checker46909, G__46910, app, input_schema46907, output_schema46906, ufv__, code, meta46917) {
            this.G__46911 = G__46911;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker46908 = input_checker46908;
            this.output_checker46909 = output_checker46909;
            this.G__46910 = G__46910;
            this.app = app;
            this.input_schema46907 = input_schema46907;
            this.output_schema46906 = output_schema46906;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta46917 = meta46917;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide12.t46916.cljs$lang$type = true;
          t3tr0s_slides.slide12.t46916.cljs$lang$ctorStr = "t3tr0s-slides.slide12/t46916";
          t3tr0s_slides.slide12.t46916.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___46920, output_schema46906_46921, input_schema46907_46922, input_checker46908_46923, output_checker46909_46924) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide12/t46916");
            };
          }(validate__5821__auto__, ufv___46920, output_schema46906_46921, input_schema46907_46922, input_checker46908_46923, output_checker46909_46924);
          t3tr0s_slides.slide12.t46916.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide12.t46916.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___46920, output_schema46906_46921, input_schema46907_46922, input_checker46908_46923, output_checker46909_46924) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs46919 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: press space to hard-drop.");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs46919) ? sablono.interpreter.attributes.call(null, attrs46919) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46919) ? cljs.core.PersistentVector.fromArray(["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
                ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " filled-rows\n", "  [board]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "-\x3e\x3e")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "map-indexed")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "vector")), " board)\n", "       (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "filter")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "fn")), " [[i row]] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "every?")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "pos?")), " row)))\n", "       (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "map")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), ")\n", "       (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "apply")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "hash-set")), ")))\n", "\n\n", "\x3e (filled-rows (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
                ":board")), " @game-state))", "\n\n", "    ", sablono.interpreter.interpret.call(null, cljs.core.pr_str.call(null, t3tr0s_slides.slide12.filled_rows.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state))))), "\n"], true) : cljs.core.PersistentVector.fromArray([sablono.interpreter.interpret.call(null, attrs46919), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
                ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " filled-rows\n", "  [board]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "-\x3e\x3e")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "map-indexed")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vector")), " board)\n", "       (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "filter")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "fn")), " [[i row]] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "every?")), " ", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "pos?")), " row)))\n", "       (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "map")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), ")\n", "       (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "apply")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "hash-set")), ")))\n", "\n\n", "\x3e (filled-rows (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " @game-state))", "\n\n", "    ", sablono.interpreter.interpret.call(null, cljs.core.pr_str.call(null, t3tr0s_slides.slide12.filled_rows.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state))))), "\n"], true)));
              }()));
            };
          }(validate__5821__auto__, ufv___46920, output_schema46906_46921, input_schema46907_46922, input_checker46908_46923, output_checker46909_46924);
          t3tr0s_slides.slide12.t46916.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___46920, output_schema46906_46921, input_schema46907_46922, input_checker46908_46923, output_checker46909_46924) {
            return function(_46918) {
              var self__ = this;
              var _46918__$1 = this;
              return self__.meta46917;
            };
          }(validate__5821__auto__, ufv___46920, output_schema46906_46921, input_schema46907_46922, input_checker46908_46923, output_checker46909_46924);
          t3tr0s_slides.slide12.t46916.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___46920, output_schema46906_46921, input_schema46907_46922, input_checker46908_46923, output_checker46909_46924) {
            return function(_46918, meta46917__$1) {
              var self__ = this;
              var _46918__$1 = this;
              return new t3tr0s_slides.slide12.t46916(self__.G__46911, self__.owner, self__.validate__5821__auto__, self__.input_checker46908, self__.output_checker46909, self__.G__46910, self__.app, self__.input_schema46907, self__.output_schema46906, self__.ufv__, self__.code, meta46917__$1);
            };
          }(validate__5821__auto__, ufv___46920, output_schema46906_46921, input_schema46907_46922, input_checker46908_46923, output_checker46909_46924);
          t3tr0s_slides.slide12.__GT_t46916 = function(validate__5821__auto__, ufv___46920, output_schema46906_46921, input_schema46907_46922, input_checker46908_46923, output_checker46909_46924) {
            return function __GT_t46916(G__46911__$1, owner__$1, validate__5821__auto____$1, input_checker46908__$1, output_checker46909__$1, G__46910__$1, app__$1, input_schema46907__$1, output_schema46906__$1, ufv____$1, code__$1, meta46917) {
              return new t3tr0s_slides.slide12.t46916(G__46911__$1, owner__$1, validate__5821__auto____$1, input_checker46908__$1, output_checker46909__$1, G__46910__$1, app__$1, input_schema46907__$1, output_schema46906__$1, ufv____$1, code__$1, meta46917);
            };
          }(validate__5821__auto__, ufv___46920, output_schema46906_46921, input_schema46907_46922, input_checker46908_46923, output_checker46909_46924);
        }
        return new t3tr0s_slides.slide12.t46916(G__46911, owner, validate__5821__auto__, input_checker46908_46923, output_checker46909_46924, G__46910, app, input_schema46907_46922, output_schema46906_46921, ufv___46920, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___46928 = output_checker46909_46924.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___46928)) {
        var error__5823__auto___46929 = temp__4126__auto___46928;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___46929)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema46906_46921, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___46929], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___46920, output_schema46906_46921, input_schema46907_46922, input_checker46908_46923, output_checker46909_46924);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide12.code), schema.core.make_fn_schema.call(null, output_schema46906_46921, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema46907_46922], null)));
t3tr0s_slides.slide12.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide12.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m46905) {
    return om.core.build.call(null, t3tr0s_slides.slide12.code, cursor__9685__auto__, m46905);
  };
  __GT_code = function(cursor__9685__auto__, m46905) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m46905);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide12.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide12.rows);
t3tr0s_slides.slide12.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__46930, is_center) {
  var vec__46932 = p__46930;
  var x = cljs.core.nth.call(null, vec__46932, 0, null);
  var y = cljs.core.nth.call(null, vec__46932, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide12.cell_size * x;
  var ry = t3tr0s_slides.slide12.cell_size * y;
  var rs = t3tr0s_slides.slide12.cell_size;
  var cx = t3tr0s_slides.slide12.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide12.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide12.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide12.piece_abs_coords = function piece_abs_coords(piece, p__46933) {
  var vec__46937 = p__46933;
  var cx = cljs.core.nth.call(null, vec__46937, 0, null);
  var cy = cljs.core.nth.call(null, vec__46937, 1, null);
  return cljs.core.mapv.call(null, function(vec__46937, cx, cy) {
    return function(p__46938) {
      var vec__46939 = p__46938;
      var x = cljs.core.nth.call(null, vec__46939, 0, null);
      var y = cljs.core.nth.call(null, vec__46939, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__46937, cx, cy), piece);
};
t3tr0s_slides.slide12.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__46946 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide12.piece_abs_coords.call(null, piece, pos)));
  var chunk__46947 = null;
  var count__46948 = 0;
  var i__46949 = 0;
  while (true) {
    if (i__46949 < count__46948) {
      var vec__46950 = cljs.core._nth.call(null, chunk__46947, i__46949);
      var i = cljs.core.nth.call(null, vec__46950, 0, null);
      var c = cljs.core.nth.call(null, vec__46950, 1, null);
      t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__46952 = seq__46946;
      var G__46953 = chunk__46947;
      var G__46954 = count__46948;
      var G__46955 = i__46949 + 1;
      seq__46946 = G__46952;
      chunk__46947 = G__46953;
      count__46948 = G__46954;
      i__46949 = G__46955;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__46946);
      if (temp__4126__auto__) {
        var seq__46946__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__46946__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__46946__$1);
          var G__46956 = cljs.core.chunk_rest.call(null, seq__46946__$1);
          var G__46957 = c__4309__auto__;
          var G__46958 = cljs.core.count.call(null, c__4309__auto__);
          var G__46959 = 0;
          seq__46946 = G__46956;
          chunk__46947 = G__46957;
          count__46948 = G__46958;
          i__46949 = G__46959;
          continue;
        } else {
          var vec__46951 = cljs.core.first.call(null, seq__46946__$1);
          var i = cljs.core.nth.call(null, vec__46951, 0, null);
          var c = cljs.core.nth.call(null, vec__46951, 1, null);
          t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__46960 = cljs.core.next.call(null, seq__46946__$1);
          var G__46961 = null;
          var G__46962 = 0;
          var G__46963 = 0;
          seq__46946 = G__46960;
          chunk__46947 = G__46961;
          count__46948 = G__46962;
          i__46949 = G__46963;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide12.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var filled_QMARK_ = t3tr0s_slides.slide12.filled_rows.call(null, board);
  var seq__46976 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide12.rows));
  var chunk__46981 = null;
  var count__46982 = 0;
  var i__46983 = 0;
  while (true) {
    if (i__46983 < count__46982) {
      var y = cljs.core._nth.call(null, chunk__46981, i__46983);
      var seq__46984_46988 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide12.cols));
      var chunk__46985_46989 = null;
      var count__46986_46990 = 0;
      var i__46987_46991 = 0;
      while (true) {
        if (i__46987_46991 < count__46986_46990) {
          var x_46992 = cljs.core._nth.call(null, chunk__46985_46989, i__46987_46991);
          ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
          var v_46993 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46992], null));
          if (v_46993 === 0) {
          } else {
            t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46992, y], null), false);
          }
          var G__46994 = seq__46984_46988;
          var G__46995 = chunk__46985_46989;
          var G__46996 = count__46986_46990;
          var G__46997 = i__46987_46991 + 1;
          seq__46984_46988 = G__46994;
          chunk__46985_46989 = G__46995;
          count__46986_46990 = G__46996;
          i__46987_46991 = G__46997;
          continue;
        } else {
          var temp__4126__auto___46998 = cljs.core.seq.call(null, seq__46984_46988);
          if (temp__4126__auto___46998) {
            var seq__46984_46999__$1 = temp__4126__auto___46998;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__46984_46999__$1)) {
              var c__4309__auto___47000 = cljs.core.chunk_first.call(null, seq__46984_46999__$1);
              var G__47001 = cljs.core.chunk_rest.call(null, seq__46984_46999__$1);
              var G__47002 = c__4309__auto___47000;
              var G__47003 = cljs.core.count.call(null, c__4309__auto___47000);
              var G__47004 = 0;
              seq__46984_46988 = G__47001;
              chunk__46985_46989 = G__47002;
              count__46986_46990 = G__47003;
              i__46987_46991 = G__47004;
              continue;
            } else {
              var x_47005 = cljs.core.first.call(null, seq__46984_46999__$1);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
              var v_47006 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_47005], null));
              if (v_47006 === 0) {
              } else {
                t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_47005, y], null), false);
              }
              var G__47007 = cljs.core.next.call(null, seq__46984_46999__$1);
              var G__47008 = null;
              var G__47009 = 0;
              var G__47010 = 0;
              seq__46984_46988 = G__47007;
              chunk__46985_46989 = G__47008;
              count__46986_46990 = G__47009;
              i__46987_46991 = G__47010;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__47011 = seq__46976;
      var G__47012 = chunk__46981;
      var G__47013 = count__46982;
      var G__47014 = i__46983 + 1;
      seq__46976 = G__47011;
      chunk__46981 = G__47012;
      count__46982 = G__47013;
      i__46983 = G__47014;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__46976);
      if (temp__4126__auto__) {
        var seq__46976__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__46976__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__46976__$1);
          var G__47015 = cljs.core.chunk_rest.call(null, seq__46976__$1);
          var G__47016 = c__4309__auto__;
          var G__47017 = cljs.core.count.call(null, c__4309__auto__);
          var G__47018 = 0;
          seq__46976 = G__47015;
          chunk__46981 = G__47016;
          count__46982 = G__47017;
          i__46983 = G__47018;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__46976__$1);
          var seq__46977_47019 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide12.cols));
          var chunk__46978_47020 = null;
          var count__46979_47021 = 0;
          var i__46980_47022 = 0;
          while (true) {
            if (i__46980_47022 < count__46979_47021) {
              var x_47023 = cljs.core._nth.call(null, chunk__46978_47020, i__46980_47022);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
              var v_47024 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_47023], null));
              if (v_47024 === 0) {
              } else {
                t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_47023, y], null), false);
              }
              var G__47025 = seq__46977_47019;
              var G__47026 = chunk__46978_47020;
              var G__47027 = count__46979_47021;
              var G__47028 = i__46980_47022 + 1;
              seq__46977_47019 = G__47025;
              chunk__46978_47020 = G__47026;
              count__46979_47021 = G__47027;
              i__46980_47022 = G__47028;
              continue;
            } else {
              var temp__4126__auto___47029__$1 = cljs.core.seq.call(null, seq__46977_47019);
              if (temp__4126__auto___47029__$1) {
                var seq__46977_47030__$1 = temp__4126__auto___47029__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__46977_47030__$1)) {
                  var c__4309__auto___47031 = cljs.core.chunk_first.call(null, seq__46977_47030__$1);
                  var G__47032 = cljs.core.chunk_rest.call(null, seq__46977_47030__$1);
                  var G__47033 = c__4309__auto___47031;
                  var G__47034 = cljs.core.count.call(null, c__4309__auto___47031);
                  var G__47035 = 0;
                  seq__46977_47019 = G__47032;
                  chunk__46978_47020 = G__47033;
                  count__46979_47021 = G__47034;
                  i__46980_47022 = G__47035;
                  continue;
                } else {
                  var x_47036 = cljs.core.first.call(null, seq__46977_47030__$1);
                  ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
                  var v_47037 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_47036], null));
                  if (v_47037 === 0) {
                  } else {
                    t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_47036, y], null), false);
                  }
                  var G__47038 = cljs.core.next.call(null, seq__46977_47030__$1);
                  var G__47039 = null;
                  var G__47040 = 0;
                  var G__47041 = 0;
                  seq__46977_47019 = G__47038;
                  chunk__46978_47020 = G__47039;
                  count__46979_47021 = G__47040;
                  i__46980_47022 = G__47041;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__47042 = cljs.core.next.call(null, seq__46976__$1);
          var G__47043 = null;
          var G__47044 = 0;
          var G__47045 = 0;
          seq__46976 = G__47042;
          chunk__46981 = G__47043;
          count__46982 = G__47044;
          i__46983 = G__47045;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide12.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide12.cell_size * t3tr0s_slides.slide12.cols, t3tr0s_slides.slide12.cell_size * t3tr0s_slides.slide12.rows);
  ctx.fillStyle = t3tr0s_slides.slide12.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide12.light_green;
  t3tr0s_slides.slide12.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  ctx.globalAlpha = 1;
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var drop_y = t3tr0s_slides.slide12.get_drop_pos.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state)), piece, pos);
  var drop_pos = cljs.core.assoc.call(null, pos, 1, drop_y);
  var fits = t3tr0s_slides.slide12.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = "#333";
    ctx.strokeStyle = "#666";
    t3tr0s_slides.slide12.draw_piece_BANG_.call(null, ctx, piece, drop_pos);
    ctx.fillStyle = fits ? t3tr0s_slides.slide12.dark_purple : t3tr0s_slides.slide12.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide12.light_purple : t3tr0s_slides.slide12.light_red;
    return t3tr0s_slides.slide12.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide12.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide12.key_name = function key_name(p1__47046_SHARP_) {
  return t3tr0s_slides.slide12.key_names.call(null, p1__47046_SHARP_.keyCode);
};
t3tr0s_slides.slide12.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide12.key_name.call(null, e);
  var G__47048_47049 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__47048_47049) {
    case "space":
      t3tr0s_slides.slide12.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide12.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide12.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide12.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___47068 = schema.utils.use_fn_validation;
var output_schema47052_47069 = schema.core.Any;
var input_schema47053_47070 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker47054_47071 = schema.core.checker.call(null, input_schema47053_47070);
var output_checker47055_47072 = schema.core.checker.call(null, output_schema47052_47069);
t3tr0s_slides.slide12.canvas = function(ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072) {
  return function canvas(G__47056, G__47057) {
    var validate__5821__auto__ = ufv___47068.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___47073 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__47056, G__47057], null);
      var temp__4126__auto___47074 = input_checker47054_47071.call(null, args__5822__auto___47073);
      if (cljs.core.truth_(temp__4126__auto___47074)) {
        var error__5823__auto___47075 = temp__4126__auto___47074;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___47075)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema47053_47070, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___47073, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___47075], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__47056;
      var owner = G__47057;
      while (true) {
        if (typeof t3tr0s_slides.slide12.t47063 !== "undefined") {
        } else {
          t3tr0s_slides.slide12.t47063 = function(output_schema47052, G__47056, output_checker47055, owner, validate__5821__auto__, G__47057, canvas, input_checker47054, input_schema47053, app, ufv__, meta47064) {
            this.output_schema47052 = output_schema47052;
            this.G__47056 = G__47056;
            this.output_checker47055 = output_checker47055;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__47057 = G__47057;
            this.canvas = canvas;
            this.input_checker47054 = input_checker47054;
            this.input_schema47053 = input_schema47053;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta47064 = meta47064;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide12.t47063.cljs$lang$type = true;
          t3tr0s_slides.slide12.t47063.cljs$lang$ctorStr = "t3tr0s-slides.slide12/t47063";
          t3tr0s_slides.slide12.t47063.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide12/t47063");
            };
          }(validate__5821__auto__, ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072);
          t3tr0s_slides.slide12.t47063.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide12.t47063.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072);
          t3tr0s_slides.slide12.t47063.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide12.t47063.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide12.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072);
          t3tr0s_slides.slide12.t47063.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide12.t47063.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide12.cols * t3tr0s_slides.slide12.cell_size;
              canvas__$2.height = t3tr0s_slides.slide12.rows * t3tr0s_slides.slide12.cell_size;
              return t3tr0s_slides.slide12.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072);
          t3tr0s_slides.slide12.t47063.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072) {
            return function(_47065) {
              var self__ = this;
              var _47065__$1 = this;
              return self__.meta47064;
            };
          }(validate__5821__auto__, ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072);
          t3tr0s_slides.slide12.t47063.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072) {
            return function(_47065, meta47064__$1) {
              var self__ = this;
              var _47065__$1 = this;
              return new t3tr0s_slides.slide12.t47063(self__.output_schema47052, self__.G__47056, self__.output_checker47055, self__.owner, self__.validate__5821__auto__, self__.G__47057, self__.canvas, self__.input_checker47054, self__.input_schema47053, self__.app, self__.ufv__, meta47064__$1);
            };
          }(validate__5821__auto__, ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072);
          t3tr0s_slides.slide12.__GT_t47063 = function(validate__5821__auto__, ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072) {
            return function __GT_t47063(output_schema47052__$1, G__47056__$1, output_checker47055__$1, owner__$1, validate__5821__auto____$1, G__47057__$1, canvas__$1, input_checker47054__$1, input_schema47053__$1, app__$1, ufv____$1, meta47064) {
              return new t3tr0s_slides.slide12.t47063(output_schema47052__$1, G__47056__$1, output_checker47055__$1, owner__$1, validate__5821__auto____$1, G__47057__$1, canvas__$1, input_checker47054__$1, input_schema47053__$1, app__$1, ufv____$1, meta47064);
            };
          }(validate__5821__auto__, ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072);
        }
        return new t3tr0s_slides.slide12.t47063(output_schema47052_47069, G__47056, output_checker47055_47072, owner, validate__5821__auto__, G__47057, canvas, input_checker47054_47071, input_schema47053_47070, app, ufv___47068, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___47076 = output_checker47055_47072.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___47076)) {
        var error__5823__auto___47077 = temp__4126__auto___47076;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___47077)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema47052_47069, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___47077], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___47068, output_schema47052_47069, input_schema47053_47070, input_checker47054_47071, output_checker47055_47072);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide12.canvas), schema.core.make_fn_schema.call(null, output_schema47052_47069, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema47053_47070], null)));
t3tr0s_slides.slide12.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide12.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m47051) {
    return om.core.build.call(null, t3tr0s_slides.slide12.canvas, cursor__9685__auto__, m47051);
  };
  __GT_canvas = function(cursor__9685__auto__, m47051) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m47051);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___47095 = schema.utils.use_fn_validation;
var output_schema47079_47096 = schema.core.Any;
var input_schema47080_47097 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker47081_47098 = schema.core.checker.call(null, input_schema47080_47097);
var output_checker47082_47099 = schema.core.checker.call(null, output_schema47079_47096);
t3tr0s_slides.slide12.slide = function(ufv___47095, output_schema47079_47096, input_schema47080_47097, input_checker47081_47098, output_checker47082_47099) {
  return function slide(G__47083, G__47084) {
    var validate__5821__auto__ = ufv___47095.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___47100 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__47083, G__47084], null);
      var temp__4126__auto___47101 = input_checker47081_47098.call(null, args__5822__auto___47100);
      if (cljs.core.truth_(temp__4126__auto___47101)) {
        var error__5823__auto___47102 = temp__4126__auto___47101;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___47102)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema47080_47097, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___47100, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___47102], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__47083;
      var owner = G__47084;
      while (true) {
        if (typeof t3tr0s_slides.slide12.t47090 !== "undefined") {
        } else {
          t3tr0s_slides.slide12.t47090 = function(owner, input_checker47081, validate__5821__auto__, output_schema47079, G__47083, output_checker47082, G__47084, slide, app, ufv__, input_schema47080, meta47091) {
            this.owner = owner;
            this.input_checker47081 = input_checker47081;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema47079 = output_schema47079;
            this.G__47083 = G__47083;
            this.output_checker47082 = output_checker47082;
            this.G__47084 = G__47084;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_schema47080 = input_schema47080;
            this.meta47091 = meta47091;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide12.t47090.cljs$lang$type = true;
          t3tr0s_slides.slide12.t47090.cljs$lang$ctorStr = "t3tr0s-slides.slide12/t47090";
          t3tr0s_slides.slide12.t47090.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___47095, output_schema47079_47096, input_schema47080_47097, input_checker47081_47098, output_checker47082_47099) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide12/t47090");
            };
          }(validate__5821__auto__, ufv___47095, output_schema47079_47096, input_schema47080_47097, input_checker47081_47098, output_checker47082_47099);
          t3tr0s_slides.slide12.t47090.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide12.t47090.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___47095, output_schema47079_47096, input_schema47080_47097, input_checker47081_47098, output_checker47082_47099) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "12. Detect filled rows."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide12.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide12.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___47095, output_schema47079_47096, input_schema47080_47097, input_checker47081_47098, output_checker47082_47099);
          t3tr0s_slides.slide12.t47090.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___47095, output_schema47079_47096, input_schema47080_47097, input_checker47081_47098, output_checker47082_47099) {
            return function(_47092) {
              var self__ = this;
              var _47092__$1 = this;
              return self__.meta47091;
            };
          }(validate__5821__auto__, ufv___47095, output_schema47079_47096, input_schema47080_47097, input_checker47081_47098, output_checker47082_47099);
          t3tr0s_slides.slide12.t47090.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___47095, output_schema47079_47096, input_schema47080_47097, input_checker47081_47098, output_checker47082_47099) {
            return function(_47092, meta47091__$1) {
              var self__ = this;
              var _47092__$1 = this;
              return new t3tr0s_slides.slide12.t47090(self__.owner, self__.input_checker47081, self__.validate__5821__auto__, self__.output_schema47079, self__.G__47083, self__.output_checker47082, self__.G__47084, self__.slide, self__.app, self__.ufv__, self__.input_schema47080, meta47091__$1);
            };
          }(validate__5821__auto__, ufv___47095, output_schema47079_47096, input_schema47080_47097, input_checker47081_47098, output_checker47082_47099);
          t3tr0s_slides.slide12.__GT_t47090 = function(validate__5821__auto__, ufv___47095, output_schema47079_47096, input_schema47080_47097, input_checker47081_47098, output_checker47082_47099) {
            return function __GT_t47090(owner__$1, input_checker47081__$1, validate__5821__auto____$1, output_schema47079__$1, G__47083__$1, output_checker47082__$1, G__47084__$1, slide__$1, app__$1, ufv____$1, input_schema47080__$1, meta47091) {
              return new t3tr0s_slides.slide12.t47090(owner__$1, input_checker47081__$1, validate__5821__auto____$1, output_schema47079__$1, G__47083__$1, output_checker47082__$1, G__47084__$1, slide__$1, app__$1, ufv____$1, input_schema47080__$1, meta47091);
            };
          }(validate__5821__auto__, ufv___47095, output_schema47079_47096, input_schema47080_47097, input_checker47081_47098, output_checker47082_47099);
        }
        return new t3tr0s_slides.slide12.t47090(owner, input_checker47081_47098, validate__5821__auto__, output_schema47079_47096, G__47083, output_checker47082_47099, G__47084, slide, app, ufv___47095, input_schema47080_47097, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___47103 = output_checker47082_47099.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___47103)) {
        var error__5823__auto___47104 = temp__4126__auto___47103;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___47104)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema47079_47096, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___47104], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___47095, output_schema47079_47096, input_schema47080_47097, input_checker47081_47098, output_checker47082_47099);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide12.slide), schema.core.make_fn_schema.call(null, output_schema47079_47096, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema47080_47097], null)));
t3tr0s_slides.slide12.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide12.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m47078) {
    return om.core.build.call(null, t3tr0s_slides.slide12.slide, cursor__9685__auto__, m47078);
  };
  __GT_slide = function(cursor__9685__auto__, m47078) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m47078);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide12.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide12.slide, t3tr0s_slides.slide12.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide12.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide12.key_down);
};
t3tr0s_slides.slide12.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide12.key_down);
};
goog.provide("t3tr0s_slides.slide09");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide09.dark_green = "#143";
t3tr0s_slides.slide09.light_green = "#175";
t3tr0s_slides.slide09.dark_purple = "#449";
t3tr0s_slides.slide09.light_purple = "#6ad";
t3tr0s_slides.slide09.dark_red = "#944";
t3tr0s_slides.slide09.light_red = "#f8c";
t3tr0s_slides.slide09.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide09.rotate_coord = function rotate_coord(p__46092) {
  var vec__46094 = p__46092;
  var x = cljs.core.nth.call(null, vec__46094, 0, null);
  var y = cljs.core.nth.call(null, vec__46094, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide09.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide09.rotate_coord, piece);
};
t3tr0s_slides.slide09.rows = 20;
t3tr0s_slides.slide09.cols = 10;
t3tr0s_slides.slide09.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide09.cols, 0));
t3tr0s_slides.slide09.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide09.rows, t3tr0s_slides.slide09.empty_row));
t3tr0s_slides.slide09.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide09.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null);
t3tr0s_slides.slide09.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide09.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide09.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide09.initial_pos], null));
t3tr0s_slides.slide09.write_piece = function write_piece(board, coords, p__46095) {
  while (true) {
    var vec__46099 = p__46095;
    var cx = cljs.core.nth.call(null, vec__46099, 0, null);
    var cy = cljs.core.nth.call(null, vec__46099, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__46100 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__46100, 0, null);
      var y = cljs.core.nth.call(null, vec__46100, 1, null);
      var G__46102 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e46101) {
          if (e46101 instanceof Error) {
            var _ = e46101;
            return board;
          } else {
            throw e46101;
          }
        }
      }();
      var G__46103 = cljs.core.rest.call(null, coords);
      var G__46104 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__46102;
      coords = G__46103;
      p__46095 = G__46104;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide09.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__46106 = cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state);
  var map__46106__$1 = cljs.core.seq_QMARK_.call(null, map__46106) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46106) : map__46106;
  var position = cljs.core.get.call(null, map__46106__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__46106__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide09.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide09.write_piece, piece, position);
};
t3tr0s_slides.slide09.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__46107) {
  var vec__46111 = p__46107;
  var cx = cljs.core.nth.call(null, vec__46111, 0, null);
  var cy = cljs.core.nth.call(null, vec__46111, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__46111, cx, cy) {
    return function(p__46112) {
      var vec__46113 = p__46112;
      var x = cljs.core.nth.call(null, vec__46113, 0, null);
      var y = cljs.core.nth.call(null, vec__46113, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__46111, cx, cy), piece);
};
t3tr0s_slides.slide09.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide09.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide09.app_state))));
};
t3tr0s_slides.slide09.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var vec__46115 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var x = cljs.core.nth.call(null, vec__46115, 0, null);
  var y = cljs.core.nth.call(null, vec__46115, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide09.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide09.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide09.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var new_piece = t3tr0s_slides.slide09.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide09.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide09.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide09.get_drop_pos = function get_drop_pos(board, piece, p__46116) {
  var vec__46118 = p__46116;
  var x = cljs.core.nth.call(null, vec__46118, 0, null);
  var y = cljs.core.nth.call(null, vec__46118, 1, null);
  var collide_QMARK_ = function(vec__46118, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide09.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__46118, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide09.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var vec__46120 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var x = cljs.core.nth.call(null, vec__46120, 0, null);
  var y = cljs.core.nth.call(null, vec__46120, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var ny = t3tr0s_slides.slide09.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide09.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  return t3tr0s_slides.slide09.lock_piece_BANG_.call(null);
};
var ufv___46136 = schema.utils.use_fn_validation;
var output_schema46122_46137 = schema.core.Any;
var input_schema46123_46138 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker46124_46139 = schema.core.checker.call(null, input_schema46123_46138);
var output_checker46125_46140 = schema.core.checker.call(null, output_schema46122_46137);
t3tr0s_slides.slide09.code = function(ufv___46136, output_schema46122_46137, input_schema46123_46138, input_checker46124_46139, output_checker46125_46140) {
  return function code(G__46126, G__46127) {
    var validate__5821__auto__ = ufv___46136.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___46141 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__46126, G__46127], null);
      var temp__4126__auto___46142 = input_checker46124_46139.call(null, args__5822__auto___46141);
      if (cljs.core.truth_(temp__4126__auto___46142)) {
        var error__5823__auto___46143 = temp__4126__auto___46142;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___46143)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema46123_46138, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___46141, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___46143], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__46126;
      var owner = G__46127;
      while (true) {
        if (typeof t3tr0s_slides.slide09.t46132 !== "undefined") {
        } else {
          t3tr0s_slides.slide09.t46132 = function(input_schema46123, input_checker46124, owner, G__46127, G__46126, output_schema46122, validate__5821__auto__, app, ufv__, code, output_checker46125, meta46133) {
            this.input_schema46123 = input_schema46123;
            this.input_checker46124 = input_checker46124;
            this.owner = owner;
            this.G__46127 = G__46127;
            this.G__46126 = G__46126;
            this.output_schema46122 = output_schema46122;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.output_checker46125 = output_checker46125;
            this.meta46133 = meta46133;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide09.t46132.cljs$lang$type = true;
          t3tr0s_slides.slide09.t46132.cljs$lang$ctorStr = "t3tr0s-slides.slide09/t46132";
          t3tr0s_slides.slide09.t46132.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___46136, output_schema46122_46137, input_schema46123_46138, input_checker46124_46139, output_checker46125_46140) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide09/t46132");
            };
          }(validate__5821__auto__, ufv___46136, output_schema46122_46137, input_schema46123_46138, input_checker46124_46139, output_checker46125_46140);
          t3tr0s_slides.slide09.t46132.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide09.t46132.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___46136, output_schema46122_46137, input_schema46123_46138, input_checker46124_46139, output_checker46125_46140) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs46135 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: press left/right to move.");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs46135) ? sablono.interpreter.attributes.call(null, attrs46135) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46135) ? cljs.core.PersistentVector.fromArray(["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "defn")), " try-shift! [dx]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @game-state)\n", "        [x y] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " @game-state)\n", "        board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
                ":board")), " @game-state)\n", "        new-pos [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x dx) y]]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "when")), " (piece-fits? board piece new-pos)\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state assoc ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
                ":position")), " new-pos))))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " try-rotate! []\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @game-state)\n", "        pos (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
                ":position")), " @game-state)\n", "        board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " @game-state)\n", "        new-piece (rotate-piece piece)]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "when")), " (piece-fits? board new-piece pos)\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state assoc ", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " new-piece))))\n", "\n\n"], true) : cljs.core.PersistentVector.fromArray([sablono.interpreter.interpret.call(null, attrs46135), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " try-shift! [dx]\n", 
                "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @game-state)\n", "        [x y] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " @game-state)\n", "        board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), 
                " @game-state)\n", "        new-pos [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x dx) y]]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "when")), " (piece-fits? board piece new-pos)\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state assoc ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
                ":position")), " new-pos))))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " try-rotate! []\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @game-state)\n", "        pos (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
                ":position")), " @game-state)\n", "        board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " @game-state)\n", "        new-piece (rotate-piece piece)]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "when")), " (piece-fits? board new-piece pos)\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state assoc ", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " new-piece))))\n", "\n\n"], true)));
              }()));
            };
          }(validate__5821__auto__, ufv___46136, output_schema46122_46137, input_schema46123_46138, input_checker46124_46139, output_checker46125_46140);
          t3tr0s_slides.slide09.t46132.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___46136, output_schema46122_46137, input_schema46123_46138, input_checker46124_46139, output_checker46125_46140) {
            return function(_46134) {
              var self__ = this;
              var _46134__$1 = this;
              return self__.meta46133;
            };
          }(validate__5821__auto__, ufv___46136, output_schema46122_46137, input_schema46123_46138, input_checker46124_46139, output_checker46125_46140);
          t3tr0s_slides.slide09.t46132.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___46136, output_schema46122_46137, input_schema46123_46138, input_checker46124_46139, output_checker46125_46140) {
            return function(_46134, meta46133__$1) {
              var self__ = this;
              var _46134__$1 = this;
              return new t3tr0s_slides.slide09.t46132(self__.input_schema46123, self__.input_checker46124, self__.owner, self__.G__46127, self__.G__46126, self__.output_schema46122, self__.validate__5821__auto__, self__.app, self__.ufv__, self__.code, self__.output_checker46125, meta46133__$1);
            };
          }(validate__5821__auto__, ufv___46136, output_schema46122_46137, input_schema46123_46138, input_checker46124_46139, output_checker46125_46140);
          t3tr0s_slides.slide09.__GT_t46132 = function(validate__5821__auto__, ufv___46136, output_schema46122_46137, input_schema46123_46138, input_checker46124_46139, output_checker46125_46140) {
            return function __GT_t46132(input_schema46123__$1, input_checker46124__$1, owner__$1, G__46127__$1, G__46126__$1, output_schema46122__$1, validate__5821__auto____$1, app__$1, ufv____$1, code__$1, output_checker46125__$1, meta46133) {
              return new t3tr0s_slides.slide09.t46132(input_schema46123__$1, input_checker46124__$1, owner__$1, G__46127__$1, G__46126__$1, output_schema46122__$1, validate__5821__auto____$1, app__$1, ufv____$1, code__$1, output_checker46125__$1, meta46133);
            };
          }(validate__5821__auto__, ufv___46136, output_schema46122_46137, input_schema46123_46138, input_checker46124_46139, output_checker46125_46140);
        }
        return new t3tr0s_slides.slide09.t46132(input_schema46123_46138, input_checker46124_46139, owner, G__46127, G__46126, output_schema46122_46137, validate__5821__auto__, app, ufv___46136, code, output_checker46125_46140, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___46144 = output_checker46125_46140.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___46144)) {
        var error__5823__auto___46145 = temp__4126__auto___46144;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___46145)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema46122_46137, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___46145], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___46136, output_schema46122_46137, input_schema46123_46138, input_checker46124_46139, output_checker46125_46140);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide09.code), schema.core.make_fn_schema.call(null, output_schema46122_46137, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema46123_46138], null)));
t3tr0s_slides.slide09.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide09.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m46121) {
    return om.core.build.call(null, t3tr0s_slides.slide09.code, cursor__9685__auto__, m46121);
  };
  __GT_code = function(cursor__9685__auto__, m46121) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m46121);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide09.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide09.rows);
t3tr0s_slides.slide09.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__46146, is_center) {
  var vec__46148 = p__46146;
  var x = cljs.core.nth.call(null, vec__46148, 0, null);
  var y = cljs.core.nth.call(null, vec__46148, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide09.cell_size * x;
  var ry = t3tr0s_slides.slide09.cell_size * y;
  var rs = t3tr0s_slides.slide09.cell_size;
  var cx = t3tr0s_slides.slide09.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide09.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide09.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide09.piece_abs_coords = function piece_abs_coords(piece, p__46149) {
  var vec__46153 = p__46149;
  var cx = cljs.core.nth.call(null, vec__46153, 0, null);
  var cy = cljs.core.nth.call(null, vec__46153, 1, null);
  return cljs.core.mapv.call(null, function(vec__46153, cx, cy) {
    return function(p__46154) {
      var vec__46155 = p__46154;
      var x = cljs.core.nth.call(null, vec__46155, 0, null);
      var y = cljs.core.nth.call(null, vec__46155, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__46153, cx, cy), piece);
};
t3tr0s_slides.slide09.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__46162 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide09.piece_abs_coords.call(null, piece, pos)));
  var chunk__46163 = null;
  var count__46164 = 0;
  var i__46165 = 0;
  while (true) {
    if (i__46165 < count__46164) {
      var vec__46166 = cljs.core._nth.call(null, chunk__46163, i__46165);
      var i = cljs.core.nth.call(null, vec__46166, 0, null);
      var c = cljs.core.nth.call(null, vec__46166, 1, null);
      t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__46168 = seq__46162;
      var G__46169 = chunk__46163;
      var G__46170 = count__46164;
      var G__46171 = i__46165 + 1;
      seq__46162 = G__46168;
      chunk__46163 = G__46169;
      count__46164 = G__46170;
      i__46165 = G__46171;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__46162);
      if (temp__4126__auto__) {
        var seq__46162__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__46162__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__46162__$1);
          var G__46172 = cljs.core.chunk_rest.call(null, seq__46162__$1);
          var G__46173 = c__4309__auto__;
          var G__46174 = cljs.core.count.call(null, c__4309__auto__);
          var G__46175 = 0;
          seq__46162 = G__46172;
          chunk__46163 = G__46173;
          count__46164 = G__46174;
          i__46165 = G__46175;
          continue;
        } else {
          var vec__46167 = cljs.core.first.call(null, seq__46162__$1);
          var i = cljs.core.nth.call(null, vec__46167, 0, null);
          var c = cljs.core.nth.call(null, vec__46167, 1, null);
          t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__46176 = cljs.core.next.call(null, seq__46162__$1);
          var G__46177 = null;
          var G__46178 = 0;
          var G__46179 = 0;
          seq__46162 = G__46176;
          chunk__46163 = G__46177;
          count__46164 = G__46178;
          i__46165 = G__46179;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide09.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__46192 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide09.rows));
  var chunk__46197 = null;
  var count__46198 = 0;
  var i__46199 = 0;
  while (true) {
    if (i__46199 < count__46198) {
      var y = cljs.core._nth.call(null, chunk__46197, i__46199);
      var seq__46200_46204 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide09.cols));
      var chunk__46201_46205 = null;
      var count__46202_46206 = 0;
      var i__46203_46207 = 0;
      while (true) {
        if (i__46203_46207 < count__46202_46206) {
          var x_46208 = cljs.core._nth.call(null, chunk__46201_46205, i__46203_46207);
          var v_46209 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46208], null));
          if (v_46209 === 0) {
          } else {
            t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46208, y], null), false);
          }
          var G__46210 = seq__46200_46204;
          var G__46211 = chunk__46201_46205;
          var G__46212 = count__46202_46206;
          var G__46213 = i__46203_46207 + 1;
          seq__46200_46204 = G__46210;
          chunk__46201_46205 = G__46211;
          count__46202_46206 = G__46212;
          i__46203_46207 = G__46213;
          continue;
        } else {
          var temp__4126__auto___46214 = cljs.core.seq.call(null, seq__46200_46204);
          if (temp__4126__auto___46214) {
            var seq__46200_46215__$1 = temp__4126__auto___46214;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__46200_46215__$1)) {
              var c__4309__auto___46216 = cljs.core.chunk_first.call(null, seq__46200_46215__$1);
              var G__46217 = cljs.core.chunk_rest.call(null, seq__46200_46215__$1);
              var G__46218 = c__4309__auto___46216;
              var G__46219 = cljs.core.count.call(null, c__4309__auto___46216);
              var G__46220 = 0;
              seq__46200_46204 = G__46217;
              chunk__46201_46205 = G__46218;
              count__46202_46206 = G__46219;
              i__46203_46207 = G__46220;
              continue;
            } else {
              var x_46221 = cljs.core.first.call(null, seq__46200_46215__$1);
              var v_46222 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46221], null));
              if (v_46222 === 0) {
              } else {
                t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46221, y], null), false);
              }
              var G__46223 = cljs.core.next.call(null, seq__46200_46215__$1);
              var G__46224 = null;
              var G__46225 = 0;
              var G__46226 = 0;
              seq__46200_46204 = G__46223;
              chunk__46201_46205 = G__46224;
              count__46202_46206 = G__46225;
              i__46203_46207 = G__46226;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__46227 = seq__46192;
      var G__46228 = chunk__46197;
      var G__46229 = count__46198;
      var G__46230 = i__46199 + 1;
      seq__46192 = G__46227;
      chunk__46197 = G__46228;
      count__46198 = G__46229;
      i__46199 = G__46230;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__46192);
      if (temp__4126__auto__) {
        var seq__46192__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__46192__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__46192__$1);
          var G__46231 = cljs.core.chunk_rest.call(null, seq__46192__$1);
          var G__46232 = c__4309__auto__;
          var G__46233 = cljs.core.count.call(null, c__4309__auto__);
          var G__46234 = 0;
          seq__46192 = G__46231;
          chunk__46197 = G__46232;
          count__46198 = G__46233;
          i__46199 = G__46234;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__46192__$1);
          var seq__46193_46235 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide09.cols));
          var chunk__46194_46236 = null;
          var count__46195_46237 = 0;
          var i__46196_46238 = 0;
          while (true) {
            if (i__46196_46238 < count__46195_46237) {
              var x_46239 = cljs.core._nth.call(null, chunk__46194_46236, i__46196_46238);
              var v_46240 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46239], null));
              if (v_46240 === 0) {
              } else {
                t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46239, y], null), false);
              }
              var G__46241 = seq__46193_46235;
              var G__46242 = chunk__46194_46236;
              var G__46243 = count__46195_46237;
              var G__46244 = i__46196_46238 + 1;
              seq__46193_46235 = G__46241;
              chunk__46194_46236 = G__46242;
              count__46195_46237 = G__46243;
              i__46196_46238 = G__46244;
              continue;
            } else {
              var temp__4126__auto___46245__$1 = cljs.core.seq.call(null, seq__46193_46235);
              if (temp__4126__auto___46245__$1) {
                var seq__46193_46246__$1 = temp__4126__auto___46245__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__46193_46246__$1)) {
                  var c__4309__auto___46247 = cljs.core.chunk_first.call(null, seq__46193_46246__$1);
                  var G__46248 = cljs.core.chunk_rest.call(null, seq__46193_46246__$1);
                  var G__46249 = c__4309__auto___46247;
                  var G__46250 = cljs.core.count.call(null, c__4309__auto___46247);
                  var G__46251 = 0;
                  seq__46193_46235 = G__46248;
                  chunk__46194_46236 = G__46249;
                  count__46195_46237 = G__46250;
                  i__46196_46238 = G__46251;
                  continue;
                } else {
                  var x_46252 = cljs.core.first.call(null, seq__46193_46246__$1);
                  var v_46253 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46252], null));
                  if (v_46253 === 0) {
                  } else {
                    t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46252, y], null), false);
                  }
                  var G__46254 = cljs.core.next.call(null, seq__46193_46246__$1);
                  var G__46255 = null;
                  var G__46256 = 0;
                  var G__46257 = 0;
                  seq__46193_46235 = G__46254;
                  chunk__46194_46236 = G__46255;
                  count__46195_46237 = G__46256;
                  i__46196_46238 = G__46257;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__46258 = cljs.core.next.call(null, seq__46192__$1);
          var G__46259 = null;
          var G__46260 = 0;
          var G__46261 = 0;
          seq__46192 = G__46258;
          chunk__46197 = G__46259;
          count__46198 = G__46260;
          i__46199 = G__46261;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide09.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide09.cell_size * t3tr0s_slides.slide09.cols, t3tr0s_slides.slide09.cell_size * t3tr0s_slides.slide09.rows);
  ctx.fillStyle = t3tr0s_slides.slide09.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide09.light_green;
  t3tr0s_slides.slide09.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var fits = t3tr0s_slides.slide09.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = fits ? t3tr0s_slides.slide09.dark_purple : t3tr0s_slides.slide09.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide09.light_purple : t3tr0s_slides.slide09.light_red;
    return t3tr0s_slides.slide09.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide09.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide09.key_name = function key_name(p1__46262_SHARP_) {
  return t3tr0s_slides.slide09.key_names.call(null, p1__46262_SHARP_.keyCode);
};
t3tr0s_slides.slide09.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide09.key_name.call(null, e);
  var G__46264_46265 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__46264_46265) {
    case "up":
      t3tr0s_slides.slide09.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide09.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide09.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___46284 = schema.utils.use_fn_validation;
var output_schema46268_46285 = schema.core.Any;
var input_schema46269_46286 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker46270_46287 = schema.core.checker.call(null, input_schema46269_46286);
var output_checker46271_46288 = schema.core.checker.call(null, output_schema46268_46285);
t3tr0s_slides.slide09.canvas = function(ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288) {
  return function canvas(G__46272, G__46273) {
    var validate__5821__auto__ = ufv___46284.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___46289 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__46272, G__46273], null);
      var temp__4126__auto___46290 = input_checker46270_46287.call(null, args__5822__auto___46289);
      if (cljs.core.truth_(temp__4126__auto___46290)) {
        var error__5823__auto___46291 = temp__4126__auto___46290;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___46291)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema46269_46286, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___46289, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___46291], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__46272;
      var owner = G__46273;
      while (true) {
        if (typeof t3tr0s_slides.slide09.t46279 !== "undefined") {
        } else {
          t3tr0s_slides.slide09.t46279 = function(owner, G__46273, validate__5821__auto__, output_checker46271, G__46272, canvas, output_schema46268, app, input_schema46269, input_checker46270, ufv__, meta46280) {
            this.owner = owner;
            this.G__46273 = G__46273;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker46271 = output_checker46271;
            this.G__46272 = G__46272;
            this.canvas = canvas;
            this.output_schema46268 = output_schema46268;
            this.app = app;
            this.input_schema46269 = input_schema46269;
            this.input_checker46270 = input_checker46270;
            this.ufv__ = ufv__;
            this.meta46280 = meta46280;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide09.t46279.cljs$lang$type = true;
          t3tr0s_slides.slide09.t46279.cljs$lang$ctorStr = "t3tr0s-slides.slide09/t46279";
          t3tr0s_slides.slide09.t46279.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide09/t46279");
            };
          }(validate__5821__auto__, ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288);
          t3tr0s_slides.slide09.t46279.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide09.t46279.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288);
          t3tr0s_slides.slide09.t46279.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide09.t46279.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide09.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288);
          t3tr0s_slides.slide09.t46279.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide09.t46279.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide09.cols * t3tr0s_slides.slide09.cell_size;
              canvas__$2.height = t3tr0s_slides.slide09.rows * t3tr0s_slides.slide09.cell_size;
              return t3tr0s_slides.slide09.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288);
          t3tr0s_slides.slide09.t46279.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288) {
            return function(_46281) {
              var self__ = this;
              var _46281__$1 = this;
              return self__.meta46280;
            };
          }(validate__5821__auto__, ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288);
          t3tr0s_slides.slide09.t46279.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288) {
            return function(_46281, meta46280__$1) {
              var self__ = this;
              var _46281__$1 = this;
              return new t3tr0s_slides.slide09.t46279(self__.owner, self__.G__46273, self__.validate__5821__auto__, self__.output_checker46271, self__.G__46272, self__.canvas, self__.output_schema46268, self__.app, self__.input_schema46269, self__.input_checker46270, self__.ufv__, meta46280__$1);
            };
          }(validate__5821__auto__, ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288);
          t3tr0s_slides.slide09.__GT_t46279 = function(validate__5821__auto__, ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288) {
            return function __GT_t46279(owner__$1, G__46273__$1, validate__5821__auto____$1, output_checker46271__$1, G__46272__$1, canvas__$1, output_schema46268__$1, app__$1, input_schema46269__$1, input_checker46270__$1, ufv____$1, meta46280) {
              return new t3tr0s_slides.slide09.t46279(owner__$1, G__46273__$1, validate__5821__auto____$1, output_checker46271__$1, G__46272__$1, canvas__$1, output_schema46268__$1, app__$1, input_schema46269__$1, input_checker46270__$1, ufv____$1, meta46280);
            };
          }(validate__5821__auto__, ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288);
        }
        return new t3tr0s_slides.slide09.t46279(owner, G__46273, validate__5821__auto__, output_checker46271_46288, G__46272, canvas, output_schema46268_46285, app, input_schema46269_46286, input_checker46270_46287, ufv___46284, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___46292 = output_checker46271_46288.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___46292)) {
        var error__5823__auto___46293 = temp__4126__auto___46292;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___46293)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema46268_46285, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___46293], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___46284, output_schema46268_46285, input_schema46269_46286, input_checker46270_46287, output_checker46271_46288);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide09.canvas), schema.core.make_fn_schema.call(null, output_schema46268_46285, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema46269_46286], null)));
t3tr0s_slides.slide09.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide09.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m46267) {
    return om.core.build.call(null, t3tr0s_slides.slide09.canvas, cursor__9685__auto__, m46267);
  };
  __GT_canvas = function(cursor__9685__auto__, m46267) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m46267);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___46311 = schema.utils.use_fn_validation;
var output_schema46295_46312 = schema.core.Any;
var input_schema46296_46313 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker46297_46314 = schema.core.checker.call(null, input_schema46296_46313);
var output_checker46298_46315 = schema.core.checker.call(null, output_schema46295_46312);
t3tr0s_slides.slide09.slide = function(ufv___46311, output_schema46295_46312, input_schema46296_46313, input_checker46297_46314, output_checker46298_46315) {
  return function slide(G__46299, G__46300) {
    var validate__5821__auto__ = ufv___46311.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___46316 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__46299, G__46300], null);
      var temp__4126__auto___46317 = input_checker46297_46314.call(null, args__5822__auto___46316);
      if (cljs.core.truth_(temp__4126__auto___46317)) {
        var error__5823__auto___46318 = temp__4126__auto___46317;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___46318)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema46296_46313, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___46316, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___46318], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__46299;
      var owner = G__46300;
      while (true) {
        if (typeof t3tr0s_slides.slide09.t46306 !== "undefined") {
        } else {
          t3tr0s_slides.slide09.t46306 = function(G__46300, G__46299, owner, validate__5821__auto__, output_checker46298, input_checker46297, output_schema46295, slide, app, ufv__, input_schema46296, meta46307) {
            this.G__46300 = G__46300;
            this.G__46299 = G__46299;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker46298 = output_checker46298;
            this.input_checker46297 = input_checker46297;
            this.output_schema46295 = output_schema46295;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_schema46296 = input_schema46296;
            this.meta46307 = meta46307;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide09.t46306.cljs$lang$type = true;
          t3tr0s_slides.slide09.t46306.cljs$lang$ctorStr = "t3tr0s-slides.slide09/t46306";
          t3tr0s_slides.slide09.t46306.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___46311, output_schema46295_46312, input_schema46296_46313, input_checker46297_46314, output_checker46298_46315) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide09/t46306");
            };
          }(validate__5821__auto__, ufv___46311, output_schema46295_46312, input_schema46296_46313, input_checker46297_46314, output_checker46298_46315);
          t3tr0s_slides.slide09.t46306.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide09.t46306.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___46311, output_schema46295_46312, input_schema46296_46313, input_checker46297_46314, output_checker46298_46315) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "9. Constrain controls."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide09.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide09.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___46311, output_schema46295_46312, input_schema46296_46313, input_checker46297_46314, output_checker46298_46315);
          t3tr0s_slides.slide09.t46306.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___46311, output_schema46295_46312, input_schema46296_46313, input_checker46297_46314, output_checker46298_46315) {
            return function(_46308) {
              var self__ = this;
              var _46308__$1 = this;
              return self__.meta46307;
            };
          }(validate__5821__auto__, ufv___46311, output_schema46295_46312, input_schema46296_46313, input_checker46297_46314, output_checker46298_46315);
          t3tr0s_slides.slide09.t46306.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___46311, output_schema46295_46312, input_schema46296_46313, input_checker46297_46314, output_checker46298_46315) {
            return function(_46308, meta46307__$1) {
              var self__ = this;
              var _46308__$1 = this;
              return new t3tr0s_slides.slide09.t46306(self__.G__46300, self__.G__46299, self__.owner, self__.validate__5821__auto__, self__.output_checker46298, self__.input_checker46297, self__.output_schema46295, self__.slide, self__.app, self__.ufv__, self__.input_schema46296, meta46307__$1);
            };
          }(validate__5821__auto__, ufv___46311, output_schema46295_46312, input_schema46296_46313, input_checker46297_46314, output_checker46298_46315);
          t3tr0s_slides.slide09.__GT_t46306 = function(validate__5821__auto__, ufv___46311, output_schema46295_46312, input_schema46296_46313, input_checker46297_46314, output_checker46298_46315) {
            return function __GT_t46306(G__46300__$1, G__46299__$1, owner__$1, validate__5821__auto____$1, output_checker46298__$1, input_checker46297__$1, output_schema46295__$1, slide__$1, app__$1, ufv____$1, input_schema46296__$1, meta46307) {
              return new t3tr0s_slides.slide09.t46306(G__46300__$1, G__46299__$1, owner__$1, validate__5821__auto____$1, output_checker46298__$1, input_checker46297__$1, output_schema46295__$1, slide__$1, app__$1, ufv____$1, input_schema46296__$1, meta46307);
            };
          }(validate__5821__auto__, ufv___46311, output_schema46295_46312, input_schema46296_46313, input_checker46297_46314, output_checker46298_46315);
        }
        return new t3tr0s_slides.slide09.t46306(G__46300, G__46299, owner, validate__5821__auto__, output_checker46298_46315, input_checker46297_46314, output_schema46295_46312, slide, app, ufv___46311, input_schema46296_46313, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___46319 = output_checker46298_46315.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___46319)) {
        var error__5823__auto___46320 = temp__4126__auto___46319;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___46320)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema46295_46312, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___46320], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___46311, output_schema46295_46312, input_schema46296_46313, input_checker46297_46314, output_checker46298_46315);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide09.slide), schema.core.make_fn_schema.call(null, output_schema46295_46312, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema46296_46313], null)));
t3tr0s_slides.slide09.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide09.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m46294) {
    return om.core.build.call(null, t3tr0s_slides.slide09.slide, cursor__9685__auto__, m46294);
  };
  __GT_slide = function(cursor__9685__auto__, m46294) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m46294);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide09.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide09.slide, t3tr0s_slides.slide09.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide09.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide09.key_down);
};
t3tr0s_slides.slide09.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide09.key_down);
};
goog.provide("t3tr0s_slides.slide10");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide10.dark_green = "#143";
t3tr0s_slides.slide10.light_green = "#175";
t3tr0s_slides.slide10.dark_purple = "#449";
t3tr0s_slides.slide10.light_purple = "#6ad";
t3tr0s_slides.slide10.dark_red = "#944";
t3tr0s_slides.slide10.light_red = "#f8c";
t3tr0s_slides.slide10.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide10.rotate_coord = function rotate_coord(p__46321) {
  var vec__46323 = p__46321;
  var x = cljs.core.nth.call(null, vec__46323, 0, null);
  var y = cljs.core.nth.call(null, vec__46323, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide10.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide10.rotate_coord, piece);
};
t3tr0s_slides.slide10.rows = 20;
t3tr0s_slides.slide10.cols = 10;
t3tr0s_slides.slide10.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide10.cols, 0));
t3tr0s_slides.slide10.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide10.rows, t3tr0s_slides.slide10.empty_row));
t3tr0s_slides.slide10.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide10.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null);
t3tr0s_slides.slide10.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide10.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide10.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide10.initial_pos], null));
t3tr0s_slides.slide10.write_piece = function write_piece(board, coords, p__46324) {
  while (true) {
    var vec__46328 = p__46324;
    var cx = cljs.core.nth.call(null, vec__46328, 0, null);
    var cy = cljs.core.nth.call(null, vec__46328, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__46329 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__46329, 0, null);
      var y = cljs.core.nth.call(null, vec__46329, 1, null);
      var G__46331 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e46330) {
          if (e46330 instanceof Error) {
            var _ = e46330;
            return board;
          } else {
            throw e46330;
          }
        }
      }();
      var G__46332 = cljs.core.rest.call(null, coords);
      var G__46333 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__46331;
      coords = G__46332;
      p__46324 = G__46333;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide10.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__46335 = cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state);
  var map__46335__$1 = cljs.core.seq_QMARK_.call(null, map__46335) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46335) : map__46335;
  var position = cljs.core.get.call(null, map__46335__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__46335__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide10.write_piece, piece, position);
};
t3tr0s_slides.slide10.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__46336) {
  var vec__46340 = p__46336;
  var cx = cljs.core.nth.call(null, vec__46340, 0, null);
  var cy = cljs.core.nth.call(null, vec__46340, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__46340, cx, cy) {
    return function(p__46341) {
      var vec__46342 = p__46341;
      var x = cljs.core.nth.call(null, vec__46342, 0, null);
      var y = cljs.core.nth.call(null, vec__46342, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__46340, cx, cy), piece);
};
t3tr0s_slides.slide10.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide10.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide10.app_state))));
};
t3tr0s_slides.slide10.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var vec__46344 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var x = cljs.core.nth.call(null, vec__46344, 0, null);
  var y = cljs.core.nth.call(null, vec__46344, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide10.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide10.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var new_piece = t3tr0s_slides.slide10.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide10.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide10.get_drop_pos = function get_drop_pos(board, piece, p__46345) {
  var vec__46347 = p__46345;
  var x = cljs.core.nth.call(null, vec__46347, 0, null);
  var y = cljs.core.nth.call(null, vec__46347, 1, null);
  var collide_QMARK_ = function(vec__46347, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide10.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__46347, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide10.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var vec__46349 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var x = cljs.core.nth.call(null, vec__46349, 0, null);
  var y = cljs.core.nth.call(null, vec__46349, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var ny = t3tr0s_slides.slide10.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  t3tr0s_slides.slide10.lock_piece_BANG_.call(null);
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide10.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide10.pieces)));
};
var ufv___46365 = schema.utils.use_fn_validation;
var output_schema46351_46366 = schema.core.Any;
var input_schema46352_46367 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker46353_46368 = schema.core.checker.call(null, input_schema46352_46367);
var output_checker46354_46369 = schema.core.checker.call(null, output_schema46351_46366);
t3tr0s_slides.slide10.code = function(ufv___46365, output_schema46351_46366, input_schema46352_46367, input_checker46353_46368, output_checker46354_46369) {
  return function code(G__46355, G__46356) {
    var validate__5821__auto__ = ufv___46365.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___46370 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__46355, G__46356], null);
      var temp__4126__auto___46371 = input_checker46353_46368.call(null, args__5822__auto___46370);
      if (cljs.core.truth_(temp__4126__auto___46371)) {
        var error__5823__auto___46372 = temp__4126__auto___46371;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___46372)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema46352_46367, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___46370, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___46372], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__46355;
      var owner = G__46356;
      while (true) {
        if (typeof t3tr0s_slides.slide10.t46361 !== "undefined") {
        } else {
          t3tr0s_slides.slide10.t46361 = function(owner, output_checker46354, input_checker46353, validate__5821__auto__, G__46356, output_schema46351, G__46355, app, input_schema46352, ufv__, code, meta46362) {
            this.owner = owner;
            this.output_checker46354 = output_checker46354;
            this.input_checker46353 = input_checker46353;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__46356 = G__46356;
            this.output_schema46351 = output_schema46351;
            this.G__46355 = G__46355;
            this.app = app;
            this.input_schema46352 = input_schema46352;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta46362 = meta46362;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide10.t46361.cljs$lang$type = true;
          t3tr0s_slides.slide10.t46361.cljs$lang$ctorStr = "t3tr0s-slides.slide10/t46361";
          t3tr0s_slides.slide10.t46361.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___46365, output_schema46351_46366, input_schema46352_46367, input_checker46353_46368, output_checker46354_46369) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide10/t46361");
            };
          }(validate__5821__auto__, ufv___46365, output_schema46351_46366, input_schema46352_46367, input_checker46353_46368, output_checker46354_46369);
          t3tr0s_slides.slide10.t46361.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide10.t46361.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___46365, output_schema46351_46366, input_schema46352_46367, input_checker46353_46368, output_checker46354_46369) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs46364 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: press space to hard-drop.");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs46364) ? sablono.interpreter.attributes.call(null, attrs46364) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46364) ? cljs.core.PersistentVector.fromArray(["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
                ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " get-drop-pos\n", "  [board piece [x y]]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [clear? #(piece-fits? board piece [x %]))\n", "        cy (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), " (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "remove")), " clear? (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "iterate")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "inc")), " y)))]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "max")), " y (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "dec")), " cy))))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " hard-drop! []\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @app-state)\n", "        [x y] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
                ":position")), " @app-state)\n", "        board (:board @app-state)\n", "        ny (get-drop-pos board piece [x y])]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " app-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " [x ny])\n", "    (lock-piece!)))\n", 
                "\n\n"], true) : cljs.core.PersistentVector.fromArray([sablono.interpreter.interpret.call(null, attrs46364), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), 
                " get-drop-pos\n", "  [board piece [x y]]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [clear? #(piece-fits? board piece [x %]))\n", "        cy (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "remove")), " clear? (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "iterate")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "inc")), " y)))]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "max")), " y (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "dec")), " cy))))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " hard-drop! []\n", "  (", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @app-state)\n", "        [x y] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " @app-state)\n", "        board (:board @app-state)\n", "        ny (get-drop-pos board piece [x y])]\n", "    (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " app-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " [x ny])\n", "    (lock-piece!)))\n", "\n\n"], true)));
              }()));
            };
          }(validate__5821__auto__, ufv___46365, output_schema46351_46366, input_schema46352_46367, input_checker46353_46368, output_checker46354_46369);
          t3tr0s_slides.slide10.t46361.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___46365, output_schema46351_46366, input_schema46352_46367, input_checker46353_46368, output_checker46354_46369) {
            return function(_46363) {
              var self__ = this;
              var _46363__$1 = this;
              return self__.meta46362;
            };
          }(validate__5821__auto__, ufv___46365, output_schema46351_46366, input_schema46352_46367, input_checker46353_46368, output_checker46354_46369);
          t3tr0s_slides.slide10.t46361.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___46365, output_schema46351_46366, input_schema46352_46367, input_checker46353_46368, output_checker46354_46369) {
            return function(_46363, meta46362__$1) {
              var self__ = this;
              var _46363__$1 = this;
              return new t3tr0s_slides.slide10.t46361(self__.owner, self__.output_checker46354, self__.input_checker46353, self__.validate__5821__auto__, self__.G__46356, self__.output_schema46351, self__.G__46355, self__.app, self__.input_schema46352, self__.ufv__, self__.code, meta46362__$1);
            };
          }(validate__5821__auto__, ufv___46365, output_schema46351_46366, input_schema46352_46367, input_checker46353_46368, output_checker46354_46369);
          t3tr0s_slides.slide10.__GT_t46361 = function(validate__5821__auto__, ufv___46365, output_schema46351_46366, input_schema46352_46367, input_checker46353_46368, output_checker46354_46369) {
            return function __GT_t46361(owner__$1, output_checker46354__$1, input_checker46353__$1, validate__5821__auto____$1, G__46356__$1, output_schema46351__$1, G__46355__$1, app__$1, input_schema46352__$1, ufv____$1, code__$1, meta46362) {
              return new t3tr0s_slides.slide10.t46361(owner__$1, output_checker46354__$1, input_checker46353__$1, validate__5821__auto____$1, G__46356__$1, output_schema46351__$1, G__46355__$1, app__$1, input_schema46352__$1, ufv____$1, code__$1, meta46362);
            };
          }(validate__5821__auto__, ufv___46365, output_schema46351_46366, input_schema46352_46367, input_checker46353_46368, output_checker46354_46369);
        }
        return new t3tr0s_slides.slide10.t46361(owner, output_checker46354_46369, input_checker46353_46368, validate__5821__auto__, G__46356, output_schema46351_46366, G__46355, app, input_schema46352_46367, ufv___46365, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___46373 = output_checker46354_46369.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___46373)) {
        var error__5823__auto___46374 = temp__4126__auto___46373;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___46374)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema46351_46366, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___46374], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___46365, output_schema46351_46366, input_schema46352_46367, input_checker46353_46368, output_checker46354_46369);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide10.code), schema.core.make_fn_schema.call(null, output_schema46351_46366, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema46352_46367], null)));
t3tr0s_slides.slide10.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide10.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m46350) {
    return om.core.build.call(null, t3tr0s_slides.slide10.code, cursor__9685__auto__, m46350);
  };
  __GT_code = function(cursor__9685__auto__, m46350) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m46350);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide10.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide10.rows);
t3tr0s_slides.slide10.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__46375, is_center) {
  var vec__46377 = p__46375;
  var x = cljs.core.nth.call(null, vec__46377, 0, null);
  var y = cljs.core.nth.call(null, vec__46377, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide10.cell_size * x;
  var ry = t3tr0s_slides.slide10.cell_size * y;
  var rs = t3tr0s_slides.slide10.cell_size;
  var cx = t3tr0s_slides.slide10.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide10.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide10.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide10.piece_abs_coords = function piece_abs_coords(piece, p__46378) {
  var vec__46382 = p__46378;
  var cx = cljs.core.nth.call(null, vec__46382, 0, null);
  var cy = cljs.core.nth.call(null, vec__46382, 1, null);
  return cljs.core.mapv.call(null, function(vec__46382, cx, cy) {
    return function(p__46383) {
      var vec__46384 = p__46383;
      var x = cljs.core.nth.call(null, vec__46384, 0, null);
      var y = cljs.core.nth.call(null, vec__46384, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__46382, cx, cy), piece);
};
t3tr0s_slides.slide10.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__46391 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide10.piece_abs_coords.call(null, piece, pos)));
  var chunk__46392 = null;
  var count__46393 = 0;
  var i__46394 = 0;
  while (true) {
    if (i__46394 < count__46393) {
      var vec__46395 = cljs.core._nth.call(null, chunk__46392, i__46394);
      var i = cljs.core.nth.call(null, vec__46395, 0, null);
      var c = cljs.core.nth.call(null, vec__46395, 1, null);
      t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__46397 = seq__46391;
      var G__46398 = chunk__46392;
      var G__46399 = count__46393;
      var G__46400 = i__46394 + 1;
      seq__46391 = G__46397;
      chunk__46392 = G__46398;
      count__46393 = G__46399;
      i__46394 = G__46400;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__46391);
      if (temp__4126__auto__) {
        var seq__46391__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__46391__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__46391__$1);
          var G__46401 = cljs.core.chunk_rest.call(null, seq__46391__$1);
          var G__46402 = c__4309__auto__;
          var G__46403 = cljs.core.count.call(null, c__4309__auto__);
          var G__46404 = 0;
          seq__46391 = G__46401;
          chunk__46392 = G__46402;
          count__46393 = G__46403;
          i__46394 = G__46404;
          continue;
        } else {
          var vec__46396 = cljs.core.first.call(null, seq__46391__$1);
          var i = cljs.core.nth.call(null, vec__46396, 0, null);
          var c = cljs.core.nth.call(null, vec__46396, 1, null);
          t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__46405 = cljs.core.next.call(null, seq__46391__$1);
          var G__46406 = null;
          var G__46407 = 0;
          var G__46408 = 0;
          seq__46391 = G__46405;
          chunk__46392 = G__46406;
          count__46393 = G__46407;
          i__46394 = G__46408;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide10.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__46421 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide10.rows));
  var chunk__46426 = null;
  var count__46427 = 0;
  var i__46428 = 0;
  while (true) {
    if (i__46428 < count__46427) {
      var y = cljs.core._nth.call(null, chunk__46426, i__46428);
      var seq__46429_46433 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide10.cols));
      var chunk__46430_46434 = null;
      var count__46431_46435 = 0;
      var i__46432_46436 = 0;
      while (true) {
        if (i__46432_46436 < count__46431_46435) {
          var x_46437 = cljs.core._nth.call(null, chunk__46430_46434, i__46432_46436);
          var v_46438 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46437], null));
          if (v_46438 === 0) {
          } else {
            t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46437, y], null), false);
          }
          var G__46439 = seq__46429_46433;
          var G__46440 = chunk__46430_46434;
          var G__46441 = count__46431_46435;
          var G__46442 = i__46432_46436 + 1;
          seq__46429_46433 = G__46439;
          chunk__46430_46434 = G__46440;
          count__46431_46435 = G__46441;
          i__46432_46436 = G__46442;
          continue;
        } else {
          var temp__4126__auto___46443 = cljs.core.seq.call(null, seq__46429_46433);
          if (temp__4126__auto___46443) {
            var seq__46429_46444__$1 = temp__4126__auto___46443;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__46429_46444__$1)) {
              var c__4309__auto___46445 = cljs.core.chunk_first.call(null, seq__46429_46444__$1);
              var G__46446 = cljs.core.chunk_rest.call(null, seq__46429_46444__$1);
              var G__46447 = c__4309__auto___46445;
              var G__46448 = cljs.core.count.call(null, c__4309__auto___46445);
              var G__46449 = 0;
              seq__46429_46433 = G__46446;
              chunk__46430_46434 = G__46447;
              count__46431_46435 = G__46448;
              i__46432_46436 = G__46449;
              continue;
            } else {
              var x_46450 = cljs.core.first.call(null, seq__46429_46444__$1);
              var v_46451 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46450], null));
              if (v_46451 === 0) {
              } else {
                t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46450, y], null), false);
              }
              var G__46452 = cljs.core.next.call(null, seq__46429_46444__$1);
              var G__46453 = null;
              var G__46454 = 0;
              var G__46455 = 0;
              seq__46429_46433 = G__46452;
              chunk__46430_46434 = G__46453;
              count__46431_46435 = G__46454;
              i__46432_46436 = G__46455;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__46456 = seq__46421;
      var G__46457 = chunk__46426;
      var G__46458 = count__46427;
      var G__46459 = i__46428 + 1;
      seq__46421 = G__46456;
      chunk__46426 = G__46457;
      count__46427 = G__46458;
      i__46428 = G__46459;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__46421);
      if (temp__4126__auto__) {
        var seq__46421__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__46421__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__46421__$1);
          var G__46460 = cljs.core.chunk_rest.call(null, seq__46421__$1);
          var G__46461 = c__4309__auto__;
          var G__46462 = cljs.core.count.call(null, c__4309__auto__);
          var G__46463 = 0;
          seq__46421 = G__46460;
          chunk__46426 = G__46461;
          count__46427 = G__46462;
          i__46428 = G__46463;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__46421__$1);
          var seq__46422_46464 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide10.cols));
          var chunk__46423_46465 = null;
          var count__46424_46466 = 0;
          var i__46425_46467 = 0;
          while (true) {
            if (i__46425_46467 < count__46424_46466) {
              var x_46468 = cljs.core._nth.call(null, chunk__46423_46465, i__46425_46467);
              var v_46469 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46468], null));
              if (v_46469 === 0) {
              } else {
                t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46468, y], null), false);
              }
              var G__46470 = seq__46422_46464;
              var G__46471 = chunk__46423_46465;
              var G__46472 = count__46424_46466;
              var G__46473 = i__46425_46467 + 1;
              seq__46422_46464 = G__46470;
              chunk__46423_46465 = G__46471;
              count__46424_46466 = G__46472;
              i__46425_46467 = G__46473;
              continue;
            } else {
              var temp__4126__auto___46474__$1 = cljs.core.seq.call(null, seq__46422_46464);
              if (temp__4126__auto___46474__$1) {
                var seq__46422_46475__$1 = temp__4126__auto___46474__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__46422_46475__$1)) {
                  var c__4309__auto___46476 = cljs.core.chunk_first.call(null, seq__46422_46475__$1);
                  var G__46477 = cljs.core.chunk_rest.call(null, seq__46422_46475__$1);
                  var G__46478 = c__4309__auto___46476;
                  var G__46479 = cljs.core.count.call(null, c__4309__auto___46476);
                  var G__46480 = 0;
                  seq__46422_46464 = G__46477;
                  chunk__46423_46465 = G__46478;
                  count__46424_46466 = G__46479;
                  i__46425_46467 = G__46480;
                  continue;
                } else {
                  var x_46481 = cljs.core.first.call(null, seq__46422_46475__$1);
                  var v_46482 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_46481], null));
                  if (v_46482 === 0) {
                  } else {
                    t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_46481, y], null), false);
                  }
                  var G__46483 = cljs.core.next.call(null, seq__46422_46475__$1);
                  var G__46484 = null;
                  var G__46485 = 0;
                  var G__46486 = 0;
                  seq__46422_46464 = G__46483;
                  chunk__46423_46465 = G__46484;
                  count__46424_46466 = G__46485;
                  i__46425_46467 = G__46486;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__46487 = cljs.core.next.call(null, seq__46421__$1);
          var G__46488 = null;
          var G__46489 = 0;
          var G__46490 = 0;
          seq__46421 = G__46487;
          chunk__46426 = G__46488;
          count__46427 = G__46489;
          i__46428 = G__46490;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide10.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide10.cell_size * t3tr0s_slides.slide10.cols, t3tr0s_slides.slide10.cell_size * t3tr0s_slides.slide10.rows);
  ctx.fillStyle = t3tr0s_slides.slide10.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide10.light_green;
  t3tr0s_slides.slide10.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var fits = t3tr0s_slides.slide10.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = fits ? t3tr0s_slides.slide10.dark_purple : t3tr0s_slides.slide10.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide10.light_purple : t3tr0s_slides.slide10.light_red;
    return t3tr0s_slides.slide10.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide10.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide10.key_name = function key_name(p1__46491_SHARP_) {
  return t3tr0s_slides.slide10.key_names.call(null, p1__46491_SHARP_.keyCode);
};
t3tr0s_slides.slide10.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide10.key_name.call(null, e);
  var G__46493_46494 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__46493_46494) {
    case "space":
      t3tr0s_slides.slide10.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide10.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide10.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide10.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___46513 = schema.utils.use_fn_validation;
var output_schema46497_46514 = schema.core.Any;
var input_schema46498_46515 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker46499_46516 = schema.core.checker.call(null, input_schema46498_46515);
var output_checker46500_46517 = schema.core.checker.call(null, output_schema46497_46514);
t3tr0s_slides.slide10.canvas = function(ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517) {
  return function canvas(G__46501, G__46502) {
    var validate__5821__auto__ = ufv___46513.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___46518 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__46501, G__46502], null);
      var temp__4126__auto___46519 = input_checker46499_46516.call(null, args__5822__auto___46518);
      if (cljs.core.truth_(temp__4126__auto___46519)) {
        var error__5823__auto___46520 = temp__4126__auto___46519;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___46520)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema46498_46515, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___46518, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___46520], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__46501;
      var owner = G__46502;
      while (true) {
        if (typeof t3tr0s_slides.slide10.t46508 !== "undefined") {
        } else {
          t3tr0s_slides.slide10.t46508 = function(input_schema46498, input_checker46499, owner, G__46501, output_checker46500, output_schema46497, validate__5821__auto__, G__46502, canvas, app, ufv__, meta46509) {
            this.input_schema46498 = input_schema46498;
            this.input_checker46499 = input_checker46499;
            this.owner = owner;
            this.G__46501 = G__46501;
            this.output_checker46500 = output_checker46500;
            this.output_schema46497 = output_schema46497;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__46502 = G__46502;
            this.canvas = canvas;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta46509 = meta46509;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide10.t46508.cljs$lang$type = true;
          t3tr0s_slides.slide10.t46508.cljs$lang$ctorStr = "t3tr0s-slides.slide10/t46508";
          t3tr0s_slides.slide10.t46508.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide10/t46508");
            };
          }(validate__5821__auto__, ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517);
          t3tr0s_slides.slide10.t46508.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide10.t46508.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517);
          t3tr0s_slides.slide10.t46508.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide10.t46508.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide10.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517);
          t3tr0s_slides.slide10.t46508.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide10.t46508.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide10.cols * t3tr0s_slides.slide10.cell_size;
              canvas__$2.height = t3tr0s_slides.slide10.rows * t3tr0s_slides.slide10.cell_size;
              return t3tr0s_slides.slide10.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517);
          t3tr0s_slides.slide10.t46508.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517) {
            return function(_46510) {
              var self__ = this;
              var _46510__$1 = this;
              return self__.meta46509;
            };
          }(validate__5821__auto__, ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517);
          t3tr0s_slides.slide10.t46508.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517) {
            return function(_46510, meta46509__$1) {
              var self__ = this;
              var _46510__$1 = this;
              return new t3tr0s_slides.slide10.t46508(self__.input_schema46498, self__.input_checker46499, self__.owner, self__.G__46501, self__.output_checker46500, self__.output_schema46497, self__.validate__5821__auto__, self__.G__46502, self__.canvas, self__.app, self__.ufv__, meta46509__$1);
            };
          }(validate__5821__auto__, ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517);
          t3tr0s_slides.slide10.__GT_t46508 = function(validate__5821__auto__, ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517) {
            return function __GT_t46508(input_schema46498__$1, input_checker46499__$1, owner__$1, G__46501__$1, output_checker46500__$1, output_schema46497__$1, validate__5821__auto____$1, G__46502__$1, canvas__$1, app__$1, ufv____$1, meta46509) {
              return new t3tr0s_slides.slide10.t46508(input_schema46498__$1, input_checker46499__$1, owner__$1, G__46501__$1, output_checker46500__$1, output_schema46497__$1, validate__5821__auto____$1, G__46502__$1, canvas__$1, app__$1, ufv____$1, meta46509);
            };
          }(validate__5821__auto__, ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517);
        }
        return new t3tr0s_slides.slide10.t46508(input_schema46498_46515, input_checker46499_46516, owner, G__46501, output_checker46500_46517, output_schema46497_46514, validate__5821__auto__, G__46502, canvas, app, ufv___46513, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___46521 = output_checker46500_46517.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___46521)) {
        var error__5823__auto___46522 = temp__4126__auto___46521;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___46522)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema46497_46514, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___46522], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___46513, output_schema46497_46514, input_schema46498_46515, input_checker46499_46516, output_checker46500_46517);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide10.canvas), schema.core.make_fn_schema.call(null, output_schema46497_46514, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema46498_46515], null)));
t3tr0s_slides.slide10.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide10.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m46496) {
    return om.core.build.call(null, t3tr0s_slides.slide10.canvas, cursor__9685__auto__, m46496);
  };
  __GT_canvas = function(cursor__9685__auto__, m46496) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m46496);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___46540 = schema.utils.use_fn_validation;
var output_schema46524_46541 = schema.core.Any;
var input_schema46525_46542 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker46526_46543 = schema.core.checker.call(null, input_schema46525_46542);
var output_checker46527_46544 = schema.core.checker.call(null, output_schema46524_46541);
t3tr0s_slides.slide10.slide = function(ufv___46540, output_schema46524_46541, input_schema46525_46542, input_checker46526_46543, output_checker46527_46544) {
  return function slide(G__46528, G__46529) {
    var validate__5821__auto__ = ufv___46540.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___46545 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__46528, G__46529], null);
      var temp__4126__auto___46546 = input_checker46526_46543.call(null, args__5822__auto___46545);
      if (cljs.core.truth_(temp__4126__auto___46546)) {
        var error__5823__auto___46547 = temp__4126__auto___46546;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___46547)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema46525_46542, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___46545, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___46547], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__46528;
      var owner = G__46529;
      while (true) {
        if (typeof t3tr0s_slides.slide10.t46535 !== "undefined") {
        } else {
          t3tr0s_slides.slide10.t46535 = function(output_schema46524, owner, G__46528, output_checker46527, validate__5821__auto__, input_checker46526, input_schema46525, G__46529, slide, app, ufv__, meta46536) {
            this.output_schema46524 = output_schema46524;
            this.owner = owner;
            this.G__46528 = G__46528;
            this.output_checker46527 = output_checker46527;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker46526 = input_checker46526;
            this.input_schema46525 = input_schema46525;
            this.G__46529 = G__46529;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta46536 = meta46536;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide10.t46535.cljs$lang$type = true;
          t3tr0s_slides.slide10.t46535.cljs$lang$ctorStr = "t3tr0s-slides.slide10/t46535";
          t3tr0s_slides.slide10.t46535.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___46540, output_schema46524_46541, input_schema46525_46542, input_checker46526_46543, output_checker46527_46544) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide10/t46535");
            };
          }(validate__5821__auto__, ufv___46540, output_schema46524_46541, input_schema46525_46542, input_checker46526_46543, output_checker46527_46544);
          t3tr0s_slides.slide10.t46535.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide10.t46535.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___46540, output_schema46524_46541, input_schema46525_46542, input_checker46526_46543, output_checker46527_46544) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "10. Add hard-drop."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide10.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide10.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___46540, output_schema46524_46541, input_schema46525_46542, input_checker46526_46543, output_checker46527_46544);
          t3tr0s_slides.slide10.t46535.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___46540, output_schema46524_46541, input_schema46525_46542, input_checker46526_46543, output_checker46527_46544) {
            return function(_46537) {
              var self__ = this;
              var _46537__$1 = this;
              return self__.meta46536;
            };
          }(validate__5821__auto__, ufv___46540, output_schema46524_46541, input_schema46525_46542, input_checker46526_46543, output_checker46527_46544);
          t3tr0s_slides.slide10.t46535.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___46540, output_schema46524_46541, input_schema46525_46542, input_checker46526_46543, output_checker46527_46544) {
            return function(_46537, meta46536__$1) {
              var self__ = this;
              var _46537__$1 = this;
              return new t3tr0s_slides.slide10.t46535(self__.output_schema46524, self__.owner, self__.G__46528, self__.output_checker46527, self__.validate__5821__auto__, self__.input_checker46526, self__.input_schema46525, self__.G__46529, self__.slide, self__.app, self__.ufv__, meta46536__$1);
            };
          }(validate__5821__auto__, ufv___46540, output_schema46524_46541, input_schema46525_46542, input_checker46526_46543, output_checker46527_46544);
          t3tr0s_slides.slide10.__GT_t46535 = function(validate__5821__auto__, ufv___46540, output_schema46524_46541, input_schema46525_46542, input_checker46526_46543, output_checker46527_46544) {
            return function __GT_t46535(output_schema46524__$1, owner__$1, G__46528__$1, output_checker46527__$1, validate__5821__auto____$1, input_checker46526__$1, input_schema46525__$1, G__46529__$1, slide__$1, app__$1, ufv____$1, meta46536) {
              return new t3tr0s_slides.slide10.t46535(output_schema46524__$1, owner__$1, G__46528__$1, output_checker46527__$1, validate__5821__auto____$1, input_checker46526__$1, input_schema46525__$1, G__46529__$1, slide__$1, app__$1, ufv____$1, meta46536);
            };
          }(validate__5821__auto__, ufv___46540, output_schema46524_46541, input_schema46525_46542, input_checker46526_46543, output_checker46527_46544);
        }
        return new t3tr0s_slides.slide10.t46535(output_schema46524_46541, owner, G__46528, output_checker46527_46544, validate__5821__auto__, input_checker46526_46543, input_schema46525_46542, G__46529, slide, app, ufv___46540, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___46548 = output_checker46527_46544.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___46548)) {
        var error__5823__auto___46549 = temp__4126__auto___46548;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___46549)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema46524_46541, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___46549], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___46540, output_schema46524_46541, input_schema46525_46542, input_checker46526_46543, output_checker46527_46544);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide10.slide), schema.core.make_fn_schema.call(null, output_schema46524_46541, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema46525_46542], null)));
t3tr0s_slides.slide10.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide10.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m46523) {
    return om.core.build.call(null, t3tr0s_slides.slide10.slide, cursor__9685__auto__, m46523);
  };
  __GT_slide = function(cursor__9685__auto__, m46523) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m46523);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide10.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide10.slide, t3tr0s_slides.slide10.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide10.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide10.key_down);
};
t3tr0s_slides.slide10.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide10.key_down);
};
goog.provide("t3tr0s_slides.core");
goog.require("cljs.core");
goog.require("t3tr0s_slides.slide10");
goog.require("t3tr0s_slides.slide04");
goog.require("t3tr0s_slides.slide03");
goog.require("t3tr0s_slides.slide10");
goog.require("t3tr0s_slides.slide00");
goog.require("t3tr0s_slides.slide08");
goog.require("t3tr0s_slides.slide08");
goog.require("t3tr0s_slides.slide03");
goog.require("t3tr0s_slides.slide06");
goog.require("t3tr0s_slides.slide11");
goog.require("t3tr0s_slides.slide07");
goog.require("t3tr0s_slides.slide12");
goog.require("t3tr0s_slides.slide09");
goog.require("t3tr0s_slides.slide12");
goog.require("t3tr0s_slides.slide01");
goog.require("t3tr0s_slides.slide11");
goog.require("t3tr0s_slides.slide05");
goog.require("t3tr0s_slides.slide09");
goog.require("t3tr0s_slides.slide01");
goog.require("t3tr0s_slides.slide04");
goog.require("t3tr0s_slides.slide13");
goog.require("t3tr0s_slides.slide13");
goog.require("t3tr0s_slides.slide00");
goog.require("t3tr0s_slides.slide02");
goog.require("t3tr0s_slides.slide14");
goog.require("t3tr0s_slides.slide02");
goog.require("t3tr0s_slides.slide15");
goog.require("t3tr0s_slides.slide07");
goog.require("t3tr0s_slides.slide15");
goog.require("t3tr0s_slides.slide06");
goog.require("t3tr0s_slides.slide14");
goog.require("t3tr0s_slides.slide05");
cljs.core.enable_console_print_BANG_.call(null);
t3tr0s_slides.core.slides = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide00", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide00.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide00.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide00.stop], null), new cljs.core.PersistentArrayMap(null, 
4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide01", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide01.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide01.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide01.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide02", new cljs.core.Keyword(null, "init", "init", -1875481434), 
t3tr0s_slides.slide02.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide02.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide02.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide03", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide03.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide03.resume, new cljs.core.Keyword(null, 
"stop", "stop", -2140911342), t3tr0s_slides.slide03.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide04", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide04.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide04.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide04.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"id", "id", -1388402092), "slide05", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide05.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide05.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide05.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide06", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide06.init, 
new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide06.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide06.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide07", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide07.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide07.resume, new cljs.core.Keyword(null, "stop", 
"stop", -2140911342), t3tr0s_slides.slide07.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide08", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide08.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide08.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide08.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"id", "id", -1388402092), "slide09", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide09.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide09.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide09.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide10", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide10.init, 
new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide10.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide10.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide11", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide11.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide11.resume, new cljs.core.Keyword(null, "stop", 
"stop", -2140911342), t3tr0s_slides.slide11.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide12", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide12.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide12.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide12.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"id", "id", -1388402092), "slide13", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide13.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide13.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide13.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide14", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide14.init, 
new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide14.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide14.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide15", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide15.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide15.resume, new cljs.core.Keyword(null, "stop", 
"stop", -2140911342), t3tr0s_slides.slide15.stop], null)], null);
t3tr0s_slides.core.current_slide = cljs.core.atom.call(null, null);
t3tr0s_slides.core.on_slide_change = function on_slide_change(_, ___$1, i_prev, i) {
  if (cljs.core._EQ_.call(null, i_prev, i)) {
    return null;
  } else {
    var seq__44195_44201 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.core.slides));
    var chunk__44196_44202 = null;
    var count__44197_44203 = 0;
    var i__44198_44204 = 0;
    while (true) {
      if (i__44198_44204 < count__44197_44203) {
        var vec__44199_44205 = cljs.core._nth.call(null, chunk__44196_44202, i__44198_44204);
        var j_44206 = cljs.core.nth.call(null, vec__44199_44205, 0, null);
        var slide_44207 = cljs.core.nth.call(null, vec__44199_44205, 1, null);
        var pos_44208 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((j_44206 - i) * 100 + 50) + "%";
        var elm_44209 = document.getElementById((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(slide_44207));
        if (i_prev == null) {
          $(elm_44209).css({"left":pos_44208});
        } else {
          $(elm_44209).velocity({"left":pos_44208});
        }
        var G__44210 = seq__44195_44201;
        var G__44211 = chunk__44196_44202;
        var G__44212 = count__44197_44203;
        var G__44213 = i__44198_44204 + 1;
        seq__44195_44201 = G__44210;
        chunk__44196_44202 = G__44211;
        count__44197_44203 = G__44212;
        i__44198_44204 = G__44213;
        continue;
      } else {
        var temp__4126__auto___44214 = cljs.core.seq.call(null, seq__44195_44201);
        if (temp__4126__auto___44214) {
          var seq__44195_44215__$1 = temp__4126__auto___44214;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__44195_44215__$1)) {
            var c__4309__auto___44216 = cljs.core.chunk_first.call(null, seq__44195_44215__$1);
            var G__44217 = cljs.core.chunk_rest.call(null, seq__44195_44215__$1);
            var G__44218 = c__4309__auto___44216;
            var G__44219 = cljs.core.count.call(null, c__4309__auto___44216);
            var G__44220 = 0;
            seq__44195_44201 = G__44217;
            chunk__44196_44202 = G__44218;
            count__44197_44203 = G__44219;
            i__44198_44204 = G__44220;
            continue;
          } else {
            var vec__44200_44221 = cljs.core.first.call(null, seq__44195_44215__$1);
            var j_44222 = cljs.core.nth.call(null, vec__44200_44221, 0, null);
            var slide_44223 = cljs.core.nth.call(null, vec__44200_44221, 1, null);
            var pos_44224 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((j_44222 - i) * 100 + 50) + "%";
            var elm_44225 = document.getElementById((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(slide_44223));
            if (i_prev == null) {
              $(elm_44225).css({"left":pos_44224});
            } else {
              $(elm_44225).velocity({"left":pos_44224});
            }
            var G__44226 = cljs.core.next.call(null, seq__44195_44215__$1);
            var G__44227 = null;
            var G__44228 = 0;
            var G__44229 = 0;
            seq__44195_44201 = G__44226;
            chunk__44196_44202 = G__44227;
            count__44197_44203 = G__44228;
            i__44198_44204 = G__44229;
            continue;
          }
        } else {
        }
      }
      break;
    }
    var stop_44230 = (new cljs.core.Keyword(null, "stop", "stop", -2140911342)).cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, t3tr0s_slides.core.slides, i_prev));
    var resume_44231 = (new cljs.core.Keyword(null, "resume", "resume", -118572261)).cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, t3tr0s_slides.core.slides, i));
    if (cljs.core.truth_(stop_44230)) {
      stop_44230.call(null);
    } else {
    }
    if (cljs.core.truth_(resume_44231)) {
      resume_44231.call(null);
    } else {
    }
    return document["location"]["hash"] = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i);
  }
};
cljs.core.add_watch.call(null, t3tr0s_slides.core.current_slide, new cljs.core.Keyword(null, "slide", "slide", 142491892), t3tr0s_slides.core.on_slide_change);
t3tr0s_slides.core.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.core.key_name = function key_name(p1__44232_SHARP_) {
  return t3tr0s_slides.core.key_names.call(null, p1__44232_SHARP_.keyCode);
};
t3tr0s_slides.core.key_down = function key_down(e) {
  var kname = t3tr0s_slides.core.key_name.call(null, e);
  var shift = e.shiftKey;
  var G__44236 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__44236) {
    case "right":
      if (cljs.core.truth_(shift)) {
        cljs.core.swap_BANG_.call(null, t3tr0s_slides.core.current_slide, function(G__44236, kname, shift) {
          return function(p1__44234_SHARP_) {
            var x__3867__auto__ = cljs.core.count.call(null, t3tr0s_slides.core.slides) - 1;
            var y__3868__auto__ = p1__44234_SHARP_ + 1;
            return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
          };
        }(G__44236, kname, shift));
        return e.preventDefault();
      } else {
        return null;
      }
      break;
    case "left":
      if (cljs.core.truth_(shift)) {
        cljs.core.swap_BANG_.call(null, t3tr0s_slides.core.current_slide, function(G__44236, kname, shift) {
          return function(p1__44233_SHARP_) {
            var x__3860__auto__ = 0;
            var y__3861__auto__ = p1__44233_SHARP_ - 1;
            return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
          };
        }(G__44236, kname, shift));
        return e.preventDefault();
      } else {
        return null;
      }
      break;
    default:
      return null;
  }
};
t3tr0s_slides.core.on_hash_change = function on_hash_change() {
  var hash_ = document["location"]["hash"].replace(/^#/, "");
  if (cljs.core._EQ_.call(null, hash_, "")) {
    document["location"]["hash"] = "0";
  } else {
  }
  var slide_number = parseInt(hash_);
  var slide = cljs.core.get.call(null, t3tr0s_slides.core.slides, slide_number);
  if (cljs.core.truth_(slide)) {
    return cljs.core.reset_BANG_.call(null, t3tr0s_slides.core.current_slide, slide_number);
  } else {
    return null;
  }
};
t3tr0s_slides.core.init_slides_BANG_ = function init_slides_BANG_() {
  var seq__44244 = cljs.core.seq.call(null, t3tr0s_slides.core.slides);
  var chunk__44245 = null;
  var count__44246 = 0;
  var i__44247 = 0;
  while (true) {
    if (i__44247 < count__44246) {
      var map__44248 = cljs.core._nth.call(null, chunk__44245, i__44247);
      var map__44248__$1 = cljs.core.seq_QMARK_.call(null, map__44248) ? cljs.core.apply.call(null, cljs.core.hash_map, map__44248) : map__44248;
      var init = cljs.core.get.call(null, map__44248__$1, new cljs.core.Keyword(null, "init", "init", -1875481434));
      var id = cljs.core.get.call(null, map__44248__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
      init.call(null, id);
      var G__44250 = seq__44244;
      var G__44251 = chunk__44245;
      var G__44252 = count__44246;
      var G__44253 = i__44247 + 1;
      seq__44244 = G__44250;
      chunk__44245 = G__44251;
      count__44246 = G__44252;
      i__44247 = G__44253;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__44244);
      if (temp__4126__auto__) {
        var seq__44244__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__44244__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__44244__$1);
          var G__44254 = cljs.core.chunk_rest.call(null, seq__44244__$1);
          var G__44255 = c__4309__auto__;
          var G__44256 = cljs.core.count.call(null, c__4309__auto__);
          var G__44257 = 0;
          seq__44244 = G__44254;
          chunk__44245 = G__44255;
          count__44246 = G__44256;
          i__44247 = G__44257;
          continue;
        } else {
          var map__44249 = cljs.core.first.call(null, seq__44244__$1);
          var map__44249__$1 = cljs.core.seq_QMARK_.call(null, map__44249) ? cljs.core.apply.call(null, cljs.core.hash_map, map__44249) : map__44249;
          var init = cljs.core.get.call(null, map__44249__$1, new cljs.core.Keyword(null, "init", "init", -1875481434));
          var id = cljs.core.get.call(null, map__44249__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
          init.call(null, id);
          var G__44258 = cljs.core.next.call(null, seq__44244__$1);
          var G__44259 = null;
          var G__44260 = 0;
          var G__44261 = 0;
          seq__44244 = G__44258;
          chunk__44245 = G__44259;
          count__44246 = G__44260;
          i__44247 = G__44261;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.core.init = function init() {
  t3tr0s_slides.core.init_slides_BANG_.call(null);
  window.addEventListener("keydown", t3tr0s_slides.core.key_down);
  window["onhashchange"] = t3tr0s_slides.core.on_hash_change;
  return t3tr0s_slides.core.on_hash_change.call(null);
};
window.addEventListener("load", t3tr0s_slides.core.init);
