var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2311";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__19142__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__19142 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__19142__delegate.call(this, args);
    };
    G__19142.cljs$lang$maxFixedArity = 0;
    G__19142.cljs$lang$applyTo = function(arglist__19143) {
      var args = cljs.core.seq(arglist__19143);
      return G__19142__delegate(args);
    };
    G__19142.cljs$core$IFn$_invoke$arity$variadic = G__19142__delegate;
    return G__19142;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3541__auto__ = ty;
    if (cljs.core.truth_(and__3541__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3541__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4409__auto___19144 = len;
  var i_19145 = 0;
  while (true) {
    if (i_19145 < n__4409__auto___19144) {
      new_arr[i_19145] = arr[i_19145];
      var G__19146 = i_19145 + 1;
      i_19145 = G__19146;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__19147__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__19147 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19147__delegate.call(this, array, i, idxs);
    };
    G__19147.cljs$lang$maxFixedArity = 2;
    G__19147.cljs$lang$applyTo = function(arglist__19148) {
      var array = cljs.core.first(arglist__19148);
      arglist__19148 = cljs.core.next(arglist__19148);
      var i = cljs.core.first(arglist__19148);
      var idxs = cljs.core.rest(arglist__19148);
      return G__19147__delegate(array, i, idxs);
    };
    G__19147.cljs$core$IFn$_invoke$arity$variadic = G__19147__delegate;
    return G__19147;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__19149__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__19149 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19149__delegate.call(this, array, idx, idx2, idxv);
    };
    G__19149.cljs$lang$maxFixedArity = 3;
    G__19149.cljs$lang$applyTo = function(arglist__19150) {
      var array = cljs.core.first(arglist__19150);
      arglist__19150 = cljs.core.next(arglist__19150);
      var idx = cljs.core.first(arglist__19150);
      arglist__19150 = cljs.core.next(arglist__19150);
      var idx2 = cljs.core.first(arglist__19150);
      var idxv = cljs.core.rest(arglist__19150);
      return G__19149__delegate(array, idx, idx2, idxv);
    };
    G__19149.cljs$core$IFn$_invoke$arity$variadic = G__19149__delegate;
    return G__19149;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj19152 = {};
  return obj19152;
}();
cljs.core.IFn = function() {
  var obj19154 = {};
  return obj19154;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = cljs.core._invoke[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._invoke["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj19156 = {};
  return obj19156;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3541__auto__ = value;
    if (and__3541__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4180__auto__ = value == null ? null : value;
    return function() {
      var or__3553__auto__ = cljs.core._clone[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._clone["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj19158 = {};
  return obj19158;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._count[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._count["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj19160 = {};
  return obj19160;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._empty[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._empty["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj19162 = {};
  return obj19162;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._conj[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._conj["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj19164 = {};
  return obj19164;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3541__auto__ = coll;
      if (and__3541__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4180__auto__ = coll == null ? null : coll;
      return function() {
        var or__3553__auto__ = cljs.core._nth[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._nth["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3541__auto__ = coll;
      if (and__3541__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4180__auto__ = coll == null ? null : coll;
      return function() {
        var or__3553__auto__ = cljs.core._nth[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._nth["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj19166 = {};
  return obj19166;
}();
cljs.core.ISeq = function() {
  var obj19168 = {};
  return obj19168;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._first[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._first["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._rest[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._rest["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj19170 = {};
  return obj19170;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._next[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._next["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj19172 = {};
  return obj19172;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._lookup[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._lookup["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._lookup[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._lookup["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj19174 = {};
  return obj19174;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._assoc[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._assoc["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj19176 = {};
  return obj19176;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._dissoc[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._dissoc["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj19178 = {};
  return obj19178;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._key[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._key["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._val[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._val["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj19180 = {};
  return obj19180;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._disjoin[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._disjoin["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj19182 = {};
  return obj19182;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._peek[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._peek["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._pop[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._pop["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj19184 = {};
  return obj19184;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._assoc_n[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj19186 = {};
  return obj19186;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._deref[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._deref["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj19188 = {};
  return obj19188;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj19190 = {};
  return obj19190;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._meta[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._meta["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj19192 = {};
  return obj19192;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._with_meta[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._with_meta["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj19194 = {};
  return obj19194;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3541__auto__ = coll;
      if (and__3541__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4180__auto__ = coll == null ? null : coll;
      return function() {
        var or__3553__auto__ = cljs.core._reduce[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._reduce["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3541__auto__ = coll;
      if (and__3541__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4180__auto__ = coll == null ? null : coll;
      return function() {
        var or__3553__auto__ = cljs.core._reduce[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._reduce["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj19196 = {};
  return obj19196;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj19198 = {};
  return obj19198;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._equiv[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._equiv["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj19200 = {};
  return obj19200;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._hash[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._hash["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj19202 = {};
  return obj19202;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._seq[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._seq["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj19204 = {};
  return obj19204;
}();
cljs.core.IList = function() {
  var obj19206 = {};
  return obj19206;
}();
cljs.core.IRecord = function() {
  var obj19208 = {};
  return obj19208;
}();
cljs.core.IReversible = function() {
  var obj19210 = {};
  return obj19210;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._rseq[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._rseq["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj19212 = {};
  return obj19212;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._entry_key[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._entry_key["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._comparator[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._comparator["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj19214 = {};
  return obj19214;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3541__auto__ = writer;
    if (and__3541__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4180__auto__ = writer == null ? null : writer;
    return function() {
      var or__3553__auto__ = cljs.core._write[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._write["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3541__auto__ = writer;
    if (and__3541__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4180__auto__ = writer == null ? null : writer;
    return function() {
      var or__3553__auto__ = cljs.core._flush[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._flush["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj19216 = {};
  return obj19216;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._pr_writer[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj19218 = {};
  return obj19218;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3541__auto__ = d;
    if (and__3541__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4180__auto__ = d == null ? null : d;
    return function() {
      var or__3553__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj19220 = {};
  return obj19220;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = cljs.core._notify_watches[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = cljs.core._add_watch[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._add_watch["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = cljs.core._remove_watch[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj19222 = {};
  return obj19222;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._as_transient[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._as_transient["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj19224 = {};
  return obj19224;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj19226 = {};
  return obj19226;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj19228 = {};
  return obj19228;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj19230 = {};
  return obj19230;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj19232 = {};
  return obj19232;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3541__auto__ = tcoll;
    if (and__3541__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4180__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3553__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj19234 = {};
  return obj19234;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._compare[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._compare["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj19236 = {};
  return obj19236;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._drop_first[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._drop_first["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj19238 = {};
  return obj19238;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._chunked_first[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj19240 = {};
  return obj19240;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3541__auto__ = coll;
    if (and__3541__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4180__auto__ = coll == null ? null : coll;
    return function() {
      var or__3553__auto__ = cljs.core._chunked_next[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj19242 = {};
  return obj19242;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._name[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._name["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._namespace[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._namespace["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj19244 = {};
  return obj19244;
}();
cljs.core.IReset = function() {
  var obj19246 = {};
  return obj19246;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3541__auto__ = o;
    if (and__3541__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4180__auto__ = o == null ? null : o;
    return function() {
      var or__3553__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj19248 = {};
  return obj19248;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3541__auto__ = o;
      if (and__3541__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4180__auto__ = o == null ? null : o;
      return function() {
        var or__3553__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__19249 = i + 2;
        var G__19250 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__19249;
        h1 = G__19250;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj19252 = {};
  return obj19252;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__19253 = i + 1;
          var G__19254 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__19253;
          hash = G__19254;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj19258 = {};
      return obj19258;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__19260 = o;
    if (G__19260) {
      var bit__4196__auto__ = G__19260.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4196__auto__ || G__19260.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o == null) {
              return 0;
            } else {
              return cljs.core._hash.call(null, o);
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3541__auto__) {
        return b.ns;
      } else {
        return and__3541__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.compare.call(null, a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3964__auto__ = self__._hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__19262 = null;
  var G__19262__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__19262__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__19262 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19262__2.call(this, self__, coll);
      case 3:
        return G__19262__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19262.cljs$core$IFn$_invoke$arity$2 = G__19262__2;
  G__19262.cljs$core$IFn$_invoke$arity$3 = G__19262__3;
  return G__19262;
}();
cljs.core.Symbol.prototype.apply = function(self__, args19261) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19261)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__19264 = value;
  if (G__19264) {
    var bit__4203__auto__ = G__19264.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4203__auto__ || G__19264.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__19264.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__19264);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__19264);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__19266 = coll;
      if (G__19266) {
        var bit__4196__auto__ = G__19266.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4196__auto__ || G__19266.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll) + " is not ISeqable");
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__19268 = coll;
      if (G__19268) {
        var bit__4196__auto__ = G__19268.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4196__auto__ || G__19268.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__19270 = coll;
      if (G__19270) {
        var bit__4196__auto__ = G__19270.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4196__auto__ || G__19270.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__19272 = coll;
      if (G__19272) {
        var bit__4196__auto__ = G__19272.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4196__auto__ || G__19272.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__19273__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__19274 = y;
            var G__19275 = cljs.core.first.call(null, more);
            var G__19276 = cljs.core.next.call(null, more);
            x = G__19274;
            y = G__19275;
            more = G__19276;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19273 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19273__delegate.call(this, x, y, more);
    };
    G__19273.cljs$lang$maxFixedArity = 2;
    G__19273.cljs$lang$applyTo = function(arglist__19277) {
      var x = cljs.core.first(arglist__19277);
      arglist__19277 = cljs.core.next(arglist__19277);
      var y = cljs.core.first(arglist__19277);
      var more = cljs.core.rest(arglist__19277);
      return G__19273__delegate(x, y, more);
    };
    G__19273.cljs$core$IFn$_invoke$arity$variadic = G__19273__delegate;
    return G__19273;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__19278 = n + 1;
      var G__19279 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__19280 = cljs.core.next.call(null, coll__$1);
      n = G__19278;
      hash_code = G__19279;
      coll__$1 = G__19280;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__19281 = n + 1;
      var G__19282 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__19283 = cljs.core.next.call(null, coll__$1);
      n = G__19281;
      hash_code = G__19282;
      coll__$1 = G__19283;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__19284 = nval;
            var G__19285 = n + 1;
            val = G__19284;
            n = G__19285;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__19286 = nval;
          var G__19287 = n + 1;
          val__$1 = G__19286;
          n = G__19287;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__19288 = nval;
          var G__19289 = n + 1;
          val__$1 = G__19288;
          n = G__19289;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__19290 = nval;
            var G__19291 = n + 1;
            val = G__19290;
            n = G__19291;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__19292 = nval;
          var G__19293 = n + 1;
          val__$1 = G__19292;
          n = G__19293;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__19294 = nval;
          var G__19295 = n + 1;
          val__$1 = G__19294;
          n = G__19295;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__19297 = x;
  if (G__19297) {
    var bit__4203__auto__ = G__19297.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4203__auto__ || G__19297.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__19297.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__19297);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__19297);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__19299 = x;
  if (G__19299) {
    var bit__4203__auto__ = G__19299.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4203__auto__ || G__19299.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__19299.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__19299);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__19299);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__19300 = sn;
      s = G__19300;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__19301__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__19302 = conj.call(null, coll, x);
          var G__19303 = cljs.core.first.call(null, xs);
          var G__19304 = cljs.core.next.call(null, xs);
          coll = G__19302;
          x = G__19303;
          xs = G__19304;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__19301 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19301__delegate.call(this, coll, x, xs);
    };
    G__19301.cljs$lang$maxFixedArity = 2;
    G__19301.cljs$lang$applyTo = function(arglist__19305) {
      var coll = cljs.core.first(arglist__19305);
      arglist__19305 = cljs.core.next(arglist__19305);
      var x = cljs.core.first(arglist__19305);
      var xs = cljs.core.rest(arglist__19305);
      return G__19301__delegate(coll, x, xs);
    };
    G__19301.cljs$core$IFn$_invoke$arity$variadic = G__19301__delegate;
    return G__19301;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__19306 = cljs.core.next.call(null, s);
      var G__19307 = acc + 1;
      s = G__19306;
      acc = G__19307;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__19309 = coll;
      if (G__19309) {
        var bit__4196__auto__ = G__19309.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4196__auto__ || G__19309.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__19310 = cljs.core.next.call(null, coll);
              var G__19311 = n - 1;
              coll = G__19310;
              n = G__19311;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__19312 = cljs.core.next.call(null, coll);
              var G__19313 = n - 1;
              var G__19314 = not_found;
              coll = G__19312;
              n = G__19313;
              not_found = G__19314;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__19319 = coll;
          if (G__19319) {
            var bit__4196__auto__ = G__19319.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4196__auto__ || G__19319.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__19320 = coll;
                  if (G__19320) {
                    var bit__4203__auto__ = G__19320.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4203__auto__ || G__19320.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__19320.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19320);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19320);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__19321 = coll;
          if (G__19321) {
            var bit__4196__auto__ = G__19321.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4196__auto__ || G__19321.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__19322 = coll;
                  if (G__19322) {
                    var bit__4203__auto__ = G__19322.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4203__auto__ || G__19322.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__19322.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19322);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19322);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__19325 = o;
        if (G__19325) {
          var bit__4196__auto__ = G__19325.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4196__auto__ || G__19325.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__19326 = o;
        if (G__19326) {
          var bit__4196__auto__ = G__19326.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4196__auto__ || G__19326.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__19327__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__19328 = ret;
          var G__19329 = cljs.core.first.call(null, kvs);
          var G__19330 = cljs.core.second.call(null, kvs);
          var G__19331 = cljs.core.nnext.call(null, kvs);
          coll = G__19328;
          k = G__19329;
          v = G__19330;
          kvs = G__19331;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__19327 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19327__delegate.call(this, coll, k, v, kvs);
    };
    G__19327.cljs$lang$maxFixedArity = 3;
    G__19327.cljs$lang$applyTo = function(arglist__19332) {
      var coll = cljs.core.first(arglist__19332);
      arglist__19332 = cljs.core.next(arglist__19332);
      var k = cljs.core.first(arglist__19332);
      arglist__19332 = cljs.core.next(arglist__19332);
      var v = cljs.core.first(arglist__19332);
      var kvs = cljs.core.rest(arglist__19332);
      return G__19327__delegate(coll, k, v, kvs);
    };
    G__19327.cljs$core$IFn$_invoke$arity$variadic = G__19327__delegate;
    return G__19327;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__19333__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__19334 = ret;
            var G__19335 = cljs.core.first.call(null, ks);
            var G__19336 = cljs.core.next.call(null, ks);
            coll = G__19334;
            k = G__19335;
            ks = G__19336;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__19333 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19333__delegate.call(this, coll, k, ks);
    };
    G__19333.cljs$lang$maxFixedArity = 2;
    G__19333.cljs$lang$applyTo = function(arglist__19337) {
      var coll = cljs.core.first(arglist__19337);
      arglist__19337 = cljs.core.next(arglist__19337);
      var k = cljs.core.first(arglist__19337);
      var ks = cljs.core.rest(arglist__19337);
      return G__19333__delegate(coll, k, ks);
    };
    G__19333.cljs$core$IFn$_invoke$arity$variadic = G__19333__delegate;
    return G__19333;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3553__auto__ = goog.isFunction(f);
  if (or__3553__auto__) {
    return or__3553__auto__;
  } else {
    var G__19341 = f;
    if (G__19341) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto____$1 = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto____$1)) {
          return or__3553__auto____$1;
        } else {
          return G__19341.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__19341.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__19341);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__19341);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/MetaFn");
};
cljs.core.MetaFn.prototype.call = function() {
  var G__19343 = null;
  var G__19343__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__19343__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__19343__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__19343__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__19343__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__19343__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__19343__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__19343__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__19343__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__19343__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__19343__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__19343__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__19343__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__19343__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__19343__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__19343__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__19343__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__19343__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__19343__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__19343__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__19343__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__19343__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__19343 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__19343__1.call(this, self__);
      case 2:
        return G__19343__2.call(this, self__, a);
      case 3:
        return G__19343__3.call(this, self__, a, b);
      case 4:
        return G__19343__4.call(this, self__, a, b, c);
      case 5:
        return G__19343__5.call(this, self__, a, b, c, d);
      case 6:
        return G__19343__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__19343__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__19343__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__19343__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__19343__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__19343__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__19343__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__19343__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__19343__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__19343__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__19343__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__19343__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__19343__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__19343__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__19343__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__19343__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__19343__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19343.cljs$core$IFn$_invoke$arity$1 = G__19343__1;
  G__19343.cljs$core$IFn$_invoke$arity$2 = G__19343__2;
  G__19343.cljs$core$IFn$_invoke$arity$3 = G__19343__3;
  G__19343.cljs$core$IFn$_invoke$arity$4 = G__19343__4;
  G__19343.cljs$core$IFn$_invoke$arity$5 = G__19343__5;
  G__19343.cljs$core$IFn$_invoke$arity$6 = G__19343__6;
  G__19343.cljs$core$IFn$_invoke$arity$7 = G__19343__7;
  G__19343.cljs$core$IFn$_invoke$arity$8 = G__19343__8;
  G__19343.cljs$core$IFn$_invoke$arity$9 = G__19343__9;
  G__19343.cljs$core$IFn$_invoke$arity$10 = G__19343__10;
  G__19343.cljs$core$IFn$_invoke$arity$11 = G__19343__11;
  G__19343.cljs$core$IFn$_invoke$arity$12 = G__19343__12;
  G__19343.cljs$core$IFn$_invoke$arity$13 = G__19343__13;
  G__19343.cljs$core$IFn$_invoke$arity$14 = G__19343__14;
  G__19343.cljs$core$IFn$_invoke$arity$15 = G__19343__15;
  G__19343.cljs$core$IFn$_invoke$arity$16 = G__19343__16;
  G__19343.cljs$core$IFn$_invoke$arity$17 = G__19343__17;
  G__19343.cljs$core$IFn$_invoke$arity$18 = G__19343__18;
  G__19343.cljs$core$IFn$_invoke$arity$19 = G__19343__19;
  G__19343.cljs$core$IFn$_invoke$arity$20 = G__19343__20;
  G__19343.cljs$core$IFn$_invoke$arity$21 = G__19343__21;
  G__19343.cljs$core$IFn$_invoke$arity$22 = G__19343__22;
  return G__19343;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args19342) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19342)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__19347 = o;
    if (G__19347) {
      var bit__4203__auto__ = G__19347.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4203__auto__ || G__19347.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__19347.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__19347);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__19347);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3541__auto__ = !(o == null);
    if (and__3541__auto__) {
      var G__19351 = o;
      if (G__19351) {
        var bit__4203__auto__ = G__19351.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4203__auto__ || G__19351.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__19351.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__19351);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__19351);
      }
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__19352__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__19353 = ret;
            var G__19354 = cljs.core.first.call(null, ks);
            var G__19355 = cljs.core.next.call(null, ks);
            coll = G__19353;
            k = G__19354;
            ks = G__19355;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__19352 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19352__delegate.call(this, coll, k, ks);
    };
    G__19352.cljs$lang$maxFixedArity = 2;
    G__19352.cljs$lang$applyTo = function(arglist__19356) {
      var coll = cljs.core.first(arglist__19356);
      arglist__19356 = cljs.core.next(arglist__19356);
      var k = cljs.core.first(arglist__19356);
      var ks = cljs.core.rest(arglist__19356);
      return G__19352__delegate(coll, k, ks);
    };
    G__19352.cljs$core$IFn$_invoke$arity$variadic = G__19352__delegate;
    return G__19352;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__19358 = x;
    if (G__19358) {
      var bit__4203__auto__ = G__19358.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4203__auto__ || G__19358.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__19358.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__19358);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__19358);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__19360 = x;
    if (G__19360) {
      var bit__4203__auto__ = G__19360.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4203__auto__ || G__19360.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__19360.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__19360);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__19360);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__19362 = x;
  if (G__19362) {
    var bit__4203__auto__ = G__19362.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4203__auto__ || G__19362.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__19362.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__19362);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__19362);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__19364 = x;
  if (G__19364) {
    var bit__4203__auto__ = G__19364.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4203__auto__ || G__19364.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__19364.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__19364);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__19364);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__19366 = x;
  if (G__19366) {
    var bit__4203__auto__ = G__19366.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4203__auto__ || G__19366.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__19366.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__19366);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__19366);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__19368 = x;
  if (G__19368) {
    var bit__4203__auto__ = G__19368.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4203__auto__ || G__19368.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__19368.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__19368);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__19368);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__19370 = x;
    if (G__19370) {
      var bit__4203__auto__ = G__19370.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4203__auto__ || G__19370.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__19370.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__19370);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__19370);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__19372 = x;
  if (G__19372) {
    var bit__4203__auto__ = G__19372.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4203__auto__ || G__19372.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__19372.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__19372);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__19372);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__19374 = x;
  if (G__19374) {
    var bit__4196__auto__ = G__19374.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4196__auto__ || G__19374.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj19378 = {};
    return obj19378;
  };
  var js_obj__1 = function() {
    var G__19379__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__19379 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__19379__delegate.call(this, keyvals);
    };
    G__19379.cljs$lang$maxFixedArity = 0;
    G__19379.cljs$lang$applyTo = function(arglist__19380) {
      var keyvals = cljs.core.seq(arglist__19380);
      return G__19379__delegate(keyvals);
    };
    G__19379.cljs$core$IFn$_invoke$arity$variadic = G__19379__delegate;
    return G__19379;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__19381 = i__$1 + 1;
      var G__19382 = j__$1 + 1;
      var G__19383 = len__$1 - 1;
      i__$1 = G__19381;
      j__$1 = G__19382;
      len__$1 = G__19383;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__19384 = i__$1 - 1;
      var G__19385 = j__$1 - 1;
      var G__19386 = len__$1 - 1;
      i__$1 = G__19384;
      j__$1 = G__19385;
      len__$1 = G__19386;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj19388 = {};
  return obj19388;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__19390 = s;
    if (G__19390) {
      var bit__4203__auto__ = G__19390.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4203__auto__ || G__19390.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__19390.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19390);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19390);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__19392 = s;
  if (G__19392) {
    var bit__4203__auto__ = G__19392.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4203__auto__ || G__19392.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__19392.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__19392);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__19392);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3553__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3553__auto__) {
    return or__3553__auto__;
  } else {
    var G__19396 = f;
    if (G__19396) {
      var bit__4203__auto__ = G__19396.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4203__auto__ || G__19396.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__19396.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__19396);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__19396);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__19397__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__19398 = cljs.core.conj.call(null, s, x__$1);
              var G__19399 = etc;
              s = G__19398;
              xs = G__19399;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__19397 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19397__delegate.call(this, x, y, more);
    };
    G__19397.cljs$lang$maxFixedArity = 2;
    G__19397.cljs$lang$applyTo = function(arglist__19400) {
      var x = cljs.core.first(arglist__19400);
      arglist__19400 = cljs.core.next(arglist__19400);
      var y = cljs.core.first(arglist__19400);
      var more = cljs.core.rest(arglist__19400);
      return G__19397__delegate(x, y, more);
    };
    G__19397.cljs$core$IFn$_invoke$arity$variadic = G__19397__delegate;
    return G__19397;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3553__auto__ = cljs.core.seq.call(null, coll);
    if (or__3553__auto__) {
      return or__3553__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__19402 = x;
            if (G__19402) {
              var bit__4196__auto__ = G__19402.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4196__auto__ || G__19402.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__19403 = xs;
        var G__19404 = ys;
        var G__19405 = len;
        var G__19406 = n + 1;
        xs = G__19403;
        ys = G__19404;
        len = G__19405;
        n = G__19406;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__19407 = nval;
          var G__19408 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__19407;
          coll__$1 = G__19408;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__19411 = coll;
      if (G__19411) {
        var bit__4196__auto__ = G__19411.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4196__auto__ || G__19411.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__19412 = coll;
      if (G__19412) {
        var bit__4196__auto__ = G__19412.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4196__auto__ || G__19412.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.completing = function completing(f) {
  return function() {
    var G__19413 = null;
    var G__19413__0 = function() {
      return f.call(null);
    };
    var G__19413__1 = function(x) {
      return x;
    };
    var G__19413__2 = function(x, y) {
      return f.call(null, x, y);
    };
    G__19413 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__19413__0.call(this);
        case 1:
          return G__19413__1.call(this, x);
        case 2:
          return G__19413__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19413.cljs$core$IFn$_invoke$arity$0 = G__19413__0;
    G__19413.cljs$core$IFn$_invoke$arity$1 = G__19413__1;
    G__19413.cljs$core$IFn$_invoke$arity$2 = G__19413__2;
    return G__19413;
  }();
};
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, cljs.core.completing.call(null, f));
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    var ret__$1 = f__$1.call(null, cljs.core.reduced_QMARK_.call(null, ret) ? cljs.core.deref.call(null, ret) : ret);
    if (cljs.core.reduced_QMARK_.call(null, ret__$1)) {
      return cljs.core.deref.call(null, ret__$1);
    } else {
      return ret__$1;
    }
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__19414__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__19414 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19414__delegate.call(this, x, y, more);
    };
    G__19414.cljs$lang$maxFixedArity = 2;
    G__19414.cljs$lang$applyTo = function(arglist__19415) {
      var x = cljs.core.first(arglist__19415);
      arglist__19415 = cljs.core.next(arglist__19415);
      var y = cljs.core.first(arglist__19415);
      var more = cljs.core.rest(arglist__19415);
      return G__19414__delegate(x, y, more);
    };
    G__19414.cljs$core$IFn$_invoke$arity$variadic = G__19414__delegate;
    return G__19414;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__19416__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__19416 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19416__delegate.call(this, x, y, more);
    };
    G__19416.cljs$lang$maxFixedArity = 2;
    G__19416.cljs$lang$applyTo = function(arglist__19417) {
      var x = cljs.core.first(arglist__19417);
      arglist__19417 = cljs.core.next(arglist__19417);
      var y = cljs.core.first(arglist__19417);
      var more = cljs.core.rest(arglist__19417);
      return G__19416__delegate(x, y, more);
    };
    G__19416.cljs$core$IFn$_invoke$arity$variadic = G__19416__delegate;
    return G__19416;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__19418__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__19418 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19418__delegate.call(this, x, y, more);
    };
    G__19418.cljs$lang$maxFixedArity = 2;
    G__19418.cljs$lang$applyTo = function(arglist__19419) {
      var x = cljs.core.first(arglist__19419);
      arglist__19419 = cljs.core.next(arglist__19419);
      var y = cljs.core.first(arglist__19419);
      var more = cljs.core.rest(arglist__19419);
      return G__19418__delegate(x, y, more);
    };
    G__19418.cljs$core$IFn$_invoke$arity$variadic = G__19418__delegate;
    return G__19418;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__19420__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__19420 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19420__delegate.call(this, x, y, more);
    };
    G__19420.cljs$lang$maxFixedArity = 2;
    G__19420.cljs$lang$applyTo = function(arglist__19421) {
      var x = cljs.core.first(arglist__19421);
      arglist__19421 = cljs.core.next(arglist__19421);
      var y = cljs.core.first(arglist__19421);
      var more = cljs.core.rest(arglist__19421);
      return G__19420__delegate(x, y, more);
    };
    G__19420.cljs$core$IFn$_invoke$arity$variadic = G__19420__delegate;
    return G__19420;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__19422__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__19423 = y;
            var G__19424 = cljs.core.first.call(null, more);
            var G__19425 = cljs.core.next.call(null, more);
            x = G__19423;
            y = G__19424;
            more = G__19425;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19422 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19422__delegate.call(this, x, y, more);
    };
    G__19422.cljs$lang$maxFixedArity = 2;
    G__19422.cljs$lang$applyTo = function(arglist__19426) {
      var x = cljs.core.first(arglist__19426);
      arglist__19426 = cljs.core.next(arglist__19426);
      var y = cljs.core.first(arglist__19426);
      var more = cljs.core.rest(arglist__19426);
      return G__19422__delegate(x, y, more);
    };
    G__19422.cljs$core$IFn$_invoke$arity$variadic = G__19422__delegate;
    return G__19422;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__19427__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__19428 = y;
            var G__19429 = cljs.core.first.call(null, more);
            var G__19430 = cljs.core.next.call(null, more);
            x = G__19428;
            y = G__19429;
            more = G__19430;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19427 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19427__delegate.call(this, x, y, more);
    };
    G__19427.cljs$lang$maxFixedArity = 2;
    G__19427.cljs$lang$applyTo = function(arglist__19431) {
      var x = cljs.core.first(arglist__19431);
      arglist__19431 = cljs.core.next(arglist__19431);
      var y = cljs.core.first(arglist__19431);
      var more = cljs.core.rest(arglist__19431);
      return G__19427__delegate(x, y, more);
    };
    G__19427.cljs$core$IFn$_invoke$arity$variadic = G__19427__delegate;
    return G__19427;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__19432__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__19433 = y;
            var G__19434 = cljs.core.first.call(null, more);
            var G__19435 = cljs.core.next.call(null, more);
            x = G__19433;
            y = G__19434;
            more = G__19435;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19432 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19432__delegate.call(this, x, y, more);
    };
    G__19432.cljs$lang$maxFixedArity = 2;
    G__19432.cljs$lang$applyTo = function(arglist__19436) {
      var x = cljs.core.first(arglist__19436);
      arglist__19436 = cljs.core.next(arglist__19436);
      var y = cljs.core.first(arglist__19436);
      var more = cljs.core.rest(arglist__19436);
      return G__19432__delegate(x, y, more);
    };
    G__19432.cljs$core$IFn$_invoke$arity$variadic = G__19432__delegate;
    return G__19432;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__19437__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__19438 = y;
            var G__19439 = cljs.core.first.call(null, more);
            var G__19440 = cljs.core.next.call(null, more);
            x = G__19438;
            y = G__19439;
            more = G__19440;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19437 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19437__delegate.call(this, x, y, more);
    };
    G__19437.cljs$lang$maxFixedArity = 2;
    G__19437.cljs$lang$applyTo = function(arglist__19441) {
      var x = cljs.core.first(arglist__19441);
      arglist__19441 = cljs.core.next(arglist__19441);
      var y = cljs.core.first(arglist__19441);
      var more = cljs.core.rest(arglist__19441);
      return G__19437__delegate(x, y, more);
    };
    G__19437.cljs$core$IFn$_invoke$arity$variadic = G__19437__delegate;
    return G__19437;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3860__auto__ = x;
    var y__3861__auto__ = y;
    return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
  };
  var max__3 = function() {
    var G__19442__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3860__auto__ = x;
        var y__3861__auto__ = y;
        return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
      }(), more);
    };
    var G__19442 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19442__delegate.call(this, x, y, more);
    };
    G__19442.cljs$lang$maxFixedArity = 2;
    G__19442.cljs$lang$applyTo = function(arglist__19443) {
      var x = cljs.core.first(arglist__19443);
      arglist__19443 = cljs.core.next(arglist__19443);
      var y = cljs.core.first(arglist__19443);
      var more = cljs.core.rest(arglist__19443);
      return G__19442__delegate(x, y, more);
    };
    G__19442.cljs$core$IFn$_invoke$arity$variadic = G__19442__delegate;
    return G__19442;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3867__auto__ = x;
    var y__3868__auto__ = y;
    return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
  };
  var min__3 = function() {
    var G__19444__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3867__auto__ = x;
        var y__3868__auto__ = y;
        return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
      }(), more);
    };
    var G__19444 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19444__delegate.call(this, x, y, more);
    };
    G__19444.cljs$lang$maxFixedArity = 2;
    G__19444.cljs$lang$applyTo = function(arglist__19445) {
      var x = cljs.core.first(arglist__19445);
      arglist__19445 = cljs.core.next(arglist__19445);
      var y = cljs.core.first(arglist__19445);
      var more = cljs.core.rest(arglist__19445);
      return G__19444__delegate(x, y, more);
    };
    G__19444.cljs$core$IFn$_invoke$arity$variadic = G__19444__delegate;
    return G__19444;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__19446__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__19446 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19446__delegate.call(this, x, y, more);
    };
    G__19446.cljs$lang$maxFixedArity = 2;
    G__19446.cljs$lang$applyTo = function(arglist__19447) {
      var x = cljs.core.first(arglist__19447);
      arglist__19447 = cljs.core.next(arglist__19447);
      var y = cljs.core.first(arglist__19447);
      var more = cljs.core.rest(arglist__19447);
      return G__19446__delegate(x, y, more);
    };
    G__19446.cljs$core$IFn$_invoke$arity$variadic = G__19446__delegate;
    return G__19446;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__19448__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__19448 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19448__delegate.call(this, x, y, more);
    };
    G__19448.cljs$lang$maxFixedArity = 2;
    G__19448.cljs$lang$applyTo = function(arglist__19449) {
      var x = cljs.core.first(arglist__19449);
      arglist__19449 = cljs.core.next(arglist__19449);
      var y = cljs.core.first(arglist__19449);
      var more = cljs.core.rest(arglist__19449);
      return G__19448__delegate(x, y, more);
    };
    G__19448.cljs$core$IFn$_invoke$arity$variadic = G__19448__delegate;
    return G__19448;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__19450__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__19450 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19450__delegate.call(this, x, y, more);
    };
    G__19450.cljs$lang$maxFixedArity = 2;
    G__19450.cljs$lang$applyTo = function(arglist__19451) {
      var x = cljs.core.first(arglist__19451);
      arglist__19451 = cljs.core.next(arglist__19451);
      var y = cljs.core.first(arglist__19451);
      var more = cljs.core.rest(arglist__19451);
      return G__19450__delegate(x, y, more);
    };
    G__19450.cljs$core$IFn$_invoke$arity$variadic = G__19450__delegate;
    return G__19450;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__19452__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__19452 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19452__delegate.call(this, x, y, more);
    };
    G__19452.cljs$lang$maxFixedArity = 2;
    G__19452.cljs$lang$applyTo = function(arglist__19453) {
      var x = cljs.core.first(arglist__19453);
      arglist__19453 = cljs.core.next(arglist__19453);
      var y = cljs.core.first(arglist__19453);
      var more = cljs.core.rest(arglist__19453);
      return G__19452__delegate(x, y, more);
    };
    G__19452.cljs$core$IFn$_invoke$arity$variadic = G__19452__delegate;
    return G__19452;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__19454__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__19454 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19454__delegate.call(this, x, y, more);
    };
    G__19454.cljs$lang$maxFixedArity = 2;
    G__19454.cljs$lang$applyTo = function(arglist__19455) {
      var x = cljs.core.first(arglist__19455);
      arglist__19455 = cljs.core.next(arglist__19455);
      var y = cljs.core.first(arglist__19455);
      var more = cljs.core.rest(arglist__19455);
      return G__19454__delegate(x, y, more);
    };
    G__19454.cljs$core$IFn$_invoke$arity$variadic = G__19454__delegate;
    return G__19454;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__19456__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__19456 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19456__delegate.call(this, x, y, more);
    };
    G__19456.cljs$lang$maxFixedArity = 2;
    G__19456.cljs$lang$applyTo = function(arglist__19457) {
      var x = cljs.core.first(arglist__19457);
      arglist__19457 = cljs.core.next(arglist__19457);
      var y = cljs.core.first(arglist__19457);
      var more = cljs.core.rest(arglist__19457);
      return G__19456__delegate(x, y, more);
    };
    G__19456.cljs$core$IFn$_invoke$arity$variadic = G__19456__delegate;
    return G__19456;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__19458__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__19458 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19458__delegate.call(this, x, y, more);
    };
    G__19458.cljs$lang$maxFixedArity = 2;
    G__19458.cljs$lang$applyTo = function(arglist__19459) {
      var x = cljs.core.first(arglist__19459);
      arglist__19459 = cljs.core.next(arglist__19459);
      var y = cljs.core.first(arglist__19459);
      var more = cljs.core.rest(arglist__19459);
      return G__19458__delegate(x, y, more);
    };
    G__19458.cljs$core$IFn$_invoke$arity$variadic = G__19458__delegate;
    return G__19458;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__19460__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__19461 = y;
            var G__19462 = cljs.core.first.call(null, more);
            var G__19463 = cljs.core.next.call(null, more);
            x = G__19461;
            y = G__19462;
            more = G__19463;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19460 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19460__delegate.call(this, x, y, more);
    };
    G__19460.cljs$lang$maxFixedArity = 2;
    G__19460.cljs$lang$applyTo = function(arglist__19464) {
      var x = cljs.core.first(arglist__19464);
      arglist__19464 = cljs.core.next(arglist__19464);
      var y = cljs.core.first(arglist__19464);
      var more = cljs.core.rest(arglist__19464);
      return G__19460__delegate(x, y, more);
    };
    G__19460.cljs$core$IFn$_invoke$arity$variadic = G__19460__delegate;
    return G__19460;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__19465 = n__$1 - 1;
      var G__19466 = cljs.core.next.call(null, xs);
      n__$1 = G__19465;
      xs = G__19466;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__19467__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__19468 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__19469 = cljs.core.next.call(null, more);
          sb = G__19468;
          more = G__19469;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__19467 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__19467__delegate.call(this, x, ys);
    };
    G__19467.cljs$lang$maxFixedArity = 1;
    G__19467.cljs$lang$applyTo = function(arglist__19470) {
      var x = cljs.core.first(arglist__19470);
      var ys = cljs.core.rest(arglist__19470);
      return G__19467__delegate(x, ys);
    };
    G__19467.cljs$core$IFn$_invoke$arity$variadic = G__19467__delegate;
    return G__19467;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__19471 = cljs.core.next.call(null, xs);
            var G__19472 = cljs.core.next.call(null, ys);
            xs = G__19471;
            ys = G__19472;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__19473 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__19474 = cljs.core.next.call(null, s);
        res = G__19473;
        s = G__19474;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__19475 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__19476 = cljs.core.next.call(null, s);
      h = G__19475;
      s = G__19476;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__19477 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__19478 = cljs.core.next.call(null, s__$1);
      h = G__19477;
      s__$1 = G__19478;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__19485_19491 = cljs.core.seq.call(null, fn_map);
  var chunk__19486_19492 = null;
  var count__19487_19493 = 0;
  var i__19488_19494 = 0;
  while (true) {
    if (i__19488_19494 < count__19487_19493) {
      var vec__19489_19495 = cljs.core._nth.call(null, chunk__19486_19492, i__19488_19494);
      var key_name_19496 = cljs.core.nth.call(null, vec__19489_19495, 0, null);
      var f_19497 = cljs.core.nth.call(null, vec__19489_19495, 1, null);
      var str_name_19498 = cljs.core.name.call(null, key_name_19496);
      obj[str_name_19498] = f_19497;
      var G__19499 = seq__19485_19491;
      var G__19500 = chunk__19486_19492;
      var G__19501 = count__19487_19493;
      var G__19502 = i__19488_19494 + 1;
      seq__19485_19491 = G__19499;
      chunk__19486_19492 = G__19500;
      count__19487_19493 = G__19501;
      i__19488_19494 = G__19502;
      continue;
    } else {
      var temp__4126__auto___19503 = cljs.core.seq.call(null, seq__19485_19491);
      if (temp__4126__auto___19503) {
        var seq__19485_19504__$1 = temp__4126__auto___19503;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19485_19504__$1)) {
          var c__4309__auto___19505 = cljs.core.chunk_first.call(null, seq__19485_19504__$1);
          var G__19506 = cljs.core.chunk_rest.call(null, seq__19485_19504__$1);
          var G__19507 = c__4309__auto___19505;
          var G__19508 = cljs.core.count.call(null, c__4309__auto___19505);
          var G__19509 = 0;
          seq__19485_19491 = G__19506;
          chunk__19486_19492 = G__19507;
          count__19487_19493 = G__19508;
          i__19488_19494 = G__19509;
          continue;
        } else {
          var vec__19490_19510 = cljs.core.first.call(null, seq__19485_19504__$1);
          var key_name_19511 = cljs.core.nth.call(null, vec__19490_19510, 0, null);
          var f_19512 = cljs.core.nth.call(null, vec__19490_19510, 1, null);
          var str_name_19513 = cljs.core.name.call(null, key_name_19511);
          obj[str_name_19513] = f_19512;
          var G__19514 = cljs.core.next.call(null, seq__19485_19504__$1);
          var G__19515 = null;
          var G__19516 = 0;
          var G__19517 = 0;
          seq__19485_19491 = G__19514;
          chunk__19486_19492 = G__19515;
          count__19487_19493 = G__19516;
          i__19488_19494 = G__19517;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__19519 = coll;
  if (G__19519) {
    var bit__4203__auto__ = G__19519.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4203__auto__ || G__19519.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__19519.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__19519);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__19519);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__19520 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__19520;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__19521 = i - 1;
        var G__19522 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__19521;
        r = G__19522;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__19523) {
    var xs = cljs.core.seq(arglist__19523);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3553__auto__ = coll == null;
    if (or__3553__auto__) {
      return or__3553__auto__;
    } else {
      var G__19527 = coll;
      if (G__19527) {
        var bit__4196__auto__ = G__19527.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4196__auto__ || G__19527.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__19529 = x;
  if (G__19529) {
    var bit__4203__auto__ = G__19529.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4203__auto__ || G__19529.cljs$core$IList$) {
      return true;
    } else {
      if (!G__19529.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__19529);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__19529);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__3964__auto__ = self__._hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__19531 = null;
  var G__19531__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__19531__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__19531 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19531__2.call(this, self__, coll);
      case 3:
        return G__19531__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19531.cljs$core$IFn$_invoke$arity$2 = G__19531__2;
  G__19531.cljs$core$IFn$_invoke$arity$3 = G__19531__3;
  return G__19531;
}();
cljs.core.Keyword.prototype.apply = function(self__, args19530) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19530)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn);
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__19533 = x;
    if (G__19533) {
      var bit__4196__auto__ = G__19533.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4196__auto__ || G__19533.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error("Doesn't support namespace: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" : null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__19534 = ls.sval();
        ls = G__19534;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__19536 = s;
    if (G__19536) {
      var bit__4196__auto__ = G__19536.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4196__auto__ || G__19536.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__19537 = cljs.core.next.call(null, s__$1);
      s__$1 = G__19537;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_19538 = 0;
  var xs_19539 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_19539) {
      ret[i_19538] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_19539));
      var G__19540 = i_19538 + 1;
      var G__19541 = cljs.core.next.call(null, xs_19539);
      i_19538 = G__19540;
      xs_19539 = G__19541;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__19542 = i + 1;
          var G__19543 = cljs.core.next.call(null, s__$1);
          i = G__19542;
          s__$1 = G__19543;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4409__auto___19544 = size;
      var i_19545 = 0;
      while (true) {
        if (i_19545 < n__4409__auto___19544) {
          a[i_19545] = init_val_or_seq;
          var G__19546 = i_19545 + 1;
          i_19545 = G__19546;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__19547 = i + 1;
          var G__19548 = cljs.core.next.call(null, s__$1);
          i = G__19547;
          s__$1 = G__19548;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4409__auto___19549 = size;
      var i_19550 = 0;
      while (true) {
        if (i_19550 < n__4409__auto___19549) {
          a[i_19550] = init_val_or_seq;
          var G__19551 = i_19550 + 1;
          i_19550 = G__19551;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__19552 = i + 1;
          var G__19553 = cljs.core.next.call(null, s__$1);
          i = G__19552;
          s__$1 = G__19553;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4409__auto___19554 = size;
      var i_19555 = 0;
      while (true) {
        if (i_19555 < n__4409__auto___19554) {
          a[i_19555] = init_val_or_seq;
          var G__19556 = i_19555 + 1;
          i_19555 = G__19556;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__19557 = i + 1;
          var G__19558 = cljs.core.next.call(null, s__$1);
          i = G__19557;
          s__$1 = G__19558;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4409__auto___19559 = size;
      var i_19560 = 0;
      while (true) {
        if (i_19560 < n__4409__auto___19559) {
          a[i_19560] = init_val_or_seq;
          var G__19561 = i_19560 + 1;
          i_19560 = G__19561;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__19562 = cljs.core.next.call(null, s__$1);
        var G__19563 = i - 1;
        var G__19564 = sum + 1;
        s__$1 = G__19562;
        i = G__19563;
        sum = G__19564;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__19565__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__19565 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19565__delegate.call(this, x, y, zs);
    };
    G__19565.cljs$lang$maxFixedArity = 2;
    G__19565.cljs$lang$applyTo = function(arglist__19566) {
      var x = cljs.core.first(arglist__19566);
      arglist__19566 = cljs.core.next(arglist__19566);
      var y = cljs.core.first(arglist__19566);
      var zs = cljs.core.rest(arglist__19566);
      return G__19565__delegate(x, y, zs);
    };
    G__19565.cljs$core$IFn$_invoke$arity$variadic = G__19565__delegate;
    return G__19565;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__19567__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__19567 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19567__delegate.call(this, a, b, c, d, more);
    };
    G__19567.cljs$lang$maxFixedArity = 4;
    G__19567.cljs$lang$applyTo = function(arglist__19568) {
      var a = cljs.core.first(arglist__19568);
      arglist__19568 = cljs.core.next(arglist__19568);
      var b = cljs.core.first(arglist__19568);
      arglist__19568 = cljs.core.next(arglist__19568);
      var c = cljs.core.first(arglist__19568);
      arglist__19568 = cljs.core.next(arglist__19568);
      var d = cljs.core.first(arglist__19568);
      var more = cljs.core.rest(arglist__19568);
      return G__19567__delegate(a, b, c, d, more);
    };
    G__19567.cljs$core$IFn$_invoke$arity$variadic = G__19567__delegate;
    return G__19567;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__19569__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__19570 = ntcoll;
          var G__19571 = cljs.core.first.call(null, vals);
          var G__19572 = cljs.core.next.call(null, vals);
          tcoll = G__19570;
          val = G__19571;
          vals = G__19572;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19569 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19569__delegate.call(this, tcoll, val, vals);
    };
    G__19569.cljs$lang$maxFixedArity = 2;
    G__19569.cljs$lang$applyTo = function(arglist__19573) {
      var tcoll = cljs.core.first(arglist__19573);
      arglist__19573 = cljs.core.next(arglist__19573);
      var val = cljs.core.first(arglist__19573);
      var vals = cljs.core.rest(arglist__19573);
      return G__19569__delegate(tcoll, val, vals);
    };
    G__19569.cljs$core$IFn$_invoke$arity$variadic = G__19569__delegate;
    return G__19569;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__19574__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__19575 = ntcoll;
          var G__19576 = cljs.core.first.call(null, kvs);
          var G__19577 = cljs.core.second.call(null, kvs);
          var G__19578 = cljs.core.nnext.call(null, kvs);
          tcoll = G__19575;
          key = G__19576;
          val = G__19577;
          kvs = G__19578;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19574 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19574__delegate.call(this, tcoll, key, val, kvs);
    };
    G__19574.cljs$lang$maxFixedArity = 3;
    G__19574.cljs$lang$applyTo = function(arglist__19579) {
      var tcoll = cljs.core.first(arglist__19579);
      arglist__19579 = cljs.core.next(arglist__19579);
      var key = cljs.core.first(arglist__19579);
      arglist__19579 = cljs.core.next(arglist__19579);
      var val = cljs.core.first(arglist__19579);
      var kvs = cljs.core.rest(arglist__19579);
      return G__19574__delegate(tcoll, key, val, kvs);
    };
    G__19574.cljs$core$IFn$_invoke$arity$variadic = G__19574__delegate;
    return G__19574;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__19580__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__19581 = ntcoll;
          var G__19582 = cljs.core.first.call(null, ks);
          var G__19583 = cljs.core.next.call(null, ks);
          tcoll = G__19581;
          key = G__19582;
          ks = G__19583;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19580 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19580__delegate.call(this, tcoll, key, ks);
    };
    G__19580.cljs$lang$maxFixedArity = 2;
    G__19580.cljs$lang$applyTo = function(arglist__19584) {
      var tcoll = cljs.core.first(arglist__19584);
      arglist__19584 = cljs.core.next(arglist__19584);
      var key = cljs.core.first(arglist__19584);
      var ks = cljs.core.rest(arglist__19584);
      return G__19580__delegate(tcoll, key, ks);
    };
    G__19580.cljs$core$IFn$_invoke$arity$variadic = G__19580__delegate;
    return G__19580;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__19585__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__19586 = ntcoll;
          var G__19587 = cljs.core.first.call(null, vals);
          var G__19588 = cljs.core.next.call(null, vals);
          tcoll = G__19586;
          val = G__19587;
          vals = G__19588;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19585 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19585__delegate.call(this, tcoll, val, vals);
    };
    G__19585.cljs$lang$maxFixedArity = 2;
    G__19585.cljs$lang$applyTo = function(arglist__19589) {
      var tcoll = cljs.core.first(arglist__19589);
      arglist__19589 = cljs.core.next(arglist__19589);
      var val = cljs.core.first(arglist__19589);
      var vals = cljs.core.rest(arglist__19589);
      return G__19585__delegate(tcoll, val, vals);
    };
    G__19585.cljs$core$IFn$_invoke$arity$variadic = G__19585__delegate;
    return G__19585;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4453 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4453);
      } else {
        return f.call(null, a4453);
      }
    } else {
      var b4454 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4453, b4454);
        } else {
          return f.call(null, a4453, b4454);
        }
      } else {
        var c4455 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4453, b4454, c4455);
          } else {
            return f.call(null, a4453, b4454, c4455);
          }
        } else {
          var d4456 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4453, b4454, c4455, d4456);
            } else {
              return f.call(null, a4453, b4454, c4455, d4456);
            }
          } else {
            var e4457 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4453, b4454, c4455, d4456, e4457);
              } else {
                return f.call(null, a4453, b4454, c4455, d4456, e4457);
              }
            } else {
              var f4458 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4453, b4454, c4455, d4456, e4457, f4458);
                } else {
                  return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458);
                }
              } else {
                var g4459 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4453, b4454, c4455, d4456, e4457, f4458, g4459);
                  } else {
                    return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459);
                  }
                } else {
                  var h4460 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460);
                    } else {
                      return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460);
                    }
                  } else {
                    var i4461 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461);
                      } else {
                        return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461);
                      }
                    } else {
                      var j4462 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462);
                        } else {
                          return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462);
                        }
                      } else {
                        var k4463 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463);
                          } else {
                            return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463);
                          }
                        } else {
                          var l4464 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464);
                            } else {
                              return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464);
                            }
                          } else {
                            var m4465 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465);
                              } else {
                                return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465);
                              }
                            } else {
                              var n4466 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466);
                                } else {
                                  return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466);
                                }
                              } else {
                                var o4467 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467);
                                  } else {
                                    return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467);
                                  }
                                } else {
                                  var p4468 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468);
                                    } else {
                                      return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468);
                                    }
                                  } else {
                                    var q4469 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469);
                                      } else {
                                        return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469);
                                      }
                                    } else {
                                      var r4470 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470);
                                        } else {
                                          return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470);
                                        }
                                      } else {
                                        var s4471 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470, s4471);
                                          } else {
                                            return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470, s4471);
                                          }
                                        } else {
                                          var t4472 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470, s4471, t4472);
                                            } else {
                                              return f.call(null, a4453, b4454, c4455, d4456, e4457, f4458, g4459, h4460, i4461, j4462, k4463, l4464, m4465, n4466, o4467, p4468, q4469, r4470, s4471, t4472);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__19590__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__19590 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__19590__delegate.call(this, f, a, b, c, d, args);
    };
    G__19590.cljs$lang$maxFixedArity = 5;
    G__19590.cljs$lang$applyTo = function(arglist__19591) {
      var f = cljs.core.first(arglist__19591);
      arglist__19591 = cljs.core.next(arglist__19591);
      var a = cljs.core.first(arglist__19591);
      arglist__19591 = cljs.core.next(arglist__19591);
      var b = cljs.core.first(arglist__19591);
      arglist__19591 = cljs.core.next(arglist__19591);
      var c = cljs.core.first(arglist__19591);
      arglist__19591 = cljs.core.next(arglist__19591);
      var d = cljs.core.first(arglist__19591);
      var args = cljs.core.rest(arglist__19591);
      return G__19590__delegate(f, a, b, c, d, args);
    };
    G__19590.cljs$core$IFn$_invoke$arity$variadic = G__19590__delegate;
    return G__19590;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__19592__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__19592 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__19592__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__19592.cljs$lang$maxFixedArity = 6;
    G__19592.cljs$lang$applyTo = function(arglist__19593) {
      var obj = cljs.core.first(arglist__19593);
      arglist__19593 = cljs.core.next(arglist__19593);
      var f = cljs.core.first(arglist__19593);
      arglist__19593 = cljs.core.next(arglist__19593);
      var a = cljs.core.first(arglist__19593);
      arglist__19593 = cljs.core.next(arglist__19593);
      var b = cljs.core.first(arglist__19593);
      arglist__19593 = cljs.core.next(arglist__19593);
      var c = cljs.core.first(arglist__19593);
      arglist__19593 = cljs.core.next(arglist__19593);
      var d = cljs.core.first(arglist__19593);
      var args = cljs.core.rest(arglist__19593);
      return G__19592__delegate(obj, f, a, b, c, d, args);
    };
    G__19592.cljs$core$IFn$_invoke$arity$variadic = G__19592__delegate;
    return G__19592;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__19594__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__19594 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19594__delegate.call(this, x, y, more);
    };
    G__19594.cljs$lang$maxFixedArity = 2;
    G__19594.cljs$lang$applyTo = function(arglist__19595) {
      var x = cljs.core.first(arglist__19595);
      arglist__19595 = cljs.core.next(arglist__19595);
      var y = cljs.core.first(arglist__19595);
      var more = cljs.core.rest(arglist__19595);
      return G__19594__delegate(x, y, more);
    };
    G__19594.cljs$core$IFn$_invoke$arity$variadic = G__19594__delegate;
    return G__19594;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t19599 !== "undefined") {
  } else {
    cljs.core.t19599 = function(nil_iter, meta19600) {
      this.nil_iter = nil_iter;
      this.meta19600 = meta19600;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t19599.cljs$lang$type = true;
    cljs.core.t19599.cljs$lang$ctorStr = "cljs.core/t19599";
    cljs.core.t19599.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/t19599");
    };
    cljs.core.t19599.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t19599.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t19599.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t19599.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19601) {
      var self__ = this;
      var _19601__$1 = this;
      return self__.meta19600;
    };
    cljs.core.t19599.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19601, meta19600__$1) {
      var self__ = this;
      var _19601__$1 = this;
      return new cljs.core.t19599(self__.nil_iter, meta19600__$1);
    };
    cljs.core.__GT_t19599 = function __GT_t19599(nil_iter__$1, meta19600) {
      return new cljs.core.t19599(nil_iter__$1, meta19600);
    };
  }
  return new cljs.core.t19599(nil_iter, null);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/StringIter");
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayIter");
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/SeqIter");
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq.call(null, self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next.call(null, self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not.call(null, this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first.call(null, self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        return cljs.core.seq_iter.call(null, coll);
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Stepper");
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = !(lt.stepper == null);
      if (and__3541__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3541__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/MultiStepper");
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__19602 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__19602;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4409__auto___19603 = self__.iters.length;
  var i_19604 = 0;
  while (true) {
    if (i_19604 < n__4409__auto___19603) {
      cljs.core.next[i_19604] = self__.iters[i_19604].next();
      var G__19605 = i_19604 + 1;
      i_19604 = G__19605;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var _ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = !(lt.stepper == null);
      if (and__3541__auto__) {
        return cljs.core.iter.hasNext();
      } else {
        return and__3541__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, cljs.core.apply.call(null, self__.xform, cljs.core.cons.call(null, lt, cljs.core.iter.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform, iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/LazyTransformer");
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__19606_19610 = cljs.core.seq.call(null, colls);
  var chunk__19607_19611 = null;
  var count__19608_19612 = 0;
  var i__19609_19613 = 0;
  while (true) {
    if (i__19609_19613 < count__19608_19612) {
      var coll_19614 = cljs.core._nth.call(null, chunk__19607_19611, i__19609_19613);
      iters.push(cljs.core.iter.call(null, coll_19614));
      var G__19615 = seq__19606_19610;
      var G__19616 = chunk__19607_19611;
      var G__19617 = count__19608_19612;
      var G__19618 = i__19609_19613 + 1;
      seq__19606_19610 = G__19615;
      chunk__19607_19611 = G__19616;
      count__19608_19612 = G__19617;
      i__19609_19613 = G__19618;
      continue;
    } else {
      var temp__4126__auto___19619 = cljs.core.seq.call(null, seq__19606_19610);
      if (temp__4126__auto___19619) {
        var seq__19606_19620__$1 = temp__4126__auto___19619;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19606_19620__$1)) {
          var c__4309__auto___19621 = cljs.core.chunk_first.call(null, seq__19606_19620__$1);
          var G__19622 = cljs.core.chunk_rest.call(null, seq__19606_19620__$1);
          var G__19623 = c__4309__auto___19621;
          var G__19624 = cljs.core.count.call(null, c__4309__auto___19621);
          var G__19625 = 0;
          seq__19606_19610 = G__19622;
          chunk__19607_19611 = G__19623;
          count__19608_19612 = G__19624;
          i__19609_19613 = G__19625;
          continue;
        } else {
          var coll_19626 = cljs.core.first.call(null, seq__19606_19620__$1);
          iters.push(cljs.core.iter.call(null, coll_19626));
          var G__19627 = cljs.core.next.call(null, seq__19606_19620__$1);
          var G__19628 = null;
          var G__19629 = 0;
          var G__19630 = 0;
          seq__19606_19610 = G__19627;
          chunk__19607_19611 = G__19628;
          count__19608_19612 = G__19629;
          i__19609_19613 = G__19630;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3553__auto__ = cljs.core.seq.call(null, coll);
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__19631__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__19631 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19631__delegate.call(this, xform, coll, colls);
    };
    G__19631.cljs$lang$maxFixedArity = 2;
    G__19631.cljs$lang$applyTo = function(arglist__19632) {
      var xform = cljs.core.first(arglist__19632);
      arglist__19632 = cljs.core.next(arglist__19632);
      var coll = cljs.core.first(arglist__19632);
      var colls = cljs.core.rest(arglist__19632);
      return G__19631__delegate(xform, coll, colls);
    };
    G__19631.cljs$core$IFn$_invoke$arity$variadic = G__19631__delegate;
    return G__19631;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__19633 = pred;
        var G__19634 = cljs.core.next.call(null, coll);
        pred = G__19633;
        coll = G__19634;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3553__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        var G__19635 = pred;
        var G__19636 = cljs.core.next.call(null, coll);
        pred = G__19635;
        coll = G__19636;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error("Argument must be an integer: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__19637 = null;
    var G__19637__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__19637__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__19637__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__19637__3 = function() {
      var G__19638__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__19638 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__19638__delegate.call(this, x, y, zs);
      };
      G__19638.cljs$lang$maxFixedArity = 2;
      G__19638.cljs$lang$applyTo = function(arglist__19639) {
        var x = cljs.core.first(arglist__19639);
        arglist__19639 = cljs.core.next(arglist__19639);
        var y = cljs.core.first(arglist__19639);
        var zs = cljs.core.rest(arglist__19639);
        return G__19638__delegate(x, y, zs);
      };
      G__19638.cljs$core$IFn$_invoke$arity$variadic = G__19638__delegate;
      return G__19638;
    }();
    G__19637 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__19637__0.call(this);
        case 1:
          return G__19637__1.call(this, x);
        case 2:
          return G__19637__2.call(this, x, y);
        default:
          return G__19637__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19637.cljs$lang$maxFixedArity = 2;
    G__19637.cljs$lang$applyTo = G__19637__3.cljs$lang$applyTo;
    G__19637.cljs$core$IFn$_invoke$arity$0 = G__19637__0;
    G__19637.cljs$core$IFn$_invoke$arity$1 = G__19637__1;
    G__19637.cljs$core$IFn$_invoke$arity$2 = G__19637__2;
    G__19637.cljs$core$IFn$_invoke$arity$variadic = G__19637__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__19637;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__19640__delegate = function(args) {
      return x;
    };
    var G__19640 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__19640__delegate.call(this, args);
    };
    G__19640.cljs$lang$maxFixedArity = 0;
    G__19640.cljs$lang$applyTo = function(arglist__19641) {
      var args = cljs.core.seq(arglist__19641);
      return G__19640__delegate(args);
    };
    G__19640.cljs$core$IFn$_invoke$arity$variadic = G__19640__delegate;
    return G__19640;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__19642 = null;
      var G__19642__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__19642__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__19642__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__19642__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__19642__4 = function() {
        var G__19643__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__19643 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19643__delegate.call(this, x, y, z, args);
        };
        G__19643.cljs$lang$maxFixedArity = 3;
        G__19643.cljs$lang$applyTo = function(arglist__19644) {
          var x = cljs.core.first(arglist__19644);
          arglist__19644 = cljs.core.next(arglist__19644);
          var y = cljs.core.first(arglist__19644);
          arglist__19644 = cljs.core.next(arglist__19644);
          var z = cljs.core.first(arglist__19644);
          var args = cljs.core.rest(arglist__19644);
          return G__19643__delegate(x, y, z, args);
        };
        G__19643.cljs$core$IFn$_invoke$arity$variadic = G__19643__delegate;
        return G__19643;
      }();
      G__19642 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19642__0.call(this);
          case 1:
            return G__19642__1.call(this, x);
          case 2:
            return G__19642__2.call(this, x, y);
          case 3:
            return G__19642__3.call(this, x, y, z);
          default:
            return G__19642__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19642.cljs$lang$maxFixedArity = 3;
      G__19642.cljs$lang$applyTo = G__19642__4.cljs$lang$applyTo;
      G__19642.cljs$core$IFn$_invoke$arity$0 = G__19642__0;
      G__19642.cljs$core$IFn$_invoke$arity$1 = G__19642__1;
      G__19642.cljs$core$IFn$_invoke$arity$2 = G__19642__2;
      G__19642.cljs$core$IFn$_invoke$arity$3 = G__19642__3;
      G__19642.cljs$core$IFn$_invoke$arity$variadic = G__19642__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19642;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__19645 = null;
      var G__19645__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__19645__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__19645__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__19645__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__19645__4 = function() {
        var G__19646__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__19646 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19646__delegate.call(this, x, y, z, args);
        };
        G__19646.cljs$lang$maxFixedArity = 3;
        G__19646.cljs$lang$applyTo = function(arglist__19647) {
          var x = cljs.core.first(arglist__19647);
          arglist__19647 = cljs.core.next(arglist__19647);
          var y = cljs.core.first(arglist__19647);
          arglist__19647 = cljs.core.next(arglist__19647);
          var z = cljs.core.first(arglist__19647);
          var args = cljs.core.rest(arglist__19647);
          return G__19646__delegate(x, y, z, args);
        };
        G__19646.cljs$core$IFn$_invoke$arity$variadic = G__19646__delegate;
        return G__19646;
      }();
      G__19645 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19645__0.call(this);
          case 1:
            return G__19645__1.call(this, x);
          case 2:
            return G__19645__2.call(this, x, y);
          case 3:
            return G__19645__3.call(this, x, y, z);
          default:
            return G__19645__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19645.cljs$lang$maxFixedArity = 3;
      G__19645.cljs$lang$applyTo = G__19645__4.cljs$lang$applyTo;
      G__19645.cljs$core$IFn$_invoke$arity$0 = G__19645__0;
      G__19645.cljs$core$IFn$_invoke$arity$1 = G__19645__1;
      G__19645.cljs$core$IFn$_invoke$arity$2 = G__19645__2;
      G__19645.cljs$core$IFn$_invoke$arity$3 = G__19645__3;
      G__19645.cljs$core$IFn$_invoke$arity$variadic = G__19645__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19645;
    }();
  };
  var comp__4 = function() {
    var G__19648__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__19649__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__19650 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__19651 = cljs.core.next.call(null, fs__$2);
                ret = G__19650;
                fs__$2 = G__19651;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__19649 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__19649__delegate.call(this, args);
          };
          G__19649.cljs$lang$maxFixedArity = 0;
          G__19649.cljs$lang$applyTo = function(arglist__19652) {
            var args = cljs.core.seq(arglist__19652);
            return G__19649__delegate(args);
          };
          G__19649.cljs$core$IFn$_invoke$arity$variadic = G__19649__delegate;
          return G__19649;
        }();
      }(fs__$1);
    };
    var G__19648 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19648__delegate.call(this, f1, f2, f3, fs);
    };
    G__19648.cljs$lang$maxFixedArity = 3;
    G__19648.cljs$lang$applyTo = function(arglist__19653) {
      var f1 = cljs.core.first(arglist__19653);
      arglist__19653 = cljs.core.next(arglist__19653);
      var f2 = cljs.core.first(arglist__19653);
      arglist__19653 = cljs.core.next(arglist__19653);
      var f3 = cljs.core.first(arglist__19653);
      var fs = cljs.core.rest(arglist__19653);
      return G__19648__delegate(f1, f2, f3, fs);
    };
    G__19648.cljs$core$IFn$_invoke$arity$variadic = G__19648__delegate;
    return G__19648;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__19654__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__19654 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__19654__delegate.call(this, args);
      };
      G__19654.cljs$lang$maxFixedArity = 0;
      G__19654.cljs$lang$applyTo = function(arglist__19655) {
        var args = cljs.core.seq(arglist__19655);
        return G__19654__delegate(args);
      };
      G__19654.cljs$core$IFn$_invoke$arity$variadic = G__19654__delegate;
      return G__19654;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__19656__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__19656 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__19656__delegate.call(this, args);
      };
      G__19656.cljs$lang$maxFixedArity = 0;
      G__19656.cljs$lang$applyTo = function(arglist__19657) {
        var args = cljs.core.seq(arglist__19657);
        return G__19656__delegate(args);
      };
      G__19656.cljs$core$IFn$_invoke$arity$variadic = G__19656__delegate;
      return G__19656;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__19658__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__19658 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__19658__delegate.call(this, args);
      };
      G__19658.cljs$lang$maxFixedArity = 0;
      G__19658.cljs$lang$applyTo = function(arglist__19659) {
        var args = cljs.core.seq(arglist__19659);
        return G__19658__delegate(args);
      };
      G__19658.cljs$core$IFn$_invoke$arity$variadic = G__19658__delegate;
      return G__19658;
    }();
  };
  var partial__5 = function() {
    var G__19660__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__19661__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__19661 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__19661__delegate.call(this, args);
        };
        G__19661.cljs$lang$maxFixedArity = 0;
        G__19661.cljs$lang$applyTo = function(arglist__19662) {
          var args = cljs.core.seq(arglist__19662);
          return G__19661__delegate(args);
        };
        G__19661.cljs$core$IFn$_invoke$arity$variadic = G__19661__delegate;
        return G__19661;
      }();
    };
    var G__19660 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19660__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__19660.cljs$lang$maxFixedArity = 4;
    G__19660.cljs$lang$applyTo = function(arglist__19663) {
      var f = cljs.core.first(arglist__19663);
      arglist__19663 = cljs.core.next(arglist__19663);
      var arg1 = cljs.core.first(arglist__19663);
      arglist__19663 = cljs.core.next(arglist__19663);
      var arg2 = cljs.core.first(arglist__19663);
      arglist__19663 = cljs.core.next(arglist__19663);
      var arg3 = cljs.core.first(arglist__19663);
      var more = cljs.core.rest(arglist__19663);
      return G__19660__delegate(f, arg1, arg2, arg3, more);
    };
    G__19660.cljs$core$IFn$_invoke$arity$variadic = G__19660__delegate;
    return G__19660;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__19664 = null;
      var G__19664__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__19664__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__19664__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__19664__4 = function() {
        var G__19665__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__19665 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19665__delegate.call(this, a, b, c, ds);
        };
        G__19665.cljs$lang$maxFixedArity = 3;
        G__19665.cljs$lang$applyTo = function(arglist__19666) {
          var a = cljs.core.first(arglist__19666);
          arglist__19666 = cljs.core.next(arglist__19666);
          var b = cljs.core.first(arglist__19666);
          arglist__19666 = cljs.core.next(arglist__19666);
          var c = cljs.core.first(arglist__19666);
          var ds = cljs.core.rest(arglist__19666);
          return G__19665__delegate(a, b, c, ds);
        };
        G__19665.cljs$core$IFn$_invoke$arity$variadic = G__19665__delegate;
        return G__19665;
      }();
      G__19664 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__19664__1.call(this, a);
          case 2:
            return G__19664__2.call(this, a, b);
          case 3:
            return G__19664__3.call(this, a, b, c);
          default:
            return G__19664__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19664.cljs$lang$maxFixedArity = 3;
      G__19664.cljs$lang$applyTo = G__19664__4.cljs$lang$applyTo;
      G__19664.cljs$core$IFn$_invoke$arity$1 = G__19664__1;
      G__19664.cljs$core$IFn$_invoke$arity$2 = G__19664__2;
      G__19664.cljs$core$IFn$_invoke$arity$3 = G__19664__3;
      G__19664.cljs$core$IFn$_invoke$arity$variadic = G__19664__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19664;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__19667 = null;
      var G__19667__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__19667__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__19667__4 = function() {
        var G__19668__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__19668 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19668__delegate.call(this, a, b, c, ds);
        };
        G__19668.cljs$lang$maxFixedArity = 3;
        G__19668.cljs$lang$applyTo = function(arglist__19669) {
          var a = cljs.core.first(arglist__19669);
          arglist__19669 = cljs.core.next(arglist__19669);
          var b = cljs.core.first(arglist__19669);
          arglist__19669 = cljs.core.next(arglist__19669);
          var c = cljs.core.first(arglist__19669);
          var ds = cljs.core.rest(arglist__19669);
          return G__19668__delegate(a, b, c, ds);
        };
        G__19668.cljs$core$IFn$_invoke$arity$variadic = G__19668__delegate;
        return G__19668;
      }();
      G__19667 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__19667__2.call(this, a, b);
          case 3:
            return G__19667__3.call(this, a, b, c);
          default:
            return G__19667__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19667.cljs$lang$maxFixedArity = 3;
      G__19667.cljs$lang$applyTo = G__19667__4.cljs$lang$applyTo;
      G__19667.cljs$core$IFn$_invoke$arity$2 = G__19667__2;
      G__19667.cljs$core$IFn$_invoke$arity$3 = G__19667__3;
      G__19667.cljs$core$IFn$_invoke$arity$variadic = G__19667__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19667;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__19670 = null;
      var G__19670__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__19670__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__19670__4 = function() {
        var G__19671__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__19671 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19671__delegate.call(this, a, b, c, ds);
        };
        G__19671.cljs$lang$maxFixedArity = 3;
        G__19671.cljs$lang$applyTo = function(arglist__19672) {
          var a = cljs.core.first(arglist__19672);
          arglist__19672 = cljs.core.next(arglist__19672);
          var b = cljs.core.first(arglist__19672);
          arglist__19672 = cljs.core.next(arglist__19672);
          var c = cljs.core.first(arglist__19672);
          var ds = cljs.core.rest(arglist__19672);
          return G__19671__delegate(a, b, c, ds);
        };
        G__19671.cljs$core$IFn$_invoke$arity$variadic = G__19671__delegate;
        return G__19671;
      }();
      G__19670 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__19670__2.call(this, a, b);
          case 3:
            return G__19670__3.call(this, a, b, c);
          default:
            return G__19670__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19670.cljs$lang$maxFixedArity = 3;
      G__19670.cljs$lang$applyTo = G__19670__4.cljs$lang$applyTo;
      G__19670.cljs$core$IFn$_invoke$arity$2 = G__19670__2;
      G__19670.cljs$core$IFn$_invoke$arity$3 = G__19670__3;
      G__19670.cljs$core$IFn$_invoke$arity$variadic = G__19670__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19670;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4409__auto___19673 = size;
          var i_19674 = 0;
          while (true) {
            if (i_19674 < n__4409__auto___19673) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_19674, cljs.core._nth.call(null, c, i_19674)));
              var G__19675 = i_19674 + 1;
              i_19674 = G__19675;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(f1) {
      return function() {
        var G__19676 = null;
        var G__19676__0 = function() {
          return f1.call(null);
        };
        var G__19676__1 = function(result) {
          return f1.call(null, result);
        };
        var G__19676__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return f1.call(null, result, v);
          }
        };
        G__19676 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19676__0.call(this);
            case 1:
              return G__19676__1.call(this, result);
            case 2:
              return G__19676__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19676.cljs$core$IFn$_invoke$arity$0 = G__19676__0;
        G__19676.cljs$core$IFn$_invoke$arity$1 = G__19676__1;
        G__19676.cljs$core$IFn$_invoke$arity$2 = G__19676__2;
        return G__19676;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4409__auto___19677 = size;
          var i_19678 = 0;
          while (true) {
            if (i_19678 < n__4409__auto___19677) {
              var x_19679 = f.call(null, cljs.core._nth.call(null, c, i_19678));
              if (x_19679 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_19679);
              }
              var G__19680 = i_19678 + 1;
              i_19678 = G__19680;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__19681 = cljs.core.seq.call(null, self__.watches);
  var chunk__19682 = null;
  var count__19683 = 0;
  var i__19684 = 0;
  while (true) {
    if (i__19684 < count__19683) {
      var vec__19685 = cljs.core._nth.call(null, chunk__19682, i__19684);
      var key = cljs.core.nth.call(null, vec__19685, 0, null);
      var f = cljs.core.nth.call(null, vec__19685, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__19687 = seq__19681;
      var G__19688 = chunk__19682;
      var G__19689 = count__19683;
      var G__19690 = i__19684 + 1;
      seq__19681 = G__19687;
      chunk__19682 = G__19688;
      count__19683 = G__19689;
      i__19684 = G__19690;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19681);
      if (temp__4126__auto__) {
        var seq__19681__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19681__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__19681__$1);
          var G__19691 = cljs.core.chunk_rest.call(null, seq__19681__$1);
          var G__19692 = c__4309__auto__;
          var G__19693 = cljs.core.count.call(null, c__4309__auto__);
          var G__19694 = 0;
          seq__19681 = G__19691;
          chunk__19682 = G__19692;
          count__19683 = G__19693;
          i__19684 = G__19694;
          continue;
        } else {
          var vec__19686 = cljs.core.first.call(null, seq__19681__$1);
          var key = cljs.core.nth.call(null, vec__19686, 0, null);
          var f = cljs.core.nth.call(null, vec__19686, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__19695 = cljs.core.next.call(null, seq__19681__$1);
          var G__19696 = null;
          var G__19697 = 0;
          var G__19698 = 0;
          seq__19681 = G__19695;
          chunk__19682 = G__19696;
          count__19683 = G__19697;
          i__19684 = G__19698;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__19702__delegate = function(x, p__19699) {
      var map__19701 = p__19699;
      var map__19701__$1 = cljs.core.seq_QMARK_.call(null, map__19701) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19701) : map__19701;
      var validator = cljs.core.get.call(null, map__19701__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__19701__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__19702 = function(x, var_args) {
      var p__19699 = null;
      if (arguments.length > 1) {
        p__19699 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__19702__delegate.call(this, x, p__19699);
    };
    G__19702.cljs$lang$maxFixedArity = 1;
    G__19702.cljs$lang$applyTo = function(arglist__19703) {
      var x = cljs.core.first(arglist__19703);
      var p__19699 = cljs.core.rest(arglist__19703);
      return G__19702__delegate(x, p__19699);
    };
    G__19702.cljs$core$IFn$_invoke$arity$variadic = G__19702__delegate;
    return G__19702;
  }();
  atom = function(x, var_args) {
    var p__19699 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error("Assert failed: Validator rejected reference state\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null)))));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__19704__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__19704 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19704__delegate.call(this, a, f, x, y, more);
    };
    G__19704.cljs$lang$maxFixedArity = 4;
    G__19704.cljs$lang$applyTo = function(arglist__19705) {
      var a = cljs.core.first(arglist__19705);
      arglist__19705 = cljs.core.next(arglist__19705);
      var f = cljs.core.first(arglist__19705);
      arglist__19705 = cljs.core.next(arglist__19705);
      var x = cljs.core.first(arglist__19705);
      arglist__19705 = cljs.core.next(arglist__19705);
      var y = cljs.core.first(arglist__19705);
      var more = cljs.core.rest(arglist__19705);
      return G__19704__delegate(a, f, x, y, more);
    };
    G__19704.cljs$core$IFn$_invoke$arity$variadic = G__19704__delegate;
    return G__19704;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__19706 = null;
          var G__19706__0 = function() {
            return f1.call(null);
          };
          var G__19706__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19706__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return f1.call(null, result, v);
            }
          };
          G__19706 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19706__0.call(this);
              case 1:
                return G__19706__1.call(this, result);
              case 2:
                return G__19706__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19706.cljs$core$IFn$_invoke$arity$0 = G__19706__0;
          G__19706.cljs$core$IFn$_invoke$arity$1 = G__19706__1;
          G__19706.cljs$core$IFn$_invoke$arity$2 = G__19706__2;
          return G__19706;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4409__auto___19707 = size;
            var i_19708 = 0;
            while (true) {
              if (i_19708 < n__4409__auto___19707) {
                var x_19709 = f.call(null, idx + i_19708, cljs.core._nth.call(null, c, i_19708));
                if (x_19709 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_19709);
                }
                var G__19710 = i_19708 + 1;
                i_19708 = G__19710;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            return p.call(null, y);
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__19717__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__19717 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19717__delegate.call(this, x, y, z, args);
        };
        G__19717.cljs$lang$maxFixedArity = 3;
        G__19717.cljs$lang$applyTo = function(arglist__19718) {
          var x = cljs.core.first(arglist__19718);
          arglist__19718 = cljs.core.next(arglist__19718);
          var y = cljs.core.first(arglist__19718);
          arglist__19718 = cljs.core.next(arglist__19718);
          var z = cljs.core.first(arglist__19718);
          var args = cljs.core.rest(arglist__19718);
          return G__19717__delegate(x, y, z, args);
        };
        G__19717.cljs$core$IFn$_invoke$arity$variadic = G__19717__delegate;
        return G__19717;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              var and__3541__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3541__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3541__auto____$2;
              }
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              var and__3541__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3541__auto____$2)) {
                var and__3541__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3541__auto____$3)) {
                  var and__3541__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3541__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3541__auto____$4;
                  }
                } else {
                  return and__3541__auto____$3;
                }
              } else {
                return and__3541__auto____$2;
              }
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__19719__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__19711_SHARP_) {
            var and__3541__auto__ = p1.call(null, p1__19711_SHARP_);
            if (cljs.core.truth_(and__3541__auto__)) {
              return p2.call(null, p1__19711_SHARP_);
            } else {
              return and__3541__auto__;
            }
          }, args));
        };
        var G__19719 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19719__delegate.call(this, x, y, z, args);
        };
        G__19719.cljs$lang$maxFixedArity = 3;
        G__19719.cljs$lang$applyTo = function(arglist__19720) {
          var x = cljs.core.first(arglist__19720);
          arglist__19720 = cljs.core.next(arglist__19720);
          var y = cljs.core.first(arglist__19720);
          arglist__19720 = cljs.core.next(arglist__19720);
          var z = cljs.core.first(arglist__19720);
          var args = cljs.core.rest(arglist__19720);
          return G__19719__delegate(x, y, z, args);
        };
        G__19719.cljs$core$IFn$_invoke$arity$variadic = G__19719__delegate;
        return G__19719;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              var and__3541__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3541__auto____$2)) {
                var and__3541__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3541__auto____$3)) {
                  var and__3541__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3541__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3541__auto____$4;
                  }
                } else {
                  return and__3541__auto____$3;
                }
              } else {
                return and__3541__auto____$2;
              }
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3541__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3541__auto__)) {
            var and__3541__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3541__auto____$1)) {
              var and__3541__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3541__auto____$2)) {
                var and__3541__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3541__auto____$3)) {
                  var and__3541__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3541__auto____$4)) {
                    var and__3541__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3541__auto____$5)) {
                      var and__3541__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3541__auto____$6)) {
                        var and__3541__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3541__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3541__auto____$7;
                        }
                      } else {
                        return and__3541__auto____$6;
                      }
                    } else {
                      return and__3541__auto____$5;
                    }
                  } else {
                    return and__3541__auto____$4;
                  }
                } else {
                  return and__3541__auto____$3;
                }
              } else {
                return and__3541__auto____$2;
              }
            } else {
              return and__3541__auto____$1;
            }
          } else {
            return and__3541__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__19721__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__19712_SHARP_) {
            var and__3541__auto__ = p1.call(null, p1__19712_SHARP_);
            if (cljs.core.truth_(and__3541__auto__)) {
              var and__3541__auto____$1 = p2.call(null, p1__19712_SHARP_);
              if (cljs.core.truth_(and__3541__auto____$1)) {
                return p3.call(null, p1__19712_SHARP_);
              } else {
                return and__3541__auto____$1;
              }
            } else {
              return and__3541__auto__;
            }
          }, args));
        };
        var G__19721 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19721__delegate.call(this, x, y, z, args);
        };
        G__19721.cljs$lang$maxFixedArity = 3;
        G__19721.cljs$lang$applyTo = function(arglist__19722) {
          var x = cljs.core.first(arglist__19722);
          arglist__19722 = cljs.core.next(arglist__19722);
          var y = cljs.core.first(arglist__19722);
          arglist__19722 = cljs.core.next(arglist__19722);
          var z = cljs.core.first(arglist__19722);
          var args = cljs.core.rest(arglist__19722);
          return G__19721__delegate(x, y, z, args);
        };
        G__19721.cljs$core$IFn$_invoke$arity$variadic = G__19721__delegate;
        return G__19721;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__19723__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__19713_SHARP_) {
                return p1__19713_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__19714_SHARP_) {
                var and__3541__auto__ = p1__19714_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3541__auto__)) {
                  return p1__19714_SHARP_.call(null, y);
                } else {
                  return and__3541__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__19715_SHARP_) {
                var and__3541__auto__ = p1__19715_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3541__auto__)) {
                  var and__3541__auto____$1 = p1__19715_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3541__auto____$1)) {
                    return p1__19715_SHARP_.call(null, z);
                  } else {
                    return and__3541__auto____$1;
                  }
                } else {
                  return and__3541__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__19724__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__19716_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__19716_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__19724 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__19724__delegate.call(this, x, y, z, args);
            };
            G__19724.cljs$lang$maxFixedArity = 3;
            G__19724.cljs$lang$applyTo = function(arglist__19725) {
              var x = cljs.core.first(arglist__19725);
              arglist__19725 = cljs.core.next(arglist__19725);
              var y = cljs.core.first(arglist__19725);
              arglist__19725 = cljs.core.next(arglist__19725);
              var z = cljs.core.first(arglist__19725);
              var args = cljs.core.rest(arglist__19725);
              return G__19724__delegate(x, y, z, args);
            };
            G__19724.cljs$core$IFn$_invoke$arity$variadic = G__19724__delegate;
            return G__19724;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__19723 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19723__delegate.call(this, p1, p2, p3, ps);
    };
    G__19723.cljs$lang$maxFixedArity = 3;
    G__19723.cljs$lang$applyTo = function(arglist__19726) {
      var p1 = cljs.core.first(arglist__19726);
      arglist__19726 = cljs.core.next(arglist__19726);
      var p2 = cljs.core.first(arglist__19726);
      arglist__19726 = cljs.core.next(arglist__19726);
      var p3 = cljs.core.first(arglist__19726);
      var ps = cljs.core.rest(arglist__19726);
      return G__19723__delegate(p1, p2, p3, ps);
    };
    G__19723.cljs$core$IFn$_invoke$arity$variadic = G__19723__delegate;
    return G__19723;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3553__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3553__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__19733__delegate = function(x, y, z, args) {
          var or__3553__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__19733 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19733__delegate.call(this, x, y, z, args);
        };
        G__19733.cljs$lang$maxFixedArity = 3;
        G__19733.cljs$lang$applyTo = function(arglist__19734) {
          var x = cljs.core.first(arglist__19734);
          arglist__19734 = cljs.core.next(arglist__19734);
          var y = cljs.core.first(arglist__19734);
          arglist__19734 = cljs.core.next(arglist__19734);
          var z = cljs.core.first(arglist__19734);
          var args = cljs.core.rest(arglist__19734);
          return G__19733__delegate(x, y, z, args);
        };
        G__19733.cljs$core$IFn$_invoke$arity$variadic = G__19733__delegate;
        return G__19733;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            var or__3553__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3553__auto____$2)) {
              return or__3553__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            var or__3553__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3553__auto____$2)) {
              return or__3553__auto____$2;
            } else {
              var or__3553__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3553__auto____$3)) {
                return or__3553__auto____$3;
              } else {
                var or__3553__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3553__auto____$4)) {
                  return or__3553__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__19735__delegate = function(x, y, z, args) {
          var or__3553__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3553__auto__) {
              return function(p1__19727_SHARP_) {
                var or__3553__auto____$1 = p1.call(null, p1__19727_SHARP_);
                if (cljs.core.truth_(or__3553__auto____$1)) {
                  return or__3553__auto____$1;
                } else {
                  return p2.call(null, p1__19727_SHARP_);
                }
              };
            }(or__3553__auto__), args);
          }
        };
        var G__19735 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19735__delegate.call(this, x, y, z, args);
        };
        G__19735.cljs$lang$maxFixedArity = 3;
        G__19735.cljs$lang$applyTo = function(arglist__19736) {
          var x = cljs.core.first(arglist__19736);
          arglist__19736 = cljs.core.next(arglist__19736);
          var y = cljs.core.first(arglist__19736);
          arglist__19736 = cljs.core.next(arglist__19736);
          var z = cljs.core.first(arglist__19736);
          var args = cljs.core.rest(arglist__19736);
          return G__19735__delegate(x, y, z, args);
        };
        G__19735.cljs$core$IFn$_invoke$arity$variadic = G__19735__delegate;
        return G__19735;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            var or__3553__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3553__auto____$2)) {
              return or__3553__auto____$2;
            } else {
              var or__3553__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3553__auto____$3)) {
                return or__3553__auto____$3;
              } else {
                var or__3553__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3553__auto____$4)) {
                  return or__3553__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3553__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            var or__3553__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3553__auto____$2)) {
              return or__3553__auto____$2;
            } else {
              var or__3553__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3553__auto____$3)) {
                return or__3553__auto____$3;
              } else {
                var or__3553__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3553__auto____$4)) {
                  return or__3553__auto____$4;
                } else {
                  var or__3553__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3553__auto____$5)) {
                    return or__3553__auto____$5;
                  } else {
                    var or__3553__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3553__auto____$6)) {
                      return or__3553__auto____$6;
                    } else {
                      var or__3553__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3553__auto____$7)) {
                        return or__3553__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__19737__delegate = function(x, y, z, args) {
          var or__3553__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3553__auto__) {
              return function(p1__19728_SHARP_) {
                var or__3553__auto____$1 = p1.call(null, p1__19728_SHARP_);
                if (cljs.core.truth_(or__3553__auto____$1)) {
                  return or__3553__auto____$1;
                } else {
                  var or__3553__auto____$2 = p2.call(null, p1__19728_SHARP_);
                  if (cljs.core.truth_(or__3553__auto____$2)) {
                    return or__3553__auto____$2;
                  } else {
                    return p3.call(null, p1__19728_SHARP_);
                  }
                }
              };
            }(or__3553__auto__), args);
          }
        };
        var G__19737 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19737__delegate.call(this, x, y, z, args);
        };
        G__19737.cljs$lang$maxFixedArity = 3;
        G__19737.cljs$lang$applyTo = function(arglist__19738) {
          var x = cljs.core.first(arglist__19738);
          arglist__19738 = cljs.core.next(arglist__19738);
          var y = cljs.core.first(arglist__19738);
          arglist__19738 = cljs.core.next(arglist__19738);
          var z = cljs.core.first(arglist__19738);
          var args = cljs.core.rest(arglist__19738);
          return G__19737__delegate(x, y, z, args);
        };
        G__19737.cljs$core$IFn$_invoke$arity$variadic = G__19737__delegate;
        return G__19737;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__19739__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__19729_SHARP_) {
                return p1__19729_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__19730_SHARP_) {
                var or__3553__auto__ = p1__19730_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3553__auto__)) {
                  return or__3553__auto__;
                } else {
                  return p1__19730_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__19731_SHARP_) {
                var or__3553__auto__ = p1__19731_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3553__auto__)) {
                  return or__3553__auto__;
                } else {
                  var or__3553__auto____$1 = p1__19731_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3553__auto____$1)) {
                    return or__3553__auto____$1;
                  } else {
                    return p1__19731_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__19740__delegate = function(x, y, z, args) {
              var or__3553__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3553__auto__)) {
                return or__3553__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3553__auto__, ps__$1) {
                  return function(p1__19732_SHARP_) {
                    return cljs.core.some.call(null, p1__19732_SHARP_, args);
                  };
                }(or__3553__auto__, ps__$1), ps__$1);
              }
            };
            var G__19740 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__19740__delegate.call(this, x, y, z, args);
            };
            G__19740.cljs$lang$maxFixedArity = 3;
            G__19740.cljs$lang$applyTo = function(arglist__19741) {
              var x = cljs.core.first(arglist__19741);
              arglist__19741 = cljs.core.next(arglist__19741);
              var y = cljs.core.first(arglist__19741);
              arglist__19741 = cljs.core.next(arglist__19741);
              var z = cljs.core.first(arglist__19741);
              var args = cljs.core.rest(arglist__19741);
              return G__19740__delegate(x, y, z, args);
            };
            G__19740.cljs$core$IFn$_invoke$arity$variadic = G__19740__delegate;
            return G__19740;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__19739 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19739__delegate.call(this, p1, p2, p3, ps);
    };
    G__19739.cljs$lang$maxFixedArity = 3;
    G__19739.cljs$lang$applyTo = function(arglist__19742) {
      var p1 = cljs.core.first(arglist__19742);
      arglist__19742 = cljs.core.next(arglist__19742);
      var p2 = cljs.core.first(arglist__19742);
      arglist__19742 = cljs.core.next(arglist__19742);
      var p3 = cljs.core.first(arglist__19742);
      var ps = cljs.core.rest(arglist__19742);
      return G__19739__delegate(p1, p2, p3, ps);
    };
    G__19739.cljs$core$IFn$_invoke$arity$variadic = G__19739__delegate;
    return G__19739;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(f1) {
      return function() {
        var G__19744 = null;
        var G__19744__0 = function() {
          return f1.call(null);
        };
        var G__19744__1 = function(result) {
          return f1.call(null, result);
        };
        var G__19744__2 = function(result, input) {
          return f1.call(null, result, f.call(null, input));
        };
        var G__19744__3 = function() {
          var G__19745__delegate = function(result, input, inputs) {
            return f1.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__19745 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__19745__delegate.call(this, result, input, inputs);
          };
          G__19745.cljs$lang$maxFixedArity = 2;
          G__19745.cljs$lang$applyTo = function(arglist__19746) {
            var result = cljs.core.first(arglist__19746);
            arglist__19746 = cljs.core.next(arglist__19746);
            var input = cljs.core.first(arglist__19746);
            var inputs = cljs.core.rest(arglist__19746);
            return G__19745__delegate(result, input, inputs);
          };
          G__19745.cljs$core$IFn$_invoke$arity$variadic = G__19745__delegate;
          return G__19745;
        }();
        G__19744 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__19744__0.call(this);
            case 1:
              return G__19744__1.call(this, result);
            case 2:
              return G__19744__2.call(this, result, input);
            default:
              return G__19744__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19744.cljs$lang$maxFixedArity = 2;
        G__19744.cljs$lang$applyTo = G__19744__3.cljs$lang$applyTo;
        G__19744.cljs$core$IFn$_invoke$arity$0 = G__19744__0;
        G__19744.cljs$core$IFn$_invoke$arity$1 = G__19744__1;
        G__19744.cljs$core$IFn$_invoke$arity$2 = G__19744__2;
        G__19744.cljs$core$IFn$_invoke$arity$variadic = G__19744__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__19744;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4409__auto___19747 = size;
          var i_19748 = 0;
          while (true) {
            if (i_19748 < n__4409__auto___19747) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_19748)));
              var G__19749 = i_19748 + 1;
              i_19748 = G__19749;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__19750__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__19743_SHARP_) {
          return cljs.core.apply.call(null, f, p1__19743_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__19750 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19750__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__19750.cljs$lang$maxFixedArity = 4;
    G__19750.cljs$lang$applyTo = function(arglist__19751) {
      var f = cljs.core.first(arglist__19751);
      arglist__19751 = cljs.core.next(arglist__19751);
      var c1 = cljs.core.first(arglist__19751);
      arglist__19751 = cljs.core.next(arglist__19751);
      var c2 = cljs.core.first(arglist__19751);
      arglist__19751 = cljs.core.next(arglist__19751);
      var c3 = cljs.core.first(arglist__19751);
      var colls = cljs.core.rest(arglist__19751);
      return G__19750__delegate(f, c1, c2, c3, colls);
    };
    G__19750.cljs$core$IFn$_invoke$arity$variadic = G__19750__delegate;
    return G__19750;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__19752 = null;
          var G__19752__0 = function() {
            return f1.call(null);
          };
          var G__19752__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19752__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            var result__$1 = n__$1 > 0 ? f1.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__19752 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19752__0.call(this);
              case 1:
                return G__19752__1.call(this, result);
              case 2:
                return G__19752__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19752.cljs$core$IFn$_invoke$arity$0 = G__19752__0;
          G__19752.cljs$core$IFn$_invoke$arity$1 = G__19752__1;
          G__19752.cljs$core$IFn$_invoke$arity$2 = G__19752__2;
          return G__19752;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__19753 = null;
          var G__19753__0 = function() {
            return f1.call(null);
          };
          var G__19753__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19753__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            if (n__$1 > 0) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__19753 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19753__0.call(this);
              case 1:
                return G__19753__1.call(this, result);
              case 2:
                return G__19753__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19753.cljs$core$IFn$_invoke$arity$0 = G__19753__0;
          G__19753.cljs$core$IFn$_invoke$arity$1 = G__19753__1;
          G__19753.cljs$core$IFn$_invoke$arity$2 = G__19753__2;
          return G__19753;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__19754 = n__$1 - 1;
          var G__19755 = cljs.core.rest.call(null, s);
          n__$1 = G__19754;
          coll__$1 = G__19755;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__19756 = cljs.core.next.call(null, s);
      var G__19757 = cljs.core.next.call(null, lead);
      s = G__19756;
      lead = G__19757;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(f1) {
      var da = cljs.core.atom.call(null, true);
      return function(da) {
        return function() {
          var G__19758 = null;
          var G__19758__0 = function() {
            return f1.call(null);
          };
          var G__19758__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19758__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3541__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3541__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3541__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.reset_BANG_.call(null, da, null);
              return f1.call(null, result, input);
            }
          };
          G__19758 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19758__0.call(this);
              case 1:
                return G__19758__1.call(this, result);
              case 2:
                return G__19758__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19758.cljs$core$IFn$_invoke$arity$0 = G__19758__0;
          G__19758.cljs$core$IFn$_invoke$arity$1 = G__19758__1;
          G__19758.cljs$core$IFn$_invoke$arity$2 = G__19758__2;
          return G__19758;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3541__auto__ = s;
          if (and__3541__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3541__auto__;
          }
        }())) {
          var G__19759 = pred__$1;
          var G__19760 = cljs.core.rest.call(null, s);
          pred__$1 = G__19759;
          coll__$1 = G__19760;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__19761__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__19761 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19761__delegate.call(this, c1, c2, colls);
    };
    G__19761.cljs$lang$maxFixedArity = 2;
    G__19761.cljs$lang$applyTo = function(arglist__19762) {
      var c1 = cljs.core.first(arglist__19762);
      arglist__19762 = cljs.core.next(arglist__19762);
      var c2 = cljs.core.first(arglist__19762);
      var colls = cljs.core.rest(arglist__19762);
      return G__19761__delegate(c1, c2, colls);
    };
    G__19761.cljs$core$IFn$_invoke$arity$variadic = G__19761__delegate;
    return G__19761;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__19763__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__19763 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19763__delegate.call(this, f, coll, colls);
    };
    G__19763.cljs$lang$maxFixedArity = 2;
    G__19763.cljs$lang$applyTo = function(arglist__19764) {
      var f = cljs.core.first(arglist__19764);
      arglist__19764 = cljs.core.next(arglist__19764);
      var coll = cljs.core.first(arglist__19764);
      var colls = cljs.core.rest(arglist__19764);
      return G__19763__delegate(f, coll, colls);
    };
    G__19763.cljs$core$IFn$_invoke$arity$variadic = G__19763__delegate;
    return G__19763;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__19765 = null;
        var G__19765__0 = function() {
          return f1.call(null);
        };
        var G__19765__1 = function(result) {
          return f1.call(null, result);
        };
        var G__19765__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return result;
          }
        };
        G__19765 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19765__0.call(this);
            case 1:
              return G__19765__1.call(this, result);
            case 2:
              return G__19765__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19765.cljs$core$IFn$_invoke$arity$0 = G__19765__0;
        G__19765.cljs$core$IFn$_invoke$arity$1 = G__19765__1;
        G__19765.cljs$core$IFn$_invoke$arity$2 = G__19765__2;
        return G__19765;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4409__auto___19766 = size;
          var i_19767 = 0;
          while (true) {
            if (i_19767 < n__4409__auto___19766) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_19767)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_19767));
              } else {
              }
              var G__19768 = i_19767 + 1;
              i_19767 = G__19768;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__19769_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__19769_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__19772 = to;
        if (G__19772) {
          var bit__4196__auto__ = G__19772.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4196__auto__ || G__19772.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__19773 = to;
      if (G__19773) {
        var bit__4196__auto__ = G__19773.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4196__auto__ || G__19773.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__19774__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__19774 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19774__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__19774.cljs$lang$maxFixedArity = 4;
    G__19774.cljs$lang$applyTo = function(arglist__19775) {
      var f = cljs.core.first(arglist__19775);
      arglist__19775 = cljs.core.next(arglist__19775);
      var c1 = cljs.core.first(arglist__19775);
      arglist__19775 = cljs.core.next(arglist__19775);
      var c2 = cljs.core.first(arglist__19775);
      arglist__19775 = cljs.core.next(arglist__19775);
      var c3 = cljs.core.first(arglist__19775);
      var colls = cljs.core.rest(arglist__19775);
      return G__19774__delegate(f, c1, c2, c3, colls);
    };
    G__19774.cljs$core$IFn$_invoke$arity$variadic = G__19774__delegate;
    return G__19774;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__19777 = m__$1;
          if (G__19777) {
            var bit__4203__auto__ = G__19777.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4203__auto__ || G__19777.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__19777.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__19777);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__19777);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__19778 = sentinel;
            var G__19779 = m__$2;
            var G__19780 = cljs.core.next.call(null, ks__$1);
            sentinel = G__19778;
            m__$1 = G__19779;
            ks__$1 = G__19780;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__19781, v) {
  var vec__19783 = p__19781;
  var k = cljs.core.nth.call(null, vec__19783, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__19783, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__19784, f) {
    var vec__19794 = p__19784;
    var k = cljs.core.nth.call(null, vec__19794, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__19794, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__19785, f, a) {
    var vec__19795 = p__19785;
    var k = cljs.core.nth.call(null, vec__19795, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__19795, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__19786, f, a, b) {
    var vec__19796 = p__19786;
    var k = cljs.core.nth.call(null, vec__19796, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__19796, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__19787, f, a, b, c) {
    var vec__19797 = p__19787;
    var k = cljs.core.nth.call(null, vec__19797, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__19797, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__19799__delegate = function(m, p__19788, f, a, b, c, args) {
      var vec__19798 = p__19788;
      var k = cljs.core.nth.call(null, vec__19798, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__19798, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__19799 = function(m, p__19788, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__19799__delegate.call(this, m, p__19788, f, a, b, c, args);
    };
    G__19799.cljs$lang$maxFixedArity = 6;
    G__19799.cljs$lang$applyTo = function(arglist__19800) {
      var m = cljs.core.first(arglist__19800);
      arglist__19800 = cljs.core.next(arglist__19800);
      var p__19788 = cljs.core.first(arglist__19800);
      arglist__19800 = cljs.core.next(arglist__19800);
      var f = cljs.core.first(arglist__19800);
      arglist__19800 = cljs.core.next(arglist__19800);
      var a = cljs.core.first(arglist__19800);
      arglist__19800 = cljs.core.next(arglist__19800);
      var b = cljs.core.first(arglist__19800);
      arglist__19800 = cljs.core.next(arglist__19800);
      var c = cljs.core.first(arglist__19800);
      var args = cljs.core.rest(arglist__19800);
      return G__19799__delegate(m, p__19788, f, a, b, c, args);
    };
    G__19799.cljs$core$IFn$_invoke$arity$variadic = G__19799__delegate;
    return G__19799;
  }();
  update_in = function(m, p__19788, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__19788, f);
      case 4:
        return update_in__4.call(this, m, p__19788, f, a);
      case 5:
        return update_in__5.call(this, m, p__19788, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__19788, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__19788, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4123__auto__, writer__4124__auto__, opts__4125__auto__) {
  return cljs.core._write.call(null, writer__4124__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__19801 = ll - 5;
      var G__19802 = r;
      ll = G__19801;
      ret = G__19802;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error("No item " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i) + " in vector of length " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__19803 = cljs.core.pv_aget.call(null, node, 0);
      var G__19804 = level - 5;
      node = G__19803;
      level = G__19804;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__19805 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__19806 = level - 5;
        node = G__19805;
        level = G__19806;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__19808 = j + 1;
              var G__19809 = init__$2;
              j = G__19808;
              init__$1 = G__19809;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__19810 = i + step_init[0];
        i = G__19810;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds  [0," + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt) + "]");
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4409__auto___19811 = len;
    var i_19812 = 0;
    while (true) {
      if (i_19812 < n__4409__auto___19811) {
        new_tail[i_19812] = self__.tail[i_19812];
        var G__19813 = i_19812 + 1;
        i_19812 = G__19813;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__19814 = null;
  var G__19814__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__19814__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__19814 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19814__2.call(this, self__, k);
      case 3:
        return G__19814__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19814.cljs$core$IFn$_invoke$arity$2 = G__19814__2;
  G__19814.cljs$core$IFn$_invoke$arity$3 = G__19814__3;
  return G__19814;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args19807) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19807)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__19815 = i + 1;
        var G__19816 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__19815;
        out = G__19816;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__19817) {
    var args = cljs.core.seq(arglist__19817);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3860__auto__ = self__.end;
    var y__3861__auto__ = v_pos + 1;
    return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__19819 = null;
  var G__19819__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__19819__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__19819 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19819__2.call(this, self__, k);
      case 3:
        return G__19819__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19819.cljs$core$IFn$_invoke$arity$2 = G__19819__2;
  G__19819.cljs$core$IFn$_invoke$arity$3 = G__19819__3;
  return G__19819;
}();
cljs.core.Subvec.prototype.apply = function(self__, args19818) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19818)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__19820 = meta;
      var G__19821 = v.v;
      var G__19822 = v.start + start;
      var G__19823 = v.start + end;
      var G__19824 = __hash;
      meta = G__19820;
      v = G__19821;
      start = G__19822;
      end = G__19823;
      __hash = G__19824;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj19828 = {};
    return obj19828;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__19829 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__19830 = level - 5;
        node = G__19829;
        level = G__19830;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__19832 = null;
  var G__19832__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19832__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19832 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19832__2.call(this, self__, k);
      case 3:
        return G__19832__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19832.cljs$core$IFn$_invoke$arity$2 = G__19832__2;
  G__19832.cljs$core$IFn$_invoke$arity$3 = G__19832__3;
  return G__19832;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args19831) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19831)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds for TransientVector of length" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3553__auto__ = self__.front;
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3553__auto__ = self__.rear;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__19833 = i + incr;
        i = G__19833;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__19834 = i + 1;
      var G__19835 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__19834;
      out = G__19835;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj19839 = {};
    return obj19839;
  }();
  var l = ks.length;
  var i_19840 = 0;
  while (true) {
    if (i_19840 < l) {
      var k_19841 = ks[i_19840];
      new_obj[k_19841] = obj[k_19841];
      var G__19842 = i_19840 + 1;
      i_19840 = G__19842;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__19845 = cljs.core.rest.call(null, keys__$1);
        var G__19846 = init__$2;
        keys__$1 = G__19845;
        init__$1 = G__19846;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__19843_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__19843_SHARP_, self__.strobj[p1__19843_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__19847 = null;
  var G__19847__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19847__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19847 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19847__2.call(this, self__, k);
      case 3:
        return G__19847__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19847.cljs$core$IFn$_invoke$arity$2 = G__19847__2;
  G__19847.cljs$core$IFn$_invoke$arity$3 = G__19847__3;
  return G__19847;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args19844) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19844)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj19849 = {};
  return obj19849;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.Iterator = function(s) {
  this.s = s;
};
cljs.core.Iterator.cljs$lang$type = true;
cljs.core.Iterator.cljs$lang$ctorStr = "cljs.core/Iterator";
cljs.core.Iterator.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Iterator");
};
cljs.core.Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_Iterator = function __GT_Iterator(s) {
  return new cljs.core.Iterator(s);
};
cljs.core.iterator = function iterator(coll) {
  return new cljs.core.Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.EntriesIterator.cljs$lang$type = true;
cljs.core.EntriesIterator.cljs$lang$ctorStr = "cljs.core/EntriesIterator";
cljs.core.EntriesIterator.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/EntriesIterator");
};
cljs.core.EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__19850 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__19850, 0, null);
    var v = cljs.core.nth.call(null, vec__19850, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_EntriesIterator = function __GT_EntriesIterator(s) {
  return new cljs.core.EntriesIterator(s);
};
cljs.core.entries_iterator = function entries_iterator(coll) {
  return new cljs.core.EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.SetEntriesIterator.cljs$lang$type = true;
cljs.core.SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/SetEntriesIterator";
cljs.core.SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/SetEntriesIterator");
};
cljs.core.SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_SetEntriesIterator = function __GT_SetEntriesIterator(s) {
  return new cljs.core.SetEntriesIterator(s);
};
cljs.core.set_entries_iterator = function set_entries_iterator(coll) {
  return new cljs.core.SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__19851 = i + 2;
        i = G__19851;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__19852 = i + 2;
        i = G__19852;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__19853 = i + 2;
        i = G__19853;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__19854 = i + 2;
        i = G__19854;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__19855 = i + 2;
        i = G__19855;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_19856 = 0;
  while (true) {
    if (i_19856 < l) {
      narr[i_19856] = arr[i_19856];
      var G__19857 = i_19856 + 1;
      i_19856 = G__19857;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19859 = cljs.core.seq.call(null, coll);
  var chunk__19860 = null;
  var count__19861 = 0;
  var i__19862 = 0;
  while (true) {
    if (i__19862 < count__19861) {
      var vec__19863 = cljs.core._nth.call(null, chunk__19860, i__19862);
      var k = cljs.core.nth.call(null, vec__19863, 0, null);
      var v = cljs.core.nth.call(null, vec__19863, 1, null);
      f.call(null, v, k);
      var G__19868 = seq__19859;
      var G__19869 = chunk__19860;
      var G__19870 = count__19861;
      var G__19871 = i__19862 + 1;
      seq__19859 = G__19868;
      chunk__19860 = G__19869;
      count__19861 = G__19870;
      i__19862 = G__19871;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19859);
      if (temp__4126__auto__) {
        var seq__19859__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19859__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__19859__$1);
          var G__19872 = cljs.core.chunk_rest.call(null, seq__19859__$1);
          var G__19873 = c__4309__auto__;
          var G__19874 = cljs.core.count.call(null, c__4309__auto__);
          var G__19875 = 0;
          seq__19859 = G__19872;
          chunk__19860 = G__19873;
          count__19861 = G__19874;
          i__19862 = G__19875;
          continue;
        } else {
          var vec__19864 = cljs.core.first.call(null, seq__19859__$1);
          var k = cljs.core.nth.call(null, vec__19864, 0, null);
          var v = cljs.core.nth.call(null, vec__19864, 1, null);
          f.call(null, v, k);
          var G__19876 = cljs.core.next.call(null, seq__19859__$1);
          var G__19877 = null;
          var G__19878 = 0;
          var G__19879 = 0;
          seq__19859 = G__19876;
          chunk__19860 = G__19877;
          count__19861 = G__19878;
          i__19862 = G__19879;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__19880 = i + 2;
        var G__19881 = init__$2;
        i = G__19880;
        init__$1 = G__19881;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj19866 = {};
    return obj19866;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__19882 = s + 2;
            var G__19883 = d;
            s = G__19882;
            d = G__19883;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__19884 = s + 2;
            var G__19885 = d + 2;
            s = G__19884;
            d = G__19885;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__19867 = cljs.core.aclone.call(null, self__.arr);
        G__19867[idx + 1] = v;
        return G__19867;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__19886 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__19887 = cljs.core.next.call(null, es);
          ret = G__19886;
          es = G__19887;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__19888 = null;
  var G__19888__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19888__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19888 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19888__2.call(this, self__, k);
      case 3:
        return G__19888__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19888.cljs$core$IFn$_invoke$arity$2 = G__19888__2;
  G__19888.cljs$core$IFn$_invoke$arity$3 = G__19888__3;
  return G__19888;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args19858) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19858)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__19889 = i + 2;
        var G__19890 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__19889;
        ret = G__19890;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__19891_19893 = self__.arr;
      G__19891_19893.pop();
      G__19891_19893.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__19892 = o;
      if (G__19892) {
        var bit__4203__auto__ = G__19892.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4203__auto__ || G__19892.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__19892.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__19892);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__19892);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__19894 = cljs.core.next.call(null, es);
          var G__19895 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__19894;
          tcoll__$2 = G__19895;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__19896 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__19897 = i + 2;
      out = G__19896;
      i = G__19897;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4123__auto__, writer__4124__auto__, opts__4125__auto__) {
  return cljs.core._write.call(null, writer__4124__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__19900 = cljs.core.aclone.call(null, arr);
    G__19900[i] = a;
    return G__19900;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__19901 = cljs.core.aclone.call(null, arr);
    G__19901[i] = a;
    G__19901[j] = b;
    return G__19901;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__19902 = i + 2;
        var G__19903 = init__$2;
        i = G__19902;
        init__$1 = G__19903;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_19904 = 0;
        var j_19905 = 0;
        while (true) {
          if (i_19904 < 32) {
            if ((self__.bitmap >>> i_19904 & 1) === 0) {
              var G__19906 = i_19904 + 1;
              var G__19907 = j_19905;
              i_19904 = G__19906;
              j_19905 = G__19907;
              continue;
            } else {
              nodes[i_19904] = !(self__.arr[j_19905] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_19905]), self__.arr[j_19905], self__.arr[j_19905 + 1], added_leaf_QMARK_) : self__.arr[j_19905 + 1];
              var G__19908 = i_19904 + 1;
              var G__19909 = j_19905 + 2;
              i_19904 = G__19908;
              j_19905 = G__19909;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_19910 = 0;
      var j_19911 = 0;
      while (true) {
        if (i_19910 < 32) {
          if ((self__.bitmap >>> i_19910 & 1) === 0) {
            var G__19912 = i_19910 + 1;
            var G__19913 = j_19911;
            i_19910 = G__19912;
            j_19911 = G__19913;
            continue;
          } else {
            nodes[i_19910] = !(self__.arr[j_19911] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_19911]), self__.arr[j_19911], self__.arr[j_19911 + 1], added_leaf_QMARK_) : self__.arr[j_19911 + 1];
            var G__19914 = i_19910 + 1;
            var G__19915 = j_19911 + 2;
            i_19910 = G__19914;
            j_19911 = G__19915;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__19916 = i + 1;
        var G__19917 = j + 2;
        var G__19918 = bitmap | 1 << i;
        i = G__19916;
        j = G__19917;
        bitmap = G__19918;
        continue;
      } else {
        var G__19919 = i + 1;
        var G__19920 = j;
        var G__19921 = bitmap;
        i = G__19919;
        j = G__19920;
        bitmap = G__19921;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__19922 = i + 1;
          var G__19923 = init__$2;
          i = G__19922;
          init__$1 = G__19923;
          continue;
        }
      } else {
        var G__19924 = i + 1;
        var G__19925 = init__$1;
        i = G__19924;
        init__$1 = G__19925;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__19926 = i + 2;
        i = G__19926;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__19927 = j + 2;
                j = G__19927;
                continue;
              }
            } else {
              var G__19928 = j + 2;
              j = G__19928;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__19929 = j + 1;
              j = G__19929;
              continue;
            }
          } else {
            var G__19930 = j + 1;
            j = G__19930;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19932 = cljs.core.seq.call(null, coll);
  var chunk__19933 = null;
  var count__19934 = 0;
  var i__19935 = 0;
  while (true) {
    if (i__19935 < count__19934) {
      var vec__19936 = cljs.core._nth.call(null, chunk__19933, i__19935);
      var k = cljs.core.nth.call(null, vec__19936, 0, null);
      var v = cljs.core.nth.call(null, vec__19936, 1, null);
      f.call(null, v, k);
      var G__19940 = seq__19932;
      var G__19941 = chunk__19933;
      var G__19942 = count__19934;
      var G__19943 = i__19935 + 1;
      seq__19932 = G__19940;
      chunk__19933 = G__19941;
      count__19934 = G__19942;
      i__19935 = G__19943;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19932);
      if (temp__4126__auto__) {
        var seq__19932__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19932__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__19932__$1);
          var G__19944 = cljs.core.chunk_rest.call(null, seq__19932__$1);
          var G__19945 = c__4309__auto__;
          var G__19946 = cljs.core.count.call(null, c__4309__auto__);
          var G__19947 = 0;
          seq__19932 = G__19944;
          chunk__19933 = G__19945;
          count__19934 = G__19946;
          i__19935 = G__19947;
          continue;
        } else {
          var vec__19937 = cljs.core.first.call(null, seq__19932__$1);
          var k = cljs.core.nth.call(null, vec__19937, 0, null);
          var v = cljs.core.nth.call(null, vec__19937, 1, null);
          f.call(null, v, k);
          var G__19948 = cljs.core.next.call(null, seq__19932__$1);
          var G__19949 = null;
          var G__19950 = 0;
          var G__19951 = 0;
          seq__19932 = G__19948;
          chunk__19933 = G__19949;
          count__19934 = G__19950;
          i__19935 = G__19951;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj19939 = {};
    return obj19939;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__19952 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__19953 = cljs.core.next.call(null, es);
          ret = G__19952;
          es = G__19953;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__19954 = null;
  var G__19954__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19954__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19954 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19954__2.call(this, self__, k);
      case 3:
        return G__19954__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19954.cljs$core$IFn$_invoke$arity$2 = G__19954__2;
  G__19954.cljs$core$IFn$_invoke$arity$3 = G__19954__3;
  return G__19954;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args19931) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19931)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__19955 = i + 1;
      var G__19956 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__19955;
      out = G__19956;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__19957 = o;
      if (G__19957) {
        var bit__4203__auto__ = G__19957.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4203__auto__ || G__19957.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__19957.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__19957);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__19957);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__19958 = cljs.core.next.call(null, es);
          var G__19959 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__19958;
          tcoll__$1 = G__19959;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__19960 = ascending_QMARK_ ? t.left : t.right;
      var G__19961 = cljs.core.conj.call(null, stack__$1, t);
      t = G__19960;
      stack__$1 = G__19961;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__19963 = null;
  var G__19963__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19963__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19963 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19963__2.call(this, self__, k);
      case 3:
        return G__19963__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19963.cljs$core$IFn$_invoke$arity$2 = G__19963__2;
  G__19963.cljs$core$IFn$_invoke$arity$3 = G__19963__3;
  return G__19963;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args19962) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19962)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__19965 = null;
  var G__19965__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19965__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19965 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19965__2.call(this, self__, k);
      case 3:
        return G__19965__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19965.cljs$core$IFn$_invoke$arity$2 = G__19965__2;
  G__19965.cljs$core$IFn$_invoke$arity$3 = G__19965__3;
  return G__19965;
}();
cljs.core.RedNode.prototype.apply = function(self__, args19964) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19964)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19967 = cljs.core.seq.call(null, coll);
  var chunk__19968 = null;
  var count__19969 = 0;
  var i__19970 = 0;
  while (true) {
    if (i__19970 < count__19969) {
      var vec__19971 = cljs.core._nth.call(null, chunk__19968, i__19970);
      var k = cljs.core.nth.call(null, vec__19971, 0, null);
      var v = cljs.core.nth.call(null, vec__19971, 1, null);
      f.call(null, v, k);
      var G__19973 = seq__19967;
      var G__19974 = chunk__19968;
      var G__19975 = count__19969;
      var G__19976 = i__19970 + 1;
      seq__19967 = G__19973;
      chunk__19968 = G__19974;
      count__19969 = G__19975;
      i__19970 = G__19976;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19967);
      if (temp__4126__auto__) {
        var seq__19967__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19967__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__19967__$1);
          var G__19977 = cljs.core.chunk_rest.call(null, seq__19967__$1);
          var G__19978 = c__4309__auto__;
          var G__19979 = cljs.core.count.call(null, c__4309__auto__);
          var G__19980 = 0;
          seq__19967 = G__19977;
          chunk__19968 = G__19978;
          count__19969 = G__19979;
          i__19970 = G__19980;
          continue;
        } else {
          var vec__19972 = cljs.core.first.call(null, seq__19967__$1);
          var k = cljs.core.nth.call(null, vec__19972, 0, null);
          var v = cljs.core.nth.call(null, vec__19972, 1, null);
          f.call(null, v, k);
          var G__19981 = cljs.core.next.call(null, seq__19967__$1);
          var G__19982 = null;
          var G__19983 = 0;
          var G__19984 = 0;
          seq__19967 = G__19981;
          chunk__19968 = G__19982;
          count__19969 = G__19983;
          i__19970 = G__19984;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__19985 = t.left;
          t = G__19985;
          continue;
        } else {
          var G__19986 = t.right;
          t = G__19986;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__19987 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__19988 = cljs.core.next.call(null, es);
          ret = G__19987;
          es = G__19988;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__19989 = null;
  var G__19989__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19989__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19989 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19989__2.call(this, self__, k);
      case 3:
        return G__19989__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19989.cljs$core$IFn$_invoke$arity$2 = G__19989__2;
  G__19989.cljs$core$IFn$_invoke$arity$3 = G__19989__3;
  return G__19989;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args19966) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19966)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__19990 = cljs.core.conj.call(null, stack, t);
              var G__19991 = t.left;
              stack = G__19990;
              t = G__19991;
              continue;
            } else {
              var G__19992 = stack;
              var G__19993 = t.right;
              stack = G__19992;
              t = G__19993;
              continue;
            }
          } else {
            if (c > 0) {
              var G__19994 = cljs.core.conj.call(null, stack, t);
              var G__19995 = t.right;
              stack = G__19994;
              t = G__19995;
              continue;
            } else {
              var G__19996 = stack;
              var G__19997 = t.left;
              stack = G__19996;
              t = G__19997;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__19998 = cljs.core.nnext.call(null, in$);
        var G__19999 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__19998;
        out = G__19999;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__20000) {
    var keyvals = cljs.core.seq(arglist__20000);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__20001) {
    var keyvals = cljs.core.seq(arglist__20001);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj20005 = {};
      return obj20005;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__20006 = cljs.core.nnext.call(null, kvs);
        kvs = G__20006;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__20007) {
    var keyvals = cljs.core.seq(arglist__20007);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__20008 = cljs.core.nnext.call(null, in$);
        var G__20009 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__20008;
        out = G__20009;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__20010) {
    var keyvals = cljs.core.seq(arglist__20010);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__20011 = cljs.core.nnext.call(null, in$);
        var G__20012 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__20011;
        out = G__20012;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__20013) {
    var comparator = cljs.core.first(arglist__20013);
    var keyvals = cljs.core.rest(arglist__20013);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20014 = self__.mseq;
    if (G__20014) {
      var bit__4203__auto__ = G__20014.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4203__auto__ || G__20014.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20014.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20014);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20014);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20015 = self__.mseq;
    if (G__20015) {
      var bit__4203__auto__ = G__20015.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4203__auto__ || G__20015.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20015.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20015);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20015);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20016 = self__.mseq;
    if (G__20016) {
      var bit__4203__auto__ = G__20016.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4203__auto__ || G__20016.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20016.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20016);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20016);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20017 = self__.mseq;
    if (G__20017) {
      var bit__4203__auto__ = G__20017.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4203__auto__ || G__20017.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20017.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20017);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20017);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__20018_SHARP_, p2__20019_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3553__auto__ = p1__20018_SHARP_;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__20019_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__20020) {
    var maps = cljs.core.seq(arglist__20020);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3553__auto__ = m1;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__20021) {
    var f = cljs.core.first(arglist__20021);
    var maps = cljs.core.rest(arglist__20021);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__20022 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__20023 = cljs.core.next.call(null, keys);
      ret = G__20022;
      keys = G__20023;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20026 = cljs.core.seq.call(null, coll);
  var chunk__20027 = null;
  var count__20028 = 0;
  var i__20029 = 0;
  while (true) {
    if (i__20029 < count__20028) {
      var vec__20030 = cljs.core._nth.call(null, chunk__20027, i__20029);
      var k = cljs.core.nth.call(null, vec__20030, 0, null);
      var v = cljs.core.nth.call(null, vec__20030, 1, null);
      f.call(null, v, k);
      var G__20032 = seq__20026;
      var G__20033 = chunk__20027;
      var G__20034 = count__20028;
      var G__20035 = i__20029 + 1;
      seq__20026 = G__20032;
      chunk__20027 = G__20033;
      count__20028 = G__20034;
      i__20029 = G__20035;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__20026);
      if (temp__4126__auto__) {
        var seq__20026__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20026__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__20026__$1);
          var G__20036 = cljs.core.chunk_rest.call(null, seq__20026__$1);
          var G__20037 = c__4309__auto__;
          var G__20038 = cljs.core.count.call(null, c__4309__auto__);
          var G__20039 = 0;
          seq__20026 = G__20036;
          chunk__20027 = G__20037;
          count__20028 = G__20038;
          i__20029 = G__20039;
          continue;
        } else {
          var vec__20031 = cljs.core.first.call(null, seq__20026__$1);
          var k = cljs.core.nth.call(null, vec__20031, 0, null);
          var v = cljs.core.nth.call(null, vec__20031, 1, null);
          f.call(null, v, k);
          var G__20040 = cljs.core.next.call(null, seq__20026__$1);
          var G__20041 = null;
          var G__20042 = 0;
          var G__20043 = 0;
          seq__20026 = G__20040;
          chunk__20027 = G__20041;
          count__20028 = G__20042;
          i__20029 = G__20043;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__20024_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__20024_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__20044 = null;
  var G__20044__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20044__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20044 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20044__2.call(this, self__, k);
      case 3:
        return G__20044__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20044.cljs$core$IFn$_invoke$arity$2 = G__20044__2;
  G__20044.cljs$core$IFn$_invoke$arity$3 = G__20044__3;
  return G__20044;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args20025) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20025)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__20045 = i + 1;
        var G__20046 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__20045;
        out = G__20046;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__20047 = i + 1;
        var G__20048 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__20047;
        out = G__20048;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__20050 = null;
  var G__20050__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__20050__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__20050 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20050__2.call(this, self__, k);
      case 3:
        return G__20050__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20050.cljs$core$IFn$_invoke$arity$2 = G__20050__2;
  G__20050.cljs$core$IFn$_invoke$arity$3 = G__20050__3;
  return G__20050;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args20049) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20049)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20053 = cljs.core.seq.call(null, coll);
  var chunk__20054 = null;
  var count__20055 = 0;
  var i__20056 = 0;
  while (true) {
    if (i__20056 < count__20055) {
      var vec__20057 = cljs.core._nth.call(null, chunk__20054, i__20056);
      var k = cljs.core.nth.call(null, vec__20057, 0, null);
      var v = cljs.core.nth.call(null, vec__20057, 1, null);
      f.call(null, v, k);
      var G__20059 = seq__20053;
      var G__20060 = chunk__20054;
      var G__20061 = count__20055;
      var G__20062 = i__20056 + 1;
      seq__20053 = G__20059;
      chunk__20054 = G__20060;
      count__20055 = G__20061;
      i__20056 = G__20062;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__20053);
      if (temp__4126__auto__) {
        var seq__20053__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20053__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__20053__$1);
          var G__20063 = cljs.core.chunk_rest.call(null, seq__20053__$1);
          var G__20064 = c__4309__auto__;
          var G__20065 = cljs.core.count.call(null, c__4309__auto__);
          var G__20066 = 0;
          seq__20053 = G__20063;
          chunk__20054 = G__20064;
          count__20055 = G__20065;
          i__20056 = G__20066;
          continue;
        } else {
          var vec__20058 = cljs.core.first.call(null, seq__20053__$1);
          var k = cljs.core.nth.call(null, vec__20058, 0, null);
          var v = cljs.core.nth.call(null, vec__20058, 1, null);
          f.call(null, v, k);
          var G__20067 = cljs.core.next.call(null, seq__20053__$1);
          var G__20068 = null;
          var G__20069 = 0;
          var G__20070 = 0;
          seq__20053 = G__20067;
          chunk__20054 = G__20068;
          count__20055 = G__20069;
          i__20056 = G__20070;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__20051_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__20051_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__20071 = null;
  var G__20071__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20071__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20071 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20071__2.call(this, self__, k);
      case 3:
        return G__20071__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20071.cljs$core$IFn$_invoke$arity$2 = G__20071__2;
  G__20071.cljs$core$IFn$_invoke$arity$3 = G__20071__3;
  return G__20071;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args20052) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20052)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4403__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4403__auto__.length) {
        var G__20072 = i + 1;
        var G__20073 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__20072;
        res = G__20073;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__20074 = cljs.core._next.call(null, in$__$1);
          var G__20075 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__20074;
          out = G__20075;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__20076__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__20076 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__20076__delegate.call(this, keys);
    };
    G__20076.cljs$lang$maxFixedArity = 0;
    G__20076.cljs$lang$applyTo = function(arglist__20077) {
      var keys = cljs.core.seq(arglist__20077);
      return G__20076__delegate(keys);
    };
    G__20076.cljs$core$IFn$_invoke$arity$variadic = G__20076__delegate;
    return G__20076;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__20078) {
    var keys = cljs.core.seq(arglist__20078);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__20079) {
    var comparator = cljs.core.first(arglist__20079);
    var keys = cljs.core.rest(arglist__20079);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__20080_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__20080_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__20080_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__20081_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__20081_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__20081_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__20088, seen__$1) {
        while (true) {
          var vec__20089 = p__20088;
          var f = cljs.core.nth.call(null, vec__20089, 0, null);
          var xs__$1 = vec__20089;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__20090 = cljs.core.rest.call(null, s);
              var G__20091 = seen__$1;
              p__20088 = G__20090;
              seen__$1 = G__20091;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__20092 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__20093 = cljs.core.next.call(null, s__$1);
      ret = G__20092;
      s__$1 = G__20093;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__20095 = x;
    if (G__20095) {
      var bit__4196__auto__ = G__20095.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4196__auto__ || G__20095.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error("Doesn't support name: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__20096 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__20097 = cljs.core.next.call(null, ks);
      var G__20098 = cljs.core.next.call(null, vs);
      map = G__20096;
      ks = G__20097;
      vs = G__20098;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__20101__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__20099_SHARP_, p2__20100_SHARP_) {
        return max_key.call(null, k, p1__20099_SHARP_, p2__20100_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__20101 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__20101__delegate.call(this, k, x, y, more);
    };
    G__20101.cljs$lang$maxFixedArity = 3;
    G__20101.cljs$lang$applyTo = function(arglist__20102) {
      var k = cljs.core.first(arglist__20102);
      arglist__20102 = cljs.core.next(arglist__20102);
      var x = cljs.core.first(arglist__20102);
      arglist__20102 = cljs.core.next(arglist__20102);
      var y = cljs.core.first(arglist__20102);
      var more = cljs.core.rest(arglist__20102);
      return G__20101__delegate(k, x, y, more);
    };
    G__20101.cljs$core$IFn$_invoke$arity$variadic = G__20101__delegate;
    return G__20101;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__20105__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__20103_SHARP_, p2__20104_SHARP_) {
        return min_key.call(null, k, p1__20103_SHARP_, p2__20104_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__20105 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__20105__delegate.call(this, k, x, y, more);
    };
    G__20105.cljs$lang$maxFixedArity = 3;
    G__20105.cljs$lang$applyTo = function(arglist__20106) {
      var k = cljs.core.first(arglist__20106);
      arglist__20106 = cljs.core.next(arglist__20106);
      var x = cljs.core.first(arglist__20106);
      arglist__20106 = cljs.core.next(arglist__20106);
      var y = cljs.core.first(arglist__20106);
      var more = cljs.core.rest(arglist__20106);
      return G__20105__delegate(k, x, y, more);
    };
    G__20105.cljs$core$IFn$_invoke$arity$variadic = G__20105__delegate;
    return G__20105;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/ArrayList");
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__20107 = null;
          var G__20107__0 = function() {
            return f1.call(null);
          };
          var G__20107__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__20107__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            } else {
              return result;
            }
          };
          G__20107 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20107__0.call(this);
              case 1:
                return G__20107__1.call(this, result);
              case 2:
                return G__20107__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20107.cljs$core$IFn$_invoke$arity$0 = G__20107__0;
          G__20107.cljs$core$IFn$_invoke$arity$1 = G__20107__1;
          G__20107.cljs$core$IFn$_invoke$arity$2 = G__20107__2;
          return G__20107;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__20108 = null;
        var G__20108__0 = function() {
          return f1.call(null);
        };
        var G__20108__1 = function(result) {
          return f1.call(null, result);
        };
        var G__20108__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__20108 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20108__0.call(this);
            case 1:
              return G__20108__1.call(this, result);
            case 2:
              return G__20108__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20108.cljs$core$IFn$_invoke$arity$0 = G__20108__0;
        G__20108.cljs$core$IFn$_invoke$arity$1 = G__20108__1;
        G__20108.cljs$core$IFn$_invoke$arity$2 = G__20108__2;
        return G__20108;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__20111 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__20111, 0, null);
        var s = vec__20111;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__20112 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__20112, 0, null);
      var s = vec__20112;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__20115 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__20115, 0, null);
        var s = vec__20115;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__20116 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__20116, 0, null);
      var s = vec__20116;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__20117 = null;
          var G__20117__0 = function() {
            return f1.call(null);
          };
          var G__20117__1 = function(result) {
            return f1.call(null, result);
          };
          var G__20117__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return f1.call(null, result, input);
            } else {
              return result;
            }
          };
          G__20117 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20117__0.call(this);
              case 1:
                return G__20117__1.call(this, result);
              case 2:
                return G__20117__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20117.cljs$core$IFn$_invoke$arity$0 = G__20117__0;
          G__20117.cljs$core$IFn$_invoke$arity$1 = G__20117__1;
          G__20117.cljs$core$IFn$_invoke$arity$2 = G__20117__2;
          return G__20117;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__20119 = null;
          var G__20119__0 = function() {
            return f1.call(null);
          };
          var G__20119__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__20119__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.reset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              a.add(input);
              return f1.call(null, result, v);
            }
          };
          G__20119 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20119__0.call(this);
              case 1:
                return G__20119__1.call(this, result);
              case 2:
                return G__20119__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20119.cljs$core$IFn$_invoke$arity$0 = G__20119__0;
          G__20119.cljs$core$IFn$_invoke$arity$1 = G__20119__1;
          G__20119.cljs$core$IFn$_invoke$arity$2 = G__20119__2;
          return G__20119;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__20118_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__20118_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__20130 = null;
      var G__20130__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__20130__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__20130__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__20130__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__20130__4 = function() {
        var G__20131__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__20131 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__20131__delegate.call(this, x, y, z, args);
        };
        G__20131.cljs$lang$maxFixedArity = 3;
        G__20131.cljs$lang$applyTo = function(arglist__20132) {
          var x = cljs.core.first(arglist__20132);
          arglist__20132 = cljs.core.next(arglist__20132);
          var y = cljs.core.first(arglist__20132);
          arglist__20132 = cljs.core.next(arglist__20132);
          var z = cljs.core.first(arglist__20132);
          var args = cljs.core.rest(arglist__20132);
          return G__20131__delegate(x, y, z, args);
        };
        G__20131.cljs$core$IFn$_invoke$arity$variadic = G__20131__delegate;
        return G__20131;
      }();
      G__20130 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20130__0.call(this);
          case 1:
            return G__20130__1.call(this, x);
          case 2:
            return G__20130__2.call(this, x, y);
          case 3:
            return G__20130__3.call(this, x, y, z);
          default:
            return G__20130__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20130.cljs$lang$maxFixedArity = 3;
      G__20130.cljs$lang$applyTo = G__20130__4.cljs$lang$applyTo;
      G__20130.cljs$core$IFn$_invoke$arity$0 = G__20130__0;
      G__20130.cljs$core$IFn$_invoke$arity$1 = G__20130__1;
      G__20130.cljs$core$IFn$_invoke$arity$2 = G__20130__2;
      G__20130.cljs$core$IFn$_invoke$arity$3 = G__20130__3;
      G__20130.cljs$core$IFn$_invoke$arity$variadic = G__20130__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20130;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__20133 = null;
      var G__20133__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__20133__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__20133__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__20133__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__20133__4 = function() {
        var G__20134__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__20134 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__20134__delegate.call(this, x, y, z, args);
        };
        G__20134.cljs$lang$maxFixedArity = 3;
        G__20134.cljs$lang$applyTo = function(arglist__20135) {
          var x = cljs.core.first(arglist__20135);
          arglist__20135 = cljs.core.next(arglist__20135);
          var y = cljs.core.first(arglist__20135);
          arglist__20135 = cljs.core.next(arglist__20135);
          var z = cljs.core.first(arglist__20135);
          var args = cljs.core.rest(arglist__20135);
          return G__20134__delegate(x, y, z, args);
        };
        G__20134.cljs$core$IFn$_invoke$arity$variadic = G__20134__delegate;
        return G__20134;
      }();
      G__20133 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20133__0.call(this);
          case 1:
            return G__20133__1.call(this, x);
          case 2:
            return G__20133__2.call(this, x, y);
          case 3:
            return G__20133__3.call(this, x, y, z);
          default:
            return G__20133__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20133.cljs$lang$maxFixedArity = 3;
      G__20133.cljs$lang$applyTo = G__20133__4.cljs$lang$applyTo;
      G__20133.cljs$core$IFn$_invoke$arity$0 = G__20133__0;
      G__20133.cljs$core$IFn$_invoke$arity$1 = G__20133__1;
      G__20133.cljs$core$IFn$_invoke$arity$2 = G__20133__2;
      G__20133.cljs$core$IFn$_invoke$arity$3 = G__20133__3;
      G__20133.cljs$core$IFn$_invoke$arity$variadic = G__20133__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20133;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__20136 = null;
      var G__20136__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__20136__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__20136__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__20136__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__20136__4 = function() {
        var G__20137__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__20137 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__20137__delegate.call(this, x, y, z, args);
        };
        G__20137.cljs$lang$maxFixedArity = 3;
        G__20137.cljs$lang$applyTo = function(arglist__20138) {
          var x = cljs.core.first(arglist__20138);
          arglist__20138 = cljs.core.next(arglist__20138);
          var y = cljs.core.first(arglist__20138);
          arglist__20138 = cljs.core.next(arglist__20138);
          var z = cljs.core.first(arglist__20138);
          var args = cljs.core.rest(arglist__20138);
          return G__20137__delegate(x, y, z, args);
        };
        G__20137.cljs$core$IFn$_invoke$arity$variadic = G__20137__delegate;
        return G__20137;
      }();
      G__20136 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20136__0.call(this);
          case 1:
            return G__20136__1.call(this, x);
          case 2:
            return G__20136__2.call(this, x, y);
          case 3:
            return G__20136__3.call(this, x, y, z);
          default:
            return G__20136__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20136.cljs$lang$maxFixedArity = 3;
      G__20136.cljs$lang$applyTo = G__20136__4.cljs$lang$applyTo;
      G__20136.cljs$core$IFn$_invoke$arity$0 = G__20136__0;
      G__20136.cljs$core$IFn$_invoke$arity$1 = G__20136__1;
      G__20136.cljs$core$IFn$_invoke$arity$2 = G__20136__2;
      G__20136.cljs$core$IFn$_invoke$arity$3 = G__20136__3;
      G__20136.cljs$core$IFn$_invoke$arity$variadic = G__20136__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20136;
    }();
  };
  var juxt__4 = function() {
    var G__20139__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__20140 = null;
          var G__20140__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__20120_SHARP_, p2__20121_SHARP_) {
                return cljs.core.conj.call(null, p1__20120_SHARP_, p2__20121_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20140__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__20122_SHARP_, p2__20123_SHARP_) {
                return cljs.core.conj.call(null, p1__20122_SHARP_, p2__20123_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20140__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__20124_SHARP_, p2__20125_SHARP_) {
                return cljs.core.conj.call(null, p1__20124_SHARP_, p2__20125_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20140__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__20126_SHARP_, p2__20127_SHARP_) {
                return cljs.core.conj.call(null, p1__20126_SHARP_, p2__20127_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20140__4 = function() {
            var G__20141__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__20128_SHARP_, p2__20129_SHARP_) {
                  return cljs.core.conj.call(null, p1__20128_SHARP_, cljs.core.apply.call(null, p2__20129_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__20141 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__20141__delegate.call(this, x, y, z, args);
            };
            G__20141.cljs$lang$maxFixedArity = 3;
            G__20141.cljs$lang$applyTo = function(arglist__20142) {
              var x = cljs.core.first(arglist__20142);
              arglist__20142 = cljs.core.next(arglist__20142);
              var y = cljs.core.first(arglist__20142);
              arglist__20142 = cljs.core.next(arglist__20142);
              var z = cljs.core.first(arglist__20142);
              var args = cljs.core.rest(arglist__20142);
              return G__20141__delegate(x, y, z, args);
            };
            G__20141.cljs$core$IFn$_invoke$arity$variadic = G__20141__delegate;
            return G__20141;
          }();
          G__20140 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__20140__0.call(this);
              case 1:
                return G__20140__1.call(this, x);
              case 2:
                return G__20140__2.call(this, x, y);
              case 3:
                return G__20140__3.call(this, x, y, z);
              default:
                return G__20140__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20140.cljs$lang$maxFixedArity = 3;
          G__20140.cljs$lang$applyTo = G__20140__4.cljs$lang$applyTo;
          G__20140.cljs$core$IFn$_invoke$arity$0 = G__20140__0;
          G__20140.cljs$core$IFn$_invoke$arity$1 = G__20140__1;
          G__20140.cljs$core$IFn$_invoke$arity$2 = G__20140__2;
          G__20140.cljs$core$IFn$_invoke$arity$3 = G__20140__3;
          G__20140.cljs$core$IFn$_invoke$arity$variadic = G__20140__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__20140;
        }();
      }(fs__$1);
    };
    var G__20139 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__20139__delegate.call(this, f, g, h, fs);
    };
    G__20139.cljs$lang$maxFixedArity = 3;
    G__20139.cljs$lang$applyTo = function(arglist__20143) {
      var f = cljs.core.first(arglist__20143);
      arglist__20143 = cljs.core.next(arglist__20143);
      var g = cljs.core.first(arglist__20143);
      arglist__20143 = cljs.core.next(arglist__20143);
      var h = cljs.core.first(arglist__20143);
      var fs = cljs.core.rest(arglist__20143);
      return G__20139__delegate(f, g, h, fs);
    };
    G__20139.cljs$core$IFn$_invoke$arity$variadic = G__20139__delegate;
    return G__20139;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__20144 = cljs.core.next.call(null, coll);
        coll = G__20144;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__20145 = n - 1;
        var G__20146 = cljs.core.next.call(null, coll);
        n = G__20145;
        coll = G__20146;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__20148 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__20148, 0, null);
  var flags = cljs.core.nth.call(null, vec__20148, 1, null);
  var pattern = cljs.core.nth.call(null, vec__20148, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_20150 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_20151__$1 = cljs.core.next.call(null, coll);
      var n_20152 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_20151__$1 && (n_20152 == null || !(n_20152 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_20151__$1), writer, opts);
          var G__20153 = cljs.core.next.call(null, coll_20151__$1);
          var G__20154 = n_20152 - 1;
          coll_20151__$1 = G__20153;
          n_20152 = G__20154;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_20151__$1) && n_20152 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_20150;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__20159 = cljs.core.seq.call(null, ss);
    var chunk__20160 = null;
    var count__20161 = 0;
    var i__20162 = 0;
    while (true) {
      if (i__20162 < count__20161) {
        var s = cljs.core._nth.call(null, chunk__20160, i__20162);
        cljs.core._write.call(null, writer, s);
        var G__20163 = seq__20159;
        var G__20164 = chunk__20160;
        var G__20165 = count__20161;
        var G__20166 = i__20162 + 1;
        seq__20159 = G__20163;
        chunk__20160 = G__20164;
        count__20161 = G__20165;
        i__20162 = G__20166;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__20159);
        if (temp__4126__auto__) {
          var seq__20159__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20159__$1)) {
            var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__20159__$1);
            var G__20167 = cljs.core.chunk_rest.call(null, seq__20159__$1);
            var G__20168 = c__4309__auto__;
            var G__20169 = cljs.core.count.call(null, c__4309__auto__);
            var G__20170 = 0;
            seq__20159 = G__20167;
            chunk__20160 = G__20168;
            count__20161 = G__20169;
            i__20162 = G__20170;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__20159__$1);
            cljs.core._write.call(null, writer, s);
            var G__20171 = cljs.core.next.call(null, seq__20159__$1);
            var G__20172 = null;
            var G__20173 = 0;
            var G__20174 = 0;
            seq__20159 = G__20171;
            chunk__20160 = G__20172;
            count__20161 = G__20173;
            i__20162 = G__20174;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__20175) {
    var writer = cljs.core.first(arglist__20175);
    var ss = cljs.core.rest(arglist__20175);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj20177 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj20177;
}();
cljs.core.quote_string = function quote_string(s) {
  return'"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })) + '"';
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3541__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3541__auto__)) {
          var and__3541__auto____$1 = function() {
            var G__20183 = obj;
            if (G__20183) {
              var bit__4203__auto__ = G__20183.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4203__auto__ || G__20183.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__20183.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__20183);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__20183);
            }
          }();
          if (and__3541__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3541__auto____$1;
          }
        } else {
          return and__3541__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__20184 = obj;
            if (G__20184) {
              var bit__4196__auto__ = G__20184.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4196__auto__ || G__20184.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__20186 = "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
                              ns = G__20186;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__20185 = obj;
                            if (G__20185) {
                              var bit__4203__auto__ = G__20185.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4203__auto__ || G__20185.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__20185.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__20185);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__20185);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__20191 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__20192 = null;
  var count__20193 = 0;
  var i__20194 = 0;
  while (true) {
    if (i__20194 < count__20193) {
      var obj = cljs.core._nth.call(null, chunk__20192, i__20194);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__20195 = seq__20191;
      var G__20196 = chunk__20192;
      var G__20197 = count__20193;
      var G__20198 = i__20194 + 1;
      seq__20191 = G__20195;
      chunk__20192 = G__20196;
      count__20193 = G__20197;
      i__20194 = G__20198;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__20191);
      if (temp__4126__auto__) {
        var seq__20191__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20191__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__20191__$1);
          var G__20199 = cljs.core.chunk_rest.call(null, seq__20191__$1);
          var G__20200 = c__4309__auto__;
          var G__20201 = cljs.core.count.call(null, c__4309__auto__);
          var G__20202 = 0;
          seq__20191 = G__20199;
          chunk__20192 = G__20200;
          count__20193 = G__20201;
          i__20194 = G__20202;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__20191__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__20203 = cljs.core.next.call(null, seq__20191__$1);
          var G__20204 = null;
          var G__20205 = 0;
          var G__20206 = 0;
          seq__20191 = G__20203;
          chunk__20192 = G__20204;
          count__20193 = G__20205;
          i__20194 = G__20206;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts.call(null, objs, opts));
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__20207) {
    var objs = cljs.core.seq(arglist__20207);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__20208) {
    var objs = cljs.core.seq(arglist__20208);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__20209) {
    var objs = cljs.core.seq(arglist__20209);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__20210) {
    var objs = cljs.core.seq(arglist__20210);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__20211) {
    var objs = cljs.core.seq(arglist__20211);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__20212) {
    var objs = cljs.core.seq(arglist__20212);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__20213) {
    var objs = cljs.core.seq(arglist__20213);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__20214) {
    var objs = cljs.core.seq(arglist__20214);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__20215) {
    var iref = cljs.core.first(arglist__20215);
    arglist__20215 = cljs.core.next(arglist__20215);
    var f = cljs.core.first(arglist__20215);
    var args = cljs.core.rest(arglist__20215);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc)));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(f1) {
  return function(p1__20216_SHARP_, p2__20217_SHARP_) {
    var ret = f1.call(null, p1__20216_SHARP_, p2__20217_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.flatmap = function() {
  var flatmap = null;
  var flatmap__1 = function(f) {
    return function(f1) {
      return function() {
        var G__20218 = null;
        var G__20218__0 = function() {
          return f1.call(null);
        };
        var G__20218__1 = function(result) {
          return f1.call(null, result);
        };
        var G__20218__2 = function(result, input) {
          return cljs.core.reduce.call(null, cljs.core.preserving_reduced.call(null, f1), result, f.call(null, input));
        };
        G__20218 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20218__0.call(this);
            case 1:
              return G__20218__1.call(this, result);
            case 2:
              return G__20218__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20218.cljs$core$IFn$_invoke$arity$0 = G__20218__0;
        G__20218.cljs$core$IFn$_invoke$arity$1 = G__20218__1;
        G__20218.cljs$core$IFn$_invoke$arity$2 = G__20218__2;
        return G__20218;
      }();
    };
  };
  var flatmap__2 = function(f, coll) {
    return cljs.core.sequence.call(null, flatmap.call(null, f), coll);
  };
  flatmap = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return flatmap__1.call(this, f);
      case 2:
        return flatmap__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  flatmap.cljs$core$IFn$_invoke$arity$1 = flatmap__1;
  flatmap.cljs$core$IFn$_invoke$arity$2 = flatmap__2;
  return flatmap;
}();
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(f1) {
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__20219 = null;
          var G__20219__0 = function() {
            return f1.call(null);
          };
          var G__20219__1 = function(result) {
            return f1.call(null, result);
          };
          var G__20219__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.reset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__20219 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20219__0.call(this);
              case 1:
                return G__20219__1.call(this, result);
              case 2:
                return G__20219__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20219.cljs$core$IFn$_invoke$arity$0 = G__20219__0;
          G__20219.cljs$core$IFn$_invoke$arity$1 = G__20219__1;
          G__20219.cljs$core$IFn$_invoke$arity$2 = G__20219__2;
          return G__20219;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Iteration = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Iteration.cljs$lang$type = true;
cljs.core.Iteration.cljs$lang$ctorStr = "cljs.core/Iteration";
cljs.core.Iteration.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/Iteration");
};
cljs.core.Iteration.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Iteration.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Iteration.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.__GT_Iteration = function __GT_Iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.iteration = function iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__20221_SHARP_, p2__20220_SHARP_) {
    return proc.call(null, p2__20220_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj20223 = {};
  return obj20223;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__20225 = k;
    if (G__20225) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__20225.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__20225.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__20225);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__20225);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__20239 = x;
      if (G__20239) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto__ = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return G__20239.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__20239.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__20239);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__20239);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj20241 = {};
              return obj20241;
            }();
            var seq__20242_20252 = cljs.core.seq.call(null, x);
            var chunk__20243_20253 = null;
            var count__20244_20254 = 0;
            var i__20245_20255 = 0;
            while (true) {
              if (i__20245_20255 < count__20244_20254) {
                var vec__20246_20256 = cljs.core._nth.call(null, chunk__20243_20253, i__20245_20255);
                var k_20257 = cljs.core.nth.call(null, vec__20246_20256, 0, null);
                var v_20258 = cljs.core.nth.call(null, vec__20246_20256, 1, null);
                m[cljs.core.key__GT_js.call(null, k_20257)] = clj__GT_js.call(null, v_20258);
                var G__20259 = seq__20242_20252;
                var G__20260 = chunk__20243_20253;
                var G__20261 = count__20244_20254;
                var G__20262 = i__20245_20255 + 1;
                seq__20242_20252 = G__20259;
                chunk__20243_20253 = G__20260;
                count__20244_20254 = G__20261;
                i__20245_20255 = G__20262;
                continue;
              } else {
                var temp__4126__auto___20263 = cljs.core.seq.call(null, seq__20242_20252);
                if (temp__4126__auto___20263) {
                  var seq__20242_20264__$1 = temp__4126__auto___20263;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__20242_20264__$1)) {
                    var c__4309__auto___20265 = cljs.core.chunk_first.call(null, seq__20242_20264__$1);
                    var G__20266 = cljs.core.chunk_rest.call(null, seq__20242_20264__$1);
                    var G__20267 = c__4309__auto___20265;
                    var G__20268 = cljs.core.count.call(null, c__4309__auto___20265);
                    var G__20269 = 0;
                    seq__20242_20252 = G__20266;
                    chunk__20243_20253 = G__20267;
                    count__20244_20254 = G__20268;
                    i__20245_20255 = G__20269;
                    continue;
                  } else {
                    var vec__20247_20270 = cljs.core.first.call(null, seq__20242_20264__$1);
                    var k_20271 = cljs.core.nth.call(null, vec__20247_20270, 0, null);
                    var v_20272 = cljs.core.nth.call(null, vec__20247_20270, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_20271)] = clj__GT_js.call(null, v_20272);
                    var G__20273 = cljs.core.next.call(null, seq__20242_20264__$1);
                    var G__20274 = null;
                    var G__20275 = 0;
                    var G__20276 = 0;
                    seq__20242_20252 = G__20273;
                    chunk__20243_20253 = G__20274;
                    count__20244_20254 = G__20275;
                    i__20245_20255 = G__20276;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__20248_20277 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__20249_20278 = null;
              var count__20250_20279 = 0;
              var i__20251_20280 = 0;
              while (true) {
                if (i__20251_20280 < count__20250_20279) {
                  var x_20281__$1 = cljs.core._nth.call(null, chunk__20249_20278, i__20251_20280);
                  arr.push(x_20281__$1);
                  var G__20282 = seq__20248_20277;
                  var G__20283 = chunk__20249_20278;
                  var G__20284 = count__20250_20279;
                  var G__20285 = i__20251_20280 + 1;
                  seq__20248_20277 = G__20282;
                  chunk__20249_20278 = G__20283;
                  count__20250_20279 = G__20284;
                  i__20251_20280 = G__20285;
                  continue;
                } else {
                  var temp__4126__auto___20286 = cljs.core.seq.call(null, seq__20248_20277);
                  if (temp__4126__auto___20286) {
                    var seq__20248_20287__$1 = temp__4126__auto___20286;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__20248_20287__$1)) {
                      var c__4309__auto___20288 = cljs.core.chunk_first.call(null, seq__20248_20287__$1);
                      var G__20289 = cljs.core.chunk_rest.call(null, seq__20248_20287__$1);
                      var G__20290 = c__4309__auto___20288;
                      var G__20291 = cljs.core.count.call(null, c__4309__auto___20288);
                      var G__20292 = 0;
                      seq__20248_20277 = G__20289;
                      chunk__20249_20278 = G__20290;
                      count__20250_20279 = G__20291;
                      i__20251_20280 = G__20292;
                      continue;
                    } else {
                      var x_20293__$1 = cljs.core.first.call(null, seq__20248_20287__$1);
                      arr.push(x_20293__$1);
                      var G__20294 = cljs.core.next.call(null, seq__20248_20287__$1);
                      var G__20295 = null;
                      var G__20296 = 0;
                      var G__20297 = 0;
                      seq__20248_20277 = G__20294;
                      chunk__20249_20278 = G__20295;
                      count__20250_20279 = G__20296;
                      i__20251_20280 = G__20297;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj20299 = {};
  return obj20299;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__20320__delegate = function(x, opts) {
      if (function() {
        var G__20310 = x;
        if (G__20310) {
          var bit__4203__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3553__auto__ = bit__4203__auto__;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return G__20310.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__20310.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__20310);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__20310);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__20311 = opts;
          var map__20311__$1 = cljs.core.seq_QMARK_.call(null, map__20311) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20311) : map__20311;
          var keywordize_keys = cljs.core.get.call(null, map__20311__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__20311, map__20311__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4278__auto__ = function(map__20311, map__20311__$1, keywordize_keys, keyfn) {
                          return function iter__20316(s__20317) {
                            return new cljs.core.LazySeq(null, function(map__20311, map__20311__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__20317__$1 = s__20317;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__20317__$1);
                                  if (temp__4126__auto__) {
                                    var s__20317__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__20317__$2)) {
                                      var c__4276__auto__ = cljs.core.chunk_first.call(null, s__20317__$2);
                                      var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                      var b__20319 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                      if (function() {
                                        var i__20318 = 0;
                                        while (true) {
                                          if (i__20318 < size__4277__auto__) {
                                            var k = cljs.core._nth.call(null, c__4276__auto__, i__20318);
                                            cljs.core.chunk_append.call(null, b__20319, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__20321 = i__20318 + 1;
                                            i__20318 = G__20321;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20319), iter__20316.call(null, cljs.core.chunk_rest.call(null, s__20317__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20319), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__20317__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__20316.call(null, cljs.core.rest.call(null, s__20317__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__20311, map__20311__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__20311, map__20311__$1, keywordize_keys, keyfn);
                        return iter__4278__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      return x__$1;
                    }
                  }
                }
              }
            };
          }(map__20311, map__20311__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__20320 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__20320__delegate.call(this, x, opts);
    };
    G__20320.cljs$lang$maxFixedArity = 1;
    G__20320.cljs$lang$applyTo = function(arglist__20322) {
      var x = cljs.core.first(arglist__20322);
      var opts = cljs.core.rest(arglist__20322);
      return G__20320__delegate(x, opts);
    };
    G__20320.cljs$core$IFn$_invoke$arity$variadic = G__20320__delegate;
    return G__20320;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__20323__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__20323 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__20323__delegate.call(this, args);
      };
      G__20323.cljs$lang$maxFixedArity = 0;
      G__20323.cljs$lang$applyTo = function(arglist__20324) {
        var args = cljs.core.seq(arglist__20324);
        return G__20323__delegate(args);
      };
      G__20323.cljs$core$IFn$_invoke$arity$variadic = G__20323__delegate;
      return G__20323;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__20325 = ret;
        f = G__20325;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__20326__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__20326 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__20326__delegate.call(this, f, args);
    };
    G__20326.cljs$lang$maxFixedArity = 1;
    G__20326.cljs$lang$applyTo = function(arglist__20327) {
      var f = cljs.core.first(arglist__20327);
      var args = cljs.core.rest(arglist__20327);
      return G__20326__delegate(f, args);
    };
    G__20326.cljs$core$IFn$_invoke$arity$variadic = G__20326__delegate;
    return G__20326;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__20328) {
    var f = cljs.core.first(arglist__20328);
    var args = cljs.core.rest(arglist__20328);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3553__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3553__auto__) {
      return or__3553__auto__;
    } else {
      var or__3553__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3553__auto____$1) {
        return or__3553__auto____$1;
      } else {
        var and__3541__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3541__auto__) {
          var and__3541__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3541__auto____$1) {
            var and__3541__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3541__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__20329 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__20330 = i + 1;
                  ret = G__20329;
                  i = G__20330;
                  continue;
                }
                break;
              }
            } else {
              return and__3541__auto____$2;
            }
          } else {
            return and__3541__auto____$1;
          }
        } else {
          return and__3541__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3553__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "already has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "as ancestor");
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error("Cyclic derivation:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "as ancestor");
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__20331_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__20331_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__20331_SHARP_), cljs.core.second.call(null, p1__20331_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__20332_SHARP_, p2__20333_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__20332_SHARP_, p2__20333_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3553__auto__ = cljs.core.truth_(function() {
    var and__3541__auto__ = xprefs;
    if (cljs.core.truth_(and__3541__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3541__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    var or__3553__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__20334 = cljs.core.rest.call(null, ps);
          ps = G__20334;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3553__auto____$1)) {
      return or__3553__auto____$1;
    } else {
      var or__3553__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__20335 = cljs.core.rest.call(null, ps);
            ps = G__20335;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3553__auto____$2)) {
        return or__3553__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3553__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__20338) {
    var vec__20339 = p__20338;
    var k = cljs.core.nth.call(null, vec__20339, 0, null);
    var _ = cljs.core.nth.call(null, vec__20339, 1, null);
    var e = vec__20339;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3553__auto__ = be == null;
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error("Multiple methods in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' match dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val) + " -\x3e " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(k) + " and " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, be2)) + ", and neither is preferred");
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj20341 = {};
  return obj20341;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._reset[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._reset["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._add_method[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._add_method["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._remove_method[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._remove_method["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._prefer_method[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._get_method[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._get_method["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._methods[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._methods["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3541__auto__ = mf;
    if (and__3541__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4180__auto__ = mf == null ? null : mf;
    return function() {
      var or__3553__auto__ = cljs.core._prefers[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core._prefers["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error("No method in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' for dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error("Preference conflict in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + "': " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y) + " is already preferred to " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__20343 = null;
  var G__20343__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__20343__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__20343__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__20343__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__20343__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__20343__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__20343__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__20343__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__20343__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__20343__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__20343__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__20343__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__20343__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__20343__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__20343__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__20343__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__20343__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__20343__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__20343__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__20343__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__20343__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__20343 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 2:
        return G__20343__2.call(this, self__, a);
      case 3:
        return G__20343__3.call(this, self__, a, b);
      case 4:
        return G__20343__4.call(this, self__, a, b, c);
      case 5:
        return G__20343__5.call(this, self__, a, b, c, d);
      case 6:
        return G__20343__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__20343__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__20343__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__20343__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__20343__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__20343__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__20343__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__20343__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__20343__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__20343__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__20343__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__20343__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__20343__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__20343__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__20343__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__20343__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__20343__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20343.cljs$core$IFn$_invoke$arity$2 = G__20343__2;
  G__20343.cljs$core$IFn$_invoke$arity$3 = G__20343__3;
  G__20343.cljs$core$IFn$_invoke$arity$4 = G__20343__4;
  G__20343.cljs$core$IFn$_invoke$arity$5 = G__20343__5;
  G__20343.cljs$core$IFn$_invoke$arity$6 = G__20343__6;
  G__20343.cljs$core$IFn$_invoke$arity$7 = G__20343__7;
  G__20343.cljs$core$IFn$_invoke$arity$8 = G__20343__8;
  G__20343.cljs$core$IFn$_invoke$arity$9 = G__20343__9;
  G__20343.cljs$core$IFn$_invoke$arity$10 = G__20343__10;
  G__20343.cljs$core$IFn$_invoke$arity$11 = G__20343__11;
  G__20343.cljs$core$IFn$_invoke$arity$12 = G__20343__12;
  G__20343.cljs$core$IFn$_invoke$arity$13 = G__20343__13;
  G__20343.cljs$core$IFn$_invoke$arity$14 = G__20343__14;
  G__20343.cljs$core$IFn$_invoke$arity$15 = G__20343__15;
  G__20343.cljs$core$IFn$_invoke$arity$16 = G__20343__16;
  G__20343.cljs$core$IFn$_invoke$arity$17 = G__20343__17;
  G__20343.cljs$core$IFn$_invoke$arity$18 = G__20343__18;
  G__20343.cljs$core$IFn$_invoke$arity$19 = G__20343__19;
  G__20343.cljs$core$IFn$_invoke$arity$20 = G__20343__20;
  G__20343.cljs$core$IFn$_invoke$arity$21 = G__20343__21;
  G__20343.cljs$core$IFn$_invoke$arity$22 = G__20343__22;
  return G__20343;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args20342) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20342)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, '#uuid "' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid) + '"');
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4123__auto__, writer__4124__auto__, opts__4125__auto__) {
  return cljs.core._write.call(null, writer__4124__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
goog.provide("t3tr0s_slides.syntax_highlight");
goog.require("cljs.core");
t3tr0s_slides.syntax_highlight.core = function() {
  var core__delegate = function(s) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.syntax-core-4c264", "span.syntax-core-4c264", 422234275), s], null);
  };
  var core = function(var_args) {
    var s = null;
    if (arguments.length > 0) {
      s = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return core__delegate.call(this, s);
  };
  core.cljs$lang$maxFixedArity = 0;
  core.cljs$lang$applyTo = function(arglist__19138) {
    var s = cljs.core.seq(arglist__19138);
    return core__delegate(s);
  };
  core.cljs$core$IFn$_invoke$arity$variadic = core__delegate;
  return core;
}();
t3tr0s_slides.syntax_highlight.kw = function() {
  var kw__delegate = function(s) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.syntax-kw-18cc2", "span.syntax-kw-18cc2", 511214197), s], null);
  };
  var kw = function(var_args) {
    var s = null;
    if (arguments.length > 0) {
      s = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return kw__delegate.call(this, s);
  };
  kw.cljs$lang$maxFixedArity = 0;
  kw.cljs$lang$applyTo = function(arglist__19139) {
    var s = cljs.core.seq(arglist__19139);
    return kw__delegate(s);
  };
  kw.cljs$core$IFn$_invoke$arity$variadic = kw__delegate;
  return kw;
}();
t3tr0s_slides.syntax_highlight.lit = function() {
  var lit__delegate = function(s) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.syntax-lit-60e83", "span.syntax-lit-60e83", 413499826), s], null);
  };
  var lit = function(var_args) {
    var s = null;
    if (arguments.length > 0) {
      s = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return lit__delegate.call(this, s);
  };
  lit.cljs$lang$maxFixedArity = 0;
  lit.cljs$lang$applyTo = function(arglist__19140) {
    var s = cljs.core.seq(arglist__19140);
    return lit__delegate(s);
  };
  lit.cljs$core$IFn$_invoke$arity$variadic = lit__delegate;
  return lit;
}();
t3tr0s_slides.syntax_highlight.cmt = function() {
  var cmt__delegate = function(s) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.syntax-cmt-d159d", "span.syntax-cmt-d159d", -80604452), s], null);
  };
  var cmt = function(var_args) {
    var s = null;
    if (arguments.length > 0) {
      s = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cmt__delegate.call(this, s);
  };
  cmt.cljs$lang$maxFixedArity = 0;
  cmt.cljs$lang$applyTo = function(arglist__19141) {
    var s = cljs.core.seq(arglist__19141);
    return cmt__delegate(s);
  };
  cmt.cljs$core$IFn$_invoke$arity$variadic = cmt__delegate;
  return cmt;
}();
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw "Invalid match arg: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(match);
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)));
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__20922 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__20922;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__20926 = cljs.core._EQ_;
    var expr__20927 = limit;
    if (cljs.core.truth_(pred__20926.call(null, 1, expr__20927))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__20926.call(null, 2, expr__20927))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(re), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)).split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__20929 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__20930 = limit__$1 - 1;
            var G__20931 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__20929;
            limit__$1 = G__20930;
            parts = G__20931;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__20932 = index - 1;
        index = G__20932;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___20933 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___20933)) {
        var replacement_20934 = temp__4124__auto___20933;
        buffer.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement_20934));
      } else {
        buffer.append(ch);
      }
      var G__20935 = index + 1;
      index = G__20935;
      continue;
    }
    break;
  }
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("schema.utils");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
goog.require("goog.string.format");
schema.utils.assoc_when = function() {
  var assoc_when__delegate = function(m, kvs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null))))));
    }
    return cljs.core.into.call(null, function() {
      var or__3553__auto__ = m;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), function() {
      var iter__4278__auto__ = function iter__20653(s__20654) {
        return new cljs.core.LazySeq(null, function() {
          var s__20654__$1 = s__20654;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__20654__$1);
            if (temp__4126__auto__) {
              var s__20654__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__20654__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__20654__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__20656 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__20655 = 0;
                  while (true) {
                    if (i__20655 < size__4277__auto__) {
                      var vec__20659 = cljs.core._nth.call(null, c__4276__auto__, i__20655);
                      var k = cljs.core.nth.call(null, vec__20659, 0, null);
                      var v = cljs.core.nth.call(null, vec__20659, 1, null);
                      if (cljs.core.truth_(v)) {
                        cljs.core.chunk_append.call(null, b__20656, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                        var G__20661 = i__20655 + 1;
                        i__20655 = G__20661;
                        continue;
                      } else {
                        var G__20662 = i__20655 + 1;
                        i__20655 = G__20662;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20656), iter__20653.call(null, cljs.core.chunk_rest.call(null, s__20654__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20656), null);
                }
              } else {
                var vec__20660 = cljs.core.first.call(null, s__20654__$2);
                var k = cljs.core.nth.call(null, vec__20660, 0, null);
                var v = cljs.core.nth.call(null, vec__20660, 1, null);
                if (cljs.core.truth_(v)) {
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__20653.call(null, cljs.core.rest.call(null, s__20654__$2)));
                } else {
                  var G__20663 = cljs.core.rest.call(null, s__20654__$2);
                  s__20654__$1 = G__20663;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4278__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
    }());
  };
  var assoc_when = function(m, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return assoc_when__delegate.call(this, m, kvs);
  };
  assoc_when.cljs$lang$maxFixedArity = 1;
  assoc_when.cljs$lang$applyTo = function(arglist__20664) {
    var m = cljs.core.first(arglist__20664);
    var kvs = cljs.core.rest(arglist__20664);
    return assoc_when__delegate(m, kvs);
  };
  assoc_when.cljs$core$IFn$_invoke$arity$variadic = assoc_when__delegate;
  return assoc_when;
}();
schema.utils.type_of = function type_of(x) {
  return typeof x;
};
schema.utils.fn_schema_bearer = function fn_schema_bearer(f) {
  return f;
};
schema.utils.format_STAR_ = function() {
  var format_STAR___delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args);
  };
  var format_STAR_ = function(fmt, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return format_STAR___delegate.call(this, fmt, args);
  };
  format_STAR_.cljs$lang$maxFixedArity = 1;
  format_STAR_.cljs$lang$applyTo = function(arglist__20665) {
    var fmt = cljs.core.first(arglist__20665);
    var args = cljs.core.rest(arglist__20665);
    return format_STAR___delegate(fmt, args);
  };
  format_STAR_.cljs$core$IFn$_invoke$arity$variadic = format_STAR___delegate;
  return format_STAR_;
}();
schema.utils.value_name = function value_name(value) {
  var t = schema.utils.type_of.call(null, value);
  if (cljs.core.count.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(value)) < 20) {
    return value;
  } else {
    return cljs.core.symbol.call(null, "a-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(t));
  }
};
schema.utils.ValidationError = function(schema, value, expectation_delay, fail_explanation) {
  this.schema = schema;
  this.value = value;
  this.expectation_delay = expectation_delay;
  this.fail_explanation = fail_explanation;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
};
schema.utils.ValidationError.cljs$lang$type = true;
schema.utils.ValidationError.cljs$lang$ctorStr = "schema.utils/ValidationError";
schema.utils.ValidationError.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "schema.utils/ValidationError");
};
schema.utils.ValidationError.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._pr_writer.call(null, schema.utils.validation_error_explain.call(null, this$__$1), writer, opts);
};
schema.utils.__GT_ValidationError = function __GT_ValidationError(schema__$1, value, expectation_delay, fail_explanation) {
  return new schema.utils.ValidationError(schema__$1, value, expectation_delay, fail_explanation);
};
schema.utils.validation_error_explain = function validation_error_explain(err) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, err.expectation_delay)), function() {
    var or__3553__auto__ = err.fail_explanation;
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return new cljs.core.Symbol(null, "not", "not", 1044554643, null);
    }
  }());
};
schema.utils.__GT_ValidationError = function __GT_ValidationError(schema__$1, value, expectation_delay, fail_explanation) {
  return new schema.utils.ValidationError(schema__$1, value, expectation_delay, fail_explanation);
};
schema.utils.NamedError = function(name, error) {
  this.name = name;
  this.error = error;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
};
schema.utils.NamedError.cljs$lang$type = true;
schema.utils.NamedError.cljs$lang$ctorStr = "schema.utils/NamedError";
schema.utils.NamedError.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "schema.utils/NamedError");
};
schema.utils.NamedError.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._pr_writer.call(null, schema.utils.named_error_explain.call(null, this$__$1), writer, opts);
};
schema.utils.__GT_NamedError = function __GT_NamedError(name, error) {
  return new schema.utils.NamedError(name, error);
};
schema.utils.named_error_explain = function named_error_explain(err) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, err.name), err.error), new cljs.core.Symbol(null, "named", "named", 1218138048, null));
};
schema.utils.__GT_NamedError = function __GT_NamedError(name, error) {
  return new schema.utils.NamedError(name, error);
};
schema.utils.ErrorContainer = function(error, __meta, __extmap) {
  this.error = error;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.utils.ErrorContainer.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20667, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20669 = k20667 instanceof cljs.core.Keyword ? k20667.fqn : null;
  switch(G__20669) {
    case "error":
      return self__.error;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20667, else__4142__auto__);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.utils.ErrorContainer{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), self__.error], null)], null), self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.utils.ErrorContainer.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.utils.ErrorContainer(self__.error, self__.__meta, self__.__extmap, self__.__hash);
};
schema.utils.ErrorContainer.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.utils.ErrorContainer.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "error", "error", -978969032), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.utils.ErrorContainer(self__.error, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20666) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20670 = cljs.core.keyword_identical_QMARK_;
  var expr__20671 = k__4147__auto__;
  if (cljs.core.truth_(pred__20670.call(null, new cljs.core.Keyword(null, "error", "error", -978969032), expr__20671))) {
    return new schema.utils.ErrorContainer(G__20666, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.utils.ErrorContainer(self__.error, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20666), null);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), self__.error], null)], null), self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20666) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.utils.ErrorContainer(self__.error, G__20666, self__.__extmap, self__.__hash);
};
schema.utils.ErrorContainer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.utils.ErrorContainer.cljs$lang$type = true;
schema.utils.ErrorContainer.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.utils/ErrorContainer");
};
schema.utils.ErrorContainer.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.utils/ErrorContainer");
};
schema.utils.__GT_ErrorContainer = function __GT_ErrorContainer(error) {
  return new schema.utils.ErrorContainer(error);
};
schema.utils.map__GT_ErrorContainer = function map__GT_ErrorContainer(G__20668) {
  return new schema.utils.ErrorContainer((new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(G__20668), null, cljs.core.dissoc.call(null, G__20668, new cljs.core.Keyword(null, "error", "error", -978969032)));
};
schema.utils.error = function error(x) {
  if (cljs.core.truth_(x)) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "x", "x", -555367584, null))));
  }
  return schema.utils.__GT_ErrorContainer.call(null, x);
};
schema.utils.error_QMARK_ = function error_QMARK_(x) {
  return x instanceof schema.utils.ErrorContainer;
};
schema.utils.error_val = function error_val(x) {
  if (schema.utils.error_QMARK_.call(null, x)) {
    return x.error;
  } else {
    return null;
  }
};
schema.utils.wrap_error_name = function wrap_error_name(name, maybe_error) {
  var temp__4124__auto__ = schema.utils.error_val.call(null, maybe_error);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var e = temp__4124__auto__;
    return schema.utils.error.call(null, schema.utils.__GT_NamedError.call(null, name, e));
  } else {
    return maybe_error;
  }
};
schema.utils.result_builder = function result_builder(lift_to_error) {
  return function conjer(m, e) {
    var temp__4124__auto__ = schema.utils.error_val.call(null, e);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var err = temp__4124__auto__;
      return schema.utils.error.call(null, cljs.core.conj.call(null, function() {
        var or__3553__auto__ = schema.utils.error_val.call(null, m);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return lift_to_error.call(null, m);
        }
      }(), err));
    } else {
      var temp__4124__auto____$1 = schema.utils.error_val.call(null, m);
      if (cljs.core.truth_(temp__4124__auto____$1)) {
        var merr = temp__4124__auto____$1;
        return schema.utils.error.call(null, cljs.core.conj.call(null, merr, null));
      } else {
        return cljs.core.conj.call(null, m, e);
      }
    }
  };
};
schema.utils.declare_class_schema_BANG_ = function declare_class_schema_BANG_(klass, schema__$1) {
  return klass["schema$utils$schema"] = schema__$1;
};
schema.utils.class_schema = function class_schema(klass) {
  return klass["schema$utils$schema"];
};
schema.utils.PSimpleCell = function() {
  var obj20675 = {};
  return obj20675;
}();
schema.utils.get_cell = function get_cell(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.schema$utils$PSimpleCell$get_cell$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.schema$utils$PSimpleCell$get_cell$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = schema.utils.get_cell[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = schema.utils.get_cell["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSimpleCell.get_cell", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.utils.set_cell = function set_cell(this$, x) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.schema$utils$PSimpleCell$set_cell$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.schema$utils$PSimpleCell$set_cell$arity$2(this$, x);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = schema.utils.set_cell[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = schema.utils.set_cell["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSimpleCell.set_cell", this$);
        }
      }
    }().call(null, this$, x);
  }
};
schema.utils.SimpleVCell = function(q) {
  this.q = q;
};
schema.utils.SimpleVCell.cljs$lang$type = true;
schema.utils.SimpleVCell.cljs$lang$ctorStr = "schema.utils/SimpleVCell";
schema.utils.SimpleVCell.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "schema.utils/SimpleVCell");
};
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$ = true;
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$get_cell$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.q;
};
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$set_cell$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return self__.q = x;
};
schema.utils.__GT_SimpleVCell = function __GT_SimpleVCell(q) {
  return new schema.utils.SimpleVCell(q);
};
schema.utils.use_fn_validation = new schema.utils.SimpleVCell(false);
schema.utils.use_fn_validation.get_cell = cljs.core.partial.call(null, schema.utils.get_cell, schema.utils.use_fn_validation);
schema.utils.use_fn_validation.set_cell = cljs.core.partial.call(null, schema.utils.set_cell, schema.utils.use_fn_validation);
goog.provide("schema.core");
goog.require("cljs.core");
goog.require("schema.utils");
goog.require("schema.utils");
goog.require("clojure.string");
goog.require("clojure.string");
schema.core.Schema = function() {
  var obj20677 = {};
  return obj20677;
}();
schema.core.walker = function walker(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.schema$core$Schema$walker$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.schema$core$Schema$walker$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = schema.core.walker[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = schema.core.walker["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Schema.walker", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.core.explain = function explain(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.schema$core$Schema$explain$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.schema$core$Schema$explain$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = schema.core.explain[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = schema.core.explain["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Schema.explain", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.core.subschema_walker = function subschema_walker(s) {
  throw new Error("Walking is unsupported outside of start-walker; all composite schemas must eagerly bind subschema-walkers outside the returned walker.");
};
schema.core.start_walker = function start_walker(sub_walker, schema__$1) {
  var subschema_walker20679 = schema.core.subschema_walker;
  try {
    schema.core.subschema_walker = sub_walker;
    return schema.core.subschema_walker.call(null, schema__$1);
  } finally {
    schema.core.subschema_walker = subschema_walker20679;
  }
};
schema.core.checker = function checker(schema__$1) {
  return cljs.core.comp.call(null, schema.utils.error_val, schema.core.start_walker.call(null, schema.core.walker, schema__$1));
};
schema.core.check = function check(schema__$1, x) {
  return schema.core.checker.call(null, schema__$1).call(null, x);
};
schema.core.validate = function validate(schema__$1, value) {
  var temp__4126__auto___20680 = schema.core.check.call(null, schema__$1, value);
  if (cljs.core.truth_(temp__4126__auto___20680)) {
    var error_20681 = temp__4126__auto___20680;
    throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Value does not match schema: %s", cljs.core.pr_str.call(null, error_20681)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "error", "error", -978969032), error_20681], null));
  } else {
  }
  return value;
};
schema.core.Schema["function"] = true;
schema.core.walker["function"] = function(this$) {
  var class_walker = function() {
    var temp__4124__auto__ = schema.utils.class_schema.call(null, this$);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var more_schema = temp__4124__auto__;
      return schema.core.subschema_walker.call(null, more_schema);
    } else {
      return cljs.core.identity;
    }
  }();
  return function(class_walker) {
    return function(x) {
      var or__3553__auto__ = x == null || cljs.core.not.call(null, function() {
        var or__3553__auto__ = this$ === x.constructor;
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          return x instanceof this$;
        }
      }()) ? schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$, x, new cljs.core.Delay(function(class_walker) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), this$), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
        };
      }(class_walker), null), null)) : null;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return class_walker.call(null, x);
      }
    };
  }(class_walker);
};
schema.core.explain["function"] = function(this$) {
  var temp__4124__auto__ = schema.utils.class_schema.call(null, this$);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var more_schema = temp__4124__auto__;
    return schema.core.explain.call(null, more_schema);
  } else {
    return this$;
  }
};
schema.core.AnythingSchema = function(_, __meta, __extmap) {
  this._ = _;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.AnythingSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20683, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20685 = k20683 instanceof cljs.core.Keyword ? k20683.fqn : null;
  switch(G__20685) {
    case "_":
      return self__._;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20683, else__4142__auto__);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.AnythingSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199), self__._], null)], null), self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.AnythingSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.AnythingSchema(self__._, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.AnythingSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.AnythingSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "_", "_", 1453416199), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.AnythingSchema(self__._, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20682) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20686 = cljs.core.keyword_identical_QMARK_;
  var expr__20687 = k__4147__auto__;
  if (cljs.core.truth_(pred__20686.call(null, new cljs.core.Keyword(null, "_", "_", 1453416199), expr__20687))) {
    return new schema.core.AnythingSchema(G__20682, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.AnythingSchema(self__._, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20682), null);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199), self__._], null)], null), self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20682) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.AnythingSchema(self__._, G__20682, self__.__extmap, self__.__hash);
};
schema.core.AnythingSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.AnythingSchema.prototype.schema$core$Schema$ = true;
schema.core.AnythingSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.identity;
};
schema.core.AnythingSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.Symbol(null, "Any", "Any", 1277492269, null);
};
schema.core.AnythingSchema.cljs$lang$type = true;
schema.core.AnythingSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/AnythingSchema");
};
schema.core.AnythingSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/AnythingSchema");
};
schema.core.__GT_AnythingSchema = function __GT_AnythingSchema(_) {
  return new schema.core.AnythingSchema(_);
};
schema.core.map__GT_AnythingSchema = function map__GT_AnythingSchema(G__20684) {
  return new schema.core.AnythingSchema((new cljs.core.Keyword(null, "_", "_", 1453416199)).cljs$core$IFn$_invoke$arity$1(G__20684), null, cljs.core.dissoc.call(null, G__20684, new cljs.core.Keyword(null, "_", "_", 1453416199)));
};
schema.core.Any = new schema.core.AnythingSchema(null);
schema.core.EqSchema = function(v, __meta, __extmap) {
  this.v = v;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.EqSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.EqSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20691, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20693 = k20691 instanceof cljs.core.Keyword ? k20691.fqn : null;
  switch(G__20693) {
    case "v":
      return self__.v;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20691, else__4142__auto__);
  }
};
schema.core.EqSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.EqSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null)], null), self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.EqSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.EqSchema(self__.v, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.EqSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.EqSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.EqSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.EqSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "v", "v", 21465059), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.EqSchema(self__.v, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.EqSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20690) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20694 = cljs.core.keyword_identical_QMARK_;
  var expr__20695 = k__4147__auto__;
  if (cljs.core.truth_(pred__20694.call(null, new cljs.core.Keyword(null, "v", "v", 21465059), expr__20695))) {
    return new schema.core.EqSchema(G__20690, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.EqSchema(self__.v, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20690), null);
  }
};
schema.core.EqSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null)], null), self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20690) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.EqSchema(self__.v, G__20690, self__.__extmap, self__.__hash);
};
schema.core.EqSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.EqSchema.prototype.schema$core$Schema$ = true;
schema.core.EqSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core._EQ_.call(null, self__.v, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.v), new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.EqSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.v), new cljs.core.Symbol(null, "eq", "eq", 1021992460, null));
};
schema.core.EqSchema.cljs$lang$type = true;
schema.core.EqSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/EqSchema");
};
schema.core.EqSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/EqSchema");
};
schema.core.__GT_EqSchema = function __GT_EqSchema(v) {
  return new schema.core.EqSchema(v);
};
schema.core.map__GT_EqSchema = function map__GT_EqSchema(G__20692) {
  return new schema.core.EqSchema((new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(G__20692), null, cljs.core.dissoc.call(null, G__20692, new cljs.core.Keyword(null, "v", "v", 21465059)));
};
schema.core.eq = function eq(v) {
  return new schema.core.EqSchema(v);
};
schema.core.EnumSchema = function(vs, __meta, __extmap) {
  this.vs = vs;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.EnumSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.EnumSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20699, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20701 = k20699 instanceof cljs.core.Keyword ? k20699.fqn : null;
  switch(G__20701) {
    case "vs":
      return self__.vs;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20699, else__4142__auto__);
  }
};
schema.core.EnumSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.EnumSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), self__.vs], null)], null), self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.EnumSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.EnumSchema(self__.vs, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.EnumSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.EnumSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.EnumSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.EnumSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.EnumSchema(self__.vs, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.EnumSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20698) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20702 = cljs.core.keyword_identical_QMARK_;
  var expr__20703 = k__4147__auto__;
  if (cljs.core.truth_(pred__20702.call(null, new cljs.core.Keyword(null, "vs", "vs", -2022097090), expr__20703))) {
    return new schema.core.EnumSchema(G__20698, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.EnumSchema(self__.vs, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20698), null);
  }
};
schema.core.EnumSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), self__.vs], null)], null), self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20698) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.EnumSchema(self__.vs, G__20698, self__.__extmap, self__.__hash);
};
schema.core.EnumSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.EnumSchema.prototype.schema$core$Schema$ = true;
schema.core.EnumSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.contains_QMARK_.call(null, self__.vs, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.vs);
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.EnumSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "enum", "enum", -975417337, null), self__.vs);
};
schema.core.EnumSchema.cljs$lang$type = true;
schema.core.EnumSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/EnumSchema");
};
schema.core.EnumSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/EnumSchema");
};
schema.core.__GT_EnumSchema = function __GT_EnumSchema(vs) {
  return new schema.core.EnumSchema(vs);
};
schema.core.map__GT_EnumSchema = function map__GT_EnumSchema(G__20700) {
  return new schema.core.EnumSchema((new cljs.core.Keyword(null, "vs", "vs", -2022097090)).cljs$core$IFn$_invoke$arity$1(G__20700), null, cljs.core.dissoc.call(null, G__20700, new cljs.core.Keyword(null, "vs", "vs", -2022097090)));
};
schema.core.enum$ = function() {
  var enum$__delegate = function(vs) {
    return new schema.core.EnumSchema(cljs.core.set.call(null, vs));
  };
  var enum$ = function(var_args) {
    var vs = null;
    if (arguments.length > 0) {
      vs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return enum$__delegate.call(this, vs);
  };
  enum$.cljs$lang$maxFixedArity = 0;
  enum$.cljs$lang$applyTo = function(arglist__20706) {
    var vs = cljs.core.seq(arglist__20706);
    return enum$__delegate(vs);
  };
  enum$.cljs$core$IFn$_invoke$arity$variadic = enum$__delegate;
  return enum$;
}();
schema.core.Predicate = function(p_QMARK_, pred_name, __meta, __extmap) {
  this.p_QMARK_ = p_QMARK_;
  this.pred_name = pred_name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Predicate.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Predicate.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20708, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20710 = k20708 instanceof cljs.core.Keyword ? k20708.fqn : null;
  switch(G__20710) {
    case "pred-name":
      return self__.pred_name;
      break;
    case "p?":
      return self__.p_QMARK_;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20708, else__4142__auto__);
  }
};
schema.core.Predicate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Predicate{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), self__.p_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), self__.pred_name], null)], null), self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Predicate.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Predicate.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Predicate.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Predicate.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Predicate.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), null, new cljs.core.Keyword(null, "p?", "p?", -1172161701), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Predicate.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20707) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20711 = cljs.core.keyword_identical_QMARK_;
  var expr__20712 = k__4147__auto__;
  if (cljs.core.truth_(pred__20711.call(null, new cljs.core.Keyword(null, "p?", "p?", -1172161701), expr__20712))) {
    return new schema.core.Predicate(G__20707, self__.pred_name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20711.call(null, new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), expr__20712))) {
      return new schema.core.Predicate(self__.p_QMARK_, G__20707, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20707), null);
    }
  }
};
schema.core.Predicate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), self__.p_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), self__.pred_name], null)], null), self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20707) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, G__20707, self__.__extmap, self__.__hash);
};
schema.core.Predicate.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Predicate.prototype.schema$core$Schema$ = true;
schema.core.Predicate.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      var temp__4124__auto__ = function() {
        try {
          if (cljs.core.truth_(self__.p_QMARK_.call(null, x))) {
            return null;
          } else {
            return new cljs.core.Symbol(null, "not", "not", 1044554643, null);
          }
        } catch (e20714) {
          if (e20714 instanceof Object) {
            var e = e20714;
            return new cljs.core.Symbol(null, "throws?", "throws?", 789734533, null);
          } else {
            throw e20714;
          }
        }
      }();
      if (cljs.core.truth_(temp__4124__auto__)) {
        var reason = temp__4124__auto__;
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(reason, temp__4124__auto__, this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.pred_name);
          };
        }(reason, temp__4124__auto__, this$__$1), null), reason));
      } else {
        return x;
      }
    };
  }(this$__$1);
};
schema.core.Predicate.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.integer_QMARK_)) {
    return new cljs.core.Symbol(null, "Int", "Int", -2116888740, null);
  } else {
    if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.keyword_QMARK_)) {
      return new cljs.core.Symbol(null, "Keyword", "Keyword", -850065993, null);
    } else {
      if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.symbol_QMARK_)) {
        return new cljs.core.Symbol(null, "Symbol", "Symbol", 716452869, null);
      } else {
        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.pred_name), new cljs.core.Symbol(null, "pred", "pred", -727012372, null));
      }
    }
  }
};
schema.core.Predicate.cljs$lang$type = true;
schema.core.Predicate.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Predicate");
};
schema.core.Predicate.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Predicate");
};
schema.core.__GT_Predicate = function __GT_Predicate(p_QMARK_, pred_name) {
  return new schema.core.Predicate(p_QMARK_, pred_name);
};
schema.core.map__GT_Predicate = function map__GT_Predicate(G__20709) {
  return new schema.core.Predicate((new cljs.core.Keyword(null, "p?", "p?", -1172161701)).cljs$core$IFn$_invoke$arity$1(G__20709), (new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)).cljs$core$IFn$_invoke$arity$1(G__20709), null, cljs.core.dissoc.call(null, G__20709, new cljs.core.Keyword(null, "p?", "p?", -1172161701), new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)));
};
schema.core.pred = function() {
  var pred = null;
  var pred__1 = function(p_QMARK_) {
    return pred.call(null, p_QMARK_, p_QMARK_);
  };
  var pred__2 = function(p_QMARK_, pred_name) {
    if (cljs.core.ifn_QMARK_.call(null, p_QMARK_)) {
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Not a function: %s", p_QMARK_));
    }
    return new schema.core.Predicate(p_QMARK_, pred_name);
  };
  pred = function(p_QMARK_, pred_name) {
    switch(arguments.length) {
      case 1:
        return pred__1.call(this, p_QMARK_);
      case 2:
        return pred__2.call(this, p_QMARK_, pred_name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pred.cljs$core$IFn$_invoke$arity$1 = pred__1;
  pred.cljs$core$IFn$_invoke$arity$2 = pred__2;
  return pred;
}();
schema.core.protocol_name = function protocol_name(protocol) {
  return(new cljs.core.Keyword(null, "proto-sym", "proto-sym", -886371734)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, protocol));
};
schema.core.Protocol = function(p, __meta, __extmap) {
  this.p = p;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Protocol.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Protocol.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20717, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20719 = k20717 instanceof cljs.core.Keyword ? k20717.fqn : null;
  switch(G__20719) {
    case "p":
      return self__.p;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20717, else__4142__auto__);
  }
};
schema.core.Protocol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Protocol{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), self__.p], null)], null), self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Protocol.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Protocol(self__.p, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Protocol.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Protocol.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Protocol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Protocol.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "p", "p", 151049309), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Protocol(self__.p, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Protocol.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20716) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20720 = cljs.core.keyword_identical_QMARK_;
  var expr__20721 = k__4147__auto__;
  if (cljs.core.truth_(pred__20720.call(null, new cljs.core.Keyword(null, "p", "p", 151049309), expr__20721))) {
    return new schema.core.Protocol(G__20716, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Protocol(self__.p, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20716), null);
  }
};
schema.core.Protocol.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), self__.p], null)], null), self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20716) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Protocol(self__.p, G__20716, self__.__extmap, self__.__hash);
};
schema.core.Protocol.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Protocol.prototype.schema$core$Schema$ = true;
schema.core.Protocol.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "proto-pred", "proto-pred", 1885698716)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, this$__$1)).call(null, x))) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), schema.core.protocol_name.call(null, this$__$1)), new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.Protocol.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.protocol_name.call(null, this$__$1)), new cljs.core.Symbol(null, "protocol", "protocol", -2001965651, null));
};
schema.core.Protocol.cljs$lang$type = true;
schema.core.Protocol.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Protocol");
};
schema.core.Protocol.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Protocol");
};
schema.core.__GT_Protocol = function __GT_Protocol(p) {
  return new schema.core.Protocol(p);
};
schema.core.map__GT_Protocol = function map__GT_Protocol(G__20718) {
  return new schema.core.Protocol((new cljs.core.Keyword(null, "p", "p", 151049309)).cljs$core$IFn$_invoke$arity$1(G__20718), null, cljs.core.dissoc.call(null, G__20718, new cljs.core.Keyword(null, "p", "p", 151049309)));
};
RegExp.prototype.schema$core$Schema$ = true;
RegExp.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (!(typeof x === "string")) {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "string?", "string?", -1129175764, null));
          };
        }(this$__$1), null), null));
      } else {
        if (cljs.core.not.call(null, cljs.core.re_find.call(null, this$__$1, x))) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), schema.core.explain.call(null, this$__$1)), new cljs.core.Symbol(null, "re-find", "re-find", 1143444147, null));
            };
          }(this$__$1), null), null));
        } else {
          return x;
        }
      }
    };
  }(this$__$1);
};
RegExp.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.symbol.call(null, '#"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1)).slice(1, -1)) + '"');
};
schema.core.Str = schema.core.pred.call(null, cljs.core.string_QMARK_);
schema.core.Bool = Boolean;
schema.core.Num = Number;
schema.core.Int = schema.core.pred.call(null, cljs.core.integer_QMARK_, new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null));
schema.core.Keyword = schema.core.pred.call(null, cljs.core.keyword_QMARK_, new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null));
schema.core.Symbol = schema.core.pred.call(null, cljs.core.symbol_QMARK_, new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null));
schema.core.Regex = RegExp;
schema.core.Inst = Date;
schema.core.Uuid = cljs.core.UUID;
schema.core.Maybe = function(schema, __meta, __extmap) {
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Maybe.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Maybe.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20725, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20727 = k20725 instanceof cljs.core.Keyword ? k20725.fqn : null;
  switch(G__20727) {
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20725, else__4142__auto__);
  }
};
schema.core.Maybe.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Maybe{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Maybe.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Maybe(self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Maybe.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Maybe.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Maybe.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Maybe.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Maybe(self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Maybe.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20724) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20728 = cljs.core.keyword_identical_QMARK_;
  var expr__20729 = k__4147__auto__;
  if (cljs.core.truth_(pred__20728.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__20729))) {
    return new schema.core.Maybe(G__20724, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Maybe(self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20724), null);
  }
};
schema.core.Maybe.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20724) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Maybe(self__.schema, G__20724, self__.__extmap, self__.__hash);
};
schema.core.Maybe.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Maybe.prototype.schema$core$Schema$ = true;
schema.core.Maybe.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walker = schema.core.subschema_walker.call(null, self__.schema);
  return function(sub_walker, this$__$1) {
    return function(x) {
      if (x == null) {
        return null;
      } else {
        return sub_walker.call(null, x);
      }
    };
  }(sub_walker, this$__$1);
};
schema.core.Maybe.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "maybe", "maybe", 1326133967, null));
};
schema.core.Maybe.cljs$lang$type = true;
schema.core.Maybe.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Maybe");
};
schema.core.Maybe.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Maybe");
};
schema.core.__GT_Maybe = function __GT_Maybe(schema__$1) {
  return new schema.core.Maybe(schema__$1);
};
schema.core.map__GT_Maybe = function map__GT_Maybe(G__20726) {
  return new schema.core.Maybe((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__20726), null, cljs.core.dissoc.call(null, G__20726, new cljs.core.Keyword(null, "schema", "schema", -1582001791)));
};
schema.core.maybe = function maybe(schema__$1) {
  return new schema.core.Maybe(schema__$1);
};
schema.core.NamedSchema = function(schema, name, __meta, __extmap) {
  this.schema = schema;
  this.name = name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.NamedSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.NamedSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20733, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20735 = k20733 instanceof cljs.core.Keyword ? k20733.fqn : null;
  switch(G__20735) {
    case "name":
      return self__.name;
      break;
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20733, else__4142__auto__);
  }
};
schema.core.NamedSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.NamedSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.NamedSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.NamedSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.NamedSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.NamedSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.NamedSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.NamedSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20732) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20736 = cljs.core.keyword_identical_QMARK_;
  var expr__20737 = k__4147__auto__;
  if (cljs.core.truth_(pred__20736.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__20737))) {
    return new schema.core.NamedSchema(G__20732, self__.name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20736.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__20737))) {
      return new schema.core.NamedSchema(self__.schema, G__20732, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20732), null);
    }
  }
};
schema.core.NamedSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20732) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.NamedSchema(self__.schema, self__.name, G__20732, self__.__extmap, self__.__hash);
};
schema.core.NamedSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.NamedSchema.prototype.schema$core$Schema$ = true;
schema.core.NamedSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walker = schema.core.subschema_walker.call(null, self__.schema);
  return function(sub_walker, this$__$1) {
    return function(x) {
      return schema.utils.wrap_error_name.call(null, self__.name, sub_walker.call(null, x));
    };
  }(sub_walker, this$__$1);
};
schema.core.NamedSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.name), schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "named", "named", 1218138048, null));
};
schema.core.NamedSchema.cljs$lang$type = true;
schema.core.NamedSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/NamedSchema");
};
schema.core.NamedSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/NamedSchema");
};
schema.core.__GT_NamedSchema = function __GT_NamedSchema(schema__$1, name) {
  return new schema.core.NamedSchema(schema__$1, name);
};
schema.core.map__GT_NamedSchema = function map__GT_NamedSchema(G__20734) {
  return new schema.core.NamedSchema((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__20734), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__20734), null, cljs.core.dissoc.call(null, G__20734, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "name", "name", 1843675177)));
};
schema.core.named = function named(schema__$1, name) {
  return new schema.core.NamedSchema(schema__$1, name);
};
schema.core.Either = function(schemas, __meta, __extmap) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Either.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Either.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20741, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20743 = k20741 instanceof cljs.core.Keyword ? k20741.fqn : null;
  switch(G__20743) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20741, else__4142__auto__);
  }
};
schema.core.Either.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Either{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Either.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Either(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Either.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Either.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Either.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Either.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Either(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Either.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20740) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20744 = cljs.core.keyword_identical_QMARK_;
  var expr__20745 = k__4147__auto__;
  if (cljs.core.truth_(pred__20744.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__20745))) {
    return new schema.core.Either(G__20740, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Either(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20740), null);
  }
};
schema.core.Either.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20740) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Either(self__.schemas, G__20740, self__.__extmap, self__.__hash);
};
schema.core.Either.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Either.prototype.schema$core$Schema$ = true;
schema.core.Either.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walkers = cljs.core.mapv.call(null, schema.core.subschema_walker, self__.schemas);
  return function(sub_walkers, this$__$1) {
    return function(x) {
      var sub_walkers__$1 = cljs.core.seq.call(null, sub_walkers);
      while (true) {
        if (cljs.core.not.call(null, sub_walkers__$1)) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(sub_walkers__$1, sub_walkers, this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "schemas", "schemas", -2079365190, null)), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "%", "%", -950237169, null)), new cljs.core.Symbol(null, "check", "check", -1428126865, null))), new cljs.core.Symbol(null, "some", "some", 
              -310548046, null));
            };
          }(sub_walkers__$1, sub_walkers, this$__$1), null), null));
        } else {
          var res = cljs.core.first.call(null, sub_walkers__$1).call(null, x);
          if (!schema.utils.error_QMARK_.call(null, res)) {
            return res;
          } else {
            var G__20748 = cljs.core.next.call(null, sub_walkers__$1);
            sub_walkers__$1 = G__20748;
            continue;
          }
        }
        break;
      }
    };
  }(sub_walkers, this$__$1);
};
schema.core.Either.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "either", "either", -2144373018, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.Either.cljs$lang$type = true;
schema.core.Either.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Either");
};
schema.core.Either.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Either");
};
schema.core.__GT_Either = function __GT_Either(schemas) {
  return new schema.core.Either(schemas);
};
schema.core.map__GT_Either = function map__GT_Either(G__20742) {
  return new schema.core.Either((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__20742), null, cljs.core.dissoc.call(null, G__20742, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)));
};
schema.core.either = function() {
  var either__delegate = function(schemas) {
    return new schema.core.Either(schemas);
  };
  var either = function(var_args) {
    var schemas = null;
    if (arguments.length > 0) {
      schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return either__delegate.call(this, schemas);
  };
  either.cljs$lang$maxFixedArity = 0;
  either.cljs$lang$applyTo = function(arglist__20749) {
    var schemas = cljs.core.seq(arglist__20749);
    return either__delegate(schemas);
  };
  either.cljs$core$IFn$_invoke$arity$variadic = either__delegate;
  return either;
}();
schema.core.Both = function(schemas, __meta, __extmap) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Both.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Both.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20751, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20753 = k20751 instanceof cljs.core.Keyword ? k20751.fqn : null;
  switch(G__20753) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20751, else__4142__auto__);
  }
};
schema.core.Both.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Both{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Both.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Both(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Both.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Both.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Both.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Both.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Both(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Both.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20750) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20754 = cljs.core.keyword_identical_QMARK_;
  var expr__20755 = k__4147__auto__;
  if (cljs.core.truth_(pred__20754.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__20755))) {
    return new schema.core.Both(G__20750, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Both(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20750), null);
  }
};
schema.core.Both.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20750) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Both(self__.schemas, G__20750, self__.__extmap, self__.__hash);
};
schema.core.Both.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Both.prototype.schema$core$Schema$ = true;
schema.core.Both.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walkers = cljs.core.mapv.call(null, schema.core.subschema_walker, self__.schemas);
  return function(sub_walkers, this$__$1) {
    return function(x) {
      return cljs.core.reduce.call(null, function(sub_walkers, this$__$1) {
        return function(x__$1, sub_walker) {
          if (schema.utils.error_QMARK_.call(null, x__$1)) {
            return x__$1;
          } else {
            return sub_walker.call(null, x__$1);
          }
        };
      }(sub_walkers, this$__$1), x, sub_walkers);
    };
  }(sub_walkers, this$__$1);
};
schema.core.Both.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "both", "both", 1246882687, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.Both.cljs$lang$type = true;
schema.core.Both.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Both");
};
schema.core.Both.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Both");
};
schema.core.__GT_Both = function __GT_Both(schemas) {
  return new schema.core.Both(schemas);
};
schema.core.map__GT_Both = function map__GT_Both(G__20752) {
  return new schema.core.Both((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__20752), null, cljs.core.dissoc.call(null, G__20752, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)));
};
schema.core.both = function() {
  var both__delegate = function(schemas) {
    return new schema.core.Both(schemas);
  };
  var both = function(var_args) {
    var schemas = null;
    if (arguments.length > 0) {
      schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return both__delegate.call(this, schemas);
  };
  both.cljs$lang$maxFixedArity = 0;
  both.cljs$lang$applyTo = function(arglist__20758) {
    var schemas = cljs.core.seq(arglist__20758);
    return both__delegate(schemas);
  };
  both.cljs$core$IFn$_invoke$arity$variadic = both__delegate;
  return both;
}();
schema.core.ConditionalSchema = function(preds_and_schemas, __meta, __extmap) {
  this.preds_and_schemas = preds_and_schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.ConditionalSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20760, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20762 = k20760 instanceof cljs.core.Keyword ? k20760.fqn : null;
  switch(G__20762) {
    case "preds-and-schemas":
      return self__.preds_and_schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20760, else__4142__auto__);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.ConditionalSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), self__.preds_and_schemas], null)], null), self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.ConditionalSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.ConditionalSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.ConditionalSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20759) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20763 = cljs.core.keyword_identical_QMARK_;
  var expr__20764 = k__4147__auto__;
  if (cljs.core.truth_(pred__20763.call(null, new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), expr__20764))) {
    return new schema.core.ConditionalSchema(G__20759, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20759), null);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), self__.preds_and_schemas], null)], null), self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20759) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.ConditionalSchema(self__.preds_and_schemas, G__20759, self__.__extmap, self__.__hash);
};
schema.core.ConditionalSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.ConditionalSchema.prototype.schema$core$Schema$ = true;
schema.core.ConditionalSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var preds_and_walkers = cljs.core.mapv.call(null, function(this$__$1) {
    return function(p__20766) {
      var vec__20767 = p__20766;
      var pred = cljs.core.nth.call(null, vec__20767, 0, null);
      var schema__$1 = cljs.core.nth.call(null, vec__20767, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred, schema.core.subschema_walker.call(null, schema__$1)], null);
    };
  }(this$__$1), self__.preds_and_schemas);
  return function(preds_and_walkers, this$__$1) {
    return function(x) {
      var temp__4124__auto__ = cljs.core.first.call(null, cljs.core.filter.call(null, function(preds_and_walkers, this$__$1) {
        return function(p__20768) {
          var vec__20769 = p__20768;
          var pred = cljs.core.nth.call(null, vec__20769, 0, null);
          return pred.call(null, x);
        };
      }(preds_and_walkers, this$__$1), preds_and_walkers));
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__20770 = temp__4124__auto__;
        var _ = cljs.core.nth.call(null, vec__20770, 0, null);
        var match = cljs.core.nth.call(null, vec__20770, 1, null);
        return match.call(null, x);
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(temp__4124__auto__, preds_and_walkers, this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "matches-some-condition?", "matches-some-condition?", 2097370044, null));
          };
        }(temp__4124__auto__, preds_and_walkers, this$__$1), null), null));
      }
    };
  }(preds_and_walkers, this$__$1);
};
schema.core.ConditionalSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "conditional", "conditional", -1212542970, null), cljs.core.mapcat.call(null, function(this$__$1) {
    return function(p__20771) {
      var vec__20772 = p__20771;
      var pred = cljs.core.nth.call(null, vec__20772, 0, null);
      var schema__$1 = cljs.core.nth.call(null, vec__20772, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred, schema.core.explain.call(null, schema__$1)], null);
    };
  }(this$__$1), self__.preds_and_schemas));
};
schema.core.ConditionalSchema.cljs$lang$type = true;
schema.core.ConditionalSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/ConditionalSchema");
};
schema.core.ConditionalSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/ConditionalSchema");
};
schema.core.__GT_ConditionalSchema = function __GT_ConditionalSchema(preds_and_schemas) {
  return new schema.core.ConditionalSchema(preds_and_schemas);
};
schema.core.map__GT_ConditionalSchema = function map__GT_ConditionalSchema(G__20761) {
  return new schema.core.ConditionalSchema((new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355)).cljs$core$IFn$_invoke$arity$1(G__20761), null, cljs.core.dissoc.call(null, G__20761, new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355)));
};
schema.core.conditional = function() {
  var conditional__delegate = function(preds_and_schemas) {
    if (cljs.core.seq.call(null, preds_and_schemas) && cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, preds_and_schemas))) {
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Expected even, nonzero number of args; got %s", cljs.core.count.call(null, preds_and_schemas)));
    }
    return new schema.core.ConditionalSchema(function() {
      var iter__4278__auto__ = function iter__20782(s__20783) {
        return new cljs.core.LazySeq(null, function() {
          var s__20783__$1 = s__20783;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__20783__$1);
            if (temp__4126__auto__) {
              var s__20783__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__20783__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__20783__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__20785 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__20784 = 0;
                  while (true) {
                    if (i__20784 < size__4277__auto__) {
                      var vec__20788 = cljs.core._nth.call(null, c__4276__auto__, i__20784);
                      var pred = cljs.core.nth.call(null, vec__20788, 0, null);
                      var schema__$1 = cljs.core.nth.call(null, vec__20788, 1, null);
                      cljs.core.chunk_append.call(null, b__20785, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, pred, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.constantly.call(null, true) : pred, schema__$1], null));
                      var G__20790 = i__20784 + 1;
                      i__20784 = G__20790;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20785), iter__20782.call(null, cljs.core.chunk_rest.call(null, s__20783__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20785), null);
                }
              } else {
                var vec__20789 = cljs.core.first.call(null, s__20783__$2);
                var pred = cljs.core.nth.call(null, vec__20789, 0, null);
                var schema__$1 = cljs.core.nth.call(null, vec__20789, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, pred, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.constantly.call(null, true) : pred, schema__$1], null), iter__20782.call(null, cljs.core.rest.call(null, s__20783__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4278__auto__.call(null, cljs.core.partition.call(null, 2, preds_and_schemas));
    }());
  };
  var conditional = function(var_args) {
    var preds_and_schemas = null;
    if (arguments.length > 0) {
      preds_and_schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return conditional__delegate.call(this, preds_and_schemas);
  };
  conditional.cljs$lang$maxFixedArity = 0;
  conditional.cljs$lang$applyTo = function(arglist__20791) {
    var preds_and_schemas = cljs.core.seq(arglist__20791);
    return conditional__delegate(preds_and_schemas);
  };
  conditional.cljs$core$IFn$_invoke$arity$variadic = conditional__delegate;
  return conditional;
}();
schema.core.if$ = function if$(pred, if_schema, else_schema) {
  return schema.core.conditional.call(null, pred, if_schema, cljs.core.constantly.call(null, true), else_schema);
};
schema.core._PLUS_missing_PLUS_ = new cljs.core.Keyword("schema.core", "missing", "schema.core/missing", 1420181325);
schema.core.RequiredKey = function(k, __meta, __extmap) {
  this.k = k;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.RequiredKey.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.RequiredKey.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20793, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20795 = k20793 instanceof cljs.core.Keyword ? k20793.fqn : null;
  switch(G__20795) {
    case "k":
      return self__.k;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20793, else__4142__auto__);
  }
};
schema.core.RequiredKey.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.RequiredKey{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.RequiredKey.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.RequiredKey(self__.k, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.RequiredKey.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.RequiredKey.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.RequiredKey.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.RequiredKey.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "k", "k", -2146297393), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.RequiredKey(self__.k, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.RequiredKey.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20792) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20796 = cljs.core.keyword_identical_QMARK_;
  var expr__20797 = k__4147__auto__;
  if (cljs.core.truth_(pred__20796.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), expr__20797))) {
    return new schema.core.RequiredKey(G__20792, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.RequiredKey(self__.k, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20792), null);
  }
};
schema.core.RequiredKey.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20792) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.RequiredKey(self__.k, G__20792, self__.__extmap, self__.__hash);
};
schema.core.RequiredKey.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.RequiredKey.cljs$lang$type = true;
schema.core.RequiredKey.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/RequiredKey");
};
schema.core.RequiredKey.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/RequiredKey");
};
schema.core.__GT_RequiredKey = function __GT_RequiredKey(k) {
  return new schema.core.RequiredKey(k);
};
schema.core.map__GT_RequiredKey = function map__GT_RequiredKey(G__20794) {
  return new schema.core.RequiredKey((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(G__20794), null, cljs.core.dissoc.call(null, G__20794, new cljs.core.Keyword(null, "k", "k", -2146297393)));
};
schema.core.required_key = function required_key(k) {
  if (k instanceof cljs.core.Keyword) {
    return k;
  } else {
    return new schema.core.RequiredKey(k);
  }
};
schema.core.required_key_QMARK_ = function required_key_QMARK_(ks) {
  return ks instanceof cljs.core.Keyword || ks instanceof schema.core.RequiredKey;
};
schema.core.OptionalKey = function(k, __meta, __extmap) {
  this.k = k;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.OptionalKey.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.OptionalKey.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20801, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20803 = k20801 instanceof cljs.core.Keyword ? k20801.fqn : null;
  switch(G__20803) {
    case "k":
      return self__.k;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20801, else__4142__auto__);
  }
};
schema.core.OptionalKey.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.OptionalKey{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.OptionalKey.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.OptionalKey(self__.k, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.OptionalKey.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.OptionalKey.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.OptionalKey.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.OptionalKey.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "k", "k", -2146297393), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.OptionalKey(self__.k, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.OptionalKey.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20800) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20804 = cljs.core.keyword_identical_QMARK_;
  var expr__20805 = k__4147__auto__;
  if (cljs.core.truth_(pred__20804.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), expr__20805))) {
    return new schema.core.OptionalKey(G__20800, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.OptionalKey(self__.k, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20800), null);
  }
};
schema.core.OptionalKey.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20800) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.OptionalKey(self__.k, G__20800, self__.__extmap, self__.__hash);
};
schema.core.OptionalKey.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.OptionalKey.cljs$lang$type = true;
schema.core.OptionalKey.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/OptionalKey");
};
schema.core.OptionalKey.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/OptionalKey");
};
schema.core.__GT_OptionalKey = function __GT_OptionalKey(k) {
  return new schema.core.OptionalKey(k);
};
schema.core.map__GT_OptionalKey = function map__GT_OptionalKey(G__20802) {
  return new schema.core.OptionalKey((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(G__20802), null, cljs.core.dissoc.call(null, G__20802, new cljs.core.Keyword(null, "k", "k", -2146297393)));
};
schema.core.optional_key = function optional_key(k) {
  return new schema.core.OptionalKey(k);
};
schema.core.optional_key_QMARK_ = function optional_key_QMARK_(ks) {
  return ks instanceof schema.core.OptionalKey;
};
schema.core.explicit_schema_key = function explicit_schema_key(ks) {
  if (ks instanceof cljs.core.Keyword) {
    return ks;
  } else {
    if (ks instanceof schema.core.RequiredKey) {
      return ks.k;
    } else {
      if (schema.core.optional_key_QMARK_.call(null, ks)) {
        return ks.k;
      } else {
        throw new Error(schema.utils.format_STAR_.call(null, "Bad explicit key: %s", ks));
      }
    }
  }
};
schema.core.specific_key_QMARK_ = function specific_key_QMARK_(ks) {
  return schema.core.required_key_QMARK_.call(null, ks) || schema.core.optional_key_QMARK_.call(null, ks);
};
schema.core.explain_kspec = function explain_kspec(kspec) {
  if (schema.core.specific_key_QMARK_.call(null, kspec)) {
    if (kspec instanceof cljs.core.Keyword) {
      return kspec;
    } else {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explicit_schema_key.call(null, kspec)), schema.core.required_key_QMARK_.call(null, kspec) ? new cljs.core.Symbol(null, "required-key", "required-key", 1624616412, null) : schema.core.optional_key_QMARK_.call(null, kspec) ? new cljs.core.Symbol(null, "optional-key", "optional-key", 988406145, null) : null);
    }
  } else {
    return schema.core.explain.call(null, kspec);
  }
};
schema.core.MapEntry = function(kspec, val_schema, __meta, __extmap) {
  this.kspec = kspec;
  this.val_schema = val_schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20809, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20811 = k20809 instanceof cljs.core.Keyword ? k20809.fqn : null;
  switch(G__20811) {
    case "val-schema":
      return self__.val_schema;
      break;
    case "kspec":
      return self__.kspec;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20809, else__4142__auto__);
  }
};
schema.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.MapEntry{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), self__.kspec], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), self__.val_schema], null)], null), self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.MapEntry.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.MapEntry.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), null, new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20808) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20812 = cljs.core.keyword_identical_QMARK_;
  var expr__20813 = k__4147__auto__;
  if (cljs.core.truth_(pred__20812.call(null, new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), expr__20813))) {
    return new schema.core.MapEntry(G__20808, self__.val_schema, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20812.call(null, new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), expr__20813))) {
      return new schema.core.MapEntry(self__.kspec, G__20808, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20808), null);
    }
  }
};
schema.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), self__.kspec], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), self__.val_schema], null)], null), self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20808) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.MapEntry(self__.kspec, self__.val_schema, G__20808, self__.__extmap, self__.__hash);
};
schema.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.MapEntry.prototype.schema$core$Schema$ = true;
schema.core.MapEntry.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var val_walker = schema.core.subschema_walker.call(null, self__.val_schema);
  if (schema.core.specific_key_QMARK_.call(null, self__.kspec)) {
    var optional_QMARK_ = schema.core.optional_key_QMARK_.call(null, self__.kspec);
    var k = schema.core.explicit_schema_key.call(null, self__.kspec);
    return function(optional_QMARK_, k, val_walker, this$__$1) {
      return function(x) {
        if (schema.core._PLUS_missing_PLUS_ === x) {
          if (optional_QMARK_) {
            return null;
          } else {
            return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null)], null));
          }
        } else {
          if (!cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, x))) {
            return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(optional_QMARK_, k, val_walker, this$__$1) {
              return function() {
                return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "count", "count", -514511684, null))), 2), cljs.core._EQ_);
              };
            }(optional_QMARK_, k, val_walker, this$__$1), null), null));
          } else {
            var vec__20815 = x;
            var xk = cljs.core.nth.call(null, vec__20815, 0, null);
            var xv = cljs.core.nth.call(null, vec__20815, 1, null);
            if (cljs.core._EQ_.call(null, xk, k)) {
            } else {
              throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "xk", "xk", 741114825, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)))));
            }
            var vres = val_walker.call(null, xv);
            var temp__4124__auto__ = schema.utils.error_val.call(null, vres);
            if (cljs.core.truth_(temp__4124__auto__)) {
              var ve = temp__4124__auto__;
              return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xk, ve], null));
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xk, vres], null);
            }
          }
        }
      };
    }(optional_QMARK_, k, val_walker, this$__$1);
  } else {
    var key_walker = schema.core.subschema_walker.call(null, self__.kspec);
    return function(key_walker, val_walker, this$__$1) {
      return function(x) {
        if (!cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, x))) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(key_walker, val_walker, this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "count", "count", -514511684, null))), 2), cljs.core._EQ_);
            };
          }(key_walker, val_walker, this$__$1), null), null));
        } else {
          var out_k = key_walker.call(null, cljs.core.key.call(null, x));
          var out_ke = schema.utils.error_val.call(null, out_k);
          var out_v = val_walker.call(null, cljs.core.val.call(null, x));
          var out_ve = schema.utils.error_val.call(null, out_v);
          if (cljs.core.truth_(function() {
            var or__3553__auto__ = out_ke;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return out_ve;
            }
          }())) {
            return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
              var or__3553__auto__ = out_ke;
              if (cljs.core.truth_(or__3553__auto__)) {
                return or__3553__auto__;
              } else {
                return cljs.core.key.call(null, x);
              }
            }(), function() {
              var or__3553__auto__ = out_ve;
              if (cljs.core.truth_(or__3553__auto__)) {
                return or__3553__auto__;
              } else {
                return new cljs.core.Symbol(null, "invalid-key", "invalid-key", -1461682245, null);
              }
            }()], null));
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [out_k, out_v], null);
          }
        }
      };
    }(key_walker, val_walker, this$__$1);
  }
};
schema.core.MapEntry.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.val_schema)), schema.core.explain_kspec.call(null, self__.kspec)), new cljs.core.Symbol(null, "map-entry", "map-entry", 329617471, null));
};
schema.core.MapEntry.cljs$lang$type = true;
schema.core.MapEntry.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/MapEntry");
};
schema.core.MapEntry.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/MapEntry");
};
schema.core.__GT_MapEntry = function __GT_MapEntry(kspec, val_schema) {
  return new schema.core.MapEntry(kspec, val_schema);
};
schema.core.map__GT_MapEntry = function map__GT_MapEntry(G__20810) {
  return new schema.core.MapEntry((new cljs.core.Keyword(null, "kspec", "kspec", -1151232248)).cljs$core$IFn$_invoke$arity$1(G__20810), (new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)).cljs$core$IFn$_invoke$arity$1(G__20810), null, cljs.core.dissoc.call(null, G__20810, new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)));
};
schema.core.map_entry = function map_entry(kspec, val_schema) {
  return new schema.core.MapEntry(kspec, val_schema);
};
schema.core.find_extra_keys_schema = function find_extra_keys_schema(map_schema) {
  var key_schemata = cljs.core.remove.call(null, schema.core.specific_key_QMARK_, cljs.core.keys.call(null, map_schema));
  if (cljs.core.count.call(null, key_schemata) < 2) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "More than one non-optional/required key schemata: %s", cljs.core.vec.call(null, key_schemata)));
  }
  return cljs.core.first.call(null, key_schemata);
};
schema.core.map_walker = function map_walker(map_schema) {
  var extra_keys_schema = schema.core.find_extra_keys_schema.call(null, map_schema);
  var extra_walker = cljs.core.truth_(extra_keys_schema) ? schema.core.subschema_walker.call(null, cljs.core.apply.call(null, schema.core.map_entry, cljs.core.find.call(null, map_schema, extra_keys_schema))) : null;
  var explicit_schema = cljs.core.dissoc.call(null, map_schema, extra_keys_schema);
  var explicit_walkers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4278__auto__ = function(extra_keys_schema, extra_walker, explicit_schema) {
      return function iter__20829(s__20830) {
        return new cljs.core.LazySeq(null, function(extra_keys_schema, extra_walker, explicit_schema) {
          return function() {
            var s__20830__$1 = s__20830;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__20830__$1);
              if (temp__4126__auto__) {
                var s__20830__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__20830__$2)) {
                  var c__4276__auto__ = cljs.core.chunk_first.call(null, s__20830__$2);
                  var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                  var b__20832 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                  if (function() {
                    var i__20831 = 0;
                    while (true) {
                      if (i__20831 < size__4277__auto__) {
                        var vec__20835 = cljs.core._nth.call(null, c__4276__auto__, i__20831);
                        var k = cljs.core.nth.call(null, vec__20835, 0, null);
                        var v = cljs.core.nth.call(null, vec__20835, 1, null);
                        cljs.core.chunk_append.call(null, b__20832, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.subschema_walker.call(null, schema.core.map_entry.call(null, k, v))], null));
                        var G__20840 = i__20831 + 1;
                        i__20831 = G__20840;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20832), iter__20829.call(null, cljs.core.chunk_rest.call(null, s__20830__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20832), null);
                  }
                } else {
                  var vec__20836 = cljs.core.first.call(null, s__20830__$2);
                  var k = cljs.core.nth.call(null, vec__20836, 0, null);
                  var v = cljs.core.nth.call(null, vec__20836, 1, null);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.subschema_walker.call(null, schema.core.map_entry.call(null, k, v))], null), iter__20829.call(null, cljs.core.rest.call(null, s__20830__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(extra_keys_schema, extra_walker, explicit_schema), null, null);
      };
    }(extra_keys_schema, extra_walker, explicit_schema);
    return iter__4278__auto__.call(null, explicit_schema);
  }());
  var err_conj = schema.utils.result_builder.call(null, cljs.core.constantly.call(null, cljs.core.PersistentArrayMap.EMPTY));
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, explicit_schema), cljs.core.count.call(null, explicit_walkers))) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Schema has multiple variants of the same explicit key: %s", cljs.core.mapv.call(null, schema.core.explain_kspec, cljs.core.apply.call(null, cljs.core.concat, cljs.core.filter.call(null, function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
      return function(p1__20817_SHARP_) {
        return cljs.core.count.call(null, p1__20817_SHARP_) > 1;
      };
    }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), cljs.core.vals.call(null, cljs.core.group_by.call(null, schema.core.explicit_schema_key, cljs.core.keys.call(null, explicit_schema))))))));
  }
  return function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
    return function(x) {
      if (!cljs.core.map_QMARK_.call(null, x)) {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, map_schema, x, new cljs.core.Delay(function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
          };
        }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), null), null));
      } else {
        var x__$1 = x;
        var explicit_walkers__$1 = cljs.core.seq.call(null, explicit_walkers);
        var out = cljs.core.PersistentArrayMap.EMPTY;
        while (true) {
          if (cljs.core.not.call(null, explicit_walkers__$1)) {
            return cljs.core.reduce.call(null, cljs.core.truth_(extra_walker) ? function(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
              return function(out__$1, e) {
                return err_conj.call(null, out__$1, extra_walker.call(null, e));
              };
            }(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) : function(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
              return function(out__$1, p__20837) {
                var vec__20838 = p__20837;
                var k = cljs.core.nth.call(null, vec__20838, 0, null);
                var _ = cljs.core.nth.call(null, vec__20838, 1, null);
                return err_conj.call(null, out__$1, schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Symbol(null, "disallowed-key", "disallowed-key", -1877785633, null)], null)));
              };
            }(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), out, x__$1);
          } else {
            var vec__20839 = cljs.core.first.call(null, explicit_walkers__$1);
            var wk = cljs.core.nth.call(null, vec__20839, 0, null);
            var wv = cljs.core.nth.call(null, vec__20839, 1, null);
            var G__20841 = cljs.core.dissoc.call(null, x__$1, wk);
            var G__20842 = cljs.core.next.call(null, explicit_walkers__$1);
            var G__20843 = err_conj.call(null, out, wv.call(null, function() {
              var or__3553__auto__ = cljs.core.find.call(null, x__$1, wk);
              if (cljs.core.truth_(or__3553__auto__)) {
                return or__3553__auto__;
              } else {
                return schema.core._PLUS_missing_PLUS_;
              }
            }()));
            x__$1 = G__20841;
            explicit_walkers__$1 = G__20842;
            out = G__20843;
            continue;
          }
          break;
        }
      }
    };
  }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj);
};
schema.core.map_explain = function map_explain(this$) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4278__auto__ = function iter__20852(s__20853) {
      return new cljs.core.LazySeq(null, function() {
        var s__20853__$1 = s__20853;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__20853__$1);
          if (temp__4126__auto__) {
            var s__20853__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20853__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__20853__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__20855 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__20854 = 0;
                while (true) {
                  if (i__20854 < size__4277__auto__) {
                    var vec__20858 = cljs.core._nth.call(null, c__4276__auto__, i__20854);
                    var k = cljs.core.nth.call(null, vec__20858, 0, null);
                    var v = cljs.core.nth.call(null, vec__20858, 1, null);
                    cljs.core.chunk_append.call(null, b__20855, cljs.core.vec.call(null, cljs.core.next.call(null, schema.core.explain.call(null, schema.core.map_entry.call(null, k, v)))));
                    var G__20860 = i__20854 + 1;
                    i__20854 = G__20860;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20855), iter__20852.call(null, cljs.core.chunk_rest.call(null, s__20853__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20855), null);
              }
            } else {
              var vec__20859 = cljs.core.first.call(null, s__20853__$2);
              var k = cljs.core.nth.call(null, vec__20859, 0, null);
              var v = cljs.core.nth.call(null, vec__20859, 1, null);
              return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.next.call(null, schema.core.explain.call(null, schema.core.map_entry.call(null, k, v)))), iter__20852.call(null, cljs.core.rest.call(null, s__20853__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, this$);
  }());
};
cljs.core.PersistentHashMap.prototype.schema$core$Schema$ = true;
cljs.core.PersistentHashMap.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_walker.call(null, this$__$1);
};
cljs.core.PersistentHashMap.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_explain.call(null, this$__$1);
};
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$ = true;
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_walker.call(null, this$__$1);
};
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_explain.call(null, this$__$1);
};
cljs.core.PersistentHashSet.prototype.schema$core$Schema$ = true;
cljs.core.PersistentHashSet.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, this$__$1), 1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Set schema must have exactly one element"));
  }
  var sub_walker = schema.core.subschema_walker.call(null, cljs.core.first.call(null, this$__$1));
  return function(sub_walker, this$__$1) {
    return function(x) {
      var or__3553__auto__ = cljs.core.set_QMARK_.call(null, x) ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(sub_walker, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "set?", "set?", 1636014792, null));
        };
      }(sub_walker, this$__$1), null), null));
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        var vec__20861 = cljs.core.juxt.call(null, cljs.core.remove, cljs.core.keep).call(null, schema.utils.error_val, cljs.core.map.call(null, sub_walker, x));
        var good = cljs.core.nth.call(null, vec__20861, 0, null);
        var bad = cljs.core.nth.call(null, vec__20861, 1, null);
        if (cljs.core.seq.call(null, bad)) {
          return schema.utils.error.call(null, cljs.core.set.call(null, bad));
        } else {
          return cljs.core.set.call(null, good);
        }
      }
    };
  }(sub_walker, this$__$1);
};
cljs.core.PersistentHashSet.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.set.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain.call(null, cljs.core.first.call(null, this$__$1))], null));
};
schema.core.One = function(schema, optional_QMARK_, name, __meta, __extmap) {
  this.schema = schema;
  this.optional_QMARK_ = optional_QMARK_;
  this.name = name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.One.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.One.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20863, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20865 = k20863 instanceof cljs.core.Keyword ? k20863.fqn : null;
  switch(G__20865) {
    case "name":
      return self__.name;
      break;
    case "optional?":
      return self__.optional_QMARK_;
      break;
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20863, else__4142__auto__);
  }
};
schema.core.One.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.One{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), self__.optional_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.One.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.One.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.One.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.One.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.One.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.One.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null, new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.One.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20862) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20866 = cljs.core.keyword_identical_QMARK_;
  var expr__20867 = k__4147__auto__;
  if (cljs.core.truth_(pred__20866.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__20867))) {
    return new schema.core.One(G__20862, self__.optional_QMARK_, self__.name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20866.call(null, new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), expr__20867))) {
      return new schema.core.One(self__.schema, G__20862, self__.name, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__20866.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__20867))) {
        return new schema.core.One(self__.schema, self__.optional_QMARK_, G__20862, self__.__meta, self__.__extmap, null);
      } else {
        return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20862), null);
      }
    }
  }
};
schema.core.One.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), self__.optional_QMARK_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.One.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20862) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, G__20862, self__.__extmap, self__.__hash);
};
schema.core.One.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.One.cljs$lang$type = true;
schema.core.One.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/One");
};
schema.core.One.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/One");
};
schema.core.__GT_One = function __GT_One(schema__$1, optional_QMARK_, name) {
  return new schema.core.One(schema__$1, optional_QMARK_, name);
};
schema.core.map__GT_One = function map__GT_One(G__20864) {
  return new schema.core.One((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__20864), (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(G__20864), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__20864), null, cljs.core.dissoc.call(null, G__20864, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "optional?", "optional?", 
  1184638129), new cljs.core.Keyword(null, "name", "name", 1843675177)));
};
schema.core.one = function one(schema__$1, name) {
  return new schema.core.One(schema__$1, false, name);
};
schema.core.optional = function optional(schema__$1, name) {
  return new schema.core.One(schema__$1, true, name);
};
schema.core.parse_sequence_schema = function parse_sequence_schema(s) {
  var vec__20875 = cljs.core.split_with.call(null, function(p1__20870_SHARP_) {
    return p1__20870_SHARP_ instanceof schema.core.One && cljs.core.not.call(null, (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(p1__20870_SHARP_));
  }, s);
  var required = cljs.core.nth.call(null, vec__20875, 0, null);
  var more = cljs.core.nth.call(null, vec__20875, 1, null);
  var vec__20876 = cljs.core.split_with.call(null, function(vec__20875, required, more) {
    return function(p1__20871_SHARP_) {
      var and__3541__auto__ = p1__20871_SHARP_ instanceof schema.core.One;
      if (and__3541__auto__) {
        return(new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(p1__20871_SHARP_);
      } else {
        return and__3541__auto__;
      }
    };
  }(vec__20875, required, more), more);
  var optional = cljs.core.nth.call(null, vec__20876, 0, null);
  var more__$1 = cljs.core.nth.call(null, vec__20876, 1, null);
  if (cljs.core.count.call(null, more__$1) <= 1 && cljs.core.every_QMARK_.call(null, function(vec__20875, required, more, vec__20876, optional, more__$1) {
    return function(p1__20872_SHARP_) {
      return!(p1__20872_SHARP_ instanceof schema.core.One);
    };
  }(vec__20875, required, more, vec__20876, optional, more__$1), more__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Sequence schema %s does not match [one* optional* rest-schema?]", s));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.call(null, required, optional), cljs.core.first.call(null, more__$1)], null);
};
cljs.core.PersistentVector.prototype.schema$core$Schema$ = true;
cljs.core.PersistentVector.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  var vec__20877 = schema.core.parse_sequence_schema.call(null, this$__$1);
  var singles = cljs.core.nth.call(null, vec__20877, 0, null);
  var multi = cljs.core.nth.call(null, vec__20877, 1, null);
  var single_walkers = cljs.core.vec.call(null, function() {
    var iter__4278__auto__ = function(vec__20877, singles, multi, this$__$1) {
      return function iter__20878(s__20879) {
        return new cljs.core.LazySeq(null, function(vec__20877, singles, multi, this$__$1) {
          return function() {
            var s__20879__$1 = s__20879;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__20879__$1);
              if (temp__4126__auto__) {
                var s__20879__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__20879__$2)) {
                  var c__4276__auto__ = cljs.core.chunk_first.call(null, s__20879__$2);
                  var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                  var b__20881 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                  if (function() {
                    var i__20880 = 0;
                    while (true) {
                      if (i__20880 < size__4277__auto__) {
                        var s = cljs.core._nth.call(null, c__4276__auto__, i__20880);
                        cljs.core.chunk_append.call(null, b__20881, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, schema.core.subschema_walker.call(null, s.schema)], null));
                        var G__20896 = i__20880 + 1;
                        i__20880 = G__20896;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20881), iter__20878.call(null, cljs.core.chunk_rest.call(null, s__20879__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20881), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__20879__$2);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, schema.core.subschema_walker.call(null, s.schema)], null), iter__20878.call(null, cljs.core.rest.call(null, s__20879__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(vec__20877, singles, multi, this$__$1), null, null);
      };
    }(vec__20877, singles, multi, this$__$1);
    return iter__4278__auto__.call(null, singles);
  }());
  var multi_walker = cljs.core.truth_(multi) ? schema.core.subschema_walker.call(null, multi) : null;
  var err_conj = schema.utils.result_builder.call(null, function(vec__20877, singles, multi, single_walkers, multi_walker, this$__$1) {
    return function(m) {
      return cljs.core.vec.call(null, cljs.core.repeat.call(null, cljs.core.count.call(null, m), null));
    };
  }(vec__20877, singles, multi, single_walkers, multi_walker, this$__$1));
  return function(vec__20877, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
    return function(x) {
      var or__3553__auto__ = x == null || cljs.core.sequential_QMARK_.call(null, x) ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(vec__20877, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "sequential?", "sequential?", 1102351463, null));
        };
      }(vec__20877, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null));
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        var single_walkers__$1 = single_walkers;
        var x__$1 = x;
        var out = cljs.core.PersistentVector.EMPTY;
        while (true) {
          var temp__4124__auto__ = cljs.core.first.call(null, single_walkers__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var vec__20882 = temp__4124__auto__;
            var first_single = cljs.core.nth.call(null, vec__20882, 0, null);
            var single_walker = cljs.core.nth.call(null, vec__20882, 1, null);
            if (cljs.core.empty_QMARK_.call(null, x__$1)) {
              if (cljs.core.truth_(first_single.optional_QMARK_)) {
                return out;
              } else {
                return err_conj.call(null, out, schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first, single_walkers__$1)), null, new cljs.core.Delay(function(single_walkers__$1, x__$1, out, vec__20882, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__20877, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                  return function() {
                    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "present?", "present?", -1810613791, null), function() {
                      var iter__4278__auto__ = function(single_walkers__$1, x__$1, out, vec__20882, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__20877, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                        return function iter__20883(s__20884) {
                          return new cljs.core.LazySeq(null, function(single_walkers__$1, x__$1, out, vec__20882, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__20877, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                            return function() {
                              var s__20884__$1 = s__20884;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq.call(null, s__20884__$1);
                                if (temp__4126__auto__) {
                                  var s__20884__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__20884__$2)) {
                                    var c__4276__auto__ = cljs.core.chunk_first.call(null, s__20884__$2);
                                    var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                    var b__20886 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                    if (function() {
                                      var i__20885 = 0;
                                      while (true) {
                                        if (i__20885 < size__4277__auto__) {
                                          var vec__20889 = cljs.core._nth.call(null, c__4276__auto__, i__20885);
                                          var single = cljs.core.nth.call(null, vec__20889, 0, null);
                                          if (cljs.core.not.call(null, single.optional_QMARK_)) {
                                            cljs.core.chunk_append.call(null, b__20886, single.name);
                                            var G__20897 = i__20885 + 1;
                                            i__20885 = G__20897;
                                            continue;
                                          } else {
                                            return null;
                                          }
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20886), iter__20883.call(null, cljs.core.chunk_rest.call(null, s__20884__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20886), null);
                                    }
                                  } else {
                                    var vec__20890 = cljs.core.first.call(null, s__20884__$2);
                                    var single = cljs.core.nth.call(null, vec__20890, 0, null);
                                    if (cljs.core.not.call(null, single.optional_QMARK_)) {
                                      return cljs.core.cons.call(null, single.name, iter__20883.call(null, cljs.core.rest.call(null, s__20884__$2)));
                                    } else {
                                      return null;
                                    }
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(single_walkers__$1, x__$1, out, vec__20882, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__20877, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null, null);
                        };
                      }(single_walkers__$1, x__$1, out, vec__20882, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__20877, singles, multi, single_walkers, multi_walker, err_conj, this$__$1);
                      return iter__4278__auto__.call(null, single_walkers__$1);
                    }());
                  };
                }(single_walkers__$1, x__$1, out, vec__20882, first_single, single_walker, temp__4124__auto__, or__3553__auto__, vec__20877, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null)));
              }
            } else {
              var G__20898 = cljs.core.next.call(null, single_walkers__$1);
              var G__20899 = cljs.core.rest.call(null, x__$1);
              var G__20900 = err_conj.call(null, out, schema.utils.wrap_error_name.call(null, first_single.name, single_walker.call(null, cljs.core.first.call(null, x__$1))));
              single_walkers__$1 = G__20898;
              x__$1 = G__20899;
              out = G__20900;
              continue;
            }
          } else {
            if (cljs.core.truth_(multi)) {
              return cljs.core.reduce.call(null, err_conj, out, cljs.core.map.call(null, multi_walker, x__$1));
            } else {
              if (cljs.core.seq.call(null, x__$1)) {
                return err_conj.call(null, out, schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, null, x__$1, new cljs.core.Delay(function(single_walkers__$1, x__$1, out, temp__4124__auto__, or__3553__auto__, vec__20877, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                  return function() {
                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, x__$1)), new cljs.core.Symbol(null, "has-extra-elts?", "has-extra-elts?", -1376562869, null));
                  };
                }(single_walkers__$1, x__$1, out, temp__4124__auto__, or__3553__auto__, vec__20877, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null)));
              } else {
                return out;
              }
            }
          }
          break;
        }
      }
    };
  }(vec__20877, singles, multi, single_walkers, multi_walker, err_conj, this$__$1);
};
cljs.core.PersistentVector.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  var vec__20891 = schema.core.parse_sequence_schema.call(null, this$__$1);
  var singles = cljs.core.nth.call(null, vec__20891, 0, null);
  var multi = cljs.core.nth.call(null, vec__20891, 1, null);
  return cljs.core.vec.call(null, cljs.core.concat.call(null, function() {
    var iter__4278__auto__ = function(vec__20891, singles, multi, this$__$1) {
      return function iter__20892(s__20893) {
        return new cljs.core.LazySeq(null, function(vec__20891, singles, multi, this$__$1) {
          return function() {
            var s__20893__$1 = s__20893;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__20893__$1);
              if (temp__4126__auto__) {
                var s__20893__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__20893__$2)) {
                  var c__4276__auto__ = cljs.core.chunk_first.call(null, s__20893__$2);
                  var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                  var b__20895 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                  if (function() {
                    var i__20894 = 0;
                    while (true) {
                      if (i__20894 < size__4277__auto__) {
                        var s = cljs.core._nth.call(null, c__4276__auto__, i__20894);
                        cljs.core.chunk_append.call(null, b__20895, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(s)), schema.core.explain.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(s))), cljs.core.truth_(s.optional_QMARK_) ? new cljs.core.Symbol(null, "optional", "optional", -600484260, null) : 
                        new cljs.core.Symbol(null, "one", "one", -1719427865, null)));
                        var G__20901 = i__20894 + 1;
                        i__20894 = G__20901;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20895), iter__20892.call(null, cljs.core.chunk_rest.call(null, s__20893__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20895), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__20893__$2);
                  return cljs.core.cons.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(s)), schema.core.explain.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(s))), cljs.core.truth_(s.optional_QMARK_) ? new cljs.core.Symbol(null, "optional", "optional", -600484260, null) : new cljs.core.Symbol(null, 
                  "one", "one", -1719427865, null)), iter__20892.call(null, cljs.core.rest.call(null, s__20893__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(vec__20891, singles, multi, this$__$1), null, null);
      };
    }(vec__20891, singles, multi, this$__$1);
    return iter__4278__auto__.call(null, singles);
  }(), cljs.core.truth_(multi) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain.call(null, multi)], null) : null));
};
schema.core.pair = function pair(first_schema, first_name, second_schema, second_name) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, first_schema, first_name), schema.core.one.call(null, second_schema, second_name)], null);
};
schema.core.Record = function(klass, schema, __meta, __extmap) {
  this.klass = klass;
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Record.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.Record.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20903, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20905 = k20903 instanceof cljs.core.Keyword ? k20903.fqn : null;
  switch(G__20905) {
    case "schema":
      return self__.schema;
      break;
    case "klass":
      return self__.klass;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20903, else__4142__auto__);
  }
};
schema.core.Record.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.Record{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), self__.klass], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.Record.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.Record(self__.klass, self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Record.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Record.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.Record.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Record.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "klass", "klass", -1386752349), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.Record(self__.klass, self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.Record.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20902) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20906 = cljs.core.keyword_identical_QMARK_;
  var expr__20907 = k__4147__auto__;
  if (cljs.core.truth_(pred__20906.call(null, new cljs.core.Keyword(null, "klass", "klass", -1386752349), expr__20907))) {
    return new schema.core.Record(G__20902, self__.schema, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20906.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__20907))) {
      return new schema.core.Record(self__.klass, G__20902, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Record(self__.klass, self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20902), null);
    }
  }
};
schema.core.Record.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), self__.klass], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20902) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Record(self__.klass, self__.schema, G__20902, self__.__extmap, self__.__hash);
};
schema.core.Record.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.Record.prototype.schema$core$Schema$ = true;
schema.core.Record.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var map_checker = schema.core.subschema_walker.call(null, self__.schema);
  var pred_checker = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "extra-validator-fn", "extra-validator-fn", 1562905865)).cljs$core$IFn$_invoke$arity$1(this$__$1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var evf = temp__4126__auto__;
      return schema.core.subschema_walker.call(null, schema.core.pred.call(null, evf));
    } else {
      return null;
    }
  }();
  return function(map_checker, pred_checker, this$__$1) {
    return function(r) {
      var or__3553__auto__ = r instanceof self__.klass ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, r, new cljs.core.Delay(function(map_checker, pred_checker, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, r)), self__.klass), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
        };
      }(map_checker, pred_checker, this$__$1), null), null));
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        var res = map_checker.call(null, r);
        if (schema.utils.error_QMARK_.call(null, res)) {
          return res;
        } else {
          var pred_res = cljs.core.truth_(pred_checker) ? pred_checker.call(null, r) : null;
          if (schema.utils.error_QMARK_.call(null, pred_res)) {
            return pred_res;
          } else {
            return cljs.core.merge.call(null, r, res);
          }
        }
      }
    };
  }(map_checker, pred_checker, this$__$1);
};
schema.core.Record.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), cljs.core.symbol.call(null, cljs.core.pr_str.call(null, self__.klass))), new cljs.core.Symbol(null, "record", "record", 861424668, null));
};
schema.core.Record.cljs$lang$type = true;
schema.core.Record.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Record");
};
schema.core.Record.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/Record");
};
schema.core.__GT_Record = function __GT_Record(klass, schema__$1) {
  return new schema.core.Record(klass, schema__$1);
};
schema.core.map__GT_Record = function map__GT_Record(G__20904) {
  return new schema.core.Record((new cljs.core.Keyword(null, "klass", "klass", -1386752349)).cljs$core$IFn$_invoke$arity$1(G__20904), (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__20904), null, cljs.core.dissoc.call(null, G__20904, new cljs.core.Keyword(null, "klass", "klass", -1386752349), new cljs.core.Keyword(null, "schema", "schema", -1582001791)));
};
schema.core.record = function record(klass, schema__$1) {
  if (cljs.core.map_QMARK_.call(null, schema__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Expected map, got %s", schema.utils.type_of.call(null, schema__$1)));
  }
  return new schema.core.Record(klass, schema__$1);
};
schema.core.explain_input_schema = function explain_input_schema(input_schema) {
  var vec__20913 = cljs.core.split_with.call(null, function(p1__20910_SHARP_) {
    return p1__20910_SHARP_ instanceof schema.core.One;
  }, input_schema);
  var required = cljs.core.nth.call(null, vec__20913, 0, null);
  var more = cljs.core.nth.call(null, vec__20913, 1, null);
  return cljs.core.concat.call(null, cljs.core.map.call(null, function(vec__20913, required, more) {
    return function(p1__20911_SHARP_) {
      return schema.core.explain.call(null, p1__20911_SHARP_.schema);
    };
  }(vec__20913, required, more), required), cljs.core.seq.call(null, more) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), cljs.core.mapv.call(null, schema.core.explain, more)], null) : null);
};
schema.core.FnSchema = function(output_schema, input_schemas, __meta, __extmap) {
  this.output_schema = output_schema;
  this.input_schemas = input_schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.FnSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
schema.core.FnSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k20915, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__20917 = k20915 instanceof cljs.core.Keyword ? k20915.fqn : null;
  switch(G__20917) {
    case "input-schemas":
      return self__.input_schemas;
      break;
    case "output-schema":
      return self__.output_schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20915, else__4142__auto__);
  }
};
schema.core.FnSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#schema.core.FnSchema{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), self__.output_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), self__.input_schemas], null)], null), self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
schema.core.FnSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.FnSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.FnSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
schema.core.FnSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.FnSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), null, new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
schema.core.FnSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__20914) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__20918 = cljs.core.keyword_identical_QMARK_;
  var expr__20919 = k__4147__auto__;
  if (cljs.core.truth_(pred__20918.call(null, new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), expr__20919))) {
    return new schema.core.FnSchema(G__20914, self__.input_schemas, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20918.call(null, new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), expr__20919))) {
      return new schema.core.FnSchema(self__.output_schema, G__20914, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__20914), null);
    }
  }
};
schema.core.FnSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), self__.output_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), self__.input_schemas], 
  null)], null), self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__20914) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, G__20914, self__.__extmap, self__.__hash);
};
schema.core.FnSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
schema.core.FnSchema.prototype.schema$core$Schema$ = true;
schema.core.FnSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.fn_QMARK_.call(null, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.FnSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.input_schemas) > 1) {
    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "\x3d\x3e*", "\x3d\x3e*", 1909690043, null), schema.core.explain.call(null, self__.output_schema), cljs.core.map.call(null, schema.core.explain_input_schema, self__.input_schemas));
  } else {
    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "\x3d\x3e", "\x3d\x3e", -813269641, null), schema.core.explain.call(null, self__.output_schema), schema.core.explain_input_schema.call(null, cljs.core.first.call(null, self__.input_schemas)));
  }
};
schema.core.FnSchema.cljs$lang$type = true;
schema.core.FnSchema.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/FnSchema");
};
schema.core.FnSchema.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "schema.core/FnSchema");
};
schema.core.__GT_FnSchema = function __GT_FnSchema(output_schema, input_schemas) {
  return new schema.core.FnSchema(output_schema, input_schemas);
};
schema.core.map__GT_FnSchema = function map__GT_FnSchema(G__20916) {
  return new schema.core.FnSchema((new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137)).cljs$core$IFn$_invoke$arity$1(G__20916), (new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)).cljs$core$IFn$_invoke$arity$1(G__20916), null, cljs.core.dissoc.call(null, G__20916, new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)));
};
schema.core.arity = function arity(input_schema) {
  if (cljs.core.seq.call(null, input_schema)) {
    if (cljs.core.last.call(null, input_schema) instanceof schema.core.One) {
      return cljs.core.count.call(null, input_schema);
    } else {
      return Number.MAX_VALUE;
    }
  } else {
    return 0;
  }
};
schema.core.make_fn_schema = function make_fn_schema(output_schema, input_schemas) {
  if (cljs.core.seq.call(null, input_schemas)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Function must have at least one input schema"));
  }
  if (cljs.core.every_QMARK_.call(null, cljs.core.vector_QMARK_, input_schemas)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Each arity must be a vector."));
  }
  if (cljs.core.truth_(cljs.core.apply.call(null, cljs.core.distinct_QMARK_, cljs.core.map.call(null, schema.core.arity, input_schemas)))) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Arities must be distinct"));
  }
  return new schema.core.FnSchema(output_schema, cljs.core.sort_by.call(null, schema.core.arity, input_schemas));
};
schema.core.fn_validation_QMARK_ = function fn_validation_QMARK_() {
  return schema.utils.use_fn_validation.get_cell();
};
schema.core.set_fn_validation_BANG_ = function set_fn_validation_BANG_(on_QMARK_) {
  return schema.utils.use_fn_validation.set_cell(on_QMARK_);
};
schema.core.schematize_fn = function schematize_fn(f, schema__$1) {
  return cljs.core.vary_meta.call(null, f, cljs.core.assoc, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1);
};
schema.core.fn_schema = function fn_schema(f) {
  if (cljs.core.fn_QMARK_.call(null, f)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Non-function %s", schema.utils.type_of.call(null, f)));
  }
  var or__3553__auto__ = schema.utils.class_schema.call(null, schema.utils.fn_schema_bearer.call(null, f));
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    var m__5743__auto__ = cljs.core.meta.call(null, f);
    var k__5744__auto__ = new cljs.core.Keyword(null, "schema", "schema", -1582001791);
    var temp__4124__auto__ = cljs.core.find.call(null, m__5743__auto__, k__5744__auto__);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var pair__5745__auto__ = temp__4124__auto__;
      return cljs.core.val.call(null, pair__5745__auto__);
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Key %s not found in %s", k__5744__auto__, m__5743__auto__));
    }
  }
};
schema.core.schema_with_name = function schema_with_name(schema__$1, name) {
  return cljs.core.with_meta.call(null, schema__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), name], null));
};
schema.core.schema_name = function schema_name(schema__$1) {
  return(new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, schema__$1));
};
goog.provide("plumbing.fnk.schema");
goog.require("cljs.core");
goog.require("schema.utils");
goog.require("schema.utils");
goog.require("schema.core");
goog.require("schema.core");
plumbing.fnk.schema.Schema = cljs.core.with_meta.call(null, schema.core.__GT_Protocol.call(null, schema.core.Schema), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "proto-sym", "proto-sym", -886371734), new cljs.core.Symbol("s", "Schema", "s/Schema", -1305723789, null), new cljs.core.Keyword(null, "proto-pred", "proto-pred", 1885698716), function(p1__5851__5852__auto__) {
  var G__20350 = p1__5851__5852__auto__;
  if (G__20350) {
    var bit__4203__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3553__auto__ = bit__4203__auto__;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return G__20350.schema$core$Schema$;
      }
    }())) {
      return true;
    } else {
      if (!G__20350.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, schema.core.Schema, G__20350);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, schema.core.Schema, G__20350);
  }
}], null));
plumbing.fnk.schema.InputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.either.call(null, schema.core.eq.call(null, schema.core.Keyword), schema.core.OptionalKey, schema.core.Keyword), plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.OutputSchema = plumbing.fnk.schema.Schema;
plumbing.fnk.schema.IOSchemata = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.OutputSchema, new cljs.core.Symbol(null, "output", "output", 534662484, null))], null);
plumbing.fnk.schema.GraphInputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.either.call(null, schema.core.OptionalKey, schema.core.Keyword), plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.MapOutputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.GraphIOSchemata = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.GraphInputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.MapOutputSchema, new cljs.core.Symbol(null, "output", "output", 534662484, null))], null);
plumbing.fnk.schema.assert_distinct = function assert_distinct(things) {
  var repeated_things = cljs.core.seq.call(null, cljs.core.filter.call(null, function(p1__20351_SHARP_) {
    return cljs.core.val.call(null, p1__20351_SHARP_) > 1;
  }, cljs.core.frequencies.call(null, things)));
  if (cljs.core.empty_QMARK_.call(null, repeated_things)) {
    return null;
  } else {
    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Got repeated items (expected distinct): %s", repeated_things));
  }
};
plumbing.fnk.schema.safe_get = function safe_get(m, k, key_path) {
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Expected a map at key-path %s, got type %s", key_path, schema.utils.type_of.call(null, m)));
  }
  var vec__20353 = cljs.core.find.call(null, m, k);
  var _ = cljs.core.nth.call(null, vec__20353, 0, null);
  var v = cljs.core.nth.call(null, vec__20353, 1, null);
  var p = vec__20353;
  if (cljs.core.truth_(p)) {
  } else {
    throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Key %s not found in %s", k, cljs.core.keys.call(null, m)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "missing-key", "missing-key", 1259209562), new cljs.core.Keyword(null, "key", "key", -1516042587), k, new cljs.core.Keyword(null, "map", "map", 1371690461), m], null));
  }
  return v;
};
plumbing.fnk.schema.non_map_union = function non_map_union(s1, s2) {
  if (cljs.core._EQ_.call(null, s1, s2)) {
    return s1;
  } else {
    if (cljs.core._EQ_.call(null, s1, schema.core.Any)) {
      return s2;
    } else {
      if (cljs.core._EQ_.call(null, s2, schema.core.Any)) {
        return s1;
      } else {
        return schema.core.both.call(null, s1, s2);
      }
    }
  }
};
plumbing.fnk.schema.non_map_diff = function non_map_diff(s1, s2) {
  return null;
};
plumbing.fnk.schema.map_schema_QMARK_ = function map_schema_QMARK_(m) {
  return m instanceof cljs.core.PersistentArrayMap || m instanceof cljs.core.PersistentHashMap;
};
var ufv___20359 = schema.utils.use_fn_validation;
var output_schema20354_20360 = schema.core.maybe.call(null, schema.core.pair.call(null, schema.core.Keyword, "k", schema.core.Bool, "optional?"));
var input_schema20355_20361 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "k", "k", -505765866, null))], null);
var input_checker20356_20362 = schema.core.checker.call(null, input_schema20355_20361);
var output_checker20357_20363 = schema.core.checker.call(null, output_schema20354_20360);
plumbing.fnk.schema.unwrap_schema_form_key = function(ufv___20359, output_schema20354_20360, input_schema20355_20361, input_checker20356_20362, output_checker20357_20363) {
  return function unwrap_schema_form_key(G__20358) {
    var validate__5821__auto__ = ufv___20359.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___20364 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__20358], null);
      var temp__4126__auto___20365 = input_checker20356_20362.call(null, args__5822__auto___20364);
      if (cljs.core.truth_(temp__4126__auto___20365)) {
        var error__5823__auto___20366 = temp__4126__auto___20365;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "unwrap-schema-form-key", "unwrap-schema-form-key", -300088791, null), cljs.core.pr_str.call(null, error__5823__auto___20366)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema20355_20361, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___20364, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___20366], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var k = G__20358;
      while (true) {
        if (schema.core.specific_key_QMARK_.call(null, k)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.required_key_QMARK_.call(null, k)], null);
        } else {
          if (cljs.core.sequential_QMARK_.call(null, k) && !cljs.core.vector_QMARK_.call(null, k) && cljs.core._EQ_.call(null, cljs.core.count.call(null, k), 2) && cljs.core._EQ_.call(null, cljs.core.first.call(null, k), new cljs.core.Symbol("schema.core", "optional-key", "schema.core/optional-key", -170069547, null))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, k), false], null);
          } else {
            return null;
          }
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___20367 = output_checker20357_20363.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___20367)) {
        var error__5823__auto___20368 = temp__4126__auto___20367;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "unwrap-schema-form-key", "unwrap-schema-form-key", -300088791, null), cljs.core.pr_str.call(null, error__5823__auto___20368)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema20354_20360, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___20368], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___20359, output_schema20354_20360, input_schema20355_20361, input_checker20356_20362, output_checker20357_20363);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.unwrap_schema_form_key), schema.core.make_fn_schema.call(null, output_schema20354_20360, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema20355_20361], null)));
var ufv___20374 = schema.utils.use_fn_validation;
var output_schema20369_20375 = schema.core.Any;
var input_schema20370_20376 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "s", "s", -948495851, null))], null);
var input_checker20371_20377 = schema.core.checker.call(null, input_schema20370_20376);
var output_checker20372_20378 = schema.core.checker.call(null, output_schema20369_20375);
plumbing.fnk.schema.explicit_schema_key_map = function(ufv___20374, output_schema20369_20375, input_schema20370_20376, input_checker20371_20377, output_checker20372_20378) {
  return function explicit_schema_key_map(G__20373) {
    var validate__5821__auto__ = ufv___20374.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___20379 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__20373], null);
      var temp__4126__auto___20380 = input_checker20371_20377.call(null, args__5822__auto___20379);
      if (cljs.core.truth_(temp__4126__auto___20380)) {
        var error__5823__auto___20381 = temp__4126__auto___20380;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "explicit-schema-key-map", "explicit-schema-key-map", 1668953963, null), cljs.core.pr_str.call(null, error__5823__auto___20381)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema20370_20376, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___20379, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___20381], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var s = G__20373;
      while (true) {
        new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Bool], true, false);
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.keep.call(null, plumbing.fnk.schema.unwrap_schema_form_key, cljs.core.keys.call(null, s)));
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___20382 = output_checker20372_20378.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___20382)) {
        var error__5823__auto___20383 = temp__4126__auto___20382;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "explicit-schema-key-map", "explicit-schema-key-map", 1668953963, null), cljs.core.pr_str.call(null, error__5823__auto___20383)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema20369_20375, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___20383], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___20374, output_schema20369_20375, input_schema20370_20376, input_checker20371_20377, output_checker20372_20378);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.explicit_schema_key_map), schema.core.make_fn_schema.call(null, output_schema20369_20375, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema20370_20376], null)));
var ufv___20389 = schema.utils.use_fn_validation;
var output_schema20384_20390 = schema.core.Any;
var input_schema20385_20391 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Bool], true, false), new cljs.core.Symbol(null, "s", "s", -948495851, null))], null);
var input_checker20386_20392 = schema.core.checker.call(null, input_schema20385_20391);
var output_checker20387_20393 = schema.core.checker.call(null, output_schema20384_20390);
plumbing.fnk.schema.split_schema_keys = function(ufv___20389, output_schema20384_20390, input_schema20385_20391, input_checker20386_20392, output_checker20387_20393) {
  return function split_schema_keys(G__20388) {
    var validate__5821__auto__ = ufv___20389.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___20394 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__20388], null);
      var temp__4126__auto___20395 = input_checker20386_20392.call(null, args__5822__auto___20394);
      if (cljs.core.truth_(temp__4126__auto___20395)) {
        var error__5823__auto___20396 = temp__4126__auto___20395;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema-keys", "split-schema-keys", 933671594, null), cljs.core.pr_str.call(null, error__5823__auto___20396)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema20385_20391, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___20394, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___20396], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var s = G__20388;
      while (true) {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "required", "required", -846788763, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "optional", "optional", -600484260, 
        null))], null);
        return cljs.core.mapv.call(null, cljs.core.partial.call(null, cljs.core.mapv, cljs.core.key), cljs.core.juxt.call(null, cljs.core.filter, cljs.core.remove).call(null, cljs.core.val, s));
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___20397 = output_checker20387_20393.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___20397)) {
        var error__5823__auto___20398 = temp__4126__auto___20397;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema-keys", "split-schema-keys", 933671594, null), cljs.core.pr_str.call(null, error__5823__auto___20398)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema20384_20390, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", 
        "error", -978969032), error__5823__auto___20398], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___20389, output_schema20384_20390, input_schema20385_20391, input_checker20386_20392, output_checker20387_20393);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.split_schema_keys), schema.core.make_fn_schema.call(null, output_schema20384_20390, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema20385_20391], null)));
plumbing.fnk.schema.merge_on_with = function() {
  var merge_on_with__delegate = function(key_project, key_combine, val_combine, maps) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.vals.call(null, cljs.core.reduce.call(null, function(m, p__20402) {
      var vec__20403 = p__20402;
      var k = cljs.core.nth.call(null, vec__20403, 0, null);
      var v = cljs.core.nth.call(null, vec__20403, 1, null);
      var pk = key_project.call(null, k);
      var temp__4124__auto__ = cljs.core.get.call(null, m, pk);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__20404 = temp__4124__auto__;
        var ok = cljs.core.nth.call(null, vec__20404, 0, null);
        var ov = cljs.core.nth.call(null, vec__20404, 1, null);
        return cljs.core.assoc.call(null, m, pk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_combine.call(null, ok, k), val_combine.call(null, ov, v)], null));
      } else {
        return cljs.core.assoc.call(null, m, pk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
      }
    }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.apply.call(null, cljs.core.concat, maps))));
  };
  var merge_on_with = function(key_project, key_combine, val_combine, var_args) {
    var maps = null;
    if (arguments.length > 3) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return merge_on_with__delegate.call(this, key_project, key_combine, val_combine, maps);
  };
  merge_on_with.cljs$lang$maxFixedArity = 3;
  merge_on_with.cljs$lang$applyTo = function(arglist__20405) {
    var key_project = cljs.core.first(arglist__20405);
    arglist__20405 = cljs.core.next(arglist__20405);
    var key_combine = cljs.core.first(arglist__20405);
    arglist__20405 = cljs.core.next(arglist__20405);
    var val_combine = cljs.core.first(arglist__20405);
    var maps = cljs.core.rest(arglist__20405);
    return merge_on_with__delegate(key_project, key_combine, val_combine, maps);
  };
  merge_on_with.cljs$core$IFn$_invoke$arity$variadic = merge_on_with__delegate;
  return merge_on_with;
}();
var ufv___20413 = schema.utils.use_fn_validation;
var output_schema20407_20414 = plumbing.fnk.schema.InputSchema;
var input_schema20408_20415 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "i1", "i1", -572470430, null)), schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "i2", "i2", 850408895, null))], null);
var input_checker20409_20416 = schema.core.checker.call(null, input_schema20408_20415);
var output_checker20410_20417 = schema.core.checker.call(null, output_schema20407_20414);
plumbing.fnk.schema.union_input_schemata = function(ufv___20413, output_schema20407_20414, input_schema20408_20415, input_checker20409_20416, output_checker20410_20417) {
  return function union_input_schemata(G__20411, G__20412) {
    var validate__5821__auto__ = ufv___20413.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___20418 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__20411, G__20412], null);
      var temp__4126__auto___20419 = input_checker20409_20416.call(null, args__5822__auto___20418);
      if (cljs.core.truth_(temp__4126__auto___20419)) {
        var error__5823__auto___20420 = temp__4126__auto___20419;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "union-input-schemata", "union-input-schemata", -1338811970, null), cljs.core.pr_str.call(null, error__5823__auto___20420)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema20408_20415, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___20418, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___20420], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var i1 = G__20411;
      var i2 = G__20412;
      while (true) {
        return plumbing.fnk.schema.merge_on_with.call(null, function(validate__5821__auto__, ufv___20413, output_schema20407_20414, input_schema20408_20415, input_checker20409_20416, output_checker20410_20417) {
          return function(p1__20406_SHARP_) {
            if (schema.core.specific_key_QMARK_.call(null, p1__20406_SHARP_)) {
              return schema.core.explicit_schema_key.call(null, p1__20406_SHARP_);
            } else {
              return new cljs.core.Keyword(null, "extra", "extra", 1612569067);
            }
          };
        }(validate__5821__auto__, ufv___20413, output_schema20407_20414, input_schema20408_20415, input_checker20409_20416, output_checker20410_20417), function(validate__5821__auto__, ufv___20413, output_schema20407_20414, input_schema20408_20415, input_checker20409_20416, output_checker20410_20417) {
          return function(k1, k2) {
            if (schema.core.required_key_QMARK_.call(null, k1)) {
              return k1;
            } else {
              if (schema.core.required_key_QMARK_.call(null, k2)) {
                return k2;
              } else {
                if (schema.core.optional_key_QMARK_.call(null, k1)) {
                  if (cljs.core._EQ_.call(null, k1, k2)) {
                  } else {
                    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "k1", "k1", -1701777341, null), new cljs.core.Symbol(null, "k2", "k2", -1225133949, null)))));
                  }
                  return k1;
                } else {
                  if (cljs.core._EQ_.call(null, k1, k2)) {
                    return k1;
                  } else {
                    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Only one extra schema allowed"));
                  }
                }
              }
            }
          };
        }(validate__5821__auto__, ufv___20413, output_schema20407_20414, input_schema20408_20415, input_checker20409_20416, output_checker20410_20417), function(validate__5821__auto__, ufv___20413, output_schema20407_20414, input_schema20408_20415, input_checker20409_20416, output_checker20410_20417) {
          return function(s1, s2) {
            if (plumbing.fnk.schema.map_schema_QMARK_.call(null, s1) && plumbing.fnk.schema.map_schema_QMARK_.call(null, s2)) {
              return union_input_schemata.call(null, s1, s2);
            } else {
              return plumbing.fnk.schema.non_map_union.call(null, s1, s2);
            }
          };
        }(validate__5821__auto__, ufv___20413, output_schema20407_20414, input_schema20408_20415, input_checker20409_20416, output_checker20410_20417), i1, i2);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___20421 = output_checker20410_20417.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___20421)) {
        var error__5823__auto___20422 = temp__4126__auto___20421;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "union-input-schemata", "union-input-schemata", -1338811970, null), cljs.core.pr_str.call(null, error__5823__auto___20422)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema20407_20414, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___20422], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___20413, output_schema20407_20414, input_schema20408_20415, input_checker20409_20416, output_checker20410_20417);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.union_input_schemata), schema.core.make_fn_schema.call(null, output_schema20407_20414, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema20408_20415], null)));
var ufv___20428 = schema.utils.use_fn_validation;
var output_schema20423_20429 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null);
var input_schema20424_20430 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input-schema", "input-schema", 1373647181, null))], null);
var input_checker20425_20431 = schema.core.checker.call(null, input_schema20424_20430);
var output_checker20426_20432 = schema.core.checker.call(null, output_schema20423_20429);
plumbing.fnk.schema.required_toplevel_keys = function(ufv___20428, output_schema20423_20429, input_schema20424_20430, input_checker20425_20431, output_checker20426_20432) {
  return function required_toplevel_keys(G__20427) {
    var validate__5821__auto__ = ufv___20428.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___20433 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__20427], null);
      var temp__4126__auto___20434 = input_checker20425_20431.call(null, args__5822__auto___20433);
      if (cljs.core.truth_(temp__4126__auto___20434)) {
        var error__5823__auto___20435 = temp__4126__auto___20434;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "required-toplevel-keys", "required-toplevel-keys", 1052167617, null), cljs.core.pr_str.call(null, error__5823__auto___20435)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema20424_20430, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___20433, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___20435], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var input_schema = G__20427;
      while (true) {
        return cljs.core.keep.call(null, function(validate__5821__auto__, ufv___20428, output_schema20423_20429, input_schema20424_20430, input_checker20425_20431, output_checker20426_20432) {
          return function(k) {
            if (schema.core.required_key_QMARK_.call(null, k)) {
              return schema.core.explicit_schema_key.call(null, k);
            } else {
              return null;
            }
          };
        }(validate__5821__auto__, ufv___20428, output_schema20423_20429, input_schema20424_20430, input_checker20425_20431, output_checker20426_20432), cljs.core.keys.call(null, input_schema));
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___20436 = output_checker20426_20432.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___20436)) {
        var error__5823__auto___20437 = temp__4126__auto___20436;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "required-toplevel-keys", "required-toplevel-keys", 1052167617, null), cljs.core.pr_str.call(null, error__5823__auto___20437)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema20423_20429, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___20437], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___20428, output_schema20423_20429, input_schema20424_20430, input_checker20425_20431, output_checker20426_20432);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.required_toplevel_keys), schema.core.make_fn_schema.call(null, output_schema20423_20429, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema20424_20430], null)));
plumbing.fnk.schema.guess_expr_output_schema = function guess_expr_output_schema(expr) {
  if (cljs.core.map_QMARK_.call(null, expr) && cljs.core.every_QMARK_.call(null, cljs.core.keyword_QMARK_, cljs.core.keys.call(null, expr))) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
      var iter__4278__auto__ = function iter__20446(s__20447) {
        return new cljs.core.LazySeq(null, function() {
          var s__20447__$1 = s__20447;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__20447__$1);
            if (temp__4126__auto__) {
              var s__20447__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__20447__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__20447__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__20449 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__20448 = 0;
                  while (true) {
                    if (i__20448 < size__4277__auto__) {
                      var vec__20452 = cljs.core._nth.call(null, c__4276__auto__, i__20448);
                      var k = cljs.core.nth.call(null, vec__20452, 0, null);
                      var v = cljs.core.nth.call(null, vec__20452, 1, null);
                      cljs.core.chunk_append.call(null, b__20449, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, guess_expr_output_schema.call(null, v)], null));
                      var G__20454 = i__20448 + 1;
                      i__20448 = G__20454;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20449), iter__20446.call(null, cljs.core.chunk_rest.call(null, s__20447__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20449), null);
                }
              } else {
                var vec__20453 = cljs.core.first.call(null, s__20447__$2);
                var k = cljs.core.nth.call(null, vec__20453, 0, null);
                var v = cljs.core.nth.call(null, vec__20453, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, guess_expr_output_schema.call(null, v)], null), iter__20446.call(null, cljs.core.rest.call(null, s__20447__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4278__auto__.call(null, expr);
    }());
  } else {
    return new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null);
  }
};
plumbing.fnk.schema.schema_diff = function schema_diff(input_schema, output_schema) {
  if (!plumbing.fnk.schema.map_schema_QMARK_.call(null, input_schema)) {
    return plumbing.fnk.schema.non_map_diff.call(null, input_schema, output_schema);
  } else {
    if (!plumbing.fnk.schema.map_schema_QMARK_.call(null, output_schema)) {
      return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, input_schema, output_schema, new cljs.core.Delay(function() {
        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, output_schema)), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
      }, null), null));
    } else {
      return cljs.core.not_empty.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
        var iter__4278__auto__ = function iter__20463(s__20464) {
          return new cljs.core.LazySeq(null, function() {
            var s__20464__$1 = s__20464;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__20464__$1);
              if (temp__4126__auto__) {
                var s__20464__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__20464__$2)) {
                  var c__4276__auto__ = cljs.core.chunk_first.call(null, s__20464__$2);
                  var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                  var b__20466 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                  if (function() {
                    var i__20465 = 0;
                    while (true) {
                      if (i__20465 < size__4277__auto__) {
                        var vec__20469 = cljs.core._nth.call(null, c__4276__auto__, i__20465);
                        var k = cljs.core.nth.call(null, vec__20469, 0, null);
                        var v = cljs.core.nth.call(null, vec__20469, 1, null);
                        if (schema.core.specific_key_QMARK_.call(null, k)) {
                          var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                          var raw_k = schema.core.explicit_schema_key.call(null, k);
                          var present_QMARK_ = cljs.core.contains_QMARK_.call(null, output_schema, raw_k);
                          if (required_QMARK_ || present_QMARK_) {
                            var fail = !present_QMARK_ ? new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null) : schema_diff.call(null, v, cljs.core.get.call(null, output_schema, raw_k));
                            if (cljs.core.truth_(fail)) {
                              cljs.core.chunk_append.call(null, b__20466, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, fail], null));
                              var G__20471 = i__20465 + 1;
                              i__20465 = G__20471;
                              continue;
                            } else {
                              var G__20472 = i__20465 + 1;
                              i__20465 = G__20472;
                              continue;
                            }
                          } else {
                            var G__20473 = i__20465 + 1;
                            i__20465 = G__20473;
                            continue;
                          }
                        } else {
                          var G__20474 = i__20465 + 1;
                          i__20465 = G__20474;
                          continue;
                        }
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20466), iter__20463.call(null, cljs.core.chunk_rest.call(null, s__20464__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20466), null);
                  }
                } else {
                  var vec__20470 = cljs.core.first.call(null, s__20464__$2);
                  var k = cljs.core.nth.call(null, vec__20470, 0, null);
                  var v = cljs.core.nth.call(null, vec__20470, 1, null);
                  if (schema.core.specific_key_QMARK_.call(null, k)) {
                    var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                    var raw_k = schema.core.explicit_schema_key.call(null, k);
                    var present_QMARK_ = cljs.core.contains_QMARK_.call(null, output_schema, raw_k);
                    if (required_QMARK_ || present_QMARK_) {
                      var fail = !present_QMARK_ ? new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null) : schema_diff.call(null, v, cljs.core.get.call(null, output_schema, raw_k));
                      if (cljs.core.truth_(fail)) {
                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, fail], null), iter__20463.call(null, cljs.core.rest.call(null, s__20464__$2)));
                      } else {
                        var G__20475 = cljs.core.rest.call(null, s__20464__$2);
                        s__20464__$1 = G__20475;
                        continue;
                      }
                    } else {
                      var G__20476 = cljs.core.rest.call(null, s__20464__$2);
                      s__20464__$1 = G__20476;
                      continue;
                    }
                  } else {
                    var G__20477 = cljs.core.rest.call(null, s__20464__$2);
                    s__20464__$1 = G__20477;
                    continue;
                  }
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__4278__auto__.call(null, input_schema);
      }()));
    }
  }
};
plumbing.fnk.schema.assert_satisfies_schema = function assert_satisfies_schema(input_schema, output_schema) {
  var fails = plumbing.fnk.schema.schema_diff.call(null, input_schema, output_schema);
  if (cljs.core.truth_(fails)) {
    throw cljs.core.ex_info.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(fails), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "does-not-satisfy-schema", "does-not-satisfy-schema", -1543152824), new cljs.core.Keyword(null, "failures", "failures", -912916356), fails], null));
  } else {
    return null;
  }
};
var ufv___20500 = schema.utils.use_fn_validation;
var output_schema20478_20501 = schema.core.Any;
var input_schema20479_20502 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.IOSchemata, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.MapOutputSchema, 
new cljs.core.Symbol(null, "output", "output", 534662484, null))], null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null))], null);
var input_checker20480_20503 = schema.core.checker.call(null, input_schema20479_20502);
var output_checker20481_20504 = schema.core.checker.call(null, output_schema20478_20501);
plumbing.fnk.schema.compose_schemata = function(ufv___20500, output_schema20478_20501, input_schema20479_20502, input_checker20480_20503, output_checker20481_20504) {
  return function compose_schemata(G__20482, G__20483) {
    var validate__5821__auto__ = true;
    if (validate__5821__auto__) {
      var args__5822__auto___20505 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__20482, G__20483], null);
      var temp__4126__auto___20506 = input_checker20480_20503.call(null, args__5822__auto___20505);
      if (cljs.core.truth_(temp__4126__auto___20506)) {
        var error__5823__auto___20507 = temp__4126__auto___20506;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "compose-schemata", "compose-schemata", 918607729, null), cljs.core.pr_str.call(null, error__5823__auto___20507)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema20479_20502, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___20505, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___20507], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var G__20494 = G__20482;
      var vec__20496 = G__20494;
      var i2 = cljs.core.nth.call(null, vec__20496, 0, null);
      var o2 = cljs.core.nth.call(null, vec__20496, 1, null);
      var G__20495 = G__20483;
      var vec__20497 = G__20495;
      var i1 = cljs.core.nth.call(null, vec__20497, 0, null);
      var o1 = cljs.core.nth.call(null, vec__20497, 1, null);
      var G__20494__$1 = G__20494;
      var G__20495__$1 = G__20495;
      while (true) {
        var vec__20498 = G__20494__$1;
        var i2__$1 = cljs.core.nth.call(null, vec__20498, 0, null);
        var o2__$1 = cljs.core.nth.call(null, vec__20498, 1, null);
        var vec__20499 = G__20495__$1;
        var i1__$1 = cljs.core.nth.call(null, vec__20499, 0, null);
        var o1__$1 = cljs.core.nth.call(null, vec__20499, 1, null);
        plumbing.fnk.schema.assert_satisfies_schema.call(null, cljs.core.select_keys.call(null, i2__$1, cljs.core.keys.call(null, o1__$1)), o1__$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [plumbing.fnk.schema.union_input_schemata.call(null, cljs.core.apply.call(null, cljs.core.dissoc, i2__$1, cljs.core.concat.call(null, cljs.core.keys.call(null, o1__$1), cljs.core.map.call(null, schema.core.optional_key, cljs.core.keys.call(null, o1__$1)))), i1__$1), o2__$1], null);
        break;
      }
    }();
    if (validate__5821__auto__) {
      var temp__4126__auto___20508 = output_checker20481_20504.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___20508)) {
        var error__5823__auto___20509 = temp__4126__auto___20508;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "compose-schemata", "compose-schemata", 918607729, null), cljs.core.pr_str.call(null, error__5823__auto___20509)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema20478_20501, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", 
        "error", -978969032), error__5823__auto___20509], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___20500, output_schema20478_20501, input_schema20479_20502, input_checker20480_20503, output_checker20481_20504);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.compose_schemata), schema.core.make_fn_schema.call(null, output_schema20478_20501, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema20479_20502], null)));
plumbing.fnk.schema.schema_key = function schema_key(m, k) {
  if (cljs.core.contains_QMARK_.call(null, m, k)) {
    return k;
  } else {
    if (cljs.core.contains_QMARK_.call(null, m, schema.core.optional_key.call(null, k))) {
      return schema.core.optional_key.call(null, k);
    } else {
      return null;
    }
  }
};
plumbing.fnk.schema.possibly_contains_QMARK_ = function possibly_contains_QMARK_(m, k) {
  return cljs.core.boolean$.call(null, plumbing.fnk.schema.schema_key.call(null, m, k));
};
var ufv___20588 = schema.utils.use_fn_validation;
var output_schema20510_20589 = schema.core.Any;
var input_schema20511_20590 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "s", "s", -948495851, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "ks", "ks", -754231827, null))], null);
var input_checker20512_20591 = schema.core.checker.call(null, input_schema20511_20590);
var output_checker20513_20592 = schema.core.checker.call(null, output_schema20510_20589);
plumbing.fnk.schema.split_schema = function(ufv___20588, output_schema20510_20589, input_schema20511_20590, input_checker20512_20591, output_checker20513_20592) {
  return function split_schema(G__20514, G__20515) {
    var validate__5821__auto__ = ufv___20588.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___20593 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__20514, G__20515], null);
      var temp__4126__auto___20594 = input_checker20512_20591.call(null, args__5822__auto___20593);
      if (cljs.core.truth_(temp__4126__auto___20594)) {
        var error__5823__auto___20595 = temp__4126__auto___20594;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema", "split-schema", 1859174771, null), cljs.core.pr_str.call(null, error__5823__auto___20595)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema20511_20590, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___20593, new cljs.core.Keyword(null, "error", 
        "error", -978969032), error__5823__auto___20595], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var s = G__20514;
      var ks = G__20515;
      while (true) {
        var ks__$1 = cljs.core.set.call(null, ks);
        var iter__4278__auto__ = function(ks__$1, validate__5821__auto__, ufv___20588, output_schema20510_20589, input_schema20511_20590, input_checker20512_20591, output_checker20513_20592) {
          return function iter__20552(s__20553) {
            return new cljs.core.LazySeq(null, function(ks__$1, validate__5821__auto__, ufv___20588, output_schema20510_20589, input_schema20511_20590, input_checker20512_20591, output_checker20513_20592) {
              return function() {
                var s__20553__$1 = s__20553;
                while (true) {
                  var temp__4126__auto__ = cljs.core.seq.call(null, s__20553__$1);
                  if (temp__4126__auto__) {
                    var s__20553__$2 = temp__4126__auto__;
                    if (cljs.core.chunked_seq_QMARK_.call(null, s__20553__$2)) {
                      var c__4276__auto__ = cljs.core.chunk_first.call(null, s__20553__$2);
                      var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                      var b__20555 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                      if (function() {
                        var i__20554 = 0;
                        while (true) {
                          if (i__20554 < size__4277__auto__) {
                            var in_QMARK_ = cljs.core._nth.call(null, c__4276__auto__, i__20554);
                            cljs.core.chunk_append.call(null, b__20555, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                              var iter__4278__auto__ = function(i__20554, in_QMARK_, c__4276__auto__, size__4277__auto__, b__20555, s__20553__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___20588, output_schema20510_20589, input_schema20511_20590, input_checker20512_20591, output_checker20513_20592) {
                                return function iter__20572(s__20573) {
                                  return new cljs.core.LazySeq(null, function(i__20554, in_QMARK_, c__4276__auto__, size__4277__auto__, b__20555, s__20553__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___20588, output_schema20510_20589, input_schema20511_20590, input_checker20512_20591, output_checker20513_20592) {
                                    return function() {
                                      var s__20573__$1 = s__20573;
                                      while (true) {
                                        var temp__4126__auto____$1 = cljs.core.seq.call(null, s__20573__$1);
                                        if (temp__4126__auto____$1) {
                                          var s__20573__$2 = temp__4126__auto____$1;
                                          if (cljs.core.chunked_seq_QMARK_.call(null, s__20573__$2)) {
                                            var c__4276__auto____$1 = cljs.core.chunk_first.call(null, s__20573__$2);
                                            var size__4277__auto____$1 = cljs.core.count.call(null, c__4276__auto____$1);
                                            var b__20575 = cljs.core.chunk_buffer.call(null, size__4277__auto____$1);
                                            if (function() {
                                              var i__20574 = 0;
                                              while (true) {
                                                if (i__20574 < size__4277__auto____$1) {
                                                  var vec__20578 = cljs.core._nth.call(null, c__4276__auto____$1, i__20574);
                                                  var k = cljs.core.nth.call(null, vec__20578, 0, null);
                                                  var v = cljs.core.nth.call(null, vec__20578, 1, null);
                                                  if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                                    cljs.core.chunk_append.call(null, b__20575, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                                                    var G__20596 = i__20574 + 1;
                                                    i__20574 = G__20596;
                                                    continue;
                                                  } else {
                                                    var G__20597 = i__20574 + 1;
                                                    i__20574 = G__20597;
                                                    continue;
                                                  }
                                                } else {
                                                  return true;
                                                }
                                                break;
                                              }
                                            }()) {
                                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20575), iter__20572.call(null, cljs.core.chunk_rest.call(null, s__20573__$2)));
                                            } else {
                                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20575), null);
                                            }
                                          } else {
                                            var vec__20579 = cljs.core.first.call(null, s__20573__$2);
                                            var k = cljs.core.nth.call(null, vec__20579, 0, null);
                                            var v = cljs.core.nth.call(null, vec__20579, 1, null);
                                            if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__20572.call(null, cljs.core.rest.call(null, s__20573__$2)));
                                            } else {
                                              var G__20598 = cljs.core.rest.call(null, s__20573__$2);
                                              s__20573__$1 = G__20598;
                                              continue;
                                            }
                                          }
                                        } else {
                                          return null;
                                        }
                                        break;
                                      }
                                    };
                                  }(i__20554, in_QMARK_, c__4276__auto__, size__4277__auto__, b__20555, s__20553__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___20588, output_schema20510_20589, input_schema20511_20590, input_checker20512_20591, output_checker20513_20592), null, null);
                                };
                              }(i__20554, in_QMARK_, c__4276__auto__, size__4277__auto__, b__20555, s__20553__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___20588, output_schema20510_20589, input_schema20511_20590, input_checker20512_20591, output_checker20513_20592);
                              return iter__4278__auto__.call(null, s);
                            }()));
                            var G__20599 = i__20554 + 1;
                            i__20554 = G__20599;
                            continue;
                          } else {
                            return true;
                          }
                          break;
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20555), iter__20552.call(null, cljs.core.chunk_rest.call(null, s__20553__$2)));
                      } else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20555), null);
                      }
                    } else {
                      var in_QMARK_ = cljs.core.first.call(null, s__20553__$2);
                      return cljs.core.cons.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4278__auto__ = function(in_QMARK_, s__20553__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___20588, output_schema20510_20589, input_schema20511_20590, input_checker20512_20591, output_checker20513_20592) {
                          return function iter__20580(s__20581) {
                            return new cljs.core.LazySeq(null, function(in_QMARK_, s__20553__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___20588, output_schema20510_20589, input_schema20511_20590, input_checker20512_20591, output_checker20513_20592) {
                              return function() {
                                var s__20581__$1 = s__20581;
                                while (true) {
                                  var temp__4126__auto____$1 = cljs.core.seq.call(null, s__20581__$1);
                                  if (temp__4126__auto____$1) {
                                    var s__20581__$2 = temp__4126__auto____$1;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__20581__$2)) {
                                      var c__4276__auto__ = cljs.core.chunk_first.call(null, s__20581__$2);
                                      var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                      var b__20583 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                      if (function() {
                                        var i__20582 = 0;
                                        while (true) {
                                          if (i__20582 < size__4277__auto__) {
                                            var vec__20586 = cljs.core._nth.call(null, c__4276__auto__, i__20582);
                                            var k = cljs.core.nth.call(null, vec__20586, 0, null);
                                            var v = cljs.core.nth.call(null, vec__20586, 1, null);
                                            if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                              cljs.core.chunk_append.call(null, b__20583, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                                              var G__20600 = i__20582 + 1;
                                              i__20582 = G__20600;
                                              continue;
                                            } else {
                                              var G__20601 = i__20582 + 1;
                                              i__20582 = G__20601;
                                              continue;
                                            }
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20583), iter__20580.call(null, cljs.core.chunk_rest.call(null, s__20581__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20583), null);
                                      }
                                    } else {
                                      var vec__20587 = cljs.core.first.call(null, s__20581__$2);
                                      var k = cljs.core.nth.call(null, vec__20587, 0, null);
                                      var v = cljs.core.nth.call(null, vec__20587, 1, null);
                                      if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__20580.call(null, cljs.core.rest.call(null, s__20581__$2)));
                                      } else {
                                        var G__20602 = cljs.core.rest.call(null, s__20581__$2);
                                        s__20581__$1 = G__20602;
                                        continue;
                                      }
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(in_QMARK_, s__20553__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___20588, output_schema20510_20589, input_schema20511_20590, input_checker20512_20591, output_checker20513_20592), null, null);
                          };
                        }(in_QMARK_, s__20553__$2, temp__4126__auto__, ks__$1, validate__5821__auto__, ufv___20588, output_schema20510_20589, input_schema20511_20590, input_checker20512_20591, output_checker20513_20592);
                        return iter__4278__auto__.call(null, s);
                      }()), iter__20552.call(null, cljs.core.rest.call(null, s__20553__$2)));
                    }
                  } else {
                    return null;
                  }
                  break;
                }
              };
            }(ks__$1, validate__5821__auto__, ufv___20588, output_schema20510_20589, input_schema20511_20590, input_checker20512_20591, output_checker20513_20592), null, null);
          };
        }(ks__$1, validate__5821__auto__, ufv___20588, output_schema20510_20589, input_schema20511_20590, input_checker20512_20591, output_checker20513_20592);
        return iter__4278__auto__.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, false], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___20603 = output_checker20513_20592.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___20603)) {
        var error__5823__auto___20604 = temp__4126__auto___20603;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema", "split-schema", 1859174771, null), cljs.core.pr_str.call(null, error__5823__auto___20604)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema20510_20589, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___20604], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___20588, output_schema20510_20589, input_schema20511_20590, input_checker20512_20591, output_checker20513_20592);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.split_schema), schema.core.make_fn_schema.call(null, output_schema20510_20589, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema20511_20590], null)));
var ufv___20635 = schema.utils.use_fn_validation;
var output_schema20605_20636 = plumbing.fnk.schema.GraphIOSchemata;
var input_schema20606_20637 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.GraphIOSchemata, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Keyword, "key"), schema.core.one.call(null, plumbing.fnk.schema.IOSchemata, "inner-schemas")], null), new cljs.core.Symbol(null, 
"arg1", "arg1", -1702536411, null))], null);
var input_checker20607_20638 = schema.core.checker.call(null, input_schema20606_20637);
var output_checker20608_20639 = schema.core.checker.call(null, output_schema20605_20636);
plumbing.fnk.schema.sequence_schemata = function(ufv___20635, output_schema20605_20636, input_schema20606_20637, input_checker20607_20638, output_checker20608_20639) {
  return function sequence_schemata(G__20609, G__20610) {
    var validate__5821__auto__ = ufv___20635.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___20640 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__20609, G__20610], null);
      var temp__4126__auto___20641 = input_checker20607_20638.call(null, args__5822__auto___20640);
      if (cljs.core.truth_(temp__4126__auto___20641)) {
        var error__5823__auto___20642 = temp__4126__auto___20641;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "sequence-schemata", "sequence-schemata", -2061205313, null), cljs.core.pr_str.call(null, error__5823__auto___20642)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema20606_20637, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___20640, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___20642], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var G__20626 = G__20609;
      var vec__20628 = G__20626;
      var i1 = cljs.core.nth.call(null, vec__20628, 0, null);
      var o1 = cljs.core.nth.call(null, vec__20628, 1, null);
      var G__20627 = G__20610;
      var vec__20629 = G__20627;
      var k = cljs.core.nth.call(null, vec__20629, 0, null);
      var vec__20630 = cljs.core.nth.call(null, vec__20629, 1, null);
      var i2 = cljs.core.nth.call(null, vec__20630, 0, null);
      var o2 = cljs.core.nth.call(null, vec__20630, 1, null);
      var G__20626__$1 = G__20626;
      var G__20627__$1 = G__20627;
      while (true) {
        var vec__20631 = G__20626__$1;
        var i1__$1 = cljs.core.nth.call(null, vec__20631, 0, null);
        var o1__$1 = cljs.core.nth.call(null, vec__20631, 1, null);
        var vec__20632 = G__20627__$1;
        var k__$1 = cljs.core.nth.call(null, vec__20632, 0, null);
        var vec__20633 = cljs.core.nth.call(null, vec__20632, 1, null);
        var i2__$1 = cljs.core.nth.call(null, vec__20633, 0, null);
        var o2__$1 = cljs.core.nth.call(null, vec__20633, 1, null);
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, i1__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Duplicate key output (possibly due to a misordered graph) %s for input %s from input %s", k__$1, schema.core.explain.call(null, i2__$1), schema.core.explain.call(null, i1__$1)));
        }
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, i2__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Node outputs a key %s in its inputs %s", k__$1, schema.core.explain.call(null, i2__$1)));
        }
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, o1__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Node outputs a duplicate key %s given inputs %s", k__$1, schema.core.explain.call(null, i1__$1)));
        }
        var vec__20634 = plumbing.fnk.schema.split_schema.call(null, i2__$1, cljs.core.keys.call(null, o1__$1));
        var used = cljs.core.nth.call(null, vec__20634, 0, null);
        var unused = cljs.core.nth.call(null, vec__20634, 1, null);
        plumbing.fnk.schema.assert_satisfies_schema.call(null, used, o1__$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [plumbing.fnk.schema.union_input_schemata.call(null, unused, i1__$1), cljs.core.assoc.call(null, o1__$1, k__$1, o2__$1)], null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___20643 = output_checker20608_20639.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___20643)) {
        var error__5823__auto___20644 = temp__4126__auto___20643;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "sequence-schemata", "sequence-schemata", -2061205313, null), cljs.core.pr_str.call(null, error__5823__auto___20644)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema20605_20636, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__5823__auto___20644], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___20635, output_schema20605_20636, input_schema20606_20637, input_checker20607_20638, output_checker20608_20639);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.sequence_schemata), schema.core.make_fn_schema.call(null, output_schema20605_20636, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema20606_20637], null)));
goog.provide("plumbing.core");
goog.require("cljs.core");
goog.require("plumbing.fnk.schema");
goog.require("plumbing.fnk.schema");
goog.require("schema.utils");
goog.require("schema.utils");
plumbing.core._PLUS_none_PLUS_ = new cljs.core.Keyword("plumbing.core", "missing", "plumbing.core/missing", 1721767298);
plumbing.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
  };
  var update__4 = function(m, k, f, x1) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x1));
  };
  var update__5 = function(m, k, f, x1, x2) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x1, x2));
  };
  var update__6 = function() {
    var G__20936__delegate = function(m, k, f, x1, x2, xs) {
      return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), x1, x2, xs));
    };
    var G__20936 = function(m, k, f, x1, x2, var_args) {
      var xs = null;
      if (arguments.length > 5) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__20936__delegate.call(this, m, k, f, x1, x2, xs);
    };
    G__20936.cljs$lang$maxFixedArity = 5;
    G__20936.cljs$lang$applyTo = function(arglist__20937) {
      var m = cljs.core.first(arglist__20937);
      arglist__20937 = cljs.core.next(arglist__20937);
      var k = cljs.core.first(arglist__20937);
      arglist__20937 = cljs.core.next(arglist__20937);
      var f = cljs.core.first(arglist__20937);
      arglist__20937 = cljs.core.next(arglist__20937);
      var x1 = cljs.core.first(arglist__20937);
      arglist__20937 = cljs.core.next(arglist__20937);
      var x2 = cljs.core.first(arglist__20937);
      var xs = cljs.core.rest(arglist__20937);
      return G__20936__delegate(m, k, f, x1, x2, xs);
    };
    G__20936.cljs$core$IFn$_invoke$arity$variadic = G__20936__delegate;
    return G__20936;
  }();
  update = function(m, k, f, x1, x2, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x1);
      case 5:
        return update__5.call(this, m, k, f, x1, x2);
      default:
        return update__6.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x1, x2, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 5;
  update.cljs$lang$applyTo = update__6.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$variadic = update__6.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
plumbing.core.map_vals = function map_vals(f, m) {
  if (cljs.core.sorted_QMARK_.call(null, m)) {
    return cljs.core.reduce_kv.call(null, function(out_m, k, v) {
      return cljs.core.assoc.call(null, out_m, k, f.call(null, v));
    }, cljs.core.sorted_map.call(null), m);
  } else {
    if (cljs.core.map_QMARK_.call(null, m)) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(out_m, k, v) {
        return cljs.core.assoc_BANG_.call(null, out_m, k, f.call(null, v));
      }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
    } else {
      var m_atom__7744__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
      var seq__20946_20952 = cljs.core.seq.call(null, m);
      var chunk__20947_20953 = null;
      var count__20948_20954 = 0;
      var i__20949_20955 = 0;
      while (true) {
        if (i__20949_20955 < count__20948_20954) {
          var vec__20950_20956 = cljs.core._nth.call(null, chunk__20947_20953, i__20949_20955);
          var k_20957 = cljs.core.nth.call(null, vec__20950_20956, 0, null);
          var v_20958 = cljs.core.nth.call(null, vec__20950_20956, 1, null);
          var m20945_20959 = cljs.core.deref.call(null, m_atom__7744__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m20945_20959, k_20957, f.call(null, v_20958)));
          var G__20960 = seq__20946_20952;
          var G__20961 = chunk__20947_20953;
          var G__20962 = count__20948_20954;
          var G__20963 = i__20949_20955 + 1;
          seq__20946_20952 = G__20960;
          chunk__20947_20953 = G__20961;
          count__20948_20954 = G__20962;
          i__20949_20955 = G__20963;
          continue;
        } else {
          var temp__4126__auto___20964 = cljs.core.seq.call(null, seq__20946_20952);
          if (temp__4126__auto___20964) {
            var seq__20946_20965__$1 = temp__4126__auto___20964;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__20946_20965__$1)) {
              var c__4309__auto___20966 = cljs.core.chunk_first.call(null, seq__20946_20965__$1);
              var G__20967 = cljs.core.chunk_rest.call(null, seq__20946_20965__$1);
              var G__20968 = c__4309__auto___20966;
              var G__20969 = cljs.core.count.call(null, c__4309__auto___20966);
              var G__20970 = 0;
              seq__20946_20952 = G__20967;
              chunk__20947_20953 = G__20968;
              count__20948_20954 = G__20969;
              i__20949_20955 = G__20970;
              continue;
            } else {
              var vec__20951_20971 = cljs.core.first.call(null, seq__20946_20965__$1);
              var k_20972 = cljs.core.nth.call(null, vec__20951_20971, 0, null);
              var v_20973 = cljs.core.nth.call(null, vec__20951_20971, 1, null);
              var m20945_20974 = cljs.core.deref.call(null, m_atom__7744__auto__);
              cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m20945_20974, k_20972, f.call(null, v_20973)));
              var G__20975 = cljs.core.next.call(null, seq__20946_20965__$1);
              var G__20976 = null;
              var G__20977 = 0;
              var G__20978 = 0;
              seq__20946_20952 = G__20975;
              chunk__20947_20953 = G__20976;
              count__20948_20954 = G__20977;
              i__20949_20955 = G__20978;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7744__auto__));
    }
  }
};
plumbing.core.map_keys = function map_keys(f, m) {
  if (cljs.core.map_QMARK_.call(null, m)) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(out_m, k, v) {
      return cljs.core.assoc_BANG_.call(null, out_m, f.call(null, k), v);
    }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
  } else {
    var m_atom__7744__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
    var seq__20987_20993 = cljs.core.seq.call(null, m);
    var chunk__20988_20994 = null;
    var count__20989_20995 = 0;
    var i__20990_20996 = 0;
    while (true) {
      if (i__20990_20996 < count__20989_20995) {
        var vec__20991_20997 = cljs.core._nth.call(null, chunk__20988_20994, i__20990_20996);
        var k_20998 = cljs.core.nth.call(null, vec__20991_20997, 0, null);
        var v_20999 = cljs.core.nth.call(null, vec__20991_20997, 1, null);
        var m20986_21000 = cljs.core.deref.call(null, m_atom__7744__auto__);
        cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m20986_21000, f.call(null, k_20998), v_20999));
        var G__21001 = seq__20987_20993;
        var G__21002 = chunk__20988_20994;
        var G__21003 = count__20989_20995;
        var G__21004 = i__20990_20996 + 1;
        seq__20987_20993 = G__21001;
        chunk__20988_20994 = G__21002;
        count__20989_20995 = G__21003;
        i__20990_20996 = G__21004;
        continue;
      } else {
        var temp__4126__auto___21005 = cljs.core.seq.call(null, seq__20987_20993);
        if (temp__4126__auto___21005) {
          var seq__20987_21006__$1 = temp__4126__auto___21005;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20987_21006__$1)) {
            var c__4309__auto___21007 = cljs.core.chunk_first.call(null, seq__20987_21006__$1);
            var G__21008 = cljs.core.chunk_rest.call(null, seq__20987_21006__$1);
            var G__21009 = c__4309__auto___21007;
            var G__21010 = cljs.core.count.call(null, c__4309__auto___21007);
            var G__21011 = 0;
            seq__20987_20993 = G__21008;
            chunk__20988_20994 = G__21009;
            count__20989_20995 = G__21010;
            i__20990_20996 = G__21011;
            continue;
          } else {
            var vec__20992_21012 = cljs.core.first.call(null, seq__20987_21006__$1);
            var k_21013 = cljs.core.nth.call(null, vec__20992_21012, 0, null);
            var v_21014 = cljs.core.nth.call(null, vec__20992_21012, 1, null);
            var m20986_21015 = cljs.core.deref.call(null, m_atom__7744__auto__);
            cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m20986_21015, f.call(null, k_21013), v_21014));
            var G__21016 = cljs.core.next.call(null, seq__20987_21006__$1);
            var G__21017 = null;
            var G__21018 = 0;
            var G__21019 = 0;
            seq__20987_20993 = G__21016;
            chunk__20988_20994 = G__21017;
            count__20989_20995 = G__21018;
            i__20990_20996 = G__21019;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7744__auto__));
  }
};
plumbing.core.map_from_keys = function map_from_keys(f, ks) {
  var m_atom__7744__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
  var seq__21026_21030 = cljs.core.seq.call(null, ks);
  var chunk__21027_21031 = null;
  var count__21028_21032 = 0;
  var i__21029_21033 = 0;
  while (true) {
    if (i__21029_21033 < count__21028_21032) {
      var k_21034 = cljs.core._nth.call(null, chunk__21027_21031, i__21029_21033);
      var m21025_21035 = cljs.core.deref.call(null, m_atom__7744__auto__);
      cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m21025_21035, k_21034, f.call(null, k_21034)));
      var G__21036 = seq__21026_21030;
      var G__21037 = chunk__21027_21031;
      var G__21038 = count__21028_21032;
      var G__21039 = i__21029_21033 + 1;
      seq__21026_21030 = G__21036;
      chunk__21027_21031 = G__21037;
      count__21028_21032 = G__21038;
      i__21029_21033 = G__21039;
      continue;
    } else {
      var temp__4126__auto___21040 = cljs.core.seq.call(null, seq__21026_21030);
      if (temp__4126__auto___21040) {
        var seq__21026_21041__$1 = temp__4126__auto___21040;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__21026_21041__$1)) {
          var c__4309__auto___21042 = cljs.core.chunk_first.call(null, seq__21026_21041__$1);
          var G__21043 = cljs.core.chunk_rest.call(null, seq__21026_21041__$1);
          var G__21044 = c__4309__auto___21042;
          var G__21045 = cljs.core.count.call(null, c__4309__auto___21042);
          var G__21046 = 0;
          seq__21026_21030 = G__21043;
          chunk__21027_21031 = G__21044;
          count__21028_21032 = G__21045;
          i__21029_21033 = G__21046;
          continue;
        } else {
          var k_21047 = cljs.core.first.call(null, seq__21026_21041__$1);
          var m21025_21048 = cljs.core.deref.call(null, m_atom__7744__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m21025_21048, k_21047, f.call(null, k_21047)));
          var G__21049 = cljs.core.next.call(null, seq__21026_21041__$1);
          var G__21050 = null;
          var G__21051 = 0;
          var G__21052 = 0;
          seq__21026_21030 = G__21049;
          chunk__21027_21031 = G__21050;
          count__21028_21032 = G__21051;
          i__21029_21033 = G__21052;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7744__auto__));
};
plumbing.core.map_from_vals = function map_from_vals(f, vs) {
  var m_atom__7744__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
  var seq__21059_21063 = cljs.core.seq.call(null, vs);
  var chunk__21060_21064 = null;
  var count__21061_21065 = 0;
  var i__21062_21066 = 0;
  while (true) {
    if (i__21062_21066 < count__21061_21065) {
      var v_21067 = cljs.core._nth.call(null, chunk__21060_21064, i__21062_21066);
      var m21058_21068 = cljs.core.deref.call(null, m_atom__7744__auto__);
      cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m21058_21068, f.call(null, v_21067), v_21067));
      var G__21069 = seq__21059_21063;
      var G__21070 = chunk__21060_21064;
      var G__21071 = count__21061_21065;
      var G__21072 = i__21062_21066 + 1;
      seq__21059_21063 = G__21069;
      chunk__21060_21064 = G__21070;
      count__21061_21065 = G__21071;
      i__21062_21066 = G__21072;
      continue;
    } else {
      var temp__4126__auto___21073 = cljs.core.seq.call(null, seq__21059_21063);
      if (temp__4126__auto___21073) {
        var seq__21059_21074__$1 = temp__4126__auto___21073;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__21059_21074__$1)) {
          var c__4309__auto___21075 = cljs.core.chunk_first.call(null, seq__21059_21074__$1);
          var G__21076 = cljs.core.chunk_rest.call(null, seq__21059_21074__$1);
          var G__21077 = c__4309__auto___21075;
          var G__21078 = cljs.core.count.call(null, c__4309__auto___21075);
          var G__21079 = 0;
          seq__21059_21063 = G__21076;
          chunk__21060_21064 = G__21077;
          count__21061_21065 = G__21078;
          i__21062_21066 = G__21079;
          continue;
        } else {
          var v_21080 = cljs.core.first.call(null, seq__21059_21074__$1);
          var m21058_21081 = cljs.core.deref.call(null, m_atom__7744__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m21058_21081, f.call(null, v_21080), v_21080));
          var G__21082 = cljs.core.next.call(null, seq__21059_21074__$1);
          var G__21083 = null;
          var G__21084 = 0;
          var G__21085 = 0;
          seq__21059_21063 = G__21082;
          chunk__21060_21064 = G__21083;
          count__21061_21065 = G__21084;
          i__21062_21066 = G__21085;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7744__auto__));
};
plumbing.core.dissoc_in = function dissoc_in(m, p__21086) {
  var vec__21088 = p__21086;
  var k = cljs.core.nth.call(null, vec__21088, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__21088, 1);
  if (cljs.core.truth_(m)) {
    var temp__4124__auto__ = function() {
      var and__3541__auto__ = ks;
      if (and__3541__auto__) {
        return dissoc_in.call(null, m.call(null, k), ks);
      } else {
        return and__3541__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var res = temp__4124__auto__;
      return cljs.core.assoc.call(null, m, k, res);
    } else {
      var res = cljs.core.dissoc.call(null, m, k);
      if (cljs.core.empty_QMARK_.call(null, res)) {
        return null;
      } else {
        return res;
      }
    }
  } else {
    return null;
  }
};
plumbing.core.keywordize_map = function keywordize_map(x) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    var m_atom__7744__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
    var seq__21097_21103 = cljs.core.seq.call(null, x);
    var chunk__21098_21104 = null;
    var count__21099_21105 = 0;
    var i__21100_21106 = 0;
    while (true) {
      if (i__21100_21106 < count__21099_21105) {
        var vec__21101_21107 = cljs.core._nth.call(null, chunk__21098_21104, i__21100_21106);
        var k_21108 = cljs.core.nth.call(null, vec__21101_21107, 0, null);
        var v_21109 = cljs.core.nth.call(null, vec__21101_21107, 1, null);
        var m21096_21110 = cljs.core.deref.call(null, m_atom__7744__auto__);
        cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m21096_21110, typeof k_21108 === "string" ? cljs.core.keyword.call(null, k_21108) : k_21108, keywordize_map.call(null, v_21109)));
        var G__21111 = seq__21097_21103;
        var G__21112 = chunk__21098_21104;
        var G__21113 = count__21099_21105;
        var G__21114 = i__21100_21106 + 1;
        seq__21097_21103 = G__21111;
        chunk__21098_21104 = G__21112;
        count__21099_21105 = G__21113;
        i__21100_21106 = G__21114;
        continue;
      } else {
        var temp__4126__auto___21115 = cljs.core.seq.call(null, seq__21097_21103);
        if (temp__4126__auto___21115) {
          var seq__21097_21116__$1 = temp__4126__auto___21115;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__21097_21116__$1)) {
            var c__4309__auto___21117 = cljs.core.chunk_first.call(null, seq__21097_21116__$1);
            var G__21118 = cljs.core.chunk_rest.call(null, seq__21097_21116__$1);
            var G__21119 = c__4309__auto___21117;
            var G__21120 = cljs.core.count.call(null, c__4309__auto___21117);
            var G__21121 = 0;
            seq__21097_21103 = G__21118;
            chunk__21098_21104 = G__21119;
            count__21099_21105 = G__21120;
            i__21100_21106 = G__21121;
            continue;
          } else {
            var vec__21102_21122 = cljs.core.first.call(null, seq__21097_21116__$1);
            var k_21123 = cljs.core.nth.call(null, vec__21102_21122, 0, null);
            var v_21124 = cljs.core.nth.call(null, vec__21102_21122, 1, null);
            var m21096_21125 = cljs.core.deref.call(null, m_atom__7744__auto__);
            cljs.core.reset_BANG_.call(null, m_atom__7744__auto__, cljs.core.assoc_BANG_.call(null, m21096_21125, typeof k_21123 === "string" ? cljs.core.keyword.call(null, k_21123) : k_21123, keywordize_map.call(null, v_21124)));
            var G__21126 = cljs.core.next.call(null, seq__21097_21116__$1);
            var G__21127 = null;
            var G__21128 = 0;
            var G__21129 = 0;
            seq__21097_21103 = G__21126;
            chunk__21098_21104 = G__21127;
            count__21099_21105 = G__21128;
            i__21100_21106 = G__21129;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__7744__auto__));
  } else {
    if (cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.map.call(null, keywordize_map, x);
    } else {
      if (cljs.core.vector_QMARK_.call(null, x)) {
        return cljs.core.mapv.call(null, keywordize_map, x);
      } else {
        return x;
      }
    }
  }
};
plumbing.core.safe_get = function safe_get(m, k) {
  var temp__4124__auto__ = cljs.core.find.call(null, m, k);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var pair__7813__auto__ = temp__4124__auto__;
    return cljs.core.val.call(null, pair__7813__auto__);
  } else {
    var e = schema.utils.format_STAR_.call(null, "Key %s not found in %s", k, cljs.core.mapv.call(null, cljs.core.key, m));
    throw new Error(e);
  }
};
plumbing.core.safe_get_in = function safe_get_in(m, ks) {
  while (true) {
    if (cljs.core.seq.call(null, ks)) {
      var G__21130 = plumbing.core.safe_get.call(null, m, cljs.core.first.call(null, ks));
      var G__21131 = cljs.core.next.call(null, ks);
      m = G__21130;
      ks = G__21131;
      continue;
    } else {
      return m;
    }
    break;
  }
};
plumbing.core.assoc_when = function() {
  var assoc_when__delegate = function(m, kvs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null))))));
    }
    return cljs.core.into.call(null, function() {
      var or__3553__auto__ = m;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), function() {
      var iter__4278__auto__ = function iter__21140(s__21141) {
        return new cljs.core.LazySeq(null, function() {
          var s__21141__$1 = s__21141;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__21141__$1);
            if (temp__4126__auto__) {
              var s__21141__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__21141__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__21141__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__21143 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__21142 = 0;
                  while (true) {
                    if (i__21142 < size__4277__auto__) {
                      var vec__21146 = cljs.core._nth.call(null, c__4276__auto__, i__21142);
                      var k = cljs.core.nth.call(null, vec__21146, 0, null);
                      var v = cljs.core.nth.call(null, vec__21146, 1, null);
                      if (cljs.core.truth_(v)) {
                        cljs.core.chunk_append.call(null, b__21143, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                        var G__21148 = i__21142 + 1;
                        i__21142 = G__21148;
                        continue;
                      } else {
                        var G__21149 = i__21142 + 1;
                        i__21142 = G__21149;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21143), iter__21140.call(null, cljs.core.chunk_rest.call(null, s__21141__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21143), null);
                }
              } else {
                var vec__21147 = cljs.core.first.call(null, s__21141__$2);
                var k = cljs.core.nth.call(null, vec__21147, 0, null);
                var v = cljs.core.nth.call(null, vec__21147, 1, null);
                if (cljs.core.truth_(v)) {
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__21140.call(null, cljs.core.rest.call(null, s__21141__$2)));
                } else {
                  var G__21150 = cljs.core.rest.call(null, s__21141__$2);
                  s__21141__$1 = G__21150;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4278__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
    }());
  };
  var assoc_when = function(m, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return assoc_when__delegate.call(this, m, kvs);
  };
  assoc_when.cljs$lang$maxFixedArity = 1;
  assoc_when.cljs$lang$applyTo = function(arglist__21151) {
    var m = cljs.core.first(arglist__21151);
    var kvs = cljs.core.rest(arglist__21151);
    return assoc_when__delegate(m, kvs);
  };
  assoc_when.cljs$core$IFn$_invoke$arity$variadic = assoc_when__delegate;
  return assoc_when;
}();
plumbing.core.update_in_when = function() {
  var update_in_when__delegate = function(m, key_seq, f, args) {
    var found = cljs.core.get_in.call(null, m, key_seq, plumbing.core._PLUS_none_PLUS_);
    if (!(plumbing.core._PLUS_none_PLUS_ === found)) {
      return cljs.core.assoc_in.call(null, m, key_seq, cljs.core.apply.call(null, f, found, args));
    } else {
      return m;
    }
  };
  var update_in_when = function(m, key_seq, f, var_args) {
    var args = null;
    if (arguments.length > 3) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return update_in_when__delegate.call(this, m, key_seq, f, args);
  };
  update_in_when.cljs$lang$maxFixedArity = 3;
  update_in_when.cljs$lang$applyTo = function(arglist__21152) {
    var m = cljs.core.first(arglist__21152);
    arglist__21152 = cljs.core.next(arglist__21152);
    var key_seq = cljs.core.first(arglist__21152);
    arglist__21152 = cljs.core.next(arglist__21152);
    var f = cljs.core.first(arglist__21152);
    var args = cljs.core.rest(arglist__21152);
    return update_in_when__delegate(m, key_seq, f, args);
  };
  update_in_when.cljs$core$IFn$_invoke$arity$variadic = update_in_when__delegate;
  return update_in_when;
}();
plumbing.core.grouped_map = function grouped_map(key_fn, map_fn, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = key_fn.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), map_fn.call(null, x)));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
plumbing.core.aconcat = function aconcat(s) {
  return cljs.core.concat.call(null, new cljs.core.LazySeq(null, function() {
    return cljs.core.first.call(null, s);
  }, null, null), new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.next.call(null, s);
    if (temp__4126__auto__) {
      var n = temp__4126__auto__;
      return aconcat.call(null, n);
    } else {
      return null;
    }
  }, null, null));
};
plumbing.core.unchunk = function unchunk(s) {
  if (cljs.core.seq.call(null, s)) {
    return cljs.core.cons.call(null, cljs.core.first.call(null, s), new cljs.core.LazySeq(null, function() {
      return unchunk.call(null, cljs.core.rest.call(null, s));
    }, null, null));
  } else {
    return null;
  }
};
plumbing.core.sum = function() {
  var sum = null;
  var sum__1 = function(xs) {
    return cljs.core.reduce.call(null, cljs.core._PLUS_, xs);
  };
  var sum__2 = function(f, xs) {
    return cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, f, xs));
  };
  sum = function(f, xs) {
    switch(arguments.length) {
      case 1:
        return sum__1.call(this, f);
      case 2:
        return sum__2.call(this, f, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sum.cljs$core$IFn$_invoke$arity$1 = sum__1;
  sum.cljs$core$IFn$_invoke$arity$2 = sum__2;
  return sum;
}();
plumbing.core.singleton = function singleton(xs) {
  var temp__4126__auto__ = cljs.core.seq.call(null, xs);
  if (temp__4126__auto__) {
    var xs__$1 = temp__4126__auto__;
    if (cljs.core.next.call(null, xs__$1)) {
      return null;
    } else {
      return cljs.core.first.call(null, xs__$1);
    }
  } else {
    return null;
  }
};
plumbing.core.indexed = function indexed(s) {
  return cljs.core.map_indexed.call(null, cljs.core.vector, s);
};
plumbing.core.positions = function positions(f, s) {
  return cljs.core.keep_indexed.call(null, function(i, x) {
    if (cljs.core.truth_(f.call(null, x))) {
      return i;
    } else {
      return null;
    }
  }, s);
};
plumbing.core.distinct_by = function distinct_by(f, xs) {
  var s = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
  var iter__4278__auto__ = function(s) {
    return function iter__21157(s__21158) {
      return new cljs.core.LazySeq(null, function(s) {
        return function() {
          var s__21158__$1 = s__21158;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__21158__$1);
            if (temp__4126__auto__) {
              var s__21158__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__21158__$2)) {
                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__21158__$2);
                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                var b__21160 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                if (function() {
                  var i__21159 = 0;
                  while (true) {
                    if (i__21159 < size__4277__auto__) {
                      var x = cljs.core._nth.call(null, c__4276__auto__, i__21159);
                      var id = f.call(null, x);
                      if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, s), id)) {
                        cljs.core.chunk_append.call(null, b__21160, function() {
                          cljs.core.swap_BANG_.call(null, s, cljs.core.conj, id);
                          return x;
                        }());
                        var G__21161 = i__21159 + 1;
                        i__21159 = G__21161;
                        continue;
                      } else {
                        var G__21162 = i__21159 + 1;
                        i__21159 = G__21162;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21160), iter__21157.call(null, cljs.core.chunk_rest.call(null, s__21158__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21160), null);
                }
              } else {
                var x = cljs.core.first.call(null, s__21158__$2);
                var id = f.call(null, x);
                if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, s), id)) {
                  return cljs.core.cons.call(null, function() {
                    cljs.core.swap_BANG_.call(null, s, cljs.core.conj, id);
                    return x;
                  }(), iter__21157.call(null, cljs.core.rest.call(null, s__21158__$2)));
                } else {
                  var G__21163 = cljs.core.rest.call(null, s__21158__$2);
                  s__21158__$1 = G__21163;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        };
      }(s), null, null);
    };
  }(s);
  return iter__4278__auto__.call(null, xs);
};
plumbing.core.interleave_all = function() {
  var interleave_all__delegate = function(colls) {
    return new cljs.core.LazySeq(null, function() {
      return function helper(seqs) {
        if (cljs.core.seq.call(null, seqs)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, seqs), new cljs.core.LazySeq(null, function() {
            return helper.call(null, cljs.core.keep.call(null, cljs.core.next, seqs));
          }, null, null));
        } else {
          return null;
        }
      }.call(null, cljs.core.keep.call(null, cljs.core.seq, colls));
    }, null, null);
  };
  var interleave_all = function(var_args) {
    var colls = null;
    if (arguments.length > 0) {
      colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return interleave_all__delegate.call(this, colls);
  };
  interleave_all.cljs$lang$maxFixedArity = 0;
  interleave_all.cljs$lang$applyTo = function(arglist__21164) {
    var colls = cljs.core.seq(arglist__21164);
    return interleave_all__delegate(colls);
  };
  interleave_all.cljs$core$IFn$_invoke$arity$variadic = interleave_all__delegate;
  return interleave_all;
}();
plumbing.core.count_when = function count_when(pred, xs) {
  return cljs.core.count.call(null, cljs.core.filter.call(null, pred, xs));
};
plumbing.core.conj_when = function() {
  var conj_when = null;
  var conj_when__2 = function(coll, x) {
    if (cljs.core.truth_(x)) {
      return cljs.core.conj.call(null, coll, x);
    } else {
      return coll;
    }
  };
  var conj_when__3 = function() {
    var G__21165__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__21166 = conj_when.call(null, coll, x);
          var G__21167 = cljs.core.first.call(null, xs);
          var G__21168 = cljs.core.next.call(null, xs);
          coll = G__21166;
          x = G__21167;
          xs = G__21168;
          continue;
        } else {
          return conj_when.call(null, coll, x);
        }
        break;
      }
    };
    var G__21165 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21165__delegate.call(this, coll, x, xs);
    };
    G__21165.cljs$lang$maxFixedArity = 2;
    G__21165.cljs$lang$applyTo = function(arglist__21169) {
      var coll = cljs.core.first(arglist__21169);
      arglist__21169 = cljs.core.next(arglist__21169);
      var x = cljs.core.first(arglist__21169);
      var xs = cljs.core.rest(arglist__21169);
      return G__21165__delegate(coll, x, xs);
    };
    G__21165.cljs$core$IFn$_invoke$arity$variadic = G__21165__delegate;
    return G__21165;
  }();
  conj_when = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj_when__2.call(this, coll, x);
      default:
        return conj_when__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_when.cljs$lang$maxFixedArity = 2;
  conj_when.cljs$lang$applyTo = conj_when__3.cljs$lang$applyTo;
  conj_when.cljs$core$IFn$_invoke$arity$2 = conj_when__2;
  conj_when.cljs$core$IFn$_invoke$arity$variadic = conj_when__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_when;
}();
plumbing.core.cons_when = function cons_when(x, s) {
  if (cljs.core.truth_(x)) {
    return cljs.core.cons.call(null, x, s);
  } else {
    return s;
  }
};
plumbing.core.rsort_by = cljs.core.comp.call(null, cljs.core.reverse, cljs.core.sort_by);
plumbing.core.swap_pair_BANG_ = function() {
  var swap_pair_BANG_ = null;
  var swap_pair_BANG___2 = function(a, f) {
    while (true) {
      var old_val = cljs.core.deref.call(null, a);
      var new_val = f.call(null, old_val);
      if (cljs.core.compare_and_set_BANG_.call(null, a, old_val, new_val)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_val, new_val], null);
      } else {
        continue;
      }
      break;
    }
  };
  var swap_pair_BANG___3 = function() {
    var G__21171__delegate = function(a, f, args) {
      return swap_pair_BANG_.call(null, a, function(p1__21170_SHARP_) {
        return cljs.core.apply.call(null, f, p1__21170_SHARP_, args);
      });
    };
    var G__21171 = function(a, f, var_args) {
      var args = null;
      if (arguments.length > 2) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21171__delegate.call(this, a, f, args);
    };
    G__21171.cljs$lang$maxFixedArity = 2;
    G__21171.cljs$lang$applyTo = function(arglist__21172) {
      var a = cljs.core.first(arglist__21172);
      arglist__21172 = cljs.core.next(arglist__21172);
      var f = cljs.core.first(arglist__21172);
      var args = cljs.core.rest(arglist__21172);
      return G__21171__delegate(a, f, args);
    };
    G__21171.cljs$core$IFn$_invoke$arity$variadic = G__21171__delegate;
    return G__21171;
  }();
  swap_pair_BANG_ = function(a, f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return swap_pair_BANG___2.call(this, a, f);
      default:
        return swap_pair_BANG___3.cljs$core$IFn$_invoke$arity$variadic(a, f, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_pair_BANG_.cljs$lang$maxFixedArity = 2;
  swap_pair_BANG_.cljs$lang$applyTo = swap_pair_BANG___3.cljs$lang$applyTo;
  swap_pair_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_pair_BANG___2;
  swap_pair_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_pair_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return swap_pair_BANG_;
}();
plumbing.core.get_and_set_BANG_ = function get_and_set_BANG_(a, new_val) {
  return cljs.core.first.call(null, plumbing.core.swap_pair_BANG_.call(null, a, cljs.core.constantly.call(null, new_val)));
};
plumbing.core.millis = function millis() {
  return(new Date).getTime();
};
plumbing.core.mapply = function() {
  var mapply = null;
  var mapply__2 = function(f, m) {
    return cljs.core.apply.call(null, f, cljs.core.apply.call(null, cljs.core.concat, m));
  };
  var mapply__3 = function() {
    var G__21173__delegate = function(f, arg, args) {
      return cljs.core.apply.call(null, f, arg, cljs.core.concat.call(null, cljs.core.butlast.call(null, args), cljs.core.apply.call(null, cljs.core.concat, cljs.core.last.call(null, args))));
    };
    var G__21173 = function(f, arg, var_args) {
      var args = null;
      if (arguments.length > 2) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21173__delegate.call(this, f, arg, args);
    };
    G__21173.cljs$lang$maxFixedArity = 2;
    G__21173.cljs$lang$applyTo = function(arglist__21174) {
      var f = cljs.core.first(arglist__21174);
      arglist__21174 = cljs.core.next(arglist__21174);
      var arg = cljs.core.first(arglist__21174);
      var args = cljs.core.rest(arglist__21174);
      return G__21173__delegate(f, arg, args);
    };
    G__21173.cljs$core$IFn$_invoke$arity$variadic = G__21173__delegate;
    return G__21173;
  }();
  mapply = function(f, arg, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return mapply__2.call(this, f, arg);
      default:
        return mapply__3.cljs$core$IFn$_invoke$arity$variadic(f, arg, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapply.cljs$lang$maxFixedArity = 2;
  mapply.cljs$lang$applyTo = mapply__3.cljs$lang$applyTo;
  mapply.cljs$core$IFn$_invoke$arity$2 = mapply__2;
  mapply.cljs$core$IFn$_invoke$arity$variadic = mapply__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapply;
}();
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var a = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__21576) {
    var opts__8694__auto__ = cljs.core.first(arglist__21576);
    var children__8695__auto__ = cljs.core.rest(arglist__21576);
    return a__delegate(opts__8694__auto__, children__8695__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var abbr = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__21577) {
    var opts__8694__auto__ = cljs.core.first(arglist__21577);
    var children__8695__auto__ = cljs.core.rest(arglist__21577);
    return abbr__delegate(opts__8694__auto__, children__8695__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var address = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__21578) {
    var opts__8694__auto__ = cljs.core.first(arglist__21578);
    var children__8695__auto__ = cljs.core.rest(arglist__21578);
    return address__delegate(opts__8694__auto__, children__8695__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var area = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__21579) {
    var opts__8694__auto__ = cljs.core.first(arglist__21579);
    var children__8695__auto__ = cljs.core.rest(arglist__21579);
    return area__delegate(opts__8694__auto__, children__8695__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var article = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__21580) {
    var opts__8694__auto__ = cljs.core.first(arglist__21580);
    var children__8695__auto__ = cljs.core.rest(arglist__21580);
    return article__delegate(opts__8694__auto__, children__8695__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var aside = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__21581) {
    var opts__8694__auto__ = cljs.core.first(arglist__21581);
    var children__8695__auto__ = cljs.core.rest(arglist__21581);
    return aside__delegate(opts__8694__auto__, children__8695__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var audio = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__21582) {
    var opts__8694__auto__ = cljs.core.first(arglist__21582);
    var children__8695__auto__ = cljs.core.rest(arglist__21582);
    return audio__delegate(opts__8694__auto__, children__8695__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var b = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__21583) {
    var opts__8694__auto__ = cljs.core.first(arglist__21583);
    var children__8695__auto__ = cljs.core.rest(arglist__21583);
    return b__delegate(opts__8694__auto__, children__8695__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var base = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__21584) {
    var opts__8694__auto__ = cljs.core.first(arglist__21584);
    var children__8695__auto__ = cljs.core.rest(arglist__21584);
    return base__delegate(opts__8694__auto__, children__8695__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var bdi = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__21585) {
    var opts__8694__auto__ = cljs.core.first(arglist__21585);
    var children__8695__auto__ = cljs.core.rest(arglist__21585);
    return bdi__delegate(opts__8694__auto__, children__8695__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var bdo = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__21586) {
    var opts__8694__auto__ = cljs.core.first(arglist__21586);
    var children__8695__auto__ = cljs.core.rest(arglist__21586);
    return bdo__delegate(opts__8694__auto__, children__8695__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var big = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__21587) {
    var opts__8694__auto__ = cljs.core.first(arglist__21587);
    var children__8695__auto__ = cljs.core.rest(arglist__21587);
    return big__delegate(opts__8694__auto__, children__8695__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var blockquote = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__21588) {
    var opts__8694__auto__ = cljs.core.first(arglist__21588);
    var children__8695__auto__ = cljs.core.rest(arglist__21588);
    return blockquote__delegate(opts__8694__auto__, children__8695__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var body = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__21589) {
    var opts__8694__auto__ = cljs.core.first(arglist__21589);
    var children__8695__auto__ = cljs.core.rest(arglist__21589);
    return body__delegate(opts__8694__auto__, children__8695__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var br = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__21590) {
    var opts__8694__auto__ = cljs.core.first(arglist__21590);
    var children__8695__auto__ = cljs.core.rest(arglist__21590);
    return br__delegate(opts__8694__auto__, children__8695__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var button = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__21591) {
    var opts__8694__auto__ = cljs.core.first(arglist__21591);
    var children__8695__auto__ = cljs.core.rest(arglist__21591);
    return button__delegate(opts__8694__auto__, children__8695__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var canvas = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__21592) {
    var opts__8694__auto__ = cljs.core.first(arglist__21592);
    var children__8695__auto__ = cljs.core.rest(arglist__21592);
    return canvas__delegate(opts__8694__auto__, children__8695__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var caption = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__21593) {
    var opts__8694__auto__ = cljs.core.first(arglist__21593);
    var children__8695__auto__ = cljs.core.rest(arglist__21593);
    return caption__delegate(opts__8694__auto__, children__8695__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var cite = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__21594) {
    var opts__8694__auto__ = cljs.core.first(arglist__21594);
    var children__8695__auto__ = cljs.core.rest(arglist__21594);
    return cite__delegate(opts__8694__auto__, children__8695__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var code = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__21595) {
    var opts__8694__auto__ = cljs.core.first(arglist__21595);
    var children__8695__auto__ = cljs.core.rest(arglist__21595);
    return code__delegate(opts__8694__auto__, children__8695__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var col = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__21596) {
    var opts__8694__auto__ = cljs.core.first(arglist__21596);
    var children__8695__auto__ = cljs.core.rest(arglist__21596);
    return col__delegate(opts__8694__auto__, children__8695__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var colgroup = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__21597) {
    var opts__8694__auto__ = cljs.core.first(arglist__21597);
    var children__8695__auto__ = cljs.core.rest(arglist__21597);
    return colgroup__delegate(opts__8694__auto__, children__8695__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var data = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__21598) {
    var opts__8694__auto__ = cljs.core.first(arglist__21598);
    var children__8695__auto__ = cljs.core.rest(arglist__21598);
    return data__delegate(opts__8694__auto__, children__8695__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var datalist = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__21599) {
    var opts__8694__auto__ = cljs.core.first(arglist__21599);
    var children__8695__auto__ = cljs.core.rest(arglist__21599);
    return datalist__delegate(opts__8694__auto__, children__8695__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var dd = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__21600) {
    var opts__8694__auto__ = cljs.core.first(arglist__21600);
    var children__8695__auto__ = cljs.core.rest(arglist__21600);
    return dd__delegate(opts__8694__auto__, children__8695__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var del = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__21601) {
    var opts__8694__auto__ = cljs.core.first(arglist__21601);
    var children__8695__auto__ = cljs.core.rest(arglist__21601);
    return del__delegate(opts__8694__auto__, children__8695__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var dfn = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__21602) {
    var opts__8694__auto__ = cljs.core.first(arglist__21602);
    var children__8695__auto__ = cljs.core.rest(arglist__21602);
    return dfn__delegate(opts__8694__auto__, children__8695__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var div = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__21603) {
    var opts__8694__auto__ = cljs.core.first(arglist__21603);
    var children__8695__auto__ = cljs.core.rest(arglist__21603);
    return div__delegate(opts__8694__auto__, children__8695__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var dl = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__21604) {
    var opts__8694__auto__ = cljs.core.first(arglist__21604);
    var children__8695__auto__ = cljs.core.rest(arglist__21604);
    return dl__delegate(opts__8694__auto__, children__8695__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var dt = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__21605) {
    var opts__8694__auto__ = cljs.core.first(arglist__21605);
    var children__8695__auto__ = cljs.core.rest(arglist__21605);
    return dt__delegate(opts__8694__auto__, children__8695__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var em = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__21606) {
    var opts__8694__auto__ = cljs.core.first(arglist__21606);
    var children__8695__auto__ = cljs.core.rest(arglist__21606);
    return em__delegate(opts__8694__auto__, children__8695__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var embed = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__21607) {
    var opts__8694__auto__ = cljs.core.first(arglist__21607);
    var children__8695__auto__ = cljs.core.rest(arglist__21607);
    return embed__delegate(opts__8694__auto__, children__8695__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var fieldset = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__21608) {
    var opts__8694__auto__ = cljs.core.first(arglist__21608);
    var children__8695__auto__ = cljs.core.rest(arglist__21608);
    return fieldset__delegate(opts__8694__auto__, children__8695__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var figcaption = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__21609) {
    var opts__8694__auto__ = cljs.core.first(arglist__21609);
    var children__8695__auto__ = cljs.core.rest(arglist__21609);
    return figcaption__delegate(opts__8694__auto__, children__8695__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var figure = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__21610) {
    var opts__8694__auto__ = cljs.core.first(arglist__21610);
    var children__8695__auto__ = cljs.core.rest(arglist__21610);
    return figure__delegate(opts__8694__auto__, children__8695__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var footer = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__21611) {
    var opts__8694__auto__ = cljs.core.first(arglist__21611);
    var children__8695__auto__ = cljs.core.rest(arglist__21611);
    return footer__delegate(opts__8694__auto__, children__8695__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var form = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__21612) {
    var opts__8694__auto__ = cljs.core.first(arglist__21612);
    var children__8695__auto__ = cljs.core.rest(arglist__21612);
    return form__delegate(opts__8694__auto__, children__8695__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var h1 = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__21613) {
    var opts__8694__auto__ = cljs.core.first(arglist__21613);
    var children__8695__auto__ = cljs.core.rest(arglist__21613);
    return h1__delegate(opts__8694__auto__, children__8695__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var h2 = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__21614) {
    var opts__8694__auto__ = cljs.core.first(arglist__21614);
    var children__8695__auto__ = cljs.core.rest(arglist__21614);
    return h2__delegate(opts__8694__auto__, children__8695__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var h3 = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__21615) {
    var opts__8694__auto__ = cljs.core.first(arglist__21615);
    var children__8695__auto__ = cljs.core.rest(arglist__21615);
    return h3__delegate(opts__8694__auto__, children__8695__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var h4 = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__21616) {
    var opts__8694__auto__ = cljs.core.first(arglist__21616);
    var children__8695__auto__ = cljs.core.rest(arglist__21616);
    return h4__delegate(opts__8694__auto__, children__8695__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var h5 = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__21617) {
    var opts__8694__auto__ = cljs.core.first(arglist__21617);
    var children__8695__auto__ = cljs.core.rest(arglist__21617);
    return h5__delegate(opts__8694__auto__, children__8695__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var h6 = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__21618) {
    var opts__8694__auto__ = cljs.core.first(arglist__21618);
    var children__8695__auto__ = cljs.core.rest(arglist__21618);
    return h6__delegate(opts__8694__auto__, children__8695__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var head = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__21619) {
    var opts__8694__auto__ = cljs.core.first(arglist__21619);
    var children__8695__auto__ = cljs.core.rest(arglist__21619);
    return head__delegate(opts__8694__auto__, children__8695__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var header = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__21620) {
    var opts__8694__auto__ = cljs.core.first(arglist__21620);
    var children__8695__auto__ = cljs.core.rest(arglist__21620);
    return header__delegate(opts__8694__auto__, children__8695__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var hr = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__21621) {
    var opts__8694__auto__ = cljs.core.first(arglist__21621);
    var children__8695__auto__ = cljs.core.rest(arglist__21621);
    return hr__delegate(opts__8694__auto__, children__8695__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var html = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__21622) {
    var opts__8694__auto__ = cljs.core.first(arglist__21622);
    var children__8695__auto__ = cljs.core.rest(arglist__21622);
    return html__delegate(opts__8694__auto__, children__8695__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var i = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__21623) {
    var opts__8694__auto__ = cljs.core.first(arglist__21623);
    var children__8695__auto__ = cljs.core.rest(arglist__21623);
    return i__delegate(opts__8694__auto__, children__8695__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var iframe = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__21624) {
    var opts__8694__auto__ = cljs.core.first(arglist__21624);
    var children__8695__auto__ = cljs.core.rest(arglist__21624);
    return iframe__delegate(opts__8694__auto__, children__8695__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var img = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__21625) {
    var opts__8694__auto__ = cljs.core.first(arglist__21625);
    var children__8695__auto__ = cljs.core.rest(arglist__21625);
    return img__delegate(opts__8694__auto__, children__8695__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var ins = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__21626) {
    var opts__8694__auto__ = cljs.core.first(arglist__21626);
    var children__8695__auto__ = cljs.core.rest(arglist__21626);
    return ins__delegate(opts__8694__auto__, children__8695__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var kbd = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__21627) {
    var opts__8694__auto__ = cljs.core.first(arglist__21627);
    var children__8695__auto__ = cljs.core.rest(arglist__21627);
    return kbd__delegate(opts__8694__auto__, children__8695__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var keygen = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__21628) {
    var opts__8694__auto__ = cljs.core.first(arglist__21628);
    var children__8695__auto__ = cljs.core.rest(arglist__21628);
    return keygen__delegate(opts__8694__auto__, children__8695__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var label = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__21629) {
    var opts__8694__auto__ = cljs.core.first(arglist__21629);
    var children__8695__auto__ = cljs.core.rest(arglist__21629);
    return label__delegate(opts__8694__auto__, children__8695__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var legend = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__21630) {
    var opts__8694__auto__ = cljs.core.first(arglist__21630);
    var children__8695__auto__ = cljs.core.rest(arglist__21630);
    return legend__delegate(opts__8694__auto__, children__8695__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var li = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__21631) {
    var opts__8694__auto__ = cljs.core.first(arglist__21631);
    var children__8695__auto__ = cljs.core.rest(arglist__21631);
    return li__delegate(opts__8694__auto__, children__8695__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var link = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__21632) {
    var opts__8694__auto__ = cljs.core.first(arglist__21632);
    var children__8695__auto__ = cljs.core.rest(arglist__21632);
    return link__delegate(opts__8694__auto__, children__8695__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var main = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__21633) {
    var opts__8694__auto__ = cljs.core.first(arglist__21633);
    var children__8695__auto__ = cljs.core.rest(arglist__21633);
    return main__delegate(opts__8694__auto__, children__8695__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var map = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__21634) {
    var opts__8694__auto__ = cljs.core.first(arglist__21634);
    var children__8695__auto__ = cljs.core.rest(arglist__21634);
    return map__delegate(opts__8694__auto__, children__8695__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var mark = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__21635) {
    var opts__8694__auto__ = cljs.core.first(arglist__21635);
    var children__8695__auto__ = cljs.core.rest(arglist__21635);
    return mark__delegate(opts__8694__auto__, children__8695__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var menu = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__21636) {
    var opts__8694__auto__ = cljs.core.first(arglist__21636);
    var children__8695__auto__ = cljs.core.rest(arglist__21636);
    return menu__delegate(opts__8694__auto__, children__8695__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var menuitem = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__21637) {
    var opts__8694__auto__ = cljs.core.first(arglist__21637);
    var children__8695__auto__ = cljs.core.rest(arglist__21637);
    return menuitem__delegate(opts__8694__auto__, children__8695__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var meta = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__21638) {
    var opts__8694__auto__ = cljs.core.first(arglist__21638);
    var children__8695__auto__ = cljs.core.rest(arglist__21638);
    return meta__delegate(opts__8694__auto__, children__8695__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var meter = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__21639) {
    var opts__8694__auto__ = cljs.core.first(arglist__21639);
    var children__8695__auto__ = cljs.core.rest(arglist__21639);
    return meter__delegate(opts__8694__auto__, children__8695__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var nav = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__21640) {
    var opts__8694__auto__ = cljs.core.first(arglist__21640);
    var children__8695__auto__ = cljs.core.rest(arglist__21640);
    return nav__delegate(opts__8694__auto__, children__8695__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var noscript = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__21641) {
    var opts__8694__auto__ = cljs.core.first(arglist__21641);
    var children__8695__auto__ = cljs.core.rest(arglist__21641);
    return noscript__delegate(opts__8694__auto__, children__8695__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var object = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__21642) {
    var opts__8694__auto__ = cljs.core.first(arglist__21642);
    var children__8695__auto__ = cljs.core.rest(arglist__21642);
    return object__delegate(opts__8694__auto__, children__8695__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var ol = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__21643) {
    var opts__8694__auto__ = cljs.core.first(arglist__21643);
    var children__8695__auto__ = cljs.core.rest(arglist__21643);
    return ol__delegate(opts__8694__auto__, children__8695__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var optgroup = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__21644) {
    var opts__8694__auto__ = cljs.core.first(arglist__21644);
    var children__8695__auto__ = cljs.core.rest(arglist__21644);
    return optgroup__delegate(opts__8694__auto__, children__8695__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var output = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__21645) {
    var opts__8694__auto__ = cljs.core.first(arglist__21645);
    var children__8695__auto__ = cljs.core.rest(arglist__21645);
    return output__delegate(opts__8694__auto__, children__8695__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var p = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__21646) {
    var opts__8694__auto__ = cljs.core.first(arglist__21646);
    var children__8695__auto__ = cljs.core.rest(arglist__21646);
    return p__delegate(opts__8694__auto__, children__8695__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var param = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__21647) {
    var opts__8694__auto__ = cljs.core.first(arglist__21647);
    var children__8695__auto__ = cljs.core.rest(arglist__21647);
    return param__delegate(opts__8694__auto__, children__8695__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var pre = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__21648) {
    var opts__8694__auto__ = cljs.core.first(arglist__21648);
    var children__8695__auto__ = cljs.core.rest(arglist__21648);
    return pre__delegate(opts__8694__auto__, children__8695__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var progress = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__21649) {
    var opts__8694__auto__ = cljs.core.first(arglist__21649);
    var children__8695__auto__ = cljs.core.rest(arglist__21649);
    return progress__delegate(opts__8694__auto__, children__8695__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var q = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__21650) {
    var opts__8694__auto__ = cljs.core.first(arglist__21650);
    var children__8695__auto__ = cljs.core.rest(arglist__21650);
    return q__delegate(opts__8694__auto__, children__8695__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var rp = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__21651) {
    var opts__8694__auto__ = cljs.core.first(arglist__21651);
    var children__8695__auto__ = cljs.core.rest(arglist__21651);
    return rp__delegate(opts__8694__auto__, children__8695__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var rt = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__21652) {
    var opts__8694__auto__ = cljs.core.first(arglist__21652);
    var children__8695__auto__ = cljs.core.rest(arglist__21652);
    return rt__delegate(opts__8694__auto__, children__8695__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var ruby = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__21653) {
    var opts__8694__auto__ = cljs.core.first(arglist__21653);
    var children__8695__auto__ = cljs.core.rest(arglist__21653);
    return ruby__delegate(opts__8694__auto__, children__8695__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var s = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__21654) {
    var opts__8694__auto__ = cljs.core.first(arglist__21654);
    var children__8695__auto__ = cljs.core.rest(arglist__21654);
    return s__delegate(opts__8694__auto__, children__8695__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var samp = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__21655) {
    var opts__8694__auto__ = cljs.core.first(arglist__21655);
    var children__8695__auto__ = cljs.core.rest(arglist__21655);
    return samp__delegate(opts__8694__auto__, children__8695__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var script = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__21656) {
    var opts__8694__auto__ = cljs.core.first(arglist__21656);
    var children__8695__auto__ = cljs.core.rest(arglist__21656);
    return script__delegate(opts__8694__auto__, children__8695__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var section = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__21657) {
    var opts__8694__auto__ = cljs.core.first(arglist__21657);
    var children__8695__auto__ = cljs.core.rest(arglist__21657);
    return section__delegate(opts__8694__auto__, children__8695__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var select = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__21658) {
    var opts__8694__auto__ = cljs.core.first(arglist__21658);
    var children__8695__auto__ = cljs.core.rest(arglist__21658);
    return select__delegate(opts__8694__auto__, children__8695__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var small = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__21659) {
    var opts__8694__auto__ = cljs.core.first(arglist__21659);
    var children__8695__auto__ = cljs.core.rest(arglist__21659);
    return small__delegate(opts__8694__auto__, children__8695__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var source = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__21660) {
    var opts__8694__auto__ = cljs.core.first(arglist__21660);
    var children__8695__auto__ = cljs.core.rest(arglist__21660);
    return source__delegate(opts__8694__auto__, children__8695__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var span = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__21661) {
    var opts__8694__auto__ = cljs.core.first(arglist__21661);
    var children__8695__auto__ = cljs.core.rest(arglist__21661);
    return span__delegate(opts__8694__auto__, children__8695__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var strong = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__21662) {
    var opts__8694__auto__ = cljs.core.first(arglist__21662);
    var children__8695__auto__ = cljs.core.rest(arglist__21662);
    return strong__delegate(opts__8694__auto__, children__8695__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var style = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__21663) {
    var opts__8694__auto__ = cljs.core.first(arglist__21663);
    var children__8695__auto__ = cljs.core.rest(arglist__21663);
    return style__delegate(opts__8694__auto__, children__8695__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var sub = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__21664) {
    var opts__8694__auto__ = cljs.core.first(arglist__21664);
    var children__8695__auto__ = cljs.core.rest(arglist__21664);
    return sub__delegate(opts__8694__auto__, children__8695__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var summary = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__21665) {
    var opts__8694__auto__ = cljs.core.first(arglist__21665);
    var children__8695__auto__ = cljs.core.rest(arglist__21665);
    return summary__delegate(opts__8694__auto__, children__8695__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var sup = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__21666) {
    var opts__8694__auto__ = cljs.core.first(arglist__21666);
    var children__8695__auto__ = cljs.core.rest(arglist__21666);
    return sup__delegate(opts__8694__auto__, children__8695__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var table = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__21667) {
    var opts__8694__auto__ = cljs.core.first(arglist__21667);
    var children__8695__auto__ = cljs.core.rest(arglist__21667);
    return table__delegate(opts__8694__auto__, children__8695__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var tbody = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__21668) {
    var opts__8694__auto__ = cljs.core.first(arglist__21668);
    var children__8695__auto__ = cljs.core.rest(arglist__21668);
    return tbody__delegate(opts__8694__auto__, children__8695__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var td = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__21669) {
    var opts__8694__auto__ = cljs.core.first(arglist__21669);
    var children__8695__auto__ = cljs.core.rest(arglist__21669);
    return td__delegate(opts__8694__auto__, children__8695__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var tfoot = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__21670) {
    var opts__8694__auto__ = cljs.core.first(arglist__21670);
    var children__8695__auto__ = cljs.core.rest(arglist__21670);
    return tfoot__delegate(opts__8694__auto__, children__8695__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var th = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__21671) {
    var opts__8694__auto__ = cljs.core.first(arglist__21671);
    var children__8695__auto__ = cljs.core.rest(arglist__21671);
    return th__delegate(opts__8694__auto__, children__8695__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var thead = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__21672) {
    var opts__8694__auto__ = cljs.core.first(arglist__21672);
    var children__8695__auto__ = cljs.core.rest(arglist__21672);
    return thead__delegate(opts__8694__auto__, children__8695__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var time = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__21673) {
    var opts__8694__auto__ = cljs.core.first(arglist__21673);
    var children__8695__auto__ = cljs.core.rest(arglist__21673);
    return time__delegate(opts__8694__auto__, children__8695__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var title = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__21674) {
    var opts__8694__auto__ = cljs.core.first(arglist__21674);
    var children__8695__auto__ = cljs.core.rest(arglist__21674);
    return title__delegate(opts__8694__auto__, children__8695__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var tr = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__21675) {
    var opts__8694__auto__ = cljs.core.first(arglist__21675);
    var children__8695__auto__ = cljs.core.rest(arglist__21675);
    return tr__delegate(opts__8694__auto__, children__8695__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var track = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__21676) {
    var opts__8694__auto__ = cljs.core.first(arglist__21676);
    var children__8695__auto__ = cljs.core.rest(arglist__21676);
    return track__delegate(opts__8694__auto__, children__8695__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var u = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__21677) {
    var opts__8694__auto__ = cljs.core.first(arglist__21677);
    var children__8695__auto__ = cljs.core.rest(arglist__21677);
    return u__delegate(opts__8694__auto__, children__8695__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var ul = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__21678) {
    var opts__8694__auto__ = cljs.core.first(arglist__21678);
    var children__8695__auto__ = cljs.core.rest(arglist__21678);
    return ul__delegate(opts__8694__auto__, children__8695__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var var$ = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__21679) {
    var opts__8694__auto__ = cljs.core.first(arglist__21679);
    var children__8695__auto__ = cljs.core.rest(arglist__21679);
    return var$__delegate(opts__8694__auto__, children__8695__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var video = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__21680) {
    var opts__8694__auto__ = cljs.core.first(arglist__21680);
    var children__8695__auto__ = cljs.core.rest(arglist__21680);
    return video__delegate(opts__8694__auto__, children__8695__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var wbr = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__21681) {
    var opts__8694__auto__ = cljs.core.first(arglist__21681);
    var children__8695__auto__ = cljs.core.rest(arglist__21681);
    return wbr__delegate(opts__8694__auto__, children__8695__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var circle = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__21682) {
    var opts__8694__auto__ = cljs.core.first(arglist__21682);
    var children__8695__auto__ = cljs.core.rest(arglist__21682);
    return circle__delegate(opts__8694__auto__, children__8695__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var ellipse = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__21683) {
    var opts__8694__auto__ = cljs.core.first(arglist__21683);
    var children__8695__auto__ = cljs.core.rest(arglist__21683);
    return ellipse__delegate(opts__8694__auto__, children__8695__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var g = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__21684) {
    var opts__8694__auto__ = cljs.core.first(arglist__21684);
    var children__8695__auto__ = cljs.core.rest(arglist__21684);
    return g__delegate(opts__8694__auto__, children__8695__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var line = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__21685) {
    var opts__8694__auto__ = cljs.core.first(arglist__21685);
    var children__8695__auto__ = cljs.core.rest(arglist__21685);
    return line__delegate(opts__8694__auto__, children__8695__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var path = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__21686) {
    var opts__8694__auto__ = cljs.core.first(arglist__21686);
    var children__8695__auto__ = cljs.core.rest(arglist__21686);
    return path__delegate(opts__8694__auto__, children__8695__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var polyline = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__21687) {
    var opts__8694__auto__ = cljs.core.first(arglist__21687);
    var children__8695__auto__ = cljs.core.rest(arglist__21687);
    return polyline__delegate(opts__8694__auto__, children__8695__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var rect = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__21688) {
    var opts__8694__auto__ = cljs.core.first(arglist__21688);
    var children__8695__auto__ = cljs.core.rest(arglist__21688);
    return rect__delegate(opts__8694__auto__, children__8695__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var svg = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__21689) {
    var opts__8694__auto__ = cljs.core.first(arglist__21689);
    var children__8695__auto__ = cljs.core.rest(arglist__21689);
    return svg__delegate(opts__8694__auto__, children__8695__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var text = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__21690) {
    var opts__8694__auto__ = cljs.core.first(arglist__21690);
    var children__8695__auto__ = cljs.core.rest(arglist__21690);
    return text__delegate(opts__8694__auto__, children__8695__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var defs = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__21691) {
    var opts__8694__auto__ = cljs.core.first(arglist__21691);
    var children__8695__auto__ = cljs.core.rest(arglist__21691);
    return defs__delegate(opts__8694__auto__, children__8695__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var linearGradient = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__21692) {
    var opts__8694__auto__ = cljs.core.first(arglist__21692);
    var children__8695__auto__ = cljs.core.rest(arglist__21692);
    return linearGradient__delegate(opts__8694__auto__, children__8695__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var polygon = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__21693) {
    var opts__8694__auto__ = cljs.core.first(arglist__21693);
    var children__8695__auto__ = cljs.core.rest(arglist__21693);
    return polygon__delegate(opts__8694__auto__, children__8695__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var radialGradient = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__21694) {
    var opts__8694__auto__ = cljs.core.first(arglist__21694);
    var children__8695__auto__ = cljs.core.rest(arglist__21694);
    return radialGradient__delegate(opts__8694__auto__, children__8695__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__8694__auto__, children__8695__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__8694__auto__, children__8695__auto__)));
  };
  var stop = function(opts__8694__auto__, var_args) {
    var children__8695__auto__ = null;
    if (arguments.length > 1) {
      children__8695__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__8694__auto__, children__8695__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__21695) {
    var opts__8694__auto__ = cljs.core.first(arglist__21695);
    var children__8695__auto__ = cljs.core.rest(arglist__21695);
    return stop__delegate(opts__8694__auto__, children__8695__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj21342 = {};
  return obj21342;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.display_name[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.display_name["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj21344 = {};
  return obj21344;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.init_state[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.init_state["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj21346 = {};
  return obj21346;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.should_update[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.should_update["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj21348 = {};
  return obj21348;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.will_mount[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.will_mount["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj21350 = {};
  return obj21350;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.did_mount[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.did_mount["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj21352 = {};
  return obj21352;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.will_unmount[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.will_unmount["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj21354 = {};
  return obj21354;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.will_update[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.will_update["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj21356 = {};
  return obj21356;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.did_update[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.did_update["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj21358 = {};
  return obj21358;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.will_receive_props[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.will_receive_props["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj21360 = {};
  return obj21360;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.render[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.render["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj21362 = {};
  return obj21362;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core.render_state[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core.render_state["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj21364 = {};
  return obj21364;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj21366 = {};
  return obj21366;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._get_state[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._get_state["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._get_state[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._get_state["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj21368 = {};
  return obj21368;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._get_render_state[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._get_render_state["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._get_render_state[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._get_render_state["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj21370 = {};
  return obj21370;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3541__auto__ = this$;
      if (and__3541__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4180__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3553__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj21372 = {};
  return obj21372;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core._get_queue[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._get_queue["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj21374 = {};
  return obj21374;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = om.core._value[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._value["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj21376 = {};
  return obj21376;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3541__auto__ = cursor;
    if (and__3541__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4180__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3553__auto__ = om.core._path[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._path["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3541__auto__ = cursor;
    if (and__3541__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4180__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3553__auto__ = om.core._state[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._state["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj21378 = {};
  return obj21378;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3541__auto__ = value;
      if (and__3541__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4180__auto__ = value == null ? null : value;
      return function() {
        var or__3553__auto__ = om.core._to_cursor[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._to_cursor["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3541__auto__ = value;
      if (and__3541__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4180__auto__ = value == null ? null : value;
      return function() {
        var or__3553__auto__ = om.core._to_cursor[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = om.core._to_cursor["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj21380 = {};
  return obj21380;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3541__auto__ = cursor;
    if (and__3541__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4180__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3553__auto__ = om.core._derive[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._derive["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj21382 = {};
  return obj21382;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3541__auto__ = cursor;
    if (and__3541__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4180__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3553__auto__ = om.core._transact_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj21384 = {};
  return obj21384;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = om.core._listen_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = om.core._notify_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__21386 = state;
    if (G__21386) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__21386.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__21386.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__21386);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__21386);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__21388 = x;
  if (G__21388) {
    var bit__4203__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3553__auto__ = bit__4203__auto__;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return G__21388.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__21388.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__21388);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__21388);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_21390 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21390;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__21392 = state;
    G__21392["__om_prev_state"] = state["__om_state"];
    G__21392["__om_state"] = pending_state;
    G__21392["__om_pending_state"] = null;
    return G__21392;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3553__auto__ = props;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3553__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, 
"componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__21393 = c;
    if (G__21393) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__21393.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__21393.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__21393);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__21393);
    }
  }()) {
    var state_21420 = this$.state;
    var _STAR_read_enabled_STAR_21394_21421 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3553__auto__ = state_21420["__om_prev_state"];
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return state_21420["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21394_21421;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__21395 = c;
    if (G__21395) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__21395.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__21395.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__21395);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__21395);
    }
  }()) {
    var _STAR_read_enabled_STAR_21396 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21396;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__21397 = c;
    if (G__21397) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__21397.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__21397.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__21397);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__21397);
    }
  }()) {
    var _STAR_read_enabled_STAR_21398 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21398;
    }
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_21399 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__21400 = c;
      if (G__21400) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto__ = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return G__21400.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__21400.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__21400);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__21400);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, props["__om_cursor"]), om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            return false;
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21399;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_21401 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__21402 = c;
      if (G__21402) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto__ = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return G__21402.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__21402.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__21402);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__21402);
      }
    }()) {
      var _STAR_parent_STAR_21403 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_21404 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_21405 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_21405;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_21404;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_21403;
      }
    } else {
      if (function() {
        var G__21406 = c;
        if (G__21406) {
          var bit__4203__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3553__auto__ = bit__4203__auto__;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return G__21406.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__21406.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__21406);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__21406);
        }
      }()) {
        var _STAR_parent_STAR_21407 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_21408 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_21409 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_21409;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_21408;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_21407;
        }
      } else {
        return c;
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21401;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_21422 = om.core.children.call(null, this$);
  if (function() {
    var G__21410 = c_21422;
    if (G__21410) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__21410.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__21410.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__21410);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__21410);
    }
  }()) {
    var state_21423 = this$.state;
    var _STAR_read_enabled_STAR_21411_21424 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_21422, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21411_21424;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3553__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__21412 = c;
    if (G__21412) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__21412.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__21412.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__21412);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__21412);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_21413 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21413;
    }
  }() : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3553__auto__ = id;
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__21414 = c;
    if (G__21414) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__21414.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__21414.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__21414);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__21414);
    }
  }()) {
    var _STAR_read_enabled_STAR_21415 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21415;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__21416 = c;
    if (G__21416) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__21416.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__21416.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__21416);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__21416);
    }
  }()) {
    var _STAR_read_enabled_STAR_21417 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21417;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_21425 = om.core.children.call(null, this$);
  if (function() {
    var G__21418 = c_21425;
    if (G__21418) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__21418.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__21418.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__21418);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__21418);
    }
  }()) {
    var _STAR_read_enabled_STAR_21419_21426 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_21425);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21419_21426;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x21430 = obj;
  x21430.om$core$IGetState$ = true;
  x21430.om$core$IGetState$_get_state$arity$1 = function(x21430) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3553__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x21430);
  x21430.om$core$IGetState$_get_state$arity$2 = function(x21430) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x21430);
  x21430.om$core$IGetRenderState$ = true;
  x21430.om$core$IGetRenderState$_get_render_state$arity$1 = function(x21430) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x21430);
  x21430.om$core$IGetRenderState$_get_render_state$arity$2 = function(x21430) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x21430);
  x21430.om$core$ISetState$ = true;
  x21430.om$core$ISetState$_set_state_BANG_$arity$3 = function(x21430) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_21431 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var app_state = props["__om_app_state"];
        this$__$1.state["__om_pending_state"] = val;
        if (cljs.core.truth_(function() {
          var and__3541__auto__ = !(app_state == null);
          if (and__3541__auto__) {
            return render;
          } else {
            return and__3541__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21431;
      }
    };
  }(x21430);
  x21430.om$core$ISetState$_set_state_BANG_$arity$4 = function(x21430) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_21432 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var pstate = om.core._get_state.call(null, this$__$1);
        var app_state = props["__om_app_state"];
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (cljs.core.truth_(function() {
          var and__3541__auto__ = !(app_state == null);
          if (and__3541__auto__) {
            return render;
          } else {
            return and__3541__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21432;
      }
    };
  }(x21430);
  return x21430;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2162591503;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__21434) {
          var vec__21435 = p__21434;
          var k = cljs.core.nth.call(null, vec__21435, 0, null);
          var v = cljs.core.nth.call(null, vec__21435, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__21436 = null;
  var G__21436__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21436__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21436 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21436__2.call(this, self__, k);
      case 3:
        return G__21436__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21436.cljs$core$IFn$_invoke$arity$2 = G__21436__2;
  G__21436.cljs$core$IFn$_invoke$arity$3 = G__21436__3;
  return G__21436;
}();
om.core.MapCursor.prototype.apply = function(self__, args21433) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21433)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2179375903;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__21438 = null;
  var G__21438__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__21438__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__21438 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21438__2.call(this, self__, k);
      case 3:
        return G__21438__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21438.cljs$core$IFn$_invoke$arity$2 = G__21438__2;
  G__21438.cljs$core$IFn$_invoke$arity$3 = G__21438__3;
  return G__21438;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args21437) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args21437)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x21440 = cljs.core.clone.call(null, val);
  x21440.cljs$core$IEquiv$ = true;
  x21440.cljs$core$IEquiv$_equiv$arity$2 = function(x21440) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
      }
    };
  }(x21440);
  x21440.om$core$ITransact$ = true;
  x21440.om$core$ITransact$_transact_BANG_$arity$4 = function(x21440) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x21440);
  x21440.om$core$ICursor$ = true;
  x21440.om$core$ICursor$_path$arity$1 = function(x21440) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x21440);
  x21440.om$core$ICursor$_state$arity$1 = function(x21440) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x21440);
  x21440.cljs$core$IDeref$ = true;
  x21440.cljs$core$IDeref$_deref$arity$1 = function(x21440) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
      }
    };
  }(x21440);
  return x21440;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__21443 = val;
        if (G__21443) {
          var bit__4203__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3553__auto__ = bit__4203__auto__;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return G__21443.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__21443.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__21443);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__21443);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__21444 = val;
              if (G__21444) {
                var bit__4203__auto__ = G__21444.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4203__auto__ || G__21444.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__21444.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__21444);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__21444);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__21449 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__21450 = null;
  var count__21451 = 0;
  var i__21452 = 0;
  while (true) {
    if (i__21452 < count__21451) {
      var f = cljs.core._nth.call(null, chunk__21450, i__21452);
      f.call(null);
      var G__21453 = seq__21449;
      var G__21454 = chunk__21450;
      var G__21455 = count__21451;
      var G__21456 = i__21452 + 1;
      seq__21449 = G__21453;
      chunk__21450 = G__21454;
      count__21451 = G__21455;
      i__21452 = G__21456;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__21449);
      if (temp__4126__auto__) {
        var seq__21449__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__21449__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__21449__$1);
          var G__21457 = cljs.core.chunk_rest.call(null, seq__21449__$1);
          var G__21458 = c__4309__auto__;
          var G__21459 = cljs.core.count.call(null, c__4309__auto__);
          var G__21460 = 0;
          seq__21449 = G__21457;
          chunk__21450 = G__21458;
          count__21451 = G__21459;
          i__21452 = G__21460;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__21449__$1);
          f.call(null);
          var G__21461 = cljs.core.next.call(null, seq__21449__$1);
          var G__21462 = null;
          var G__21463 = 0;
          var G__21464 = 0;
          seq__21449 = G__21461;
          chunk__21450 = G__21462;
          count__21451 = G__21463;
          i__21452 = G__21464;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3553__auto__ = function() {
      var G__21469 = x;
      if (G__21469) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto__ = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto__)) {
            return or__3553__auto__;
          } else {
            return G__21469.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__21469.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__21469);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__21469);
      }
    }();
    if (or__3553__auto__) {
      return or__3553__auto__;
    } else {
      var G__21470 = x;
      if (G__21470) {
        var bit__4203__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3553__auto____$1 = bit__4203__auto__;
          if (cljs.core.truth_(or__3553__auto____$1)) {
            return or__3553__auto____$1;
          } else {
            return G__21470.om$core$IRenderState$;
          }
        }())) {
          return true;
        } else {
          if (!G__21470.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__21470);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__21470);
      }
    }
  }()) {
    return null;
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("Invalid Om component fn, " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(f.name) + " does not return valid instance") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
  }
};
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createClass(function() {
        var or__3553__auto__ = descriptor;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return om.core.pure_descriptor;
        }
      }());
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1428119148, null), new cljs.core.Symbol(null, 
      "m", "m", -1021758608, null)))));
    }
    if (m == null) {
      var shared = function() {
        var or__3553__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_21475 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21475;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__21476 = m;
      var map__21476__$1 = cljs.core.seq_QMARK_.call(null, map__21476) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21476) : map__21476;
      var opts = cljs.core.get.call(null, map__21476__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__21476__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__21476__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key = cljs.core.get.call(null, map__21476__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3553__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_shared":shared, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_, "__om_app_state":om.core._STAR_state_STAR_, "key":rkey, "__om_init_state":init_state, "children":opts == null ? function(map__21476, map__21476__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_21477 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21477;
          }
        };
      }(map__21476, map__21476__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__21476, map__21476__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_21478 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21478;
          }
        };
      }(map__21476, map__21476__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_state":state});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_21480 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_21480;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__21489 = state;
    if (G__21489) {
      var bit__4203__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3553__auto__ = bit__4203__auto__;
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return G__21489.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__21489.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__21489);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__21489);
    }
  }()) {
  } else {
    var listeners_21497 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_21498 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x21490_21499 = state;
    x21490_21499.om$core$IRenderQueue$ = true;
    x21490_21499.om$core$IRenderQueue$_get_queue$arity$1 = function(x21490_21499, listeners_21497, render_queue_21498) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_21498);
      };
    }(x21490_21499, listeners_21497, render_queue_21498);
    x21490_21499.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x21490_21499, listeners_21497, render_queue_21498) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_21498), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_21498, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x21490_21499, listeners_21497, render_queue_21498);
    x21490_21499.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x21490_21499, listeners_21497, render_queue_21498) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_21498, cljs.core.empty);
      };
    }(x21490_21499, listeners_21497, render_queue_21498);
    x21490_21499.om$core$INotify$ = true;
    x21490_21499.om$core$INotify$_listen_BANG_$arity$3 = function(x21490_21499, listeners_21497, render_queue_21498) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_21497, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x21490_21499, listeners_21497, render_queue_21498);
    x21490_21499.om$core$INotify$_unlisten_BANG_$arity$2 = function(x21490_21499, listeners_21497, render_queue_21498) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_21497, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x21490_21499, listeners_21497, render_queue_21498);
    x21490_21499.om$core$INotify$_notify_BANG_$arity$3 = function(x21490_21499, listeners_21497, render_queue_21498) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__21491_21500 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_21497));
        var chunk__21492_21501 = null;
        var count__21493_21502 = 0;
        var i__21494_21503 = 0;
        while (true) {
          if (i__21494_21503 < count__21493_21502) {
            var vec__21495_21504 = cljs.core._nth.call(null, chunk__21492_21501, i__21494_21503);
            var __21505 = cljs.core.nth.call(null, vec__21495_21504, 0, null);
            var f_21506 = cljs.core.nth.call(null, vec__21495_21504, 1, null);
            f_21506.call(null, tx_data, root_cursor);
            var G__21507 = seq__21491_21500;
            var G__21508 = chunk__21492_21501;
            var G__21509 = count__21493_21502;
            var G__21510 = i__21494_21503 + 1;
            seq__21491_21500 = G__21507;
            chunk__21492_21501 = G__21508;
            count__21493_21502 = G__21509;
            i__21494_21503 = G__21510;
            continue;
          } else {
            var temp__4126__auto___21511 = cljs.core.seq.call(null, seq__21491_21500);
            if (temp__4126__auto___21511) {
              var seq__21491_21512__$1 = temp__4126__auto___21511;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__21491_21512__$1)) {
                var c__4309__auto___21513 = cljs.core.chunk_first.call(null, seq__21491_21512__$1);
                var G__21514 = cljs.core.chunk_rest.call(null, seq__21491_21512__$1);
                var G__21515 = c__4309__auto___21513;
                var G__21516 = cljs.core.count.call(null, c__4309__auto___21513);
                var G__21517 = 0;
                seq__21491_21500 = G__21514;
                chunk__21492_21501 = G__21515;
                count__21493_21502 = G__21516;
                i__21494_21503 = G__21517;
                continue;
              } else {
                var vec__21496_21518 = cljs.core.first.call(null, seq__21491_21512__$1);
                var __21519 = cljs.core.nth.call(null, vec__21496_21518, 0, null);
                var f_21520 = cljs.core.nth.call(null, vec__21496_21518, 1, null);
                f_21520.call(null, tx_data, root_cursor);
                var G__21521 = cljs.core.next.call(null, seq__21491_21512__$1);
                var G__21522 = null;
                var G__21523 = 0;
                var G__21524 = 0;
                seq__21491_21500 = G__21521;
                chunk__21492_21501 = G__21522;
                count__21493_21502 = G__21523;
                i__21494_21503 = G__21524;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x21490_21499, listeners_21497, render_queue_21498);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__21525) {
  var map__21540 = p__21525;
  var map__21540__$1 = cljs.core.seq_QMARK_.call(null, map__21540) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21540) : map__21540;
  var options = map__21540__$1;
  var instrument = cljs.core.get.call(null, map__21540__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__21540__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__21540__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__21540__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (!(target == null)) {
  } else {
    throw new Error("Assert failed: No target specified to om.core/root\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))));
  }
  var roots_SINGLEQUOTE__21554 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__21554, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__21554, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__21541 = value;
    if (G__21541) {
      var bit__4203__auto__ = G__21541.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4203__auto__ || G__21541.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__21541.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__21541);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__21541);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168));
  var rootf = function(watch_key, state, state__$1, m, map__21540, map__21540__$1, options, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_21548 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_21549 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_21549;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_21548;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__21550_21555 = cljs.core.seq.call(null, queue);
        var chunk__21551_21556 = null;
        var count__21552_21557 = 0;
        var i__21553_21558 = 0;
        while (true) {
          if (i__21553_21558 < count__21552_21557) {
            var c_21559 = cljs.core._nth.call(null, chunk__21551_21556, i__21553_21558);
            if (cljs.core.truth_(c_21559.isMounted())) {
              c_21559.forceUpdate();
            } else {
            }
            var G__21560 = seq__21550_21555;
            var G__21561 = chunk__21551_21556;
            var G__21562 = count__21552_21557;
            var G__21563 = i__21553_21558 + 1;
            seq__21550_21555 = G__21560;
            chunk__21551_21556 = G__21561;
            count__21552_21557 = G__21562;
            i__21553_21558 = G__21563;
            continue;
          } else {
            var temp__4126__auto___21564 = cljs.core.seq.call(null, seq__21550_21555);
            if (temp__4126__auto___21564) {
              var seq__21550_21565__$1 = temp__4126__auto___21564;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__21550_21565__$1)) {
                var c__4309__auto___21566 = cljs.core.chunk_first.call(null, seq__21550_21565__$1);
                var G__21567 = cljs.core.chunk_rest.call(null, seq__21550_21565__$1);
                var G__21568 = c__4309__auto___21566;
                var G__21569 = cljs.core.count.call(null, c__4309__auto___21566);
                var G__21570 = 0;
                seq__21550_21555 = G__21567;
                chunk__21551_21556 = G__21568;
                count__21552_21557 = G__21569;
                i__21553_21558 = G__21570;
                continue;
              } else {
                var c_21571 = cljs.core.first.call(null, seq__21550_21565__$1);
                if (cljs.core.truth_(c_21571.isMounted())) {
                  c_21571.forceUpdate();
                } else {
                }
                var G__21572 = cljs.core.next.call(null, seq__21550_21565__$1);
                var G__21573 = null;
                var G__21574 = 0;
                var G__21575 = 0;
                seq__21550_21555 = G__21572;
                chunk__21551_21556 = G__21573;
                count__21552_21557 = G__21574;
                i__21553_21558 = G__21575;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m, map__21540, map__21540__$1, options, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, m, rootf, map__21540, map__21540__$1, options, instrument, path, tx_listen, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(watch_key, state, state__$1, m, rootf, map__21540, map__21540__$1, options, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, m, rootf, map__21540, map__21540__$1, options, instrument, path, tx_listen, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, m, rootf, map__21540, map__21540__$1, options, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("om_tools.core");
goog.require("cljs.core");
goog.require("plumbing.core");
goog.require("plumbing.core");
goog.require("plumbing.fnk.schema");
goog.require("om.core");
goog.require("om.core");
om_tools.core.state_proxy = function state_proxy(owner) {
  if (cljs.core.truth_(owner)) {
    var get_state = function() {
      return om.core.get_state.call(null, owner);
    };
    if (typeof om_tools.core.t20347 !== "undefined") {
    } else {
      om_tools.core.t20347 = function(get_state, owner, state_proxy, meta20348) {
        this.get_state = get_state;
        this.owner = owner;
        this.state_proxy = state_proxy;
        this.meta20348 = meta20348;
        this.cljs$lang$protocol_mask$partition1$ = 98304;
        this.cljs$lang$protocol_mask$partition0$ = 425984;
      };
      om_tools.core.t20347.cljs$lang$type = true;
      om_tools.core.t20347.cljs$lang$ctorStr = "om-tools.core/t20347";
      om_tools.core.t20347.cljs$lang$ctorPrWriter = function(get_state) {
        return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
          return cljs.core._write.call(null, writer__4121__auto__, "om-tools.core/t20347");
        };
      }(get_state);
      om_tools.core.t20347.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(get_state) {
        return function(s, f) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null)));
        };
      }(get_state);
      om_tools.core.t20347.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(get_state) {
        return function(s, f, x) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null), x));
        };
      }(get_state);
      om_tools.core.t20347.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(get_state) {
        return function(s, f, x, y) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null), x, y));
        };
      }(get_state);
      om_tools.core.t20347.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(get_state) {
        return function(s, f, x, y, more) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, cljs.core.apply.call(null, f, self__.get_state.call(null), x, y, more));
        };
      }(get_state);
      om_tools.core.t20347.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(get_state) {
        return function(_, v) {
          var self__ = this;
          var ___$1 = this;
          return om.core.set_state_BANG_.call(null, self__.owner, v);
        };
      }(get_state);
      om_tools.core.t20347.prototype.cljs$core$IDeref$_deref$arity$1 = function(get_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.get_state.call(null);
        };
      }(get_state);
      om_tools.core.t20347.prototype.cljs$core$IMeta$_meta$arity$1 = function(get_state) {
        return function(_20349) {
          var self__ = this;
          var _20349__$1 = this;
          return self__.meta20348;
        };
      }(get_state);
      om_tools.core.t20347.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(get_state) {
        return function(_20349, meta20348__$1) {
          var self__ = this;
          var _20349__$1 = this;
          return new om_tools.core.t20347(self__.get_state, self__.owner, self__.state_proxy, meta20348__$1);
        };
      }(get_state);
      om_tools.core.__GT_t20347 = function(get_state) {
        return function __GT_t20347(get_state__$1, owner__$1, state_proxy__$1, meta20348) {
          return new om_tools.core.t20347(get_state__$1, owner__$1, state_proxy__$1, meta20348);
        };
      }(get_state);
    }
    return new om_tools.core.t20347(get_state, owner, state_proxy, null);
  } else {
    return null;
  }
};
om_tools.core.set_state_QMARK__BANG_ = function() {
  var set_state_QMARK__BANG_ = null;
  var set_state_QMARK__BANG___2 = function(owner, v) {
    if (cljs.core._EQ_.call(null, v, om.core.get_state.call(null, owner))) {
      return null;
    } else {
      return om.core.set_state_BANG_.call(null, owner, v);
    }
  };
  var set_state_QMARK__BANG___3 = function(owner, korks, v) {
    if (cljs.core._EQ_.call(null, v, om.core.get_state.call(null, owner, korks))) {
      return null;
    } else {
      return om.core.set_state_BANG_.call(null, owner, korks, v);
    }
  };
  set_state_QMARK__BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_QMARK__BANG___2.call(this, owner, korks);
      case 3:
        return set_state_QMARK__BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_QMARK__BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_QMARK__BANG___2;
  set_state_QMARK__BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_QMARK__BANG___3;
  return set_state_QMARK__BANG_;
}();
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__21311_SHARP_) {
      return max === p1__21311_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__21312__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__21312 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21312__delegate.call(this, s1, s2, sets);
    };
    G__21312.cljs$lang$maxFixedArity = 2;
    G__21312.cljs$lang$applyTo = function(arglist__21313) {
      var s1 = cljs.core.first(arglist__21313);
      arglist__21313 = cljs.core.next(arglist__21313);
      var s2 = cljs.core.first(arglist__21313);
      var sets = cljs.core.rest(arglist__21313);
      return G__21312__delegate(s1, s2, sets);
    };
    G__21312.cljs$core$IFn$_invoke$arity$variadic = G__21312__delegate;
    return G__21312;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__21315 = s2;
        var G__21316 = s1;
        s1 = G__21315;
        s2 = G__21316;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__21317__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__21314_SHARP_) {
        return-cljs.core.count.call(null, p1__21314_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__21317 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21317__delegate.call(this, s1, s2, sets);
    };
    G__21317.cljs$lang$maxFixedArity = 2;
    G__21317.cljs$lang$applyTo = function(arglist__21318) {
      var s1 = cljs.core.first(arglist__21318);
      arglist__21318 = cljs.core.next(arglist__21318);
      var s2 = cljs.core.first(arglist__21318);
      var sets = cljs.core.rest(arglist__21318);
      return G__21317__delegate(s1, s2, sets);
    };
    G__21317.cljs$core$IFn$_invoke$arity$variadic = G__21317__delegate;
    return G__21317;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__21319__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__21319 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__21319__delegate.call(this, s1, s2, sets);
    };
    G__21319.cljs$lang$maxFixedArity = 2;
    G__21319.cljs$lang$applyTo = function(arglist__21320) {
      var s1 = cljs.core.first(arglist__21320);
      arglist__21320 = cljs.core.next(arglist__21320);
      var s2 = cljs.core.first(arglist__21320);
      var sets = cljs.core.rest(arglist__21320);
      return G__21319__delegate(s1, s2, sets);
    };
    G__21319.cljs$core$IFn$_invoke$arity$variadic = G__21319__delegate;
    return G__21319;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__21321_SHARP_) {
    return cljs.core.select_keys.call(null, p1__21321_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__21324) {
    var vec__21325 = p__21324;
    var old = cljs.core.nth.call(null, vec__21325, 0, null);
    var new$ = cljs.core.nth.call(null, vec__21325, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__21326_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__21326_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__21329) {
    var vec__21330 = p__21329;
    var k = cljs.core.nth.call(null, vec__21330, 0, null);
    var v = cljs.core.nth.call(null, vec__21330, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__21337 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__21337, 0, null);
      var s = cljs.core.nth.call(null, vec__21337, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__21337, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__21337, r, s, idx) {
              return function(p1__21331_SHARP_, p2__21332_SHARP_) {
                return cljs.core.conj.call(null, p1__21331_SHARP_, cljs.core.merge.call(null, p2__21332_SHARP_, x));
              };
            }(found, ks, vec__21337, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__21337, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__21338 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__21338, 0, null);
    var s = cljs.core.nth.call(null, vec__21338, 1, null);
    var k = cljs.core.nth.call(null, vec__21338, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__21338, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__21338, r, s, k, idx) {
            return function(p1__21333_SHARP_, p2__21334_SHARP_) {
              return cljs.core.conj.call(null, p1__21333_SHARP_, cljs.core.merge.call(null, p2__21334_SHARP_, x));
            };
          }(found, vec__21338, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__21338, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__21339_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__21339_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__21340_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__21340_SHARP_);
  }, set2);
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__21279) {
    var vec__21280 = p__21279;
    var k = cljs.core.nth.call(null, vec__21280, 0, null);
    var v = cljs.core.nth.call(null, vec__21280, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__21283) {
    var vec__21284 = p__21283;
    var k = cljs.core.nth.call(null, vec__21284, 0, null);
    var v = cljs.core.nth.call(null, vec__21284, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("sablono.util");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("clojure.string");
goog.require("clojure.walk");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("goog.Uri");
sablono.util._STAR_base_url_STAR_ = null;
sablono.util.ToString = function() {
  var obj21290 = {};
  return obj21290;
}();
sablono.util.to_str = function to_str(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.sablono$util$ToString$to_str$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.sablono$util$ToString$to_str$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = sablono.util.to_str[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = sablono.util.to_str["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToString.to-str", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.ToURI = function() {
  var obj21292 = {};
  return obj21292;
}();
sablono.util.to_uri = function to_uri(x) {
  if (function() {
    var and__3541__auto__ = x;
    if (and__3541__auto__) {
      return x.sablono$util$ToURI$to_uri$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return x.sablono$util$ToURI$to_uri$arity$1(x);
  } else {
    var x__4180__auto__ = x == null ? null : x;
    return function() {
      var or__3553__auto__ = sablono.util.to_uri[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = sablono.util.to_uri["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToURI.to-uri", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.as_str = function() {
  var as_str__delegate = function(xs) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, sablono.util.to_str, xs));
  };
  var as_str = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return as_str__delegate.call(this, xs);
  };
  as_str.cljs$lang$maxFixedArity = 0;
  as_str.cljs$lang$applyTo = function(arglist__21293) {
    var xs = cljs.core.seq(arglist__21293);
    return as_str__delegate(xs);
  };
  as_str.cljs$core$IFn$_invoke$arity$variadic = as_str__delegate;
  return as_str;
}();
sablono.util.camel_case = function camel_case(k) {
  if (cljs.core.truth_(k)) {
    var vec__21295 = clojure.string.split.call(null, cljs.core.name.call(null, k), /-/);
    var first_word = cljs.core.nth.call(null, vec__21295, 0, null);
    var words = cljs.core.nthnext.call(null, vec__21295, 1);
    if (cljs.core.empty_QMARK_.call(null, words) || cljs.core._EQ_.call(null, "aria", first_word) || cljs.core._EQ_.call(null, "data", first_word)) {
      return k;
    } else {
      return cljs.core.keyword.call(null, clojure.string.join.call(null, cljs.core.conj.call(null, cljs.core.map.call(null, clojure.string.capitalize, words), first_word)));
    }
  } else {
    return null;
  }
};
sablono.util.camel_case_keys = function camel_case_keys(m) {
  var f = function(p__21298) {
    var vec__21299 = p__21298;
    var k = cljs.core.nth.call(null, vec__21299, 0, null);
    var v = cljs.core.nth.call(null, vec__21299, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.util.camel_case.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
sablono.util.html_to_dom_attrs = function html_to_dom_attrs(attrs) {
  return clojure.set.rename_keys.call(null, sablono.util.camel_case_keys.call(null, attrs), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "className", "className", -1983287057), new cljs.core.Keyword(null, "for", "for", -1323786319), new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720)], null));
};
sablono.util.compact_map = function compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var v = cljs.core.get.call(null, m__$1, k);
    if (cljs.core.empty_QMARK_.call(null, v)) {
      return cljs.core.dissoc.call(null, m__$1, k);
    } else {
      return m__$1;
    }
  }, m, cljs.core.keys.call(null, m));
};
sablono.util.merge_with_class = function() {
  var merge_with_class__delegate = function(maps) {
    var classes = cljs.core.vec.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.mapcat.call(null, function(p1__21300_SHARP_) {
      if (cljs.core.list_QMARK_.call(null, p1__21300_SHARP_)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__21300_SHARP_], null);
      } else {
        if (cljs.core.sequential_QMARK_.call(null, p1__21300_SHARP_)) {
          return p1__21300_SHARP_;
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__21300_SHARP_], null);
        }
      }
    }, cljs.core.map.call(null, new cljs.core.Keyword(null, "class", "class", -2030961996), maps))));
    var maps__$1 = cljs.core.apply.call(null, cljs.core.merge, maps);
    if (cljs.core.empty_QMARK_.call(null, classes)) {
      return maps__$1;
    } else {
      return cljs.core.assoc.call(null, maps__$1, new cljs.core.Keyword(null, "class", "class", -2030961996), classes);
    }
  };
  var merge_with_class = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge_with_class__delegate.call(this, maps);
  };
  merge_with_class.cljs$lang$maxFixedArity = 0;
  merge_with_class.cljs$lang$applyTo = function(arglist__21301) {
    var maps = cljs.core.seq(arglist__21301);
    return merge_with_class__delegate(maps);
  };
  merge_with_class.cljs$core$IFn$_invoke$arity$variadic = merge_with_class__delegate;
  return merge_with_class;
}();
sablono.util.strip_css = function strip_css(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, /^[.#]/, "");
  } else {
    return null;
  }
};
sablono.util.match_tag = function match_tag(s) {
  var matches = cljs.core.re_seq.call(null, /[#.]?[^#.]+/, cljs.core.name.call(null, s));
  var vec__21305 = cljs.core.empty_QMARK_.call(null, matches) ? function() {
    throw cljs.core.ex_info.call(null, "Can't match CSS tag: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), s], null));
  }() : cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["#", null, ".", null], null), null)).call(null, cljs.core.ffirst.call(null, matches))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["div", matches], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, matches), cljs.core.rest.call(null, matches)], null);
  var tag_name = cljs.core.nth.call(null, vec__21305, 0, null);
  var names = cljs.core.nth.call(null, vec__21305, 1, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_name, cljs.core.first.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__21305, tag_name, names) {
    return function(p1__21302_SHARP_) {
      return cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, p1__21302_SHARP_));
    };
  }(matches, vec__21305, tag_name, names), names))), cljs.core.vec.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__21305, tag_name, names) {
    return function(p1__21303_SHARP_) {
      return cljs.core._EQ_.call(null, ".", cljs.core.first.call(null, p1__21303_SHARP_));
    };
  }(matches, vec__21305, tag_name, names), names)))], null);
};
sablono.util.normalize_element = function normalize_element(p__21306) {
  var vec__21309 = p__21306;
  var tag = cljs.core.nth.call(null, vec__21309, 0, null);
  var content = cljs.core.nthnext.call(null, vec__21309, 1);
  if (!(tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string")) {
    throw cljs.core.ex_info.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + " is not a valid element name.", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag, new cljs.core.Keyword(null, "content", "content", 15833224), content], null));
  } else {
  }
  var vec__21310 = sablono.util.match_tag.call(null, tag);
  var tag__$1 = cljs.core.nth.call(null, vec__21310, 0, null);
  var id = cljs.core.nth.call(null, vec__21310, 1, null);
  var class$ = cljs.core.nth.call(null, vec__21310, 2, null);
  var tag_attrs = sablono.util.compact_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), class$], null));
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, sablono.util.merge_with_class.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
sablono.util.join_classes = function join_classes(classes) {
  return clojure.string.join.call(null, " ", cljs.core.flatten.call(null, classes));
};
sablono.util.react_symbol = function react_symbol(tag) {
  return cljs.core.symbol.call(null, "js", "React.DOM." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, tag)));
};
sablono.util.react_fn = function react_fn(tag) {
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), null, new cljs.core.Keyword(null, "option", "option", 65132272), null, new cljs.core.Keyword(null, "input", "input", 556931961), null], null), null), cljs.core.keyword.call(null, tag))) {
    return cljs.core.symbol.call(null, "sablono.interpreter", cljs.core.name.call(null, tag));
  } else {
    return sablono.util.react_symbol.call(null, tag);
  }
};
sablono.util.attr_pattern = function attr_pattern(attr) {
  return cljs.core.re_pattern.call(null, "\\s+" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, attr)) + "\\s*\x3d\\s*['\"][^\"']+['\"]");
};
sablono.util.strip_attr = function strip_attr(s, attr) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, sablono.util.attr_pattern.call(null, attr), "");
  } else {
    return null;
  }
};
sablono.util.strip_outer = function strip_outer(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, s, /^\s*<[^>]+>\s*/, ""), /\s*<\/[^>]+>\s*$/, "");
  } else {
    return null;
  }
};
sablono.util.ToString["_"] = true;
sablono.util.to_str["_"] = function(x) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
};
sablono.util.ToString["number"] = true;
sablono.util.to_str["number"] = function(x) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
};
sablono.util.ToString["null"] = true;
sablono.util.to_str["null"] = function(_) {
  return "";
};
goog.Uri.prototype.sablono$util$ToString$ = true;
goog.Uri.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  if (cljs.core.truth_(function() {
    var or__3553__auto__ = x__$1.hasDomain();
    if (cljs.core.truth_(or__3553__auto__)) {
      return or__3553__auto__;
    } else {
      return x__$1.getPath() == null || cljs.core.not.call(null, cljs.core.re_matches.call(null, /^\/.*/, x__$1.getPath()));
    }
  }())) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
  } else {
    var base = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util._STAR_base_url_STAR_);
    if (cljs.core.truth_(cljs.core.re_matches.call(null, /.*\/$/, base))) {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, base, 0, cljs.core.count.call(null, base) - 1)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
    } else {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(base) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
    }
  }
};
cljs.core.Keyword.prototype.sablono$util$ToString$ = true;
cljs.core.Keyword.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.name.call(null, x__$1);
};
sablono.util.ToURI["_"] = true;
sablono.util.to_uri["_"] = function(x) {
  return new goog.Uri("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
};
goog.Uri.prototype.sablono$util$ToURI$ = true;
goog.Uri.prototype.sablono$util$ToURI$to_uri$arity$1 = function(x) {
  var x__$1 = this;
  return x__$1;
};
goog.provide("sablono.interpreter");
goog.require("cljs.core");
goog.require("sablono.util");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("clojure.string");
sablono.interpreter.IInterpreter = function() {
  var obj21286 = {};
  return obj21286;
}();
sablono.interpreter.interpret = function interpret(this$) {
  if (function() {
    var and__3541__auto__ = this$;
    if (and__3541__auto__) {
      return this$.sablono$interpreter$IInterpreter$interpret$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return this$.sablono$interpreter$IInterpreter$interpret$arity$1(this$);
  } else {
    var x__4180__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3553__auto__ = sablono.interpreter.interpret[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = sablono.interpreter.interpret["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInterpreter.interpret", this$);
        }
      }
    }().call(null, this$);
  }
};
sablono.interpreter.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
sablono.interpreter.input = sablono.interpreter.wrap_form_element.call(null, React.DOM.input, "input");
sablono.interpreter.option = sablono.interpreter.wrap_form_element.call(null, React.DOM.option, "option");
sablono.interpreter.textarea = sablono.interpreter.wrap_form_element.call(null, React.DOM.textarea, "textarea");
sablono.interpreter.dom_fn = function dom_fn(tag) {
  var temp__4124__auto__ = React.DOM[cljs.core.name.call(null, tag)];
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dom_fn__$1 = temp__4124__auto__;
    return cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "input", "input", 556931961), sablono.interpreter.input, new cljs.core.Keyword(null, "option", "option", 65132272), sablono.interpreter.option, new cljs.core.Keyword(null, "textarea", "textarea", -650375824), sablono.interpreter.textarea], null), cljs.core.keyword.call(null, tag), dom_fn__$1);
  } else {
    throw cljs.core.ex_info.call(null, "Unsupported HTML tag: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, tag)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag], null));
  }
};
sablono.interpreter.attributes = function attributes(attrs) {
  var attrs__$1 = cljs.core.clj__GT_js.call(null, sablono.util.html_to_dom_attrs.call(null, attrs));
  var class$ = attrs__$1.className;
  var class$__$1 = class$ instanceof Array ? clojure.string.join.call(null, " ", class$) : class$;
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, class$__$1))) {
    delete attrs__$1["className"];
  } else {
    attrs__$1.className = class$__$1;
  }
  return attrs__$1;
};
sablono.interpreter.element = function element(element__$1) {
  var vec__21288 = sablono.util.normalize_element.call(null, element__$1);
  var tag = cljs.core.nth.call(null, vec__21288, 0, null);
  var attrs = cljs.core.nth.call(null, vec__21288, 1, null);
  var content = cljs.core.nth.call(null, vec__21288, 2, null);
  var f = sablono.interpreter.dom_fn.call(null, tag);
  var js_attrs = sablono.interpreter.attributes.call(null, attrs);
  if (cljs.core.sequential_QMARK_.call(null, content) && cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, content))) {
    return f.call(null, js_attrs, sablono.interpreter.interpret.call(null, cljs.core.first.call(null, content)));
  } else {
    if (cljs.core.truth_(content)) {
      return cljs.core.apply.call(null, f, js_attrs, sablono.interpreter.interpret.call(null, content));
    } else {
      return f.call(null, js_attrs, null);
    }
  }
};
sablono.interpreter.interpret_seq = function interpret_seq(s) {
  return cljs.core.into_array.call(null, cljs.core.map.call(null, sablono.interpreter.interpret, s));
};
sablono.interpreter.IInterpreter["null"] = true;
sablono.interpreter.interpret["null"] = function(this$) {
  return null;
};
sablono.interpreter.IInterpreter["_"] = true;
sablono.interpreter.interpret["_"] = function(this$) {
  return this$;
};
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.List.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.List.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
goog.provide("sablono.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("sablono.interpreter");
goog.require("sablono.interpreter");
goog.require("sablono.util");
goog.require("clojure.walk");
goog.require("clojure.string");
sablono.core.wrap_attrs = function wrap_attrs(func) {
  return function() {
    var G__21177__delegate = function(args) {
      if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__21176 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag = cljs.core.nth.call(null, vec__21176, 0, null);
        var body = cljs.core.nthnext.call(null, vec__21176, 1);
        if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.merge.call(null, cljs.core.first.call(null, body), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body));
        } else {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.first.call(null, args), body);
        }
      } else {
        return cljs.core.apply.call(null, func, args);
      }
    };
    var G__21177 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__21177__delegate.call(this, args);
    };
    G__21177.cljs$lang$maxFixedArity = 0;
    G__21177.cljs$lang$applyTo = function(arglist__21178) {
      var args = cljs.core.seq(arglist__21178);
      return G__21177__delegate(args);
    };
    G__21177.cljs$core$IFn$_invoke$arity$variadic = G__21177__delegate;
    return G__21177;
  }();
};
sablono.core.update_arglists = function update_arglists(arglists) {
  var iter__4278__auto__ = function iter__21183(s__21184) {
    return new cljs.core.LazySeq(null, function() {
      var s__21184__$1 = s__21184;
      while (true) {
        var temp__4126__auto__ = cljs.core.seq.call(null, s__21184__$1);
        if (temp__4126__auto__) {
          var s__21184__$2 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__21184__$2)) {
            var c__4276__auto__ = cljs.core.chunk_first.call(null, s__21184__$2);
            var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
            var b__21186 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
            if (function() {
              var i__21185 = 0;
              while (true) {
                if (i__21185 < size__4277__auto__) {
                  var args = cljs.core._nth.call(null, c__4276__auto__, i__21185);
                  cljs.core.chunk_append.call(null, b__21186, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)));
                  var G__21187 = i__21185 + 1;
                  i__21185 = G__21187;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21186), iter__21183.call(null, cljs.core.chunk_rest.call(null, s__21184__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21186), null);
            }
          } else {
            var args = cljs.core.first.call(null, s__21184__$2);
            return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)), iter__21183.call(null, cljs.core.rest.call(null, s__21184__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4278__auto__.call(null, arglists);
};
sablono.core.render = function render(component) {
  return React.renderComponentToString(component);
};
sablono.core.include_css = function() {
  var include_css__delegate = function(styles) {
    var iter__4278__auto__ = function iter__21192(s__21193) {
      return new cljs.core.LazySeq(null, function() {
        var s__21193__$1 = s__21193;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__21193__$1);
          if (temp__4126__auto__) {
            var s__21193__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__21193__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__21193__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__21195 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__21194 = 0;
                while (true) {
                  if (i__21194 < size__4277__auto__) {
                    var style = cljs.core._nth.call(null, c__4276__auto__, i__21194);
                    cljs.core.chunk_append.call(null, b__21195, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null));
                    var G__21196 = i__21194 + 1;
                    i__21194 = G__21196;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21195), iter__21192.call(null, cljs.core.chunk_rest.call(null, s__21193__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21195), null);
              }
            } else {
              var style = cljs.core.first.call(null, s__21193__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null), iter__21192.call(null, 
              cljs.core.rest.call(null, s__21193__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, styles);
  };
  var include_css = function(var_args) {
    var styles = null;
    if (arguments.length > 0) {
      styles = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return include_css__delegate.call(this, styles);
  };
  include_css.cljs$lang$maxFixedArity = 0;
  include_css.cljs$lang$applyTo = function(arglist__21197) {
    var styles = cljs.core.seq(arglist__21197);
    return include_css__delegate(styles);
  };
  include_css.cljs$core$IFn$_invoke$arity$variadic = include_css__delegate;
  return include_css;
}();
sablono.core.include_js = function include_js(src) {
  return goog.dom.appendChild(goog.dom.getDocument().body, goog.dom.createDom("script", {"src":src}));
};
sablono.core.include_react = function include_react() {
  return sablono.core.include_js.call(null, "http://fb.me/react-0.9.0.js");
};
sablono.core.link_to21198 = function() {
  var link_to21198__delegate = function(url, content) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, url)], null), content], null);
  };
  var link_to21198 = function(url, var_args) {
    var content = null;
    if (arguments.length > 1) {
      content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link_to21198__delegate.call(this, url, content);
  };
  link_to21198.cljs$lang$maxFixedArity = 1;
  link_to21198.cljs$lang$applyTo = function(arglist__21199) {
    var url = cljs.core.first(arglist__21199);
    var content = cljs.core.rest(arglist__21199);
    return link_to21198__delegate(url, content);
  };
  link_to21198.cljs$core$IFn$_invoke$arity$variadic = link_to21198__delegate;
  return link_to21198;
}();
sablono.core.link_to = sablono.core.wrap_attrs.call(null, sablono.core.link_to21198);
sablono.core.mail_to21200 = function() {
  var mail_to21200__delegate = function(e_mail, p__21201) {
    var vec__21203 = p__21201;
    var content = cljs.core.nth.call(null, vec__21203, 0, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "mailto:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(e_mail)], null), function() {
      var or__3553__auto__ = content;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return e_mail;
      }
    }()], null);
  };
  var mail_to21200 = function(e_mail, var_args) {
    var p__21201 = null;
    if (arguments.length > 1) {
      p__21201 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mail_to21200__delegate.call(this, e_mail, p__21201);
  };
  mail_to21200.cljs$lang$maxFixedArity = 1;
  mail_to21200.cljs$lang$applyTo = function(arglist__21204) {
    var e_mail = cljs.core.first(arglist__21204);
    var p__21201 = cljs.core.rest(arglist__21204);
    return mail_to21200__delegate(e_mail, p__21201);
  };
  mail_to21200.cljs$core$IFn$_invoke$arity$variadic = mail_to21200__delegate;
  return mail_to21200;
}();
sablono.core.mail_to = sablono.core.wrap_attrs.call(null, sablono.core.mail_to21200);
sablono.core.unordered_list21205 = function unordered_list21205(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
    var iter__4278__auto__ = function iter__21210(s__21211) {
      return new cljs.core.LazySeq(null, function() {
        var s__21211__$1 = s__21211;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__21211__$1);
          if (temp__4126__auto__) {
            var s__21211__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__21211__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__21211__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__21213 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__21212 = 0;
                while (true) {
                  if (i__21212 < size__4277__auto__) {
                    var x = cljs.core._nth.call(null, c__4276__auto__, i__21212);
                    cljs.core.chunk_append.call(null, b__21213, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__21214 = i__21212 + 1;
                    i__21212 = G__21214;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21213), iter__21210.call(null, cljs.core.chunk_rest.call(null, s__21211__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21213), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__21211__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__21210.call(null, cljs.core.rest.call(null, s__21211__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, coll);
  }()], null);
};
sablono.core.unordered_list = sablono.core.wrap_attrs.call(null, sablono.core.unordered_list21205);
sablono.core.ordered_list21215 = function ordered_list21215(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ol", "ol", 932524051), function() {
    var iter__4278__auto__ = function iter__21220(s__21221) {
      return new cljs.core.LazySeq(null, function() {
        var s__21221__$1 = s__21221;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__21221__$1);
          if (temp__4126__auto__) {
            var s__21221__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__21221__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__21221__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__21223 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__21222 = 0;
                while (true) {
                  if (i__21222 < size__4277__auto__) {
                    var x = cljs.core._nth.call(null, c__4276__auto__, i__21222);
                    cljs.core.chunk_append.call(null, b__21223, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__21224 = i__21222 + 1;
                    i__21222 = G__21224;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21223), iter__21220.call(null, cljs.core.chunk_rest.call(null, s__21221__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21223), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__21221__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__21220.call(null, cljs.core.rest.call(null, s__21221__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, coll);
  }()], null);
};
sablono.core.ordered_list = sablono.core.wrap_attrs.call(null, sablono.core.ordered_list21215);
sablono.core.image21225 = function() {
  var image21225 = null;
  var image21225__1 = function(src) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src)], null)], null);
  };
  var image21225__2 = function(src, alt) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src), new cljs.core.Keyword(null, "alt", "alt", -3214426), alt], null)], null);
  };
  image21225 = function(src, alt) {
    switch(arguments.length) {
      case 1:
        return image21225__1.call(this, src);
      case 2:
        return image21225__2.call(this, src, alt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  image21225.cljs$core$IFn$_invoke$arity$1 = image21225__1;
  image21225.cljs$core$IFn$_invoke$arity$2 = image21225__2;
  return image21225;
}();
sablono.core.image = sablono.core.wrap_attrs.call(null, sablono.core.image21225);
sablono.core._STAR_group_STAR_ = cljs.core.PersistentVector.EMPTY;
sablono.core.make_name = function make_name(name) {
  return cljs.core.reduce.call(null, function(p1__21226_SHARP_, p2__21227_SHARP_) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__21226_SHARP_) + "[" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__21227_SHARP_) + "]";
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.make_id = function make_id(name) {
  return cljs.core.reduce.call(null, function(p1__21228_SHARP_, p2__21229_SHARP_) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__21228_SHARP_) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__21229_SHARP_);
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.input_field_STAR_ = function input_field_STAR_(type, name, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), 
  value], null)], null);
};
sablono.core.color_field21230 = function() {
  var color_field21230 = null;
  var color_field21230__1 = function(name__9485__auto__) {
    return color_field21230.call(null, name__9485__auto__, null);
  };
  var color_field21230__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "color", "color", -1642760596, null)), name__9485__auto__, value__9486__auto__);
  };
  color_field21230 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return color_field21230__1.call(this, name__9485__auto__);
      case 2:
        return color_field21230__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  color_field21230.cljs$core$IFn$_invoke$arity$1 = color_field21230__1;
  color_field21230.cljs$core$IFn$_invoke$arity$2 = color_field21230__2;
  return color_field21230;
}();
sablono.core.color_field = sablono.core.wrap_attrs.call(null, sablono.core.color_field21230);
sablono.core.date_field21231 = function() {
  var date_field21231 = null;
  var date_field21231__1 = function(name__9485__auto__) {
    return date_field21231.call(null, name__9485__auto__, null);
  };
  var date_field21231__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "date", "date", 177097065, null)), name__9485__auto__, value__9486__auto__);
  };
  date_field21231 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return date_field21231__1.call(this, name__9485__auto__);
      case 2:
        return date_field21231__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_field21231.cljs$core$IFn$_invoke$arity$1 = date_field21231__1;
  date_field21231.cljs$core$IFn$_invoke$arity$2 = date_field21231__2;
  return date_field21231;
}();
sablono.core.date_field = sablono.core.wrap_attrs.call(null, sablono.core.date_field21231);
sablono.core.datetime_field21232 = function() {
  var datetime_field21232 = null;
  var datetime_field21232__1 = function(name__9485__auto__) {
    return datetime_field21232.call(null, name__9485__auto__, null);
  };
  var datetime_field21232__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "datetime", "datetime", 2135207229, null)), name__9485__auto__, value__9486__auto__);
  };
  datetime_field21232 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_field21232__1.call(this, name__9485__auto__);
      case 2:
        return datetime_field21232__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_field21232.cljs$core$IFn$_invoke$arity$1 = datetime_field21232__1;
  datetime_field21232.cljs$core$IFn$_invoke$arity$2 = datetime_field21232__2;
  return datetime_field21232;
}();
sablono.core.datetime_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_field21232);
sablono.core.datetime_local_field21233 = function() {
  var datetime_local_field21233 = null;
  var datetime_local_field21233__1 = function(name__9485__auto__) {
    return datetime_local_field21233.call(null, name__9485__auto__, null);
  };
  var datetime_local_field21233__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "datetime-local", "datetime-local", -507312697, null)), name__9485__auto__, value__9486__auto__);
  };
  datetime_local_field21233 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_local_field21233__1.call(this, name__9485__auto__);
      case 2:
        return datetime_local_field21233__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_local_field21233.cljs$core$IFn$_invoke$arity$1 = datetime_local_field21233__1;
  datetime_local_field21233.cljs$core$IFn$_invoke$arity$2 = datetime_local_field21233__2;
  return datetime_local_field21233;
}();
sablono.core.datetime_local_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_local_field21233);
sablono.core.email_field21234 = function() {
  var email_field21234 = null;
  var email_field21234__1 = function(name__9485__auto__) {
    return email_field21234.call(null, name__9485__auto__, null);
  };
  var email_field21234__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "email", "email", -1238619063, null)), name__9485__auto__, value__9486__auto__);
  };
  email_field21234 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return email_field21234__1.call(this, name__9485__auto__);
      case 2:
        return email_field21234__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  email_field21234.cljs$core$IFn$_invoke$arity$1 = email_field21234__1;
  email_field21234.cljs$core$IFn$_invoke$arity$2 = email_field21234__2;
  return email_field21234;
}();
sablono.core.email_field = sablono.core.wrap_attrs.call(null, sablono.core.email_field21234);
sablono.core.file_field21235 = function() {
  var file_field21235 = null;
  var file_field21235__1 = function(name__9485__auto__) {
    return file_field21235.call(null, name__9485__auto__, null);
  };
  var file_field21235__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "file", "file", 370885649, null)), name__9485__auto__, value__9486__auto__);
  };
  file_field21235 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return file_field21235__1.call(this, name__9485__auto__);
      case 2:
        return file_field21235__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  file_field21235.cljs$core$IFn$_invoke$arity$1 = file_field21235__1;
  file_field21235.cljs$core$IFn$_invoke$arity$2 = file_field21235__2;
  return file_field21235;
}();
sablono.core.file_field = sablono.core.wrap_attrs.call(null, sablono.core.file_field21235);
sablono.core.hidden_field21236 = function() {
  var hidden_field21236 = null;
  var hidden_field21236__1 = function(name__9485__auto__) {
    return hidden_field21236.call(null, name__9485__auto__, null);
  };
  var hidden_field21236__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "hidden", "hidden", 1328025435, null)), name__9485__auto__, value__9486__auto__);
  };
  hidden_field21236 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return hidden_field21236__1.call(this, name__9485__auto__);
      case 2:
        return hidden_field21236__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hidden_field21236.cljs$core$IFn$_invoke$arity$1 = hidden_field21236__1;
  hidden_field21236.cljs$core$IFn$_invoke$arity$2 = hidden_field21236__2;
  return hidden_field21236;
}();
sablono.core.hidden_field = sablono.core.wrap_attrs.call(null, sablono.core.hidden_field21236);
sablono.core.month_field21237 = function() {
  var month_field21237 = null;
  var month_field21237__1 = function(name__9485__auto__) {
    return month_field21237.call(null, name__9485__auto__, null);
  };
  var month_field21237__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "month", "month", -319717006, null)), name__9485__auto__, value__9486__auto__);
  };
  month_field21237 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return month_field21237__1.call(this, name__9485__auto__);
      case 2:
        return month_field21237__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  month_field21237.cljs$core$IFn$_invoke$arity$1 = month_field21237__1;
  month_field21237.cljs$core$IFn$_invoke$arity$2 = month_field21237__2;
  return month_field21237;
}();
sablono.core.month_field = sablono.core.wrap_attrs.call(null, sablono.core.month_field21237);
sablono.core.number_field21238 = function() {
  var number_field21238 = null;
  var number_field21238__1 = function(name__9485__auto__) {
    return number_field21238.call(null, name__9485__auto__, null);
  };
  var number_field21238__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "number", "number", -1084057331, null)), name__9485__auto__, value__9486__auto__);
  };
  number_field21238 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return number_field21238__1.call(this, name__9485__auto__);
      case 2:
        return number_field21238__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  number_field21238.cljs$core$IFn$_invoke$arity$1 = number_field21238__1;
  number_field21238.cljs$core$IFn$_invoke$arity$2 = number_field21238__2;
  return number_field21238;
}();
sablono.core.number_field = sablono.core.wrap_attrs.call(null, sablono.core.number_field21238);
sablono.core.password_field21239 = function() {
  var password_field21239 = null;
  var password_field21239__1 = function(name__9485__auto__) {
    return password_field21239.call(null, name__9485__auto__, null);
  };
  var password_field21239__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "password", "password", 2057553998, null)), name__9485__auto__, value__9486__auto__);
  };
  password_field21239 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return password_field21239__1.call(this, name__9485__auto__);
      case 2:
        return password_field21239__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  password_field21239.cljs$core$IFn$_invoke$arity$1 = password_field21239__1;
  password_field21239.cljs$core$IFn$_invoke$arity$2 = password_field21239__2;
  return password_field21239;
}();
sablono.core.password_field = sablono.core.wrap_attrs.call(null, sablono.core.password_field21239);
sablono.core.range_field21240 = function() {
  var range_field21240 = null;
  var range_field21240__1 = function(name__9485__auto__) {
    return range_field21240.call(null, name__9485__auto__, null);
  };
  var range_field21240__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "range", "range", -1014743483, null)), name__9485__auto__, value__9486__auto__);
  };
  range_field21240 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return range_field21240__1.call(this, name__9485__auto__);
      case 2:
        return range_field21240__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range_field21240.cljs$core$IFn$_invoke$arity$1 = range_field21240__1;
  range_field21240.cljs$core$IFn$_invoke$arity$2 = range_field21240__2;
  return range_field21240;
}();
sablono.core.range_field = sablono.core.wrap_attrs.call(null, sablono.core.range_field21240);
sablono.core.search_field21241 = function() {
  var search_field21241 = null;
  var search_field21241__1 = function(name__9485__auto__) {
    return search_field21241.call(null, name__9485__auto__, null);
  };
  var search_field21241__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "search", "search", -1089495947, null)), name__9485__auto__, value__9486__auto__);
  };
  search_field21241 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return search_field21241__1.call(this, name__9485__auto__);
      case 2:
        return search_field21241__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  search_field21241.cljs$core$IFn$_invoke$arity$1 = search_field21241__1;
  search_field21241.cljs$core$IFn$_invoke$arity$2 = search_field21241__2;
  return search_field21241;
}();
sablono.core.search_field = sablono.core.wrap_attrs.call(null, sablono.core.search_field21241);
sablono.core.tel_field21242 = function() {
  var tel_field21242 = null;
  var tel_field21242__1 = function(name__9485__auto__) {
    return tel_field21242.call(null, name__9485__auto__, null);
  };
  var tel_field21242__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "tel", "tel", 1864669686, null)), name__9485__auto__, value__9486__auto__);
  };
  tel_field21242 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return tel_field21242__1.call(this, name__9485__auto__);
      case 2:
        return tel_field21242__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tel_field21242.cljs$core$IFn$_invoke$arity$1 = tel_field21242__1;
  tel_field21242.cljs$core$IFn$_invoke$arity$2 = tel_field21242__2;
  return tel_field21242;
}();
sablono.core.tel_field = sablono.core.wrap_attrs.call(null, sablono.core.tel_field21242);
sablono.core.text_field21243 = function() {
  var text_field21243 = null;
  var text_field21243__1 = function(name__9485__auto__) {
    return text_field21243.call(null, name__9485__auto__, null);
  };
  var text_field21243__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "text", "text", -150030170, null)), name__9485__auto__, value__9486__auto__);
  };
  text_field21243 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return text_field21243__1.call(this, name__9485__auto__);
      case 2:
        return text_field21243__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_field21243.cljs$core$IFn$_invoke$arity$1 = text_field21243__1;
  text_field21243.cljs$core$IFn$_invoke$arity$2 = text_field21243__2;
  return text_field21243;
}();
sablono.core.text_field = sablono.core.wrap_attrs.call(null, sablono.core.text_field21243);
sablono.core.time_field21244 = function() {
  var time_field21244 = null;
  var time_field21244__1 = function(name__9485__auto__) {
    return time_field21244.call(null, name__9485__auto__, null);
  };
  var time_field21244__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "time", "time", -1268547887, null)), name__9485__auto__, value__9486__auto__);
  };
  time_field21244 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return time_field21244__1.call(this, name__9485__auto__);
      case 2:
        return time_field21244__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  time_field21244.cljs$core$IFn$_invoke$arity$1 = time_field21244__1;
  time_field21244.cljs$core$IFn$_invoke$arity$2 = time_field21244__2;
  return time_field21244;
}();
sablono.core.time_field = sablono.core.wrap_attrs.call(null, sablono.core.time_field21244);
sablono.core.url_field21245 = function() {
  var url_field21245 = null;
  var url_field21245__1 = function(name__9485__auto__) {
    return url_field21245.call(null, name__9485__auto__, null);
  };
  var url_field21245__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "url", "url", 1916828573, null)), name__9485__auto__, value__9486__auto__);
  };
  url_field21245 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return url_field21245__1.call(this, name__9485__auto__);
      case 2:
        return url_field21245__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  url_field21245.cljs$core$IFn$_invoke$arity$1 = url_field21245__1;
  url_field21245.cljs$core$IFn$_invoke$arity$2 = url_field21245__2;
  return url_field21245;
}();
sablono.core.url_field = sablono.core.wrap_attrs.call(null, sablono.core.url_field21245);
sablono.core.week_field21246 = function() {
  var week_field21246 = null;
  var week_field21246__1 = function(name__9485__auto__) {
    return week_field21246.call(null, name__9485__auto__, null);
  };
  var week_field21246__2 = function(name__9485__auto__, value__9486__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "week", "week", 314058249, null)), name__9485__auto__, value__9486__auto__);
  };
  week_field21246 = function(name__9485__auto__, value__9486__auto__) {
    switch(arguments.length) {
      case 1:
        return week_field21246__1.call(this, name__9485__auto__);
      case 2:
        return week_field21246__2.call(this, name__9485__auto__, value__9486__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  week_field21246.cljs$core$IFn$_invoke$arity$1 = week_field21246__1;
  week_field21246.cljs$core$IFn$_invoke$arity$2 = week_field21246__2;
  return week_field21246;
}();
sablono.core.week_field = sablono.core.wrap_attrs.call(null, sablono.core.week_field21246);
sablono.core.file_upload = sablono.core.file_field;
sablono.core.check_box21247 = function() {
  var check_box21247 = null;
  var check_box21247__1 = function(name) {
    return check_box21247.call(null, name, null);
  };
  var check_box21247__2 = function(name, checked_QMARK_) {
    return check_box21247.call(null, name, checked_QMARK_, "true");
  };
  var check_box21247__3 = function(name, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 
    305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  check_box21247 = function(name, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return check_box21247__1.call(this, name);
      case 2:
        return check_box21247__2.call(this, name, checked_QMARK_);
      case 3:
        return check_box21247__3.call(this, name, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  check_box21247.cljs$core$IFn$_invoke$arity$1 = check_box21247__1;
  check_box21247.cljs$core$IFn$_invoke$arity$2 = check_box21247__2;
  check_box21247.cljs$core$IFn$_invoke$arity$3 = check_box21247__3;
  return check_box21247;
}();
sablono.core.check_box = sablono.core.wrap_attrs.call(null, sablono.core.check_box21247);
sablono.core.radio_button21248 = function() {
  var radio_button21248 = null;
  var radio_button21248__1 = function(group) {
    return radio_button21248.call(null, group, null);
  };
  var radio_button21248__2 = function(group, checked_QMARK_) {
    return radio_button21248.call(null, group, checked_QMARK_, "true");
  };
  var radio_button21248__3 = function(group, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "radio", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, group), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util.as_str.call(null, 
    group)) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util.as_str.call(null, value))), new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  radio_button21248 = function(group, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return radio_button21248__1.call(this, group);
      case 2:
        return radio_button21248__2.call(this, group, checked_QMARK_);
      case 3:
        return radio_button21248__3.call(this, group, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  radio_button21248.cljs$core$IFn$_invoke$arity$1 = radio_button21248__1;
  radio_button21248.cljs$core$IFn$_invoke$arity$2 = radio_button21248__2;
  radio_button21248.cljs$core$IFn$_invoke$arity$3 = radio_button21248__3;
  return radio_button21248;
}();
sablono.core.radio_button = sablono.core.wrap_attrs.call(null, sablono.core.radio_button21248);
sablono.core.select_options21249 = function() {
  var select_options21249 = null;
  var select_options21249__1 = function(coll) {
    return select_options21249.call(null, coll, null);
  };
  var select_options21249__2 = function(coll, selected) {
    var iter__4278__auto__ = function iter__21258(s__21259) {
      return new cljs.core.LazySeq(null, function() {
        var s__21259__$1 = s__21259;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__21259__$1);
          if (temp__4126__auto__) {
            var s__21259__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__21259__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__21259__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__21261 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__21260 = 0;
                while (true) {
                  if (i__21260 < size__4277__auto__) {
                    var x = cljs.core._nth.call(null, c__4276__auto__, i__21260);
                    cljs.core.chunk_append.call(null, b__21261, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                      var vec__21264 = x;
                      var text = cljs.core.nth.call(null, vec__21264, 0, null);
                      var val = cljs.core.nth.call(null, vec__21264, 1, null);
                      var disabled_QMARK_ = cljs.core.nth.call(null, vec__21264, 2, null);
                      var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                      if (cljs.core.sequential_QMARK_.call(null, val)) {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options21249.call(null, val, selected)], null);
                      } else {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                      }
                    }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null));
                    var G__21266 = i__21260 + 1;
                    i__21260 = G__21266;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21261), iter__21258.call(null, cljs.core.chunk_rest.call(null, s__21259__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21261), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__21259__$2);
              return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                var vec__21265 = x;
                var text = cljs.core.nth.call(null, vec__21265, 0, null);
                var val = cljs.core.nth.call(null, vec__21265, 1, null);
                var disabled_QMARK_ = cljs.core.nth.call(null, vec__21265, 2, null);
                var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                if (cljs.core.sequential_QMARK_.call(null, val)) {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options21249.call(null, val, selected)], null);
                } else {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                }
              }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null), iter__21258.call(null, cljs.core.rest.call(null, s__21259__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, coll);
  };
  select_options21249 = function(coll, selected) {
    switch(arguments.length) {
      case 1:
        return select_options21249__1.call(this, coll);
      case 2:
        return select_options21249__2.call(this, coll, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select_options21249.cljs$core$IFn$_invoke$arity$1 = select_options21249__1;
  select_options21249.cljs$core$IFn$_invoke$arity$2 = select_options21249__2;
  return select_options21249;
}();
sablono.core.select_options = sablono.core.wrap_attrs.call(null, sablono.core.select_options21249);
sablono.core.drop_down21267 = function() {
  var drop_down21267 = null;
  var drop_down21267__2 = function(name, options) {
    return drop_down21267.call(null, name, options, null);
  };
  var drop_down21267__3 = function(name, options, selected) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name)], null), sablono.core.select_options.call(null, options, selected)], null);
  };
  drop_down21267 = function(name, options, selected) {
    switch(arguments.length) {
      case 2:
        return drop_down21267__2.call(this, name, options);
      case 3:
        return drop_down21267__3.call(this, name, options, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_down21267.cljs$core$IFn$_invoke$arity$2 = drop_down21267__2;
  drop_down21267.cljs$core$IFn$_invoke$arity$3 = drop_down21267__3;
  return drop_down21267;
}();
sablono.core.drop_down = sablono.core.wrap_attrs.call(null, sablono.core.drop_down21267);
sablono.core.text_area21268 = function() {
  var text_area21268 = null;
  var text_area21268__1 = function(name) {
    return text_area21268.call(null, name, null);
  };
  var text_area21268__2 = function(name, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), value], null)], null);
  };
  text_area21268 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return text_area21268__1.call(this, name);
      case 2:
        return text_area21268__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_area21268.cljs$core$IFn$_invoke$arity$1 = text_area21268__1;
  text_area21268.cljs$core$IFn$_invoke$arity$2 = text_area21268__2;
  return text_area21268;
}();
sablono.core.text_area = sablono.core.wrap_attrs.call(null, sablono.core.text_area21268);
sablono.core.label21269 = function label21269(name, text) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720), sablono.core.make_id.call(null, name)], null), text], null);
};
sablono.core.label = sablono.core.wrap_attrs.call(null, sablono.core.label21269);
sablono.core.submit_button21270 = function submit_button21270(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "submit", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.submit_button = sablono.core.wrap_attrs.call(null, sablono.core.submit_button21270);
sablono.core.reset_button21271 = function reset_button21271(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "reset", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.reset_button = sablono.core.wrap_attrs.call(null, sablono.core.reset_button21271);
sablono.core.form_to21272 = function() {
  var form_to21272__delegate = function(p__21273, body) {
    var vec__21275 = p__21273;
    var method = cljs.core.nth.call(null, vec__21275, 0, null);
    var action = cljs.core.nth.call(null, vec__21275, 1, null);
    var method_str = clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
    var action_uri = sablono.util.to_uri.call(null, action);
    return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "get", "get", 1683182755), null, new cljs.core.Keyword(null, "post", "post", 269697687), null], null), null), method) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "method", "method", 55703592), method_str, new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), "POST", new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null), 
    sablono.core.hidden_field.call(null, "_method", method_str)], null), body));
  };
  var form_to21272 = function(p__21273, var_args) {
    var body = null;
    if (arguments.length > 1) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form_to21272__delegate.call(this, p__21273, body);
  };
  form_to21272.cljs$lang$maxFixedArity = 1;
  form_to21272.cljs$lang$applyTo = function(arglist__21276) {
    var p__21273 = cljs.core.first(arglist__21276);
    var body = cljs.core.rest(arglist__21276);
    return form_to21272__delegate(p__21273, body);
  };
  form_to21272.cljs$core$IFn$_invoke$arity$variadic = form_to21272__delegate;
  return form_to21272;
}();
sablono.core.form_to = sablono.core.wrap_attrs.call(null, sablono.core.form_to21272);
goog.provide("t3tr0s_slides.slide04");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide04.dark_green = "#143";
t3tr0s_slides.slide04.light_green = "#175";
t3tr0s_slides.slide04.dark_purple = "#449";
t3tr0s_slides.slide04.light_purple = "#6ad";
t3tr0s_slides.slide04.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide04.rotate_coord = function rotate_coord(p__28309) {
  var vec__28311 = p__28309;
  var x = cljs.core.nth.call(null, vec__28311, 0, null);
  var y = cljs.core.nth.call(null, vec__28311, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide04.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide04.rotate_coord, piece);
};
t3tr0s_slides.slide04.r0 = (new cljs.core.Keyword(null, "L", "L", -1038307519)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide04.pieces);
t3tr0s_slides.slide04.r1 = t3tr0s_slides.slide04.rotate_piece.call(null, t3tr0s_slides.slide04.r0);
t3tr0s_slides.slide04.r2 = t3tr0s_slides.slide04.rotate_piece.call(null, t3tr0s_slides.slide04.r1);
t3tr0s_slides.slide04.r3 = t3tr0s_slides.slide04.rotate_piece.call(null, t3tr0s_slides.slide04.r2);
t3tr0s_slides.slide04.rotations = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [t3tr0s_slides.slide04.r0, t3tr0s_slides.slide04.r1, t3tr0s_slides.slide04.r2, t3tr0s_slides.slide04.r3], null);
t3tr0s_slides.slide04.positions = new cljs.core.PersistentArrayMap.fromArray([t3tr0s_slides.slide04.r0, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null), t3tr0s_slides.slide04.r1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null), t3tr0s_slides.slide04.r2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 10], null), t3tr0s_slides.slide04.r3, new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 15], null)], true, false);
t3tr0s_slides.slide04.piece_abs_coords = function piece_abs_coords(piece) {
  var vec__28315 = t3tr0s_slides.slide04.positions.call(null, piece);
  var cx = cljs.core.nth.call(null, vec__28315, 0, null);
  var cy = cljs.core.nth.call(null, vec__28315, 1, null);
  return cljs.core.mapv.call(null, function(vec__28315, cx, cy) {
    return function(p__28316) {
      var vec__28317 = p__28316;
      var x = cljs.core.nth.call(null, vec__28317, 0, null);
      var y = cljs.core.nth.call(null, vec__28317, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__28315, cx, cy), piece);
};
t3tr0s_slides.slide04.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "index", "index", -1531685915), null], null));
t3tr0s_slides.slide04.rows = 20;
t3tr0s_slides.slide04.cols = 10;
t3tr0s_slides.slide04.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide04.cols, 0));
t3tr0s_slides.slide04.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide04.rows, t3tr0s_slides.slide04.empty_row));
t3tr0s_slides.slide04.piece_code = function piece_code(piece, pkey, app) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "piece" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(pkey), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-row-534ed" : 
  "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), piece);
  }], null), "   [", function() {
    var iter__4278__auto__ = function iter__28332(s__28333) {
      return new cljs.core.LazySeq(null, function() {
        var s__28333__$1 = s__28333;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__28333__$1);
          if (temp__4126__auto__) {
            var s__28333__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__28333__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__28333__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__28335 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__28334 = 0;
                while (true) {
                  if (i__28334 < size__4277__auto__) {
                    var vec__28340 = cljs.core._nth.call(null, c__4276__auto__, i__28334);
                    var index = cljs.core.nth.call(null, vec__28340, 0, null);
                    var vec__28341 = cljs.core.nth.call(null, vec__28340, 1, null);
                    var x = cljs.core.nth.call(null, vec__28341, 0, null);
                    var y = cljs.core.nth.call(null, vec__28341, 1, null);
                    cljs.core.chunk_append.call(null, b__28335, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "index" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, index, (new cljs.core.Keyword(null, "index", "index", 
                    -1531685915)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(i__28334, vec__28340, index, vec__28341, x, y, c__4276__auto__, size__4277__auto__, b__28335, s__28333__$2, temp__4126__auto__) {
                      return function() {
                        return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
                      };
                    }(i__28334, vec__28340, index, vec__28341, x, y, c__4276__auto__, size__4277__auto__, b__28335, s__28333__$2, temp__4126__auto__)], null), function() {
                      var pad = function(i__28334, vec__28340, index, vec__28341, x, y, c__4276__auto__, size__4277__auto__, b__28335, s__28333__$2, temp__4126__auto__) {
                        return function(p1__28318_SHARP_) {
                          if (p1__28318_SHARP_ < 0) {
                            return p1__28318_SHARP_;
                          } else {
                            return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__28318_SHARP_);
                          }
                        };
                      }(i__28334, vec__28340, index, vec__28341, x, y, c__4276__auto__, size__4277__auto__, b__28335, s__28333__$2, temp__4126__auto__);
                      var fmt = function(i__28334, pad, vec__28340, index, vec__28341, x, y, c__4276__auto__, size__4277__auto__, b__28335, s__28333__$2, temp__4126__auto__) {
                        return function(p1__28319_SHARP_) {
                          return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__28319_SHARP_));
                        };
                      }(i__28334, pad, vec__28340, index, vec__28341, x, y, c__4276__auto__, size__4277__auto__, b__28335, s__28333__$2, temp__4126__auto__);
                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), " [");
                    }()], null));
                    var G__28344 = i__28334 + 1;
                    i__28334 = G__28344;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28335), iter__28332.call(null, cljs.core.chunk_rest.call(null, s__28333__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28335), null);
              }
            } else {
              var vec__28342 = cljs.core.first.call(null, s__28333__$2);
              var index = cljs.core.nth.call(null, vec__28342, 0, null);
              var vec__28343 = cljs.core.nth.call(null, vec__28342, 1, null);
              var x = cljs.core.nth.call(null, vec__28343, 0, null);
              var y = cljs.core.nth.call(null, vec__28343, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "index" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, index, (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app)) ? 
              "active-col-d9099" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(vec__28342, index, vec__28343, x, y, s__28333__$2, temp__4126__auto__) {
                return function() {
                  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
                };
              }(vec__28342, index, vec__28343, x, y, s__28333__$2, temp__4126__auto__)], null), function() {
                var pad = function(vec__28342, index, vec__28343, x, y, s__28333__$2, temp__4126__auto__) {
                  return function(p1__28318_SHARP_) {
                    if (p1__28318_SHARP_ < 0) {
                      return p1__28318_SHARP_;
                    } else {
                      return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__28318_SHARP_);
                    }
                  };
                }(vec__28342, index, vec__28343, x, y, s__28333__$2, temp__4126__auto__);
                var fmt = function(pad, vec__28342, index, vec__28343, x, y, s__28333__$2, temp__4126__auto__) {
                  return function(p1__28319_SHARP_) {
                    return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__28319_SHARP_));
                  };
                }(pad, vec__28342, index, vec__28343, x, y, s__28333__$2, temp__4126__auto__);
                return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), " [");
              }()], null), iter__28332.call(null, cljs.core.rest.call(null, s__28333__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, piece));
  }(), " ]"], null);
};
var ufv___28358 = schema.utils.use_fn_validation;
var output_schema28346_28359 = schema.core.Any;
var input_schema28347_28360 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker28348_28361 = schema.core.checker.call(null, input_schema28347_28360);
var output_checker28349_28362 = schema.core.checker.call(null, output_schema28346_28359);
t3tr0s_slides.slide04.code = function(ufv___28358, output_schema28346_28359, input_schema28347_28360, input_checker28348_28361, output_checker28349_28362) {
  return function code(G__28350, G__28351) {
    var validate__5821__auto__ = ufv___28358.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___28363 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__28350, G__28351], null);
      var temp__4126__auto___28364 = input_checker28348_28361.call(null, args__5822__auto___28363);
      if (cljs.core.truth_(temp__4126__auto___28364)) {
        var error__5823__auto___28365 = temp__4126__auto___28364;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___28365)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema28347_28360, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___28363, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___28365], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__28350;
      var owner = G__28351;
      while (true) {
        if (typeof t3tr0s_slides.slide04.t28355 !== "undefined") {
        } else {
          t3tr0s_slides.slide04.t28355 = function(G__28351, owner, validate__5821__auto__, output_schema28346, G__28350, output_checker28349, input_schema28347, app, ufv__, code, input_checker28348, meta28356) {
            this.G__28351 = G__28351;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema28346 = output_schema28346;
            this.G__28350 = G__28350;
            this.output_checker28349 = output_checker28349;
            this.input_schema28347 = input_schema28347;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.input_checker28348 = input_checker28348;
            this.meta28356 = meta28356;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide04.t28355.cljs$lang$type = true;
          t3tr0s_slides.slide04.t28355.cljs$lang$ctorStr = "t3tr0s-slides.slide04/t28355";
          t3tr0s_slides.slide04.t28355.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___28358, output_schema28346_28359, input_schema28347_28360, input_checker28348_28361, output_checker28349_28362) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide04/t28355");
            };
          }(validate__5821__auto__, ufv___28358, output_schema28346_28359, input_schema28347_28360, input_checker28348_28361, output_checker28349_28362);
          t3tr0s_slides.slide04.t28355.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide04.t28355.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___28358, output_schema28346_28359, input_schema28347_28360, input_checker28348_28361, output_checker28349_28362) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " rotate-coord [[x y]]\n", "  [ (- y) x ])\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " rotate-piece [piece]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "mapv")), " rotate-coord piece))\n", 
              "\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: mouse over the pieces.")), "\n\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " r0 (:L pieces))\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide04.piece_code.call(null, t3tr0s_slides.slide04.r0, 0, self__.app)), "\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
              "def")), " r1 (rotate-piece r0))\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide04.piece_code.call(null, t3tr0s_slides.slide04.r1, 1, self__.app)), "\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " r2 (rotate-piece r1))\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide04.piece_code.call(null, t3tr0s_slides.slide04.r2, 2, self__.app)), "\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "def")), " r3 (rotate-piece r2))\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide04.piece_code.call(null, t3tr0s_slides.slide04.r3, 3, self__.app)), "\n")));
            };
          }(validate__5821__auto__, ufv___28358, output_schema28346_28359, input_schema28347_28360, input_checker28348_28361, output_checker28349_28362);
          t3tr0s_slides.slide04.t28355.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___28358, output_schema28346_28359, input_schema28347_28360, input_checker28348_28361, output_checker28349_28362) {
            return function(_28357) {
              var self__ = this;
              var _28357__$1 = this;
              return self__.meta28356;
            };
          }(validate__5821__auto__, ufv___28358, output_schema28346_28359, input_schema28347_28360, input_checker28348_28361, output_checker28349_28362);
          t3tr0s_slides.slide04.t28355.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___28358, output_schema28346_28359, input_schema28347_28360, input_checker28348_28361, output_checker28349_28362) {
            return function(_28357, meta28356__$1) {
              var self__ = this;
              var _28357__$1 = this;
              return new t3tr0s_slides.slide04.t28355(self__.G__28351, self__.owner, self__.validate__5821__auto__, self__.output_schema28346, self__.G__28350, self__.output_checker28349, self__.input_schema28347, self__.app, self__.ufv__, self__.code, self__.input_checker28348, meta28356__$1);
            };
          }(validate__5821__auto__, ufv___28358, output_schema28346_28359, input_schema28347_28360, input_checker28348_28361, output_checker28349_28362);
          t3tr0s_slides.slide04.__GT_t28355 = function(validate__5821__auto__, ufv___28358, output_schema28346_28359, input_schema28347_28360, input_checker28348_28361, output_checker28349_28362) {
            return function __GT_t28355(G__28351__$1, owner__$1, validate__5821__auto____$1, output_schema28346__$1, G__28350__$1, output_checker28349__$1, input_schema28347__$1, app__$1, ufv____$1, code__$1, input_checker28348__$1, meta28356) {
              return new t3tr0s_slides.slide04.t28355(G__28351__$1, owner__$1, validate__5821__auto____$1, output_schema28346__$1, G__28350__$1, output_checker28349__$1, input_schema28347__$1, app__$1, ufv____$1, code__$1, input_checker28348__$1, meta28356);
            };
          }(validate__5821__auto__, ufv___28358, output_schema28346_28359, input_schema28347_28360, input_checker28348_28361, output_checker28349_28362);
        }
        return new t3tr0s_slides.slide04.t28355(G__28351, owner, validate__5821__auto__, output_schema28346_28359, G__28350, output_checker28349_28362, input_schema28347_28360, app, ufv___28358, code, input_checker28348_28361, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___28366 = output_checker28349_28362.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___28366)) {
        var error__5823__auto___28367 = temp__4126__auto___28366;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___28367)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema28346_28359, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___28367], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___28358, output_schema28346_28359, input_schema28347_28360, input_checker28348_28361, output_checker28349_28362);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide04.code), schema.core.make_fn_schema.call(null, output_schema28346_28359, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema28347_28360], null)));
t3tr0s_slides.slide04.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide04.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m28345) {
    return om.core.build.call(null, t3tr0s_slides.slide04.code, cursor__9685__auto__, m28345);
  };
  __GT_code = function(cursor__9685__auto__, m28345) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m28345);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide04.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide04.rows);
t3tr0s_slides.slide04.piece_index = function piece_index(x, y) {
  return cljs.core.some.call(null, cljs.core.identity, cljs.core.map.call(null, function(p1__28368_SHARP_) {
    return cljs.core.first.call(null, cljs.core.keep_indexed.call(null, function(i, p__28371) {
      var vec__28372 = p__28371;
      var px = cljs.core.nth.call(null, vec__28372, 0, null);
      var py = cljs.core.nth.call(null, vec__28372, 1, null);
      if (cljs.core._EQ_.call(null, px, x) && cljs.core._EQ_.call(null, py, y)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__28368_SHARP_, i], null);
      } else {
        return null;
      }
    }, t3tr0s_slides.slide04.piece_abs_coords.call(null, p1__28368_SHARP_)));
  }, t3tr0s_slides.slide04.rotations));
};
t3tr0s_slides.slide04.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide04.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide04.cell_size);
  var vec__28374 = t3tr0s_slides.slide04.piece_index.call(null, col, row);
  var piece = cljs.core.nth.call(null, vec__28374, 0, null);
  var index = cljs.core.nth.call(null, vec__28374, 1, null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return index;
    } else {
      return and__3541__auto__;
    }
  }())) {
    om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), piece);
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
  } else {
    return null;
  }
};
t3tr0s_slides.slide04.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__28375, is_piece, is_index, is_center) {
  var vec__28377 = p__28375;
  var x = cljs.core.nth.call(null, vec__28377, 0, null);
  var y = cljs.core.nth.call(null, vec__28377, 1, null);
  ctx.fillStyle = cljs.core.truth_(is_index) ? t3tr0s_slides.slide04.dark_purple : cljs.core.truth_(is_piece) ? t3tr0s_slides.slide04.dark_green : "transparent";
  ctx.strokeStyle = cljs.core.truth_(is_index) ? t3tr0s_slides.slide04.light_purple : cljs.core.truth_(is_piece) ? t3tr0s_slides.slide04.light_green : "#888";
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide04.cell_size * x;
  var ry = t3tr0s_slides.slide04.cell_size * y;
  var rs = t3tr0s_slides.slide04.cell_size;
  var cx = t3tr0s_slides.slide04.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide04.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide04.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide04.draw_piece_BANG_ = function draw_piece_BANG_(app, ctx, piece) {
  var is_piece = cljs.core._EQ_.call(null, piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app));
  var index = (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app);
  var center = t3tr0s_slides.slide04.positions.call(null, piece);
  var seq__28390_28402 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide04.piece_abs_coords.call(null, piece)));
  var chunk__28391_28403 = null;
  var count__28392_28404 = 0;
  var i__28393_28405 = 0;
  while (true) {
    if (i__28393_28405 < count__28392_28404) {
      var vec__28394_28406 = cljs.core._nth.call(null, chunk__28391_28403, i__28393_28405);
      var i_28407 = cljs.core.nth.call(null, vec__28394_28406, 0, null);
      var c_28408 = cljs.core.nth.call(null, vec__28394_28406, 1, null);
      if (cljs.core._EQ_.call(null, i_28407, index)) {
      } else {
        t3tr0s_slides.slide04.draw_cell_BANG_.call(null, ctx, c_28408, is_piece, cljs.core._EQ_.call(null, i_28407, index), cljs.core._EQ_.call(null, c_28408, center));
      }
      var G__28409 = seq__28390_28402;
      var G__28410 = chunk__28391_28403;
      var G__28411 = count__28392_28404;
      var G__28412 = i__28393_28405 + 1;
      seq__28390_28402 = G__28409;
      chunk__28391_28403 = G__28410;
      count__28392_28404 = G__28411;
      i__28393_28405 = G__28412;
      continue;
    } else {
      var temp__4126__auto___28413 = cljs.core.seq.call(null, seq__28390_28402);
      if (temp__4126__auto___28413) {
        var seq__28390_28414__$1 = temp__4126__auto___28413;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__28390_28414__$1)) {
          var c__4309__auto___28415 = cljs.core.chunk_first.call(null, seq__28390_28414__$1);
          var G__28416 = cljs.core.chunk_rest.call(null, seq__28390_28414__$1);
          var G__28417 = c__4309__auto___28415;
          var G__28418 = cljs.core.count.call(null, c__4309__auto___28415);
          var G__28419 = 0;
          seq__28390_28402 = G__28416;
          chunk__28391_28403 = G__28417;
          count__28392_28404 = G__28418;
          i__28393_28405 = G__28419;
          continue;
        } else {
          var vec__28395_28420 = cljs.core.first.call(null, seq__28390_28414__$1);
          var i_28421 = cljs.core.nth.call(null, vec__28395_28420, 0, null);
          var c_28422 = cljs.core.nth.call(null, vec__28395_28420, 1, null);
          if (cljs.core._EQ_.call(null, i_28421, index)) {
          } else {
            t3tr0s_slides.slide04.draw_cell_BANG_.call(null, ctx, c_28422, is_piece, cljs.core._EQ_.call(null, i_28421, index), cljs.core._EQ_.call(null, c_28422, center));
          }
          var G__28423 = cljs.core.next.call(null, seq__28390_28414__$1);
          var G__28424 = null;
          var G__28425 = 0;
          var G__28426 = 0;
          seq__28390_28402 = G__28423;
          chunk__28391_28403 = G__28424;
          count__28392_28404 = G__28425;
          i__28393_28405 = G__28426;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__28396 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide04.piece_abs_coords.call(null, piece)));
  var chunk__28397 = null;
  var count__28398 = 0;
  var i__28399 = 0;
  while (true) {
    if (i__28399 < count__28398) {
      var vec__28400 = cljs.core._nth.call(null, chunk__28397, i__28399);
      var i = cljs.core.nth.call(null, vec__28400, 0, null);
      var c = cljs.core.nth.call(null, vec__28400, 1, null);
      if (cljs.core._EQ_.call(null, i, index)) {
        t3tr0s_slides.slide04.draw_cell_BANG_.call(null, ctx, c, is_piece, cljs.core._EQ_.call(null, i, index), cljs.core._EQ_.call(null, c, center));
      } else {
      }
      var G__28427 = seq__28396;
      var G__28428 = chunk__28397;
      var G__28429 = count__28398;
      var G__28430 = i__28399 + 1;
      seq__28396 = G__28427;
      chunk__28397 = G__28428;
      count__28398 = G__28429;
      i__28399 = G__28430;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__28396);
      if (temp__4126__auto__) {
        var seq__28396__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__28396__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__28396__$1);
          var G__28431 = cljs.core.chunk_rest.call(null, seq__28396__$1);
          var G__28432 = c__4309__auto__;
          var G__28433 = cljs.core.count.call(null, c__4309__auto__);
          var G__28434 = 0;
          seq__28396 = G__28431;
          chunk__28397 = G__28432;
          count__28398 = G__28433;
          i__28399 = G__28434;
          continue;
        } else {
          var vec__28401 = cljs.core.first.call(null, seq__28396__$1);
          var i = cljs.core.nth.call(null, vec__28401, 0, null);
          var c = cljs.core.nth.call(null, vec__28401, 1, null);
          if (cljs.core._EQ_.call(null, i, index)) {
            t3tr0s_slides.slide04.draw_cell_BANG_.call(null, ctx, c, is_piece, cljs.core._EQ_.call(null, i, index), cljs.core._EQ_.call(null, c, center));
          } else {
          }
          var G__28435 = cljs.core.next.call(null, seq__28396__$1);
          var G__28436 = null;
          var G__28437 = 0;
          var G__28438 = 0;
          seq__28396 = G__28435;
          chunk__28397 = G__28436;
          count__28398 = G__28437;
          i__28399 = G__28438;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide04.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide04.cell_size * t3tr0s_slides.slide04.cols, t3tr0s_slides.slide04.cell_size * t3tr0s_slides.slide04.rows);
  var seq__28443 = cljs.core.seq.call(null, t3tr0s_slides.slide04.rotations);
  var chunk__28444 = null;
  var count__28445 = 0;
  var i__28446 = 0;
  while (true) {
    if (i__28446 < count__28445) {
      var p = cljs.core._nth.call(null, chunk__28444, i__28446);
      t3tr0s_slides.slide04.draw_piece_BANG_.call(null, app, ctx, p);
      var G__28447 = seq__28443;
      var G__28448 = chunk__28444;
      var G__28449 = count__28445;
      var G__28450 = i__28446 + 1;
      seq__28443 = G__28447;
      chunk__28444 = G__28448;
      count__28445 = G__28449;
      i__28446 = G__28450;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__28443);
      if (temp__4126__auto__) {
        var seq__28443__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__28443__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__28443__$1);
          var G__28451 = cljs.core.chunk_rest.call(null, seq__28443__$1);
          var G__28452 = c__4309__auto__;
          var G__28453 = cljs.core.count.call(null, c__4309__auto__);
          var G__28454 = 0;
          seq__28443 = G__28451;
          chunk__28444 = G__28452;
          count__28445 = G__28453;
          i__28446 = G__28454;
          continue;
        } else {
          var p = cljs.core.first.call(null, seq__28443__$1);
          t3tr0s_slides.slide04.draw_piece_BANG_.call(null, app, ctx, p);
          var G__28455 = cljs.core.next.call(null, seq__28443__$1);
          var G__28456 = null;
          var G__28457 = 0;
          var G__28458 = 0;
          seq__28443 = G__28455;
          chunk__28444 = G__28456;
          count__28445 = G__28457;
          i__28446 = G__28458;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
var ufv___28473 = schema.utils.use_fn_validation;
var output_schema28461_28474 = schema.core.Any;
var input_schema28462_28475 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker28463_28476 = schema.core.checker.call(null, input_schema28462_28475);
var output_checker28464_28477 = schema.core.checker.call(null, output_schema28461_28474);
t3tr0s_slides.slide04.canvas = function(ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477) {
  return function canvas(G__28465, G__28466) {
    var validate__5821__auto__ = ufv___28473.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___28478 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__28465, G__28466], null);
      var temp__4126__auto___28479 = input_checker28463_28476.call(null, args__5822__auto___28478);
      if (cljs.core.truth_(temp__4126__auto___28479)) {
        var error__5823__auto___28480 = temp__4126__auto___28479;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___28480)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema28462_28475, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___28478, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___28480], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__28465;
      var owner = G__28466;
      while (true) {
        if (typeof t3tr0s_slides.slide04.t28470 !== "undefined") {
        } else {
          t3tr0s_slides.slide04.t28470 = function(output_checker28464, owner, input_checker28463, G__28466, validate__5821__auto__, output_schema28461, canvas, G__28465, input_schema28462, app, ufv__, meta28471) {
            this.output_checker28464 = output_checker28464;
            this.owner = owner;
            this.input_checker28463 = input_checker28463;
            this.G__28466 = G__28466;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema28461 = output_schema28461;
            this.canvas = canvas;
            this.G__28465 = G__28465;
            this.input_schema28462 = input_schema28462;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta28471 = meta28471;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide04.t28470.cljs$lang$type = true;
          t3tr0s_slides.slide04.t28470.cljs$lang$ctorStr = "t3tr0s-slides.slide04/t28470";
          t3tr0s_slides.slide04.t28470.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide04/t28470");
            };
          }(validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477);
          t3tr0s_slides.slide04.t28470.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide04.t28470.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseMove":function(___$1, validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477) {
                return function(p1__28459_SHARP_) {
                  return t3tr0s_slides.slide04.canvas_mouse.call(null, self__.app, self__.owner, p1__28459_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477), "onMouseLeave":function(___$1, validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477) {
                return function() {
                  om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "row", "row", -570139521), null);
                  return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "col", "col", -1959363084), null);
                };
              }(___$1, validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477)}));
            };
          }(validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477);
          t3tr0s_slides.slide04.t28470.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide04.t28470.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide04.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477);
          t3tr0s_slides.slide04.t28470.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide04.t28470.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide04.cols * t3tr0s_slides.slide04.cell_size;
              canvas__$2.height = t3tr0s_slides.slide04.rows * t3tr0s_slides.slide04.cell_size;
              return t3tr0s_slides.slide04.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477);
          t3tr0s_slides.slide04.t28470.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477) {
            return function(_28472) {
              var self__ = this;
              var _28472__$1 = this;
              return self__.meta28471;
            };
          }(validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477);
          t3tr0s_slides.slide04.t28470.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477) {
            return function(_28472, meta28471__$1) {
              var self__ = this;
              var _28472__$1 = this;
              return new t3tr0s_slides.slide04.t28470(self__.output_checker28464, self__.owner, self__.input_checker28463, self__.G__28466, self__.validate__5821__auto__, self__.output_schema28461, self__.canvas, self__.G__28465, self__.input_schema28462, self__.app, self__.ufv__, meta28471__$1);
            };
          }(validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477);
          t3tr0s_slides.slide04.__GT_t28470 = function(validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477) {
            return function __GT_t28470(output_checker28464__$1, owner__$1, input_checker28463__$1, G__28466__$1, validate__5821__auto____$1, output_schema28461__$1, canvas__$1, G__28465__$1, input_schema28462__$1, app__$1, ufv____$1, meta28471) {
              return new t3tr0s_slides.slide04.t28470(output_checker28464__$1, owner__$1, input_checker28463__$1, G__28466__$1, validate__5821__auto____$1, output_schema28461__$1, canvas__$1, G__28465__$1, input_schema28462__$1, app__$1, ufv____$1, meta28471);
            };
          }(validate__5821__auto__, ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477);
        }
        return new t3tr0s_slides.slide04.t28470(output_checker28464_28477, owner, input_checker28463_28476, G__28466, validate__5821__auto__, output_schema28461_28474, canvas, G__28465, input_schema28462_28475, app, ufv___28473, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___28481 = output_checker28464_28477.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___28481)) {
        var error__5823__auto___28482 = temp__4126__auto___28481;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___28482)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema28461_28474, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___28482], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___28473, output_schema28461_28474, input_schema28462_28475, input_checker28463_28476, output_checker28464_28477);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide04.canvas), schema.core.make_fn_schema.call(null, output_schema28461_28474, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema28462_28475], null)));
t3tr0s_slides.slide04.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide04.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m28460) {
    return om.core.build.call(null, t3tr0s_slides.slide04.canvas, cursor__9685__auto__, m28460);
  };
  __GT_canvas = function(cursor__9685__auto__, m28460) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m28460);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___28500 = schema.utils.use_fn_validation;
var output_schema28484_28501 = schema.core.Any;
var input_schema28485_28502 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker28486_28503 = schema.core.checker.call(null, input_schema28485_28502);
var output_checker28487_28504 = schema.core.checker.call(null, output_schema28484_28501);
t3tr0s_slides.slide04.slide = function(ufv___28500, output_schema28484_28501, input_schema28485_28502, input_checker28486_28503, output_checker28487_28504) {
  return function slide(G__28488, G__28489) {
    var validate__5821__auto__ = ufv___28500.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___28505 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__28488, G__28489], null);
      var temp__4126__auto___28506 = input_checker28486_28503.call(null, args__5822__auto___28505);
      if (cljs.core.truth_(temp__4126__auto___28506)) {
        var error__5823__auto___28507 = temp__4126__auto___28506;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___28507)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema28485_28502, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___28505, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___28507], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__28488;
      var owner = G__28489;
      while (true) {
        if (typeof t3tr0s_slides.slide04.t28495 !== "undefined") {
        } else {
          t3tr0s_slides.slide04.t28495 = function(owner, validate__5821__auto__, G__28489, input_checker28486, output_checker28487, output_schema28484, input_schema28485, slide, app, ufv__, G__28488, meta28496) {
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__28489 = G__28489;
            this.input_checker28486 = input_checker28486;
            this.output_checker28487 = output_checker28487;
            this.output_schema28484 = output_schema28484;
            this.input_schema28485 = input_schema28485;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.G__28488 = G__28488;
            this.meta28496 = meta28496;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide04.t28495.cljs$lang$type = true;
          t3tr0s_slides.slide04.t28495.cljs$lang$ctorStr = "t3tr0s-slides.slide04/t28495";
          t3tr0s_slides.slide04.t28495.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___28500, output_schema28484_28501, input_schema28485_28502, input_checker28486_28503, output_checker28487_28504) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide04/t28495");
            };
          }(validate__5821__auto__, ufv___28500, output_schema28484_28501, input_schema28485_28502, input_checker28486_28503, output_checker28487_28504);
          t3tr0s_slides.slide04.t28495.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide04.t28495.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___28500, output_schema28484_28501, input_schema28485_28502, input_checker28486_28503, output_checker28487_28504) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "4. Rotate Piece."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide04.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide04.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___28500, output_schema28484_28501, input_schema28485_28502, input_checker28486_28503, output_checker28487_28504);
          t3tr0s_slides.slide04.t28495.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___28500, output_schema28484_28501, input_schema28485_28502, input_checker28486_28503, output_checker28487_28504) {
            return function(_28497) {
              var self__ = this;
              var _28497__$1 = this;
              return self__.meta28496;
            };
          }(validate__5821__auto__, ufv___28500, output_schema28484_28501, input_schema28485_28502, input_checker28486_28503, output_checker28487_28504);
          t3tr0s_slides.slide04.t28495.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___28500, output_schema28484_28501, input_schema28485_28502, input_checker28486_28503, output_checker28487_28504) {
            return function(_28497, meta28496__$1) {
              var self__ = this;
              var _28497__$1 = this;
              return new t3tr0s_slides.slide04.t28495(self__.owner, self__.validate__5821__auto__, self__.G__28489, self__.input_checker28486, self__.output_checker28487, self__.output_schema28484, self__.input_schema28485, self__.slide, self__.app, self__.ufv__, self__.G__28488, meta28496__$1);
            };
          }(validate__5821__auto__, ufv___28500, output_schema28484_28501, input_schema28485_28502, input_checker28486_28503, output_checker28487_28504);
          t3tr0s_slides.slide04.__GT_t28495 = function(validate__5821__auto__, ufv___28500, output_schema28484_28501, input_schema28485_28502, input_checker28486_28503, output_checker28487_28504) {
            return function __GT_t28495(owner__$1, validate__5821__auto____$1, G__28489__$1, input_checker28486__$1, output_checker28487__$1, output_schema28484__$1, input_schema28485__$1, slide__$1, app__$1, ufv____$1, G__28488__$1, meta28496) {
              return new t3tr0s_slides.slide04.t28495(owner__$1, validate__5821__auto____$1, G__28489__$1, input_checker28486__$1, output_checker28487__$1, output_schema28484__$1, input_schema28485__$1, slide__$1, app__$1, ufv____$1, G__28488__$1, meta28496);
            };
          }(validate__5821__auto__, ufv___28500, output_schema28484_28501, input_schema28485_28502, input_checker28486_28503, output_checker28487_28504);
        }
        return new t3tr0s_slides.slide04.t28495(owner, validate__5821__auto__, G__28489, input_checker28486_28503, output_checker28487_28504, output_schema28484_28501, input_schema28485_28502, slide, app, ufv___28500, G__28488, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___28508 = output_checker28487_28504.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___28508)) {
        var error__5823__auto___28509 = temp__4126__auto___28508;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___28509)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema28484_28501, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___28509], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___28500, output_schema28484_28501, input_schema28485_28502, input_checker28486_28503, output_checker28487_28504);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide04.slide), schema.core.make_fn_schema.call(null, output_schema28484_28501, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema28485_28502], null)));
t3tr0s_slides.slide04.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide04.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m28483) {
    return om.core.build.call(null, t3tr0s_slides.slide04.slide, cursor__9685__auto__, m28483);
  };
  __GT_slide = function(cursor__9685__auto__, m28483) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m28483);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide04.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide04.slide, t3tr0s_slides.slide04.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide04.resume = function resume() {
  return null;
};
t3tr0s_slides.slide04.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide11");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide11.dark_green = "#143";
t3tr0s_slides.slide11.light_green = "#175";
t3tr0s_slides.slide11.dark_purple = "#449";
t3tr0s_slides.slide11.light_purple = "#6ad";
t3tr0s_slides.slide11.dark_red = "#944";
t3tr0s_slides.slide11.light_red = "#f8c";
t3tr0s_slides.slide11.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide11.rotate_coord = function rotate_coord(p__31092) {
  var vec__31094 = p__31092;
  var x = cljs.core.nth.call(null, vec__31094, 0, null);
  var y = cljs.core.nth.call(null, vec__31094, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide11.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide11.rotate_coord, piece);
};
t3tr0s_slides.slide11.rows = 20;
t3tr0s_slides.slide11.cols = 10;
t3tr0s_slides.slide11.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide11.cols, 0));
t3tr0s_slides.slide11.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide11.rows, t3tr0s_slides.slide11.empty_row));
t3tr0s_slides.slide11.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide11.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null);
t3tr0s_slides.slide11.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide11.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide11.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide11.initial_pos], null));
t3tr0s_slides.slide11.write_piece = function write_piece(board, coords, p__31095, value) {
  while (true) {
    var vec__31099 = p__31095;
    var cx = cljs.core.nth.call(null, vec__31099, 0, null);
    var cy = cljs.core.nth.call(null, vec__31099, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__31100 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__31100, 0, null);
      var y = cljs.core.nth.call(null, vec__31100, 1, null);
      var G__31102 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), value);
        } catch (e31101) {
          if (e31101 instanceof Error) {
            var _ = e31101;
            return board;
          } else {
            throw e31101;
          }
        }
      }();
      var G__31103 = cljs.core.rest.call(null, coords);
      var G__31104 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      var G__31105 = value;
      board = G__31102;
      coords = G__31103;
      p__31095 = G__31104;
      value = G__31105;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide11.create_drawable_board = function create_drawable_board(board, piece, p__31106) {
  var vec__31108 = p__31106;
  var x = cljs.core.nth.call(null, vec__31108, 0, null);
  var y = cljs.core.nth.call(null, vec__31108, 1, null);
  var gy = t3tr0s_slides.slide11.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  var board1 = t3tr0s_slides.slide11.write_piece.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, gy], null), "G");
  var board2 = t3tr0s_slides.slide11.write_piece.call(null, board1, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null), "P");
  return board2;
};
t3tr0s_slides.slide11.app_drawable_board_BANG_ = function app_drawable_board_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  return t3tr0s_slides.slide11.create_drawable_board.call(null, board, piece, pos);
};
t3tr0s_slides.slide11.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__31110 = cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state);
  var map__31110__$1 = cljs.core.seq_QMARK_.call(null, map__31110) ? cljs.core.apply.call(null, cljs.core.hash_map, map__31110) : map__31110;
  var position = cljs.core.get.call(null, map__31110__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__31110__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide11.write_piece, piece, position, 1);
};
t3tr0s_slides.slide11.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__31111) {
  var vec__31115 = p__31111;
  var cx = cljs.core.nth.call(null, vec__31115, 0, null);
  var cy = cljs.core.nth.call(null, vec__31115, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__31115, cx, cy) {
    return function(p__31116) {
      var vec__31117 = p__31116;
      var x = cljs.core.nth.call(null, vec__31117, 0, null);
      var y = cljs.core.nth.call(null, vec__31117, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__31115, cx, cy), piece);
};
t3tr0s_slides.slide11.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide11.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide11.app_state))));
};
t3tr0s_slides.slide11.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var vec__31119 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var x = cljs.core.nth.call(null, vec__31119, 0, null);
  var y = cljs.core.nth.call(null, vec__31119, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide11.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide11.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var new_piece = t3tr0s_slides.slide11.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide11.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide11.get_drop_pos = function get_drop_pos(board, piece, p__31120) {
  var vec__31122 = p__31120;
  var x = cljs.core.nth.call(null, vec__31122, 0, null);
  var y = cljs.core.nth.call(null, vec__31122, 1, null);
  var collide_QMARK_ = function(vec__31122, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide11.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__31122, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide11.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var vec__31124 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var x = cljs.core.nth.call(null, vec__31124, 0, null);
  var y = cljs.core.nth.call(null, vec__31124, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state));
  var ny = t3tr0s_slides.slide11.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  t3tr0s_slides.slide11.lock_piece_BANG_.call(null);
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide11.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide11.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide11.pieces)));
};
t3tr0s_slides.slide11.data_row = function data_row(board, row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__31129(s__31130) {
      return new cljs.core.LazySeq(null, function() {
        var s__31130__$1 = s__31130;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__31130__$1);
          if (temp__4126__auto__) {
            var s__31130__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__31130__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__31130__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__31132 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__31131 = 0;
                while (true) {
                  if (i__31131 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__31131);
                    cljs.core.chunk_append.call(null, b__31132, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null)))), " "));
                    var G__31133 = i__31131 + 1;
                    i__31131 = G__31133;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31132), iter__31129.call(null, cljs.core.chunk_rest.call(null, s__31130__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31132), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__31130__$2);
              return cljs.core.cons.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null)))), " "), iter__31129.call(null, cljs.core.rest.call(null, s__31130__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.cols));
  }(), " ]"], null);
};
var ufv___31213 = schema.utils.use_fn_validation;
var output_schema31135_31214 = schema.core.Any;
var input_schema31136_31215 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker31137_31216 = schema.core.checker.call(null, input_schema31136_31215);
var output_checker31138_31217 = schema.core.checker.call(null, output_schema31135_31214);
t3tr0s_slides.slide11.code = function(ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217) {
  return function code(G__31139, G__31140) {
    var validate__5821__auto__ = ufv___31213.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___31218 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__31139, G__31140], null);
      var temp__4126__auto___31219 = input_checker31137_31216.call(null, args__5822__auto___31218);
      if (cljs.core.truth_(temp__4126__auto___31219)) {
        var error__5823__auto___31220 = temp__4126__auto___31219;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___31220)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema31136_31215, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___31218, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___31220], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__31139;
      var owner = G__31140;
      while (true) {
        if (typeof t3tr0s_slides.slide11.t31177 !== "undefined") {
        } else {
          t3tr0s_slides.slide11.t31177 = function(owner, validate__5821__auto__, input_schema31136, output_schema31135, input_checker31137, output_checker31138, G__31140, app, G__31139, ufv__, code, meta31178) {
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema31136 = input_schema31136;
            this.output_schema31135 = output_schema31135;
            this.input_checker31137 = input_checker31137;
            this.output_checker31138 = output_checker31138;
            this.G__31140 = G__31140;
            this.app = app;
            this.G__31139 = G__31139;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta31178 = meta31178;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide11.t31177.cljs$lang$type = true;
          t3tr0s_slides.slide11.t31177.cljs$lang$ctorStr = "t3tr0s-slides.slide11/t31177";
          t3tr0s_slides.slide11.t31177.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide11/t31177");
            };
          }(validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217);
          t3tr0s_slides.slide11.t31177.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide11.t31177.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs31180 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: press space to hard-drop.");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs31180) ? sablono.interpreter.attributes.call(null, attrs31180) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs31180) ? new cljs.core.PersistentVector(null, 24, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " create-drawable-board\n", "  [board piece [x y]]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [gy    (get-drop-pos board piece [x y])\n", "        board1 (write-piece board piece [x gy] ", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.lit.call(null, '"G"')), ")\n", "        board2 (write-piece board piece [x y ] ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, '"P"')), ")]\n", "    board2))\n", "\n", "\x3e (create-drawable-board ...)\n", "\n", sablono.interpreter.interpret.call(null, function() {
                  var board = t3tr0s_slides.slide11.app_drawable_board_BANG_.call(null);
                  var iter__4278__auto__ = function(board, attrs31180, ___$1, validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217) {
                    return function iter__31181(s__31182) {
                      return new cljs.core.LazySeq(null, function(board, attrs31180, ___$1, validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217) {
                        return function() {
                          var s__31182__$1 = s__31182;
                          while (true) {
                            var temp__4126__auto__ = cljs.core.seq.call(null, s__31182__$1);
                            if (temp__4126__auto__) {
                              var s__31182__$2 = temp__4126__auto__;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__31182__$2)) {
                                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__31182__$2);
                                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                var b__31184 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                if (function() {
                                  var i__31183 = 0;
                                  while (true) {
                                    if (i__31183 < size__4277__auto__) {
                                      var row = cljs.core._nth.call(null, c__4276__auto__, i__31183);
                                      cljs.core.chunk_append.call(null, b__31184, function() {
                                        var pred__31191 = cljs.core._EQ_;
                                        var expr__31192 = row;
                                        if (cljs.core.truth_(pred__31191.call(null, 0, expr__31192))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "  [");
                                        } else {
                                          if (cljs.core.truth_(pred__31191.call(null, t3tr0s_slides.slide11.rows - 1, expr__31192))) {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                          } else {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                          }
                                        }
                                      }());
                                      var G__31221 = i__31183 + 1;
                                      i__31183 = G__31221;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31184), iter__31181.call(null, cljs.core.chunk_rest.call(null, s__31182__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31184), null);
                                }
                              } else {
                                var row = cljs.core.first.call(null, s__31182__$2);
                                return cljs.core.cons.call(null, function() {
                                  var pred__31194 = cljs.core._EQ_;
                                  var expr__31195 = row;
                                  if (cljs.core.truth_(pred__31194.call(null, 0, expr__31195))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "  [");
                                  } else {
                                    if (cljs.core.truth_(pred__31194.call(null, t3tr0s_slides.slide11.rows - 1, expr__31195))) {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                    } else {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                    }
                                  }
                                }(), iter__31181.call(null, cljs.core.rest.call(null, s__31182__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(board, attrs31180, ___$1, validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217), null, null);
                    };
                  }(board, attrs31180, ___$1, validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217);
                  return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.rows));
                }())], null) : new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs31180), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "defn")), " create-drawable-board\n", "  [board piece [x y]]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [gy    (get-drop-pos board piece [x y])\n", "        board1 (write-piece board piece [x gy] ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, '"G"')), ")\n", "        board2 (write-piece board piece [x y ] ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, 
                '"P"')), ")]\n", "    board2))\n", "\n", "\x3e (create-drawable-board ...)\n", "\n", sablono.interpreter.interpret.call(null, function() {
                  var board = t3tr0s_slides.slide11.app_drawable_board_BANG_.call(null);
                  var iter__4278__auto__ = function(board, attrs31180, ___$1, validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217) {
                    return function iter__31197(s__31198) {
                      return new cljs.core.LazySeq(null, function(board, attrs31180, ___$1, validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217) {
                        return function() {
                          var s__31198__$1 = s__31198;
                          while (true) {
                            var temp__4126__auto__ = cljs.core.seq.call(null, s__31198__$1);
                            if (temp__4126__auto__) {
                              var s__31198__$2 = temp__4126__auto__;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__31198__$2)) {
                                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__31198__$2);
                                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                var b__31200 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                if (function() {
                                  var i__31199 = 0;
                                  while (true) {
                                    if (i__31199 < size__4277__auto__) {
                                      var row = cljs.core._nth.call(null, c__4276__auto__, i__31199);
                                      cljs.core.chunk_append.call(null, b__31200, function() {
                                        var pred__31207 = cljs.core._EQ_;
                                        var expr__31208 = row;
                                        if (cljs.core.truth_(pred__31207.call(null, 0, expr__31208))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "  [");
                                        } else {
                                          if (cljs.core.truth_(pred__31207.call(null, t3tr0s_slides.slide11.rows - 1, expr__31208))) {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                          } else {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                          }
                                        }
                                      }());
                                      var G__31222 = i__31199 + 1;
                                      i__31199 = G__31222;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31200), iter__31197.call(null, cljs.core.chunk_rest.call(null, s__31198__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31200), null);
                                }
                              } else {
                                var row = cljs.core.first.call(null, s__31198__$2);
                                return cljs.core.cons.call(null, function() {
                                  var pred__31210 = cljs.core._EQ_;
                                  var expr__31211 = row;
                                  if (cljs.core.truth_(pred__31210.call(null, 0, expr__31211))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "  [");
                                  } else {
                                    if (cljs.core.truth_(pred__31210.call(null, t3tr0s_slides.slide11.rows - 1, expr__31211))) {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                    } else {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide11.data_row.call(null, board, row, self__.app)), "   ");
                                    }
                                  }
                                }(), iter__31197.call(null, cljs.core.rest.call(null, s__31198__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(board, attrs31180, ___$1, validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217), null, null);
                    };
                  }(board, attrs31180, ___$1, validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217);
                  return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.rows));
                }())], null)));
              }()));
            };
          }(validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217);
          t3tr0s_slides.slide11.t31177.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217) {
            return function(_31179) {
              var self__ = this;
              var _31179__$1 = this;
              return self__.meta31178;
            };
          }(validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217);
          t3tr0s_slides.slide11.t31177.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217) {
            return function(_31179, meta31178__$1) {
              var self__ = this;
              var _31179__$1 = this;
              return new t3tr0s_slides.slide11.t31177(self__.owner, self__.validate__5821__auto__, self__.input_schema31136, self__.output_schema31135, self__.input_checker31137, self__.output_checker31138, self__.G__31140, self__.app, self__.G__31139, self__.ufv__, self__.code, meta31178__$1);
            };
          }(validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217);
          t3tr0s_slides.slide11.__GT_t31177 = function(validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217) {
            return function __GT_t31177(owner__$1, validate__5821__auto____$1, input_schema31136__$1, output_schema31135__$1, input_checker31137__$1, output_checker31138__$1, G__31140__$1, app__$1, G__31139__$1, ufv____$1, code__$1, meta31178) {
              return new t3tr0s_slides.slide11.t31177(owner__$1, validate__5821__auto____$1, input_schema31136__$1, output_schema31135__$1, input_checker31137__$1, output_checker31138__$1, G__31140__$1, app__$1, G__31139__$1, ufv____$1, code__$1, meta31178);
            };
          }(validate__5821__auto__, ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217);
        }
        return new t3tr0s_slides.slide11.t31177(owner, validate__5821__auto__, input_schema31136_31215, output_schema31135_31214, input_checker31137_31216, output_checker31138_31217, G__31140, app, G__31139, ufv___31213, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___31223 = output_checker31138_31217.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___31223)) {
        var error__5823__auto___31224 = temp__4126__auto___31223;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___31224)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema31135_31214, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___31224], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___31213, output_schema31135_31214, input_schema31136_31215, input_checker31137_31216, output_checker31138_31217);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide11.code), schema.core.make_fn_schema.call(null, output_schema31135_31214, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema31136_31215], null)));
t3tr0s_slides.slide11.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide11.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m31134) {
    return om.core.build.call(null, t3tr0s_slides.slide11.code, cursor__9685__auto__, m31134);
  };
  __GT_code = function(cursor__9685__auto__, m31134) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m31134);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide11.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide11.rows);
t3tr0s_slides.slide11.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__31225, is_center) {
  var vec__31227 = p__31225;
  var x = cljs.core.nth.call(null, vec__31227, 0, null);
  var y = cljs.core.nth.call(null, vec__31227, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide11.cell_size * x;
  var ry = t3tr0s_slides.slide11.cell_size * y;
  var rs = t3tr0s_slides.slide11.cell_size;
  var cx = t3tr0s_slides.slide11.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide11.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide11.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide11.piece_abs_coords = function piece_abs_coords(piece, p__31228) {
  var vec__31232 = p__31228;
  var cx = cljs.core.nth.call(null, vec__31232, 0, null);
  var cy = cljs.core.nth.call(null, vec__31232, 1, null);
  return cljs.core.mapv.call(null, function(vec__31232, cx, cy) {
    return function(p__31233) {
      var vec__31234 = p__31233;
      var x = cljs.core.nth.call(null, vec__31234, 0, null);
      var y = cljs.core.nth.call(null, vec__31234, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__31232, cx, cy), piece);
};
t3tr0s_slides.slide11.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__31241 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide11.piece_abs_coords.call(null, piece, pos)));
  var chunk__31242 = null;
  var count__31243 = 0;
  var i__31244 = 0;
  while (true) {
    if (i__31244 < count__31243) {
      var vec__31245 = cljs.core._nth.call(null, chunk__31242, i__31244);
      var i = cljs.core.nth.call(null, vec__31245, 0, null);
      var c = cljs.core.nth.call(null, vec__31245, 1, null);
      t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__31247 = seq__31241;
      var G__31248 = chunk__31242;
      var G__31249 = count__31243;
      var G__31250 = i__31244 + 1;
      seq__31241 = G__31247;
      chunk__31242 = G__31248;
      count__31243 = G__31249;
      i__31244 = G__31250;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__31241);
      if (temp__4126__auto__) {
        var seq__31241__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__31241__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__31241__$1);
          var G__31251 = cljs.core.chunk_rest.call(null, seq__31241__$1);
          var G__31252 = c__4309__auto__;
          var G__31253 = cljs.core.count.call(null, c__4309__auto__);
          var G__31254 = 0;
          seq__31241 = G__31251;
          chunk__31242 = G__31252;
          count__31243 = G__31253;
          i__31244 = G__31254;
          continue;
        } else {
          var vec__31246 = cljs.core.first.call(null, seq__31241__$1);
          var i = cljs.core.nth.call(null, vec__31246, 0, null);
          var c = cljs.core.nth.call(null, vec__31246, 1, null);
          t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__31255 = cljs.core.next.call(null, seq__31241__$1);
          var G__31256 = null;
          var G__31257 = 0;
          var G__31258 = 0;
          seq__31241 = G__31255;
          chunk__31242 = G__31256;
          count__31243 = G__31257;
          i__31244 = G__31258;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide11.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__31271 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.rows));
  var chunk__31276 = null;
  var count__31277 = 0;
  var i__31278 = 0;
  while (true) {
    if (i__31278 < count__31277) {
      var y = cljs.core._nth.call(null, chunk__31276, i__31278);
      var seq__31279_31283 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.cols));
      var chunk__31280_31284 = null;
      var count__31281_31285 = 0;
      var i__31282_31286 = 0;
      while (true) {
        if (i__31282_31286 < count__31281_31285) {
          var x_31287 = cljs.core._nth.call(null, chunk__31280_31284, i__31282_31286);
          var v_31288 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_31287], null));
          if (v_31288 === 0) {
          } else {
            t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_31287, y], null), false);
          }
          var G__31289 = seq__31279_31283;
          var G__31290 = chunk__31280_31284;
          var G__31291 = count__31281_31285;
          var G__31292 = i__31282_31286 + 1;
          seq__31279_31283 = G__31289;
          chunk__31280_31284 = G__31290;
          count__31281_31285 = G__31291;
          i__31282_31286 = G__31292;
          continue;
        } else {
          var temp__4126__auto___31293 = cljs.core.seq.call(null, seq__31279_31283);
          if (temp__4126__auto___31293) {
            var seq__31279_31294__$1 = temp__4126__auto___31293;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__31279_31294__$1)) {
              var c__4309__auto___31295 = cljs.core.chunk_first.call(null, seq__31279_31294__$1);
              var G__31296 = cljs.core.chunk_rest.call(null, seq__31279_31294__$1);
              var G__31297 = c__4309__auto___31295;
              var G__31298 = cljs.core.count.call(null, c__4309__auto___31295);
              var G__31299 = 0;
              seq__31279_31283 = G__31296;
              chunk__31280_31284 = G__31297;
              count__31281_31285 = G__31298;
              i__31282_31286 = G__31299;
              continue;
            } else {
              var x_31300 = cljs.core.first.call(null, seq__31279_31294__$1);
              var v_31301 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_31300], null));
              if (v_31301 === 0) {
              } else {
                t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_31300, y], null), false);
              }
              var G__31302 = cljs.core.next.call(null, seq__31279_31294__$1);
              var G__31303 = null;
              var G__31304 = 0;
              var G__31305 = 0;
              seq__31279_31283 = G__31302;
              chunk__31280_31284 = G__31303;
              count__31281_31285 = G__31304;
              i__31282_31286 = G__31305;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__31306 = seq__31271;
      var G__31307 = chunk__31276;
      var G__31308 = count__31277;
      var G__31309 = i__31278 + 1;
      seq__31271 = G__31306;
      chunk__31276 = G__31307;
      count__31277 = G__31308;
      i__31278 = G__31309;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__31271);
      if (temp__4126__auto__) {
        var seq__31271__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__31271__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__31271__$1);
          var G__31310 = cljs.core.chunk_rest.call(null, seq__31271__$1);
          var G__31311 = c__4309__auto__;
          var G__31312 = cljs.core.count.call(null, c__4309__auto__);
          var G__31313 = 0;
          seq__31271 = G__31310;
          chunk__31276 = G__31311;
          count__31277 = G__31312;
          i__31278 = G__31313;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__31271__$1);
          var seq__31272_31314 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide11.cols));
          var chunk__31273_31315 = null;
          var count__31274_31316 = 0;
          var i__31275_31317 = 0;
          while (true) {
            if (i__31275_31317 < count__31274_31316) {
              var x_31318 = cljs.core._nth.call(null, chunk__31273_31315, i__31275_31317);
              var v_31319 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_31318], null));
              if (v_31319 === 0) {
              } else {
                t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_31318, y], null), false);
              }
              var G__31320 = seq__31272_31314;
              var G__31321 = chunk__31273_31315;
              var G__31322 = count__31274_31316;
              var G__31323 = i__31275_31317 + 1;
              seq__31272_31314 = G__31320;
              chunk__31273_31315 = G__31321;
              count__31274_31316 = G__31322;
              i__31275_31317 = G__31323;
              continue;
            } else {
              var temp__4126__auto___31324__$1 = cljs.core.seq.call(null, seq__31272_31314);
              if (temp__4126__auto___31324__$1) {
                var seq__31272_31325__$1 = temp__4126__auto___31324__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__31272_31325__$1)) {
                  var c__4309__auto___31326 = cljs.core.chunk_first.call(null, seq__31272_31325__$1);
                  var G__31327 = cljs.core.chunk_rest.call(null, seq__31272_31325__$1);
                  var G__31328 = c__4309__auto___31326;
                  var G__31329 = cljs.core.count.call(null, c__4309__auto___31326);
                  var G__31330 = 0;
                  seq__31272_31314 = G__31327;
                  chunk__31273_31315 = G__31328;
                  count__31274_31316 = G__31329;
                  i__31275_31317 = G__31330;
                  continue;
                } else {
                  var x_31331 = cljs.core.first.call(null, seq__31272_31325__$1);
                  var v_31332 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_31331], null));
                  if (v_31332 === 0) {
                  } else {
                    t3tr0s_slides.slide11.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_31331, y], null), false);
                  }
                  var G__31333 = cljs.core.next.call(null, seq__31272_31325__$1);
                  var G__31334 = null;
                  var G__31335 = 0;
                  var G__31336 = 0;
                  seq__31272_31314 = G__31333;
                  chunk__31273_31315 = G__31334;
                  count__31274_31316 = G__31335;
                  i__31275_31317 = G__31336;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__31337 = cljs.core.next.call(null, seq__31271__$1);
          var G__31338 = null;
          var G__31339 = 0;
          var G__31340 = 0;
          seq__31271 = G__31337;
          chunk__31276 = G__31338;
          count__31277 = G__31339;
          i__31278 = G__31340;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide11.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide11.cell_size * t3tr0s_slides.slide11.cols, t3tr0s_slides.slide11.cell_size * t3tr0s_slides.slide11.rows);
  ctx.fillStyle = t3tr0s_slides.slide11.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide11.light_green;
  t3tr0s_slides.slide11.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var drop_y = t3tr0s_slides.slide11.get_drop_pos.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide11.app_state)), piece, pos);
  var drop_pos = cljs.core.assoc.call(null, pos, 1, drop_y);
  var fits = t3tr0s_slides.slide11.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = "#333";
    ctx.strokeStyle = "#666";
    t3tr0s_slides.slide11.draw_piece_BANG_.call(null, ctx, piece, drop_pos);
    ctx.fillStyle = fits ? t3tr0s_slides.slide11.dark_purple : t3tr0s_slides.slide11.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide11.light_purple : t3tr0s_slides.slide11.light_red;
    return t3tr0s_slides.slide11.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide11.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide11.key_name = function key_name(p1__31341_SHARP_) {
  return t3tr0s_slides.slide11.key_names.call(null, p1__31341_SHARP_.keyCode);
};
t3tr0s_slides.slide11.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide11.key_name.call(null, e);
  var G__31343_31344 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__31343_31344) {
    case "space":
      t3tr0s_slides.slide11.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide11.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide11.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide11.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___31363 = schema.utils.use_fn_validation;
var output_schema31347_31364 = schema.core.Any;
var input_schema31348_31365 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker31349_31366 = schema.core.checker.call(null, input_schema31348_31365);
var output_checker31350_31367 = schema.core.checker.call(null, output_schema31347_31364);
t3tr0s_slides.slide11.canvas = function(ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367) {
  return function canvas(G__31351, G__31352) {
    var validate__5821__auto__ = ufv___31363.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___31368 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__31351, G__31352], null);
      var temp__4126__auto___31369 = input_checker31349_31366.call(null, args__5822__auto___31368);
      if (cljs.core.truth_(temp__4126__auto___31369)) {
        var error__5823__auto___31370 = temp__4126__auto___31369;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___31370)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema31348_31365, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___31368, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___31370], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__31351;
      var owner = G__31352;
      while (true) {
        if (typeof t3tr0s_slides.slide11.t31358 !== "undefined") {
        } else {
          t3tr0s_slides.slide11.t31358 = function(G__31352, input_checker31349, owner, G__31351, validate__5821__auto__, input_schema31348, canvas, output_checker31350, output_schema31347, app, ufv__, meta31359) {
            this.G__31352 = G__31352;
            this.input_checker31349 = input_checker31349;
            this.owner = owner;
            this.G__31351 = G__31351;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema31348 = input_schema31348;
            this.canvas = canvas;
            this.output_checker31350 = output_checker31350;
            this.output_schema31347 = output_schema31347;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta31359 = meta31359;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide11.t31358.cljs$lang$type = true;
          t3tr0s_slides.slide11.t31358.cljs$lang$ctorStr = "t3tr0s-slides.slide11/t31358";
          t3tr0s_slides.slide11.t31358.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide11/t31358");
            };
          }(validate__5821__auto__, ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367);
          t3tr0s_slides.slide11.t31358.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide11.t31358.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367);
          t3tr0s_slides.slide11.t31358.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide11.t31358.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide11.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367);
          t3tr0s_slides.slide11.t31358.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide11.t31358.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide11.cols * t3tr0s_slides.slide11.cell_size;
              canvas__$2.height = t3tr0s_slides.slide11.rows * t3tr0s_slides.slide11.cell_size;
              return t3tr0s_slides.slide11.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367);
          t3tr0s_slides.slide11.t31358.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367) {
            return function(_31360) {
              var self__ = this;
              var _31360__$1 = this;
              return self__.meta31359;
            };
          }(validate__5821__auto__, ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367);
          t3tr0s_slides.slide11.t31358.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367) {
            return function(_31360, meta31359__$1) {
              var self__ = this;
              var _31360__$1 = this;
              return new t3tr0s_slides.slide11.t31358(self__.G__31352, self__.input_checker31349, self__.owner, self__.G__31351, self__.validate__5821__auto__, self__.input_schema31348, self__.canvas, self__.output_checker31350, self__.output_schema31347, self__.app, self__.ufv__, meta31359__$1);
            };
          }(validate__5821__auto__, ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367);
          t3tr0s_slides.slide11.__GT_t31358 = function(validate__5821__auto__, ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367) {
            return function __GT_t31358(G__31352__$1, input_checker31349__$1, owner__$1, G__31351__$1, validate__5821__auto____$1, input_schema31348__$1, canvas__$1, output_checker31350__$1, output_schema31347__$1, app__$1, ufv____$1, meta31359) {
              return new t3tr0s_slides.slide11.t31358(G__31352__$1, input_checker31349__$1, owner__$1, G__31351__$1, validate__5821__auto____$1, input_schema31348__$1, canvas__$1, output_checker31350__$1, output_schema31347__$1, app__$1, ufv____$1, meta31359);
            };
          }(validate__5821__auto__, ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367);
        }
        return new t3tr0s_slides.slide11.t31358(G__31352, input_checker31349_31366, owner, G__31351, validate__5821__auto__, input_schema31348_31365, canvas, output_checker31350_31367, output_schema31347_31364, app, ufv___31363, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___31371 = output_checker31350_31367.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___31371)) {
        var error__5823__auto___31372 = temp__4126__auto___31371;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___31372)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema31347_31364, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___31372], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___31363, output_schema31347_31364, input_schema31348_31365, input_checker31349_31366, output_checker31350_31367);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide11.canvas), schema.core.make_fn_schema.call(null, output_schema31347_31364, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema31348_31365], null)));
t3tr0s_slides.slide11.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide11.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m31346) {
    return om.core.build.call(null, t3tr0s_slides.slide11.canvas, cursor__9685__auto__, m31346);
  };
  __GT_canvas = function(cursor__9685__auto__, m31346) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m31346);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___31390 = schema.utils.use_fn_validation;
var output_schema31374_31391 = schema.core.Any;
var input_schema31375_31392 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker31376_31393 = schema.core.checker.call(null, input_schema31375_31392);
var output_checker31377_31394 = schema.core.checker.call(null, output_schema31374_31391);
t3tr0s_slides.slide11.slide = function(ufv___31390, output_schema31374_31391, input_schema31375_31392, input_checker31376_31393, output_checker31377_31394) {
  return function slide(G__31378, G__31379) {
    var validate__5821__auto__ = ufv___31390.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___31395 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__31378, G__31379], null);
      var temp__4126__auto___31396 = input_checker31376_31393.call(null, args__5822__auto___31395);
      if (cljs.core.truth_(temp__4126__auto___31396)) {
        var error__5823__auto___31397 = temp__4126__auto___31396;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___31397)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema31375_31392, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___31395, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___31397], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__31378;
      var owner = G__31379;
      while (true) {
        if (typeof t3tr0s_slides.slide11.t31385 !== "undefined") {
        } else {
          t3tr0s_slides.slide11.t31385 = function(owner, input_schema31375, output_schema31374, G__31379, validate__5821__auto__, G__31378, input_checker31376, output_checker31377, slide, app, ufv__, meta31386) {
            this.owner = owner;
            this.input_schema31375 = input_schema31375;
            this.output_schema31374 = output_schema31374;
            this.G__31379 = G__31379;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__31378 = G__31378;
            this.input_checker31376 = input_checker31376;
            this.output_checker31377 = output_checker31377;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta31386 = meta31386;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide11.t31385.cljs$lang$type = true;
          t3tr0s_slides.slide11.t31385.cljs$lang$ctorStr = "t3tr0s-slides.slide11/t31385";
          t3tr0s_slides.slide11.t31385.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___31390, output_schema31374_31391, input_schema31375_31392, input_checker31376_31393, output_checker31377_31394) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide11/t31385");
            };
          }(validate__5821__auto__, ufv___31390, output_schema31374_31391, input_schema31375_31392, input_checker31376_31393, output_checker31377_31394);
          t3tr0s_slides.slide11.t31385.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide11.t31385.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___31390, output_schema31374_31391, input_schema31375_31392, input_checker31376_31393, output_checker31377_31394) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "11. Draw ghost piece."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide11.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide11.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___31390, output_schema31374_31391, input_schema31375_31392, input_checker31376_31393, output_checker31377_31394);
          t3tr0s_slides.slide11.t31385.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___31390, output_schema31374_31391, input_schema31375_31392, input_checker31376_31393, output_checker31377_31394) {
            return function(_31387) {
              var self__ = this;
              var _31387__$1 = this;
              return self__.meta31386;
            };
          }(validate__5821__auto__, ufv___31390, output_schema31374_31391, input_schema31375_31392, input_checker31376_31393, output_checker31377_31394);
          t3tr0s_slides.slide11.t31385.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___31390, output_schema31374_31391, input_schema31375_31392, input_checker31376_31393, output_checker31377_31394) {
            return function(_31387, meta31386__$1) {
              var self__ = this;
              var _31387__$1 = this;
              return new t3tr0s_slides.slide11.t31385(self__.owner, self__.input_schema31375, self__.output_schema31374, self__.G__31379, self__.validate__5821__auto__, self__.G__31378, self__.input_checker31376, self__.output_checker31377, self__.slide, self__.app, self__.ufv__, meta31386__$1);
            };
          }(validate__5821__auto__, ufv___31390, output_schema31374_31391, input_schema31375_31392, input_checker31376_31393, output_checker31377_31394);
          t3tr0s_slides.slide11.__GT_t31385 = function(validate__5821__auto__, ufv___31390, output_schema31374_31391, input_schema31375_31392, input_checker31376_31393, output_checker31377_31394) {
            return function __GT_t31385(owner__$1, input_schema31375__$1, output_schema31374__$1, G__31379__$1, validate__5821__auto____$1, G__31378__$1, input_checker31376__$1, output_checker31377__$1, slide__$1, app__$1, ufv____$1, meta31386) {
              return new t3tr0s_slides.slide11.t31385(owner__$1, input_schema31375__$1, output_schema31374__$1, G__31379__$1, validate__5821__auto____$1, G__31378__$1, input_checker31376__$1, output_checker31377__$1, slide__$1, app__$1, ufv____$1, meta31386);
            };
          }(validate__5821__auto__, ufv___31390, output_schema31374_31391, input_schema31375_31392, input_checker31376_31393, output_checker31377_31394);
        }
        return new t3tr0s_slides.slide11.t31385(owner, input_schema31375_31392, output_schema31374_31391, G__31379, validate__5821__auto__, G__31378, input_checker31376_31393, output_checker31377_31394, slide, app, ufv___31390, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___31398 = output_checker31377_31394.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___31398)) {
        var error__5823__auto___31399 = temp__4126__auto___31398;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___31399)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema31374_31391, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___31399], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___31390, output_schema31374_31391, input_schema31375_31392, input_checker31376_31393, output_checker31377_31394);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide11.slide), schema.core.make_fn_schema.call(null, output_schema31374_31391, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema31375_31392], null)));
t3tr0s_slides.slide11.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide11.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m31373) {
    return om.core.build.call(null, t3tr0s_slides.slide11.slide, cursor__9685__auto__, m31373);
  };
  __GT_slide = function(cursor__9685__auto__, m31373) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m31373);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide11.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide11.slide, t3tr0s_slides.slide11.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide11.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide11.key_down);
};
t3tr0s_slides.slide11.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide11.key_down);
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj24428 = {};
  return obj24428;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3541__auto__ = port;
    if (and__3541__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4180__auto__ = port == null ? null : port;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj24430 = {};
  return obj24430;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3541__auto__ = port;
    if (and__3541__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4180__auto__ = port == null ? null : port;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj24432 = {};
  return obj24432;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3541__auto__ = chan;
    if (and__3541__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4180__auto__ = chan == null ? null : chan;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3541__auto__ = chan;
    if (and__3541__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4180__auto__ = chan == null ? null : chan;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj24434 = {};
  return obj24434;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3541__auto__ = h;
    if (and__3541__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4180__auto__ = h == null ? null : h;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3541__auto__ = h;
    if (and__3541__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4180__auto__ = h == null ? null : h;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj24436 = {};
  return obj24436;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3541__auto__ = b;
    if (and__3541__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4180__auto__ = b == null ? null : b;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3541__auto__ = b;
    if (and__3541__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4180__auto__ = b == null ? null : b;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3541__auto__ = b;
    if (and__3541__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4180__auto__ = b == null ? null : b;
    return function() {
      var or__3553__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj24438 = {};
  return obj24438;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t24375 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t24375 = function(f, fn_handler, meta24376) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta24376 = meta24376;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t24375.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t24375.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t24375";
    cljs.core.async.impl.ioc_helpers.t24375.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.ioc-helpers/t24375");
    };
    cljs.core.async.impl.ioc_helpers.t24375.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t24375.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t24375.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t24375.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24377) {
      var self__ = this;
      var _24377__$1 = this;
      return self__.meta24376;
    };
    cljs.core.async.impl.ioc_helpers.t24375.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24377, meta24376__$1) {
      var self__ = this;
      var _24377__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t24375(self__.f, self__.fn_handler, meta24376__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t24375 = function __GT_t24375(f__$1, fn_handler__$1, meta24376) {
      return new cljs.core.async.impl.ioc_helpers.t24375(f__$1, fn_handler__$1, meta24376);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t24375(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e24379) {
    if (e24379 instanceof Object) {
      var ex = e24379;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e24379;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_24382_24384 = state;
    statearr_24382_24384[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_24382_24384[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_24383_24385 = state;
    statearr_24383_24385[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_24383_24385[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_24388_24390 = state;
    statearr_24388_24390[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_24388_24390[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_24389_24391 = state;
    statearr_24389_24391[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_24389_24391[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__24392) {
    var map__24397 = p__24392;
    var map__24397__$1 = cljs.core.seq_QMARK_.call(null, map__24397) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24397) : map__24397;
    var opts = map__24397__$1;
    var statearr_24398_24401 = state;
    statearr_24398_24401[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__24397, map__24397__$1, opts) {
      return function(val) {
        var statearr_24399_24402 = state;
        statearr_24399_24402[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__24397, map__24397__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_24400_24403 = state;
      statearr_24400_24403[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__24392 = null;
    if (arguments.length > 3) {
      p__24392 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__24392);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__24404) {
    var state = cljs.core.first(arglist__24404);
    arglist__24404 = cljs.core.next(arglist__24404);
    var cont_block = cljs.core.first(arglist__24404);
    arglist__24404 = cljs.core.next(arglist__24404);
    var ports = cljs.core.first(arglist__24404);
    var p__24392 = cljs.core.rest(arglist__24404);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__24392);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4139__auto__, k__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4139__auto____$1, k__4140__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4141__auto__, k24406, else__4142__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var G__24408 = k24406 instanceof cljs.core.Keyword ? k24406.fqn : null;
  switch(G__24408) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k24406, else__4142__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4153__auto__, writer__4154__auto__, opts__4155__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  var pr_pair__4156__auto__ = function(this__4153__auto____$1) {
    return function(keyval__4157__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, cljs.core.pr_writer, "", " ", "", opts__4155__auto__, keyval__4157__auto__);
    };
  }(this__4153__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4154__auto__, pr_pair__4156__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4155__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4133__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4143__auto__) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4134__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var h__3964__auto__ = self__.__hash;
  if (!(h__3964__auto__ == null)) {
    return h__3964__auto__;
  } else {
    var h__3964__auto____$1 = cljs.core.hash_imap.call(null, this__4134__auto____$1);
    self__.__hash = h__3964__auto____$1;
    return h__3964__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4135__auto__, other__4136__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = other__4136__auto__;
    if (cljs.core.truth_(and__3541__auto__)) {
      return this__4135__auto____$1.constructor === other__4136__auto__.constructor && cljs.core.equiv_map.call(null, this__4135__auto____$1, other__4136__auto__);
    } else {
      return and__3541__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4148__auto__, k__4149__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4149__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4148__auto____$1), self__.__meta), k__4149__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4149__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4146__auto__, k__4147__auto__, G__24405) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var pred__24409 = cljs.core.keyword_identical_QMARK_;
  var expr__24410 = k__4147__auto__;
  if (cljs.core.truth_(pred__24409.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__24410))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__24405, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__24409.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__24410))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__24405, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__24409.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__24410))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__24405, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__24409.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__24410))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__24405, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__24409.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__24410))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__24405, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4147__auto__, G__24405), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4151__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4138__auto__, G__24405) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__24405, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4144__auto__, entry__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4145__auto__)) {
    return cljs.core._assoc.call(null, this__4144__auto____$1, cljs.core._nth.call(null, entry__4145__auto__, 0), cljs.core._nth.call(null, entry__4145__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4144__auto____$1, entry__4145__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4173__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4173__auto__, writer__4174__auto__) {
  return cljs.core._write.call(null, writer__4174__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__24407) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__24407), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__24407), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__24407), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__24407), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__24407), null, cljs.core.dissoc.call(null, G__24407, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_24414 = state;
  statearr_24414[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_24414;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = exception;
      if (cljs.core.truth_(and__3541__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3541__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3541__auto__ = exception;
        if (cljs.core.truth_(and__3541__auto__)) {
          var and__3541__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3541__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3541__auto____$1;
          }
        } else {
          return and__3541__auto__;
        }
      }())) {
        var statearr_24420 = state;
        statearr_24420[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_24420[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_24420[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_24420[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_24420;
      } else {
        if (cljs.core.truth_(function() {
          var and__3541__auto__ = exception;
          if (cljs.core.truth_(and__3541__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3541__auto__;
          }
        }())) {
          var statearr_24421_24425 = state;
          statearr_24421_24425[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__24426 = state;
          state = G__24426;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3541__auto__ = exception;
            if (cljs.core.truth_(and__3541__auto__)) {
              var and__3541__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3541__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3541__auto____$1;
              }
            } else {
              return and__3541__auto__;
            }
          }())) {
            var statearr_24422 = state;
            statearr_24422[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_24422[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_24422;
          } else {
            if (cljs.core.truth_(function() {
              var and__3541__auto__ = cljs.core.not.call(null, exception);
              if (and__3541__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3541__auto__;
              }
            }())) {
              var statearr_24423 = state;
              statearr_24423[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_24423[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_24423;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_24424 = state;
                statearr_24424[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_24424[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_24424;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("t3tr0s_slides.slide07");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide07.dark_green = "#143";
t3tr0s_slides.slide07.light_green = "#175";
t3tr0s_slides.slide07.dark_purple = "#449";
t3tr0s_slides.slide07.light_purple = "#6ad";
t3tr0s_slides.slide07.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide07.rotate_coord = function rotate_coord(p__27499) {
  var vec__27501 = p__27499;
  var x = cljs.core.nth.call(null, vec__27501, 0, null);
  var y = cljs.core.nth.call(null, vec__27501, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide07.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide07.rotate_coord, piece);
};
t3tr0s_slides.slide07.rows = 20;
t3tr0s_slides.slide07.cols = 10;
t3tr0s_slides.slide07.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide07.cols, 0));
t3tr0s_slides.slide07.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide07.rows, t3tr0s_slides.slide07.empty_row));
t3tr0s_slides.slide07.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide07.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide07.empty_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide07.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide07.initial_pos], null));
t3tr0s_slides.slide07.write_piece = function write_piece(board, coords, p__27502) {
  while (true) {
    var vec__27506 = p__27502;
    var cx = cljs.core.nth.call(null, vec__27506, 0, null);
    var cy = cljs.core.nth.call(null, vec__27506, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__27507 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__27507, 0, null);
      var y = cljs.core.nth.call(null, vec__27507, 1, null);
      var G__27509 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e27508) {
          if (e27508 instanceof Error) {
            var _ = e27508;
            return board;
          } else {
            throw e27508;
          }
        }
      }();
      var G__27510 = cljs.core.rest.call(null, coords);
      var G__27511 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__27509;
      coords = G__27510;
      p__27502 = G__27511;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide07.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__27513 = cljs.core.deref.call(null, t3tr0s_slides.slide07.app_state);
  var map__27513__$1 = cljs.core.seq_QMARK_.call(null, map__27513) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27513) : map__27513;
  var position = cljs.core.get.call(null, map__27513__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__27513__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide07.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide07.write_piece, piece, position);
};
t3tr0s_slides.slide07.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__27518(s__27519) {
      return new cljs.core.LazySeq(null, function() {
        var s__27519__$1 = s__27519;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__27519__$1);
          if (temp__4126__auto__) {
            var s__27519__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__27519__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__27519__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__27521 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__27520 = 0;
                while (true) {
                  if (i__27520 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__27520);
                    cljs.core.chunk_append.call(null, b__27521, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide07.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null)))), " "));
                    var G__27522 = i__27520 + 1;
                    i__27520 = G__27522;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27521), iter__27518.call(null, cljs.core.chunk_rest.call(null, s__27519__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27521), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__27519__$2);
              return cljs.core.cons.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide07.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null)))), " "), iter__27518.call(null, cljs.core.rest.call(null, s__27519__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.cols));
  }(), " ]"], null);
};
var ufv___27602 = schema.utils.use_fn_validation;
var output_schema27524_27603 = schema.core.Any;
var input_schema27525_27604 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker27526_27605 = schema.core.checker.call(null, input_schema27525_27604);
var output_checker27527_27606 = schema.core.checker.call(null, output_schema27524_27603);
t3tr0s_slides.slide07.code = function(ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606) {
  return function code(G__27528, G__27529) {
    var validate__5821__auto__ = ufv___27602.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___27607 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__27528, G__27529], null);
      var temp__4126__auto___27608 = input_checker27526_27605.call(null, args__5822__auto___27607);
      if (cljs.core.truth_(temp__4126__auto___27608)) {
        var error__5823__auto___27609 = temp__4126__auto___27608;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___27609)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema27525_27604, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___27607, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___27609], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__27528;
      var owner = G__27529;
      while (true) {
        if (typeof t3tr0s_slides.slide07.t27566 !== "undefined") {
        } else {
          t3tr0s_slides.slide07.t27566 = function(owner, G__27529, validate__5821__auto__, output_checker27527, input_schema27525, output_schema27524, input_checker27526, G__27528, app, ufv__, code, meta27567) {
            this.owner = owner;
            this.G__27529 = G__27529;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker27527 = output_checker27527;
            this.input_schema27525 = input_schema27525;
            this.output_schema27524 = output_schema27524;
            this.input_checker27526 = input_checker27526;
            this.G__27528 = G__27528;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta27567 = meta27567;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide07.t27566.cljs$lang$type = true;
          t3tr0s_slides.slide07.t27566.cljs$lang$ctorStr = "t3tr0s-slides.slide07/t27566";
          t3tr0s_slides.slide07.t27566.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide07/t27566");
            };
          }(validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606);
          t3tr0s_slides.slide07.t27566.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide07.t27566.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs27569 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: click-drag canvas on the right");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs27569) ? sablono.interpreter.attributes.call(null, attrs27569) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs27569) ? cljs.core.PersistentVector.fromArray(["\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " write-piece\n", "  [board coords [cx cy]]\n", "  (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "if-let")), " [[x y] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), " coords)]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "recur")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "assoc-in")), " board [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "+")), " y cy) (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x cx)] ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "1")), ")\n", "           (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "rest")), " coords)\n", "           [cx cy])\n", "    board))\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "defn")), " lock-piece! []\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [{", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":keys")), " [piece position]} @game-state]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "update-in")), " [", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), "]\n", "        write-piece piece position)))\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " @game-state)\n", "\n", cljs.core.into_array.call(null, function() {
                  var iter__4278__auto__ = function(attrs27569, ___$1, validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606) {
                    return function iter__27570(s__27571) {
                      return new cljs.core.LazySeq(null, function(attrs27569, ___$1, validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606) {
                        return function() {
                          var s__27571__$1 = s__27571;
                          while (true) {
                            var temp__4126__auto__ = cljs.core.seq.call(null, s__27571__$1);
                            if (temp__4126__auto__) {
                              var s__27571__$2 = temp__4126__auto__;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__27571__$2)) {
                                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__27571__$2);
                                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                var b__27573 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                if (function() {
                                  var i__27572 = 0;
                                  while (true) {
                                    if (i__27572 < size__4277__auto__) {
                                      var row = cljs.core._nth.call(null, c__4276__auto__, i__27572);
                                      cljs.core.chunk_append.call(null, b__27573, sablono.interpreter.interpret.call(null, function() {
                                        var pred__27580 = cljs.core._EQ_;
                                        var expr__27581 = row;
                                        if (cljs.core.truth_(pred__27580.call(null, 0, expr__27581))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "  [");
                                        } else {
                                          if (cljs.core.truth_(pred__27580.call(null, t3tr0s_slides.slide07.rows - 1, expr__27581))) {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                          } else {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                          }
                                        }
                                      }()));
                                      var G__27610 = i__27572 + 1;
                                      i__27572 = G__27610;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27573), iter__27570.call(null, cljs.core.chunk_rest.call(null, s__27571__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27573), null);
                                }
                              } else {
                                var row = cljs.core.first.call(null, s__27571__$2);
                                return cljs.core.cons.call(null, sablono.interpreter.interpret.call(null, function() {
                                  var pred__27583 = cljs.core._EQ_;
                                  var expr__27584 = row;
                                  if (cljs.core.truth_(pred__27583.call(null, 0, expr__27584))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "  [");
                                  } else {
                                    if (cljs.core.truth_(pred__27583.call(null, t3tr0s_slides.slide07.rows - 1, expr__27584))) {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                    } else {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                    }
                                  }
                                }()), iter__27570.call(null, cljs.core.rest.call(null, s__27571__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(attrs27569, ___$1, validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606), null, null);
                    };
                  }(attrs27569, ___$1, validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606);
                  return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.rows));
                }())], true) : cljs.core.PersistentVector.fromArray([sablono.interpreter.interpret.call(null, attrs27569), "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " write-piece\n", "  [board coords [cx cy]]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "if-let")), " [[x y] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), 
                " coords)]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "recur")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "assoc-in")), " board [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " y cy) (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x cx)] ", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.lit.call(null, "1")), ")\n", "           (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "rest")), " coords)\n", "           [cx cy])\n", "    board))\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " lock-piece! []\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [{", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.kw.call(null, ":keys")), " [piece position]} @game-state]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " [", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), "]\n", "        write-piece piece position)))\n", "\n", "\x3e (", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " @game-state)\n", "\n", cljs.core.into_array.call(null, function() {
                  var iter__4278__auto__ = function(attrs27569, ___$1, validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606) {
                    return function iter__27586(s__27587) {
                      return new cljs.core.LazySeq(null, function(attrs27569, ___$1, validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606) {
                        return function() {
                          var s__27587__$1 = s__27587;
                          while (true) {
                            var temp__4126__auto__ = cljs.core.seq.call(null, s__27587__$1);
                            if (temp__4126__auto__) {
                              var s__27587__$2 = temp__4126__auto__;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__27587__$2)) {
                                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__27587__$2);
                                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                var b__27589 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                if (function() {
                                  var i__27588 = 0;
                                  while (true) {
                                    if (i__27588 < size__4277__auto__) {
                                      var row = cljs.core._nth.call(null, c__4276__auto__, i__27588);
                                      cljs.core.chunk_append.call(null, b__27589, sablono.interpreter.interpret.call(null, function() {
                                        var pred__27596 = cljs.core._EQ_;
                                        var expr__27597 = row;
                                        if (cljs.core.truth_(pred__27596.call(null, 0, expr__27597))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "  [");
                                        } else {
                                          if (cljs.core.truth_(pred__27596.call(null, t3tr0s_slides.slide07.rows - 1, expr__27597))) {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                          } else {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                          }
                                        }
                                      }()));
                                      var G__27611 = i__27588 + 1;
                                      i__27588 = G__27611;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27589), iter__27586.call(null, cljs.core.chunk_rest.call(null, s__27587__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__27589), null);
                                }
                              } else {
                                var row = cljs.core.first.call(null, s__27587__$2);
                                return cljs.core.cons.call(null, sablono.interpreter.interpret.call(null, function() {
                                  var pred__27599 = cljs.core._EQ_;
                                  var expr__27600 = row;
                                  if (cljs.core.truth_(pred__27599.call(null, 0, expr__27600))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "  [");
                                  } else {
                                    if (cljs.core.truth_(pred__27599.call(null, t3tr0s_slides.slide07.rows - 1, expr__27600))) {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "])\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                    } else {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide07.data_row.call(null, row, self__.app)), "   ");
                                    }
                                  }
                                }()), iter__27586.call(null, cljs.core.rest.call(null, s__27587__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(attrs27569, ___$1, validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606), null, null);
                    };
                  }(attrs27569, ___$1, validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606);
                  return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.rows));
                }())], true)));
              }()));
            };
          }(validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606);
          t3tr0s_slides.slide07.t27566.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606) {
            return function(_27568) {
              var self__ = this;
              var _27568__$1 = this;
              return self__.meta27567;
            };
          }(validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606);
          t3tr0s_slides.slide07.t27566.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606) {
            return function(_27568, meta27567__$1) {
              var self__ = this;
              var _27568__$1 = this;
              return new t3tr0s_slides.slide07.t27566(self__.owner, self__.G__27529, self__.validate__5821__auto__, self__.output_checker27527, self__.input_schema27525, self__.output_schema27524, self__.input_checker27526, self__.G__27528, self__.app, self__.ufv__, self__.code, meta27567__$1);
            };
          }(validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606);
          t3tr0s_slides.slide07.__GT_t27566 = function(validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606) {
            return function __GT_t27566(owner__$1, G__27529__$1, validate__5821__auto____$1, output_checker27527__$1, input_schema27525__$1, output_schema27524__$1, input_checker27526__$1, G__27528__$1, app__$1, ufv____$1, code__$1, meta27567) {
              return new t3tr0s_slides.slide07.t27566(owner__$1, G__27529__$1, validate__5821__auto____$1, output_checker27527__$1, input_schema27525__$1, output_schema27524__$1, input_checker27526__$1, G__27528__$1, app__$1, ufv____$1, code__$1, meta27567);
            };
          }(validate__5821__auto__, ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606);
        }
        return new t3tr0s_slides.slide07.t27566(owner, G__27529, validate__5821__auto__, output_checker27527_27606, input_schema27525_27604, output_schema27524_27603, input_checker27526_27605, G__27528, app, ufv___27602, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___27612 = output_checker27527_27606.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___27612)) {
        var error__5823__auto___27613 = temp__4126__auto___27612;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___27613)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema27524_27603, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___27613], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___27602, output_schema27524_27603, input_schema27525_27604, input_checker27526_27605, output_checker27527_27606);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide07.code), schema.core.make_fn_schema.call(null, output_schema27524_27603, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema27525_27604], null)));
t3tr0s_slides.slide07.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide07.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m27523) {
    return om.core.build.call(null, t3tr0s_slides.slide07.code, cursor__9685__auto__, m27523);
  };
  __GT_code = function(cursor__9685__auto__, m27523) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m27523);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide07.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide07.rows);
t3tr0s_slides.slide07.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__27614, is_center) {
  var vec__27616 = p__27614;
  var x = cljs.core.nth.call(null, vec__27616, 0, null);
  var y = cljs.core.nth.call(null, vec__27616, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide07.cell_size * x;
  var ry = t3tr0s_slides.slide07.cell_size * y;
  var rs = t3tr0s_slides.slide07.cell_size;
  var cx = t3tr0s_slides.slide07.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide07.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide07.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide07.piece_abs_coords = function piece_abs_coords(piece, p__27617) {
  var vec__27621 = p__27617;
  var cx = cljs.core.nth.call(null, vec__27621, 0, null);
  var cy = cljs.core.nth.call(null, vec__27621, 1, null);
  return cljs.core.mapv.call(null, function(vec__27621, cx, cy) {
    return function(p__27622) {
      var vec__27623 = p__27622;
      var x = cljs.core.nth.call(null, vec__27623, 0, null);
      var y = cljs.core.nth.call(null, vec__27623, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__27621, cx, cy), piece);
};
t3tr0s_slides.slide07.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__27630 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide07.piece_abs_coords.call(null, piece, pos)));
  var chunk__27631 = null;
  var count__27632 = 0;
  var i__27633 = 0;
  while (true) {
    if (i__27633 < count__27632) {
      var vec__27634 = cljs.core._nth.call(null, chunk__27631, i__27633);
      var i = cljs.core.nth.call(null, vec__27634, 0, null);
      var c = cljs.core.nth.call(null, vec__27634, 1, null);
      t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__27636 = seq__27630;
      var G__27637 = chunk__27631;
      var G__27638 = count__27632;
      var G__27639 = i__27633 + 1;
      seq__27630 = G__27636;
      chunk__27631 = G__27637;
      count__27632 = G__27638;
      i__27633 = G__27639;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__27630);
      if (temp__4126__auto__) {
        var seq__27630__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27630__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__27630__$1);
          var G__27640 = cljs.core.chunk_rest.call(null, seq__27630__$1);
          var G__27641 = c__4309__auto__;
          var G__27642 = cljs.core.count.call(null, c__4309__auto__);
          var G__27643 = 0;
          seq__27630 = G__27640;
          chunk__27631 = G__27641;
          count__27632 = G__27642;
          i__27633 = G__27643;
          continue;
        } else {
          var vec__27635 = cljs.core.first.call(null, seq__27630__$1);
          var i = cljs.core.nth.call(null, vec__27635, 0, null);
          var c = cljs.core.nth.call(null, vec__27635, 1, null);
          t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__27644 = cljs.core.next.call(null, seq__27630__$1);
          var G__27645 = null;
          var G__27646 = 0;
          var G__27647 = 0;
          seq__27630 = G__27644;
          chunk__27631 = G__27645;
          count__27632 = G__27646;
          i__27633 = G__27647;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide07.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__27660 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.rows));
  var chunk__27665 = null;
  var count__27666 = 0;
  var i__27667 = 0;
  while (true) {
    if (i__27667 < count__27666) {
      var y = cljs.core._nth.call(null, chunk__27665, i__27667);
      var seq__27668_27672 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.cols));
      var chunk__27669_27673 = null;
      var count__27670_27674 = 0;
      var i__27671_27675 = 0;
      while (true) {
        if (i__27671_27675 < count__27670_27674) {
          var x_27676 = cljs.core._nth.call(null, chunk__27669_27673, i__27671_27675);
          var v_27677 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_27676], null));
          if (v_27677 === 0) {
          } else {
            t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_27676, y], null), false);
          }
          var G__27678 = seq__27668_27672;
          var G__27679 = chunk__27669_27673;
          var G__27680 = count__27670_27674;
          var G__27681 = i__27671_27675 + 1;
          seq__27668_27672 = G__27678;
          chunk__27669_27673 = G__27679;
          count__27670_27674 = G__27680;
          i__27671_27675 = G__27681;
          continue;
        } else {
          var temp__4126__auto___27682 = cljs.core.seq.call(null, seq__27668_27672);
          if (temp__4126__auto___27682) {
            var seq__27668_27683__$1 = temp__4126__auto___27682;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__27668_27683__$1)) {
              var c__4309__auto___27684 = cljs.core.chunk_first.call(null, seq__27668_27683__$1);
              var G__27685 = cljs.core.chunk_rest.call(null, seq__27668_27683__$1);
              var G__27686 = c__4309__auto___27684;
              var G__27687 = cljs.core.count.call(null, c__4309__auto___27684);
              var G__27688 = 0;
              seq__27668_27672 = G__27685;
              chunk__27669_27673 = G__27686;
              count__27670_27674 = G__27687;
              i__27671_27675 = G__27688;
              continue;
            } else {
              var x_27689 = cljs.core.first.call(null, seq__27668_27683__$1);
              var v_27690 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_27689], null));
              if (v_27690 === 0) {
              } else {
                t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_27689, y], null), false);
              }
              var G__27691 = cljs.core.next.call(null, seq__27668_27683__$1);
              var G__27692 = null;
              var G__27693 = 0;
              var G__27694 = 0;
              seq__27668_27672 = G__27691;
              chunk__27669_27673 = G__27692;
              count__27670_27674 = G__27693;
              i__27671_27675 = G__27694;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__27695 = seq__27660;
      var G__27696 = chunk__27665;
      var G__27697 = count__27666;
      var G__27698 = i__27667 + 1;
      seq__27660 = G__27695;
      chunk__27665 = G__27696;
      count__27666 = G__27697;
      i__27667 = G__27698;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__27660);
      if (temp__4126__auto__) {
        var seq__27660__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27660__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__27660__$1);
          var G__27699 = cljs.core.chunk_rest.call(null, seq__27660__$1);
          var G__27700 = c__4309__auto__;
          var G__27701 = cljs.core.count.call(null, c__4309__auto__);
          var G__27702 = 0;
          seq__27660 = G__27699;
          chunk__27665 = G__27700;
          count__27666 = G__27701;
          i__27667 = G__27702;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__27660__$1);
          var seq__27661_27703 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide07.cols));
          var chunk__27662_27704 = null;
          var count__27663_27705 = 0;
          var i__27664_27706 = 0;
          while (true) {
            if (i__27664_27706 < count__27663_27705) {
              var x_27707 = cljs.core._nth.call(null, chunk__27662_27704, i__27664_27706);
              var v_27708 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_27707], null));
              if (v_27708 === 0) {
              } else {
                t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_27707, y], null), false);
              }
              var G__27709 = seq__27661_27703;
              var G__27710 = chunk__27662_27704;
              var G__27711 = count__27663_27705;
              var G__27712 = i__27664_27706 + 1;
              seq__27661_27703 = G__27709;
              chunk__27662_27704 = G__27710;
              count__27663_27705 = G__27711;
              i__27664_27706 = G__27712;
              continue;
            } else {
              var temp__4126__auto___27713__$1 = cljs.core.seq.call(null, seq__27661_27703);
              if (temp__4126__auto___27713__$1) {
                var seq__27661_27714__$1 = temp__4126__auto___27713__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__27661_27714__$1)) {
                  var c__4309__auto___27715 = cljs.core.chunk_first.call(null, seq__27661_27714__$1);
                  var G__27716 = cljs.core.chunk_rest.call(null, seq__27661_27714__$1);
                  var G__27717 = c__4309__auto___27715;
                  var G__27718 = cljs.core.count.call(null, c__4309__auto___27715);
                  var G__27719 = 0;
                  seq__27661_27703 = G__27716;
                  chunk__27662_27704 = G__27717;
                  count__27663_27705 = G__27718;
                  i__27664_27706 = G__27719;
                  continue;
                } else {
                  var x_27720 = cljs.core.first.call(null, seq__27661_27714__$1);
                  var v_27721 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_27720], null));
                  if (v_27721 === 0) {
                  } else {
                    t3tr0s_slides.slide07.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_27720, y], null), false);
                  }
                  var G__27722 = cljs.core.next.call(null, seq__27661_27714__$1);
                  var G__27723 = null;
                  var G__27724 = 0;
                  var G__27725 = 0;
                  seq__27661_27703 = G__27722;
                  chunk__27662_27704 = G__27723;
                  count__27663_27705 = G__27724;
                  i__27664_27706 = G__27725;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__27726 = cljs.core.next.call(null, seq__27660__$1);
          var G__27727 = null;
          var G__27728 = 0;
          var G__27729 = 0;
          seq__27660 = G__27726;
          chunk__27665 = G__27727;
          count__27666 = G__27728;
          i__27667 = G__27729;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide07.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide07.cell_size * t3tr0s_slides.slide07.cols, t3tr0s_slides.slide07.cell_size * t3tr0s_slides.slide07.rows);
  ctx.fillStyle = t3tr0s_slides.slide07.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide07.light_green;
  t3tr0s_slides.slide07.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = t3tr0s_slides.slide07.dark_purple;
    ctx.strokeStyle = t3tr0s_slides.slide07.light_purple;
    return t3tr0s_slides.slide07.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide07.canvas_mouse = function canvas_mouse(app, owner, e) {
  var clicking = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "clicking", "clicking", 1769354153));
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide07.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide07.cell_size);
  om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [col, row], null));
  if (cljs.core.truth_(clicking)) {
    return t3tr0s_slides.slide07.lock_piece_BANG_.call(null);
  } else {
    return null;
  }
};
var ufv___27744 = schema.utils.use_fn_validation;
var output_schema27732_27745 = schema.core.Any;
var input_schema27733_27746 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker27734_27747 = schema.core.checker.call(null, input_schema27733_27746);
var output_checker27735_27748 = schema.core.checker.call(null, output_schema27732_27745);
t3tr0s_slides.slide07.canvas = function(ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748) {
  return function canvas(G__27736, G__27737) {
    var validate__5821__auto__ = ufv___27744.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___27749 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__27736, G__27737], null);
      var temp__4126__auto___27750 = input_checker27734_27747.call(null, args__5822__auto___27749);
      if (cljs.core.truth_(temp__4126__auto___27750)) {
        var error__5823__auto___27751 = temp__4126__auto___27750;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___27751)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema27733_27746, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___27749, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___27751], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__27736;
      var owner = G__27737;
      while (true) {
        if (typeof t3tr0s_slides.slide07.t27741 !== "undefined") {
        } else {
          t3tr0s_slides.slide07.t27741 = function(owner, input_schema27733, validate__5821__auto__, output_schema27732, G__27737, input_checker27734, G__27736, canvas, output_checker27735, app, ufv__, meta27742) {
            this.owner = owner;
            this.input_schema27733 = input_schema27733;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema27732 = output_schema27732;
            this.G__27737 = G__27737;
            this.input_checker27734 = input_checker27734;
            this.G__27736 = G__27736;
            this.canvas = canvas;
            this.output_checker27735 = output_checker27735;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta27742 = meta27742;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide07.t27741.cljs$lang$type = true;
          t3tr0s_slides.slide07.t27741.cljs$lang$ctorStr = "t3tr0s-slides.slide07/t27741";
          t3tr0s_slides.slide07.t27741.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide07/t27741");
            };
          }(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748);
          t3tr0s_slides.slide07.t27741.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide07.t27741.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseDown":function(___$1, validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748) {
                return function() {
                  om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "clicking", "clicking", 1769354153), true);
                  return t3tr0s_slides.slide07.lock_piece_BANG_.call(null);
                };
              }(___$1, validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748), "onMouseUp":function(___$1, validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748) {
                return function() {
                  return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "clicking", "clicking", 1769354153), false);
                };
              }(___$1, validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748), "onMouseLeave":function(___$1, validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748) {
                return function() {
                  return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "clicking", "clicking", 1769354153), false);
                };
              }(___$1, validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748), "onMouseMove":function(___$1, validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748) {
                return function(p1__27730_SHARP_) {
                  return t3tr0s_slides.slide07.canvas_mouse.call(null, self__.app, self__.owner, p1__27730_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748)}));
            };
          }(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748);
          t3tr0s_slides.slide07.t27741.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide07.t27741.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide07.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748);
          t3tr0s_slides.slide07.t27741.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide07.t27741.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide07.cols * t3tr0s_slides.slide07.cell_size;
              canvas__$2.height = t3tr0s_slides.slide07.rows * t3tr0s_slides.slide07.cell_size;
              return t3tr0s_slides.slide07.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748);
          t3tr0s_slides.slide07.t27741.prototype.om$core$IInitState$ = true;
          t3tr0s_slides.slide07.t27741.prototype.om$core$IInitState$init_state$arity$1 = function(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clicking", "clicking", 1769354153), false], null);
            };
          }(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748);
          t3tr0s_slides.slide07.t27741.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748) {
            return function(_27743) {
              var self__ = this;
              var _27743__$1 = this;
              return self__.meta27742;
            };
          }(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748);
          t3tr0s_slides.slide07.t27741.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748) {
            return function(_27743, meta27742__$1) {
              var self__ = this;
              var _27743__$1 = this;
              return new t3tr0s_slides.slide07.t27741(self__.owner, self__.input_schema27733, self__.validate__5821__auto__, self__.output_schema27732, self__.G__27737, self__.input_checker27734, self__.G__27736, self__.canvas, self__.output_checker27735, self__.app, self__.ufv__, meta27742__$1);
            };
          }(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748);
          t3tr0s_slides.slide07.__GT_t27741 = function(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748) {
            return function __GT_t27741(owner__$1, input_schema27733__$1, validate__5821__auto____$1, output_schema27732__$1, G__27737__$1, input_checker27734__$1, G__27736__$1, canvas__$1, output_checker27735__$1, app__$1, ufv____$1, meta27742) {
              return new t3tr0s_slides.slide07.t27741(owner__$1, input_schema27733__$1, validate__5821__auto____$1, output_schema27732__$1, G__27737__$1, input_checker27734__$1, G__27736__$1, canvas__$1, output_checker27735__$1, app__$1, ufv____$1, meta27742);
            };
          }(validate__5821__auto__, ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748);
        }
        return new t3tr0s_slides.slide07.t27741(owner, input_schema27733_27746, validate__5821__auto__, output_schema27732_27745, G__27737, input_checker27734_27747, G__27736, canvas, output_checker27735_27748, app, ufv___27744, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___27752 = output_checker27735_27748.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___27752)) {
        var error__5823__auto___27753 = temp__4126__auto___27752;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___27753)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema27732_27745, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___27753], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___27744, output_schema27732_27745, input_schema27733_27746, input_checker27734_27747, output_checker27735_27748);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide07.canvas), schema.core.make_fn_schema.call(null, output_schema27732_27745, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema27733_27746], null)));
t3tr0s_slides.slide07.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide07.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m27731) {
    return om.core.build.call(null, t3tr0s_slides.slide07.canvas, cursor__9685__auto__, m27731);
  };
  __GT_canvas = function(cursor__9685__auto__, m27731) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m27731);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___27771 = schema.utils.use_fn_validation;
var output_schema27755_27772 = schema.core.Any;
var input_schema27756_27773 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker27757_27774 = schema.core.checker.call(null, input_schema27756_27773);
var output_checker27758_27775 = schema.core.checker.call(null, output_schema27755_27772);
t3tr0s_slides.slide07.slide = function(ufv___27771, output_schema27755_27772, input_schema27756_27773, input_checker27757_27774, output_checker27758_27775) {
  return function slide(G__27759, G__27760) {
    var validate__5821__auto__ = ufv___27771.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___27776 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__27759, G__27760], null);
      var temp__4126__auto___27777 = input_checker27757_27774.call(null, args__5822__auto___27776);
      if (cljs.core.truth_(temp__4126__auto___27777)) {
        var error__5823__auto___27778 = temp__4126__auto___27777;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___27778)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema27756_27773, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___27776, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___27778], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__27759;
      var owner = G__27760;
      while (true) {
        if (typeof t3tr0s_slides.slide07.t27766 !== "undefined") {
        } else {
          t3tr0s_slides.slide07.t27766 = function(G__27759, owner, validate__5821__auto__, output_checker27758, input_schema27756, output_schema27755, slide, app, ufv__, G__27760, input_checker27757, meta27767) {
            this.G__27759 = G__27759;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker27758 = output_checker27758;
            this.input_schema27756 = input_schema27756;
            this.output_schema27755 = output_schema27755;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.G__27760 = G__27760;
            this.input_checker27757 = input_checker27757;
            this.meta27767 = meta27767;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide07.t27766.cljs$lang$type = true;
          t3tr0s_slides.slide07.t27766.cljs$lang$ctorStr = "t3tr0s-slides.slide07/t27766";
          t3tr0s_slides.slide07.t27766.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___27771, output_schema27755_27772, input_schema27756_27773, input_checker27757_27774, output_checker27758_27775) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide07/t27766");
            };
          }(validate__5821__auto__, ufv___27771, output_schema27755_27772, input_schema27756_27773, input_checker27757_27774, output_checker27758_27775);
          t3tr0s_slides.slide07.t27766.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide07.t27766.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___27771, output_schema27755_27772, input_schema27756_27773, input_checker27757_27774, output_checker27758_27775) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "7. Write piece to board."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide07.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide07.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___27771, output_schema27755_27772, input_schema27756_27773, input_checker27757_27774, output_checker27758_27775);
          t3tr0s_slides.slide07.t27766.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___27771, output_schema27755_27772, input_schema27756_27773, input_checker27757_27774, output_checker27758_27775) {
            return function(_27768) {
              var self__ = this;
              var _27768__$1 = this;
              return self__.meta27767;
            };
          }(validate__5821__auto__, ufv___27771, output_schema27755_27772, input_schema27756_27773, input_checker27757_27774, output_checker27758_27775);
          t3tr0s_slides.slide07.t27766.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___27771, output_schema27755_27772, input_schema27756_27773, input_checker27757_27774, output_checker27758_27775) {
            return function(_27768, meta27767__$1) {
              var self__ = this;
              var _27768__$1 = this;
              return new t3tr0s_slides.slide07.t27766(self__.G__27759, self__.owner, self__.validate__5821__auto__, self__.output_checker27758, self__.input_schema27756, self__.output_schema27755, self__.slide, self__.app, self__.ufv__, self__.G__27760, self__.input_checker27757, meta27767__$1);
            };
          }(validate__5821__auto__, ufv___27771, output_schema27755_27772, input_schema27756_27773, input_checker27757_27774, output_checker27758_27775);
          t3tr0s_slides.slide07.__GT_t27766 = function(validate__5821__auto__, ufv___27771, output_schema27755_27772, input_schema27756_27773, input_checker27757_27774, output_checker27758_27775) {
            return function __GT_t27766(G__27759__$1, owner__$1, validate__5821__auto____$1, output_checker27758__$1, input_schema27756__$1, output_schema27755__$1, slide__$1, app__$1, ufv____$1, G__27760__$1, input_checker27757__$1, meta27767) {
              return new t3tr0s_slides.slide07.t27766(G__27759__$1, owner__$1, validate__5821__auto____$1, output_checker27758__$1, input_schema27756__$1, output_schema27755__$1, slide__$1, app__$1, ufv____$1, G__27760__$1, input_checker27757__$1, meta27767);
            };
          }(validate__5821__auto__, ufv___27771, output_schema27755_27772, input_schema27756_27773, input_checker27757_27774, output_checker27758_27775);
        }
        return new t3tr0s_slides.slide07.t27766(G__27759, owner, validate__5821__auto__, output_checker27758_27775, input_schema27756_27773, output_schema27755_27772, slide, app, ufv___27771, G__27760, input_checker27757_27774, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___27779 = output_checker27758_27775.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___27779)) {
        var error__5823__auto___27780 = temp__4126__auto___27779;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___27780)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema27755_27772, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___27780], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___27771, output_schema27755_27772, input_schema27756_27773, input_checker27757_27774, output_checker27758_27775);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide07.slide), schema.core.make_fn_schema.call(null, output_schema27755_27772, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema27756_27773], null)));
t3tr0s_slides.slide07.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide07.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m27754) {
    return om.core.build.call(null, t3tr0s_slides.slide07.slide, cursor__9685__auto__, m27754);
  };
  __GT_slide = function(cursor__9685__auto__, m27754) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m27754);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide07.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide07.slide, t3tr0s_slides.slide07.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide07.resume = function resume() {
  return null;
};
t3tr0s_slides.slide07.stop = function stop() {
  return null;
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__24439 = cnt + 1;
      cnt = G__24439;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4409__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4409__auto__) {
      var v_24440 = this$.pop();
      if (keep_QMARK_.call(null, v_24440)) {
        this$.unshift(v_24440);
      } else {
      }
      var G__24441 = x + 1;
      x = G__24441;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: Can't create a ring buffer of size 0\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0))));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error("Assert failed: Can't add to a full buffer\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -97582774, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_24442 = 0;
  while (true) {
    var m_24443 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_24443 == null) {
    } else {
      m_24443.call(null);
      if (count_24442 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__24444 = count_24442 + 1;
        count_24442 = G__24444;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3541__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3541__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t24448 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t24448 = function(val, box, meta24449) {
      this.val = val;
      this.box = box;
      this.meta24449 = meta24449;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t24448.cljs$lang$type = true;
    cljs.core.async.impl.channels.t24448.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t24448";
    cljs.core.async.impl.channels.t24448.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.channels/t24448");
    };
    cljs.core.async.impl.channels.t24448.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t24448.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24450) {
      var self__ = this;
      var _24450__$1 = this;
      return self__.meta24449;
    };
    cljs.core.async.impl.channels.t24448.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24450, meta24449__$1) {
      var self__ = this;
      var _24450__$1 = this;
      return new cljs.core.async.impl.channels.t24448(self__.val, self__.box, meta24449__$1);
    };
    cljs.core.async.impl.channels.__GT_t24448 = function __GT_t24448(val__$1, box__$1, meta24449) {
      return new cljs.core.async.impl.channels.t24448(val__$1, box__$1, meta24449);
    };
  }
  return new cljs.core.async.impl.channels.t24448(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4123__auto__, writer__4124__auto__, opts__4125__auto__) {
  return cljs.core._write.call(null, writer__4124__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_24451 = self__.takes.pop();
      if (taker_24451 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_24451)) {
          var take_cb_24452 = cljs.core.async.impl.protocols.commit.call(null, taker_24451);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_24452, taker_24451, this$__$1) {
            return function() {
              return take_cb_24452.call(null, null);
            };
          }(take_cb_24452, taker_24451, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        var putter_24453 = self__.puts.pop();
        if (!(putter_24453 == null)) {
          var put_handler_24454 = putter_24453.handler;
          var val_24455 = putter_24453.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_24454)) {
            var put_cb_24456 = cljs.core.async.impl.protocols.commit.call(null, put_handler_24454);
            var __24457__$1 = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, function(put_cb_24456, __24457__$1, put_handler_24454, val_24455, putter_24453, _, retval, this$__$1) {
              return function() {
                return put_cb_24456.call(null, true);
              };
            }(put_cb_24456, __24457__$1, put_handler_24454, val_24455, putter_24453, _, retval, this$__$1));
            cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val_24455);
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      return retval;
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, function(put_cb, _, put_handler, val, putter, this$__$1) {
              return function() {
                return put_cb.call(null, true);
              };
            }(put_cb, _, put_handler, val, putter, this$__$1));
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending takes are allowed on a single channel.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, 
              "takes", "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error("Assert failed: Can't put nil in on a channel\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null))))));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker, closed__$1, this$__$1) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker, closed__$1, this$__$1));
          return cljs.core.async.impl.channels.box.call(null, true);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, true);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending puts are allowed on a single channel. Consider using a windowed buffer.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false);
};
goog.provide("t3tr0s_slides.slide01");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide01.dark_green = "#143";
t3tr0s_slides.slide01.light_green = "#175";
t3tr0s_slides.slide01.dark_purple = "#449";
t3tr0s_slides.slide01.light_purple = "#6ad";
t3tr0s_slides.slide01.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "row", "row", -570139521), null, new cljs.core.Keyword(null, "col", "col", -1959363084), null], null));
t3tr0s_slides.slide01.rows = 20;
t3tr0s_slides.slide01.cols = 10;
t3tr0s_slides.slide01.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide01.cols, 0));
t3tr0s_slides.slide01.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide01.rows, t3tr0s_slides.slide01.empty_row));
t3tr0s_slides.slide01.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "key", "key", -1516042587), "row" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(row), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, row, (new cljs.core.Keyword(null, "row", "row", -570139521)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-row-534ed" : 
  "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "row", "row", -570139521), row);
  }, new cljs.core.Keyword(null, "onMouseLeave", "onMouseLeave", 1446726903), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "row", "row", -570139521), null);
  }], null), "[", function() {
    var iter__4278__auto__ = function iter__29564(s__29565) {
      return new cljs.core.LazySeq(null, function() {
        var s__29565__$1 = s__29565;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__29565__$1);
          if (temp__4126__auto__) {
            var s__29565__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__29565__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__29565__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__29567 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__29566 = 0;
                while (true) {
                  if (i__29566 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__29566);
                    cljs.core.chunk_append.call(null, b__29567, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "key", "key", -1516042587), "row" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(row) + "col" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(col), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, 
                    row, (new cljs.core.Keyword(null, "row", "row", -570139521)).cljs$core$IFn$_invoke$arity$1(app)) && cljs.core._EQ_.call(null, col, (new cljs.core.Keyword(null, "col", "col", -1959363084)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : null, new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(i__29566, col, c__4276__auto__, size__4277__auto__, b__29567, s__29565__$2, temp__4126__auto__) {
                      return function() {
                        return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), col);
                      };
                    }(i__29566, col, c__4276__auto__, size__4277__auto__, b__29567, s__29565__$2, temp__4126__auto__), new cljs.core.Keyword(null, "onMouseLeave", "onMouseLeave", 1446726903), function(i__29566, col, c__4276__auto__, size__4277__auto__, b__29567, s__29565__$2, temp__4126__auto__) {
                      return function() {
                        return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), null);
                      };
                    }(i__29566, col, c__4276__auto__, size__4277__auto__, b__29567, s__29565__$2, temp__4126__auto__)], null), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, t3tr0s_slides.slide01.empty_board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null)))), " ")], null));
                    var G__29568 = i__29566 + 1;
                    i__29566 = G__29568;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29567), iter__29564.call(null, cljs.core.chunk_rest.call(null, s__29565__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29567), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__29565__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "key", "key", -1516042587), "row" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(row) + "col" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(col), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, row, (new cljs.core.Keyword(null, 
              "row", "row", -570139521)).cljs$core$IFn$_invoke$arity$1(app)) && cljs.core._EQ_.call(null, col, (new cljs.core.Keyword(null, "col", "col", -1959363084)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : null, new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(col, s__29565__$2, temp__4126__auto__) {
                return function() {
                  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), col);
                };
              }(col, s__29565__$2, temp__4126__auto__), new cljs.core.Keyword(null, "onMouseLeave", "onMouseLeave", 1446726903), function(col, s__29565__$2, temp__4126__auto__) {
                return function() {
                  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), null);
                };
              }(col, s__29565__$2, temp__4126__auto__)], null), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, t3tr0s_slides.syntax_highlight.lit.call(null, cljs.core.get_in.call(null, t3tr0s_slides.slide01.empty_board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null)))), " ")], null), iter__29564.call(null, cljs.core.rest.call(null, s__29565__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide01.cols));
  }(), " ]"], null);
};
var ufv___29614 = schema.utils.use_fn_validation;
var output_schema29570_29615 = schema.core.Any;
var input_schema29571_29616 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29572_29617 = schema.core.checker.call(null, input_schema29571_29616);
var output_checker29573_29618 = schema.core.checker.call(null, output_schema29570_29615);
t3tr0s_slides.slide01.code = function(ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618) {
  return function code(G__29574, G__29575) {
    var validate__5821__auto__ = ufv___29614.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29619 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29574, G__29575], null);
      var temp__4126__auto___29620 = input_checker29572_29617.call(null, args__5822__auto___29619);
      if (cljs.core.truth_(temp__4126__auto___29620)) {
        var error__5823__auto___29621 = temp__4126__auto___29620;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___29621)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29571_29616, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29619, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29621], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29574;
      var owner = G__29575;
      while (true) {
        if (typeof t3tr0s_slides.slide01.t29595 !== "undefined") {
        } else {
          t3tr0s_slides.slide01.t29595 = function(owner, validate__5821__auto__, G__29575, output_schema29570, input_schema29571, output_checker29573, G__29574, app, ufv__, code, input_checker29572, meta29596) {
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__29575 = G__29575;
            this.output_schema29570 = output_schema29570;
            this.input_schema29571 = input_schema29571;
            this.output_checker29573 = output_checker29573;
            this.G__29574 = G__29574;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.input_checker29572 = input_checker29572;
            this.meta29596 = meta29596;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide01.t29595.cljs$lang$type = true;
          t3tr0s_slides.slide01.t29595.cljs$lang$ctorStr = "t3tr0s-slides.slide01/t29595";
          t3tr0s_slides.slide01.t29595.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide01/t29595");
            };
          }(validate__5821__auto__, ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618);
          t3tr0s_slides.slide01.t29595.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide01.t29595.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code({"id":"lang-clj", "ref":"code"}, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " rows ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "20")), ")\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " cols ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, 
              "10")), ")\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " empty-row (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vec")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "repeat")), " cols ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "0")), ")))\n", "(", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "def")), " empty-board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vec")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "repeat")), " rows empty-row)))\n"), React.DOM.code(null, "\x3e empty-board\n\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: mouse over the zeros.")), "\n", "\n", 
              cljs.core.into_array.call(null, function() {
                var iter__4278__auto__ = function(___$1, validate__5821__auto__, ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618) {
                  return function iter__29598(s__29599) {
                    return new cljs.core.LazySeq(null, function(___$1, validate__5821__auto__, ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618) {
                      return function() {
                        var s__29599__$1 = s__29599;
                        while (true) {
                          var temp__4126__auto__ = cljs.core.seq.call(null, s__29599__$1);
                          if (temp__4126__auto__) {
                            var s__29599__$2 = temp__4126__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__29599__$2)) {
                              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__29599__$2);
                              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                              var b__29601 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                              if (function() {
                                var i__29600 = 0;
                                while (true) {
                                  if (i__29600 < size__4277__auto__) {
                                    var row = cljs.core._nth.call(null, c__4276__auto__, i__29600);
                                    cljs.core.chunk_append.call(null, b__29601, sablono.interpreter.interpret.call(null, function() {
                                      var pred__29608 = cljs.core._EQ_;
                                      var expr__29609 = row;
                                      if (cljs.core.truth_(pred__29608.call(null, 0, expr__29609))) {
                                        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "  [");
                                      } else {
                                        if (cljs.core.truth_(pred__29608.call(null, t3tr0s_slides.slide01.rows - 1, expr__29609))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "   ");
                                        } else {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "   ");
                                        }
                                      }
                                    }()));
                                    var G__29622 = i__29600 + 1;
                                    i__29600 = G__29622;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29601), iter__29598.call(null, cljs.core.chunk_rest.call(null, s__29599__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29601), null);
                              }
                            } else {
                              var row = cljs.core.first.call(null, s__29599__$2);
                              return cljs.core.cons.call(null, sablono.interpreter.interpret.call(null, function() {
                                var pred__29611 = cljs.core._EQ_;
                                var expr__29612 = row;
                                if (cljs.core.truth_(pred__29611.call(null, 0, expr__29612))) {
                                  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "  [");
                                } else {
                                  if (cljs.core.truth_(pred__29611.call(null, t3tr0s_slides.slide01.rows - 1, expr__29612))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "   ");
                                  } else {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide01.data_row.call(null, row, self__.app)), "   ");
                                  }
                                }
                              }()), iter__29598.call(null, cljs.core.rest.call(null, s__29599__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(___$1, validate__5821__auto__, ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618), null, null);
                  };
                }(___$1, validate__5821__auto__, ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618);
                return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide01.rows));
              }()))));
            };
          }(validate__5821__auto__, ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618);
          t3tr0s_slides.slide01.t29595.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618) {
            return function(_29597) {
              var self__ = this;
              var _29597__$1 = this;
              return self__.meta29596;
            };
          }(validate__5821__auto__, ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618);
          t3tr0s_slides.slide01.t29595.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618) {
            return function(_29597, meta29596__$1) {
              var self__ = this;
              var _29597__$1 = this;
              return new t3tr0s_slides.slide01.t29595(self__.owner, self__.validate__5821__auto__, self__.G__29575, self__.output_schema29570, self__.input_schema29571, self__.output_checker29573, self__.G__29574, self__.app, self__.ufv__, self__.code, self__.input_checker29572, meta29596__$1);
            };
          }(validate__5821__auto__, ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618);
          t3tr0s_slides.slide01.__GT_t29595 = function(validate__5821__auto__, ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618) {
            return function __GT_t29595(owner__$1, validate__5821__auto____$1, G__29575__$1, output_schema29570__$1, input_schema29571__$1, output_checker29573__$1, G__29574__$1, app__$1, ufv____$1, code__$1, input_checker29572__$1, meta29596) {
              return new t3tr0s_slides.slide01.t29595(owner__$1, validate__5821__auto____$1, G__29575__$1, output_schema29570__$1, input_schema29571__$1, output_checker29573__$1, G__29574__$1, app__$1, ufv____$1, code__$1, input_checker29572__$1, meta29596);
            };
          }(validate__5821__auto__, ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618);
        }
        return new t3tr0s_slides.slide01.t29595(owner, validate__5821__auto__, G__29575, output_schema29570_29615, input_schema29571_29616, output_checker29573_29618, G__29574, app, ufv___29614, code, input_checker29572_29617, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29623 = output_checker29573_29618.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29623)) {
        var error__5823__auto___29624 = temp__4126__auto___29623;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___29624)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29570_29615, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29624], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29614, output_schema29570_29615, input_schema29571_29616, input_checker29572_29617, output_checker29573_29618);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide01.code), schema.core.make_fn_schema.call(null, output_schema29570_29615, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29571_29616], null)));
t3tr0s_slides.slide01.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide01.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m29569) {
    return om.core.build.call(null, t3tr0s_slides.slide01.code, cursor__9685__auto__, m29569);
  };
  __GT_code = function(cursor__9685__auto__, m29569) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m29569);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide01.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide01.rows);
t3tr0s_slides.slide01.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide01.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide01.cell_size);
  om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "row", "row", -570139521), row);
  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "col", "col", -1959363084), col);
};
t3tr0s_slides.slide01.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__29625) {
  var vec__29627 = p__29625;
  var x = cljs.core.nth.call(null, vec__29627, 0, null);
  var y = cljs.core.nth.call(null, vec__29627, 1, null);
  var rx = t3tr0s_slides.slide01.cell_size * x;
  var ry = t3tr0s_slides.slide01.cell_size * y;
  var rs = t3tr0s_slides.slide01.cell_size;
  ctx.fillRect(rx, ry, rs, rs);
  return ctx.strokeRect(rx, ry, rs, rs);
};
t3tr0s_slides.slide01.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  var x = (new cljs.core.Keyword(null, "col", "col", -1959363084)).cljs$core$IFn$_invoke$arity$1(app);
  var y = (new cljs.core.Keyword(null, "row", "row", -570139521)).cljs$core$IFn$_invoke$arity$1(app);
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide01.cell_size * t3tr0s_slides.slide01.cols, t3tr0s_slides.slide01.cell_size * t3tr0s_slides.slide01.rows);
  ctx.lineWidth = 2;
  if (cljs.core.truth_(y)) {
    ctx.fillStyle = t3tr0s_slides.slide01.dark_green;
    ctx.strokeStyle = t3tr0s_slides.slide01.light_green;
    var seq__29634_29640 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide01.cols));
    var chunk__29636_29641 = null;
    var count__29637_29642 = 0;
    var i__29638_29643 = 0;
    while (true) {
      if (i__29638_29643 < count__29637_29642) {
        var x0_29644 = cljs.core._nth.call(null, chunk__29636_29641, i__29638_29643);
        if (cljs.core.not_EQ_.call(null, x0_29644, x)) {
          t3tr0s_slides.slide01.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x0_29644, y], null));
          var G__29645 = seq__29634_29640;
          var G__29646 = chunk__29636_29641;
          var G__29647 = count__29637_29642;
          var G__29648 = i__29638_29643 + 1;
          seq__29634_29640 = G__29645;
          chunk__29636_29641 = G__29646;
          count__29637_29642 = G__29647;
          i__29638_29643 = G__29648;
          continue;
        } else {
          var G__29649 = seq__29634_29640;
          var G__29650 = chunk__29636_29641;
          var G__29651 = count__29637_29642;
          var G__29652 = i__29638_29643 + 1;
          seq__29634_29640 = G__29649;
          chunk__29636_29641 = G__29650;
          count__29637_29642 = G__29651;
          i__29638_29643 = G__29652;
          continue;
        }
      } else {
        var temp__4126__auto___29653 = cljs.core.seq.call(null, seq__29634_29640);
        if (temp__4126__auto___29653) {
          var seq__29634_29654__$1 = temp__4126__auto___29653;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__29634_29654__$1)) {
            var c__4309__auto___29655 = cljs.core.chunk_first.call(null, seq__29634_29654__$1);
            var G__29656 = cljs.core.chunk_rest.call(null, seq__29634_29654__$1);
            var G__29657 = c__4309__auto___29655;
            var G__29658 = cljs.core.count.call(null, c__4309__auto___29655);
            var G__29659 = 0;
            seq__29634_29640 = G__29656;
            chunk__29636_29641 = G__29657;
            count__29637_29642 = G__29658;
            i__29638_29643 = G__29659;
            continue;
          } else {
            var x0_29660 = cljs.core.first.call(null, seq__29634_29654__$1);
            if (cljs.core.not_EQ_.call(null, x0_29660, x)) {
              t3tr0s_slides.slide01.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x0_29660, y], null));
              var G__29661 = cljs.core.next.call(null, seq__29634_29654__$1);
              var G__29662 = null;
              var G__29663 = 0;
              var G__29664 = 0;
              seq__29634_29640 = G__29661;
              chunk__29636_29641 = G__29662;
              count__29637_29642 = G__29663;
              i__29638_29643 = G__29664;
              continue;
            } else {
              var G__29665 = cljs.core.next.call(null, seq__29634_29654__$1);
              var G__29666 = null;
              var G__29667 = 0;
              var G__29668 = 0;
              seq__29634_29640 = G__29665;
              chunk__29636_29641 = G__29666;
              count__29637_29642 = G__29667;
              i__29638_29643 = G__29668;
              continue;
            }
          }
        } else {
        }
      }
      break;
    }
    ctx.fillStyle = t3tr0s_slides.slide01.dark_purple;
    ctx.strokeStyle = t3tr0s_slides.slide01.light_purple;
    if (cljs.core.truth_(x)) {
      return t3tr0s_slides.slide01.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
var ufv___29683 = schema.utils.use_fn_validation;
var output_schema29671_29684 = schema.core.Any;
var input_schema29672_29685 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29673_29686 = schema.core.checker.call(null, input_schema29672_29685);
var output_checker29674_29687 = schema.core.checker.call(null, output_schema29671_29684);
t3tr0s_slides.slide01.canvas = function(ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687) {
  return function canvas(G__29675, G__29676) {
    var validate__5821__auto__ = ufv___29683.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29688 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29675, G__29676], null);
      var temp__4126__auto___29689 = input_checker29673_29686.call(null, args__5822__auto___29688);
      if (cljs.core.truth_(temp__4126__auto___29689)) {
        var error__5823__auto___29690 = temp__4126__auto___29689;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___29690)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29672_29685, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29688, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29690], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29675;
      var owner = G__29676;
      while (true) {
        if (typeof t3tr0s_slides.slide01.t29680 !== "undefined") {
        } else {
          t3tr0s_slides.slide01.t29680 = function(output_checker29674, owner, output_schema29671, input_checker29673, validate__5821__auto__, G__29675, canvas, G__29676, app, ufv__, input_schema29672, meta29681) {
            this.output_checker29674 = output_checker29674;
            this.owner = owner;
            this.output_schema29671 = output_schema29671;
            this.input_checker29673 = input_checker29673;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__29675 = G__29675;
            this.canvas = canvas;
            this.G__29676 = G__29676;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_schema29672 = input_schema29672;
            this.meta29681 = meta29681;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide01.t29680.cljs$lang$type = true;
          t3tr0s_slides.slide01.t29680.cljs$lang$ctorStr = "t3tr0s-slides.slide01/t29680";
          t3tr0s_slides.slide01.t29680.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide01/t29680");
            };
          }(validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687);
          t3tr0s_slides.slide01.t29680.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide01.t29680.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseMove":function(___$1, validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687) {
                return function(p1__29669_SHARP_) {
                  return t3tr0s_slides.slide01.canvas_mouse.call(null, self__.app, self__.owner, p1__29669_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687), "onMouseLeave":function(___$1, validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687) {
                return function() {
                  om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "row", "row", -570139521), null);
                  return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "col", "col", -1959363084), null);
                };
              }(___$1, validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687)}));
            };
          }(validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687);
          t3tr0s_slides.slide01.t29680.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide01.t29680.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide01.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687);
          t3tr0s_slides.slide01.t29680.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide01.t29680.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide01.cols * t3tr0s_slides.slide01.cell_size;
              canvas__$2.height = t3tr0s_slides.slide01.rows * t3tr0s_slides.slide01.cell_size;
              return t3tr0s_slides.slide01.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687);
          t3tr0s_slides.slide01.t29680.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687) {
            return function(_29682) {
              var self__ = this;
              var _29682__$1 = this;
              return self__.meta29681;
            };
          }(validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687);
          t3tr0s_slides.slide01.t29680.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687) {
            return function(_29682, meta29681__$1) {
              var self__ = this;
              var _29682__$1 = this;
              return new t3tr0s_slides.slide01.t29680(self__.output_checker29674, self__.owner, self__.output_schema29671, self__.input_checker29673, self__.validate__5821__auto__, self__.G__29675, self__.canvas, self__.G__29676, self__.app, self__.ufv__, self__.input_schema29672, meta29681__$1);
            };
          }(validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687);
          t3tr0s_slides.slide01.__GT_t29680 = function(validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687) {
            return function __GT_t29680(output_checker29674__$1, owner__$1, output_schema29671__$1, input_checker29673__$1, validate__5821__auto____$1, G__29675__$1, canvas__$1, G__29676__$1, app__$1, ufv____$1, input_schema29672__$1, meta29681) {
              return new t3tr0s_slides.slide01.t29680(output_checker29674__$1, owner__$1, output_schema29671__$1, input_checker29673__$1, validate__5821__auto____$1, G__29675__$1, canvas__$1, G__29676__$1, app__$1, ufv____$1, input_schema29672__$1, meta29681);
            };
          }(validate__5821__auto__, ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687);
        }
        return new t3tr0s_slides.slide01.t29680(output_checker29674_29687, owner, output_schema29671_29684, input_checker29673_29686, validate__5821__auto__, G__29675, canvas, G__29676, app, ufv___29683, input_schema29672_29685, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29691 = output_checker29674_29687.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29691)) {
        var error__5823__auto___29692 = temp__4126__auto___29691;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___29692)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29671_29684, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29692], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29683, output_schema29671_29684, input_schema29672_29685, input_checker29673_29686, output_checker29674_29687);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide01.canvas), schema.core.make_fn_schema.call(null, output_schema29671_29684, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29672_29685], null)));
t3tr0s_slides.slide01.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide01.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m29670) {
    return om.core.build.call(null, t3tr0s_slides.slide01.canvas, cursor__9685__auto__, m29670);
  };
  __GT_canvas = function(cursor__9685__auto__, m29670) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m29670);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___29710 = schema.utils.use_fn_validation;
var output_schema29694_29711 = schema.core.Any;
var input_schema29695_29712 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29696_29713 = schema.core.checker.call(null, input_schema29695_29712);
var output_checker29697_29714 = schema.core.checker.call(null, output_schema29694_29711);
t3tr0s_slides.slide01.slide = function(ufv___29710, output_schema29694_29711, input_schema29695_29712, input_checker29696_29713, output_checker29697_29714) {
  return function slide(G__29698, G__29699) {
    var validate__5821__auto__ = ufv___29710.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29715 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29698, G__29699], null);
      var temp__4126__auto___29716 = input_checker29696_29713.call(null, args__5822__auto___29715);
      if (cljs.core.truth_(temp__4126__auto___29716)) {
        var error__5823__auto___29717 = temp__4126__auto___29716;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___29717)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29695_29712, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29715, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29717], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29698;
      var owner = G__29699;
      while (true) {
        if (typeof t3tr0s_slides.slide01.t29705 !== "undefined") {
        } else {
          t3tr0s_slides.slide01.t29705 = function(output_checker29697, owner, output_schema29694, validate__5821__auto__, input_checker29696, G__29698, G__29699, slide, app, ufv__, input_schema29695, meta29706) {
            this.output_checker29697 = output_checker29697;
            this.owner = owner;
            this.output_schema29694 = output_schema29694;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker29696 = input_checker29696;
            this.G__29698 = G__29698;
            this.G__29699 = G__29699;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_schema29695 = input_schema29695;
            this.meta29706 = meta29706;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide01.t29705.cljs$lang$type = true;
          t3tr0s_slides.slide01.t29705.cljs$lang$ctorStr = "t3tr0s-slides.slide01/t29705";
          t3tr0s_slides.slide01.t29705.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29710, output_schema29694_29711, input_schema29695_29712, input_checker29696_29713, output_checker29697_29714) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide01/t29705");
            };
          }(validate__5821__auto__, ufv___29710, output_schema29694_29711, input_schema29695_29712, input_checker29696_29713, output_checker29697_29714);
          t3tr0s_slides.slide01.t29705.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide01.t29705.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29710, output_schema29694_29711, input_schema29695_29712, input_checker29696_29713, output_checker29697_29714) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "1. Create the board."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide01.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide01.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___29710, output_schema29694_29711, input_schema29695_29712, input_checker29696_29713, output_checker29697_29714);
          t3tr0s_slides.slide01.t29705.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29710, output_schema29694_29711, input_schema29695_29712, input_checker29696_29713, output_checker29697_29714) {
            return function(_29707) {
              var self__ = this;
              var _29707__$1 = this;
              return self__.meta29706;
            };
          }(validate__5821__auto__, ufv___29710, output_schema29694_29711, input_schema29695_29712, input_checker29696_29713, output_checker29697_29714);
          t3tr0s_slides.slide01.t29705.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29710, output_schema29694_29711, input_schema29695_29712, input_checker29696_29713, output_checker29697_29714) {
            return function(_29707, meta29706__$1) {
              var self__ = this;
              var _29707__$1 = this;
              return new t3tr0s_slides.slide01.t29705(self__.output_checker29697, self__.owner, self__.output_schema29694, self__.validate__5821__auto__, self__.input_checker29696, self__.G__29698, self__.G__29699, self__.slide, self__.app, self__.ufv__, self__.input_schema29695, meta29706__$1);
            };
          }(validate__5821__auto__, ufv___29710, output_schema29694_29711, input_schema29695_29712, input_checker29696_29713, output_checker29697_29714);
          t3tr0s_slides.slide01.__GT_t29705 = function(validate__5821__auto__, ufv___29710, output_schema29694_29711, input_schema29695_29712, input_checker29696_29713, output_checker29697_29714) {
            return function __GT_t29705(output_checker29697__$1, owner__$1, output_schema29694__$1, validate__5821__auto____$1, input_checker29696__$1, G__29698__$1, G__29699__$1, slide__$1, app__$1, ufv____$1, input_schema29695__$1, meta29706) {
              return new t3tr0s_slides.slide01.t29705(output_checker29697__$1, owner__$1, output_schema29694__$1, validate__5821__auto____$1, input_checker29696__$1, G__29698__$1, G__29699__$1, slide__$1, app__$1, ufv____$1, input_schema29695__$1, meta29706);
            };
          }(validate__5821__auto__, ufv___29710, output_schema29694_29711, input_schema29695_29712, input_checker29696_29713, output_checker29697_29714);
        }
        return new t3tr0s_slides.slide01.t29705(output_checker29697_29714, owner, output_schema29694_29711, validate__5821__auto__, input_checker29696_29713, G__29698, G__29699, slide, app, ufv___29710, input_schema29695_29712, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29718 = output_checker29697_29714.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29718)) {
        var error__5823__auto___29719 = temp__4126__auto___29718;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___29719)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29694_29711, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29719], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29710, output_schema29694_29711, input_schema29695_29712, input_checker29696_29713, output_checker29697_29714);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide01.slide), schema.core.make_fn_schema.call(null, output_schema29694_29711, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29695_29712], null)));
t3tr0s_slides.slide01.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide01.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m29693) {
    return om.core.build.call(null, t3tr0s_slides.slide01.slide, cursor__9685__auto__, m29693);
  };
  __GT_slide = function(cursor__9685__auto__, m29693) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m29693);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide01.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide01.slide, t3tr0s_slides.slide01.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide01.resume = function resume() {
  return null;
};
t3tr0s_slides.slide01.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide00");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide00.dark_green = "#143";
t3tr0s_slides.slide00.light_green = "#175";
t3tr0s_slides.slide00.dark_purple = "#449";
t3tr0s_slides.slide00.light_purple = "#6ad";
t3tr0s_slides.slide00.dark_red = "#944";
t3tr0s_slides.slide00.light_red = "#f8c";
t3tr0s_slides.slide00.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide00.rotate_coord = function rotate_coord(p__15561) {
  var vec__15563 = p__15561;
  var x = cljs.core.nth.call(null, vec__15563, 0, null);
  var y = cljs.core.nth.call(null, vec__15563, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide00.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide00.rotate_coord, piece);
};
t3tr0s_slides.slide00.rows = 20;
t3tr0s_slides.slide00.cols = 10;
t3tr0s_slides.slide00.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide00.cols, 0));
t3tr0s_slides.slide00.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide00.rows, t3tr0s_slides.slide00.empty_row));
t3tr0s_slides.slide00.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 1, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 
0, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 1, 0, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 1, 1, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 1, 1, 0, 1, 1, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide00.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide00.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide00.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.last.call(null, cljs.core.take.call(null, 4, cljs.core.iterate.call(null, t3tr0s_slides.slide00.rotate_piece, (new cljs.core.Keyword(null, "L", "L", -1038307519)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide00.pieces)))), new cljs.core.Keyword(null, 
"position", "position", -2011731912), t3tr0s_slides.slide00.initial_pos], null));
t3tr0s_slides.slide00.write_piece = function write_piece(board, coords, p__15564) {
  while (true) {
    var vec__15568 = p__15564;
    var cx = cljs.core.nth.call(null, vec__15568, 0, null);
    var cy = cljs.core.nth.call(null, vec__15568, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__15569 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__15569, 0, null);
      var y = cljs.core.nth.call(null, vec__15569, 1, null);
      var G__15571 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e15570) {
          if (e15570 instanceof Error) {
            var _ = e15570;
            return board;
          } else {
            throw e15570;
          }
        }
      }();
      var G__15572 = cljs.core.rest.call(null, coords);
      var G__15573 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__15571;
      coords = G__15572;
      p__15564 = G__15573;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide00.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__15575 = cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state);
  var map__15575__$1 = cljs.core.seq_QMARK_.call(null, map__15575) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15575) : map__15575;
  var position = cljs.core.get.call(null, map__15575__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__15575__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide00.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide00.write_piece, piece, position);
};
t3tr0s_slides.slide00.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__15576) {
  var vec__15580 = p__15576;
  var cx = cljs.core.nth.call(null, vec__15580, 0, null);
  var cy = cljs.core.nth.call(null, vec__15580, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__15580, cx, cy) {
    return function(p__15581) {
      var vec__15582 = p__15581;
      var x = cljs.core.nth.call(null, vec__15582, 0, null);
      var y = cljs.core.nth.call(null, vec__15582, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__15580, cx, cy), piece);
};
t3tr0s_slides.slide00.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide00.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide00.app_state))));
};
t3tr0s_slides.slide00.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__15587(s__15588) {
      return new cljs.core.LazySeq(null, function() {
        var s__15588__$1 = s__15588;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__15588__$1);
          if (temp__4126__auto__) {
            var s__15588__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__15588__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__15588__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__15590 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__15589 = 0;
                while (true) {
                  if (i__15589 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__15589);
                    cljs.core.chunk_append.call(null, b__15590, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))));
                    var G__15591 = i__15589 + 1;
                    i__15589 = G__15591;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15590), iter__15587.call(null, cljs.core.chunk_rest.call(null, s__15588__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15590), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__15588__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide00.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))), iter__15587.call(null, cljs.core.rest.call(null, s__15588__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide00.cols));
  }(), " ]"], null);
};
var ufv___15607 = schema.utils.use_fn_validation;
var output_schema15593_15608 = schema.core.Any;
var input_schema15594_15609 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker15595_15610 = schema.core.checker.call(null, input_schema15594_15609);
var output_checker15596_15611 = schema.core.checker.call(null, output_schema15593_15608);
t3tr0s_slides.slide00.code = function(ufv___15607, output_schema15593_15608, input_schema15594_15609, input_checker15595_15610, output_checker15596_15611) {
  return function code(G__15597, G__15598) {
    var validate__5821__auto__ = ufv___15607.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___15612 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__15597, G__15598], null);
      var temp__4126__auto___15613 = input_checker15595_15610.call(null, args__5822__auto___15612);
      if (cljs.core.truth_(temp__4126__auto___15613)) {
        var error__5823__auto___15614 = temp__4126__auto___15613;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___15614)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema15594_15609, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___15612, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___15614], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__15597;
      var owner = G__15598;
      while (true) {
        if (typeof t3tr0s_slides.slide00.t15603 !== "undefined") {
        } else {
          t3tr0s_slides.slide00.t15603 = function(input_checker15595, owner, G__15598, output_checker15596, validate__5821__auto__, input_schema15594, output_schema15593, app, ufv__, code, G__15597, meta15604) {
            this.input_checker15595 = input_checker15595;
            this.owner = owner;
            this.G__15598 = G__15598;
            this.output_checker15596 = output_checker15596;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema15594 = input_schema15594;
            this.output_schema15593 = output_schema15593;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.G__15597 = G__15597;
            this.meta15604 = meta15604;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide00.t15603.cljs$lang$type = true;
          t3tr0s_slides.slide00.t15603.cljs$lang$ctorStr = "t3tr0s-slides.slide00/t15603";
          t3tr0s_slides.slide00.t15603.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___15607, output_schema15593_15608, input_schema15594_15609, input_checker15595_15610, output_checker15596_15611) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide00/t15603");
            };
          }(validate__5821__auto__, ufv___15607, output_schema15593_15608, input_schema15594_15609, input_checker15595_15610, output_checker15596_15611);
          t3tr0s_slides.slide00.t15603.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide00.t15603.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___15607, output_schema15593_15608, input_schema15594_15609, input_checker15595_15610, output_checker15596_15611) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs15606 = t3tr0s_slides.syntax_highlight.cmt.call(null, ";; This is an animated \x26 interactive guide to ");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs15606) ? sablono.interpreter.attributes.call(null, attrs15606) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs15606) ? new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; building a game in ClojureScript, because")), "\n", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; I find the design patterns very interesting.")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; This requires some knowledge of ClojureScript,")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; which you can find ", t3tr0s_slides.syntax_highlight.kw.call(null, new cljs.core.PersistentVector(null, 
                3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "https://github.com/shaunlebron/ClojureScript-Syntax-in-15-minutes"], null), "here"], null)), ".")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Created by ", t3tr0s_slides.syntax_highlight.core.call(null, new cljs.core.PersistentVector(null, 
                3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "http://twitter.com/shaunlebron"], null), "@shaunlebron"], null)))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Styling borrowed from ", t3tr0s_slides.syntax_highlight.lit.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "http://twitter.com/ibdknox"], null), "@ibdknox"], null)), " :)")), "\n", "\n\n\n\n\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; ")), "SHIFT + RIGHT for next slide", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, " ----------------\x3e\x3e"))], 
                null) : new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs15606), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; building a game in ClojureScript, because")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; I find the design patterns very interesting.")), "\n", "\n", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.cmt.call(null, ";; This requires some knowledge of ClojureScript,")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; which you can find ", t3tr0s_slides.syntax_highlight.kw.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", 
                -793805698), "https://github.com/shaunlebron/ClojureScript-Syntax-in-15-minutes"], null), "here"], null)), ".")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Created by ", t3tr0s_slides.syntax_highlight.core.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", 
                "href", -793805698), "http://twitter.com/shaunlebron"], null), "@shaunlebron"], null)))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Styling borrowed from ", t3tr0s_slides.syntax_highlight.lit.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), 
                "http://twitter.com/ibdknox"], null), "@ibdknox"], null)), " :)")), "\n", "\n\n\n\n\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; ")), "SHIFT + RIGHT for next slide", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, " ----------------\x3e\x3e"))], null)));
              }()));
            };
          }(validate__5821__auto__, ufv___15607, output_schema15593_15608, input_schema15594_15609, input_checker15595_15610, output_checker15596_15611);
          t3tr0s_slides.slide00.t15603.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___15607, output_schema15593_15608, input_schema15594_15609, input_checker15595_15610, output_checker15596_15611) {
            return function(_15605) {
              var self__ = this;
              var _15605__$1 = this;
              return self__.meta15604;
            };
          }(validate__5821__auto__, ufv___15607, output_schema15593_15608, input_schema15594_15609, input_checker15595_15610, output_checker15596_15611);
          t3tr0s_slides.slide00.t15603.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___15607, output_schema15593_15608, input_schema15594_15609, input_checker15595_15610, output_checker15596_15611) {
            return function(_15605, meta15604__$1) {
              var self__ = this;
              var _15605__$1 = this;
              return new t3tr0s_slides.slide00.t15603(self__.input_checker15595, self__.owner, self__.G__15598, self__.output_checker15596, self__.validate__5821__auto__, self__.input_schema15594, self__.output_schema15593, self__.app, self__.ufv__, self__.code, self__.G__15597, meta15604__$1);
            };
          }(validate__5821__auto__, ufv___15607, output_schema15593_15608, input_schema15594_15609, input_checker15595_15610, output_checker15596_15611);
          t3tr0s_slides.slide00.__GT_t15603 = function(validate__5821__auto__, ufv___15607, output_schema15593_15608, input_schema15594_15609, input_checker15595_15610, output_checker15596_15611) {
            return function __GT_t15603(input_checker15595__$1, owner__$1, G__15598__$1, output_checker15596__$1, validate__5821__auto____$1, input_schema15594__$1, output_schema15593__$1, app__$1, ufv____$1, code__$1, G__15597__$1, meta15604) {
              return new t3tr0s_slides.slide00.t15603(input_checker15595__$1, owner__$1, G__15598__$1, output_checker15596__$1, validate__5821__auto____$1, input_schema15594__$1, output_schema15593__$1, app__$1, ufv____$1, code__$1, G__15597__$1, meta15604);
            };
          }(validate__5821__auto__, ufv___15607, output_schema15593_15608, input_schema15594_15609, input_checker15595_15610, output_checker15596_15611);
        }
        return new t3tr0s_slides.slide00.t15603(input_checker15595_15610, owner, G__15598, output_checker15596_15611, validate__5821__auto__, input_schema15594_15609, output_schema15593_15608, app, ufv___15607, code, G__15597, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___15615 = output_checker15596_15611.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___15615)) {
        var error__5823__auto___15616 = temp__4126__auto___15615;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___15616)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema15593_15608, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___15616], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___15607, output_schema15593_15608, input_schema15594_15609, input_checker15595_15610, output_checker15596_15611);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide00.code), schema.core.make_fn_schema.call(null, output_schema15593_15608, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema15594_15609], null)));
t3tr0s_slides.slide00.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide00.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m15592) {
    return om.core.build.call(null, t3tr0s_slides.slide00.code, cursor__9685__auto__, m15592);
  };
  __GT_code = function(cursor__9685__auto__, m15592) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m15592);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide00.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide00.rows);
t3tr0s_slides.slide00.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__15617, is_center) {
  var vec__15619 = p__15617;
  var x = cljs.core.nth.call(null, vec__15619, 0, null);
  var y = cljs.core.nth.call(null, vec__15619, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide00.cell_size * x;
  var ry = t3tr0s_slides.slide00.cell_size * y;
  var rs = t3tr0s_slides.slide00.cell_size;
  var cx = t3tr0s_slides.slide00.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide00.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide00.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide00.piece_abs_coords = function piece_abs_coords(piece, p__15620) {
  var vec__15624 = p__15620;
  var cx = cljs.core.nth.call(null, vec__15624, 0, null);
  var cy = cljs.core.nth.call(null, vec__15624, 1, null);
  return cljs.core.mapv.call(null, function(vec__15624, cx, cy) {
    return function(p__15625) {
      var vec__15626 = p__15625;
      var x = cljs.core.nth.call(null, vec__15626, 0, null);
      var y = cljs.core.nth.call(null, vec__15626, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__15624, cx, cy), piece);
};
t3tr0s_slides.slide00.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__15633 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide00.piece_abs_coords.call(null, piece, pos)));
  var chunk__15634 = null;
  var count__15635 = 0;
  var i__15636 = 0;
  while (true) {
    if (i__15636 < count__15635) {
      var vec__15637 = cljs.core._nth.call(null, chunk__15634, i__15636);
      var i = cljs.core.nth.call(null, vec__15637, 0, null);
      var c = cljs.core.nth.call(null, vec__15637, 1, null);
      t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__15639 = seq__15633;
      var G__15640 = chunk__15634;
      var G__15641 = count__15635;
      var G__15642 = i__15636 + 1;
      seq__15633 = G__15639;
      chunk__15634 = G__15640;
      count__15635 = G__15641;
      i__15636 = G__15642;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__15633);
      if (temp__4126__auto__) {
        var seq__15633__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15633__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__15633__$1);
          var G__15643 = cljs.core.chunk_rest.call(null, seq__15633__$1);
          var G__15644 = c__4309__auto__;
          var G__15645 = cljs.core.count.call(null, c__4309__auto__);
          var G__15646 = 0;
          seq__15633 = G__15643;
          chunk__15634 = G__15644;
          count__15635 = G__15645;
          i__15636 = G__15646;
          continue;
        } else {
          var vec__15638 = cljs.core.first.call(null, seq__15633__$1);
          var i = cljs.core.nth.call(null, vec__15638, 0, null);
          var c = cljs.core.nth.call(null, vec__15638, 1, null);
          t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__15647 = cljs.core.next.call(null, seq__15633__$1);
          var G__15648 = null;
          var G__15649 = 0;
          var G__15650 = 0;
          seq__15633 = G__15647;
          chunk__15634 = G__15648;
          count__15635 = G__15649;
          i__15636 = G__15650;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide00.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__15663 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide00.rows));
  var chunk__15668 = null;
  var count__15669 = 0;
  var i__15670 = 0;
  while (true) {
    if (i__15670 < count__15669) {
      var y = cljs.core._nth.call(null, chunk__15668, i__15670);
      var seq__15671_15675 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide00.cols));
      var chunk__15672_15676 = null;
      var count__15673_15677 = 0;
      var i__15674_15678 = 0;
      while (true) {
        if (i__15674_15678 < count__15673_15677) {
          var x_15679 = cljs.core._nth.call(null, chunk__15672_15676, i__15674_15678);
          var v_15680 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_15679], null));
          if (v_15680 === 0) {
          } else {
            t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_15679, y], null), false);
          }
          var G__15681 = seq__15671_15675;
          var G__15682 = chunk__15672_15676;
          var G__15683 = count__15673_15677;
          var G__15684 = i__15674_15678 + 1;
          seq__15671_15675 = G__15681;
          chunk__15672_15676 = G__15682;
          count__15673_15677 = G__15683;
          i__15674_15678 = G__15684;
          continue;
        } else {
          var temp__4126__auto___15685 = cljs.core.seq.call(null, seq__15671_15675);
          if (temp__4126__auto___15685) {
            var seq__15671_15686__$1 = temp__4126__auto___15685;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__15671_15686__$1)) {
              var c__4309__auto___15687 = cljs.core.chunk_first.call(null, seq__15671_15686__$1);
              var G__15688 = cljs.core.chunk_rest.call(null, seq__15671_15686__$1);
              var G__15689 = c__4309__auto___15687;
              var G__15690 = cljs.core.count.call(null, c__4309__auto___15687);
              var G__15691 = 0;
              seq__15671_15675 = G__15688;
              chunk__15672_15676 = G__15689;
              count__15673_15677 = G__15690;
              i__15674_15678 = G__15691;
              continue;
            } else {
              var x_15692 = cljs.core.first.call(null, seq__15671_15686__$1);
              var v_15693 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_15692], null));
              if (v_15693 === 0) {
              } else {
                t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_15692, y], null), false);
              }
              var G__15694 = cljs.core.next.call(null, seq__15671_15686__$1);
              var G__15695 = null;
              var G__15696 = 0;
              var G__15697 = 0;
              seq__15671_15675 = G__15694;
              chunk__15672_15676 = G__15695;
              count__15673_15677 = G__15696;
              i__15674_15678 = G__15697;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__15698 = seq__15663;
      var G__15699 = chunk__15668;
      var G__15700 = count__15669;
      var G__15701 = i__15670 + 1;
      seq__15663 = G__15698;
      chunk__15668 = G__15699;
      count__15669 = G__15700;
      i__15670 = G__15701;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__15663);
      if (temp__4126__auto__) {
        var seq__15663__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15663__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__15663__$1);
          var G__15702 = cljs.core.chunk_rest.call(null, seq__15663__$1);
          var G__15703 = c__4309__auto__;
          var G__15704 = cljs.core.count.call(null, c__4309__auto__);
          var G__15705 = 0;
          seq__15663 = G__15702;
          chunk__15668 = G__15703;
          count__15669 = G__15704;
          i__15670 = G__15705;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__15663__$1);
          var seq__15664_15706 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide00.cols));
          var chunk__15665_15707 = null;
          var count__15666_15708 = 0;
          var i__15667_15709 = 0;
          while (true) {
            if (i__15667_15709 < count__15666_15708) {
              var x_15710 = cljs.core._nth.call(null, chunk__15665_15707, i__15667_15709);
              var v_15711 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_15710], null));
              if (v_15711 === 0) {
              } else {
                t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_15710, y], null), false);
              }
              var G__15712 = seq__15664_15706;
              var G__15713 = chunk__15665_15707;
              var G__15714 = count__15666_15708;
              var G__15715 = i__15667_15709 + 1;
              seq__15664_15706 = G__15712;
              chunk__15665_15707 = G__15713;
              count__15666_15708 = G__15714;
              i__15667_15709 = G__15715;
              continue;
            } else {
              var temp__4126__auto___15716__$1 = cljs.core.seq.call(null, seq__15664_15706);
              if (temp__4126__auto___15716__$1) {
                var seq__15664_15717__$1 = temp__4126__auto___15716__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__15664_15717__$1)) {
                  var c__4309__auto___15718 = cljs.core.chunk_first.call(null, seq__15664_15717__$1);
                  var G__15719 = cljs.core.chunk_rest.call(null, seq__15664_15717__$1);
                  var G__15720 = c__4309__auto___15718;
                  var G__15721 = cljs.core.count.call(null, c__4309__auto___15718);
                  var G__15722 = 0;
                  seq__15664_15706 = G__15719;
                  chunk__15665_15707 = G__15720;
                  count__15666_15708 = G__15721;
                  i__15667_15709 = G__15722;
                  continue;
                } else {
                  var x_15723 = cljs.core.first.call(null, seq__15664_15717__$1);
                  var v_15724 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_15723], null));
                  if (v_15724 === 0) {
                  } else {
                    t3tr0s_slides.slide00.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_15723, y], null), false);
                  }
                  var G__15725 = cljs.core.next.call(null, seq__15664_15717__$1);
                  var G__15726 = null;
                  var G__15727 = 0;
                  var G__15728 = 0;
                  seq__15664_15706 = G__15725;
                  chunk__15665_15707 = G__15726;
                  count__15666_15708 = G__15727;
                  i__15667_15709 = G__15728;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__15729 = cljs.core.next.call(null, seq__15663__$1);
          var G__15730 = null;
          var G__15731 = 0;
          var G__15732 = 0;
          seq__15663 = G__15729;
          chunk__15668 = G__15730;
          count__15669 = G__15731;
          i__15670 = G__15732;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide00.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide00.cell_size * t3tr0s_slides.slide00.cols, t3tr0s_slides.slide00.cell_size * t3tr0s_slides.slide00.rows);
  ctx.fillStyle = t3tr0s_slides.slide00.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide00.light_green;
  t3tr0s_slides.slide00.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var fits = t3tr0s_slides.slide00.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = fits ? t3tr0s_slides.slide00.dark_purple : t3tr0s_slides.slide00.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide00.light_purple : t3tr0s_slides.slide00.light_red;
    return t3tr0s_slides.slide00.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
var ufv___15750 = schema.utils.use_fn_validation;
var output_schema15734_15751 = schema.core.Any;
var input_schema15735_15752 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker15736_15753 = schema.core.checker.call(null, input_schema15735_15752);
var output_checker15737_15754 = schema.core.checker.call(null, output_schema15734_15751);
t3tr0s_slides.slide00.canvas = function(ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754) {
  return function canvas(G__15738, G__15739) {
    var validate__5821__auto__ = ufv___15750.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___15755 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__15738, G__15739], null);
      var temp__4126__auto___15756 = input_checker15736_15753.call(null, args__5822__auto___15755);
      if (cljs.core.truth_(temp__4126__auto___15756)) {
        var error__5823__auto___15757 = temp__4126__auto___15756;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___15757)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema15735_15752, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___15755, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___15757], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__15738;
      var owner = G__15739;
      while (true) {
        if (typeof t3tr0s_slides.slide00.t15745 !== "undefined") {
        } else {
          t3tr0s_slides.slide00.t15745 = function(owner, G__15738, input_schema15735, validate__5821__auto__, input_checker15736, G__15739, canvas, output_schema15734, output_checker15737, app, ufv__, meta15746) {
            this.owner = owner;
            this.G__15738 = G__15738;
            this.input_schema15735 = input_schema15735;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker15736 = input_checker15736;
            this.G__15739 = G__15739;
            this.canvas = canvas;
            this.output_schema15734 = output_schema15734;
            this.output_checker15737 = output_checker15737;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta15746 = meta15746;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide00.t15745.cljs$lang$type = true;
          t3tr0s_slides.slide00.t15745.cljs$lang$ctorStr = "t3tr0s-slides.slide00/t15745";
          t3tr0s_slides.slide00.t15745.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide00/t15745");
            };
          }(validate__5821__auto__, ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754);
          t3tr0s_slides.slide00.t15745.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide00.t15745.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas"}));
            };
          }(validate__5821__auto__, ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754);
          t3tr0s_slides.slide00.t15745.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide00.t15745.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide00.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754);
          t3tr0s_slides.slide00.t15745.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide00.t15745.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide00.cols * t3tr0s_slides.slide00.cell_size;
              canvas__$2.height = t3tr0s_slides.slide00.rows * t3tr0s_slides.slide00.cell_size;
              return t3tr0s_slides.slide00.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754);
          t3tr0s_slides.slide00.t15745.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754) {
            return function(_15747) {
              var self__ = this;
              var _15747__$1 = this;
              return self__.meta15746;
            };
          }(validate__5821__auto__, ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754);
          t3tr0s_slides.slide00.t15745.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754) {
            return function(_15747, meta15746__$1) {
              var self__ = this;
              var _15747__$1 = this;
              return new t3tr0s_slides.slide00.t15745(self__.owner, self__.G__15738, self__.input_schema15735, self__.validate__5821__auto__, self__.input_checker15736, self__.G__15739, self__.canvas, self__.output_schema15734, self__.output_checker15737, self__.app, self__.ufv__, meta15746__$1);
            };
          }(validate__5821__auto__, ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754);
          t3tr0s_slides.slide00.__GT_t15745 = function(validate__5821__auto__, ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754) {
            return function __GT_t15745(owner__$1, G__15738__$1, input_schema15735__$1, validate__5821__auto____$1, input_checker15736__$1, G__15739__$1, canvas__$1, output_schema15734__$1, output_checker15737__$1, app__$1, ufv____$1, meta15746) {
              return new t3tr0s_slides.slide00.t15745(owner__$1, G__15738__$1, input_schema15735__$1, validate__5821__auto____$1, input_checker15736__$1, G__15739__$1, canvas__$1, output_schema15734__$1, output_checker15737__$1, app__$1, ufv____$1, meta15746);
            };
          }(validate__5821__auto__, ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754);
        }
        return new t3tr0s_slides.slide00.t15745(owner, G__15738, input_schema15735_15752, validate__5821__auto__, input_checker15736_15753, G__15739, canvas, output_schema15734_15751, output_checker15737_15754, app, ufv___15750, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___15758 = output_checker15737_15754.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___15758)) {
        var error__5823__auto___15759 = temp__4126__auto___15758;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___15759)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema15734_15751, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___15759], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___15750, output_schema15734_15751, input_schema15735_15752, input_checker15736_15753, output_checker15737_15754);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide00.canvas), schema.core.make_fn_schema.call(null, output_schema15734_15751, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema15735_15752], null)));
t3tr0s_slides.slide00.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide00.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m15733) {
    return om.core.build.call(null, t3tr0s_slides.slide00.canvas, cursor__9685__auto__, m15733);
  };
  __GT_canvas = function(cursor__9685__auto__, m15733) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m15733);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___15777 = schema.utils.use_fn_validation;
var output_schema15761_15778 = schema.core.Any;
var input_schema15762_15779 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker15763_15780 = schema.core.checker.call(null, input_schema15762_15779);
var output_checker15764_15781 = schema.core.checker.call(null, output_schema15761_15778);
t3tr0s_slides.slide00.slide = function(ufv___15777, output_schema15761_15778, input_schema15762_15779, input_checker15763_15780, output_checker15764_15781) {
  return function slide(G__15765, G__15766) {
    var validate__5821__auto__ = ufv___15777.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___15782 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__15765, G__15766], null);
      var temp__4126__auto___15783 = input_checker15763_15780.call(null, args__5822__auto___15782);
      if (cljs.core.truth_(temp__4126__auto___15783)) {
        var error__5823__auto___15784 = temp__4126__auto___15783;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___15784)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema15762_15779, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___15782, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___15784], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__15765;
      var owner = G__15766;
      while (true) {
        if (typeof t3tr0s_slides.slide00.t15772 !== "undefined") {
        } else {
          t3tr0s_slides.slide00.t15772 = function(owner, validate__5821__auto__, input_checker15763, G__15765, output_schema15761, output_checker15764, G__15766, slide, app, ufv__, input_schema15762, meta15773) {
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker15763 = input_checker15763;
            this.G__15765 = G__15765;
            this.output_schema15761 = output_schema15761;
            this.output_checker15764 = output_checker15764;
            this.G__15766 = G__15766;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_schema15762 = input_schema15762;
            this.meta15773 = meta15773;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide00.t15772.cljs$lang$type = true;
          t3tr0s_slides.slide00.t15772.cljs$lang$ctorStr = "t3tr0s-slides.slide00/t15772";
          t3tr0s_slides.slide00.t15772.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___15777, output_schema15761_15778, input_schema15762_15779, input_checker15763_15780, output_checker15764_15781) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide00/t15772");
            };
          }(validate__5821__auto__, ufv___15777, output_schema15761_15778, input_schema15762_15779, input_checker15763_15780, output_checker15764_15781);
          t3tr0s_slides.slide00.t15772.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide00.t15772.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___15777, output_schema15761_15778, input_schema15762_15779, input_checker15763_15780, output_checker15764_15781) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "Tetris in ClojureScript"), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide00.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide00.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___15777, output_schema15761_15778, input_schema15762_15779, input_checker15763_15780, output_checker15764_15781);
          t3tr0s_slides.slide00.t15772.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___15777, output_schema15761_15778, input_schema15762_15779, input_checker15763_15780, output_checker15764_15781) {
            return function(_15774) {
              var self__ = this;
              var _15774__$1 = this;
              return self__.meta15773;
            };
          }(validate__5821__auto__, ufv___15777, output_schema15761_15778, input_schema15762_15779, input_checker15763_15780, output_checker15764_15781);
          t3tr0s_slides.slide00.t15772.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___15777, output_schema15761_15778, input_schema15762_15779, input_checker15763_15780, output_checker15764_15781) {
            return function(_15774, meta15773__$1) {
              var self__ = this;
              var _15774__$1 = this;
              return new t3tr0s_slides.slide00.t15772(self__.owner, self__.validate__5821__auto__, self__.input_checker15763, self__.G__15765, self__.output_schema15761, self__.output_checker15764, self__.G__15766, self__.slide, self__.app, self__.ufv__, self__.input_schema15762, meta15773__$1);
            };
          }(validate__5821__auto__, ufv___15777, output_schema15761_15778, input_schema15762_15779, input_checker15763_15780, output_checker15764_15781);
          t3tr0s_slides.slide00.__GT_t15772 = function(validate__5821__auto__, ufv___15777, output_schema15761_15778, input_schema15762_15779, input_checker15763_15780, output_checker15764_15781) {
            return function __GT_t15772(owner__$1, validate__5821__auto____$1, input_checker15763__$1, G__15765__$1, output_schema15761__$1, output_checker15764__$1, G__15766__$1, slide__$1, app__$1, ufv____$1, input_schema15762__$1, meta15773) {
              return new t3tr0s_slides.slide00.t15772(owner__$1, validate__5821__auto____$1, input_checker15763__$1, G__15765__$1, output_schema15761__$1, output_checker15764__$1, G__15766__$1, slide__$1, app__$1, ufv____$1, input_schema15762__$1, meta15773);
            };
          }(validate__5821__auto__, ufv___15777, output_schema15761_15778, input_schema15762_15779, input_checker15763_15780, output_checker15764_15781);
        }
        return new t3tr0s_slides.slide00.t15772(owner, validate__5821__auto__, input_checker15763_15780, G__15765, output_schema15761_15778, output_checker15764_15781, G__15766, slide, app, ufv___15777, input_schema15762_15779, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___15785 = output_checker15764_15781.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___15785)) {
        var error__5823__auto___15786 = temp__4126__auto___15785;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___15786)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema15761_15778, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___15786], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___15777, output_schema15761_15778, input_schema15762_15779, input_checker15763_15780, output_checker15764_15781);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide00.slide), schema.core.make_fn_schema.call(null, output_schema15761_15778, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema15762_15779], null)));
t3tr0s_slides.slide00.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide00.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m15760) {
    return om.core.build.call(null, t3tr0s_slides.slide00.slide, cursor__9685__auto__, m15760);
  };
  __GT_slide = function(cursor__9685__auto__, m15760) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m15760);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide00.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide00.slide, t3tr0s_slides.slide00.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide00.resume = function resume() {
  return null;
};
t3tr0s_slides.slide00.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide05");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide05.dark_green = "#143";
t3tr0s_slides.slide05.light_green = "#175";
t3tr0s_slides.slide05.dark_purple = "#449";
t3tr0s_slides.slide05.light_purple = "#6ad";
t3tr0s_slides.slide05.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide05.rotate_coord = function rotate_coord(p__28133) {
  var vec__28135 = p__28133;
  var x = cljs.core.nth.call(null, vec__28135, 0, null);
  var y = cljs.core.nth.call(null, vec__28135, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide05.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide05.rotate_coord, piece);
};
t3tr0s_slides.slide05.move_left = function move_left(p__28136) {
  var vec__28138 = p__28136;
  var x = cljs.core.nth.call(null, vec__28138, 0, null);
  var y = cljs.core.nth.call(null, vec__28138, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x - 1, y], null);
};
t3tr0s_slides.slide05.move_right = function move_right(p__28139) {
  var vec__28141 = p__28139;
  var x = cljs.core.nth.call(null, vec__28141, 0, null);
  var y = cljs.core.nth.call(null, vec__28141, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + 1, y], null);
};
t3tr0s_slides.slide05.move_down = function move_down(p__28142) {
  var vec__28144 = p__28142;
  var x = cljs.core.nth.call(null, vec__28144, 0, null);
  var y = cljs.core.nth.call(null, vec__28144, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y + 1], null);
};
t3tr0s_slides.slide05.g0 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null), new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "J", "J", 1394734828)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide05.pieces)], null);
t3tr0s_slides.slide05.g1 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g0, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_left);
t3tr0s_slides.slide05.g2 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_left);
t3tr0s_slides.slide05.g3 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g2, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide05.rotate_piece);
t3tr0s_slides.slide05.g4 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g3, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g5 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g4, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g6 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g5, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide05.rotate_piece);
t3tr0s_slides.slide05.g7 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g6, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_right);
t3tr0s_slides.slide05.g8 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g7, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_right);
t3tr0s_slides.slide05.g9 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g8, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide05.rotate_piece);
t3tr0s_slides.slide05.g10 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g9, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g11 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g10, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g12 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g11, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g13 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g12, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g14 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g13, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.g15 = cljs.core.update_in.call(null, t3tr0s_slides.slide05.g14, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide05.move_down);
t3tr0s_slides.slide05.states = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [t3tr0s_slides.slide05.g0, t3tr0s_slides.slide05.g1, t3tr0s_slides.slide05.g2, t3tr0s_slides.slide05.g3, t3tr0s_slides.slide05.g4, t3tr0s_slides.slide05.g5, t3tr0s_slides.slide05.g6, t3tr0s_slides.slide05.g7, t3tr0s_slides.slide05.g8, t3tr0s_slides.slide05.g9, t3tr0s_slides.slide05.g10, t3tr0s_slides.slide05.g11, t3tr0s_slides.slide05.g12, t3tr0s_slides.slide05.g13, t3tr0s_slides.slide05.g14, 
t3tr0s_slides.slide05.g15], null);
t3tr0s_slides.slide05.state_places = cljs.core.PersistentHashMap.fromArrays([t3tr0s_slides.slide05.g5, t3tr0s_slides.slide05.g6, t3tr0s_slides.slide05.g13, t3tr0s_slides.slide05.g0, t3tr0s_slides.slide05.g4, t3tr0s_slides.slide05.g2, t3tr0s_slides.slide05.g11, t3tr0s_slides.slide05.g14, t3tr0s_slides.slide05.g10, t3tr0s_slides.slide05.g9, t3tr0s_slides.slide05.g3, t3tr0s_slides.slide05.g8, t3tr0s_slides.slide05.g1, t3tr0s_slides.slide05.g15, t3tr0s_slides.slide05.g12, t3tr0s_slides.slide05.g7], [5, 
6, 13, 0, 4, 2, 11, 14, 10, 9, 3, 8, 1, 15, 12, 7]);
t3tr0s_slides.slide05.rotate_coord = function rotate_coord(p__28145) {
  var vec__28147 = p__28145;
  var x = cljs.core.nth.call(null, vec__28147, 0, null);
  var y = cljs.core.nth.call(null, vec__28147, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide05.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide05.rotate_coord, piece);
};
t3tr0s_slides.slide05.piece_abs_coords = function piece_abs_coords(piece, p__28148) {
  var vec__28152 = p__28148;
  var cx = cljs.core.nth.call(null, vec__28152, 0, null);
  var cy = cljs.core.nth.call(null, vec__28152, 1, null);
  return cljs.core.mapv.call(null, function(vec__28152, cx, cy) {
    return function(p__28153) {
      var vec__28154 = p__28153;
      var x = cljs.core.nth.call(null, vec__28154, 0, null);
      var y = cljs.core.nth.call(null, vec__28154, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__28152, cx, cy), piece);
};
t3tr0s_slides.slide05.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "position", "position", -2011731912), null], null));
t3tr0s_slides.slide05.rows = 20;
t3tr0s_slides.slide05.cols = 10;
t3tr0s_slides.slide05.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide05.cols, 0));
t3tr0s_slides.slide05.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide05.rows, t3tr0s_slides.slide05.empty_row));
t3tr0s_slides.slide05.state_code = function state_code(app, state, code_str) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "state" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(code_str), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, state, app) ? "active-col-d9099" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), 
  function() {
    return om.core.update_BANG_.call(null, app, state);
  }], null), code_str], null);
};
var ufv___28168 = schema.utils.use_fn_validation;
var output_schema28156_28169 = schema.core.Any;
var input_schema28157_28170 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker28158_28171 = schema.core.checker.call(null, input_schema28157_28170);
var output_checker28159_28172 = schema.core.checker.call(null, output_schema28156_28169);
t3tr0s_slides.slide05.code = function(ufv___28168, output_schema28156_28169, input_schema28157_28170, input_checker28158_28171, output_checker28159_28172) {
  return function code(G__28160, G__28161) {
    var validate__5821__auto__ = ufv___28168.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___28173 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__28160, G__28161], null);
      var temp__4126__auto___28174 = input_checker28158_28171.call(null, args__5822__auto___28173);
      if (cljs.core.truth_(temp__4126__auto___28174)) {
        var error__5823__auto___28175 = temp__4126__auto___28174;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___28175)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema28157_28170, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___28173, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___28175], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__28160;
      var owner = G__28161;
      while (true) {
        if (typeof t3tr0s_slides.slide05.t28165 !== "undefined") {
        } else {
          t3tr0s_slides.slide05.t28165 = function(output_schema28156, G__28160, owner, validate__5821__auto__, input_schema28157, G__28161, app, ufv__, code, output_checker28159, input_checker28158, meta28166) {
            this.output_schema28156 = output_schema28156;
            this.G__28160 = G__28160;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema28157 = input_schema28157;
            this.G__28161 = G__28161;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.output_checker28159 = output_checker28159;
            this.input_checker28158 = input_checker28158;
            this.meta28166 = meta28166;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide05.t28165.cljs$lang$type = true;
          t3tr0s_slides.slide05.t28165.cljs$lang$ctorStr = "t3tr0s-slides.slide05/t28165";
          t3tr0s_slides.slide05.t28165.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___28168, output_schema28156_28169, input_schema28157_28170, input_checker28158_28171, output_checker28159_28172) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide05/t28165");
            };
          }(validate__5821__auto__, ufv___28168, output_schema28156_28169, input_schema28157_28170, input_checker28158_28171, output_checker28159_28172);
          t3tr0s_slides.slide05.t28165.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide05.t28165.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___28168, output_schema28156_28169, input_schema28157_28170, input_checker28158_28171, output_checker28159_28172) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " move-left  [pos] [ (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "dec")), " x)      y  ])\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " move-right [pos] [ (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "inc")), " x)      y  ])\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " move-down  [pos] [      x  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "inc")), " y) ])\n", "\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: mouse over the states.")), "\n\n", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g0, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " pieces)})\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":J")), "] :piece ("), t3tr0s_slides.syntax_highlight.lit.call(null, 
              "6")), " "), t3tr0s_slides.syntax_highlight.lit.call(null, "4")), " ["), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g0  {"), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g1, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-left))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g0  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g1  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g2, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-left))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g1  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g2  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g3, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]    rotate-piece))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " g2  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g3  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g4, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g3  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g4  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, 
              self__.app, t3tr0s_slides.slide05.g5, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g4  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g5  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g6, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]    rotate-piece))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " g5  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g6  ("), t3tr0s_slides.syntax_highlight.core.call(null, 
              "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g7, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-right))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g6  ["), t3tr0s_slides.syntax_highlight.core.call(null, 
              "update-in")), " g7  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g8, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-right))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":position")), " g7  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g8  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g9, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
              "]    rotate-piece))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " g8  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g9  ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g10, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g9  ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g10 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g11, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g10 ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g11 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g12, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g11 ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g12 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, 
              self__.app, t3tr0s_slides.slide05.g13, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g12 ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g13 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))), sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g14, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g13 ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " g14 ("), t3tr0s_slides.syntax_highlight.core.call(null, 
              "def")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide05.state_code.call(null, self__.app, t3tr0s_slides.slide05.g15, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down))\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " g14 ["), t3tr0s_slides.syntax_highlight.core.call(null, 
              "update-in")), " g15 ("), t3tr0s_slides.syntax_highlight.core.call(null, "def")), "("))))));
            };
          }(validate__5821__auto__, ufv___28168, output_schema28156_28169, input_schema28157_28170, input_checker28158_28171, output_checker28159_28172);
          t3tr0s_slides.slide05.t28165.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___28168, output_schema28156_28169, input_schema28157_28170, input_checker28158_28171, output_checker28159_28172) {
            return function(_28167) {
              var self__ = this;
              var _28167__$1 = this;
              return self__.meta28166;
            };
          }(validate__5821__auto__, ufv___28168, output_schema28156_28169, input_schema28157_28170, input_checker28158_28171, output_checker28159_28172);
          t3tr0s_slides.slide05.t28165.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___28168, output_schema28156_28169, input_schema28157_28170, input_checker28158_28171, output_checker28159_28172) {
            return function(_28167, meta28166__$1) {
              var self__ = this;
              var _28167__$1 = this;
              return new t3tr0s_slides.slide05.t28165(self__.output_schema28156, self__.G__28160, self__.owner, self__.validate__5821__auto__, self__.input_schema28157, self__.G__28161, self__.app, self__.ufv__, self__.code, self__.output_checker28159, self__.input_checker28158, meta28166__$1);
            };
          }(validate__5821__auto__, ufv___28168, output_schema28156_28169, input_schema28157_28170, input_checker28158_28171, output_checker28159_28172);
          t3tr0s_slides.slide05.__GT_t28165 = function(validate__5821__auto__, ufv___28168, output_schema28156_28169, input_schema28157_28170, input_checker28158_28171, output_checker28159_28172) {
            return function __GT_t28165(output_schema28156__$1, G__28160__$1, owner__$1, validate__5821__auto____$1, input_schema28157__$1, G__28161__$1, app__$1, ufv____$1, code__$1, output_checker28159__$1, input_checker28158__$1, meta28166) {
              return new t3tr0s_slides.slide05.t28165(output_schema28156__$1, G__28160__$1, owner__$1, validate__5821__auto____$1, input_schema28157__$1, G__28161__$1, app__$1, ufv____$1, code__$1, output_checker28159__$1, input_checker28158__$1, meta28166);
            };
          }(validate__5821__auto__, ufv___28168, output_schema28156_28169, input_schema28157_28170, input_checker28158_28171, output_checker28159_28172);
        }
        return new t3tr0s_slides.slide05.t28165(output_schema28156_28169, G__28160, owner, validate__5821__auto__, input_schema28157_28170, G__28161, app, ufv___28168, code, output_checker28159_28172, input_checker28158_28171, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___28176 = output_checker28159_28172.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___28176)) {
        var error__5823__auto___28177 = temp__4126__auto___28176;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___28177)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema28156_28169, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___28177], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___28168, output_schema28156_28169, input_schema28157_28170, input_checker28158_28171, output_checker28159_28172);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide05.code), schema.core.make_fn_schema.call(null, output_schema28156_28169, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema28157_28170], null)));
t3tr0s_slides.slide05.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide05.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m28155) {
    return om.core.build.call(null, t3tr0s_slides.slide05.code, cursor__9685__auto__, m28155);
  };
  __GT_code = function(cursor__9685__auto__, m28155) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m28155);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide05.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide05.rows);
t3tr0s_slides.slide05.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__28178, is_center) {
  var vec__28180 = p__28178;
  var x = cljs.core.nth.call(null, vec__28180, 0, null);
  var y = cljs.core.nth.call(null, vec__28180, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide05.cell_size * x;
  var ry = t3tr0s_slides.slide05.cell_size * y;
  var rs = t3tr0s_slides.slide05.cell_size;
  var cx = t3tr0s_slides.slide05.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide05.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide05.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide05.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__28187 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide05.piece_abs_coords.call(null, piece, pos)));
  var chunk__28188 = null;
  var count__28189 = 0;
  var i__28190 = 0;
  while (true) {
    if (i__28190 < count__28189) {
      var vec__28191 = cljs.core._nth.call(null, chunk__28188, i__28190);
      var i = cljs.core.nth.call(null, vec__28191, 0, null);
      var c = cljs.core.nth.call(null, vec__28191, 1, null);
      t3tr0s_slides.slide05.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__28193 = seq__28187;
      var G__28194 = chunk__28188;
      var G__28195 = count__28189;
      var G__28196 = i__28190 + 1;
      seq__28187 = G__28193;
      chunk__28188 = G__28194;
      count__28189 = G__28195;
      i__28190 = G__28196;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__28187);
      if (temp__4126__auto__) {
        var seq__28187__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__28187__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__28187__$1);
          var G__28197 = cljs.core.chunk_rest.call(null, seq__28187__$1);
          var G__28198 = c__4309__auto__;
          var G__28199 = cljs.core.count.call(null, c__4309__auto__);
          var G__28200 = 0;
          seq__28187 = G__28197;
          chunk__28188 = G__28198;
          count__28189 = G__28199;
          i__28190 = G__28200;
          continue;
        } else {
          var vec__28192 = cljs.core.first.call(null, seq__28187__$1);
          var i = cljs.core.nth.call(null, vec__28192, 0, null);
          var c = cljs.core.nth.call(null, vec__28192, 1, null);
          t3tr0s_slides.slide05.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__28201 = cljs.core.next.call(null, seq__28187__$1);
          var G__28202 = null;
          var G__28203 = 0;
          var G__28204 = 0;
          seq__28187 = G__28201;
          chunk__28188 = G__28202;
          count__28189 = G__28203;
          i__28190 = G__28204;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide05.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide05.cell_size * t3tr0s_slides.slide05.cols, t3tr0s_slides.slide05.cell_size * t3tr0s_slides.slide05.rows);
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    var places_28221 = t3tr0s_slides.slide05.state_places.call(null, app);
    ctx.fillStyle = "#555";
    ctx.strokeStyle = "#AAA";
    var seq__28213_28222 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, cljs.core.take.call(null, places_28221, t3tr0s_slides.slide05.states)));
    var chunk__28214_28223 = null;
    var count__28215_28224 = 0;
    var i__28216_28225 = 0;
    while (true) {
      if (i__28216_28225 < count__28215_28224) {
        var vec__28217_28226 = cljs.core._nth.call(null, chunk__28214_28223, i__28216_28225);
        var i_28227 = cljs.core.nth.call(null, vec__28217_28226, 0, null);
        var map__28218_28228 = cljs.core.nth.call(null, vec__28217_28226, 1, null);
        var map__28218_28229__$1 = cljs.core.seq_QMARK_.call(null, map__28218_28228) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28218_28228) : map__28218_28228;
        var position_28230 = cljs.core.get.call(null, map__28218_28229__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
        var piece_28231__$1 = cljs.core.get.call(null, map__28218_28229__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
        var x_28232 = 7;
        ctx.globalAlpha = function() {
          var x__3860__auto__ = 0;
          var y__3861__auto__ = function() {
            var x__3867__auto__ = x_28232;
            var y__3868__auto__ = i_28227 - (places_28221 - x_28232);
            return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
          }();
          return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
        }() / x_28232 / 5;
        t3tr0s_slides.slide05.draw_piece_BANG_.call(null, ctx, piece_28231__$1, position_28230);
        var G__28233 = seq__28213_28222;
        var G__28234 = chunk__28214_28223;
        var G__28235 = count__28215_28224;
        var G__28236 = i__28216_28225 + 1;
        seq__28213_28222 = G__28233;
        chunk__28214_28223 = G__28234;
        count__28215_28224 = G__28235;
        i__28216_28225 = G__28236;
        continue;
      } else {
        var temp__4126__auto___28237 = cljs.core.seq.call(null, seq__28213_28222);
        if (temp__4126__auto___28237) {
          var seq__28213_28238__$1 = temp__4126__auto___28237;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28213_28238__$1)) {
            var c__4309__auto___28239 = cljs.core.chunk_first.call(null, seq__28213_28238__$1);
            var G__28240 = cljs.core.chunk_rest.call(null, seq__28213_28238__$1);
            var G__28241 = c__4309__auto___28239;
            var G__28242 = cljs.core.count.call(null, c__4309__auto___28239);
            var G__28243 = 0;
            seq__28213_28222 = G__28240;
            chunk__28214_28223 = G__28241;
            count__28215_28224 = G__28242;
            i__28216_28225 = G__28243;
            continue;
          } else {
            var vec__28219_28244 = cljs.core.first.call(null, seq__28213_28238__$1);
            var i_28245 = cljs.core.nth.call(null, vec__28219_28244, 0, null);
            var map__28220_28246 = cljs.core.nth.call(null, vec__28219_28244, 1, null);
            var map__28220_28247__$1 = cljs.core.seq_QMARK_.call(null, map__28220_28246) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28220_28246) : map__28220_28246;
            var position_28248 = cljs.core.get.call(null, map__28220_28247__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
            var piece_28249__$1 = cljs.core.get.call(null, map__28220_28247__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
            var x_28250 = 7;
            ctx.globalAlpha = function() {
              var x__3860__auto__ = 0;
              var y__3861__auto__ = function() {
                var x__3867__auto__ = x_28250;
                var y__3868__auto__ = i_28245 - (places_28221 - x_28250);
                return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
              }();
              return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
            }() / x_28250 / 5;
            t3tr0s_slides.slide05.draw_piece_BANG_.call(null, ctx, piece_28249__$1, position_28248);
            var G__28251 = cljs.core.next.call(null, seq__28213_28238__$1);
            var G__28252 = null;
            var G__28253 = 0;
            var G__28254 = 0;
            seq__28213_28222 = G__28251;
            chunk__28214_28223 = G__28252;
            count__28215_28224 = G__28253;
            i__28216_28225 = G__28254;
            continue;
          }
        } else {
        }
      }
      break;
    }
    ctx.globalAlpha = 1;
    ctx.fillStyle = t3tr0s_slides.slide05.dark_purple;
    ctx.strokeStyle = t3tr0s_slides.slide05.light_purple;
    return t3tr0s_slides.slide05.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
var ufv___28272 = schema.utils.use_fn_validation;
var output_schema28256_28273 = schema.core.Any;
var input_schema28257_28274 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker28258_28275 = schema.core.checker.call(null, input_schema28257_28274);
var output_checker28259_28276 = schema.core.checker.call(null, output_schema28256_28273);
t3tr0s_slides.slide05.canvas = function(ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276) {
  return function canvas(G__28260, G__28261) {
    var validate__5821__auto__ = ufv___28272.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___28277 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__28260, G__28261], null);
      var temp__4126__auto___28278 = input_checker28258_28275.call(null, args__5822__auto___28277);
      if (cljs.core.truth_(temp__4126__auto___28278)) {
        var error__5823__auto___28279 = temp__4126__auto___28278;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___28279)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema28257_28274, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___28277, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___28279], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__28260;
      var owner = G__28261;
      while (true) {
        if (typeof t3tr0s_slides.slide05.t28267 !== "undefined") {
        } else {
          t3tr0s_slides.slide05.t28267 = function(input_checker28258, G__28261, owner, input_schema28257, output_schema28256, validate__5821__auto__, canvas, output_checker28259, G__28260, app, ufv__, meta28268) {
            this.input_checker28258 = input_checker28258;
            this.G__28261 = G__28261;
            this.owner = owner;
            this.input_schema28257 = input_schema28257;
            this.output_schema28256 = output_schema28256;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.canvas = canvas;
            this.output_checker28259 = output_checker28259;
            this.G__28260 = G__28260;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta28268 = meta28268;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide05.t28267.cljs$lang$type = true;
          t3tr0s_slides.slide05.t28267.cljs$lang$ctorStr = "t3tr0s-slides.slide05/t28267";
          t3tr0s_slides.slide05.t28267.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide05/t28267");
            };
          }(validate__5821__auto__, ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276);
          t3tr0s_slides.slide05.t28267.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide05.t28267.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276);
          t3tr0s_slides.slide05.t28267.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide05.t28267.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide05.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276);
          t3tr0s_slides.slide05.t28267.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide05.t28267.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide05.cols * t3tr0s_slides.slide05.cell_size;
              canvas__$2.height = t3tr0s_slides.slide05.rows * t3tr0s_slides.slide05.cell_size;
              return t3tr0s_slides.slide05.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276);
          t3tr0s_slides.slide05.t28267.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276) {
            return function(_28269) {
              var self__ = this;
              var _28269__$1 = this;
              return self__.meta28268;
            };
          }(validate__5821__auto__, ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276);
          t3tr0s_slides.slide05.t28267.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276) {
            return function(_28269, meta28268__$1) {
              var self__ = this;
              var _28269__$1 = this;
              return new t3tr0s_slides.slide05.t28267(self__.input_checker28258, self__.G__28261, self__.owner, self__.input_schema28257, self__.output_schema28256, self__.validate__5821__auto__, self__.canvas, self__.output_checker28259, self__.G__28260, self__.app, self__.ufv__, meta28268__$1);
            };
          }(validate__5821__auto__, ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276);
          t3tr0s_slides.slide05.__GT_t28267 = function(validate__5821__auto__, ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276) {
            return function __GT_t28267(input_checker28258__$1, G__28261__$1, owner__$1, input_schema28257__$1, output_schema28256__$1, validate__5821__auto____$1, canvas__$1, output_checker28259__$1, G__28260__$1, app__$1, ufv____$1, meta28268) {
              return new t3tr0s_slides.slide05.t28267(input_checker28258__$1, G__28261__$1, owner__$1, input_schema28257__$1, output_schema28256__$1, validate__5821__auto____$1, canvas__$1, output_checker28259__$1, G__28260__$1, app__$1, ufv____$1, meta28268);
            };
          }(validate__5821__auto__, ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276);
        }
        return new t3tr0s_slides.slide05.t28267(input_checker28258_28275, G__28261, owner, input_schema28257_28274, output_schema28256_28273, validate__5821__auto__, canvas, output_checker28259_28276, G__28260, app, ufv___28272, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___28280 = output_checker28259_28276.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___28280)) {
        var error__5823__auto___28281 = temp__4126__auto___28280;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___28281)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema28256_28273, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___28281], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___28272, output_schema28256_28273, input_schema28257_28274, input_checker28258_28275, output_checker28259_28276);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide05.canvas), schema.core.make_fn_schema.call(null, output_schema28256_28273, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema28257_28274], null)));
t3tr0s_slides.slide05.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide05.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m28255) {
    return om.core.build.call(null, t3tr0s_slides.slide05.canvas, cursor__9685__auto__, m28255);
  };
  __GT_canvas = function(cursor__9685__auto__, m28255) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m28255);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___28299 = schema.utils.use_fn_validation;
var output_schema28283_28300 = schema.core.Any;
var input_schema28284_28301 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker28285_28302 = schema.core.checker.call(null, input_schema28284_28301);
var output_checker28286_28303 = schema.core.checker.call(null, output_schema28283_28300);
t3tr0s_slides.slide05.slide = function(ufv___28299, output_schema28283_28300, input_schema28284_28301, input_checker28285_28302, output_checker28286_28303) {
  return function slide(G__28287, G__28288) {
    var validate__5821__auto__ = ufv___28299.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___28304 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__28287, G__28288], null);
      var temp__4126__auto___28305 = input_checker28285_28302.call(null, args__5822__auto___28304);
      if (cljs.core.truth_(temp__4126__auto___28305)) {
        var error__5823__auto___28306 = temp__4126__auto___28305;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___28306)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema28284_28301, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___28304, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___28306], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__28287;
      var owner = G__28288;
      while (true) {
        if (typeof t3tr0s_slides.slide05.t28294 !== "undefined") {
        } else {
          t3tr0s_slides.slide05.t28294 = function(output_schema28283, output_checker28286, owner, input_checker28285, G__28287, validate__5821__auto__, input_schema28284, slide, app, G__28288, ufv__, meta28295) {
            this.output_schema28283 = output_schema28283;
            this.output_checker28286 = output_checker28286;
            this.owner = owner;
            this.input_checker28285 = input_checker28285;
            this.G__28287 = G__28287;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema28284 = input_schema28284;
            this.slide = slide;
            this.app = app;
            this.G__28288 = G__28288;
            this.ufv__ = ufv__;
            this.meta28295 = meta28295;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide05.t28294.cljs$lang$type = true;
          t3tr0s_slides.slide05.t28294.cljs$lang$ctorStr = "t3tr0s-slides.slide05/t28294";
          t3tr0s_slides.slide05.t28294.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___28299, output_schema28283_28300, input_schema28284_28301, input_checker28285_28302, output_checker28286_28303) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide05/t28294");
            };
          }(validate__5821__auto__, ufv___28299, output_schema28283_28300, input_schema28284_28301, input_checker28285_28302, output_checker28286_28303);
          t3tr0s_slides.slide05.t28294.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide05.t28294.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___28299, output_schema28283_28300, input_schema28284_28301, input_checker28285_28302, output_checker28286_28303) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "5. Test state progression."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide05.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide05.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___28299, output_schema28283_28300, input_schema28284_28301, input_checker28285_28302, output_checker28286_28303);
          t3tr0s_slides.slide05.t28294.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___28299, output_schema28283_28300, input_schema28284_28301, input_checker28285_28302, output_checker28286_28303) {
            return function(_28296) {
              var self__ = this;
              var _28296__$1 = this;
              return self__.meta28295;
            };
          }(validate__5821__auto__, ufv___28299, output_schema28283_28300, input_schema28284_28301, input_checker28285_28302, output_checker28286_28303);
          t3tr0s_slides.slide05.t28294.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___28299, output_schema28283_28300, input_schema28284_28301, input_checker28285_28302, output_checker28286_28303) {
            return function(_28296, meta28295__$1) {
              var self__ = this;
              var _28296__$1 = this;
              return new t3tr0s_slides.slide05.t28294(self__.output_schema28283, self__.output_checker28286, self__.owner, self__.input_checker28285, self__.G__28287, self__.validate__5821__auto__, self__.input_schema28284, self__.slide, self__.app, self__.G__28288, self__.ufv__, meta28295__$1);
            };
          }(validate__5821__auto__, ufv___28299, output_schema28283_28300, input_schema28284_28301, input_checker28285_28302, output_checker28286_28303);
          t3tr0s_slides.slide05.__GT_t28294 = function(validate__5821__auto__, ufv___28299, output_schema28283_28300, input_schema28284_28301, input_checker28285_28302, output_checker28286_28303) {
            return function __GT_t28294(output_schema28283__$1, output_checker28286__$1, owner__$1, input_checker28285__$1, G__28287__$1, validate__5821__auto____$1, input_schema28284__$1, slide__$1, app__$1, G__28288__$1, ufv____$1, meta28295) {
              return new t3tr0s_slides.slide05.t28294(output_schema28283__$1, output_checker28286__$1, owner__$1, input_checker28285__$1, G__28287__$1, validate__5821__auto____$1, input_schema28284__$1, slide__$1, app__$1, G__28288__$1, ufv____$1, meta28295);
            };
          }(validate__5821__auto__, ufv___28299, output_schema28283_28300, input_schema28284_28301, input_checker28285_28302, output_checker28286_28303);
        }
        return new t3tr0s_slides.slide05.t28294(output_schema28283_28300, output_checker28286_28303, owner, input_checker28285_28302, G__28287, validate__5821__auto__, input_schema28284_28301, slide, app, G__28288, ufv___28299, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___28307 = output_checker28286_28303.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___28307)) {
        var error__5823__auto___28308 = temp__4126__auto___28307;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___28308)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema28283_28300, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___28308], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___28299, output_schema28283_28300, input_schema28284_28301, input_checker28285_28302, output_checker28286_28303);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide05.slide), schema.core.make_fn_schema.call(null, output_schema28283_28300, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema28284_28301], null)));
t3tr0s_slides.slide05.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide05.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m28282) {
    return om.core.build.call(null, t3tr0s_slides.slide05.slide, cursor__9685__auto__, m28282);
  };
  __GT_slide = function(cursor__9685__auto__, m28282) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m28282);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide05.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide05.slide, t3tr0s_slides.slide05.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide05.resume = function resume() {
  return null;
};
t3tr0s_slides.slide05.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide02");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide02.dark_green = "#143";
t3tr0s_slides.slide02.light_green = "#175";
t3tr0s_slides.slide02.dark_purple = "#449";
t3tr0s_slides.slide02.light_purple = "#6ad";
t3tr0s_slides.slide02.piece_keys = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.Keyword(null, "Z", "Z", 459124588)], null);
t3tr0s_slides.slide02.positions = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 1], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 4], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[4, 7], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 10], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 13], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 16], null), new cljs.core.Keyword(null, "Z", "Z", 
459124588), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 19], null)], null);
t3tr0s_slides.slide02.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide02.piece_abs_coords = function piece_abs_coords(piece) {
  var vec__28977 = t3tr0s_slides.slide02.positions.call(null, piece);
  var cx = cljs.core.nth.call(null, vec__28977, 0, null);
  var cy = cljs.core.nth.call(null, vec__28977, 1, null);
  return cljs.core.mapv.call(null, function(vec__28977, cx, cy) {
    return function(p__28978) {
      var vec__28979 = p__28978;
      var x = cljs.core.nth.call(null, vec__28979, 0, null);
      var y = cljs.core.nth.call(null, vec__28979, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__28977, cx, cy), t3tr0s_slides.slide02.pieces.call(null, piece));
};
t3tr0s_slides.slide02.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "index", "index", -1531685915), null], null));
t3tr0s_slides.slide02.rows = 20;
t3tr0s_slides.slide02.cols = 10;
t3tr0s_slides.slide02.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide02.cols, 0));
t3tr0s_slides.slide02.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide02.rows, t3tr0s_slides.slide02.empty_row));
t3tr0s_slides.slide02.data_row = function data_row(piece, app) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "piece" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(piece), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app)) ? 
  "active-row-534ed" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), piece);
  }], null), "[", function() {
    var iter__4278__auto__ = function iter__28994(s__28995) {
      return new cljs.core.LazySeq(null, function() {
        var s__28995__$1 = s__28995;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__28995__$1);
          if (temp__4126__auto__) {
            var s__28995__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__28995__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__28995__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__28997 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__28996 = 0;
                while (true) {
                  if (i__28996 < size__4277__auto__) {
                    var vec__29002 = cljs.core._nth.call(null, c__4276__auto__, i__28996);
                    var index = cljs.core.nth.call(null, vec__29002, 0, null);
                    var vec__29003 = cljs.core.nth.call(null, vec__29002, 1, null);
                    var x = cljs.core.nth.call(null, vec__29003, 0, null);
                    var y = cljs.core.nth.call(null, vec__29003, 1, null);
                    cljs.core.chunk_append.call(null, b__28997, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "piece" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(piece) + "index" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, 
                    piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app)) && cljs.core._EQ_.call(null, index, (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : null, new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(i__28996, vec__29002, index, vec__29003, x, y, c__4276__auto__, size__4277__auto__, b__28997, s__28995__$2, temp__4126__auto__) {
                      return function() {
                        return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
                      };
                    }(i__28996, vec__29002, index, vec__29003, x, y, c__4276__auto__, size__4277__auto__, b__28997, s__28995__$2, temp__4126__auto__)], null), function() {
                      var pad = function(i__28996, vec__29002, index, vec__29003, x, y, c__4276__auto__, size__4277__auto__, b__28997, s__28995__$2, temp__4126__auto__) {
                        return function(p1__28980_SHARP_) {
                          if (p1__28980_SHARP_ < 0) {
                            return p1__28980_SHARP_;
                          } else {
                            return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__28980_SHARP_);
                          }
                        };
                      }(i__28996, vec__29002, index, vec__29003, x, y, c__4276__auto__, size__4277__auto__, b__28997, s__28995__$2, temp__4126__auto__);
                      var fmt = function(i__28996, pad, vec__29002, index, vec__29003, x, y, c__4276__auto__, size__4277__auto__, b__28997, s__28995__$2, temp__4126__auto__) {
                        return function(p1__28981_SHARP_) {
                          return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__28981_SHARP_));
                        };
                      }(i__28996, pad, vec__29002, index, vec__29003, x, y, c__4276__auto__, size__4277__auto__, b__28997, s__28995__$2, temp__4126__auto__);
                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), " [");
                    }()], null));
                    var G__29006 = i__28996 + 1;
                    i__28996 = G__29006;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28997), iter__28994.call(null, cljs.core.chunk_rest.call(null, s__28995__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28997), null);
              }
            } else {
              var vec__29004 = cljs.core.first.call(null, s__28995__$2);
              var index = cljs.core.nth.call(null, vec__29004, 0, null);
              var vec__29005 = cljs.core.nth.call(null, vec__29004, 1, null);
              var x = cljs.core.nth.call(null, vec__29005, 0, null);
              var y = cljs.core.nth.call(null, vec__29005, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), "piece" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(piece) + "index" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, piece, 
              (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app)) && cljs.core._EQ_.call(null, index, (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app)) ? "active-col-d9099" : null, new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function(vec__29004, index, vec__29005, x, y, s__28995__$2, temp__4126__auto__) {
                return function() {
                  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
                };
              }(vec__29004, index, vec__29005, x, y, s__28995__$2, temp__4126__auto__)], null), function() {
                var pad = function(vec__29004, index, vec__29005, x, y, s__28995__$2, temp__4126__auto__) {
                  return function(p1__28980_SHARP_) {
                    if (p1__28980_SHARP_ < 0) {
                      return p1__28980_SHARP_;
                    } else {
                      return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__28980_SHARP_);
                    }
                  };
                }(vec__29004, index, vec__29005, x, y, s__28995__$2, temp__4126__auto__);
                var fmt = function(pad, vec__29004, index, vec__29005, x, y, s__28995__$2, temp__4126__auto__) {
                  return function(p1__28981_SHARP_) {
                    return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__28981_SHARP_));
                  };
                }(pad, vec__29004, index, vec__29005, x, y, s__28995__$2, temp__4126__auto__);
                return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), " [");
              }()], null), iter__28994.call(null, cljs.core.rest.call(null, s__28995__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide02.pieces.call(null, piece)));
  }(), " ]"], null);
};
var ufv___29086 = schema.utils.use_fn_validation;
var output_schema29008_29087 = schema.core.Any;
var input_schema29009_29088 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29010_29089 = schema.core.checker.call(null, input_schema29009_29088);
var output_checker29011_29090 = schema.core.checker.call(null, output_schema29008_29087);
t3tr0s_slides.slide02.code = function(ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090) {
  return function code(G__29012, G__29013) {
    var validate__5821__auto__ = ufv___29086.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29091 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29012, G__29013], null);
      var temp__4126__auto___29092 = input_checker29010_29089.call(null, args__5822__auto___29091);
      if (cljs.core.truth_(temp__4126__auto___29092)) {
        var error__5823__auto___29093 = temp__4126__auto___29092;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___29093)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29009_29088, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29091, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29093], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29012;
      var owner = G__29013;
      while (true) {
        if (typeof t3tr0s_slides.slide02.t29050 !== "undefined") {
        } else {
          t3tr0s_slides.slide02.t29050 = function(input_checker29010, input_schema29009, owner, G__29013, validate__5821__auto__, output_checker29011, G__29012, output_schema29008, app, ufv__, code, meta29051) {
            this.input_checker29010 = input_checker29010;
            this.input_schema29009 = input_schema29009;
            this.owner = owner;
            this.G__29013 = G__29013;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker29011 = output_checker29011;
            this.G__29012 = G__29012;
            this.output_schema29008 = output_schema29008;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta29051 = meta29051;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide02.t29050.cljs$lang$type = true;
          t3tr0s_slides.slide02.t29050.cljs$lang$ctorStr = "t3tr0s-slides.slide02/t29050";
          t3tr0s_slides.slide02.t29050.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide02/t29050");
            };
          }(validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090);
          t3tr0s_slides.slide02.t29050.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide02.t29050.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs29053 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: mouse over the pieces.");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs29053) ? sablono.interpreter.attributes.call(null, attrs29053) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs29053) ? new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " pieces\n", sablono.interpreter.interpret.call(null, 
                function() {
                  var ps = t3tr0s_slides.slide02.piece_keys;
                  var first_p = cljs.core.first.call(null, ps);
                  var last_p = cljs.core.last.call(null, ps);
                  var iter__4278__auto__ = function(ps, first_p, last_p, attrs29053, ___$1, validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090) {
                    return function iter__29054(s__29055) {
                      return new cljs.core.LazySeq(null, function(ps, first_p, last_p, attrs29053, ___$1, validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090) {
                        return function() {
                          var s__29055__$1 = s__29055;
                          while (true) {
                            var temp__4126__auto__ = cljs.core.seq.call(null, s__29055__$1);
                            if (temp__4126__auto__) {
                              var s__29055__$2 = temp__4126__auto__;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__29055__$2)) {
                                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__29055__$2);
                                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                var b__29057 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                if (function() {
                                  var i__29056 = 0;
                                  while (true) {
                                    if (i__29056 < size__4277__auto__) {
                                      var p = cljs.core._nth.call(null, c__4276__auto__, i__29056);
                                      cljs.core.chunk_append.call(null, b__29057, function() {
                                        var pred__29064 = cljs.core._EQ_;
                                        var expr__29065 = p;
                                        if (cljs.core.truth_(pred__29064.call(null, first_p, expr__29065))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "  {");
                                        } else {
                                          if (cljs.core.truth_(pred__29064.call(null, last_p, expr__29065))) {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "})\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                          } else {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                          }
                                        }
                                      }());
                                      var G__29094 = i__29056 + 1;
                                      i__29056 = G__29094;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29057), iter__29054.call(null, cljs.core.chunk_rest.call(null, s__29055__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29057), null);
                                }
                              } else {
                                var p = cljs.core.first.call(null, s__29055__$2);
                                return cljs.core.cons.call(null, function() {
                                  var pred__29067 = cljs.core._EQ_;
                                  var expr__29068 = p;
                                  if (cljs.core.truth_(pred__29067.call(null, first_p, expr__29068))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "  {");
                                  } else {
                                    if (cljs.core.truth_(pred__29067.call(null, last_p, expr__29068))) {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "})\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                    } else {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                    }
                                  }
                                }(), iter__29054.call(null, cljs.core.rest.call(null, s__29055__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(ps, first_p, last_p, attrs29053, ___$1, validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090), null, null);
                    };
                  }(ps, first_p, last_p, attrs29053, ___$1, validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090);
                  return iter__4278__auto__.call(null, ps);
                }()), "\n\n", sablono.interpreter.interpret.call(null, function() {
                  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(self__.app);
                  if (cljs.core.truth_(temp__4126__auto__)) {
                    var p = temp__4126__auto__;
                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
                      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(self__.app);
                      if (cljs.core.truth_(temp__4126__auto____$1)) {
                        var i = temp__4126__auto____$1;
                        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.syntax_highlight.cmt.call(null, "; coord \x3d ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, t3tr0s_slides.slide02.pieces.call(null, p), i))));
                      } else {
                        return null;
                      }
                    }()), "\n"), t3tr0s_slides.syntax_highlight.cmt.call(null, "; piece \x3d ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p)));
                  } else {
                    return null;
                  }
                }())], null) : new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs29053), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " pieces\n", sablono.interpreter.interpret.call(null, function() {
                  var ps = t3tr0s_slides.slide02.piece_keys;
                  var first_p = cljs.core.first.call(null, ps);
                  var last_p = cljs.core.last.call(null, ps);
                  var iter__4278__auto__ = function(ps, first_p, last_p, attrs29053, ___$1, validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090) {
                    return function iter__29070(s__29071) {
                      return new cljs.core.LazySeq(null, function(ps, first_p, last_p, attrs29053, ___$1, validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090) {
                        return function() {
                          var s__29071__$1 = s__29071;
                          while (true) {
                            var temp__4126__auto__ = cljs.core.seq.call(null, s__29071__$1);
                            if (temp__4126__auto__) {
                              var s__29071__$2 = temp__4126__auto__;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__29071__$2)) {
                                var c__4276__auto__ = cljs.core.chunk_first.call(null, s__29071__$2);
                                var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
                                var b__29073 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
                                if (function() {
                                  var i__29072 = 0;
                                  while (true) {
                                    if (i__29072 < size__4277__auto__) {
                                      var p = cljs.core._nth.call(null, c__4276__auto__, i__29072);
                                      cljs.core.chunk_append.call(null, b__29073, function() {
                                        var pred__29080 = cljs.core._EQ_;
                                        var expr__29081 = p;
                                        if (cljs.core.truth_(pred__29080.call(null, first_p, expr__29081))) {
                                          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "  {");
                                        } else {
                                          if (cljs.core.truth_(pred__29080.call(null, last_p, expr__29081))) {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "})\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                          } else {
                                            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                          }
                                        }
                                      }());
                                      var G__29095 = i__29072 + 1;
                                      i__29072 = G__29095;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29073), iter__29070.call(null, cljs.core.chunk_rest.call(null, s__29071__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29073), null);
                                }
                              } else {
                                var p = cljs.core.first.call(null, s__29071__$2);
                                return cljs.core.cons.call(null, function() {
                                  var pred__29083 = cljs.core._EQ_;
                                  var expr__29084 = p;
                                  if (cljs.core.truth_(pred__29083.call(null, first_p, expr__29084))) {
                                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "  {");
                                  } else {
                                    if (cljs.core.truth_(pred__29083.call(null, last_p, expr__29084))) {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "})\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                    } else {
                                      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.slide02.data_row.call(null, p, self__.app)), " "), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p))), "   ");
                                    }
                                  }
                                }(), iter__29070.call(null, cljs.core.rest.call(null, s__29071__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(ps, first_p, last_p, attrs29053, ___$1, validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090), null, null);
                    };
                  }(ps, first_p, last_p, attrs29053, ___$1, validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090);
                  return iter__4278__auto__.call(null, ps);
                }()), "\n\n", sablono.interpreter.interpret.call(null, function() {
                  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(self__.app);
                  if (cljs.core.truth_(temp__4126__auto__)) {
                    var p = temp__4126__auto__;
                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
                      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(self__.app);
                      if (cljs.core.truth_(temp__4126__auto____$1)) {
                        var i = temp__4126__auto____$1;
                        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "\n"), t3tr0s_slides.syntax_highlight.cmt.call(null, "; coord \x3d ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, t3tr0s_slides.slide02.pieces.call(null, p), i))));
                      } else {
                        return null;
                      }
                    }()), "\n"), t3tr0s_slides.syntax_highlight.cmt.call(null, "; piece \x3d ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p)));
                  } else {
                    return null;
                  }
                }())], null)));
              }()));
            };
          }(validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090);
          t3tr0s_slides.slide02.t29050.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090) {
            return function(_29052) {
              var self__ = this;
              var _29052__$1 = this;
              return self__.meta29051;
            };
          }(validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090);
          t3tr0s_slides.slide02.t29050.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090) {
            return function(_29052, meta29051__$1) {
              var self__ = this;
              var _29052__$1 = this;
              return new t3tr0s_slides.slide02.t29050(self__.input_checker29010, self__.input_schema29009, self__.owner, self__.G__29013, self__.validate__5821__auto__, self__.output_checker29011, self__.G__29012, self__.output_schema29008, self__.app, self__.ufv__, self__.code, meta29051__$1);
            };
          }(validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090);
          t3tr0s_slides.slide02.__GT_t29050 = function(validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090) {
            return function __GT_t29050(input_checker29010__$1, input_schema29009__$1, owner__$1, G__29013__$1, validate__5821__auto____$1, output_checker29011__$1, G__29012__$1, output_schema29008__$1, app__$1, ufv____$1, code__$1, meta29051) {
              return new t3tr0s_slides.slide02.t29050(input_checker29010__$1, input_schema29009__$1, owner__$1, G__29013__$1, validate__5821__auto____$1, output_checker29011__$1, G__29012__$1, output_schema29008__$1, app__$1, ufv____$1, code__$1, meta29051);
            };
          }(validate__5821__auto__, ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090);
        }
        return new t3tr0s_slides.slide02.t29050(input_checker29010_29089, input_schema29009_29088, owner, G__29013, validate__5821__auto__, output_checker29011_29090, G__29012, output_schema29008_29087, app, ufv___29086, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29096 = output_checker29011_29090.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29096)) {
        var error__5823__auto___29097 = temp__4126__auto___29096;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___29097)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29008_29087, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29097], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29086, output_schema29008_29087, input_schema29009_29088, input_checker29010_29089, output_checker29011_29090);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide02.code), schema.core.make_fn_schema.call(null, output_schema29008_29087, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29009_29088], null)));
t3tr0s_slides.slide02.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide02.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m29007) {
    return om.core.build.call(null, t3tr0s_slides.slide02.code, cursor__9685__auto__, m29007);
  };
  __GT_code = function(cursor__9685__auto__, m29007) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m29007);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide02.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide02.rows);
t3tr0s_slides.slide02.piece_index = function piece_index(x, y) {
  return cljs.core.some.call(null, cljs.core.identity, cljs.core.map.call(null, function(p1__29098_SHARP_) {
    return cljs.core.first.call(null, cljs.core.keep_indexed.call(null, function(i, p__29101) {
      var vec__29102 = p__29101;
      var px = cljs.core.nth.call(null, vec__29102, 0, null);
      var py = cljs.core.nth.call(null, vec__29102, 1, null);
      if (cljs.core._EQ_.call(null, px, x) && cljs.core._EQ_.call(null, py, y)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__29098_SHARP_, i], null);
      } else {
        return null;
      }
    }, t3tr0s_slides.slide02.piece_abs_coords.call(null, p1__29098_SHARP_)));
  }, cljs.core.keys.call(null, t3tr0s_slides.slide02.pieces)));
};
t3tr0s_slides.slide02.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide02.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide02.cell_size);
  var vec__29104 = t3tr0s_slides.slide02.piece_index.call(null, col, row);
  var piece = cljs.core.nth.call(null, vec__29104, 0, null);
  var index = cljs.core.nth.call(null, vec__29104, 1, null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return index;
    } else {
      return and__3541__auto__;
    }
  }())) {
    om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), piece);
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "index", "index", -1531685915), index);
  } else {
    return null;
  }
};
t3tr0s_slides.slide02.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__29105, is_piece, is_index, is_center) {
  var vec__29107 = p__29105;
  var x = cljs.core.nth.call(null, vec__29107, 0, null);
  var y = cljs.core.nth.call(null, vec__29107, 1, null);
  ctx.fillStyle = cljs.core.truth_(is_index) ? t3tr0s_slides.slide02.dark_purple : cljs.core.truth_(is_piece) ? t3tr0s_slides.slide02.dark_green : "transparent";
  ctx.strokeStyle = cljs.core.truth_(is_index) ? t3tr0s_slides.slide02.light_purple : cljs.core.truth_(is_piece) ? t3tr0s_slides.slide02.light_green : "#888";
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide02.cell_size * x;
  var ry = t3tr0s_slides.slide02.cell_size * y;
  var rs = t3tr0s_slides.slide02.cell_size;
  var cx = t3tr0s_slides.slide02.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide02.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide02.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide02.draw_piece_BANG_ = function draw_piece_BANG_(app, ctx, piece) {
  var is_piece = cljs.core._EQ_.call(null, piece, (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app));
  var index = function() {
    var and__3541__auto__ = is_piece;
    if (and__3541__auto__) {
      return(new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(app);
    } else {
      return and__3541__auto__;
    }
  }();
  var center = t3tr0s_slides.slide02.positions.call(null, piece);
  var seq__29120_29132 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide02.piece_abs_coords.call(null, piece)));
  var chunk__29121_29133 = null;
  var count__29122_29134 = 0;
  var i__29123_29135 = 0;
  while (true) {
    if (i__29123_29135 < count__29122_29134) {
      var vec__29124_29136 = cljs.core._nth.call(null, chunk__29121_29133, i__29123_29135);
      var i_29137 = cljs.core.nth.call(null, vec__29124_29136, 0, null);
      var c_29138 = cljs.core.nth.call(null, vec__29124_29136, 1, null);
      if (cljs.core._EQ_.call(null, i_29137, index)) {
      } else {
        t3tr0s_slides.slide02.draw_cell_BANG_.call(null, ctx, c_29138, is_piece, cljs.core._EQ_.call(null, i_29137, index), cljs.core._EQ_.call(null, c_29138, center));
      }
      var G__29139 = seq__29120_29132;
      var G__29140 = chunk__29121_29133;
      var G__29141 = count__29122_29134;
      var G__29142 = i__29123_29135 + 1;
      seq__29120_29132 = G__29139;
      chunk__29121_29133 = G__29140;
      count__29122_29134 = G__29141;
      i__29123_29135 = G__29142;
      continue;
    } else {
      var temp__4126__auto___29143 = cljs.core.seq.call(null, seq__29120_29132);
      if (temp__4126__auto___29143) {
        var seq__29120_29144__$1 = temp__4126__auto___29143;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__29120_29144__$1)) {
          var c__4309__auto___29145 = cljs.core.chunk_first.call(null, seq__29120_29144__$1);
          var G__29146 = cljs.core.chunk_rest.call(null, seq__29120_29144__$1);
          var G__29147 = c__4309__auto___29145;
          var G__29148 = cljs.core.count.call(null, c__4309__auto___29145);
          var G__29149 = 0;
          seq__29120_29132 = G__29146;
          chunk__29121_29133 = G__29147;
          count__29122_29134 = G__29148;
          i__29123_29135 = G__29149;
          continue;
        } else {
          var vec__29125_29150 = cljs.core.first.call(null, seq__29120_29144__$1);
          var i_29151 = cljs.core.nth.call(null, vec__29125_29150, 0, null);
          var c_29152 = cljs.core.nth.call(null, vec__29125_29150, 1, null);
          if (cljs.core._EQ_.call(null, i_29151, index)) {
          } else {
            t3tr0s_slides.slide02.draw_cell_BANG_.call(null, ctx, c_29152, is_piece, cljs.core._EQ_.call(null, i_29151, index), cljs.core._EQ_.call(null, c_29152, center));
          }
          var G__29153 = cljs.core.next.call(null, seq__29120_29144__$1);
          var G__29154 = null;
          var G__29155 = 0;
          var G__29156 = 0;
          seq__29120_29132 = G__29153;
          chunk__29121_29133 = G__29154;
          count__29122_29134 = G__29155;
          i__29123_29135 = G__29156;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__29126 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide02.piece_abs_coords.call(null, piece)));
  var chunk__29127 = null;
  var count__29128 = 0;
  var i__29129 = 0;
  while (true) {
    if (i__29129 < count__29128) {
      var vec__29130 = cljs.core._nth.call(null, chunk__29127, i__29129);
      var i = cljs.core.nth.call(null, vec__29130, 0, null);
      var c = cljs.core.nth.call(null, vec__29130, 1, null);
      if (cljs.core._EQ_.call(null, i, index)) {
        t3tr0s_slides.slide02.draw_cell_BANG_.call(null, ctx, c, is_piece, cljs.core._EQ_.call(null, i, index), cljs.core._EQ_.call(null, c, center));
      } else {
      }
      var G__29157 = seq__29126;
      var G__29158 = chunk__29127;
      var G__29159 = count__29128;
      var G__29160 = i__29129 + 1;
      seq__29126 = G__29157;
      chunk__29127 = G__29158;
      count__29128 = G__29159;
      i__29129 = G__29160;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__29126);
      if (temp__4126__auto__) {
        var seq__29126__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__29126__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__29126__$1);
          var G__29161 = cljs.core.chunk_rest.call(null, seq__29126__$1);
          var G__29162 = c__4309__auto__;
          var G__29163 = cljs.core.count.call(null, c__4309__auto__);
          var G__29164 = 0;
          seq__29126 = G__29161;
          chunk__29127 = G__29162;
          count__29128 = G__29163;
          i__29129 = G__29164;
          continue;
        } else {
          var vec__29131 = cljs.core.first.call(null, seq__29126__$1);
          var i = cljs.core.nth.call(null, vec__29131, 0, null);
          var c = cljs.core.nth.call(null, vec__29131, 1, null);
          if (cljs.core._EQ_.call(null, i, index)) {
            t3tr0s_slides.slide02.draw_cell_BANG_.call(null, ctx, c, is_piece, cljs.core._EQ_.call(null, i, index), cljs.core._EQ_.call(null, c, center));
          } else {
          }
          var G__29165 = cljs.core.next.call(null, seq__29126__$1);
          var G__29166 = null;
          var G__29167 = 0;
          var G__29168 = 0;
          seq__29126 = G__29165;
          chunk__29127 = G__29166;
          count__29128 = G__29167;
          i__29129 = G__29168;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide02.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide02.cell_size * t3tr0s_slides.slide02.cols, t3tr0s_slides.slide02.cell_size * t3tr0s_slides.slide02.rows);
  var seq__29173 = cljs.core.seq.call(null, t3tr0s_slides.slide02.piece_keys);
  var chunk__29174 = null;
  var count__29175 = 0;
  var i__29176 = 0;
  while (true) {
    if (i__29176 < count__29175) {
      var p = cljs.core._nth.call(null, chunk__29174, i__29176);
      t3tr0s_slides.slide02.draw_piece_BANG_.call(null, app, ctx, p);
      var G__29177 = seq__29173;
      var G__29178 = chunk__29174;
      var G__29179 = count__29175;
      var G__29180 = i__29176 + 1;
      seq__29173 = G__29177;
      chunk__29174 = G__29178;
      count__29175 = G__29179;
      i__29176 = G__29180;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__29173);
      if (temp__4126__auto__) {
        var seq__29173__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__29173__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__29173__$1);
          var G__29181 = cljs.core.chunk_rest.call(null, seq__29173__$1);
          var G__29182 = c__4309__auto__;
          var G__29183 = cljs.core.count.call(null, c__4309__auto__);
          var G__29184 = 0;
          seq__29173 = G__29181;
          chunk__29174 = G__29182;
          count__29175 = G__29183;
          i__29176 = G__29184;
          continue;
        } else {
          var p = cljs.core.first.call(null, seq__29173__$1);
          t3tr0s_slides.slide02.draw_piece_BANG_.call(null, app, ctx, p);
          var G__29185 = cljs.core.next.call(null, seq__29173__$1);
          var G__29186 = null;
          var G__29187 = 0;
          var G__29188 = 0;
          seq__29173 = G__29185;
          chunk__29174 = G__29186;
          count__29175 = G__29187;
          i__29176 = G__29188;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
var ufv___29203 = schema.utils.use_fn_validation;
var output_schema29191_29204 = schema.core.Any;
var input_schema29192_29205 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29193_29206 = schema.core.checker.call(null, input_schema29192_29205);
var output_checker29194_29207 = schema.core.checker.call(null, output_schema29191_29204);
t3tr0s_slides.slide02.canvas = function(ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207) {
  return function canvas(G__29195, G__29196) {
    var validate__5821__auto__ = ufv___29203.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29208 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29195, G__29196], null);
      var temp__4126__auto___29209 = input_checker29193_29206.call(null, args__5822__auto___29208);
      if (cljs.core.truth_(temp__4126__auto___29209)) {
        var error__5823__auto___29210 = temp__4126__auto___29209;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___29210)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29192_29205, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29208, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29210], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29195;
      var owner = G__29196;
      while (true) {
        if (typeof t3tr0s_slides.slide02.t29200 !== "undefined") {
        } else {
          t3tr0s_slides.slide02.t29200 = function(input_schema29192, owner, validate__5821__auto__, G__29196, input_checker29193, G__29195, output_schema29191, canvas, output_checker29194, app, ufv__, meta29201) {
            this.input_schema29192 = input_schema29192;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__29196 = G__29196;
            this.input_checker29193 = input_checker29193;
            this.G__29195 = G__29195;
            this.output_schema29191 = output_schema29191;
            this.canvas = canvas;
            this.output_checker29194 = output_checker29194;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta29201 = meta29201;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide02.t29200.cljs$lang$type = true;
          t3tr0s_slides.slide02.t29200.cljs$lang$ctorStr = "t3tr0s-slides.slide02/t29200";
          t3tr0s_slides.slide02.t29200.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide02/t29200");
            };
          }(validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207);
          t3tr0s_slides.slide02.t29200.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide02.t29200.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseMove":function(___$1, validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207) {
                return function(p1__29189_SHARP_) {
                  return t3tr0s_slides.slide02.canvas_mouse.call(null, self__.app, self__.owner, p1__29189_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207)}));
            };
          }(validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207);
          t3tr0s_slides.slide02.t29200.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide02.t29200.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide02.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207);
          t3tr0s_slides.slide02.t29200.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide02.t29200.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide02.cols * t3tr0s_slides.slide02.cell_size;
              canvas__$2.height = t3tr0s_slides.slide02.rows * t3tr0s_slides.slide02.cell_size;
              return t3tr0s_slides.slide02.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207);
          t3tr0s_slides.slide02.t29200.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207) {
            return function(_29202) {
              var self__ = this;
              var _29202__$1 = this;
              return self__.meta29201;
            };
          }(validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207);
          t3tr0s_slides.slide02.t29200.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207) {
            return function(_29202, meta29201__$1) {
              var self__ = this;
              var _29202__$1 = this;
              return new t3tr0s_slides.slide02.t29200(self__.input_schema29192, self__.owner, self__.validate__5821__auto__, self__.G__29196, self__.input_checker29193, self__.G__29195, self__.output_schema29191, self__.canvas, self__.output_checker29194, self__.app, self__.ufv__, meta29201__$1);
            };
          }(validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207);
          t3tr0s_slides.slide02.__GT_t29200 = function(validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207) {
            return function __GT_t29200(input_schema29192__$1, owner__$1, validate__5821__auto____$1, G__29196__$1, input_checker29193__$1, G__29195__$1, output_schema29191__$1, canvas__$1, output_checker29194__$1, app__$1, ufv____$1, meta29201) {
              return new t3tr0s_slides.slide02.t29200(input_schema29192__$1, owner__$1, validate__5821__auto____$1, G__29196__$1, input_checker29193__$1, G__29195__$1, output_schema29191__$1, canvas__$1, output_checker29194__$1, app__$1, ufv____$1, meta29201);
            };
          }(validate__5821__auto__, ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207);
        }
        return new t3tr0s_slides.slide02.t29200(input_schema29192_29205, owner, validate__5821__auto__, G__29196, input_checker29193_29206, G__29195, output_schema29191_29204, canvas, output_checker29194_29207, app, ufv___29203, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29211 = output_checker29194_29207.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29211)) {
        var error__5823__auto___29212 = temp__4126__auto___29211;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___29212)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29191_29204, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29212], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29203, output_schema29191_29204, input_schema29192_29205, input_checker29193_29206, output_checker29194_29207);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide02.canvas), schema.core.make_fn_schema.call(null, output_schema29191_29204, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29192_29205], null)));
t3tr0s_slides.slide02.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide02.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m29190) {
    return om.core.build.call(null, t3tr0s_slides.slide02.canvas, cursor__9685__auto__, m29190);
  };
  __GT_canvas = function(cursor__9685__auto__, m29190) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m29190);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___29230 = schema.utils.use_fn_validation;
var output_schema29214_29231 = schema.core.Any;
var input_schema29215_29232 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29216_29233 = schema.core.checker.call(null, input_schema29215_29232);
var output_checker29217_29234 = schema.core.checker.call(null, output_schema29214_29231);
t3tr0s_slides.slide02.slide = function(ufv___29230, output_schema29214_29231, input_schema29215_29232, input_checker29216_29233, output_checker29217_29234) {
  return function slide(G__29218, G__29219) {
    var validate__5821__auto__ = ufv___29230.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29235 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29218, G__29219], null);
      var temp__4126__auto___29236 = input_checker29216_29233.call(null, args__5822__auto___29235);
      if (cljs.core.truth_(temp__4126__auto___29236)) {
        var error__5823__auto___29237 = temp__4126__auto___29236;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___29237)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29215_29232, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29235, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29237], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29218;
      var owner = G__29219;
      while (true) {
        if (typeof t3tr0s_slides.slide02.t29225 !== "undefined") {
        } else {
          t3tr0s_slides.slide02.t29225 = function(output_checker29217, input_checker29216, owner, G__29219, validate__5821__auto__, G__29218, input_schema29215, output_schema29214, slide, app, ufv__, meta29226) {
            this.output_checker29217 = output_checker29217;
            this.input_checker29216 = input_checker29216;
            this.owner = owner;
            this.G__29219 = G__29219;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__29218 = G__29218;
            this.input_schema29215 = input_schema29215;
            this.output_schema29214 = output_schema29214;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta29226 = meta29226;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide02.t29225.cljs$lang$type = true;
          t3tr0s_slides.slide02.t29225.cljs$lang$ctorStr = "t3tr0s-slides.slide02/t29225";
          t3tr0s_slides.slide02.t29225.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29230, output_schema29214_29231, input_schema29215_29232, input_checker29216_29233, output_checker29217_29234) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide02/t29225");
            };
          }(validate__5821__auto__, ufv___29230, output_schema29214_29231, input_schema29215_29232, input_checker29216_29233, output_checker29217_29234);
          t3tr0s_slides.slide02.t29225.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide02.t29225.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29230, output_schema29214_29231, input_schema29215_29232, input_checker29216_29233, output_checker29217_29234) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "2. Create the pieces."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide02.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide02.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___29230, output_schema29214_29231, input_schema29215_29232, input_checker29216_29233, output_checker29217_29234);
          t3tr0s_slides.slide02.t29225.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29230, output_schema29214_29231, input_schema29215_29232, input_checker29216_29233, output_checker29217_29234) {
            return function(_29227) {
              var self__ = this;
              var _29227__$1 = this;
              return self__.meta29226;
            };
          }(validate__5821__auto__, ufv___29230, output_schema29214_29231, input_schema29215_29232, input_checker29216_29233, output_checker29217_29234);
          t3tr0s_slides.slide02.t29225.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29230, output_schema29214_29231, input_schema29215_29232, input_checker29216_29233, output_checker29217_29234) {
            return function(_29227, meta29226__$1) {
              var self__ = this;
              var _29227__$1 = this;
              return new t3tr0s_slides.slide02.t29225(self__.output_checker29217, self__.input_checker29216, self__.owner, self__.G__29219, self__.validate__5821__auto__, self__.G__29218, self__.input_schema29215, self__.output_schema29214, self__.slide, self__.app, self__.ufv__, meta29226__$1);
            };
          }(validate__5821__auto__, ufv___29230, output_schema29214_29231, input_schema29215_29232, input_checker29216_29233, output_checker29217_29234);
          t3tr0s_slides.slide02.__GT_t29225 = function(validate__5821__auto__, ufv___29230, output_schema29214_29231, input_schema29215_29232, input_checker29216_29233, output_checker29217_29234) {
            return function __GT_t29225(output_checker29217__$1, input_checker29216__$1, owner__$1, G__29219__$1, validate__5821__auto____$1, G__29218__$1, input_schema29215__$1, output_schema29214__$1, slide__$1, app__$1, ufv____$1, meta29226) {
              return new t3tr0s_slides.slide02.t29225(output_checker29217__$1, input_checker29216__$1, owner__$1, G__29219__$1, validate__5821__auto____$1, G__29218__$1, input_schema29215__$1, output_schema29214__$1, slide__$1, app__$1, ufv____$1, meta29226);
            };
          }(validate__5821__auto__, ufv___29230, output_schema29214_29231, input_schema29215_29232, input_checker29216_29233, output_checker29217_29234);
        }
        return new t3tr0s_slides.slide02.t29225(output_checker29217_29234, input_checker29216_29233, owner, G__29219, validate__5821__auto__, G__29218, input_schema29215_29232, output_schema29214_29231, slide, app, ufv___29230, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29238 = output_checker29217_29234.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29238)) {
        var error__5823__auto___29239 = temp__4126__auto___29238;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___29239)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29214_29231, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29239], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29230, output_schema29214_29231, input_schema29215_29232, input_checker29216_29233, output_checker29217_29234);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide02.slide), schema.core.make_fn_schema.call(null, output_schema29214_29231, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29215_29232], null)));
t3tr0s_slides.slide02.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide02.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m29213) {
    return om.core.build.call(null, t3tr0s_slides.slide02.slide, cursor__9685__auto__, m29213);
  };
  __GT_slide = function(cursor__9685__auto__, m29213) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m29213);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide02.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide02.slide, t3tr0s_slides.slide02.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide02.resume = function resume() {
  return null;
};
t3tr0s_slides.slide02.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide06");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide06.dark_green = "#143";
t3tr0s_slides.slide06.light_green = "#175";
t3tr0s_slides.slide06.dark_purple = "#449";
t3tr0s_slides.slide06.light_purple = "#6ad";
t3tr0s_slides.slide06.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide06.rotate_coord = function rotate_coord(p__27957) {
  var vec__27959 = p__27957;
  var x = cljs.core.nth.call(null, vec__27959, 0, null);
  var y = cljs.core.nth.call(null, vec__27959, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide06.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide06.rotate_coord, piece);
};
t3tr0s_slides.slide06.move_left = function move_left(p__27960) {
  var vec__27962 = p__27960;
  var x = cljs.core.nth.call(null, vec__27962, 0, null);
  var y = cljs.core.nth.call(null, vec__27962, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x - 1, y], null);
};
t3tr0s_slides.slide06.move_right = function move_right(p__27963) {
  var vec__27965 = p__27963;
  var x = cljs.core.nth.call(null, vec__27965, 0, null);
  var y = cljs.core.nth.call(null, vec__27965, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + 1, y], null);
};
t3tr0s_slides.slide06.move_down = function move_down(p__27966) {
  var vec__27968 = p__27966;
  var x = cljs.core.nth.call(null, vec__27968, 0, null);
  var y = cljs.core.nth.call(null, vec__27968, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y + 1], null);
};
t3tr0s_slides.slide06.g0 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null), new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "J", "J", 1394734828)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide06.pieces)], null);
t3tr0s_slides.slide06.g1 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g0, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_left);
t3tr0s_slides.slide06.g2 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_left);
t3tr0s_slides.slide06.g3 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g2, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide06.rotate_piece);
t3tr0s_slides.slide06.g4 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g3, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g5 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g4, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g6 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g5, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide06.rotate_piece);
t3tr0s_slides.slide06.g7 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g6, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_right);
t3tr0s_slides.slide06.g8 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g7, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_right);
t3tr0s_slides.slide06.g9 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g8, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "piece", "piece", 1396691784)], null), t3tr0s_slides.slide06.rotate_piece);
t3tr0s_slides.slide06.g10 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g9, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g11 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g10, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g12 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g11, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g13 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g12, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g14 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g13, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.g15 = cljs.core.update_in.call(null, t3tr0s_slides.slide06.g14, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", -2011731912)], null), t3tr0s_slides.slide06.move_down);
t3tr0s_slides.slide06.states = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [t3tr0s_slides.slide06.g0, t3tr0s_slides.slide06.g1, t3tr0s_slides.slide06.g2, t3tr0s_slides.slide06.g3, t3tr0s_slides.slide06.g4, t3tr0s_slides.slide06.g5, t3tr0s_slides.slide06.g6, t3tr0s_slides.slide06.g7, t3tr0s_slides.slide06.g8, t3tr0s_slides.slide06.g9, t3tr0s_slides.slide06.g10, t3tr0s_slides.slide06.g11, t3tr0s_slides.slide06.g12, t3tr0s_slides.slide06.g13, t3tr0s_slides.slide06.g14, 
t3tr0s_slides.slide06.g15], null);
t3tr0s_slides.slide06.state_places = cljs.core.PersistentHashMap.fromArrays([t3tr0s_slides.slide06.g5, t3tr0s_slides.slide06.g6, t3tr0s_slides.slide06.g13, t3tr0s_slides.slide06.g0, t3tr0s_slides.slide06.g4, t3tr0s_slides.slide06.g2, t3tr0s_slides.slide06.g11, t3tr0s_slides.slide06.g14, t3tr0s_slides.slide06.g10, t3tr0s_slides.slide06.g9, t3tr0s_slides.slide06.g3, t3tr0s_slides.slide06.g8, t3tr0s_slides.slide06.g1, t3tr0s_slides.slide06.g15, t3tr0s_slides.slide06.g12, t3tr0s_slides.slide06.g7], [5, 
6, 13, 0, 4, 2, 11, 14, 10, 9, 3, 8, 1, 15, 12, 7]);
t3tr0s_slides.slide06.rotate_coord = function rotate_coord(p__27969) {
  var vec__27971 = p__27969;
  var x = cljs.core.nth.call(null, vec__27971, 0, null);
  var y = cljs.core.nth.call(null, vec__27971, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide06.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide06.rotate_coord, piece);
};
t3tr0s_slides.slide06.piece_abs_coords = function piece_abs_coords(piece, p__27972) {
  var vec__27976 = p__27972;
  var cx = cljs.core.nth.call(null, vec__27976, 0, null);
  var cy = cljs.core.nth.call(null, vec__27976, 1, null);
  return cljs.core.mapv.call(null, function(vec__27976, cx, cy) {
    return function(p__27977) {
      var vec__27978 = p__27977;
      var x = cljs.core.nth.call(null, vec__27978, 0, null);
      var y = cljs.core.nth.call(null, vec__27978, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__27976, cx, cy), piece);
};
t3tr0s_slides.slide06.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "position", "position", -2011731912), null], null));
t3tr0s_slides.slide06.rows = 20;
t3tr0s_slides.slide06.cols = 10;
t3tr0s_slides.slide06.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide06.cols, 0));
t3tr0s_slides.slide06.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide06.rows, t3tr0s_slides.slide06.empty_row));
t3tr0s_slides.slide06.state_code = function state_code(app, rkey, state, code_str) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", -1516042587), rkey, new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, state, app) ? "active-col-d9099" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, state);
  }], null), code_str], null);
};
var ufv___27992 = schema.utils.use_fn_validation;
var output_schema27980_27993 = schema.core.Any;
var input_schema27981_27994 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker27982_27995 = schema.core.checker.call(null, input_schema27981_27994);
var output_checker27983_27996 = schema.core.checker.call(null, output_schema27980_27993);
t3tr0s_slides.slide06.code = function(ufv___27992, output_schema27980_27993, input_schema27981_27994, input_checker27982_27995, output_checker27983_27996) {
  return function code(G__27984, G__27985) {
    var validate__5821__auto__ = ufv___27992.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___27997 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__27984, G__27985], null);
      var temp__4126__auto___27998 = input_checker27982_27995.call(null, args__5822__auto___27997);
      if (cljs.core.truth_(temp__4126__auto___27998)) {
        var error__5823__auto___27999 = temp__4126__auto___27998;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___27999)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema27981_27994, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___27997, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___27999], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__27984;
      var owner = G__27985;
      while (true) {
        if (typeof t3tr0s_slides.slide06.t27989 !== "undefined") {
        } else {
          t3tr0s_slides.slide06.t27989 = function(owner, output_checker27983, validate__5821__auto__, G__27984, input_schema27981, input_checker27982, G__27985, output_schema27980, app, ufv__, code, meta27990) {
            this.owner = owner;
            this.output_checker27983 = output_checker27983;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__27984 = G__27984;
            this.input_schema27981 = input_schema27981;
            this.input_checker27982 = input_checker27982;
            this.G__27985 = G__27985;
            this.output_schema27980 = output_schema27980;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta27990 = meta27990;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide06.t27989.cljs$lang$type = true;
          t3tr0s_slides.slide06.t27989.cljs$lang$ctorStr = "t3tr0s-slides.slide06/t27989";
          t3tr0s_slides.slide06.t27989.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___27992, output_schema27980_27993, input_schema27981_27994, input_checker27982_27995, output_checker27983_27996) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide06/t27989");
            };
          }(validate__5821__auto__, ufv___27992, output_schema27980_27993, input_schema27981_27994, input_checker27982_27995, output_checker27983_27996);
          t3tr0s_slides.slide06.t27989.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide06.t27989.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___27992, output_schema27980_27993, input_schema27981_27994, input_checker27982_27995, output_checker27983_27996) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code({"id":"lang-clj", "ref":"code"}, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " game-state\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "atom")), " {", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " empty-board]\n", "         ", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":J")), " pieces)\n", "         ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " [", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "4")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "6")), "]}))\n", 
              "\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: mouse over the states.")), "\n\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g1", t3tr0s_slides.slide06.g1, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-left)\n"), 
              t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g2", t3tr0s_slides.slide06.g2, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-left)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g3", t3tr0s_slides.slide06.g3, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]    rotate-piece)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g4", t3tr0s_slides.slide06.g4, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, 
              self__.app, "g5", t3tr0s_slides.slide06.g5, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.slide06.state_code.call(null, self__.app, "g6", t3tr0s_slides.slide06.g6, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]    rotate-piece)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, 
              "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g7", t3tr0s_slides.slide06.g7, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-right)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, 
              "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g8", t3tr0s_slides.slide06.g8, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-right)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g9", t3tr0s_slides.slide06.g9, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
              "]    rotate-piece)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g10", t3tr0s_slides.slide06.g10, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g11", t3tr0s_slides.slide06.g11, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g12", 
              t3tr0s_slides.slide06.g12, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.slide06.state_code.call(null, self__.app, "g13", t3tr0s_slides.slide06.g13, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, 
              "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g14", t3tr0s_slides.slide06.g14, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, 
              "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), sablono.interpreter.interpret.call(null, t3tr0s_slides.slide06.state_code.call(null, self__.app, "g15", t3tr0s_slides.slide06.g15, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "] move-down)\n"), t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":position")), " ["), t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))))));
            };
          }(validate__5821__auto__, ufv___27992, output_schema27980_27993, input_schema27981_27994, input_checker27982_27995, output_checker27983_27996);
          t3tr0s_slides.slide06.t27989.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___27992, output_schema27980_27993, input_schema27981_27994, input_checker27982_27995, output_checker27983_27996) {
            return function(_27991) {
              var self__ = this;
              var _27991__$1 = this;
              return self__.meta27990;
            };
          }(validate__5821__auto__, ufv___27992, output_schema27980_27993, input_schema27981_27994, input_checker27982_27995, output_checker27983_27996);
          t3tr0s_slides.slide06.t27989.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___27992, output_schema27980_27993, input_schema27981_27994, input_checker27982_27995, output_checker27983_27996) {
            return function(_27991, meta27990__$1) {
              var self__ = this;
              var _27991__$1 = this;
              return new t3tr0s_slides.slide06.t27989(self__.owner, self__.output_checker27983, self__.validate__5821__auto__, self__.G__27984, self__.input_schema27981, self__.input_checker27982, self__.G__27985, self__.output_schema27980, self__.app, self__.ufv__, self__.code, meta27990__$1);
            };
          }(validate__5821__auto__, ufv___27992, output_schema27980_27993, input_schema27981_27994, input_checker27982_27995, output_checker27983_27996);
          t3tr0s_slides.slide06.__GT_t27989 = function(validate__5821__auto__, ufv___27992, output_schema27980_27993, input_schema27981_27994, input_checker27982_27995, output_checker27983_27996) {
            return function __GT_t27989(owner__$1, output_checker27983__$1, validate__5821__auto____$1, G__27984__$1, input_schema27981__$1, input_checker27982__$1, G__27985__$1, output_schema27980__$1, app__$1, ufv____$1, code__$1, meta27990) {
              return new t3tr0s_slides.slide06.t27989(owner__$1, output_checker27983__$1, validate__5821__auto____$1, G__27984__$1, input_schema27981__$1, input_checker27982__$1, G__27985__$1, output_schema27980__$1, app__$1, ufv____$1, code__$1, meta27990);
            };
          }(validate__5821__auto__, ufv___27992, output_schema27980_27993, input_schema27981_27994, input_checker27982_27995, output_checker27983_27996);
        }
        return new t3tr0s_slides.slide06.t27989(owner, output_checker27983_27996, validate__5821__auto__, G__27984, input_schema27981_27994, input_checker27982_27995, G__27985, output_schema27980_27993, app, ufv___27992, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___28000 = output_checker27983_27996.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___28000)) {
        var error__5823__auto___28001 = temp__4126__auto___28000;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___28001)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema27980_27993, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___28001], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___27992, output_schema27980_27993, input_schema27981_27994, input_checker27982_27995, output_checker27983_27996);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide06.code), schema.core.make_fn_schema.call(null, output_schema27980_27993, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema27981_27994], null)));
t3tr0s_slides.slide06.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide06.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m27979) {
    return om.core.build.call(null, t3tr0s_slides.slide06.code, cursor__9685__auto__, m27979);
  };
  __GT_code = function(cursor__9685__auto__, m27979) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m27979);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide06.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide06.rows);
t3tr0s_slides.slide06.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__28002, is_center) {
  var vec__28004 = p__28002;
  var x = cljs.core.nth.call(null, vec__28004, 0, null);
  var y = cljs.core.nth.call(null, vec__28004, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide06.cell_size * x;
  var ry = t3tr0s_slides.slide06.cell_size * y;
  var rs = t3tr0s_slides.slide06.cell_size;
  var cx = t3tr0s_slides.slide06.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide06.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide06.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide06.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__28011 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide06.piece_abs_coords.call(null, piece, pos)));
  var chunk__28012 = null;
  var count__28013 = 0;
  var i__28014 = 0;
  while (true) {
    if (i__28014 < count__28013) {
      var vec__28015 = cljs.core._nth.call(null, chunk__28012, i__28014);
      var i = cljs.core.nth.call(null, vec__28015, 0, null);
      var c = cljs.core.nth.call(null, vec__28015, 1, null);
      t3tr0s_slides.slide06.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__28017 = seq__28011;
      var G__28018 = chunk__28012;
      var G__28019 = count__28013;
      var G__28020 = i__28014 + 1;
      seq__28011 = G__28017;
      chunk__28012 = G__28018;
      count__28013 = G__28019;
      i__28014 = G__28020;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__28011);
      if (temp__4126__auto__) {
        var seq__28011__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__28011__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__28011__$1);
          var G__28021 = cljs.core.chunk_rest.call(null, seq__28011__$1);
          var G__28022 = c__4309__auto__;
          var G__28023 = cljs.core.count.call(null, c__4309__auto__);
          var G__28024 = 0;
          seq__28011 = G__28021;
          chunk__28012 = G__28022;
          count__28013 = G__28023;
          i__28014 = G__28024;
          continue;
        } else {
          var vec__28016 = cljs.core.first.call(null, seq__28011__$1);
          var i = cljs.core.nth.call(null, vec__28016, 0, null);
          var c = cljs.core.nth.call(null, vec__28016, 1, null);
          t3tr0s_slides.slide06.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__28025 = cljs.core.next.call(null, seq__28011__$1);
          var G__28026 = null;
          var G__28027 = 0;
          var G__28028 = 0;
          seq__28011 = G__28025;
          chunk__28012 = G__28026;
          count__28013 = G__28027;
          i__28014 = G__28028;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide06.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide06.cell_size * t3tr0s_slides.slide06.cols, t3tr0s_slides.slide06.cell_size * t3tr0s_slides.slide06.rows);
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    var places_28045 = t3tr0s_slides.slide06.state_places.call(null, app);
    ctx.fillStyle = "#555";
    ctx.strokeStyle = "#AAA";
    var seq__28037_28046 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, cljs.core.take.call(null, places_28045, t3tr0s_slides.slide06.states)));
    var chunk__28038_28047 = null;
    var count__28039_28048 = 0;
    var i__28040_28049 = 0;
    while (true) {
      if (i__28040_28049 < count__28039_28048) {
        var vec__28041_28050 = cljs.core._nth.call(null, chunk__28038_28047, i__28040_28049);
        var i_28051 = cljs.core.nth.call(null, vec__28041_28050, 0, null);
        var map__28042_28052 = cljs.core.nth.call(null, vec__28041_28050, 1, null);
        var map__28042_28053__$1 = cljs.core.seq_QMARK_.call(null, map__28042_28052) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28042_28052) : map__28042_28052;
        var position_28054 = cljs.core.get.call(null, map__28042_28053__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
        var piece_28055__$1 = cljs.core.get.call(null, map__28042_28053__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
        var x_28056 = 7;
        ctx.globalAlpha = function() {
          var x__3860__auto__ = 0;
          var y__3861__auto__ = function() {
            var x__3867__auto__ = x_28056;
            var y__3868__auto__ = i_28051 - (places_28045 - x_28056);
            return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
          }();
          return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
        }() / x_28056 / 5;
        t3tr0s_slides.slide06.draw_piece_BANG_.call(null, ctx, piece_28055__$1, position_28054);
        var G__28057 = seq__28037_28046;
        var G__28058 = chunk__28038_28047;
        var G__28059 = count__28039_28048;
        var G__28060 = i__28040_28049 + 1;
        seq__28037_28046 = G__28057;
        chunk__28038_28047 = G__28058;
        count__28039_28048 = G__28059;
        i__28040_28049 = G__28060;
        continue;
      } else {
        var temp__4126__auto___28061 = cljs.core.seq.call(null, seq__28037_28046);
        if (temp__4126__auto___28061) {
          var seq__28037_28062__$1 = temp__4126__auto___28061;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28037_28062__$1)) {
            var c__4309__auto___28063 = cljs.core.chunk_first.call(null, seq__28037_28062__$1);
            var G__28064 = cljs.core.chunk_rest.call(null, seq__28037_28062__$1);
            var G__28065 = c__4309__auto___28063;
            var G__28066 = cljs.core.count.call(null, c__4309__auto___28063);
            var G__28067 = 0;
            seq__28037_28046 = G__28064;
            chunk__28038_28047 = G__28065;
            count__28039_28048 = G__28066;
            i__28040_28049 = G__28067;
            continue;
          } else {
            var vec__28043_28068 = cljs.core.first.call(null, seq__28037_28062__$1);
            var i_28069 = cljs.core.nth.call(null, vec__28043_28068, 0, null);
            var map__28044_28070 = cljs.core.nth.call(null, vec__28043_28068, 1, null);
            var map__28044_28071__$1 = cljs.core.seq_QMARK_.call(null, map__28044_28070) ? cljs.core.apply.call(null, cljs.core.hash_map, map__28044_28070) : map__28044_28070;
            var position_28072 = cljs.core.get.call(null, map__28044_28071__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
            var piece_28073__$1 = cljs.core.get.call(null, map__28044_28071__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
            var x_28074 = 7;
            ctx.globalAlpha = function() {
              var x__3860__auto__ = 0;
              var y__3861__auto__ = function() {
                var x__3867__auto__ = x_28074;
                var y__3868__auto__ = i_28069 - (places_28045 - x_28074);
                return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
              }();
              return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
            }() / x_28074 / 5;
            t3tr0s_slides.slide06.draw_piece_BANG_.call(null, ctx, piece_28073__$1, position_28072);
            var G__28075 = cljs.core.next.call(null, seq__28037_28062__$1);
            var G__28076 = null;
            var G__28077 = 0;
            var G__28078 = 0;
            seq__28037_28046 = G__28075;
            chunk__28038_28047 = G__28076;
            count__28039_28048 = G__28077;
            i__28040_28049 = G__28078;
            continue;
          }
        } else {
        }
      }
      break;
    }
    ctx.globalAlpha = 1;
    ctx.fillStyle = t3tr0s_slides.slide06.dark_purple;
    ctx.strokeStyle = t3tr0s_slides.slide06.light_purple;
    return t3tr0s_slides.slide06.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
var ufv___28096 = schema.utils.use_fn_validation;
var output_schema28080_28097 = schema.core.Any;
var input_schema28081_28098 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker28082_28099 = schema.core.checker.call(null, input_schema28081_28098);
var output_checker28083_28100 = schema.core.checker.call(null, output_schema28080_28097);
t3tr0s_slides.slide06.canvas = function(ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100) {
  return function canvas(G__28084, G__28085) {
    var validate__5821__auto__ = ufv___28096.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___28101 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__28084, G__28085], null);
      var temp__4126__auto___28102 = input_checker28082_28099.call(null, args__5822__auto___28101);
      if (cljs.core.truth_(temp__4126__auto___28102)) {
        var error__5823__auto___28103 = temp__4126__auto___28102;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___28103)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema28081_28098, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___28101, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___28103], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__28084;
      var owner = G__28085;
      while (true) {
        if (typeof t3tr0s_slides.slide06.t28091 !== "undefined") {
        } else {
          t3tr0s_slides.slide06.t28091 = function(output_checker28083, output_schema28080, owner, input_checker28082, input_schema28081, validate__5821__auto__, canvas, G__28084, app, G__28085, ufv__, meta28092) {
            this.output_checker28083 = output_checker28083;
            this.output_schema28080 = output_schema28080;
            this.owner = owner;
            this.input_checker28082 = input_checker28082;
            this.input_schema28081 = input_schema28081;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.canvas = canvas;
            this.G__28084 = G__28084;
            this.app = app;
            this.G__28085 = G__28085;
            this.ufv__ = ufv__;
            this.meta28092 = meta28092;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide06.t28091.cljs$lang$type = true;
          t3tr0s_slides.slide06.t28091.cljs$lang$ctorStr = "t3tr0s-slides.slide06/t28091";
          t3tr0s_slides.slide06.t28091.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide06/t28091");
            };
          }(validate__5821__auto__, ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100);
          t3tr0s_slides.slide06.t28091.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide06.t28091.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100);
          t3tr0s_slides.slide06.t28091.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide06.t28091.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide06.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100);
          t3tr0s_slides.slide06.t28091.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide06.t28091.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide06.cols * t3tr0s_slides.slide06.cell_size;
              canvas__$2.height = t3tr0s_slides.slide06.rows * t3tr0s_slides.slide06.cell_size;
              return t3tr0s_slides.slide06.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100);
          t3tr0s_slides.slide06.t28091.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100) {
            return function(_28093) {
              var self__ = this;
              var _28093__$1 = this;
              return self__.meta28092;
            };
          }(validate__5821__auto__, ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100);
          t3tr0s_slides.slide06.t28091.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100) {
            return function(_28093, meta28092__$1) {
              var self__ = this;
              var _28093__$1 = this;
              return new t3tr0s_slides.slide06.t28091(self__.output_checker28083, self__.output_schema28080, self__.owner, self__.input_checker28082, self__.input_schema28081, self__.validate__5821__auto__, self__.canvas, self__.G__28084, self__.app, self__.G__28085, self__.ufv__, meta28092__$1);
            };
          }(validate__5821__auto__, ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100);
          t3tr0s_slides.slide06.__GT_t28091 = function(validate__5821__auto__, ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100) {
            return function __GT_t28091(output_checker28083__$1, output_schema28080__$1, owner__$1, input_checker28082__$1, input_schema28081__$1, validate__5821__auto____$1, canvas__$1, G__28084__$1, app__$1, G__28085__$1, ufv____$1, meta28092) {
              return new t3tr0s_slides.slide06.t28091(output_checker28083__$1, output_schema28080__$1, owner__$1, input_checker28082__$1, input_schema28081__$1, validate__5821__auto____$1, canvas__$1, G__28084__$1, app__$1, G__28085__$1, ufv____$1, meta28092);
            };
          }(validate__5821__auto__, ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100);
        }
        return new t3tr0s_slides.slide06.t28091(output_checker28083_28100, output_schema28080_28097, owner, input_checker28082_28099, input_schema28081_28098, validate__5821__auto__, canvas, G__28084, app, G__28085, ufv___28096, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___28104 = output_checker28083_28100.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___28104)) {
        var error__5823__auto___28105 = temp__4126__auto___28104;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___28105)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema28080_28097, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___28105], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___28096, output_schema28080_28097, input_schema28081_28098, input_checker28082_28099, output_checker28083_28100);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide06.canvas), schema.core.make_fn_schema.call(null, output_schema28080_28097, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema28081_28098], null)));
t3tr0s_slides.slide06.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide06.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m28079) {
    return om.core.build.call(null, t3tr0s_slides.slide06.canvas, cursor__9685__auto__, m28079);
  };
  __GT_canvas = function(cursor__9685__auto__, m28079) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m28079);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___28123 = schema.utils.use_fn_validation;
var output_schema28107_28124 = schema.core.Any;
var input_schema28108_28125 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker28109_28126 = schema.core.checker.call(null, input_schema28108_28125);
var output_checker28110_28127 = schema.core.checker.call(null, output_schema28107_28124);
t3tr0s_slides.slide06.slide = function(ufv___28123, output_schema28107_28124, input_schema28108_28125, input_checker28109_28126, output_checker28110_28127) {
  return function slide(G__28111, G__28112) {
    var validate__5821__auto__ = ufv___28123.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___28128 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__28111, G__28112], null);
      var temp__4126__auto___28129 = input_checker28109_28126.call(null, args__5822__auto___28128);
      if (cljs.core.truth_(temp__4126__auto___28129)) {
        var error__5823__auto___28130 = temp__4126__auto___28129;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___28130)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema28108_28125, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___28128, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___28130], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__28111;
      var owner = G__28112;
      while (true) {
        if (typeof t3tr0s_slides.slide06.t28118 !== "undefined") {
        } else {
          t3tr0s_slides.slide06.t28118 = function(owner, output_schema28107, validate__5821__auto__, G__28111, input_schema28108, input_checker28109, G__28112, slide, app, output_checker28110, ufv__, meta28119) {
            this.owner = owner;
            this.output_schema28107 = output_schema28107;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__28111 = G__28111;
            this.input_schema28108 = input_schema28108;
            this.input_checker28109 = input_checker28109;
            this.G__28112 = G__28112;
            this.slide = slide;
            this.app = app;
            this.output_checker28110 = output_checker28110;
            this.ufv__ = ufv__;
            this.meta28119 = meta28119;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide06.t28118.cljs$lang$type = true;
          t3tr0s_slides.slide06.t28118.cljs$lang$ctorStr = "t3tr0s-slides.slide06/t28118";
          t3tr0s_slides.slide06.t28118.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___28123, output_schema28107_28124, input_schema28108_28125, input_checker28109_28126, output_checker28110_28127) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide06/t28118");
            };
          }(validate__5821__auto__, ufv___28123, output_schema28107_28124, input_schema28108_28125, input_checker28109_28126, output_checker28110_28127);
          t3tr0s_slides.slide06.t28118.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide06.t28118.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___28123, output_schema28107_28124, input_schema28108_28125, input_checker28109_28126, output_checker28110_28127) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "6. Store the state."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide06.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide06.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___28123, output_schema28107_28124, input_schema28108_28125, input_checker28109_28126, output_checker28110_28127);
          t3tr0s_slides.slide06.t28118.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___28123, output_schema28107_28124, input_schema28108_28125, input_checker28109_28126, output_checker28110_28127) {
            return function(_28120) {
              var self__ = this;
              var _28120__$1 = this;
              return self__.meta28119;
            };
          }(validate__5821__auto__, ufv___28123, output_schema28107_28124, input_schema28108_28125, input_checker28109_28126, output_checker28110_28127);
          t3tr0s_slides.slide06.t28118.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___28123, output_schema28107_28124, input_schema28108_28125, input_checker28109_28126, output_checker28110_28127) {
            return function(_28120, meta28119__$1) {
              var self__ = this;
              var _28120__$1 = this;
              return new t3tr0s_slides.slide06.t28118(self__.owner, self__.output_schema28107, self__.validate__5821__auto__, self__.G__28111, self__.input_schema28108, self__.input_checker28109, self__.G__28112, self__.slide, self__.app, self__.output_checker28110, self__.ufv__, meta28119__$1);
            };
          }(validate__5821__auto__, ufv___28123, output_schema28107_28124, input_schema28108_28125, input_checker28109_28126, output_checker28110_28127);
          t3tr0s_slides.slide06.__GT_t28118 = function(validate__5821__auto__, ufv___28123, output_schema28107_28124, input_schema28108_28125, input_checker28109_28126, output_checker28110_28127) {
            return function __GT_t28118(owner__$1, output_schema28107__$1, validate__5821__auto____$1, G__28111__$1, input_schema28108__$1, input_checker28109__$1, G__28112__$1, slide__$1, app__$1, output_checker28110__$1, ufv____$1, meta28119) {
              return new t3tr0s_slides.slide06.t28118(owner__$1, output_schema28107__$1, validate__5821__auto____$1, G__28111__$1, input_schema28108__$1, input_checker28109__$1, G__28112__$1, slide__$1, app__$1, output_checker28110__$1, ufv____$1, meta28119);
            };
          }(validate__5821__auto__, ufv___28123, output_schema28107_28124, input_schema28108_28125, input_checker28109_28126, output_checker28110_28127);
        }
        return new t3tr0s_slides.slide06.t28118(owner, output_schema28107_28124, validate__5821__auto__, G__28111, input_schema28108_28125, input_checker28109_28126, G__28112, slide, app, output_checker28110_28127, ufv___28123, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___28131 = output_checker28110_28127.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___28131)) {
        var error__5823__auto___28132 = temp__4126__auto___28131;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___28132)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema28107_28124, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___28132], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___28123, output_schema28107_28124, input_schema28108_28125, input_checker28109_28126, output_checker28110_28127);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide06.slide), schema.core.make_fn_schema.call(null, output_schema28107_28124, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema28108_28125], null)));
t3tr0s_slides.slide06.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide06.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m28106) {
    return om.core.build.call(null, t3tr0s_slides.slide06.slide, cursor__9685__auto__, m28106);
  };
  __GT_slide = function(cursor__9685__auto__, m28106) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m28106);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide06.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide06.slide, t3tr0s_slides.slide06.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide06.resume = function resume() {
  return null;
};
t3tr0s_slides.slide06.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide13");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide13.dark_green = "#143";
t3tr0s_slides.slide13.light_green = "#175";
t3tr0s_slides.slide13.dark_purple = "#449";
t3tr0s_slides.slide13.light_purple = "#6ad";
t3tr0s_slides.slide13.dark_red = "#944";
t3tr0s_slides.slide13.light_red = "#f8c";
t3tr0s_slides.slide13.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide13.rotate_coord = function rotate_coord(p__31647) {
  var vec__31649 = p__31647;
  var x = cljs.core.nth.call(null, vec__31649, 0, null);
  var y = cljs.core.nth.call(null, vec__31649, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide13.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide13.rotate_coord, piece);
};
t3tr0s_slides.slide13.rows = 20;
t3tr0s_slides.slide13.cols = 10;
t3tr0s_slides.slide13.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide13.cols, 0));
t3tr0s_slides.slide13.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide13.rows, t3tr0s_slides.slide13.empty_row));
t3tr0s_slides.slide13.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 1, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 1, 1, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 1, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 1, 1, 1], null)], null);
t3tr0s_slides.slide13.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [5, 2], null);
t3tr0s_slides.slide13.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide13.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), t3tr0s_slides.slide13.rotate_piece.call(null, (new cljs.core.Keyword(null, "I", "I", 1827140963)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide13.pieces)), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide13.initial_pos], 
null));
t3tr0s_slides.slide13.write_piece = function write_piece(board, coords, p__31650, value) {
  while (true) {
    var vec__31654 = p__31650;
    var cx = cljs.core.nth.call(null, vec__31654, 0, null);
    var cy = cljs.core.nth.call(null, vec__31654, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__31655 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__31655, 0, null);
      var y = cljs.core.nth.call(null, vec__31655, 1, null);
      var G__31657 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), value);
        } catch (e31656) {
          if (e31656 instanceof Error) {
            var _ = e31656;
            return board;
          } else {
            throw e31656;
          }
        }
      }();
      var G__31658 = cljs.core.rest.call(null, coords);
      var G__31659 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      var G__31660 = value;
      board = G__31657;
      coords = G__31658;
      p__31650 = G__31659;
      value = G__31660;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide13.create_drawable_board = function create_drawable_board(board, piece, p__31661) {
  var vec__31663 = p__31661;
  var x = cljs.core.nth.call(null, vec__31663, 0, null);
  var y = cljs.core.nth.call(null, vec__31663, 1, null);
  var gy = t3tr0s_slides.slide13.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  var board1 = t3tr0s_slides.slide13.write_piece.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, gy], null), "G");
  var board2 = t3tr0s_slides.slide13.write_piece.call(null, board1, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null), "P");
  return board2;
};
t3tr0s_slides.slide13.app_drawable_board_BANG_ = function app_drawable_board_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  return t3tr0s_slides.slide13.create_drawable_board.call(null, board, piece, pos);
};
t3tr0s_slides.slide13.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__31665 = cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state);
  var map__31665__$1 = cljs.core.seq_QMARK_.call(null, map__31665) ? cljs.core.apply.call(null, cljs.core.hash_map, map__31665) : map__31665;
  var position = cljs.core.get.call(null, map__31665__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__31665__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide13.write_piece, piece, position, 1);
};
t3tr0s_slides.slide13.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__31666) {
  var vec__31670 = p__31666;
  var cx = cljs.core.nth.call(null, vec__31670, 0, null);
  var cy = cljs.core.nth.call(null, vec__31670, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__31670, cx, cy) {
    return function(p__31671) {
      var vec__31672 = p__31671;
      var x = cljs.core.nth.call(null, vec__31672, 0, null);
      var y = cljs.core.nth.call(null, vec__31672, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__31670, cx, cy), piece);
};
t3tr0s_slides.slide13.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide13.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide13.app_state))));
};
t3tr0s_slides.slide13.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var vec__31674 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var x = cljs.core.nth.call(null, vec__31674, 0, null);
  var y = cljs.core.nth.call(null, vec__31674, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide13.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide13.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var new_piece = t3tr0s_slides.slide13.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide13.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide13.get_drop_pos = function get_drop_pos(board, piece, p__31675) {
  var vec__31677 = p__31675;
  var x = cljs.core.nth.call(null, vec__31677, 0, null);
  var y = cljs.core.nth.call(null, vec__31677, 1, null);
  var collide_QMARK_ = function(vec__31677, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide13.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__31677, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide13.filled_rows = function filled_rows(board) {
  return cljs.core.apply.call(null, cljs.core.hash_set, cljs.core.map.call(null, cljs.core.first, cljs.core.filter.call(null, function(p__31680) {
    var vec__31681 = p__31680;
    var i = cljs.core.nth.call(null, vec__31681, 0, null);
    var row = cljs.core.nth.call(null, vec__31681, 1, null);
    return cljs.core.every_QMARK_.call(null, cljs.core.pos_QMARK_, row);
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board))));
};
t3tr0s_slides.slide13.collapse_rows = function collapse_rows(board, rows) {
  var cleared_board = cljs.core.map.call(null, cljs.core.second, cljs.core.remove.call(null, function(p1__31682_SHARP_) {
    return rows.call(null, cljs.core.first.call(null, p1__31682_SHARP_));
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board)));
  var n = cljs.core.count.call(null, rows);
  var new_board = cljs.core.into.call(null, cljs.core.vec.call(null, cljs.core.repeat.call(null, n, t3tr0s_slides.slide13.empty_row)), cleared_board);
  return new_board;
};
t3tr0s_slides.slide13.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var vec__31684 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var x = cljs.core.nth.call(null, vec__31684, 0, null);
  var y = cljs.core.nth.call(null, vec__31684, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  var ny = t3tr0s_slides.slide13.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  t3tr0s_slides.slide13.lock_piece_BANG_.call(null);
  var board__$1 = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide13.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide13.collapse_rows.call(null, board__$1, t3tr0s_slides.slide13.filled_rows.call(null, board__$1)), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide13.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide13.pieces)));
};
t3tr0s_slides.slide13.data_row = function data_row(board, row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__31689(s__31690) {
      return new cljs.core.LazySeq(null, function() {
        var s__31690__$1 = s__31690;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__31690__$1);
          if (temp__4126__auto__) {
            var s__31690__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__31690__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__31690__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__31692 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__31691 = 0;
                while (true) {
                  if (i__31691 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__31691);
                    cljs.core.chunk_append.call(null, b__31692, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null))));
                    var G__31693 = i__31691 + 1;
                    i__31691 = G__31693;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31692), iter__31689.call(null, cljs.core.chunk_rest.call(null, s__31690__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31692), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__31690__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null))), iter__31689.call(null, cljs.core.rest.call(null, s__31690__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide13.cols));
  }(), " ]"], null);
};
var ufv___31709 = schema.utils.use_fn_validation;
var output_schema31695_31710 = schema.core.Any;
var input_schema31696_31711 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker31697_31712 = schema.core.checker.call(null, input_schema31696_31711);
var output_checker31698_31713 = schema.core.checker.call(null, output_schema31695_31710);
t3tr0s_slides.slide13.code = function(ufv___31709, output_schema31695_31710, input_schema31696_31711, input_checker31697_31712, output_checker31698_31713) {
  return function code(G__31699, G__31700) {
    var validate__5821__auto__ = ufv___31709.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___31714 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__31699, G__31700], null);
      var temp__4126__auto___31715 = input_checker31697_31712.call(null, args__5822__auto___31714);
      if (cljs.core.truth_(temp__4126__auto___31715)) {
        var error__5823__auto___31716 = temp__4126__auto___31715;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___31716)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema31696_31711, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___31714, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___31716], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__31699;
      var owner = G__31700;
      while (true) {
        if (typeof t3tr0s_slides.slide13.t31705 !== "undefined") {
        } else {
          t3tr0s_slides.slide13.t31705 = function(input_schema31696, G__31700, owner, validate__5821__auto__, input_checker31697, output_checker31698, G__31699, output_schema31695, app, ufv__, code, meta31706) {
            this.input_schema31696 = input_schema31696;
            this.G__31700 = G__31700;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker31697 = input_checker31697;
            this.output_checker31698 = output_checker31698;
            this.G__31699 = G__31699;
            this.output_schema31695 = output_schema31695;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta31706 = meta31706;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide13.t31705.cljs$lang$type = true;
          t3tr0s_slides.slide13.t31705.cljs$lang$ctorStr = "t3tr0s-slides.slide13/t31705";
          t3tr0s_slides.slide13.t31705.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___31709, output_schema31695_31710, input_schema31696_31711, input_checker31697_31712, output_checker31698_31713) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide13/t31705");
            };
          }(validate__5821__auto__, ufv___31709, output_schema31695_31710, input_schema31696_31711, input_checker31697_31712, output_checker31698_31713);
          t3tr0s_slides.slide13.t31705.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide13.t31705.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___31709, output_schema31695_31710, input_schema31696_31711, input_checker31697_31712, output_checker31698_31713) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs31708 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: press space to hard-drop.");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs31708) ? sablono.interpreter.attributes.call(null, attrs31708) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs31708) ? cljs.core.PersistentVector.fromArray(["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
                ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " collapse-rows\n", "  [board]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [filled? (filled-rows board)\n", "        cleared (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "-\x3e\x3e")), " board\n", "                     (", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "map-indexed")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vector")), ")\n", "                     (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "remove")), " #(filled? (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), " %)))\n", "                     (map ", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "second")), "))\n", "        n (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "count")), " filled?)]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "into")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vec")), " (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "repeat")), " n empty-row)) cleared)))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "update-in")), " [", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), "] collapse-rows)\n", "\n\n"], true) : cljs.core.PersistentVector.fromArray([sablono.interpreter.interpret.call(null, 
                attrs31708), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " collapse-rows\n", "  [board]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "let")), " [filled? (filled-rows board)\n", "        cleared (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "-\x3e\x3e")), " board\n", "                     (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "map-indexed")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vector")), ")\n", "                     (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "remove")), " #(filled? (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), " %)))\n", "                     (map ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "second")), "))\n", "        n (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "count")), " filled?)]\n", "    (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "into")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vec")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "repeat")), " n empty-row)) cleared)))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "update-in")), " [", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), "] collapse-rows)\n", "\n\n"], true)));
              }()));
            };
          }(validate__5821__auto__, ufv___31709, output_schema31695_31710, input_schema31696_31711, input_checker31697_31712, output_checker31698_31713);
          t3tr0s_slides.slide13.t31705.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___31709, output_schema31695_31710, input_schema31696_31711, input_checker31697_31712, output_checker31698_31713) {
            return function(_31707) {
              var self__ = this;
              var _31707__$1 = this;
              return self__.meta31706;
            };
          }(validate__5821__auto__, ufv___31709, output_schema31695_31710, input_schema31696_31711, input_checker31697_31712, output_checker31698_31713);
          t3tr0s_slides.slide13.t31705.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___31709, output_schema31695_31710, input_schema31696_31711, input_checker31697_31712, output_checker31698_31713) {
            return function(_31707, meta31706__$1) {
              var self__ = this;
              var _31707__$1 = this;
              return new t3tr0s_slides.slide13.t31705(self__.input_schema31696, self__.G__31700, self__.owner, self__.validate__5821__auto__, self__.input_checker31697, self__.output_checker31698, self__.G__31699, self__.output_schema31695, self__.app, self__.ufv__, self__.code, meta31706__$1);
            };
          }(validate__5821__auto__, ufv___31709, output_schema31695_31710, input_schema31696_31711, input_checker31697_31712, output_checker31698_31713);
          t3tr0s_slides.slide13.__GT_t31705 = function(validate__5821__auto__, ufv___31709, output_schema31695_31710, input_schema31696_31711, input_checker31697_31712, output_checker31698_31713) {
            return function __GT_t31705(input_schema31696__$1, G__31700__$1, owner__$1, validate__5821__auto____$1, input_checker31697__$1, output_checker31698__$1, G__31699__$1, output_schema31695__$1, app__$1, ufv____$1, code__$1, meta31706) {
              return new t3tr0s_slides.slide13.t31705(input_schema31696__$1, G__31700__$1, owner__$1, validate__5821__auto____$1, input_checker31697__$1, output_checker31698__$1, G__31699__$1, output_schema31695__$1, app__$1, ufv____$1, code__$1, meta31706);
            };
          }(validate__5821__auto__, ufv___31709, output_schema31695_31710, input_schema31696_31711, input_checker31697_31712, output_checker31698_31713);
        }
        return new t3tr0s_slides.slide13.t31705(input_schema31696_31711, G__31700, owner, validate__5821__auto__, input_checker31697_31712, output_checker31698_31713, G__31699, output_schema31695_31710, app, ufv___31709, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___31717 = output_checker31698_31713.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___31717)) {
        var error__5823__auto___31718 = temp__4126__auto___31717;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___31718)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema31695_31710, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___31718], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___31709, output_schema31695_31710, input_schema31696_31711, input_checker31697_31712, output_checker31698_31713);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide13.code), schema.core.make_fn_schema.call(null, output_schema31695_31710, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema31696_31711], null)));
t3tr0s_slides.slide13.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide13.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m31694) {
    return om.core.build.call(null, t3tr0s_slides.slide13.code, cursor__9685__auto__, m31694);
  };
  __GT_code = function(cursor__9685__auto__, m31694) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m31694);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide13.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide13.rows);
t3tr0s_slides.slide13.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__31719, is_center) {
  var vec__31721 = p__31719;
  var x = cljs.core.nth.call(null, vec__31721, 0, null);
  var y = cljs.core.nth.call(null, vec__31721, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide13.cell_size * x;
  var ry = t3tr0s_slides.slide13.cell_size * y;
  var rs = t3tr0s_slides.slide13.cell_size;
  var cx = t3tr0s_slides.slide13.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide13.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide13.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide13.piece_abs_coords = function piece_abs_coords(piece, p__31722) {
  var vec__31726 = p__31722;
  var cx = cljs.core.nth.call(null, vec__31726, 0, null);
  var cy = cljs.core.nth.call(null, vec__31726, 1, null);
  return cljs.core.mapv.call(null, function(vec__31726, cx, cy) {
    return function(p__31727) {
      var vec__31728 = p__31727;
      var x = cljs.core.nth.call(null, vec__31728, 0, null);
      var y = cljs.core.nth.call(null, vec__31728, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__31726, cx, cy), piece);
};
t3tr0s_slides.slide13.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__31735 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide13.piece_abs_coords.call(null, piece, pos)));
  var chunk__31736 = null;
  var count__31737 = 0;
  var i__31738 = 0;
  while (true) {
    if (i__31738 < count__31737) {
      var vec__31739 = cljs.core._nth.call(null, chunk__31736, i__31738);
      var i = cljs.core.nth.call(null, vec__31739, 0, null);
      var c = cljs.core.nth.call(null, vec__31739, 1, null);
      t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__31741 = seq__31735;
      var G__31742 = chunk__31736;
      var G__31743 = count__31737;
      var G__31744 = i__31738 + 1;
      seq__31735 = G__31741;
      chunk__31736 = G__31742;
      count__31737 = G__31743;
      i__31738 = G__31744;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__31735);
      if (temp__4126__auto__) {
        var seq__31735__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__31735__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__31735__$1);
          var G__31745 = cljs.core.chunk_rest.call(null, seq__31735__$1);
          var G__31746 = c__4309__auto__;
          var G__31747 = cljs.core.count.call(null, c__4309__auto__);
          var G__31748 = 0;
          seq__31735 = G__31745;
          chunk__31736 = G__31746;
          count__31737 = G__31747;
          i__31738 = G__31748;
          continue;
        } else {
          var vec__31740 = cljs.core.first.call(null, seq__31735__$1);
          var i = cljs.core.nth.call(null, vec__31740, 0, null);
          var c = cljs.core.nth.call(null, vec__31740, 1, null);
          t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__31749 = cljs.core.next.call(null, seq__31735__$1);
          var G__31750 = null;
          var G__31751 = 0;
          var G__31752 = 0;
          seq__31735 = G__31749;
          chunk__31736 = G__31750;
          count__31737 = G__31751;
          i__31738 = G__31752;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide13.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var filled_QMARK_ = t3tr0s_slides.slide13.filled_rows.call(null, board);
  var seq__31765 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide13.rows));
  var chunk__31770 = null;
  var count__31771 = 0;
  var i__31772 = 0;
  while (true) {
    if (i__31772 < count__31771) {
      var y = cljs.core._nth.call(null, chunk__31770, i__31772);
      var seq__31773_31777 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide13.cols));
      var chunk__31774_31778 = null;
      var count__31775_31779 = 0;
      var i__31776_31780 = 0;
      while (true) {
        if (i__31776_31780 < count__31775_31779) {
          var x_31781 = cljs.core._nth.call(null, chunk__31774_31778, i__31776_31780);
          ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
          var v_31782 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_31781], null));
          if (v_31782 === 0) {
          } else {
            t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_31781, y], null), false);
          }
          var G__31783 = seq__31773_31777;
          var G__31784 = chunk__31774_31778;
          var G__31785 = count__31775_31779;
          var G__31786 = i__31776_31780 + 1;
          seq__31773_31777 = G__31783;
          chunk__31774_31778 = G__31784;
          count__31775_31779 = G__31785;
          i__31776_31780 = G__31786;
          continue;
        } else {
          var temp__4126__auto___31787 = cljs.core.seq.call(null, seq__31773_31777);
          if (temp__4126__auto___31787) {
            var seq__31773_31788__$1 = temp__4126__auto___31787;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__31773_31788__$1)) {
              var c__4309__auto___31789 = cljs.core.chunk_first.call(null, seq__31773_31788__$1);
              var G__31790 = cljs.core.chunk_rest.call(null, seq__31773_31788__$1);
              var G__31791 = c__4309__auto___31789;
              var G__31792 = cljs.core.count.call(null, c__4309__auto___31789);
              var G__31793 = 0;
              seq__31773_31777 = G__31790;
              chunk__31774_31778 = G__31791;
              count__31775_31779 = G__31792;
              i__31776_31780 = G__31793;
              continue;
            } else {
              var x_31794 = cljs.core.first.call(null, seq__31773_31788__$1);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
              var v_31795 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_31794], null));
              if (v_31795 === 0) {
              } else {
                t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_31794, y], null), false);
              }
              var G__31796 = cljs.core.next.call(null, seq__31773_31788__$1);
              var G__31797 = null;
              var G__31798 = 0;
              var G__31799 = 0;
              seq__31773_31777 = G__31796;
              chunk__31774_31778 = G__31797;
              count__31775_31779 = G__31798;
              i__31776_31780 = G__31799;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__31800 = seq__31765;
      var G__31801 = chunk__31770;
      var G__31802 = count__31771;
      var G__31803 = i__31772 + 1;
      seq__31765 = G__31800;
      chunk__31770 = G__31801;
      count__31771 = G__31802;
      i__31772 = G__31803;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__31765);
      if (temp__4126__auto__) {
        var seq__31765__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__31765__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__31765__$1);
          var G__31804 = cljs.core.chunk_rest.call(null, seq__31765__$1);
          var G__31805 = c__4309__auto__;
          var G__31806 = cljs.core.count.call(null, c__4309__auto__);
          var G__31807 = 0;
          seq__31765 = G__31804;
          chunk__31770 = G__31805;
          count__31771 = G__31806;
          i__31772 = G__31807;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__31765__$1);
          var seq__31766_31808 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide13.cols));
          var chunk__31767_31809 = null;
          var count__31768_31810 = 0;
          var i__31769_31811 = 0;
          while (true) {
            if (i__31769_31811 < count__31768_31810) {
              var x_31812 = cljs.core._nth.call(null, chunk__31767_31809, i__31769_31811);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
              var v_31813 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_31812], null));
              if (v_31813 === 0) {
              } else {
                t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_31812, y], null), false);
              }
              var G__31814 = seq__31766_31808;
              var G__31815 = chunk__31767_31809;
              var G__31816 = count__31768_31810;
              var G__31817 = i__31769_31811 + 1;
              seq__31766_31808 = G__31814;
              chunk__31767_31809 = G__31815;
              count__31768_31810 = G__31816;
              i__31769_31811 = G__31817;
              continue;
            } else {
              var temp__4126__auto___31818__$1 = cljs.core.seq.call(null, seq__31766_31808);
              if (temp__4126__auto___31818__$1) {
                var seq__31766_31819__$1 = temp__4126__auto___31818__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__31766_31819__$1)) {
                  var c__4309__auto___31820 = cljs.core.chunk_first.call(null, seq__31766_31819__$1);
                  var G__31821 = cljs.core.chunk_rest.call(null, seq__31766_31819__$1);
                  var G__31822 = c__4309__auto___31820;
                  var G__31823 = cljs.core.count.call(null, c__4309__auto___31820);
                  var G__31824 = 0;
                  seq__31766_31808 = G__31821;
                  chunk__31767_31809 = G__31822;
                  count__31768_31810 = G__31823;
                  i__31769_31811 = G__31824;
                  continue;
                } else {
                  var x_31825 = cljs.core.first.call(null, seq__31766_31819__$1);
                  ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
                  var v_31826 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_31825], null));
                  if (v_31826 === 0) {
                  } else {
                    t3tr0s_slides.slide13.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_31825, y], null), false);
                  }
                  var G__31827 = cljs.core.next.call(null, seq__31766_31819__$1);
                  var G__31828 = null;
                  var G__31829 = 0;
                  var G__31830 = 0;
                  seq__31766_31808 = G__31827;
                  chunk__31767_31809 = G__31828;
                  count__31768_31810 = G__31829;
                  i__31769_31811 = G__31830;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__31831 = cljs.core.next.call(null, seq__31765__$1);
          var G__31832 = null;
          var G__31833 = 0;
          var G__31834 = 0;
          seq__31765 = G__31831;
          chunk__31770 = G__31832;
          count__31771 = G__31833;
          i__31772 = G__31834;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide13.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide13.cell_size * t3tr0s_slides.slide13.cols, t3tr0s_slides.slide13.cell_size * t3tr0s_slides.slide13.rows);
  ctx.fillStyle = t3tr0s_slides.slide13.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide13.light_green;
  t3tr0s_slides.slide13.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  ctx.globalAlpha = 1;
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var drop_y = t3tr0s_slides.slide13.get_drop_pos.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide13.app_state)), piece, pos);
  var drop_pos = cljs.core.assoc.call(null, pos, 1, drop_y);
  var fits = t3tr0s_slides.slide13.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = "#333";
    ctx.strokeStyle = "#666";
    t3tr0s_slides.slide13.draw_piece_BANG_.call(null, ctx, piece, drop_pos);
    ctx.fillStyle = fits ? t3tr0s_slides.slide13.dark_purple : t3tr0s_slides.slide13.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide13.light_purple : t3tr0s_slides.slide13.light_red;
    return t3tr0s_slides.slide13.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide13.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide13.key_name = function key_name(p1__31835_SHARP_) {
  return t3tr0s_slides.slide13.key_names.call(null, p1__31835_SHARP_.keyCode);
};
t3tr0s_slides.slide13.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide13.key_name.call(null, e);
  var G__31837_31838 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__31837_31838) {
    case "space":
      t3tr0s_slides.slide13.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide13.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide13.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide13.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___31857 = schema.utils.use_fn_validation;
var output_schema31841_31858 = schema.core.Any;
var input_schema31842_31859 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker31843_31860 = schema.core.checker.call(null, input_schema31842_31859);
var output_checker31844_31861 = schema.core.checker.call(null, output_schema31841_31858);
t3tr0s_slides.slide13.canvas = function(ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861) {
  return function canvas(G__31845, G__31846) {
    var validate__5821__auto__ = ufv___31857.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___31862 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__31845, G__31846], null);
      var temp__4126__auto___31863 = input_checker31843_31860.call(null, args__5822__auto___31862);
      if (cljs.core.truth_(temp__4126__auto___31863)) {
        var error__5823__auto___31864 = temp__4126__auto___31863;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___31864)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema31842_31859, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___31862, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___31864], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__31845;
      var owner = G__31846;
      while (true) {
        if (typeof t3tr0s_slides.slide13.t31852 !== "undefined") {
        } else {
          t3tr0s_slides.slide13.t31852 = function(owner, input_schema31842, validate__5821__auto__, input_checker31843, G__31846, output_schema31841, canvas, G__31845, app, ufv__, output_checker31844, meta31853) {
            this.owner = owner;
            this.input_schema31842 = input_schema31842;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker31843 = input_checker31843;
            this.G__31846 = G__31846;
            this.output_schema31841 = output_schema31841;
            this.canvas = canvas;
            this.G__31845 = G__31845;
            this.app = app;
            this.ufv__ = ufv__;
            this.output_checker31844 = output_checker31844;
            this.meta31853 = meta31853;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide13.t31852.cljs$lang$type = true;
          t3tr0s_slides.slide13.t31852.cljs$lang$ctorStr = "t3tr0s-slides.slide13/t31852";
          t3tr0s_slides.slide13.t31852.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide13/t31852");
            };
          }(validate__5821__auto__, ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861);
          t3tr0s_slides.slide13.t31852.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide13.t31852.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861);
          t3tr0s_slides.slide13.t31852.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide13.t31852.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide13.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861);
          t3tr0s_slides.slide13.t31852.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide13.t31852.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide13.cols * t3tr0s_slides.slide13.cell_size;
              canvas__$2.height = t3tr0s_slides.slide13.rows * t3tr0s_slides.slide13.cell_size;
              return t3tr0s_slides.slide13.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861);
          t3tr0s_slides.slide13.t31852.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861) {
            return function(_31854) {
              var self__ = this;
              var _31854__$1 = this;
              return self__.meta31853;
            };
          }(validate__5821__auto__, ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861);
          t3tr0s_slides.slide13.t31852.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861) {
            return function(_31854, meta31853__$1) {
              var self__ = this;
              var _31854__$1 = this;
              return new t3tr0s_slides.slide13.t31852(self__.owner, self__.input_schema31842, self__.validate__5821__auto__, self__.input_checker31843, self__.G__31846, self__.output_schema31841, self__.canvas, self__.G__31845, self__.app, self__.ufv__, self__.output_checker31844, meta31853__$1);
            };
          }(validate__5821__auto__, ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861);
          t3tr0s_slides.slide13.__GT_t31852 = function(validate__5821__auto__, ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861) {
            return function __GT_t31852(owner__$1, input_schema31842__$1, validate__5821__auto____$1, input_checker31843__$1, G__31846__$1, output_schema31841__$1, canvas__$1, G__31845__$1, app__$1, ufv____$1, output_checker31844__$1, meta31853) {
              return new t3tr0s_slides.slide13.t31852(owner__$1, input_schema31842__$1, validate__5821__auto____$1, input_checker31843__$1, G__31846__$1, output_schema31841__$1, canvas__$1, G__31845__$1, app__$1, ufv____$1, output_checker31844__$1, meta31853);
            };
          }(validate__5821__auto__, ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861);
        }
        return new t3tr0s_slides.slide13.t31852(owner, input_schema31842_31859, validate__5821__auto__, input_checker31843_31860, G__31846, output_schema31841_31858, canvas, G__31845, app, ufv___31857, output_checker31844_31861, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___31865 = output_checker31844_31861.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___31865)) {
        var error__5823__auto___31866 = temp__4126__auto___31865;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___31866)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema31841_31858, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___31866], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___31857, output_schema31841_31858, input_schema31842_31859, input_checker31843_31860, output_checker31844_31861);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide13.canvas), schema.core.make_fn_schema.call(null, output_schema31841_31858, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema31842_31859], null)));
t3tr0s_slides.slide13.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide13.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m31840) {
    return om.core.build.call(null, t3tr0s_slides.slide13.canvas, cursor__9685__auto__, m31840);
  };
  __GT_canvas = function(cursor__9685__auto__, m31840) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m31840);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___31884 = schema.utils.use_fn_validation;
var output_schema31868_31885 = schema.core.Any;
var input_schema31869_31886 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker31870_31887 = schema.core.checker.call(null, input_schema31869_31886);
var output_checker31871_31888 = schema.core.checker.call(null, output_schema31868_31885);
t3tr0s_slides.slide13.slide = function(ufv___31884, output_schema31868_31885, input_schema31869_31886, input_checker31870_31887, output_checker31871_31888) {
  return function slide(G__31872, G__31873) {
    var validate__5821__auto__ = ufv___31884.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___31889 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__31872, G__31873], null);
      var temp__4126__auto___31890 = input_checker31870_31887.call(null, args__5822__auto___31889);
      if (cljs.core.truth_(temp__4126__auto___31890)) {
        var error__5823__auto___31891 = temp__4126__auto___31890;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___31891)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema31869_31886, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___31889, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___31891], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__31872;
      var owner = G__31873;
      while (true) {
        if (typeof t3tr0s_slides.slide13.t31879 !== "undefined") {
        } else {
          t3tr0s_slides.slide13.t31879 = function(owner, input_checker31870, validate__5821__auto__, G__31873, output_schema31868, input_schema31869, output_checker31871, G__31872, slide, app, ufv__, meta31880) {
            this.owner = owner;
            this.input_checker31870 = input_checker31870;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__31873 = G__31873;
            this.output_schema31868 = output_schema31868;
            this.input_schema31869 = input_schema31869;
            this.output_checker31871 = output_checker31871;
            this.G__31872 = G__31872;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta31880 = meta31880;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide13.t31879.cljs$lang$type = true;
          t3tr0s_slides.slide13.t31879.cljs$lang$ctorStr = "t3tr0s-slides.slide13/t31879";
          t3tr0s_slides.slide13.t31879.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___31884, output_schema31868_31885, input_schema31869_31886, input_checker31870_31887, output_checker31871_31888) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide13/t31879");
            };
          }(validate__5821__auto__, ufv___31884, output_schema31868_31885, input_schema31869_31886, input_checker31870_31887, output_checker31871_31888);
          t3tr0s_slides.slide13.t31879.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide13.t31879.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___31884, output_schema31868_31885, input_schema31869_31886, input_checker31870_31887, output_checker31871_31888) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "13. Collapse rows."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide13.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide13.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___31884, output_schema31868_31885, input_schema31869_31886, input_checker31870_31887, output_checker31871_31888);
          t3tr0s_slides.slide13.t31879.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___31884, output_schema31868_31885, input_schema31869_31886, input_checker31870_31887, output_checker31871_31888) {
            return function(_31881) {
              var self__ = this;
              var _31881__$1 = this;
              return self__.meta31880;
            };
          }(validate__5821__auto__, ufv___31884, output_schema31868_31885, input_schema31869_31886, input_checker31870_31887, output_checker31871_31888);
          t3tr0s_slides.slide13.t31879.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___31884, output_schema31868_31885, input_schema31869_31886, input_checker31870_31887, output_checker31871_31888) {
            return function(_31881, meta31880__$1) {
              var self__ = this;
              var _31881__$1 = this;
              return new t3tr0s_slides.slide13.t31879(self__.owner, self__.input_checker31870, self__.validate__5821__auto__, self__.G__31873, self__.output_schema31868, self__.input_schema31869, self__.output_checker31871, self__.G__31872, self__.slide, self__.app, self__.ufv__, meta31880__$1);
            };
          }(validate__5821__auto__, ufv___31884, output_schema31868_31885, input_schema31869_31886, input_checker31870_31887, output_checker31871_31888);
          t3tr0s_slides.slide13.__GT_t31879 = function(validate__5821__auto__, ufv___31884, output_schema31868_31885, input_schema31869_31886, input_checker31870_31887, output_checker31871_31888) {
            return function __GT_t31879(owner__$1, input_checker31870__$1, validate__5821__auto____$1, G__31873__$1, output_schema31868__$1, input_schema31869__$1, output_checker31871__$1, G__31872__$1, slide__$1, app__$1, ufv____$1, meta31880) {
              return new t3tr0s_slides.slide13.t31879(owner__$1, input_checker31870__$1, validate__5821__auto____$1, G__31873__$1, output_schema31868__$1, input_schema31869__$1, output_checker31871__$1, G__31872__$1, slide__$1, app__$1, ufv____$1, meta31880);
            };
          }(validate__5821__auto__, ufv___31884, output_schema31868_31885, input_schema31869_31886, input_checker31870_31887, output_checker31871_31888);
        }
        return new t3tr0s_slides.slide13.t31879(owner, input_checker31870_31887, validate__5821__auto__, G__31873, output_schema31868_31885, input_schema31869_31886, output_checker31871_31888, G__31872, slide, app, ufv___31884, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___31892 = output_checker31871_31888.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___31892)) {
        var error__5823__auto___31893 = temp__4126__auto___31892;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___31893)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema31868_31885, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___31893], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___31884, output_schema31868_31885, input_schema31869_31886, input_checker31870_31887, output_checker31871_31888);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide13.slide), schema.core.make_fn_schema.call(null, output_schema31868_31885, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema31869_31886], null)));
t3tr0s_slides.slide13.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide13.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m31867) {
    return om.core.build.call(null, t3tr0s_slides.slide13.slide, cursor__9685__auto__, m31867);
  };
  __GT_slide = function(cursor__9685__auto__, m31867) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m31867);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide13.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide13.slide, t3tr0s_slides.slide13.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide13.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide13.key_down);
};
t3tr0s_slides.slide13.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide13.key_down);
};
goog.provide("t3tr0s_slides.slide03");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide03.dark_green = "#143";
t3tr0s_slides.slide03.light_green = "#175";
t3tr0s_slides.slide03.dark_purple = "#449";
t3tr0s_slides.slide03.light_purple = "#6ad";
t3tr0s_slides.slide03.next_piece = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.Keyword(null, 
"L", "L", -1038307519), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.Keyword(null, "I", "I", 1827140963)], null);
t3tr0s_slides.slide03.piece_keys = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.Keyword(null, "Z", "Z", 459124588)], null);
t3tr0s_slides.slide03.positions = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 1], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 4], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[4, 7], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 10], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 13], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 16], null), new cljs.core.Keyword(null, "Z", "Z", 
459124588), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 19], null)], null);
t3tr0s_slides.slide03.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide03.piece_abs_coords = function piece_abs_coords(piece, p__28858) {
  var vec__28862 = p__28858;
  var cx = cljs.core.nth.call(null, vec__28862, 0, null);
  var cy = cljs.core.nth.call(null, vec__28862, 1, null);
  return cljs.core.mapv.call(null, function(vec__28862, cx, cy) {
    return function(p__28863) {
      var vec__28864 = p__28863;
      var x = cljs.core.nth.call(null, vec__28864, 0, null);
      var y = cljs.core.nth.call(null, vec__28864, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__28862, cx, cy), t3tr0s_slides.slide03.pieces.call(null, piece));
};
t3tr0s_slides.slide03.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide03.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide03.initial_pos, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), null], null));
t3tr0s_slides.slide03.rows = 20;
t3tr0s_slides.slide03.cols = 10;
t3tr0s_slides.slide03.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide03.cols, 0));
t3tr0s_slides.slide03.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide03.rows, t3tr0s_slides.slide03.empty_row));
t3tr0s_slides.slide03.piece_code = function piece_code(app) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "highlight", "highlight", -800930873)).cljs$core$IFn$_invoke$arity$1(app), new cljs.core.Keyword(null, "piece", "piece", 1396691784)) ? "clickable-ae1bb" : "", new cljs.core.Keyword(null, "onMouseEnter", 
  "onMouseEnter", -1535281844), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  }, new cljs.core.Keyword(null, "onMouseLeave", "onMouseLeave", 1446726903), function() {
    return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), null);
  }, new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function() {
    return om.core.transact_BANG_.call(null, app, new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835), t3tr0s_slides.slide03.next_piece);
  }], null), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " pieces)"), t3tr0s_slides.syntax_highlight.kw.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835)).cljs$core$IFn$_invoke$arity$1(app)))), "(")], null);
};
t3tr0s_slides.slide03.full_piece = function full_piece(piece) {
  var pad = function(p1__28865_SHARP_) {
    if (p1__28865_SHARP_ < 0) {
      return p1__28865_SHARP_;
    } else {
      return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__28865_SHARP_);
    }
  };
  var fmt = function(pad) {
    return function(p1__28866_SHARP_) {
      return t3tr0s_slides.syntax_highlight.lit.call(null, pad.call(null, p1__28866_SHARP_));
    };
  }(pad);
  var fmt_coord = function(pad, fmt) {
    return function(p__28869) {
      var vec__28870 = p__28869;
      var x = cljs.core.nth.call(null, vec__28870, 0, null);
      var y = cljs.core.nth.call(null, vec__28870, 1, null);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), fmt.call(null, y)), " "), fmt.call(null, x)), "[");
    };
  }(pad, fmt);
  return cljs.core.interpose.call(null, " ", cljs.core.map.call(null, fmt_coord, piece));
};
t3tr0s_slides.slide03.position_code = function position_code(app) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "highlight", "highlight", -800930873)).cljs$core$IFn$_invoke$arity$1(app), new cljs.core.Keyword(null, "position", "position", -2011731912)) ? "active-col-d9099" : ""], null), function() {
    var vec__28872 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
    var x = cljs.core.nth.call(null, vec__28872, 0, null);
    var y = cljs.core.nth.call(null, vec__28872, 1, null);
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), t3tr0s_slides.syntax_highlight.lit.call(null, y)), " "), t3tr0s_slides.syntax_highlight.lit.call(null, x)), "[");
  }()], null);
};
var ufv___28886 = schema.utils.use_fn_validation;
var output_schema28874_28887 = schema.core.Any;
var input_schema28875_28888 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker28876_28889 = schema.core.checker.call(null, input_schema28875_28888);
var output_checker28877_28890 = schema.core.checker.call(null, output_schema28874_28887);
t3tr0s_slides.slide03.code = function(ufv___28886, output_schema28874_28887, input_schema28875_28888, input_checker28876_28889, output_checker28877_28890) {
  return function code(G__28878, G__28879) {
    var validate__5821__auto__ = ufv___28886.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___28891 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__28878, G__28879], null);
      var temp__4126__auto___28892 = input_checker28876_28889.call(null, args__5822__auto___28891);
      if (cljs.core.truth_(temp__4126__auto___28892)) {
        var error__5823__auto___28893 = temp__4126__auto___28892;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___28893)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema28875_28888, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___28891, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___28893], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__28878;
      var owner = G__28879;
      while (true) {
        if (typeof t3tr0s_slides.slide03.t28883 !== "undefined") {
        } else {
          t3tr0s_slides.slide03.t28883 = function(G__28879, owner, input_schema28875, output_schema28874, validate__5821__auto__, input_checker28876, output_checker28877, app, ufv__, code, G__28878, meta28884) {
            this.G__28879 = G__28879;
            this.owner = owner;
            this.input_schema28875 = input_schema28875;
            this.output_schema28874 = output_schema28874;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker28876 = input_checker28876;
            this.output_checker28877 = output_checker28877;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.G__28878 = G__28878;
            this.meta28884 = meta28884;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide03.t28883.cljs$lang$type = true;
          t3tr0s_slides.slide03.t28883.cljs$lang$ctorStr = "t3tr0s-slides.slide03/t28883";
          t3tr0s_slides.slide03.t28883.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___28886, output_schema28874_28887, input_schema28875_28888, input_checker28876_28889, output_checker28877_28890) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide03/t28883");
            };
          }(validate__5821__auto__, ufv___28886, output_schema28874_28887, input_schema28875_28888, input_checker28876_28889, output_checker28877_28890);
          t3tr0s_slides.slide03.t28883.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide03.t28883.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___28886, output_schema28874_28887, input_schema28875_28888, input_checker28876_28889, output_checker28877_28890) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "def")), " initial-state {", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " empty-board\n", "                    ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.lit.call(null, "nil")), "\n", "                    ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "nil")), "})\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: click piece below to change,")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
              "; and mouse over the canvas to move.")), "\n", "\n", "\x3e (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " initial-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide03.piece_code.call(null, self__.app)), "\n", "                       ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
              ":position")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide03.position_code.call(null, self__.app)), ")\n", "\n", "  {", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " ", React.DOM.span({"className":cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "highlight", "highlight", -800930873)).cljs$core$IFn$_invoke$arity$1(self__.app), new cljs.core.Keyword(null, "piece", "piece", 1396691784)) ? "active-col-d9099" : 
              ""}, sablono.interpreter.interpret.call(null, t3tr0s_slides.slide03.full_piece.call(null, t3tr0s_slides.slide03.pieces.call(null, (new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835)).cljs$core$IFn$_invoke$arity$1(self__.app))))), "\n", "   ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide03.position_code.call(null, self__.app)), "\n", "   ", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " [[ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", 
              "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]\n", "           [ 0 0 0 0 0 0 0 0 0 0 ]]}\n")));
            };
          }(validate__5821__auto__, ufv___28886, output_schema28874_28887, input_schema28875_28888, input_checker28876_28889, output_checker28877_28890);
          t3tr0s_slides.slide03.t28883.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___28886, output_schema28874_28887, input_schema28875_28888, input_checker28876_28889, output_checker28877_28890) {
            return function(_28885) {
              var self__ = this;
              var _28885__$1 = this;
              return self__.meta28884;
            };
          }(validate__5821__auto__, ufv___28886, output_schema28874_28887, input_schema28875_28888, input_checker28876_28889, output_checker28877_28890);
          t3tr0s_slides.slide03.t28883.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___28886, output_schema28874_28887, input_schema28875_28888, input_checker28876_28889, output_checker28877_28890) {
            return function(_28885, meta28884__$1) {
              var self__ = this;
              var _28885__$1 = this;
              return new t3tr0s_slides.slide03.t28883(self__.G__28879, self__.owner, self__.input_schema28875, self__.output_schema28874, self__.validate__5821__auto__, self__.input_checker28876, self__.output_checker28877, self__.app, self__.ufv__, self__.code, self__.G__28878, meta28884__$1);
            };
          }(validate__5821__auto__, ufv___28886, output_schema28874_28887, input_schema28875_28888, input_checker28876_28889, output_checker28877_28890);
          t3tr0s_slides.slide03.__GT_t28883 = function(validate__5821__auto__, ufv___28886, output_schema28874_28887, input_schema28875_28888, input_checker28876_28889, output_checker28877_28890) {
            return function __GT_t28883(G__28879__$1, owner__$1, input_schema28875__$1, output_schema28874__$1, validate__5821__auto____$1, input_checker28876__$1, output_checker28877__$1, app__$1, ufv____$1, code__$1, G__28878__$1, meta28884) {
              return new t3tr0s_slides.slide03.t28883(G__28879__$1, owner__$1, input_schema28875__$1, output_schema28874__$1, validate__5821__auto____$1, input_checker28876__$1, output_checker28877__$1, app__$1, ufv____$1, code__$1, G__28878__$1, meta28884);
            };
          }(validate__5821__auto__, ufv___28886, output_schema28874_28887, input_schema28875_28888, input_checker28876_28889, output_checker28877_28890);
        }
        return new t3tr0s_slides.slide03.t28883(G__28879, owner, input_schema28875_28888, output_schema28874_28887, validate__5821__auto__, input_checker28876_28889, output_checker28877_28890, app, ufv___28886, code, G__28878, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___28894 = output_checker28877_28890.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___28894)) {
        var error__5823__auto___28895 = temp__4126__auto___28894;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___28895)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema28874_28887, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___28895], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___28886, output_schema28874_28887, input_schema28875_28888, input_checker28876_28889, output_checker28877_28890);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide03.code), schema.core.make_fn_schema.call(null, output_schema28874_28887, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema28875_28888], null)));
t3tr0s_slides.slide03.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide03.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m28873) {
    return om.core.build.call(null, t3tr0s_slides.slide03.code, cursor__9685__auto__, m28873);
  };
  __GT_code = function(cursor__9685__auto__, m28873) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m28873);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide03.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide03.rows);
t3tr0s_slides.slide03.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide03.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide03.cell_size);
  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [col, row], null));
};
t3tr0s_slides.slide03.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__28896, is_center) {
  var vec__28898 = p__28896;
  var x = cljs.core.nth.call(null, vec__28898, 0, null);
  var y = cljs.core.nth.call(null, vec__28898, 1, null);
  ctx.fillStyle = t3tr0s_slides.slide03.dark_purple;
  ctx.strokeStyle = t3tr0s_slides.slide03.light_purple;
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide03.cell_size * x;
  var ry = t3tr0s_slides.slide03.cell_size * y;
  var rs = t3tr0s_slides.slide03.cell_size;
  var cx = t3tr0s_slides.slide03.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide03.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide03.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide03.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__28905 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide03.piece_abs_coords.call(null, piece, pos)));
  var chunk__28906 = null;
  var count__28907 = 0;
  var i__28908 = 0;
  while (true) {
    if (i__28908 < count__28907) {
      var vec__28909 = cljs.core._nth.call(null, chunk__28906, i__28908);
      var i = cljs.core.nth.call(null, vec__28909, 0, null);
      var c = cljs.core.nth.call(null, vec__28909, 1, null);
      t3tr0s_slides.slide03.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__28911 = seq__28905;
      var G__28912 = chunk__28906;
      var G__28913 = count__28907;
      var G__28914 = i__28908 + 1;
      seq__28905 = G__28911;
      chunk__28906 = G__28912;
      count__28907 = G__28913;
      i__28908 = G__28914;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__28905);
      if (temp__4126__auto__) {
        var seq__28905__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__28905__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__28905__$1);
          var G__28915 = cljs.core.chunk_rest.call(null, seq__28905__$1);
          var G__28916 = c__4309__auto__;
          var G__28917 = cljs.core.count.call(null, c__4309__auto__);
          var G__28918 = 0;
          seq__28905 = G__28915;
          chunk__28906 = G__28916;
          count__28907 = G__28917;
          i__28908 = G__28918;
          continue;
        } else {
          var vec__28910 = cljs.core.first.call(null, seq__28905__$1);
          var i = cljs.core.nth.call(null, vec__28910, 0, null);
          var c = cljs.core.nth.call(null, vec__28910, 1, null);
          t3tr0s_slides.slide03.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__28919 = cljs.core.next.call(null, seq__28905__$1);
          var G__28920 = null;
          var G__28921 = 0;
          var G__28922 = 0;
          seq__28905 = G__28919;
          chunk__28906 = G__28920;
          count__28907 = G__28921;
          i__28908 = G__28922;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide03.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide03.cell_size * t3tr0s_slides.slide03.cols, t3tr0s_slides.slide03.cell_size * t3tr0s_slides.slide03.rows);
  return t3tr0s_slides.slide03.draw_piece_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "piece-name", "piece-name", 1239945835)).cljs$core$IFn$_invoke$arity$1(app), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app));
};
var ufv___28937 = schema.utils.use_fn_validation;
var output_schema28925_28938 = schema.core.Any;
var input_schema28926_28939 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker28927_28940 = schema.core.checker.call(null, input_schema28926_28939);
var output_checker28928_28941 = schema.core.checker.call(null, output_schema28925_28938);
t3tr0s_slides.slide03.canvas = function(ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941) {
  return function canvas(G__28929, G__28930) {
    var validate__5821__auto__ = ufv___28937.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___28942 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__28929, G__28930], null);
      var temp__4126__auto___28943 = input_checker28927_28940.call(null, args__5822__auto___28942);
      if (cljs.core.truth_(temp__4126__auto___28943)) {
        var error__5823__auto___28944 = temp__4126__auto___28943;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___28944)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema28926_28939, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___28942, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___28944], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__28929;
      var owner = G__28930;
      while (true) {
        if (typeof t3tr0s_slides.slide03.t28934 !== "undefined") {
        } else {
          t3tr0s_slides.slide03.t28934 = function(owner, output_schema28925, input_checker28927, validate__5821__auto__, G__28929, output_checker28928, canvas, app, ufv__, G__28930, input_schema28926, meta28935) {
            this.owner = owner;
            this.output_schema28925 = output_schema28925;
            this.input_checker28927 = input_checker28927;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__28929 = G__28929;
            this.output_checker28928 = output_checker28928;
            this.canvas = canvas;
            this.app = app;
            this.ufv__ = ufv__;
            this.G__28930 = G__28930;
            this.input_schema28926 = input_schema28926;
            this.meta28935 = meta28935;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide03.t28934.cljs$lang$type = true;
          t3tr0s_slides.slide03.t28934.cljs$lang$ctorStr = "t3tr0s-slides.slide03/t28934";
          t3tr0s_slides.slide03.t28934.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide03/t28934");
            };
          }(validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941);
          t3tr0s_slides.slide03.t28934.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide03.t28934.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseMove":function(___$1, validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941) {
                return function(p1__28923_SHARP_) {
                  t3tr0s_slides.slide03.canvas_mouse.call(null, self__.app, self__.owner, p1__28923_SHARP_);
                  return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), new cljs.core.Keyword(null, "position", "position", -2011731912));
                };
              }(___$1, validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941), "onMouseLeave":function(___$1, validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941) {
                return function() {
                  om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide03.initial_pos);
                  return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "highlight", "highlight", -800930873), null);
                };
              }(___$1, validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941)}));
            };
          }(validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941);
          t3tr0s_slides.slide03.t28934.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide03.t28934.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide03.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941);
          t3tr0s_slides.slide03.t28934.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide03.t28934.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide03.cols * t3tr0s_slides.slide03.cell_size;
              canvas__$2.height = t3tr0s_slides.slide03.rows * t3tr0s_slides.slide03.cell_size;
              return t3tr0s_slides.slide03.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941);
          t3tr0s_slides.slide03.t28934.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941) {
            return function(_28936) {
              var self__ = this;
              var _28936__$1 = this;
              return self__.meta28935;
            };
          }(validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941);
          t3tr0s_slides.slide03.t28934.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941) {
            return function(_28936, meta28935__$1) {
              var self__ = this;
              var _28936__$1 = this;
              return new t3tr0s_slides.slide03.t28934(self__.owner, self__.output_schema28925, self__.input_checker28927, self__.validate__5821__auto__, self__.G__28929, self__.output_checker28928, self__.canvas, self__.app, self__.ufv__, self__.G__28930, self__.input_schema28926, meta28935__$1);
            };
          }(validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941);
          t3tr0s_slides.slide03.__GT_t28934 = function(validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941) {
            return function __GT_t28934(owner__$1, output_schema28925__$1, input_checker28927__$1, validate__5821__auto____$1, G__28929__$1, output_checker28928__$1, canvas__$1, app__$1, ufv____$1, G__28930__$1, input_schema28926__$1, meta28935) {
              return new t3tr0s_slides.slide03.t28934(owner__$1, output_schema28925__$1, input_checker28927__$1, validate__5821__auto____$1, G__28929__$1, output_checker28928__$1, canvas__$1, app__$1, ufv____$1, G__28930__$1, input_schema28926__$1, meta28935);
            };
          }(validate__5821__auto__, ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941);
        }
        return new t3tr0s_slides.slide03.t28934(owner, output_schema28925_28938, input_checker28927_28940, validate__5821__auto__, G__28929, output_checker28928_28941, canvas, app, ufv___28937, G__28930, input_schema28926_28939, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___28945 = output_checker28928_28941.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___28945)) {
        var error__5823__auto___28946 = temp__4126__auto___28945;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___28946)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema28925_28938, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___28946], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___28937, output_schema28925_28938, input_schema28926_28939, input_checker28927_28940, output_checker28928_28941);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide03.canvas), schema.core.make_fn_schema.call(null, output_schema28925_28938, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema28926_28939], null)));
t3tr0s_slides.slide03.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide03.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m28924) {
    return om.core.build.call(null, t3tr0s_slides.slide03.canvas, cursor__9685__auto__, m28924);
  };
  __GT_canvas = function(cursor__9685__auto__, m28924) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m28924);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___28964 = schema.utils.use_fn_validation;
var output_schema28948_28965 = schema.core.Any;
var input_schema28949_28966 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker28950_28967 = schema.core.checker.call(null, input_schema28949_28966);
var output_checker28951_28968 = schema.core.checker.call(null, output_schema28948_28965);
t3tr0s_slides.slide03.slide = function(ufv___28964, output_schema28948_28965, input_schema28949_28966, input_checker28950_28967, output_checker28951_28968) {
  return function slide(G__28952, G__28953) {
    var validate__5821__auto__ = ufv___28964.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___28969 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__28952, G__28953], null);
      var temp__4126__auto___28970 = input_checker28950_28967.call(null, args__5822__auto___28969);
      if (cljs.core.truth_(temp__4126__auto___28970)) {
        var error__5823__auto___28971 = temp__4126__auto___28970;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___28971)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema28949_28966, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___28969, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___28971], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__28952;
      var owner = G__28953;
      while (true) {
        if (typeof t3tr0s_slides.slide03.t28959 !== "undefined") {
        } else {
          t3tr0s_slides.slide03.t28959 = function(owner, output_checker28951, validate__5821__auto__, G__28953, input_checker28950, G__28952, slide, app, ufv__, input_schema28949, output_schema28948, meta28960) {
            this.owner = owner;
            this.output_checker28951 = output_checker28951;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__28953 = G__28953;
            this.input_checker28950 = input_checker28950;
            this.G__28952 = G__28952;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_schema28949 = input_schema28949;
            this.output_schema28948 = output_schema28948;
            this.meta28960 = meta28960;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide03.t28959.cljs$lang$type = true;
          t3tr0s_slides.slide03.t28959.cljs$lang$ctorStr = "t3tr0s-slides.slide03/t28959";
          t3tr0s_slides.slide03.t28959.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___28964, output_schema28948_28965, input_schema28949_28966, input_checker28950_28967, output_checker28951_28968) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide03/t28959");
            };
          }(validate__5821__auto__, ufv___28964, output_schema28948_28965, input_schema28949_28966, input_checker28950_28967, output_checker28951_28968);
          t3tr0s_slides.slide03.t28959.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide03.t28959.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___28964, output_schema28948_28965, input_schema28949_28966, input_checker28950_28967, output_checker28951_28968) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "3. Create initial state."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide03.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide03.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___28964, output_schema28948_28965, input_schema28949_28966, input_checker28950_28967, output_checker28951_28968);
          t3tr0s_slides.slide03.t28959.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___28964, output_schema28948_28965, input_schema28949_28966, input_checker28950_28967, output_checker28951_28968) {
            return function(_28961) {
              var self__ = this;
              var _28961__$1 = this;
              return self__.meta28960;
            };
          }(validate__5821__auto__, ufv___28964, output_schema28948_28965, input_schema28949_28966, input_checker28950_28967, output_checker28951_28968);
          t3tr0s_slides.slide03.t28959.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___28964, output_schema28948_28965, input_schema28949_28966, input_checker28950_28967, output_checker28951_28968) {
            return function(_28961, meta28960__$1) {
              var self__ = this;
              var _28961__$1 = this;
              return new t3tr0s_slides.slide03.t28959(self__.owner, self__.output_checker28951, self__.validate__5821__auto__, self__.G__28953, self__.input_checker28950, self__.G__28952, self__.slide, self__.app, self__.ufv__, self__.input_schema28949, self__.output_schema28948, meta28960__$1);
            };
          }(validate__5821__auto__, ufv___28964, output_schema28948_28965, input_schema28949_28966, input_checker28950_28967, output_checker28951_28968);
          t3tr0s_slides.slide03.__GT_t28959 = function(validate__5821__auto__, ufv___28964, output_schema28948_28965, input_schema28949_28966, input_checker28950_28967, output_checker28951_28968) {
            return function __GT_t28959(owner__$1, output_checker28951__$1, validate__5821__auto____$1, G__28953__$1, input_checker28950__$1, G__28952__$1, slide__$1, app__$1, ufv____$1, input_schema28949__$1, output_schema28948__$1, meta28960) {
              return new t3tr0s_slides.slide03.t28959(owner__$1, output_checker28951__$1, validate__5821__auto____$1, G__28953__$1, input_checker28950__$1, G__28952__$1, slide__$1, app__$1, ufv____$1, input_schema28949__$1, output_schema28948__$1, meta28960);
            };
          }(validate__5821__auto__, ufv___28964, output_schema28948_28965, input_schema28949_28966, input_checker28950_28967, output_checker28951_28968);
        }
        return new t3tr0s_slides.slide03.t28959(owner, output_checker28951_28968, validate__5821__auto__, G__28953, input_checker28950_28967, G__28952, slide, app, ufv___28964, input_schema28949_28966, output_schema28948_28965, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___28972 = output_checker28951_28968.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___28972)) {
        var error__5823__auto___28973 = temp__4126__auto___28972;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___28973)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema28948_28965, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___28973], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___28964, output_schema28948_28965, input_schema28949_28966, input_checker28950_28967, output_checker28951_28968);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide03.slide), schema.core.make_fn_schema.call(null, output_schema28948_28965, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema28949_28966], null)));
t3tr0s_slides.slide03.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide03.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m28947) {
    return om.core.build.call(null, t3tr0s_slides.slide03.slide, cursor__9685__auto__, m28947);
  };
  __GT_slide = function(cursor__9685__auto__, m28947) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m28947);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide03.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide03.slide, t3tr0s_slides.slide03.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide03.resume = function resume() {
  return null;
};
t3tr0s_slides.slide03.stop = function stop() {
  return null;
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__24348 = level + 1;
        level = G__24348;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_24349 = 0;
    while (true) {
      if (i_24349 < arr.length) {
        arr[i_24349] = null;
        var G__24350 = i_24349 + 1;
        i_24349 = G__24350;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__24351 = x_SINGLEQUOTE_;
                x__$1 = G__24351;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__24352 = x__$1;
        var G__24353 = k;
        var G__24354 = level - 1;
        var G__24355 = update;
        x = G__24352;
        k = G__24353;
        level = G__24354;
        update = G__24355;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
  return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_24356 = self__.level + 1;
      while (true) {
        if (i_24356 <= new_level + 1) {
          update[i_24356] = self__.header;
          var G__24357 = i_24356 + 1;
          i_24356 = G__24357;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_24358 = 0;
    while (true) {
      if (i_24358 <= self__.level) {
        var links_24359 = update[i_24358].forward;
        if (links_24359[i_24358] === x__$1) {
          links_24359[i_24358] = x__$1.forward[i_24358];
          var G__24360 = i_24358 + 1;
          i_24358 = G__24360;
          continue;
        } else {
          var G__24361 = i_24358 + 1;
          i_24358 = G__24361;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__24362 = x_SINGLEQUOTE_;
              x__$1 = G__24362;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__24363 = nx;
        var G__24364 = level__$1 - 1;
        x = G__24363;
        level__$1 = G__24364;
        continue;
      } else {
        var G__24365 = x;
        var G__24366 = level__$1 - 1;
        x = G__24365;
        level__$1 = G__24366;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__24367 = x_SINGLEQUOTE_;
              x__$1 = G__24367;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__24368 = nx;
        var G__24369 = level__$1 - 1;
        x = G__24368;
        level__$1 = G__24369;
        continue;
      } else {
        var G__24370 = x;
        var G__24371 = level__$1 - 1;
        x = G__24370;
        level__$1 = G__24371;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3553__auto__ = cljs.core.truth_(function() {
    var and__3541__auto__ = me;
    if (cljs.core.truth_(and__3541__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3541__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3553__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3553__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t21699 !== "undefined") {
  } else {
    cljs.core.async.t21699 = function(f, fn_handler, meta21700) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta21700 = meta21700;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21699.cljs$lang$type = true;
    cljs.core.async.t21699.cljs$lang$ctorStr = "cljs.core.async/t21699";
    cljs.core.async.t21699.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t21699");
    };
    cljs.core.async.t21699.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t21699.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t21699.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t21699.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21701) {
      var self__ = this;
      var _21701__$1 = this;
      return self__.meta21700;
    };
    cljs.core.async.t21699.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21701, meta21700__$1) {
      var self__ = this;
      var _21701__$1 = this;
      return new cljs.core.async.t21699(self__.f, self__.fn_handler, meta21700__$1);
    };
    cljs.core.async.__GT_t21699 = function __GT_t21699(f__$1, fn_handler__$1, meta21700) {
      return new cljs.core.async.t21699(f__$1, fn_handler__$1, meta21700);
    };
  }
  return new cljs.core.async.t21699(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__21703 = buff;
  if (G__21703) {
    var bit__4203__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3553__auto__ = bit__4203__auto__;
      if (cljs.core.truth_(or__3553__auto__)) {
        return or__3553__auto__;
      } else {
        return G__21703.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__21703.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__21703);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__21703);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_21704 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_21704);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_21704, ret) {
          return function() {
            return fn1.call(null, val_21704);
          };
        }(val_21704, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4409__auto___21705 = n;
  var x_21706 = 0;
  while (true) {
    if (x_21706 < n__4409__auto___21705) {
      a[x_21706] = 0;
      var G__21707 = x_21706 + 1;
      x_21706 = G__21707;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__21708 = i + 1;
      i = G__21708;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t21712 !== "undefined") {
  } else {
    cljs.core.async.t21712 = function(flag, alt_flag, meta21713) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta21713 = meta21713;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21712.cljs$lang$type = true;
    cljs.core.async.t21712.cljs$lang$ctorStr = "cljs.core.async/t21712";
    cljs.core.async.t21712.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
        return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t21712");
      };
    }(flag);
    cljs.core.async.t21712.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t21712.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t21712.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t21712.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_21714) {
        var self__ = this;
        var _21714__$1 = this;
        return self__.meta21713;
      };
    }(flag);
    cljs.core.async.t21712.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_21714, meta21713__$1) {
        var self__ = this;
        var _21714__$1 = this;
        return new cljs.core.async.t21712(self__.flag, self__.alt_flag, meta21713__$1);
      };
    }(flag);
    cljs.core.async.__GT_t21712 = function(flag) {
      return function __GT_t21712(flag__$1, alt_flag__$1, meta21713) {
        return new cljs.core.async.t21712(flag__$1, alt_flag__$1, meta21713);
      };
    }(flag);
  }
  return new cljs.core.async.t21712(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t21718 !== "undefined") {
  } else {
    cljs.core.async.t21718 = function(cb, flag, alt_handler, meta21719) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta21719 = meta21719;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21718.cljs$lang$type = true;
    cljs.core.async.t21718.cljs$lang$ctorStr = "cljs.core.async/t21718";
    cljs.core.async.t21718.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t21718");
    };
    cljs.core.async.t21718.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t21718.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t21718.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t21718.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21720) {
      var self__ = this;
      var _21720__$1 = this;
      return self__.meta21719;
    };
    cljs.core.async.t21718.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21720, meta21719__$1) {
      var self__ = this;
      var _21720__$1 = this;
      return new cljs.core.async.t21718(self__.cb, self__.flag, self__.alt_handler, meta21719__$1);
    };
    cljs.core.async.__GT_t21718 = function __GT_t21718(cb__$1, flag__$1, alt_handler__$1, meta21719) {
      return new cljs.core.async.t21718(cb__$1, flag__$1, alt_handler__$1, meta21719);
    };
  }
  return new cljs.core.async.t21718(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__21721_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__21721_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__21722_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__21722_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3553__auto__ = wport;
            if (cljs.core.truth_(or__3553__auto__)) {
              return or__3553__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__21723 = i + 1;
          i = G__21723;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3553__auto__ = ret;
  if (cljs.core.truth_(or__3553__auto__)) {
    return or__3553__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3541__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3541__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3541__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__21724) {
    var map__21726 = p__21724;
    var map__21726__$1 = cljs.core.seq_QMARK_.call(null, map__21726) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21726) : map__21726;
    var opts = map__21726__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__21724 = null;
    if (arguments.length > 1) {
      p__21724 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__21724);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__21727) {
    var ports = cljs.core.first(arglist__21727);
    var p__21724 = cljs.core.rest(arglist__21727);
    return alts_BANG___delegate(ports, p__21724);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t21735 !== "undefined") {
  } else {
    cljs.core.async.t21735 = function(ch, f, map_LT_, meta21736) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta21736 = meta21736;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21735.cljs$lang$type = true;
    cljs.core.async.t21735.cljs$lang$ctorStr = "cljs.core.async/t21735";
    cljs.core.async.t21735.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t21735");
    };
    cljs.core.async.t21735.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t21735.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t21735.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t21735.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t21738 !== "undefined") {
        } else {
          cljs.core.async.t21738 = function(fn1, _, meta21736, ch, f, map_LT_, meta21739) {
            this.fn1 = fn1;
            this._ = _;
            this.meta21736 = meta21736;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta21739 = meta21739;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t21738.cljs$lang$type = true;
          cljs.core.async.t21738.cljs$lang$ctorStr = "cljs.core.async/t21738";
          cljs.core.async.t21738.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t21738");
            };
          }(___$1);
          cljs.core.async.t21738.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t21738.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t21738.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t21738.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$4, ___$1) {
                return function(p1__21728_SHARP_) {
                  return f1.call(null, p1__21728_SHARP_ == null ? null : self__.f.call(null, p1__21728_SHARP_));
                };
              }(f1, ___$4, ___$1);
            };
          }(___$1);
          cljs.core.async.t21738.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_21740) {
              var self__ = this;
              var _21740__$1 = this;
              return self__.meta21739;
            };
          }(___$1);
          cljs.core.async.t21738.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_21740, meta21739__$1) {
              var self__ = this;
              var _21740__$1 = this;
              return new cljs.core.async.t21738(self__.fn1, self__._, self__.meta21736, self__.ch, self__.f, self__.map_LT_, meta21739__$1);
            };
          }(___$1);
          cljs.core.async.__GT_t21738 = function(___$1) {
            return function __GT_t21738(fn1__$1, ___$2, meta21736__$1, ch__$2, f__$2, map_LT___$2, meta21739) {
              return new cljs.core.async.t21738(fn1__$1, ___$2, meta21736__$1, ch__$2, f__$2, map_LT___$2, meta21739);
            };
          }(___$1);
        }
        return new cljs.core.async.t21738(fn1, ___$1, self__.meta21736, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3541__auto__ = ret;
        if (cljs.core.truth_(and__3541__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3541__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t21735.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t21735.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t21735.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t21735.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21737) {
      var self__ = this;
      var _21737__$1 = this;
      return self__.meta21736;
    };
    cljs.core.async.t21735.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21737, meta21736__$1) {
      var self__ = this;
      var _21737__$1 = this;
      return new cljs.core.async.t21735(self__.ch, self__.f, self__.map_LT_, meta21736__$1);
    };
    cljs.core.async.__GT_t21735 = function __GT_t21735(ch__$1, f__$1, map_LT___$1, meta21736) {
      return new cljs.core.async.t21735(ch__$1, f__$1, map_LT___$1, meta21736);
    };
  }
  return new cljs.core.async.t21735(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t21744 !== "undefined") {
  } else {
    cljs.core.async.t21744 = function(ch, f, map_GT_, meta21745) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta21745 = meta21745;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21744.cljs$lang$type = true;
    cljs.core.async.t21744.cljs$lang$ctorStr = "cljs.core.async/t21744";
    cljs.core.async.t21744.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t21744");
    };
    cljs.core.async.t21744.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t21744.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t21744.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t21744.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t21744.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t21744.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t21744.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21746) {
      var self__ = this;
      var _21746__$1 = this;
      return self__.meta21745;
    };
    cljs.core.async.t21744.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21746, meta21745__$1) {
      var self__ = this;
      var _21746__$1 = this;
      return new cljs.core.async.t21744(self__.ch, self__.f, self__.map_GT_, meta21745__$1);
    };
    cljs.core.async.__GT_t21744 = function __GT_t21744(ch__$1, f__$1, map_GT___$1, meta21745) {
      return new cljs.core.async.t21744(ch__$1, f__$1, map_GT___$1, meta21745);
    };
  }
  return new cljs.core.async.t21744(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t21750 !== "undefined") {
  } else {
    cljs.core.async.t21750 = function(ch, p, filter_GT_, meta21751) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta21751 = meta21751;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21750.cljs$lang$type = true;
    cljs.core.async.t21750.cljs$lang$ctorStr = "cljs.core.async/t21750";
    cljs.core.async.t21750.cljs$lang$ctorPrWriter = function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
      return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t21750");
    };
    cljs.core.async.t21750.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t21750.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t21750.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t21750.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t21750.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t21750.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t21750.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t21750.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21752) {
      var self__ = this;
      var _21752__$1 = this;
      return self__.meta21751;
    };
    cljs.core.async.t21750.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21752, meta21751__$1) {
      var self__ = this;
      var _21752__$1 = this;
      return new cljs.core.async.t21750(self__.ch, self__.p, self__.filter_GT_, meta21751__$1);
    };
    cljs.core.async.__GT_t21750 = function __GT_t21750(ch__$1, p__$1, filter_GT___$1, meta21751) {
      return new cljs.core.async.t21750(ch__$1, p__$1, filter_GT___$1, meta21751);
    };
  }
  return new cljs.core.async.t21750(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__12747__auto___21835 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___21835, out) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___21835, out) {
            return function(state_21814) {
              var state_val_21815 = state_21814[1];
              if (state_val_21815 === 7) {
                var inst_21810 = state_21814[2];
                var state_21814__$1 = state_21814;
                var statearr_21816_21836 = state_21814__$1;
                statearr_21816_21836[2] = inst_21810;
                statearr_21816_21836[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21815 === 1) {
                  var state_21814__$1 = state_21814;
                  var statearr_21817_21837 = state_21814__$1;
                  statearr_21817_21837[2] = null;
                  statearr_21817_21837[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21815 === 4) {
                    var inst_21796 = state_21814[7];
                    var inst_21796__$1 = state_21814[2];
                    var inst_21797 = inst_21796__$1 == null;
                    var state_21814__$1 = function() {
                      var statearr_21818 = state_21814;
                      statearr_21818[7] = inst_21796__$1;
                      return statearr_21818;
                    }();
                    if (cljs.core.truth_(inst_21797)) {
                      var statearr_21819_21838 = state_21814__$1;
                      statearr_21819_21838[1] = 5;
                    } else {
                      var statearr_21820_21839 = state_21814__$1;
                      statearr_21820_21839[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21815 === 6) {
                      var inst_21796 = state_21814[7];
                      var inst_21801 = p.call(null, inst_21796);
                      var state_21814__$1 = state_21814;
                      if (cljs.core.truth_(inst_21801)) {
                        var statearr_21821_21840 = state_21814__$1;
                        statearr_21821_21840[1] = 8;
                      } else {
                        var statearr_21822_21841 = state_21814__$1;
                        statearr_21822_21841[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21815 === 3) {
                        var inst_21812 = state_21814[2];
                        var state_21814__$1 = state_21814;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21814__$1, inst_21812);
                      } else {
                        if (state_val_21815 === 2) {
                          var state_21814__$1 = state_21814;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21814__$1, 4, ch);
                        } else {
                          if (state_val_21815 === 11) {
                            var inst_21804 = state_21814[2];
                            var state_21814__$1 = state_21814;
                            var statearr_21823_21842 = state_21814__$1;
                            statearr_21823_21842[2] = inst_21804;
                            statearr_21823_21842[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21815 === 9) {
                              var state_21814__$1 = state_21814;
                              var statearr_21824_21843 = state_21814__$1;
                              statearr_21824_21843[2] = null;
                              statearr_21824_21843[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21815 === 5) {
                                var inst_21799 = cljs.core.async.close_BANG_.call(null, out);
                                var state_21814__$1 = state_21814;
                                var statearr_21825_21844 = state_21814__$1;
                                statearr_21825_21844[2] = inst_21799;
                                statearr_21825_21844[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21815 === 10) {
                                  var inst_21807 = state_21814[2];
                                  var state_21814__$1 = function() {
                                    var statearr_21826 = state_21814;
                                    statearr_21826[8] = inst_21807;
                                    return statearr_21826;
                                  }();
                                  var statearr_21827_21845 = state_21814__$1;
                                  statearr_21827_21845[2] = null;
                                  statearr_21827_21845[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21815 === 8) {
                                    var inst_21796 = state_21814[7];
                                    var state_21814__$1 = state_21814;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21814__$1, 11, out, inst_21796);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___21835, out);
          return function(switch__12682__auto__, c__12747__auto___21835, out) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_21831 = [null, null, null, null, null, null, null, null, null];
                statearr_21831[0] = state_machine__12683__auto__;
                statearr_21831[1] = 1;
                return statearr_21831;
              };
              var state_machine__12683__auto____1 = function(state_21814) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_21814);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e21832) {
                      if (e21832 instanceof Object) {
                        var ex__12686__auto__ = e21832;
                        var statearr_21833_21846 = state_21814;
                        statearr_21833_21846[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21814);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21832;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21847 = state_21814;
                    state_21814 = G__21847;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_21814) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_21814);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___21835, out);
        }();
        var state__12749__auto__ = function() {
          var statearr_21834 = f__12748__auto__.call(null);
          statearr_21834[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___21835;
          return statearr_21834;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___21835, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__12747__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto__) {
    return function() {
      var f__12748__auto__ = function() {
        var switch__12682__auto__ = function(c__12747__auto__) {
          return function(state_22013) {
            var state_val_22014 = state_22013[1];
            if (state_val_22014 === 7) {
              var inst_22009 = state_22013[2];
              var state_22013__$1 = state_22013;
              var statearr_22015_22056 = state_22013__$1;
              statearr_22015_22056[2] = inst_22009;
              statearr_22015_22056[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_22014 === 20) {
                var inst_21979 = state_22013[7];
                var inst_21990 = state_22013[2];
                var inst_21991 = cljs.core.next.call(null, inst_21979);
                var inst_21965 = inst_21991;
                var inst_21966 = null;
                var inst_21967 = 0;
                var inst_21968 = 0;
                var state_22013__$1 = function() {
                  var statearr_22016 = state_22013;
                  statearr_22016[8] = inst_21968;
                  statearr_22016[9] = inst_21990;
                  statearr_22016[10] = inst_21965;
                  statearr_22016[11] = inst_21967;
                  statearr_22016[12] = inst_21966;
                  return statearr_22016;
                }();
                var statearr_22017_22057 = state_22013__$1;
                statearr_22017_22057[2] = null;
                statearr_22017_22057[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22014 === 1) {
                  var state_22013__$1 = state_22013;
                  var statearr_22018_22058 = state_22013__$1;
                  statearr_22018_22058[2] = null;
                  statearr_22018_22058[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22014 === 4) {
                    var inst_21954 = state_22013[13];
                    var inst_21954__$1 = state_22013[2];
                    var inst_21955 = inst_21954__$1 == null;
                    var state_22013__$1 = function() {
                      var statearr_22019 = state_22013;
                      statearr_22019[13] = inst_21954__$1;
                      return statearr_22019;
                    }();
                    if (cljs.core.truth_(inst_21955)) {
                      var statearr_22020_22059 = state_22013__$1;
                      statearr_22020_22059[1] = 5;
                    } else {
                      var statearr_22021_22060 = state_22013__$1;
                      statearr_22021_22060[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22014 === 15) {
                      var state_22013__$1 = state_22013;
                      var statearr_22025_22061 = state_22013__$1;
                      statearr_22025_22061[2] = null;
                      statearr_22025_22061[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22014 === 21) {
                        var state_22013__$1 = state_22013;
                        var statearr_22026_22062 = state_22013__$1;
                        statearr_22026_22062[2] = null;
                        statearr_22026_22062[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22014 === 13) {
                          var inst_21968 = state_22013[8];
                          var inst_21965 = state_22013[10];
                          var inst_21967 = state_22013[11];
                          var inst_21966 = state_22013[12];
                          var inst_21975 = state_22013[2];
                          var inst_21976 = inst_21968 + 1;
                          var tmp22022 = inst_21965;
                          var tmp22023 = inst_21967;
                          var tmp22024 = inst_21966;
                          var inst_21965__$1 = tmp22022;
                          var inst_21966__$1 = tmp22024;
                          var inst_21967__$1 = tmp22023;
                          var inst_21968__$1 = inst_21976;
                          var state_22013__$1 = function() {
                            var statearr_22027 = state_22013;
                            statearr_22027[8] = inst_21968__$1;
                            statearr_22027[10] = inst_21965__$1;
                            statearr_22027[14] = inst_21975;
                            statearr_22027[11] = inst_21967__$1;
                            statearr_22027[12] = inst_21966__$1;
                            return statearr_22027;
                          }();
                          var statearr_22028_22063 = state_22013__$1;
                          statearr_22028_22063[2] = null;
                          statearr_22028_22063[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22014 === 22) {
                            var state_22013__$1 = state_22013;
                            var statearr_22029_22064 = state_22013__$1;
                            statearr_22029_22064[2] = null;
                            statearr_22029_22064[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22014 === 6) {
                              var inst_21954 = state_22013[13];
                              var inst_21963 = f.call(null, inst_21954);
                              var inst_21964 = cljs.core.seq.call(null, inst_21963);
                              var inst_21965 = inst_21964;
                              var inst_21966 = null;
                              var inst_21967 = 0;
                              var inst_21968 = 0;
                              var state_22013__$1 = function() {
                                var statearr_22030 = state_22013;
                                statearr_22030[8] = inst_21968;
                                statearr_22030[10] = inst_21965;
                                statearr_22030[11] = inst_21967;
                                statearr_22030[12] = inst_21966;
                                return statearr_22030;
                              }();
                              var statearr_22031_22065 = state_22013__$1;
                              statearr_22031_22065[2] = null;
                              statearr_22031_22065[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22014 === 17) {
                                var inst_21979 = state_22013[7];
                                var inst_21983 = cljs.core.chunk_first.call(null, inst_21979);
                                var inst_21984 = cljs.core.chunk_rest.call(null, inst_21979);
                                var inst_21985 = cljs.core.count.call(null, inst_21983);
                                var inst_21965 = inst_21984;
                                var inst_21966 = inst_21983;
                                var inst_21967 = inst_21985;
                                var inst_21968 = 0;
                                var state_22013__$1 = function() {
                                  var statearr_22032 = state_22013;
                                  statearr_22032[8] = inst_21968;
                                  statearr_22032[10] = inst_21965;
                                  statearr_22032[11] = inst_21967;
                                  statearr_22032[12] = inst_21966;
                                  return statearr_22032;
                                }();
                                var statearr_22033_22066 = state_22013__$1;
                                statearr_22033_22066[2] = null;
                                statearr_22033_22066[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22014 === 3) {
                                  var inst_22011 = state_22013[2];
                                  var state_22013__$1 = state_22013;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22013__$1, inst_22011);
                                } else {
                                  if (state_val_22014 === 12) {
                                    var inst_21999 = state_22013[2];
                                    var state_22013__$1 = state_22013;
                                    var statearr_22034_22067 = state_22013__$1;
                                    statearr_22034_22067[2] = inst_21999;
                                    statearr_22034_22067[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22014 === 2) {
                                      var state_22013__$1 = state_22013;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22013__$1, 4, in$);
                                    } else {
                                      if (state_val_22014 === 23) {
                                        var inst_22007 = state_22013[2];
                                        var state_22013__$1 = state_22013;
                                        var statearr_22035_22068 = state_22013__$1;
                                        statearr_22035_22068[2] = inst_22007;
                                        statearr_22035_22068[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22014 === 19) {
                                          var inst_21994 = state_22013[2];
                                          var state_22013__$1 = state_22013;
                                          var statearr_22036_22069 = state_22013__$1;
                                          statearr_22036_22069[2] = inst_21994;
                                          statearr_22036_22069[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22014 === 11) {
                                            var inst_21979 = state_22013[7];
                                            var inst_21965 = state_22013[10];
                                            var inst_21979__$1 = cljs.core.seq.call(null, inst_21965);
                                            var state_22013__$1 = function() {
                                              var statearr_22037 = state_22013;
                                              statearr_22037[7] = inst_21979__$1;
                                              return statearr_22037;
                                            }();
                                            if (inst_21979__$1) {
                                              var statearr_22038_22070 = state_22013__$1;
                                              statearr_22038_22070[1] = 14;
                                            } else {
                                              var statearr_22039_22071 = state_22013__$1;
                                              statearr_22039_22071[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_22014 === 9) {
                                              var inst_22001 = state_22013[2];
                                              var inst_22002 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_22013__$1 = function() {
                                                var statearr_22040 = state_22013;
                                                statearr_22040[15] = inst_22001;
                                                return statearr_22040;
                                              }();
                                              if (cljs.core.truth_(inst_22002)) {
                                                var statearr_22041_22072 = state_22013__$1;
                                                statearr_22041_22072[1] = 21;
                                              } else {
                                                var statearr_22042_22073 = state_22013__$1;
                                                statearr_22042_22073[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_22014 === 5) {
                                                var inst_21957 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_22013__$1 = state_22013;
                                                var statearr_22043_22074 = state_22013__$1;
                                                statearr_22043_22074[2] = inst_21957;
                                                statearr_22043_22074[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_22014 === 14) {
                                                  var inst_21979 = state_22013[7];
                                                  var inst_21981 = cljs.core.chunked_seq_QMARK_.call(null, inst_21979);
                                                  var state_22013__$1 = state_22013;
                                                  if (inst_21981) {
                                                    var statearr_22044_22075 = state_22013__$1;
                                                    statearr_22044_22075[1] = 17;
                                                  } else {
                                                    var statearr_22045_22076 = state_22013__$1;
                                                    statearr_22045_22076[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_22014 === 16) {
                                                    var inst_21997 = state_22013[2];
                                                    var state_22013__$1 = state_22013;
                                                    var statearr_22046_22077 = state_22013__$1;
                                                    statearr_22046_22077[2] = inst_21997;
                                                    statearr_22046_22077[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_22014 === 10) {
                                                      var inst_21968 = state_22013[8];
                                                      var inst_21966 = state_22013[12];
                                                      var inst_21973 = cljs.core._nth.call(null, inst_21966, inst_21968);
                                                      var state_22013__$1 = state_22013;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22013__$1, 13, out, inst_21973);
                                                    } else {
                                                      if (state_val_22014 === 18) {
                                                        var inst_21979 = state_22013[7];
                                                        var inst_21988 = cljs.core.first.call(null, inst_21979);
                                                        var state_22013__$1 = state_22013;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22013__$1, 20, out, inst_21988);
                                                      } else {
                                                        if (state_val_22014 === 8) {
                                                          var inst_21968 = state_22013[8];
                                                          var inst_21967 = state_22013[11];
                                                          var inst_21970 = inst_21968 < inst_21967;
                                                          var inst_21971 = inst_21970;
                                                          var state_22013__$1 = state_22013;
                                                          if (cljs.core.truth_(inst_21971)) {
                                                            var statearr_22047_22078 = state_22013__$1;
                                                            statearr_22047_22078[1] = 10;
                                                          } else {
                                                            var statearr_22048_22079 = state_22013__$1;
                                                            statearr_22048_22079[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12747__auto__);
        return function(switch__12682__auto__, c__12747__auto__) {
          return function() {
            var state_machine__12683__auto__ = null;
            var state_machine__12683__auto____0 = function() {
              var statearr_22052 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_22052[0] = state_machine__12683__auto__;
              statearr_22052[1] = 1;
              return statearr_22052;
            };
            var state_machine__12683__auto____1 = function(state_22013) {
              while (true) {
                var ret_value__12684__auto__ = function() {
                  try {
                    while (true) {
                      var result__12685__auto__ = switch__12682__auto__.call(null, state_22013);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12685__auto__;
                      }
                      break;
                    }
                  } catch (e22053) {
                    if (e22053 instanceof Object) {
                      var ex__12686__auto__ = e22053;
                      var statearr_22054_22080 = state_22013;
                      statearr_22054_22080[5] = ex__12686__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22013);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e22053;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__22081 = state_22013;
                  state_22013 = G__22081;
                  continue;
                } else {
                  return ret_value__12684__auto__;
                }
                break;
              }
            };
            state_machine__12683__auto__ = function(state_22013) {
              switch(arguments.length) {
                case 0:
                  return state_machine__12683__auto____0.call(this);
                case 1:
                  return state_machine__12683__auto____1.call(this, state_22013);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
            return state_machine__12683__auto__;
          }();
        }(switch__12682__auto__, c__12747__auto__);
      }();
      var state__12749__auto__ = function() {
        var statearr_22055 = f__12748__auto__.call(null);
        statearr_22055[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto__;
        return statearr_22055;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
    };
  }(c__12747__auto__));
  return c__12747__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__12747__auto___22176 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___22176) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___22176) {
            return function(state_22152) {
              var state_val_22153 = state_22152[1];
              if (state_val_22153 === 7) {
                var inst_22148 = state_22152[2];
                var state_22152__$1 = state_22152;
                var statearr_22154_22177 = state_22152__$1;
                statearr_22154_22177[2] = inst_22148;
                statearr_22154_22177[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22153 === 1) {
                  var state_22152__$1 = state_22152;
                  var statearr_22155_22178 = state_22152__$1;
                  statearr_22155_22178[2] = null;
                  statearr_22155_22178[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22153 === 4) {
                    var inst_22131 = state_22152[7];
                    var inst_22131__$1 = state_22152[2];
                    var inst_22132 = inst_22131__$1 == null;
                    var state_22152__$1 = function() {
                      var statearr_22156 = state_22152;
                      statearr_22156[7] = inst_22131__$1;
                      return statearr_22156;
                    }();
                    if (cljs.core.truth_(inst_22132)) {
                      var statearr_22157_22179 = state_22152__$1;
                      statearr_22157_22179[1] = 5;
                    } else {
                      var statearr_22158_22180 = state_22152__$1;
                      statearr_22158_22180[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22153 === 13) {
                      var state_22152__$1 = state_22152;
                      var statearr_22159_22181 = state_22152__$1;
                      statearr_22159_22181[2] = null;
                      statearr_22159_22181[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22153 === 6) {
                        var inst_22131 = state_22152[7];
                        var state_22152__$1 = state_22152;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22152__$1, 11, to, inst_22131);
                      } else {
                        if (state_val_22153 === 3) {
                          var inst_22150 = state_22152[2];
                          var state_22152__$1 = state_22152;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22152__$1, inst_22150);
                        } else {
                          if (state_val_22153 === 12) {
                            var state_22152__$1 = state_22152;
                            var statearr_22160_22182 = state_22152__$1;
                            statearr_22160_22182[2] = null;
                            statearr_22160_22182[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22153 === 2) {
                              var state_22152__$1 = state_22152;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22152__$1, 4, from);
                            } else {
                              if (state_val_22153 === 11) {
                                var inst_22141 = state_22152[2];
                                var state_22152__$1 = state_22152;
                                if (cljs.core.truth_(inst_22141)) {
                                  var statearr_22161_22183 = state_22152__$1;
                                  statearr_22161_22183[1] = 12;
                                } else {
                                  var statearr_22162_22184 = state_22152__$1;
                                  statearr_22162_22184[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22153 === 9) {
                                  var state_22152__$1 = state_22152;
                                  var statearr_22163_22185 = state_22152__$1;
                                  statearr_22163_22185[2] = null;
                                  statearr_22163_22185[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22153 === 5) {
                                    var state_22152__$1 = state_22152;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_22164_22186 = state_22152__$1;
                                      statearr_22164_22186[1] = 8;
                                    } else {
                                      var statearr_22165_22187 = state_22152__$1;
                                      statearr_22165_22187[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22153 === 14) {
                                      var inst_22146 = state_22152[2];
                                      var state_22152__$1 = state_22152;
                                      var statearr_22166_22188 = state_22152__$1;
                                      statearr_22166_22188[2] = inst_22146;
                                      statearr_22166_22188[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22153 === 10) {
                                        var inst_22138 = state_22152[2];
                                        var state_22152__$1 = state_22152;
                                        var statearr_22167_22189 = state_22152__$1;
                                        statearr_22167_22189[2] = inst_22138;
                                        statearr_22167_22189[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22153 === 8) {
                                          var inst_22135 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_22152__$1 = state_22152;
                                          var statearr_22168_22190 = state_22152__$1;
                                          statearr_22168_22190[2] = inst_22135;
                                          statearr_22168_22190[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___22176);
          return function(switch__12682__auto__, c__12747__auto___22176) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_22172 = [null, null, null, null, null, null, null, null];
                statearr_22172[0] = state_machine__12683__auto__;
                statearr_22172[1] = 1;
                return statearr_22172;
              };
              var state_machine__12683__auto____1 = function(state_22152) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_22152);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e22173) {
                      if (e22173 instanceof Object) {
                        var ex__12686__auto__ = e22173;
                        var statearr_22174_22191 = state_22152;
                        statearr_22174_22191[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22152);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22173;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22192 = state_22152;
                    state_22152 = G__22192;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_22152) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_22152);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___22176);
        }();
        var state__12749__auto__ = function() {
          var statearr_22175 = f__12748__auto__.call(null);
          statearr_22175[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___22176;
          return statearr_22175;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___22176));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__12747__auto___22293 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___22293, tc, fc) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___22293, tc, fc) {
            return function(state_22268) {
              var state_val_22269 = state_22268[1];
              if (state_val_22269 === 7) {
                var inst_22264 = state_22268[2];
                var state_22268__$1 = state_22268;
                var statearr_22270_22294 = state_22268__$1;
                statearr_22270_22294[2] = inst_22264;
                statearr_22270_22294[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22269 === 1) {
                  var state_22268__$1 = state_22268;
                  var statearr_22271_22295 = state_22268__$1;
                  statearr_22271_22295[2] = null;
                  statearr_22271_22295[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22269 === 4) {
                    var inst_22245 = state_22268[7];
                    var inst_22245__$1 = state_22268[2];
                    var inst_22246 = inst_22245__$1 == null;
                    var state_22268__$1 = function() {
                      var statearr_22272 = state_22268;
                      statearr_22272[7] = inst_22245__$1;
                      return statearr_22272;
                    }();
                    if (cljs.core.truth_(inst_22246)) {
                      var statearr_22273_22296 = state_22268__$1;
                      statearr_22273_22296[1] = 5;
                    } else {
                      var statearr_22274_22297 = state_22268__$1;
                      statearr_22274_22297[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22269 === 13) {
                      var state_22268__$1 = state_22268;
                      var statearr_22275_22298 = state_22268__$1;
                      statearr_22275_22298[2] = null;
                      statearr_22275_22298[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22269 === 6) {
                        var inst_22245 = state_22268[7];
                        var inst_22251 = p.call(null, inst_22245);
                        var state_22268__$1 = state_22268;
                        if (cljs.core.truth_(inst_22251)) {
                          var statearr_22276_22299 = state_22268__$1;
                          statearr_22276_22299[1] = 9;
                        } else {
                          var statearr_22277_22300 = state_22268__$1;
                          statearr_22277_22300[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22269 === 3) {
                          var inst_22266 = state_22268[2];
                          var state_22268__$1 = state_22268;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22268__$1, inst_22266);
                        } else {
                          if (state_val_22269 === 12) {
                            var state_22268__$1 = state_22268;
                            var statearr_22278_22301 = state_22268__$1;
                            statearr_22278_22301[2] = null;
                            statearr_22278_22301[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22269 === 2) {
                              var state_22268__$1 = state_22268;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22268__$1, 4, ch);
                            } else {
                              if (state_val_22269 === 11) {
                                var inst_22245 = state_22268[7];
                                var inst_22255 = state_22268[2];
                                var state_22268__$1 = state_22268;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22268__$1, 8, inst_22255, inst_22245);
                              } else {
                                if (state_val_22269 === 9) {
                                  var state_22268__$1 = state_22268;
                                  var statearr_22279_22302 = state_22268__$1;
                                  statearr_22279_22302[2] = tc;
                                  statearr_22279_22302[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22269 === 5) {
                                    var inst_22248 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_22249 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_22268__$1 = function() {
                                      var statearr_22280 = state_22268;
                                      statearr_22280[8] = inst_22248;
                                      return statearr_22280;
                                    }();
                                    var statearr_22281_22303 = state_22268__$1;
                                    statearr_22281_22303[2] = inst_22249;
                                    statearr_22281_22303[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22269 === 14) {
                                      var inst_22262 = state_22268[2];
                                      var state_22268__$1 = state_22268;
                                      var statearr_22282_22304 = state_22268__$1;
                                      statearr_22282_22304[2] = inst_22262;
                                      statearr_22282_22304[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22269 === 10) {
                                        var state_22268__$1 = state_22268;
                                        var statearr_22283_22305 = state_22268__$1;
                                        statearr_22283_22305[2] = fc;
                                        statearr_22283_22305[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22269 === 8) {
                                          var inst_22257 = state_22268[2];
                                          var state_22268__$1 = state_22268;
                                          if (cljs.core.truth_(inst_22257)) {
                                            var statearr_22284_22306 = state_22268__$1;
                                            statearr_22284_22306[1] = 12;
                                          } else {
                                            var statearr_22285_22307 = state_22268__$1;
                                            statearr_22285_22307[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___22293, tc, fc);
          return function(switch__12682__auto__, c__12747__auto___22293, tc, fc) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_22289 = [null, null, null, null, null, null, null, null, null];
                statearr_22289[0] = state_machine__12683__auto__;
                statearr_22289[1] = 1;
                return statearr_22289;
              };
              var state_machine__12683__auto____1 = function(state_22268) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_22268);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e22290) {
                      if (e22290 instanceof Object) {
                        var ex__12686__auto__ = e22290;
                        var statearr_22291_22308 = state_22268;
                        statearr_22291_22308[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22268);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22290;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22309 = state_22268;
                    state_22268 = G__22309;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_22268) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_22268);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___22293, tc, fc);
        }();
        var state__12749__auto__ = function() {
          var statearr_22292 = f__12748__auto__.call(null);
          statearr_22292[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___22293;
          return statearr_22292;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___22293, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__12747__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto__) {
    return function() {
      var f__12748__auto__ = function() {
        var switch__12682__auto__ = function(c__12747__auto__) {
          return function(state_22356) {
            var state_val_22357 = state_22356[1];
            if (state_val_22357 === 7) {
              var inst_22352 = state_22356[2];
              var state_22356__$1 = state_22356;
              var statearr_22358_22374 = state_22356__$1;
              statearr_22358_22374[2] = inst_22352;
              statearr_22358_22374[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_22357 === 6) {
                var inst_22345 = state_22356[7];
                var inst_22342 = state_22356[8];
                var inst_22349 = f.call(null, inst_22342, inst_22345);
                var inst_22342__$1 = inst_22349;
                var state_22356__$1 = function() {
                  var statearr_22359 = state_22356;
                  statearr_22359[8] = inst_22342__$1;
                  return statearr_22359;
                }();
                var statearr_22360_22375 = state_22356__$1;
                statearr_22360_22375[2] = null;
                statearr_22360_22375[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22357 === 5) {
                  var inst_22342 = state_22356[8];
                  var state_22356__$1 = state_22356;
                  var statearr_22361_22376 = state_22356__$1;
                  statearr_22361_22376[2] = inst_22342;
                  statearr_22361_22376[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22357 === 4) {
                    var inst_22345 = state_22356[7];
                    var inst_22345__$1 = state_22356[2];
                    var inst_22346 = inst_22345__$1 == null;
                    var state_22356__$1 = function() {
                      var statearr_22362 = state_22356;
                      statearr_22362[7] = inst_22345__$1;
                      return statearr_22362;
                    }();
                    if (cljs.core.truth_(inst_22346)) {
                      var statearr_22363_22377 = state_22356__$1;
                      statearr_22363_22377[1] = 5;
                    } else {
                      var statearr_22364_22378 = state_22356__$1;
                      statearr_22364_22378[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22357 === 3) {
                      var inst_22354 = state_22356[2];
                      var state_22356__$1 = state_22356;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22356__$1, inst_22354);
                    } else {
                      if (state_val_22357 === 2) {
                        var state_22356__$1 = state_22356;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22356__$1, 4, ch);
                      } else {
                        if (state_val_22357 === 1) {
                          var inst_22342 = init;
                          var state_22356__$1 = function() {
                            var statearr_22365 = state_22356;
                            statearr_22365[8] = inst_22342;
                            return statearr_22365;
                          }();
                          var statearr_22366_22379 = state_22356__$1;
                          statearr_22366_22379[2] = null;
                          statearr_22366_22379[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12747__auto__);
        return function(switch__12682__auto__, c__12747__auto__) {
          return function() {
            var state_machine__12683__auto__ = null;
            var state_machine__12683__auto____0 = function() {
              var statearr_22370 = [null, null, null, null, null, null, null, null, null];
              statearr_22370[0] = state_machine__12683__auto__;
              statearr_22370[1] = 1;
              return statearr_22370;
            };
            var state_machine__12683__auto____1 = function(state_22356) {
              while (true) {
                var ret_value__12684__auto__ = function() {
                  try {
                    while (true) {
                      var result__12685__auto__ = switch__12682__auto__.call(null, state_22356);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12685__auto__;
                      }
                      break;
                    }
                  } catch (e22371) {
                    if (e22371 instanceof Object) {
                      var ex__12686__auto__ = e22371;
                      var statearr_22372_22380 = state_22356;
                      statearr_22372_22380[5] = ex__12686__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22356);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e22371;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__22381 = state_22356;
                  state_22356 = G__22381;
                  continue;
                } else {
                  return ret_value__12684__auto__;
                }
                break;
              }
            };
            state_machine__12683__auto__ = function(state_22356) {
              switch(arguments.length) {
                case 0:
                  return state_machine__12683__auto____0.call(this);
                case 1:
                  return state_machine__12683__auto____1.call(this, state_22356);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
            return state_machine__12683__auto__;
          }();
        }(switch__12682__auto__, c__12747__auto__);
      }();
      var state__12749__auto__ = function() {
        var statearr_22373 = f__12748__auto__.call(null);
        statearr_22373[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto__;
        return statearr_22373;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
    };
  }(c__12747__auto__));
  return c__12747__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__12747__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto__) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto__) {
            return function(state_22455) {
              var state_val_22456 = state_22455[1];
              if (state_val_22456 === 7) {
                var inst_22437 = state_22455[2];
                var state_22455__$1 = state_22455;
                var statearr_22457_22480 = state_22455__$1;
                statearr_22457_22480[2] = inst_22437;
                statearr_22457_22480[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22456 === 1) {
                  var inst_22431 = cljs.core.seq.call(null, coll);
                  var inst_22432 = inst_22431;
                  var state_22455__$1 = function() {
                    var statearr_22458 = state_22455;
                    statearr_22458[7] = inst_22432;
                    return statearr_22458;
                  }();
                  var statearr_22459_22481 = state_22455__$1;
                  statearr_22459_22481[2] = null;
                  statearr_22459_22481[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22456 === 4) {
                    var inst_22432 = state_22455[7];
                    var inst_22435 = cljs.core.first.call(null, inst_22432);
                    var state_22455__$1 = state_22455;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22455__$1, 7, ch, inst_22435);
                  } else {
                    if (state_val_22456 === 13) {
                      var inst_22449 = state_22455[2];
                      var state_22455__$1 = state_22455;
                      var statearr_22460_22482 = state_22455__$1;
                      statearr_22460_22482[2] = inst_22449;
                      statearr_22460_22482[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22456 === 6) {
                        var inst_22440 = state_22455[2];
                        var state_22455__$1 = state_22455;
                        if (cljs.core.truth_(inst_22440)) {
                          var statearr_22461_22483 = state_22455__$1;
                          statearr_22461_22483[1] = 8;
                        } else {
                          var statearr_22462_22484 = state_22455__$1;
                          statearr_22462_22484[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22456 === 3) {
                          var inst_22453 = state_22455[2];
                          var state_22455__$1 = state_22455;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22455__$1, inst_22453);
                        } else {
                          if (state_val_22456 === 12) {
                            var state_22455__$1 = state_22455;
                            var statearr_22463_22485 = state_22455__$1;
                            statearr_22463_22485[2] = null;
                            statearr_22463_22485[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22456 === 2) {
                              var inst_22432 = state_22455[7];
                              var state_22455__$1 = state_22455;
                              if (cljs.core.truth_(inst_22432)) {
                                var statearr_22464_22486 = state_22455__$1;
                                statearr_22464_22486[1] = 4;
                              } else {
                                var statearr_22465_22487 = state_22455__$1;
                                statearr_22465_22487[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22456 === 11) {
                                var inst_22446 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_22455__$1 = state_22455;
                                var statearr_22466_22488 = state_22455__$1;
                                statearr_22466_22488[2] = inst_22446;
                                statearr_22466_22488[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22456 === 9) {
                                  var state_22455__$1 = state_22455;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_22467_22489 = state_22455__$1;
                                    statearr_22467_22489[1] = 11;
                                  } else {
                                    var statearr_22468_22490 = state_22455__$1;
                                    statearr_22468_22490[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22456 === 5) {
                                    var inst_22432 = state_22455[7];
                                    var state_22455__$1 = state_22455;
                                    var statearr_22469_22491 = state_22455__$1;
                                    statearr_22469_22491[2] = inst_22432;
                                    statearr_22469_22491[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22456 === 10) {
                                      var inst_22451 = state_22455[2];
                                      var state_22455__$1 = state_22455;
                                      var statearr_22470_22492 = state_22455__$1;
                                      statearr_22470_22492[2] = inst_22451;
                                      statearr_22470_22492[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22456 === 8) {
                                        var inst_22432 = state_22455[7];
                                        var inst_22442 = cljs.core.next.call(null, inst_22432);
                                        var inst_22432__$1 = inst_22442;
                                        var state_22455__$1 = function() {
                                          var statearr_22471 = state_22455;
                                          statearr_22471[7] = inst_22432__$1;
                                          return statearr_22471;
                                        }();
                                        var statearr_22472_22493 = state_22455__$1;
                                        statearr_22472_22493[2] = null;
                                        statearr_22472_22493[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto__);
          return function(switch__12682__auto__, c__12747__auto__) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_22476 = [null, null, null, null, null, null, null, null];
                statearr_22476[0] = state_machine__12683__auto__;
                statearr_22476[1] = 1;
                return statearr_22476;
              };
              var state_machine__12683__auto____1 = function(state_22455) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_22455);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e22477) {
                      if (e22477 instanceof Object) {
                        var ex__12686__auto__ = e22477;
                        var statearr_22478_22494 = state_22455;
                        statearr_22478_22494[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22455);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22477;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22495 = state_22455;
                    state_22455 = G__22495;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_22455) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_22455);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto__);
        }();
        var state__12749__auto__ = function() {
          var statearr_22479 = f__12748__auto__.call(null);
          statearr_22479[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto__;
          return statearr_22479;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto__));
    return c__12747__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj22497 = {};
  return obj22497;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3541__auto__ = _;
    if (and__3541__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4180__auto__ = _ == null ? null : _;
    return function() {
      var or__3553__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj22499 = {};
  return obj22499;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t22721 !== "undefined") {
    } else {
      cljs.core.async.t22721 = function(cs, ch, mult, meta22722) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta22722 = meta22722;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t22721.cljs$lang$type = true;
      cljs.core.async.t22721.cljs$lang$ctorStr = "cljs.core.async/t22721";
      cljs.core.async.t22721.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
          return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t22721");
        };
      }(cs);
      cljs.core.async.t22721.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t22721.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t22721.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t22721.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t22721.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t22721.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t22721.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_22723) {
          var self__ = this;
          var _22723__$1 = this;
          return self__.meta22722;
        };
      }(cs);
      cljs.core.async.t22721.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_22723, meta22722__$1) {
          var self__ = this;
          var _22723__$1 = this;
          return new cljs.core.async.t22721(self__.cs, self__.ch, self__.mult, meta22722__$1);
        };
      }(cs);
      cljs.core.async.__GT_t22721 = function(cs) {
        return function __GT_t22721(cs__$1, ch__$1, mult__$1, meta22722) {
          return new cljs.core.async.t22721(cs__$1, ch__$1, mult__$1, meta22722);
        };
      }(cs);
    }
    return new cljs.core.async.t22721(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__12747__auto___22942 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___22942, cs, m, dchan, dctr, done) {
    return function() {
      var f__12748__auto__ = function() {
        var switch__12682__auto__ = function(c__12747__auto___22942, cs, m, dchan, dctr, done) {
          return function(state_22854) {
            var state_val_22855 = state_22854[1];
            if (state_val_22855 === 7) {
              var inst_22850 = state_22854[2];
              var state_22854__$1 = state_22854;
              var statearr_22856_22943 = state_22854__$1;
              statearr_22856_22943[2] = inst_22850;
              statearr_22856_22943[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_22855 === 20) {
                var inst_22755 = state_22854[7];
                var inst_22765 = cljs.core.first.call(null, inst_22755);
                var inst_22766 = cljs.core.nth.call(null, inst_22765, 0, null);
                var inst_22767 = cljs.core.nth.call(null, inst_22765, 1, null);
                var state_22854__$1 = function() {
                  var statearr_22857 = state_22854;
                  statearr_22857[8] = inst_22766;
                  return statearr_22857;
                }();
                if (cljs.core.truth_(inst_22767)) {
                  var statearr_22858_22944 = state_22854__$1;
                  statearr_22858_22944[1] = 22;
                } else {
                  var statearr_22859_22945 = state_22854__$1;
                  statearr_22859_22945[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22855 === 27) {
                  var inst_22802 = state_22854[9];
                  var inst_22726 = state_22854[10];
                  var inst_22795 = state_22854[11];
                  var inst_22797 = state_22854[12];
                  var inst_22802__$1 = cljs.core._nth.call(null, inst_22795, inst_22797);
                  var inst_22803 = cljs.core.async.put_BANG_.call(null, inst_22802__$1, inst_22726, done);
                  var state_22854__$1 = function() {
                    var statearr_22860 = state_22854;
                    statearr_22860[9] = inst_22802__$1;
                    return statearr_22860;
                  }();
                  if (cljs.core.truth_(inst_22803)) {
                    var statearr_22861_22946 = state_22854__$1;
                    statearr_22861_22946[1] = 30;
                  } else {
                    var statearr_22862_22947 = state_22854__$1;
                    statearr_22862_22947[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22855 === 1) {
                    var state_22854__$1 = state_22854;
                    var statearr_22863_22948 = state_22854__$1;
                    statearr_22863_22948[2] = null;
                    statearr_22863_22948[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22855 === 24) {
                      var inst_22755 = state_22854[7];
                      var inst_22772 = state_22854[2];
                      var inst_22773 = cljs.core.next.call(null, inst_22755);
                      var inst_22735 = inst_22773;
                      var inst_22736 = null;
                      var inst_22737 = 0;
                      var inst_22738 = 0;
                      var state_22854__$1 = function() {
                        var statearr_22864 = state_22854;
                        statearr_22864[13] = inst_22736;
                        statearr_22864[14] = inst_22735;
                        statearr_22864[15] = inst_22772;
                        statearr_22864[16] = inst_22738;
                        statearr_22864[17] = inst_22737;
                        return statearr_22864;
                      }();
                      var statearr_22865_22949 = state_22854__$1;
                      statearr_22865_22949[2] = null;
                      statearr_22865_22949[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22855 === 39) {
                        var state_22854__$1 = state_22854;
                        var statearr_22869_22950 = state_22854__$1;
                        statearr_22869_22950[2] = null;
                        statearr_22869_22950[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22855 === 4) {
                          var inst_22726 = state_22854[10];
                          var inst_22726__$1 = state_22854[2];
                          var inst_22727 = inst_22726__$1 == null;
                          var state_22854__$1 = function() {
                            var statearr_22870 = state_22854;
                            statearr_22870[10] = inst_22726__$1;
                            return statearr_22870;
                          }();
                          if (cljs.core.truth_(inst_22727)) {
                            var statearr_22871_22951 = state_22854__$1;
                            statearr_22871_22951[1] = 5;
                          } else {
                            var statearr_22872_22952 = state_22854__$1;
                            statearr_22872_22952[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22855 === 15) {
                            var inst_22736 = state_22854[13];
                            var inst_22735 = state_22854[14];
                            var inst_22738 = state_22854[16];
                            var inst_22737 = state_22854[17];
                            var inst_22751 = state_22854[2];
                            var inst_22752 = inst_22738 + 1;
                            var tmp22866 = inst_22736;
                            var tmp22867 = inst_22735;
                            var tmp22868 = inst_22737;
                            var inst_22735__$1 = tmp22867;
                            var inst_22736__$1 = tmp22866;
                            var inst_22737__$1 = tmp22868;
                            var inst_22738__$1 = inst_22752;
                            var state_22854__$1 = function() {
                              var statearr_22873 = state_22854;
                              statearr_22873[13] = inst_22736__$1;
                              statearr_22873[14] = inst_22735__$1;
                              statearr_22873[18] = inst_22751;
                              statearr_22873[16] = inst_22738__$1;
                              statearr_22873[17] = inst_22737__$1;
                              return statearr_22873;
                            }();
                            var statearr_22874_22953 = state_22854__$1;
                            statearr_22874_22953[2] = null;
                            statearr_22874_22953[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22855 === 21) {
                              var inst_22776 = state_22854[2];
                              var state_22854__$1 = state_22854;
                              var statearr_22878_22954 = state_22854__$1;
                              statearr_22878_22954[2] = inst_22776;
                              statearr_22878_22954[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22855 === 31) {
                                var inst_22802 = state_22854[9];
                                var inst_22806 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                var inst_22807 = cljs.core.async.untap_STAR_.call(null, m, inst_22802);
                                var state_22854__$1 = function() {
                                  var statearr_22879 = state_22854;
                                  statearr_22879[19] = inst_22806;
                                  return statearr_22879;
                                }();
                                var statearr_22880_22955 = state_22854__$1;
                                statearr_22880_22955[2] = inst_22807;
                                statearr_22880_22955[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22855 === 32) {
                                  var inst_22795 = state_22854[11];
                                  var inst_22797 = state_22854[12];
                                  var inst_22794 = state_22854[20];
                                  var inst_22796 = state_22854[21];
                                  var inst_22809 = state_22854[2];
                                  var inst_22810 = inst_22797 + 1;
                                  var tmp22875 = inst_22795;
                                  var tmp22876 = inst_22794;
                                  var tmp22877 = inst_22796;
                                  var inst_22794__$1 = tmp22876;
                                  var inst_22795__$1 = tmp22875;
                                  var inst_22796__$1 = tmp22877;
                                  var inst_22797__$1 = inst_22810;
                                  var state_22854__$1 = function() {
                                    var statearr_22881 = state_22854;
                                    statearr_22881[22] = inst_22809;
                                    statearr_22881[11] = inst_22795__$1;
                                    statearr_22881[12] = inst_22797__$1;
                                    statearr_22881[20] = inst_22794__$1;
                                    statearr_22881[21] = inst_22796__$1;
                                    return statearr_22881;
                                  }();
                                  var statearr_22882_22956 = state_22854__$1;
                                  statearr_22882_22956[2] = null;
                                  statearr_22882_22956[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22855 === 40) {
                                    var inst_22822 = state_22854[23];
                                    var inst_22826 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                    var inst_22827 = cljs.core.async.untap_STAR_.call(null, m, inst_22822);
                                    var state_22854__$1 = function() {
                                      var statearr_22883 = state_22854;
                                      statearr_22883[24] = inst_22826;
                                      return statearr_22883;
                                    }();
                                    var statearr_22884_22957 = state_22854__$1;
                                    statearr_22884_22957[2] = inst_22827;
                                    statearr_22884_22957[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22855 === 33) {
                                      var inst_22813 = state_22854[25];
                                      var inst_22815 = cljs.core.chunked_seq_QMARK_.call(null, inst_22813);
                                      var state_22854__$1 = state_22854;
                                      if (inst_22815) {
                                        var statearr_22885_22958 = state_22854__$1;
                                        statearr_22885_22958[1] = 36;
                                      } else {
                                        var statearr_22886_22959 = state_22854__$1;
                                        statearr_22886_22959[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22855 === 13) {
                                        var inst_22745 = state_22854[26];
                                        var inst_22748 = cljs.core.async.close_BANG_.call(null, inst_22745);
                                        var state_22854__$1 = state_22854;
                                        var statearr_22887_22960 = state_22854__$1;
                                        statearr_22887_22960[2] = inst_22748;
                                        statearr_22887_22960[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22855 === 22) {
                                          var inst_22766 = state_22854[8];
                                          var inst_22769 = cljs.core.async.close_BANG_.call(null, inst_22766);
                                          var state_22854__$1 = state_22854;
                                          var statearr_22888_22961 = state_22854__$1;
                                          statearr_22888_22961[2] = inst_22769;
                                          statearr_22888_22961[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22855 === 36) {
                                            var inst_22813 = state_22854[25];
                                            var inst_22817 = cljs.core.chunk_first.call(null, inst_22813);
                                            var inst_22818 = cljs.core.chunk_rest.call(null, inst_22813);
                                            var inst_22819 = cljs.core.count.call(null, inst_22817);
                                            var inst_22794 = inst_22818;
                                            var inst_22795 = inst_22817;
                                            var inst_22796 = inst_22819;
                                            var inst_22797 = 0;
                                            var state_22854__$1 = function() {
                                              var statearr_22889 = state_22854;
                                              statearr_22889[11] = inst_22795;
                                              statearr_22889[12] = inst_22797;
                                              statearr_22889[20] = inst_22794;
                                              statearr_22889[21] = inst_22796;
                                              return statearr_22889;
                                            }();
                                            var statearr_22890_22962 = state_22854__$1;
                                            statearr_22890_22962[2] = null;
                                            statearr_22890_22962[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_22855 === 41) {
                                              var inst_22813 = state_22854[25];
                                              var inst_22829 = state_22854[2];
                                              var inst_22830 = cljs.core.next.call(null, inst_22813);
                                              var inst_22794 = inst_22830;
                                              var inst_22795 = null;
                                              var inst_22796 = 0;
                                              var inst_22797 = 0;
                                              var state_22854__$1 = function() {
                                                var statearr_22891 = state_22854;
                                                statearr_22891[11] = inst_22795;
                                                statearr_22891[12] = inst_22797;
                                                statearr_22891[20] = inst_22794;
                                                statearr_22891[27] = inst_22829;
                                                statearr_22891[21] = inst_22796;
                                                return statearr_22891;
                                              }();
                                              var statearr_22892_22963 = state_22854__$1;
                                              statearr_22892_22963[2] = null;
                                              statearr_22892_22963[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_22855 === 43) {
                                                var state_22854__$1 = state_22854;
                                                var statearr_22893_22964 = state_22854__$1;
                                                statearr_22893_22964[2] = null;
                                                statearr_22893_22964[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_22855 === 29) {
                                                  var inst_22838 = state_22854[2];
                                                  var state_22854__$1 = state_22854;
                                                  var statearr_22894_22965 = state_22854__$1;
                                                  statearr_22894_22965[2] = inst_22838;
                                                  statearr_22894_22965[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_22855 === 44) {
                                                    var inst_22847 = state_22854[2];
                                                    var state_22854__$1 = function() {
                                                      var statearr_22895 = state_22854;
                                                      statearr_22895[28] = inst_22847;
                                                      return statearr_22895;
                                                    }();
                                                    var statearr_22896_22966 = state_22854__$1;
                                                    statearr_22896_22966[2] = null;
                                                    statearr_22896_22966[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_22855 === 6) {
                                                      var inst_22786 = state_22854[29];
                                                      var inst_22785 = cljs.core.deref.call(null, cs);
                                                      var inst_22786__$1 = cljs.core.keys.call(null, inst_22785);
                                                      var inst_22787 = cljs.core.count.call(null, inst_22786__$1);
                                                      var inst_22788 = cljs.core.reset_BANG_.call(null, dctr, inst_22787);
                                                      var inst_22793 = cljs.core.seq.call(null, inst_22786__$1);
                                                      var inst_22794 = inst_22793;
                                                      var inst_22795 = null;
                                                      var inst_22796 = 0;
                                                      var inst_22797 = 0;
                                                      var state_22854__$1 = function() {
                                                        var statearr_22897 = state_22854;
                                                        statearr_22897[29] = inst_22786__$1;
                                                        statearr_22897[11] = inst_22795;
                                                        statearr_22897[12] = inst_22797;
                                                        statearr_22897[20] = inst_22794;
                                                        statearr_22897[30] = inst_22788;
                                                        statearr_22897[21] = inst_22796;
                                                        return statearr_22897;
                                                      }();
                                                      var statearr_22898_22967 = state_22854__$1;
                                                      statearr_22898_22967[2] = null;
                                                      statearr_22898_22967[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_22855 === 28) {
                                                        var inst_22813 = state_22854[25];
                                                        var inst_22794 = state_22854[20];
                                                        var inst_22813__$1 = cljs.core.seq.call(null, inst_22794);
                                                        var state_22854__$1 = function() {
                                                          var statearr_22899 = state_22854;
                                                          statearr_22899[25] = inst_22813__$1;
                                                          return statearr_22899;
                                                        }();
                                                        if (inst_22813__$1) {
                                                          var statearr_22900_22968 = state_22854__$1;
                                                          statearr_22900_22968[1] = 33;
                                                        } else {
                                                          var statearr_22901_22969 = state_22854__$1;
                                                          statearr_22901_22969[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_22855 === 25) {
                                                          var inst_22797 = state_22854[12];
                                                          var inst_22796 = state_22854[21];
                                                          var inst_22799 = inst_22797 < inst_22796;
                                                          var inst_22800 = inst_22799;
                                                          var state_22854__$1 = state_22854;
                                                          if (cljs.core.truth_(inst_22800)) {
                                                            var statearr_22902_22970 = state_22854__$1;
                                                            statearr_22902_22970[1] = 27;
                                                          } else {
                                                            var statearr_22903_22971 = state_22854__$1;
                                                            statearr_22903_22971[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_22855 === 34) {
                                                            var state_22854__$1 = state_22854;
                                                            var statearr_22904_22972 = state_22854__$1;
                                                            statearr_22904_22972[2] = null;
                                                            statearr_22904_22972[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_22855 === 17) {
                                                              var state_22854__$1 = state_22854;
                                                              var statearr_22905_22973 = state_22854__$1;
                                                              statearr_22905_22973[2] = null;
                                                              statearr_22905_22973[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_22855 === 3) {
                                                                var inst_22852 = state_22854[2];
                                                                var state_22854__$1 = state_22854;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22854__$1, inst_22852);
                                                              } else {
                                                                if (state_val_22855 === 12) {
                                                                  var inst_22781 = state_22854[2];
                                                                  var state_22854__$1 = state_22854;
                                                                  var statearr_22906_22974 = state_22854__$1;
                                                                  statearr_22906_22974[2] = inst_22781;
                                                                  statearr_22906_22974[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_22855 === 2) {
                                                                    var state_22854__$1 = state_22854;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22854__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_22855 === 23) {
                                                                      var state_22854__$1 = state_22854;
                                                                      var statearr_22907_22975 = state_22854__$1;
                                                                      statearr_22907_22975[2] = null;
                                                                      statearr_22907_22975[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_22855 === 35) {
                                                                        var inst_22836 = state_22854[2];
                                                                        var state_22854__$1 = state_22854;
                                                                        var statearr_22908_22976 = state_22854__$1;
                                                                        statearr_22908_22976[2] = inst_22836;
                                                                        statearr_22908_22976[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_22855 === 19) {
                                                                          var inst_22755 = state_22854[7];
                                                                          var inst_22759 = cljs.core.chunk_first.call(null, inst_22755);
                                                                          var inst_22760 = cljs.core.chunk_rest.call(null, inst_22755);
                                                                          var inst_22761 = cljs.core.count.call(null, inst_22759);
                                                                          var inst_22735 = inst_22760;
                                                                          var inst_22736 = inst_22759;
                                                                          var inst_22737 = inst_22761;
                                                                          var inst_22738 = 0;
                                                                          var state_22854__$1 = function() {
                                                                            var statearr_22909 = state_22854;
                                                                            statearr_22909[13] = inst_22736;
                                                                            statearr_22909[14] = inst_22735;
                                                                            statearr_22909[16] = inst_22738;
                                                                            statearr_22909[17] = inst_22737;
                                                                            return statearr_22909;
                                                                          }();
                                                                          var statearr_22910_22977 = state_22854__$1;
                                                                          statearr_22910_22977[2] = null;
                                                                          statearr_22910_22977[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_22855 === 11) {
                                                                            var inst_22735 = state_22854[14];
                                                                            var inst_22755 = state_22854[7];
                                                                            var inst_22755__$1 = cljs.core.seq.call(null, inst_22735);
                                                                            var state_22854__$1 = function() {
                                                                              var statearr_22911 = state_22854;
                                                                              statearr_22911[7] = inst_22755__$1;
                                                                              return statearr_22911;
                                                                            }();
                                                                            if (inst_22755__$1) {
                                                                              var statearr_22912_22978 = state_22854__$1;
                                                                              statearr_22912_22978[1] = 16;
                                                                            } else {
                                                                              var statearr_22913_22979 = state_22854__$1;
                                                                              statearr_22913_22979[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_22855 === 9) {
                                                                              var inst_22783 = state_22854[2];
                                                                              var state_22854__$1 = state_22854;
                                                                              var statearr_22914_22980 = state_22854__$1;
                                                                              statearr_22914_22980[2] = inst_22783;
                                                                              statearr_22914_22980[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_22855 === 5) {
                                                                                var inst_22733 = cljs.core.deref.call(null, cs);
                                                                                var inst_22734 = cljs.core.seq.call(null, inst_22733);
                                                                                var inst_22735 = inst_22734;
                                                                                var inst_22736 = null;
                                                                                var inst_22737 = 0;
                                                                                var inst_22738 = 0;
                                                                                var state_22854__$1 = function() {
                                                                                  var statearr_22915 = state_22854;
                                                                                  statearr_22915[13] = inst_22736;
                                                                                  statearr_22915[14] = inst_22735;
                                                                                  statearr_22915[16] = inst_22738;
                                                                                  statearr_22915[17] = inst_22737;
                                                                                  return statearr_22915;
                                                                                }();
                                                                                var statearr_22916_22981 = state_22854__$1;
                                                                                statearr_22916_22981[2] = null;
                                                                                statearr_22916_22981[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_22855 === 14) {
                                                                                  var state_22854__$1 = state_22854;
                                                                                  var statearr_22917_22982 = state_22854__$1;
                                                                                  statearr_22917_22982[2] = null;
                                                                                  statearr_22917_22982[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_22855 === 45) {
                                                                                    var inst_22844 = state_22854[2];
                                                                                    var state_22854__$1 = state_22854;
                                                                                    var statearr_22918_22983 = state_22854__$1;
                                                                                    statearr_22918_22983[2] = inst_22844;
                                                                                    statearr_22918_22983[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_22855 === 26) {
                                                                                      var inst_22786 = state_22854[29];
                                                                                      var inst_22840 = state_22854[2];
                                                                                      var inst_22841 = cljs.core.seq.call(null, inst_22786);
                                                                                      var state_22854__$1 = function() {
                                                                                        var statearr_22919 = state_22854;
                                                                                        statearr_22919[31] = inst_22840;
                                                                                        return statearr_22919;
                                                                                      }();
                                                                                      if (inst_22841) {
                                                                                        var statearr_22920_22984 = state_22854__$1;
                                                                                        statearr_22920_22984[1] = 42;
                                                                                      } else {
                                                                                        var statearr_22921_22985 = state_22854__$1;
                                                                                        statearr_22921_22985[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_22855 === 16) {
                                                                                        var inst_22755 = state_22854[7];
                                                                                        var inst_22757 = cljs.core.chunked_seq_QMARK_.call(null, inst_22755);
                                                                                        var state_22854__$1 = state_22854;
                                                                                        if (inst_22757) {
                                                                                          var statearr_22922_22986 = state_22854__$1;
                                                                                          statearr_22922_22986[1] = 19;
                                                                                        } else {
                                                                                          var statearr_22923_22987 = state_22854__$1;
                                                                                          statearr_22923_22987[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_22855 === 38) {
                                                                                          var inst_22833 = state_22854[2];
                                                                                          var state_22854__$1 = state_22854;
                                                                                          var statearr_22924_22988 = state_22854__$1;
                                                                                          statearr_22924_22988[2] = inst_22833;
                                                                                          statearr_22924_22988[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_22855 === 30) {
                                                                                            var state_22854__$1 = state_22854;
                                                                                            var statearr_22925_22989 = state_22854__$1;
                                                                                            statearr_22925_22989[2] = null;
                                                                                            statearr_22925_22989[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_22855 === 10) {
                                                                                              var inst_22736 = state_22854[13];
                                                                                              var inst_22738 = state_22854[16];
                                                                                              var inst_22744 = cljs.core._nth.call(null, inst_22736, inst_22738);
                                                                                              var inst_22745 = cljs.core.nth.call(null, inst_22744, 0, null);
                                                                                              var inst_22746 = cljs.core.nth.call(null, inst_22744, 1, null);
                                                                                              var state_22854__$1 = function() {
                                                                                                var statearr_22926 = state_22854;
                                                                                                statearr_22926[26] = inst_22745;
                                                                                                return statearr_22926;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_22746)) {
                                                                                                var statearr_22927_22990 = state_22854__$1;
                                                                                                statearr_22927_22990[1] = 13;
                                                                                              } else {
                                                                                                var statearr_22928_22991 = state_22854__$1;
                                                                                                statearr_22928_22991[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_22855 === 18) {
                                                                                                var inst_22779 = state_22854[2];
                                                                                                var state_22854__$1 = state_22854;
                                                                                                var statearr_22929_22992 = state_22854__$1;
                                                                                                statearr_22929_22992[2] = inst_22779;
                                                                                                statearr_22929_22992[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_22855 === 42) {
                                                                                                  var state_22854__$1 = state_22854;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22854__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_22855 === 37) {
                                                                                                    var inst_22813 = state_22854[25];
                                                                                                    var inst_22726 = state_22854[10];
                                                                                                    var inst_22822 = state_22854[23];
                                                                                                    var inst_22822__$1 = cljs.core.first.call(null, inst_22813);
                                                                                                    var inst_22823 = cljs.core.async.put_BANG_.call(null, inst_22822__$1, inst_22726, done);
                                                                                                    var state_22854__$1 = function() {
                                                                                                      var statearr_22930 = state_22854;
                                                                                                      statearr_22930[23] = inst_22822__$1;
                                                                                                      return statearr_22930;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_22823)) {
                                                                                                      var statearr_22931_22993 = state_22854__$1;
                                                                                                      statearr_22931_22993[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_22932_22994 = state_22854__$1;
                                                                                                      statearr_22932_22994[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_22855 === 8) {
                                                                                                      var inst_22738 = state_22854[16];
                                                                                                      var inst_22737 = state_22854[17];
                                                                                                      var inst_22740 = inst_22738 < inst_22737;
                                                                                                      var inst_22741 = inst_22740;
                                                                                                      var state_22854__$1 = state_22854;
                                                                                                      if (cljs.core.truth_(inst_22741)) {
                                                                                                        var statearr_22933_22995 = state_22854__$1;
                                                                                                        statearr_22933_22995[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_22934_22996 = state_22854__$1;
                                                                                                        statearr_22934_22996[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12747__auto___22942, cs, m, dchan, dctr, done);
        return function(switch__12682__auto__, c__12747__auto___22942, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__12683__auto__ = null;
            var state_machine__12683__auto____0 = function() {
              var statearr_22938 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_22938[0] = state_machine__12683__auto__;
              statearr_22938[1] = 1;
              return statearr_22938;
            };
            var state_machine__12683__auto____1 = function(state_22854) {
              while (true) {
                var ret_value__12684__auto__ = function() {
                  try {
                    while (true) {
                      var result__12685__auto__ = switch__12682__auto__.call(null, state_22854);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12685__auto__;
                      }
                      break;
                    }
                  } catch (e22939) {
                    if (e22939 instanceof Object) {
                      var ex__12686__auto__ = e22939;
                      var statearr_22940_22997 = state_22854;
                      statearr_22940_22997[5] = ex__12686__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22854);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e22939;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__22998 = state_22854;
                  state_22854 = G__22998;
                  continue;
                } else {
                  return ret_value__12684__auto__;
                }
                break;
              }
            };
            state_machine__12683__auto__ = function(state_22854) {
              switch(arguments.length) {
                case 0:
                  return state_machine__12683__auto____0.call(this);
                case 1:
                  return state_machine__12683__auto____1.call(this, state_22854);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
            return state_machine__12683__auto__;
          }();
        }(switch__12682__auto__, c__12747__auto___22942, cs, m, dchan, dctr, done);
      }();
      var state__12749__auto__ = function() {
        var statearr_22941 = f__12748__auto__.call(null);
        statearr_22941[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___22942;
        return statearr_22941;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
    };
  }(c__12747__auto___22942, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj23000 = {};
  return obj23000;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3541__auto__ = m;
    if (and__3541__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4180__auto__ = m == null ? null : m;
    return function() {
      var or__3553__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t23120 !== "undefined") {
    } else {
      cljs.core.async.t23120 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta23121) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta23121 = meta23121;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t23120.cljs$lang$type = true;
      cljs.core.async.t23120.cljs$lang$ctorStr = "cljs.core.async/t23120";
      cljs.core.async.t23120.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
          return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t23120");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23120.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t23120.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23120.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23120.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23120.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23120.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("mode must be one of: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.solo_modes)) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null)))));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23120.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t23120.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23120.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_23122) {
          var self__ = this;
          var _23122__$1 = this;
          return self__.meta23121;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23120.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_23122, meta23121__$1) {
          var self__ = this;
          var _23122__$1 = this;
          return new cljs.core.async.t23120(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta23121__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t23120 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t23120(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta23121) {
          return new cljs.core.async.t23120(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta23121);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t23120(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, null);
  }();
  var c__12747__auto___23239 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___23239, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__12748__auto__ = function() {
        var switch__12682__auto__ = function(c__12747__auto___23239, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_23192) {
            var state_val_23193 = state_23192[1];
            if (state_val_23193 === 7) {
              var inst_23136 = state_23192[7];
              var inst_23141 = cljs.core.apply.call(null, cljs.core.hash_map, inst_23136);
              var state_23192__$1 = state_23192;
              var statearr_23194_23240 = state_23192__$1;
              statearr_23194_23240[2] = inst_23141;
              statearr_23194_23240[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23193 === 20) {
                var inst_23151 = state_23192[8];
                var state_23192__$1 = state_23192;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23192__$1, 23, out, inst_23151);
              } else {
                if (state_val_23193 === 1) {
                  var inst_23126 = state_23192[9];
                  var inst_23126__$1 = calc_state.call(null);
                  var inst_23127 = cljs.core.seq_QMARK_.call(null, inst_23126__$1);
                  var state_23192__$1 = function() {
                    var statearr_23195 = state_23192;
                    statearr_23195[9] = inst_23126__$1;
                    return statearr_23195;
                  }();
                  if (inst_23127) {
                    var statearr_23196_23241 = state_23192__$1;
                    statearr_23196_23241[1] = 2;
                  } else {
                    var statearr_23197_23242 = state_23192__$1;
                    statearr_23197_23242[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23193 === 24) {
                    var inst_23144 = state_23192[10];
                    var inst_23136 = inst_23144;
                    var state_23192__$1 = function() {
                      var statearr_23198 = state_23192;
                      statearr_23198[7] = inst_23136;
                      return statearr_23198;
                    }();
                    var statearr_23199_23243 = state_23192__$1;
                    statearr_23199_23243[2] = null;
                    statearr_23199_23243[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23193 === 4) {
                      var inst_23126 = state_23192[9];
                      var inst_23132 = state_23192[2];
                      var inst_23133 = cljs.core.get.call(null, inst_23132, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_23134 = cljs.core.get.call(null, inst_23132, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_23135 = cljs.core.get.call(null, inst_23132, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_23136 = inst_23126;
                      var state_23192__$1 = function() {
                        var statearr_23200 = state_23192;
                        statearr_23200[7] = inst_23136;
                        statearr_23200[11] = inst_23133;
                        statearr_23200[12] = inst_23135;
                        statearr_23200[13] = inst_23134;
                        return statearr_23200;
                      }();
                      var statearr_23201_23244 = state_23192__$1;
                      statearr_23201_23244[2] = null;
                      statearr_23201_23244[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23193 === 15) {
                        var state_23192__$1 = state_23192;
                        var statearr_23202_23245 = state_23192__$1;
                        statearr_23202_23245[2] = null;
                        statearr_23202_23245[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23193 === 21) {
                          var inst_23144 = state_23192[10];
                          var inst_23136 = inst_23144;
                          var state_23192__$1 = function() {
                            var statearr_23203 = state_23192;
                            statearr_23203[7] = inst_23136;
                            return statearr_23203;
                          }();
                          var statearr_23204_23246 = state_23192__$1;
                          statearr_23204_23246[2] = null;
                          statearr_23204_23246[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23193 === 13) {
                            var inst_23188 = state_23192[2];
                            var state_23192__$1 = state_23192;
                            var statearr_23205_23247 = state_23192__$1;
                            statearr_23205_23247[2] = inst_23188;
                            statearr_23205_23247[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23193 === 22) {
                              var inst_23186 = state_23192[2];
                              var state_23192__$1 = state_23192;
                              var statearr_23206_23248 = state_23192__$1;
                              statearr_23206_23248[2] = inst_23186;
                              statearr_23206_23248[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23193 === 6) {
                                var inst_23190 = state_23192[2];
                                var state_23192__$1 = state_23192;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23192__$1, inst_23190);
                              } else {
                                if (state_val_23193 === 25) {
                                  var state_23192__$1 = state_23192;
                                  var statearr_23207_23249 = state_23192__$1;
                                  statearr_23207_23249[2] = null;
                                  statearr_23207_23249[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23193 === 17) {
                                    var inst_23166 = state_23192[14];
                                    var state_23192__$1 = state_23192;
                                    var statearr_23208_23250 = state_23192__$1;
                                    statearr_23208_23250[2] = inst_23166;
                                    statearr_23208_23250[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23193 === 3) {
                                      var inst_23126 = state_23192[9];
                                      var state_23192__$1 = state_23192;
                                      var statearr_23209_23251 = state_23192__$1;
                                      statearr_23209_23251[2] = inst_23126;
                                      statearr_23209_23251[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23193 === 12) {
                                        var inst_23152 = state_23192[15];
                                        var inst_23166 = state_23192[14];
                                        var inst_23147 = state_23192[16];
                                        var inst_23166__$1 = inst_23147.call(null, inst_23152);
                                        var state_23192__$1 = function() {
                                          var statearr_23210 = state_23192;
                                          statearr_23210[14] = inst_23166__$1;
                                          return statearr_23210;
                                        }();
                                        if (cljs.core.truth_(inst_23166__$1)) {
                                          var statearr_23211_23252 = state_23192__$1;
                                          statearr_23211_23252[1] = 17;
                                        } else {
                                          var statearr_23212_23253 = state_23192__$1;
                                          statearr_23212_23253[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_23193 === 2) {
                                          var inst_23126 = state_23192[9];
                                          var inst_23129 = cljs.core.apply.call(null, cljs.core.hash_map, inst_23126);
                                          var state_23192__$1 = state_23192;
                                          var statearr_23213_23254 = state_23192__$1;
                                          statearr_23213_23254[2] = inst_23129;
                                          statearr_23213_23254[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23193 === 23) {
                                            var inst_23177 = state_23192[2];
                                            var state_23192__$1 = state_23192;
                                            if (cljs.core.truth_(inst_23177)) {
                                              var statearr_23214_23255 = state_23192__$1;
                                              statearr_23214_23255[1] = 24;
                                            } else {
                                              var statearr_23215_23256 = state_23192__$1;
                                              statearr_23215_23256[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_23193 === 19) {
                                              var inst_23174 = state_23192[2];
                                              var state_23192__$1 = state_23192;
                                              if (cljs.core.truth_(inst_23174)) {
                                                var statearr_23216_23257 = state_23192__$1;
                                                statearr_23216_23257[1] = 20;
                                              } else {
                                                var statearr_23217_23258 = state_23192__$1;
                                                statearr_23217_23258[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_23193 === 11) {
                                                var inst_23151 = state_23192[8];
                                                var inst_23157 = inst_23151 == null;
                                                var state_23192__$1 = state_23192;
                                                if (cljs.core.truth_(inst_23157)) {
                                                  var statearr_23218_23259 = state_23192__$1;
                                                  statearr_23218_23259[1] = 14;
                                                } else {
                                                  var statearr_23219_23260 = state_23192__$1;
                                                  statearr_23219_23260[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_23193 === 9) {
                                                  var inst_23144 = state_23192[10];
                                                  var inst_23144__$1 = state_23192[2];
                                                  var inst_23145 = cljs.core.get.call(null, inst_23144__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_23146 = cljs.core.get.call(null, inst_23144__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_23147 = cljs.core.get.call(null, inst_23144__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_23192__$1 = function() {
                                                    var statearr_23220 = state_23192;
                                                    statearr_23220[10] = inst_23144__$1;
                                                    statearr_23220[16] = inst_23147;
                                                    statearr_23220[17] = inst_23146;
                                                    return statearr_23220;
                                                  }();
                                                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_23192__$1, 10, inst_23145);
                                                } else {
                                                  if (state_val_23193 === 5) {
                                                    var inst_23136 = state_23192[7];
                                                    var inst_23139 = cljs.core.seq_QMARK_.call(null, inst_23136);
                                                    var state_23192__$1 = state_23192;
                                                    if (inst_23139) {
                                                      var statearr_23221_23261 = state_23192__$1;
                                                      statearr_23221_23261[1] = 7;
                                                    } else {
                                                      var statearr_23222_23262 = state_23192__$1;
                                                      statearr_23222_23262[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_23193 === 14) {
                                                      var inst_23152 = state_23192[15];
                                                      var inst_23159 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_23152);
                                                      var state_23192__$1 = state_23192;
                                                      var statearr_23223_23263 = state_23192__$1;
                                                      statearr_23223_23263[2] = inst_23159;
                                                      statearr_23223_23263[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_23193 === 26) {
                                                        var inst_23182 = state_23192[2];
                                                        var state_23192__$1 = state_23192;
                                                        var statearr_23224_23264 = state_23192__$1;
                                                        statearr_23224_23264[2] = inst_23182;
                                                        statearr_23224_23264[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_23193 === 16) {
                                                          var inst_23162 = state_23192[2];
                                                          var inst_23163 = calc_state.call(null);
                                                          var inst_23136 = inst_23163;
                                                          var state_23192__$1 = function() {
                                                            var statearr_23225 = state_23192;
                                                            statearr_23225[18] = inst_23162;
                                                            statearr_23225[7] = inst_23136;
                                                            return statearr_23225;
                                                          }();
                                                          var statearr_23226_23265 = state_23192__$1;
                                                          statearr_23226_23265[2] = null;
                                                          statearr_23226_23265[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_23193 === 10) {
                                                            var inst_23152 = state_23192[15];
                                                            var inst_23151 = state_23192[8];
                                                            var inst_23150 = state_23192[2];
                                                            var inst_23151__$1 = cljs.core.nth.call(null, inst_23150, 0, null);
                                                            var inst_23152__$1 = cljs.core.nth.call(null, inst_23150, 1, null);
                                                            var inst_23153 = inst_23151__$1 == null;
                                                            var inst_23154 = cljs.core._EQ_.call(null, inst_23152__$1, change);
                                                            var inst_23155 = inst_23153 || inst_23154;
                                                            var state_23192__$1 = function() {
                                                              var statearr_23227 = state_23192;
                                                              statearr_23227[15] = inst_23152__$1;
                                                              statearr_23227[8] = inst_23151__$1;
                                                              return statearr_23227;
                                                            }();
                                                            if (cljs.core.truth_(inst_23155)) {
                                                              var statearr_23228_23266 = state_23192__$1;
                                                              statearr_23228_23266[1] = 11;
                                                            } else {
                                                              var statearr_23229_23267 = state_23192__$1;
                                                              statearr_23229_23267[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_23193 === 18) {
                                                              var inst_23152 = state_23192[15];
                                                              var inst_23147 = state_23192[16];
                                                              var inst_23146 = state_23192[17];
                                                              var inst_23169 = cljs.core.empty_QMARK_.call(null, inst_23147);
                                                              var inst_23170 = inst_23146.call(null, inst_23152);
                                                              var inst_23171 = cljs.core.not.call(null, inst_23170);
                                                              var inst_23172 = inst_23169 && inst_23171;
                                                              var state_23192__$1 = state_23192;
                                                              var statearr_23230_23268 = state_23192__$1;
                                                              statearr_23230_23268[2] = inst_23172;
                                                              statearr_23230_23268[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_23193 === 8) {
                                                                var inst_23136 = state_23192[7];
                                                                var state_23192__$1 = state_23192;
                                                                var statearr_23231_23269 = state_23192__$1;
                                                                statearr_23231_23269[2] = inst_23136;
                                                                statearr_23231_23269[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12747__auto___23239, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__12682__auto__, c__12747__auto___23239, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__12683__auto__ = null;
            var state_machine__12683__auto____0 = function() {
              var statearr_23235 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_23235[0] = state_machine__12683__auto__;
              statearr_23235[1] = 1;
              return statearr_23235;
            };
            var state_machine__12683__auto____1 = function(state_23192) {
              while (true) {
                var ret_value__12684__auto__ = function() {
                  try {
                    while (true) {
                      var result__12685__auto__ = switch__12682__auto__.call(null, state_23192);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12685__auto__;
                      }
                      break;
                    }
                  } catch (e23236) {
                    if (e23236 instanceof Object) {
                      var ex__12686__auto__ = e23236;
                      var statearr_23237_23270 = state_23192;
                      statearr_23237_23270[5] = ex__12686__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23192);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23236;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__23271 = state_23192;
                  state_23192 = G__23271;
                  continue;
                } else {
                  return ret_value__12684__auto__;
                }
                break;
              }
            };
            state_machine__12683__auto__ = function(state_23192) {
              switch(arguments.length) {
                case 0:
                  return state_machine__12683__auto____0.call(this);
                case 1:
                  return state_machine__12683__auto____1.call(this, state_23192);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
            return state_machine__12683__auto__;
          }();
        }(switch__12682__auto__, c__12747__auto___23239, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__12749__auto__ = function() {
        var statearr_23238 = f__12748__auto__.call(null);
        statearr_23238[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___23239;
        return statearr_23238;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
    };
  }(c__12747__auto___23239, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj23273 = {};
  return obj23273;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3541__auto__ = p;
    if (and__3541__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4180__auto__ = p == null ? null : p;
    return function() {
      var or__3553__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3541__auto__ = p;
    if (and__3541__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3541__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4180__auto__ = p == null ? null : p;
    return function() {
      var or__3553__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4180__auto__)];
      if (or__3553__auto__) {
        return or__3553__auto__;
      } else {
        var or__3553__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3553__auto____$1) {
          return or__3553__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3541__auto__ = p;
      if (and__3541__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4180__auto__ = p == null ? null : p;
      return function() {
        var or__3553__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3541__auto__ = p;
      if (and__3541__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3541__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4180__auto__ = p == null ? null : p;
      return function() {
        var or__3553__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4180__auto__)];
        if (or__3553__auto__) {
          return or__3553__auto__;
        } else {
          var or__3553__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3553__auto____$1) {
            return or__3553__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3553__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3553__auto__)) {
          return or__3553__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3553__auto__, mults) {
            return function(p1__23274_SHARP_) {
              if (cljs.core.truth_(p1__23274_SHARP_.call(null, topic))) {
                return p1__23274_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__23274_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3553__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t23397 !== "undefined") {
      } else {
        cljs.core.async.t23397 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta23398) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta23398 = meta23398;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t23397.cljs$lang$type = true;
        cljs.core.async.t23397.cljs$lang$ctorStr = "cljs.core.async/t23397";
        cljs.core.async.t23397.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
            return cljs.core._write.call(null, writer__4121__auto__, "cljs.core.async/t23397");
          };
        }(mults, ensure_mult);
        cljs.core.async.t23397.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t23397.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t23397.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t23397.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t23397.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t23397.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t23397.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t23397.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_23399) {
            var self__ = this;
            var _23399__$1 = this;
            return self__.meta23398;
          };
        }(mults, ensure_mult);
        cljs.core.async.t23397.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_23399, meta23398__$1) {
            var self__ = this;
            var _23399__$1 = this;
            return new cljs.core.async.t23397(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta23398__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t23397 = function(mults, ensure_mult) {
          return function __GT_t23397(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta23398) {
            return new cljs.core.async.t23397(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta23398);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t23397(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__12747__auto___23519 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___23519, mults, ensure_mult, p) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___23519, mults, ensure_mult, p) {
            return function(state_23471) {
              var state_val_23472 = state_23471[1];
              if (state_val_23472 === 7) {
                var inst_23467 = state_23471[2];
                var state_23471__$1 = state_23471;
                var statearr_23473_23520 = state_23471__$1;
                statearr_23473_23520[2] = inst_23467;
                statearr_23473_23520[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23472 === 20) {
                  var state_23471__$1 = state_23471;
                  var statearr_23474_23521 = state_23471__$1;
                  statearr_23474_23521[2] = null;
                  statearr_23474_23521[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23472 === 1) {
                    var state_23471__$1 = state_23471;
                    var statearr_23475_23522 = state_23471__$1;
                    statearr_23475_23522[2] = null;
                    statearr_23475_23522[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23472 === 24) {
                      var inst_23450 = state_23471[7];
                      var inst_23459 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_23450);
                      var state_23471__$1 = state_23471;
                      var statearr_23476_23523 = state_23471__$1;
                      statearr_23476_23523[2] = inst_23459;
                      statearr_23476_23523[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23472 === 4) {
                        var inst_23402 = state_23471[8];
                        var inst_23402__$1 = state_23471[2];
                        var inst_23403 = inst_23402__$1 == null;
                        var state_23471__$1 = function() {
                          var statearr_23477 = state_23471;
                          statearr_23477[8] = inst_23402__$1;
                          return statearr_23477;
                        }();
                        if (cljs.core.truth_(inst_23403)) {
                          var statearr_23478_23524 = state_23471__$1;
                          statearr_23478_23524[1] = 5;
                        } else {
                          var statearr_23479_23525 = state_23471__$1;
                          statearr_23479_23525[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23472 === 15) {
                          var inst_23444 = state_23471[2];
                          var state_23471__$1 = state_23471;
                          var statearr_23480_23526 = state_23471__$1;
                          statearr_23480_23526[2] = inst_23444;
                          statearr_23480_23526[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23472 === 21) {
                            var inst_23464 = state_23471[2];
                            var state_23471__$1 = function() {
                              var statearr_23481 = state_23471;
                              statearr_23481[9] = inst_23464;
                              return statearr_23481;
                            }();
                            var statearr_23482_23527 = state_23471__$1;
                            statearr_23482_23527[2] = null;
                            statearr_23482_23527[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23472 === 13) {
                              var inst_23426 = state_23471[10];
                              var inst_23428 = cljs.core.chunked_seq_QMARK_.call(null, inst_23426);
                              var state_23471__$1 = state_23471;
                              if (inst_23428) {
                                var statearr_23483_23528 = state_23471__$1;
                                statearr_23483_23528[1] = 16;
                              } else {
                                var statearr_23484_23529 = state_23471__$1;
                                statearr_23484_23529[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23472 === 22) {
                                var inst_23456 = state_23471[2];
                                var state_23471__$1 = state_23471;
                                if (cljs.core.truth_(inst_23456)) {
                                  var statearr_23485_23530 = state_23471__$1;
                                  statearr_23485_23530[1] = 23;
                                } else {
                                  var statearr_23486_23531 = state_23471__$1;
                                  statearr_23486_23531[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23472 === 6) {
                                  var inst_23402 = state_23471[8];
                                  var inst_23450 = state_23471[7];
                                  var inst_23452 = state_23471[11];
                                  var inst_23450__$1 = topic_fn.call(null, inst_23402);
                                  var inst_23451 = cljs.core.deref.call(null, mults);
                                  var inst_23452__$1 = cljs.core.get.call(null, inst_23451, inst_23450__$1);
                                  var state_23471__$1 = function() {
                                    var statearr_23487 = state_23471;
                                    statearr_23487[7] = inst_23450__$1;
                                    statearr_23487[11] = inst_23452__$1;
                                    return statearr_23487;
                                  }();
                                  if (cljs.core.truth_(inst_23452__$1)) {
                                    var statearr_23488_23532 = state_23471__$1;
                                    statearr_23488_23532[1] = 19;
                                  } else {
                                    var statearr_23489_23533 = state_23471__$1;
                                    statearr_23489_23533[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23472 === 25) {
                                    var inst_23461 = state_23471[2];
                                    var state_23471__$1 = state_23471;
                                    var statearr_23490_23534 = state_23471__$1;
                                    statearr_23490_23534[2] = inst_23461;
                                    statearr_23490_23534[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23472 === 17) {
                                      var inst_23426 = state_23471[10];
                                      var inst_23435 = cljs.core.first.call(null, inst_23426);
                                      var inst_23436 = cljs.core.async.muxch_STAR_.call(null, inst_23435);
                                      var inst_23437 = cljs.core.async.close_BANG_.call(null, inst_23436);
                                      var inst_23438 = cljs.core.next.call(null, inst_23426);
                                      var inst_23412 = inst_23438;
                                      var inst_23413 = null;
                                      var inst_23414 = 0;
                                      var inst_23415 = 0;
                                      var state_23471__$1 = function() {
                                        var statearr_23491 = state_23471;
                                        statearr_23491[12] = inst_23437;
                                        statearr_23491[13] = inst_23415;
                                        statearr_23491[14] = inst_23413;
                                        statearr_23491[15] = inst_23412;
                                        statearr_23491[16] = inst_23414;
                                        return statearr_23491;
                                      }();
                                      var statearr_23492_23535 = state_23471__$1;
                                      statearr_23492_23535[2] = null;
                                      statearr_23492_23535[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23472 === 3) {
                                        var inst_23469 = state_23471[2];
                                        var state_23471__$1 = state_23471;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23471__$1, inst_23469);
                                      } else {
                                        if (state_val_23472 === 12) {
                                          var inst_23446 = state_23471[2];
                                          var state_23471__$1 = state_23471;
                                          var statearr_23493_23536 = state_23471__$1;
                                          statearr_23493_23536[2] = inst_23446;
                                          statearr_23493_23536[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23472 === 2) {
                                            var state_23471__$1 = state_23471;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23471__$1, 4, ch);
                                          } else {
                                            if (state_val_23472 === 23) {
                                              var state_23471__$1 = state_23471;
                                              var statearr_23494_23537 = state_23471__$1;
                                              statearr_23494_23537[2] = null;
                                              statearr_23494_23537[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_23472 === 19) {
                                                var inst_23402 = state_23471[8];
                                                var inst_23452 = state_23471[11];
                                                var inst_23454 = cljs.core.async.muxch_STAR_.call(null, inst_23452);
                                                var state_23471__$1 = state_23471;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23471__$1, 22, inst_23454, inst_23402);
                                              } else {
                                                if (state_val_23472 === 11) {
                                                  var inst_23426 = state_23471[10];
                                                  var inst_23412 = state_23471[15];
                                                  var inst_23426__$1 = cljs.core.seq.call(null, inst_23412);
                                                  var state_23471__$1 = function() {
                                                    var statearr_23495 = state_23471;
                                                    statearr_23495[10] = inst_23426__$1;
                                                    return statearr_23495;
                                                  }();
                                                  if (inst_23426__$1) {
                                                    var statearr_23496_23538 = state_23471__$1;
                                                    statearr_23496_23538[1] = 13;
                                                  } else {
                                                    var statearr_23497_23539 = state_23471__$1;
                                                    statearr_23497_23539[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_23472 === 9) {
                                                    var inst_23448 = state_23471[2];
                                                    var state_23471__$1 = state_23471;
                                                    var statearr_23498_23540 = state_23471__$1;
                                                    statearr_23498_23540[2] = inst_23448;
                                                    statearr_23498_23540[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_23472 === 5) {
                                                      var inst_23409 = cljs.core.deref.call(null, mults);
                                                      var inst_23410 = cljs.core.vals.call(null, inst_23409);
                                                      var inst_23411 = cljs.core.seq.call(null, inst_23410);
                                                      var inst_23412 = inst_23411;
                                                      var inst_23413 = null;
                                                      var inst_23414 = 0;
                                                      var inst_23415 = 0;
                                                      var state_23471__$1 = function() {
                                                        var statearr_23499 = state_23471;
                                                        statearr_23499[13] = inst_23415;
                                                        statearr_23499[14] = inst_23413;
                                                        statearr_23499[15] = inst_23412;
                                                        statearr_23499[16] = inst_23414;
                                                        return statearr_23499;
                                                      }();
                                                      var statearr_23500_23541 = state_23471__$1;
                                                      statearr_23500_23541[2] = null;
                                                      statearr_23500_23541[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_23472 === 14) {
                                                        var state_23471__$1 = state_23471;
                                                        var statearr_23504_23542 = state_23471__$1;
                                                        statearr_23504_23542[2] = null;
                                                        statearr_23504_23542[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_23472 === 16) {
                                                          var inst_23426 = state_23471[10];
                                                          var inst_23430 = cljs.core.chunk_first.call(null, inst_23426);
                                                          var inst_23431 = cljs.core.chunk_rest.call(null, inst_23426);
                                                          var inst_23432 = cljs.core.count.call(null, inst_23430);
                                                          var inst_23412 = inst_23431;
                                                          var inst_23413 = inst_23430;
                                                          var inst_23414 = inst_23432;
                                                          var inst_23415 = 0;
                                                          var state_23471__$1 = function() {
                                                            var statearr_23505 = state_23471;
                                                            statearr_23505[13] = inst_23415;
                                                            statearr_23505[14] = inst_23413;
                                                            statearr_23505[15] = inst_23412;
                                                            statearr_23505[16] = inst_23414;
                                                            return statearr_23505;
                                                          }();
                                                          var statearr_23506_23543 = state_23471__$1;
                                                          statearr_23506_23543[2] = null;
                                                          statearr_23506_23543[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_23472 === 10) {
                                                            var inst_23415 = state_23471[13];
                                                            var inst_23413 = state_23471[14];
                                                            var inst_23412 = state_23471[15];
                                                            var inst_23414 = state_23471[16];
                                                            var inst_23420 = cljs.core._nth.call(null, inst_23413, inst_23415);
                                                            var inst_23421 = cljs.core.async.muxch_STAR_.call(null, inst_23420);
                                                            var inst_23422 = cljs.core.async.close_BANG_.call(null, inst_23421);
                                                            var inst_23423 = inst_23415 + 1;
                                                            var tmp23501 = inst_23413;
                                                            var tmp23502 = inst_23412;
                                                            var tmp23503 = inst_23414;
                                                            var inst_23412__$1 = tmp23502;
                                                            var inst_23413__$1 = tmp23501;
                                                            var inst_23414__$1 = tmp23503;
                                                            var inst_23415__$1 = inst_23423;
                                                            var state_23471__$1 = function() {
                                                              var statearr_23507 = state_23471;
                                                              statearr_23507[13] = inst_23415__$1;
                                                              statearr_23507[14] = inst_23413__$1;
                                                              statearr_23507[15] = inst_23412__$1;
                                                              statearr_23507[17] = inst_23422;
                                                              statearr_23507[16] = inst_23414__$1;
                                                              return statearr_23507;
                                                            }();
                                                            var statearr_23508_23544 = state_23471__$1;
                                                            statearr_23508_23544[2] = null;
                                                            statearr_23508_23544[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_23472 === 18) {
                                                              var inst_23441 = state_23471[2];
                                                              var state_23471__$1 = state_23471;
                                                              var statearr_23509_23545 = state_23471__$1;
                                                              statearr_23509_23545[2] = inst_23441;
                                                              statearr_23509_23545[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_23472 === 8) {
                                                                var inst_23415 = state_23471[13];
                                                                var inst_23414 = state_23471[16];
                                                                var inst_23417 = inst_23415 < inst_23414;
                                                                var inst_23418 = inst_23417;
                                                                var state_23471__$1 = state_23471;
                                                                if (cljs.core.truth_(inst_23418)) {
                                                                  var statearr_23510_23546 = state_23471__$1;
                                                                  statearr_23510_23546[1] = 10;
                                                                } else {
                                                                  var statearr_23511_23547 = state_23471__$1;
                                                                  statearr_23511_23547[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___23519, mults, ensure_mult, p);
          return function(switch__12682__auto__, c__12747__auto___23519, mults, ensure_mult, p) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_23515 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_23515[0] = state_machine__12683__auto__;
                statearr_23515[1] = 1;
                return statearr_23515;
              };
              var state_machine__12683__auto____1 = function(state_23471) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_23471);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e23516) {
                      if (e23516 instanceof Object) {
                        var ex__12686__auto__ = e23516;
                        var statearr_23517_23548 = state_23471;
                        statearr_23517_23548[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23471);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e23516;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__23549 = state_23471;
                    state_23471 = G__23549;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_23471) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_23471);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___23519, mults, ensure_mult, p);
        }();
        var state__12749__auto__ = function() {
          var statearr_23518 = f__12748__auto__.call(null);
          statearr_23518[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___23519;
          return statearr_23518;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___23519, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__12747__auto___23686 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___23686, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___23686, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_23656) {
              var state_val_23657 = state_23656[1];
              if (state_val_23657 === 7) {
                var state_23656__$1 = state_23656;
                var statearr_23658_23687 = state_23656__$1;
                statearr_23658_23687[2] = null;
                statearr_23658_23687[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23657 === 1) {
                  var state_23656__$1 = state_23656;
                  var statearr_23659_23688 = state_23656__$1;
                  statearr_23659_23688[2] = null;
                  statearr_23659_23688[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23657 === 4) {
                    var inst_23620 = state_23656[7];
                    var inst_23622 = inst_23620 < cnt;
                    var state_23656__$1 = state_23656;
                    if (cljs.core.truth_(inst_23622)) {
                      var statearr_23660_23689 = state_23656__$1;
                      statearr_23660_23689[1] = 6;
                    } else {
                      var statearr_23661_23690 = state_23656__$1;
                      statearr_23661_23690[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23657 === 15) {
                      var inst_23652 = state_23656[2];
                      var state_23656__$1 = state_23656;
                      var statearr_23662_23691 = state_23656__$1;
                      statearr_23662_23691[2] = inst_23652;
                      statearr_23662_23691[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23657 === 13) {
                        var inst_23645 = cljs.core.async.close_BANG_.call(null, out);
                        var state_23656__$1 = state_23656;
                        var statearr_23663_23692 = state_23656__$1;
                        statearr_23663_23692[2] = inst_23645;
                        statearr_23663_23692[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23657 === 6) {
                          var state_23656__$1 = state_23656;
                          var statearr_23664_23693 = state_23656__$1;
                          statearr_23664_23693[2] = null;
                          statearr_23664_23693[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23657 === 3) {
                            var inst_23654 = state_23656[2];
                            var state_23656__$1 = state_23656;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23656__$1, inst_23654);
                          } else {
                            if (state_val_23657 === 12) {
                              var inst_23642 = state_23656[8];
                              var inst_23642__$1 = state_23656[2];
                              var inst_23643 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_23642__$1);
                              var state_23656__$1 = function() {
                                var statearr_23665 = state_23656;
                                statearr_23665[8] = inst_23642__$1;
                                return statearr_23665;
                              }();
                              if (cljs.core.truth_(inst_23643)) {
                                var statearr_23666_23694 = state_23656__$1;
                                statearr_23666_23694[1] = 13;
                              } else {
                                var statearr_23667_23695 = state_23656__$1;
                                statearr_23667_23695[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23657 === 2) {
                                var inst_23619 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_23620 = 0;
                                var state_23656__$1 = function() {
                                  var statearr_23668 = state_23656;
                                  statearr_23668[9] = inst_23619;
                                  statearr_23668[7] = inst_23620;
                                  return statearr_23668;
                                }();
                                var statearr_23669_23696 = state_23656__$1;
                                statearr_23669_23696[2] = null;
                                statearr_23669_23696[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23657 === 11) {
                                  var inst_23620 = state_23656[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_23656, 10, Object, null, 9);
                                  var inst_23629 = chs__$1.call(null, inst_23620);
                                  var inst_23630 = done.call(null, inst_23620);
                                  var inst_23631 = cljs.core.async.take_BANG_.call(null, inst_23629, inst_23630);
                                  var state_23656__$1 = state_23656;
                                  var statearr_23670_23697 = state_23656__$1;
                                  statearr_23670_23697[2] = inst_23631;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23656__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23657 === 9) {
                                    var inst_23620 = state_23656[7];
                                    var inst_23633 = state_23656[2];
                                    var inst_23634 = inst_23620 + 1;
                                    var inst_23620__$1 = inst_23634;
                                    var state_23656__$1 = function() {
                                      var statearr_23671 = state_23656;
                                      statearr_23671[10] = inst_23633;
                                      statearr_23671[7] = inst_23620__$1;
                                      return statearr_23671;
                                    }();
                                    var statearr_23672_23698 = state_23656__$1;
                                    statearr_23672_23698[2] = null;
                                    statearr_23672_23698[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23657 === 5) {
                                      var inst_23640 = state_23656[2];
                                      var state_23656__$1 = function() {
                                        var statearr_23673 = state_23656;
                                        statearr_23673[11] = inst_23640;
                                        return statearr_23673;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23656__$1, 12, dchan);
                                    } else {
                                      if (state_val_23657 === 14) {
                                        var inst_23642 = state_23656[8];
                                        var inst_23647 = cljs.core.apply.call(null, f, inst_23642);
                                        var state_23656__$1 = state_23656;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23656__$1, 16, out, inst_23647);
                                      } else {
                                        if (state_val_23657 === 16) {
                                          var inst_23649 = state_23656[2];
                                          var state_23656__$1 = function() {
                                            var statearr_23674 = state_23656;
                                            statearr_23674[12] = inst_23649;
                                            return statearr_23674;
                                          }();
                                          var statearr_23675_23699 = state_23656__$1;
                                          statearr_23675_23699[2] = null;
                                          statearr_23675_23699[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23657 === 10) {
                                            var inst_23624 = state_23656[2];
                                            var inst_23625 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_23656__$1 = function() {
                                              var statearr_23676 = state_23656;
                                              statearr_23676[13] = inst_23624;
                                              return statearr_23676;
                                            }();
                                            var statearr_23677_23700 = state_23656__$1;
                                            statearr_23677_23700[2] = inst_23625;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23656__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_23657 === 8) {
                                              var inst_23638 = state_23656[2];
                                              var state_23656__$1 = state_23656;
                                              var statearr_23678_23701 = state_23656__$1;
                                              statearr_23678_23701[2] = inst_23638;
                                              statearr_23678_23701[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___23686, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__12682__auto__, c__12747__auto___23686, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_23682 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_23682[0] = state_machine__12683__auto__;
                statearr_23682[1] = 1;
                return statearr_23682;
              };
              var state_machine__12683__auto____1 = function(state_23656) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_23656);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e23683) {
                      if (e23683 instanceof Object) {
                        var ex__12686__auto__ = e23683;
                        var statearr_23684_23702 = state_23656;
                        statearr_23684_23702[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23656);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e23683;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__23703 = state_23656;
                    state_23656 = G__23703;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_23656) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_23656);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___23686, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__12749__auto__ = function() {
          var statearr_23685 = f__12748__auto__.call(null);
          statearr_23685[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___23686;
          return statearr_23685;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___23686, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__12747__auto___23811 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___23811, out) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___23811, out) {
            return function(state_23787) {
              var state_val_23788 = state_23787[1];
              if (state_val_23788 === 7) {
                var inst_23766 = state_23787[7];
                var inst_23767 = state_23787[8];
                var inst_23766__$1 = state_23787[2];
                var inst_23767__$1 = cljs.core.nth.call(null, inst_23766__$1, 0, null);
                var inst_23768 = cljs.core.nth.call(null, inst_23766__$1, 1, null);
                var inst_23769 = inst_23767__$1 == null;
                var state_23787__$1 = function() {
                  var statearr_23789 = state_23787;
                  statearr_23789[7] = inst_23766__$1;
                  statearr_23789[8] = inst_23767__$1;
                  statearr_23789[9] = inst_23768;
                  return statearr_23789;
                }();
                if (cljs.core.truth_(inst_23769)) {
                  var statearr_23790_23812 = state_23787__$1;
                  statearr_23790_23812[1] = 8;
                } else {
                  var statearr_23791_23813 = state_23787__$1;
                  statearr_23791_23813[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23788 === 1) {
                  var inst_23758 = cljs.core.vec.call(null, chs);
                  var inst_23759 = inst_23758;
                  var state_23787__$1 = function() {
                    var statearr_23792 = state_23787;
                    statearr_23792[10] = inst_23759;
                    return statearr_23792;
                  }();
                  var statearr_23793_23814 = state_23787__$1;
                  statearr_23793_23814[2] = null;
                  statearr_23793_23814[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23788 === 4) {
                    var inst_23759 = state_23787[10];
                    var state_23787__$1 = state_23787;
                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_23787__$1, 7, inst_23759);
                  } else {
                    if (state_val_23788 === 6) {
                      var inst_23783 = state_23787[2];
                      var state_23787__$1 = state_23787;
                      var statearr_23794_23815 = state_23787__$1;
                      statearr_23794_23815[2] = inst_23783;
                      statearr_23794_23815[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23788 === 3) {
                        var inst_23785 = state_23787[2];
                        var state_23787__$1 = state_23787;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23787__$1, inst_23785);
                      } else {
                        if (state_val_23788 === 2) {
                          var inst_23759 = state_23787[10];
                          var inst_23761 = cljs.core.count.call(null, inst_23759);
                          var inst_23762 = inst_23761 > 0;
                          var state_23787__$1 = state_23787;
                          if (cljs.core.truth_(inst_23762)) {
                            var statearr_23796_23816 = state_23787__$1;
                            statearr_23796_23816[1] = 4;
                          } else {
                            var statearr_23797_23817 = state_23787__$1;
                            statearr_23797_23817[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23788 === 11) {
                            var inst_23759 = state_23787[10];
                            var inst_23776 = state_23787[2];
                            var tmp23795 = inst_23759;
                            var inst_23759__$1 = tmp23795;
                            var state_23787__$1 = function() {
                              var statearr_23798 = state_23787;
                              statearr_23798[10] = inst_23759__$1;
                              statearr_23798[11] = inst_23776;
                              return statearr_23798;
                            }();
                            var statearr_23799_23818 = state_23787__$1;
                            statearr_23799_23818[2] = null;
                            statearr_23799_23818[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23788 === 9) {
                              var inst_23767 = state_23787[8];
                              var state_23787__$1 = state_23787;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23787__$1, 11, out, inst_23767);
                            } else {
                              if (state_val_23788 === 5) {
                                var inst_23781 = cljs.core.async.close_BANG_.call(null, out);
                                var state_23787__$1 = state_23787;
                                var statearr_23800_23819 = state_23787__$1;
                                statearr_23800_23819[2] = inst_23781;
                                statearr_23800_23819[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23788 === 10) {
                                  var inst_23779 = state_23787[2];
                                  var state_23787__$1 = state_23787;
                                  var statearr_23801_23820 = state_23787__$1;
                                  statearr_23801_23820[2] = inst_23779;
                                  statearr_23801_23820[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23788 === 8) {
                                    var inst_23766 = state_23787[7];
                                    var inst_23767 = state_23787[8];
                                    var inst_23759 = state_23787[10];
                                    var inst_23768 = state_23787[9];
                                    var inst_23771 = function() {
                                      var c = inst_23768;
                                      var v = inst_23767;
                                      var vec__23764 = inst_23766;
                                      var cs = inst_23759;
                                      return function(c, v, vec__23764, cs, inst_23766, inst_23767, inst_23759, inst_23768, state_val_23788, c__12747__auto___23811, out) {
                                        return function(p1__23704_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__23704_SHARP_);
                                        };
                                      }(c, v, vec__23764, cs, inst_23766, inst_23767, inst_23759, inst_23768, state_val_23788, c__12747__auto___23811, out);
                                    }();
                                    var inst_23772 = cljs.core.filterv.call(null, inst_23771, inst_23759);
                                    var inst_23759__$1 = inst_23772;
                                    var state_23787__$1 = function() {
                                      var statearr_23802 = state_23787;
                                      statearr_23802[10] = inst_23759__$1;
                                      return statearr_23802;
                                    }();
                                    var statearr_23803_23821 = state_23787__$1;
                                    statearr_23803_23821[2] = null;
                                    statearr_23803_23821[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___23811, out);
          return function(switch__12682__auto__, c__12747__auto___23811, out) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_23807 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_23807[0] = state_machine__12683__auto__;
                statearr_23807[1] = 1;
                return statearr_23807;
              };
              var state_machine__12683__auto____1 = function(state_23787) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_23787);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e23808) {
                      if (e23808 instanceof Object) {
                        var ex__12686__auto__ = e23808;
                        var statearr_23809_23822 = state_23787;
                        statearr_23809_23822[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23787);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e23808;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__23823 = state_23787;
                    state_23787 = G__23823;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_23787) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_23787);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___23811, out);
        }();
        var state__12749__auto__ = function() {
          var statearr_23810 = f__12748__auto__.call(null);
          statearr_23810[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___23811;
          return statearr_23810;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___23811, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__12747__auto___23916 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___23916, out) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___23916, out) {
            return function(state_23893) {
              var state_val_23894 = state_23893[1];
              if (state_val_23894 === 7) {
                var inst_23875 = state_23893[7];
                var inst_23875__$1 = state_23893[2];
                var inst_23876 = inst_23875__$1 == null;
                var inst_23877 = cljs.core.not.call(null, inst_23876);
                var state_23893__$1 = function() {
                  var statearr_23895 = state_23893;
                  statearr_23895[7] = inst_23875__$1;
                  return statearr_23895;
                }();
                if (inst_23877) {
                  var statearr_23896_23917 = state_23893__$1;
                  statearr_23896_23917[1] = 8;
                } else {
                  var statearr_23897_23918 = state_23893__$1;
                  statearr_23897_23918[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23894 === 1) {
                  var inst_23870 = 0;
                  var state_23893__$1 = function() {
                    var statearr_23898 = state_23893;
                    statearr_23898[8] = inst_23870;
                    return statearr_23898;
                  }();
                  var statearr_23899_23919 = state_23893__$1;
                  statearr_23899_23919[2] = null;
                  statearr_23899_23919[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23894 === 4) {
                    var state_23893__$1 = state_23893;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23893__$1, 7, ch);
                  } else {
                    if (state_val_23894 === 6) {
                      var inst_23888 = state_23893[2];
                      var state_23893__$1 = state_23893;
                      var statearr_23900_23920 = state_23893__$1;
                      statearr_23900_23920[2] = inst_23888;
                      statearr_23900_23920[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23894 === 3) {
                        var inst_23890 = state_23893[2];
                        var inst_23891 = cljs.core.async.close_BANG_.call(null, out);
                        var state_23893__$1 = function() {
                          var statearr_23901 = state_23893;
                          statearr_23901[9] = inst_23890;
                          return statearr_23901;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23893__$1, inst_23891);
                      } else {
                        if (state_val_23894 === 2) {
                          var inst_23870 = state_23893[8];
                          var inst_23872 = inst_23870 < n;
                          var state_23893__$1 = state_23893;
                          if (cljs.core.truth_(inst_23872)) {
                            var statearr_23902_23921 = state_23893__$1;
                            statearr_23902_23921[1] = 4;
                          } else {
                            var statearr_23903_23922 = state_23893__$1;
                            statearr_23903_23922[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23894 === 11) {
                            var inst_23870 = state_23893[8];
                            var inst_23880 = state_23893[2];
                            var inst_23881 = inst_23870 + 1;
                            var inst_23870__$1 = inst_23881;
                            var state_23893__$1 = function() {
                              var statearr_23904 = state_23893;
                              statearr_23904[10] = inst_23880;
                              statearr_23904[8] = inst_23870__$1;
                              return statearr_23904;
                            }();
                            var statearr_23905_23923 = state_23893__$1;
                            statearr_23905_23923[2] = null;
                            statearr_23905_23923[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23894 === 9) {
                              var state_23893__$1 = state_23893;
                              var statearr_23906_23924 = state_23893__$1;
                              statearr_23906_23924[2] = null;
                              statearr_23906_23924[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23894 === 5) {
                                var state_23893__$1 = state_23893;
                                var statearr_23907_23925 = state_23893__$1;
                                statearr_23907_23925[2] = null;
                                statearr_23907_23925[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23894 === 10) {
                                  var inst_23885 = state_23893[2];
                                  var state_23893__$1 = state_23893;
                                  var statearr_23908_23926 = state_23893__$1;
                                  statearr_23908_23926[2] = inst_23885;
                                  statearr_23908_23926[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23894 === 8) {
                                    var inst_23875 = state_23893[7];
                                    var state_23893__$1 = state_23893;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23893__$1, 11, out, inst_23875);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___23916, out);
          return function(switch__12682__auto__, c__12747__auto___23916, out) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_23912 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_23912[0] = state_machine__12683__auto__;
                statearr_23912[1] = 1;
                return statearr_23912;
              };
              var state_machine__12683__auto____1 = function(state_23893) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_23893);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e23913) {
                      if (e23913 instanceof Object) {
                        var ex__12686__auto__ = e23913;
                        var statearr_23914_23927 = state_23893;
                        statearr_23914_23927[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23893);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e23913;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__23928 = state_23893;
                    state_23893 = G__23928;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_23893) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_23893);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___23916, out);
        }();
        var state__12749__auto__ = function() {
          var statearr_23915 = f__12748__auto__.call(null);
          statearr_23915[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___23916;
          return statearr_23915;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___23916, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__12747__auto___24025 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___24025, out) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___24025, out) {
            return function(state_24000) {
              var state_val_24001 = state_24000[1];
              if (state_val_24001 === 7) {
                var inst_23995 = state_24000[2];
                var state_24000__$1 = state_24000;
                var statearr_24002_24026 = state_24000__$1;
                statearr_24002_24026[2] = inst_23995;
                statearr_24002_24026[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24001 === 1) {
                  var inst_23977 = null;
                  var state_24000__$1 = function() {
                    var statearr_24003 = state_24000;
                    statearr_24003[7] = inst_23977;
                    return statearr_24003;
                  }();
                  var statearr_24004_24027 = state_24000__$1;
                  statearr_24004_24027[2] = null;
                  statearr_24004_24027[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24001 === 4) {
                    var inst_23980 = state_24000[8];
                    var inst_23980__$1 = state_24000[2];
                    var inst_23981 = inst_23980__$1 == null;
                    var inst_23982 = cljs.core.not.call(null, inst_23981);
                    var state_24000__$1 = function() {
                      var statearr_24005 = state_24000;
                      statearr_24005[8] = inst_23980__$1;
                      return statearr_24005;
                    }();
                    if (inst_23982) {
                      var statearr_24006_24028 = state_24000__$1;
                      statearr_24006_24028[1] = 5;
                    } else {
                      var statearr_24007_24029 = state_24000__$1;
                      statearr_24007_24029[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_24001 === 6) {
                      var state_24000__$1 = state_24000;
                      var statearr_24008_24030 = state_24000__$1;
                      statearr_24008_24030[2] = null;
                      statearr_24008_24030[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24001 === 3) {
                        var inst_23997 = state_24000[2];
                        var inst_23998 = cljs.core.async.close_BANG_.call(null, out);
                        var state_24000__$1 = function() {
                          var statearr_24009 = state_24000;
                          statearr_24009[9] = inst_23997;
                          return statearr_24009;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24000__$1, inst_23998);
                      } else {
                        if (state_val_24001 === 2) {
                          var state_24000__$1 = state_24000;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24000__$1, 4, ch);
                        } else {
                          if (state_val_24001 === 11) {
                            var inst_23980 = state_24000[8];
                            var inst_23989 = state_24000[2];
                            var inst_23977 = inst_23980;
                            var state_24000__$1 = function() {
                              var statearr_24010 = state_24000;
                              statearr_24010[7] = inst_23977;
                              statearr_24010[10] = inst_23989;
                              return statearr_24010;
                            }();
                            var statearr_24011_24031 = state_24000__$1;
                            statearr_24011_24031[2] = null;
                            statearr_24011_24031[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_24001 === 9) {
                              var inst_23980 = state_24000[8];
                              var state_24000__$1 = state_24000;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24000__$1, 11, out, inst_23980);
                            } else {
                              if (state_val_24001 === 5) {
                                var inst_23980 = state_24000[8];
                                var inst_23977 = state_24000[7];
                                var inst_23984 = cljs.core._EQ_.call(null, inst_23980, inst_23977);
                                var state_24000__$1 = state_24000;
                                if (inst_23984) {
                                  var statearr_24013_24032 = state_24000__$1;
                                  statearr_24013_24032[1] = 8;
                                } else {
                                  var statearr_24014_24033 = state_24000__$1;
                                  statearr_24014_24033[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_24001 === 10) {
                                  var inst_23992 = state_24000[2];
                                  var state_24000__$1 = state_24000;
                                  var statearr_24015_24034 = state_24000__$1;
                                  statearr_24015_24034[2] = inst_23992;
                                  statearr_24015_24034[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_24001 === 8) {
                                    var inst_23977 = state_24000[7];
                                    var tmp24012 = inst_23977;
                                    var inst_23977__$1 = tmp24012;
                                    var state_24000__$1 = function() {
                                      var statearr_24016 = state_24000;
                                      statearr_24016[7] = inst_23977__$1;
                                      return statearr_24016;
                                    }();
                                    var statearr_24017_24035 = state_24000__$1;
                                    statearr_24017_24035[2] = null;
                                    statearr_24017_24035[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___24025, out);
          return function(switch__12682__auto__, c__12747__auto___24025, out) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_24021 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_24021[0] = state_machine__12683__auto__;
                statearr_24021[1] = 1;
                return statearr_24021;
              };
              var state_machine__12683__auto____1 = function(state_24000) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_24000);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e24022) {
                      if (e24022 instanceof Object) {
                        var ex__12686__auto__ = e24022;
                        var statearr_24023_24036 = state_24000;
                        statearr_24023_24036[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24000);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e24022;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__24037 = state_24000;
                    state_24000 = G__24037;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_24000) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_24000);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___24025, out);
        }();
        var state__12749__auto__ = function() {
          var statearr_24024 = f__12748__auto__.call(null);
          statearr_24024[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___24025;
          return statearr_24024;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___24025, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__12747__auto___24172 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___24172, out) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___24172, out) {
            return function(state_24142) {
              var state_val_24143 = state_24142[1];
              if (state_val_24143 === 7) {
                var inst_24138 = state_24142[2];
                var state_24142__$1 = state_24142;
                var statearr_24144_24173 = state_24142__$1;
                statearr_24144_24173[2] = inst_24138;
                statearr_24144_24173[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24143 === 1) {
                  var inst_24105 = new Array(n);
                  var inst_24106 = inst_24105;
                  var inst_24107 = 0;
                  var state_24142__$1 = function() {
                    var statearr_24145 = state_24142;
                    statearr_24145[7] = inst_24107;
                    statearr_24145[8] = inst_24106;
                    return statearr_24145;
                  }();
                  var statearr_24146_24174 = state_24142__$1;
                  statearr_24146_24174[2] = null;
                  statearr_24146_24174[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24143 === 4) {
                    var inst_24110 = state_24142[9];
                    var inst_24110__$1 = state_24142[2];
                    var inst_24111 = inst_24110__$1 == null;
                    var inst_24112 = cljs.core.not.call(null, inst_24111);
                    var state_24142__$1 = function() {
                      var statearr_24147 = state_24142;
                      statearr_24147[9] = inst_24110__$1;
                      return statearr_24147;
                    }();
                    if (inst_24112) {
                      var statearr_24148_24175 = state_24142__$1;
                      statearr_24148_24175[1] = 5;
                    } else {
                      var statearr_24149_24176 = state_24142__$1;
                      statearr_24149_24176[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_24143 === 15) {
                      var inst_24132 = state_24142[2];
                      var state_24142__$1 = state_24142;
                      var statearr_24150_24177 = state_24142__$1;
                      statearr_24150_24177[2] = inst_24132;
                      statearr_24150_24177[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24143 === 13) {
                        var state_24142__$1 = state_24142;
                        var statearr_24151_24178 = state_24142__$1;
                        statearr_24151_24178[2] = null;
                        statearr_24151_24178[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_24143 === 6) {
                          var inst_24107 = state_24142[7];
                          var inst_24128 = inst_24107 > 0;
                          var state_24142__$1 = state_24142;
                          if (cljs.core.truth_(inst_24128)) {
                            var statearr_24152_24179 = state_24142__$1;
                            statearr_24152_24179[1] = 12;
                          } else {
                            var statearr_24153_24180 = state_24142__$1;
                            statearr_24153_24180[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_24143 === 3) {
                            var inst_24140 = state_24142[2];
                            var state_24142__$1 = state_24142;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24142__$1, inst_24140);
                          } else {
                            if (state_val_24143 === 12) {
                              var inst_24106 = state_24142[8];
                              var inst_24130 = cljs.core.vec.call(null, inst_24106);
                              var state_24142__$1 = state_24142;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24142__$1, 15, out, inst_24130);
                            } else {
                              if (state_val_24143 === 2) {
                                var state_24142__$1 = state_24142;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24142__$1, 4, ch);
                              } else {
                                if (state_val_24143 === 11) {
                                  var inst_24122 = state_24142[2];
                                  var inst_24123 = new Array(n);
                                  var inst_24106 = inst_24123;
                                  var inst_24107 = 0;
                                  var state_24142__$1 = function() {
                                    var statearr_24154 = state_24142;
                                    statearr_24154[7] = inst_24107;
                                    statearr_24154[10] = inst_24122;
                                    statearr_24154[8] = inst_24106;
                                    return statearr_24154;
                                  }();
                                  var statearr_24155_24181 = state_24142__$1;
                                  statearr_24155_24181[2] = null;
                                  statearr_24155_24181[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_24143 === 9) {
                                    var inst_24106 = state_24142[8];
                                    var inst_24120 = cljs.core.vec.call(null, inst_24106);
                                    var state_24142__$1 = state_24142;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24142__$1, 11, out, inst_24120);
                                  } else {
                                    if (state_val_24143 === 5) {
                                      var inst_24110 = state_24142[9];
                                      var inst_24107 = state_24142[7];
                                      var inst_24115 = state_24142[11];
                                      var inst_24106 = state_24142[8];
                                      var inst_24114 = inst_24106[inst_24107] = inst_24110;
                                      var inst_24115__$1 = inst_24107 + 1;
                                      var inst_24116 = inst_24115__$1 < n;
                                      var state_24142__$1 = function() {
                                        var statearr_24156 = state_24142;
                                        statearr_24156[12] = inst_24114;
                                        statearr_24156[11] = inst_24115__$1;
                                        return statearr_24156;
                                      }();
                                      if (cljs.core.truth_(inst_24116)) {
                                        var statearr_24157_24182 = state_24142__$1;
                                        statearr_24157_24182[1] = 8;
                                      } else {
                                        var statearr_24158_24183 = state_24142__$1;
                                        statearr_24158_24183[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_24143 === 14) {
                                        var inst_24135 = state_24142[2];
                                        var inst_24136 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_24142__$1 = function() {
                                          var statearr_24160 = state_24142;
                                          statearr_24160[13] = inst_24135;
                                          return statearr_24160;
                                        }();
                                        var statearr_24161_24184 = state_24142__$1;
                                        statearr_24161_24184[2] = inst_24136;
                                        statearr_24161_24184[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_24143 === 10) {
                                          var inst_24126 = state_24142[2];
                                          var state_24142__$1 = state_24142;
                                          var statearr_24162_24185 = state_24142__$1;
                                          statearr_24162_24185[2] = inst_24126;
                                          statearr_24162_24185[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_24143 === 8) {
                                            var inst_24115 = state_24142[11];
                                            var inst_24106 = state_24142[8];
                                            var tmp24159 = inst_24106;
                                            var inst_24106__$1 = tmp24159;
                                            var inst_24107 = inst_24115;
                                            var state_24142__$1 = function() {
                                              var statearr_24163 = state_24142;
                                              statearr_24163[7] = inst_24107;
                                              statearr_24163[8] = inst_24106__$1;
                                              return statearr_24163;
                                            }();
                                            var statearr_24164_24186 = state_24142__$1;
                                            statearr_24164_24186[2] = null;
                                            statearr_24164_24186[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___24172, out);
          return function(switch__12682__auto__, c__12747__auto___24172, out) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_24168 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_24168[0] = state_machine__12683__auto__;
                statearr_24168[1] = 1;
                return statearr_24168;
              };
              var state_machine__12683__auto____1 = function(state_24142) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_24142);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e24169) {
                      if (e24169 instanceof Object) {
                        var ex__12686__auto__ = e24169;
                        var statearr_24170_24187 = state_24142;
                        statearr_24170_24187[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24142);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e24169;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__24188 = state_24142;
                    state_24142 = G__24188;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_24142) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_24142);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___24172, out);
        }();
        var state__12749__auto__ = function() {
          var statearr_24171 = f__12748__auto__.call(null);
          statearr_24171[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___24172;
          return statearr_24171;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___24172, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__12747__auto___24331 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto___24331, out) {
      return function() {
        var f__12748__auto__ = function() {
          var switch__12682__auto__ = function(c__12747__auto___24331, out) {
            return function(state_24301) {
              var state_val_24302 = state_24301[1];
              if (state_val_24302 === 7) {
                var inst_24297 = state_24301[2];
                var state_24301__$1 = state_24301;
                var statearr_24303_24332 = state_24301__$1;
                statearr_24303_24332[2] = inst_24297;
                statearr_24303_24332[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24302 === 1) {
                  var inst_24260 = [];
                  var inst_24261 = inst_24260;
                  var inst_24262 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_24301__$1 = function() {
                    var statearr_24304 = state_24301;
                    statearr_24304[7] = inst_24262;
                    statearr_24304[8] = inst_24261;
                    return statearr_24304;
                  }();
                  var statearr_24305_24333 = state_24301__$1;
                  statearr_24305_24333[2] = null;
                  statearr_24305_24333[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24302 === 4) {
                    var inst_24265 = state_24301[9];
                    var inst_24265__$1 = state_24301[2];
                    var inst_24266 = inst_24265__$1 == null;
                    var inst_24267 = cljs.core.not.call(null, inst_24266);
                    var state_24301__$1 = function() {
                      var statearr_24306 = state_24301;
                      statearr_24306[9] = inst_24265__$1;
                      return statearr_24306;
                    }();
                    if (inst_24267) {
                      var statearr_24307_24334 = state_24301__$1;
                      statearr_24307_24334[1] = 5;
                    } else {
                      var statearr_24308_24335 = state_24301__$1;
                      statearr_24308_24335[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_24302 === 15) {
                      var inst_24291 = state_24301[2];
                      var state_24301__$1 = state_24301;
                      var statearr_24309_24336 = state_24301__$1;
                      statearr_24309_24336[2] = inst_24291;
                      statearr_24309_24336[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24302 === 13) {
                        var state_24301__$1 = state_24301;
                        var statearr_24310_24337 = state_24301__$1;
                        statearr_24310_24337[2] = null;
                        statearr_24310_24337[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_24302 === 6) {
                          var inst_24261 = state_24301[8];
                          var inst_24286 = inst_24261.length;
                          var inst_24287 = inst_24286 > 0;
                          var state_24301__$1 = state_24301;
                          if (cljs.core.truth_(inst_24287)) {
                            var statearr_24311_24338 = state_24301__$1;
                            statearr_24311_24338[1] = 12;
                          } else {
                            var statearr_24312_24339 = state_24301__$1;
                            statearr_24312_24339[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_24302 === 3) {
                            var inst_24299 = state_24301[2];
                            var state_24301__$1 = state_24301;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24301__$1, inst_24299);
                          } else {
                            if (state_val_24302 === 12) {
                              var inst_24261 = state_24301[8];
                              var inst_24289 = cljs.core.vec.call(null, inst_24261);
                              var state_24301__$1 = state_24301;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24301__$1, 15, out, inst_24289);
                            } else {
                              if (state_val_24302 === 2) {
                                var state_24301__$1 = state_24301;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24301__$1, 4, ch);
                              } else {
                                if (state_val_24302 === 11) {
                                  var inst_24269 = state_24301[10];
                                  var inst_24265 = state_24301[9];
                                  var inst_24279 = state_24301[2];
                                  var inst_24280 = [];
                                  var inst_24281 = inst_24280.push(inst_24265);
                                  var inst_24261 = inst_24280;
                                  var inst_24262 = inst_24269;
                                  var state_24301__$1 = function() {
                                    var statearr_24313 = state_24301;
                                    statearr_24313[7] = inst_24262;
                                    statearr_24313[8] = inst_24261;
                                    statearr_24313[11] = inst_24281;
                                    statearr_24313[12] = inst_24279;
                                    return statearr_24313;
                                  }();
                                  var statearr_24314_24340 = state_24301__$1;
                                  statearr_24314_24340[2] = null;
                                  statearr_24314_24340[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_24302 === 9) {
                                    var inst_24261 = state_24301[8];
                                    var inst_24277 = cljs.core.vec.call(null, inst_24261);
                                    var state_24301__$1 = state_24301;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24301__$1, 11, out, inst_24277);
                                  } else {
                                    if (state_val_24302 === 5) {
                                      var inst_24269 = state_24301[10];
                                      var inst_24262 = state_24301[7];
                                      var inst_24265 = state_24301[9];
                                      var inst_24269__$1 = f.call(null, inst_24265);
                                      var inst_24270 = cljs.core._EQ_.call(null, inst_24269__$1, inst_24262);
                                      var inst_24271 = cljs.core.keyword_identical_QMARK_.call(null, inst_24262, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_24272 = inst_24270 || inst_24271;
                                      var state_24301__$1 = function() {
                                        var statearr_24315 = state_24301;
                                        statearr_24315[10] = inst_24269__$1;
                                        return statearr_24315;
                                      }();
                                      if (cljs.core.truth_(inst_24272)) {
                                        var statearr_24316_24341 = state_24301__$1;
                                        statearr_24316_24341[1] = 8;
                                      } else {
                                        var statearr_24317_24342 = state_24301__$1;
                                        statearr_24317_24342[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_24302 === 14) {
                                        var inst_24294 = state_24301[2];
                                        var inst_24295 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_24301__$1 = function() {
                                          var statearr_24319 = state_24301;
                                          statearr_24319[13] = inst_24294;
                                          return statearr_24319;
                                        }();
                                        var statearr_24320_24343 = state_24301__$1;
                                        statearr_24320_24343[2] = inst_24295;
                                        statearr_24320_24343[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_24302 === 10) {
                                          var inst_24284 = state_24301[2];
                                          var state_24301__$1 = state_24301;
                                          var statearr_24321_24344 = state_24301__$1;
                                          statearr_24321_24344[2] = inst_24284;
                                          statearr_24321_24344[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_24302 === 8) {
                                            var inst_24269 = state_24301[10];
                                            var inst_24261 = state_24301[8];
                                            var inst_24265 = state_24301[9];
                                            var inst_24274 = inst_24261.push(inst_24265);
                                            var tmp24318 = inst_24261;
                                            var inst_24261__$1 = tmp24318;
                                            var inst_24262 = inst_24269;
                                            var state_24301__$1 = function() {
                                              var statearr_24322 = state_24301;
                                              statearr_24322[7] = inst_24262;
                                              statearr_24322[14] = inst_24274;
                                              statearr_24322[8] = inst_24261__$1;
                                              return statearr_24322;
                                            }();
                                            var statearr_24323_24345 = state_24301__$1;
                                            statearr_24323_24345[2] = null;
                                            statearr_24323_24345[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__12747__auto___24331, out);
          return function(switch__12682__auto__, c__12747__auto___24331, out) {
            return function() {
              var state_machine__12683__auto__ = null;
              var state_machine__12683__auto____0 = function() {
                var statearr_24327 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_24327[0] = state_machine__12683__auto__;
                statearr_24327[1] = 1;
                return statearr_24327;
              };
              var state_machine__12683__auto____1 = function(state_24301) {
                while (true) {
                  var ret_value__12684__auto__ = function() {
                    try {
                      while (true) {
                        var result__12685__auto__ = switch__12682__auto__.call(null, state_24301);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__12685__auto__;
                        }
                        break;
                      }
                    } catch (e24328) {
                      if (e24328 instanceof Object) {
                        var ex__12686__auto__ = e24328;
                        var statearr_24329_24346 = state_24301;
                        statearr_24329_24346[5] = ex__12686__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24301);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e24328;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__24347 = state_24301;
                    state_24301 = G__24347;
                    continue;
                  } else {
                    return ret_value__12684__auto__;
                  }
                  break;
                }
              };
              state_machine__12683__auto__ = function(state_24301) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__12683__auto____0.call(this);
                  case 1:
                    return state_machine__12683__auto____1.call(this, state_24301);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
              state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
              return state_machine__12683__auto__;
            }();
          }(switch__12682__auto__, c__12747__auto___24331, out);
        }();
        var state__12749__auto__ = function() {
          var statearr_24330 = f__12748__auto__.call(null);
          statearr_24330[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto___24331;
          return statearr_24330;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
      };
    }(c__12747__auto___24331, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("t3tr0s_slides.slide14");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
goog.require("cljs.core.async");
t3tr0s_slides.slide14.dark_green = "#143";
t3tr0s_slides.slide14.light_green = "#175";
t3tr0s_slides.slide14.dark_purple = "#449";
t3tr0s_slides.slide14.light_purple = "#6ad";
t3tr0s_slides.slide14.dark_red = "#944";
t3tr0s_slides.slide14.light_red = "#f8c";
t3tr0s_slides.slide14.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide14.rotate_coord = function rotate_coord(p__34548) {
  var vec__34550 = p__34548;
  var x = cljs.core.nth.call(null, vec__34550, 0, null);
  var y = cljs.core.nth.call(null, vec__34550, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide14.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide14.rotate_coord, piece);
};
t3tr0s_slides.slide14.nrows = 20;
t3tr0s_slides.slide14.ncols = 10;
t3tr0s_slides.slide14.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide14.ncols, 0));
t3tr0s_slides.slide14.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide14.nrows, t3tr0s_slides.slide14.empty_row));
t3tr0s_slides.slide14.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 1, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 1, 1, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 1, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 1, 1, 1, 1, 1], null)], null);
t3tr0s_slides.slide14.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [5, 2], null);
t3tr0s_slides.slide14.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide14.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), t3tr0s_slides.slide14.rotate_piece.call(null, (new cljs.core.Keyword(null, "I", "I", 1827140963)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide14.pieces)), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide14.initial_pos], 
null));
t3tr0s_slides.slide14.write_piece = function write_piece(board, coords, p__34551, value) {
  while (true) {
    var vec__34555 = p__34551;
    var cx = cljs.core.nth.call(null, vec__34555, 0, null);
    var cy = cljs.core.nth.call(null, vec__34555, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__34556 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__34556, 0, null);
      var y = cljs.core.nth.call(null, vec__34556, 1, null);
      var G__34558 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), value);
        } catch (e34557) {
          if (e34557 instanceof Error) {
            var _ = e34557;
            return board;
          } else {
            throw e34557;
          }
        }
      }();
      var G__34559 = cljs.core.rest.call(null, coords);
      var G__34560 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      var G__34561 = value;
      board = G__34558;
      coords = G__34559;
      p__34551 = G__34560;
      value = G__34561;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide14.create_drawable_board = function create_drawable_board(board, piece, p__34562) {
  var vec__34564 = p__34562;
  var x = cljs.core.nth.call(null, vec__34564, 0, null);
  var y = cljs.core.nth.call(null, vec__34564, 1, null);
  var gy = t3tr0s_slides.slide14.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  var board1 = t3tr0s_slides.slide14.write_piece.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, gy], null), "G");
  var board2 = t3tr0s_slides.slide14.write_piece.call(null, board1, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null), "P");
  return board2;
};
t3tr0s_slides.slide14.app_drawable_board_BANG_ = function app_drawable_board_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  return t3tr0s_slides.slide14.create_drawable_board.call(null, board, piece, pos);
};
t3tr0s_slides.slide14.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__34566 = cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state);
  var map__34566__$1 = cljs.core.seq_QMARK_.call(null, map__34566) ? cljs.core.apply.call(null, cljs.core.hash_map, map__34566) : map__34566;
  var position = cljs.core.get.call(null, map__34566__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__34566__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide14.write_piece, piece, position, 1);
};
t3tr0s_slides.slide14.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__34567) {
  var vec__34571 = p__34567;
  var cx = cljs.core.nth.call(null, vec__34571, 0, null);
  var cy = cljs.core.nth.call(null, vec__34571, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__34571, cx, cy) {
    return function(p__34572) {
      var vec__34573 = p__34572;
      var x = cljs.core.nth.call(null, vec__34573, 0, null);
      var y = cljs.core.nth.call(null, vec__34573, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__34571, cx, cy), piece);
};
t3tr0s_slides.slide14.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide14.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide14.app_state))));
};
t3tr0s_slides.slide14.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  if (cljs.core.truth_(temp__4126__auto__)) {
    var piece = temp__4126__auto__;
    var vec__34575 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var x = cljs.core.nth.call(null, vec__34575, 0, null);
    var y = cljs.core.nth.call(null, vec__34575, 1, null);
    var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
    if (t3tr0s_slides.slide14.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
      return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.try_rotate_BANG_ = function try_rotate_BANG_() {
  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  if (cljs.core.truth_(temp__4126__auto__)) {
    var piece = temp__4126__auto__;
    var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var new_piece = t3tr0s_slides.slide14.rotate_piece.call(null, piece);
    if (t3tr0s_slides.slide14.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
      return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.get_drop_pos = function get_drop_pos(board, piece, p__34576) {
  var vec__34578 = p__34576;
  var x = cljs.core.nth.call(null, vec__34578, 0, null);
  var y = cljs.core.nth.call(null, vec__34578, 1, null);
  var collide_QMARK_ = function(vec__34578, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide14.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__34578, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide14.filled_rows = function filled_rows(board) {
  return cljs.core.apply.call(null, cljs.core.hash_set, cljs.core.map.call(null, cljs.core.first, cljs.core.filter.call(null, function(p__34581) {
    var vec__34582 = p__34581;
    var i = cljs.core.nth.call(null, vec__34582, 0, null);
    var row = cljs.core.nth.call(null, vec__34582, 1, null);
    return cljs.core.every_QMARK_.call(null, cljs.core.pos_QMARK_, row);
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board))));
};
t3tr0s_slides.slide14.collapse_rows = function collapse_rows(board, rows) {
  var cleared_board = cljs.core.map.call(null, cljs.core.second, cljs.core.remove.call(null, function(p1__34583_SHARP_) {
    return rows.call(null, cljs.core.first.call(null, p1__34583_SHARP_));
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board)));
  var n = cljs.core.count.call(null, rows);
  var new_board = cljs.core.into.call(null, cljs.core.vec.call(null, cljs.core.repeat.call(null, n, t3tr0s_slides.slide14.empty_row)), cleared_board);
  return new_board;
};
t3tr0s_slides.slide14.clear_rows = function clear_rows(board, rows) {
  return cljs.core.vec.call(null, cljs.core.map_indexed.call(null, function(i, row) {
    if (cljs.core.truth_(rows.call(null, i))) {
      return t3tr0s_slides.slide14.empty_row;
    } else {
      return row;
    }
  }, board));
};
t3tr0s_slides.slide14.prev_filled = cljs.core.atom.call(null, null);
t3tr0s_slides.slide14.prev_cleared = cljs.core.atom.call(null, null);
t3tr0s_slides.slide14.prev_collapsed = cljs.core.atom.call(null, null);
t3tr0s_slides.slide14.anim_index = cljs.core.atom.call(null, null);
t3tr0s_slides.slide14.on_change_anim_index = function on_change_anim_index(_, ___$1, ___$2, i) {
  if (cljs.core.truth_(i)) {
    return cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.get.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_cleared), cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_filled), cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_cleared), cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_collapsed)], null), i));
  } else {
    return null;
  }
};
cljs.core.add_watch.call(null, t3tr0s_slides.slide14.anim_index, new cljs.core.Keyword(null, "history", "history", -247395220), t3tr0s_slides.slide14.on_change_anim_index);
t3tr0s_slides.slide14.go_go_collapse_BANG_ = function go_go_collapse_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  var rows = t3tr0s_slides.slide14.filled_rows.call(null, board);
  var cleared = t3tr0s_slides.slide14.clear_rows.call(null, board, rows);
  var collapsed = t3tr0s_slides.slide14.collapse_rows.call(null, board, rows);
  cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.prev_filled, cljs.core.assoc.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state), new cljs.core.Keyword(null, "board", "board", -1907017633), board));
  cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.prev_cleared, cljs.core.assoc.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state), new cljs.core.Keyword(null, "board", "board", -1907017633), cleared));
  cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.prev_collapsed, cljs.core.assoc.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state), new cljs.core.Keyword(null, "board", "board", -1907017633), collapsed));
  var c__12747__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto__, board, rows, cleared, collapsed) {
    return function() {
      var f__12748__auto__ = function() {
        var switch__12682__auto__ = function(c__12747__auto__, board, rows, cleared, collapsed) {
          return function(state_34664) {
            var state_val_34665 = state_34664[1];
            if (state_val_34665 === 7) {
              var inst_34642 = state_34664[2];
              var inst_34643 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, 1);
              var inst_34644 = cljs.core.async.timeout.call(null, 170);
              var state_34664__$1 = function() {
                var statearr_34666 = state_34664;
                statearr_34666[7] = inst_34643;
                statearr_34666[8] = inst_34642;
                return statearr_34666;
              }();
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_34664__$1, 8, inst_34644);
            } else {
              if (state_val_34665 === 1) {
                var inst_34635 = 0;
                var state_34664__$1 = function() {
                  var statearr_34667 = state_34664;
                  statearr_34667[9] = inst_34635;
                  return statearr_34667;
                }();
                var statearr_34668_34686 = state_34664__$1;
                statearr_34668_34686[2] = null;
                statearr_34668_34686[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_34665 === 4) {
                  var inst_34639 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, 0);
                  var inst_34640 = cljs.core.async.timeout.call(null, 170);
                  var state_34664__$1 = function() {
                    var statearr_34669 = state_34664;
                    statearr_34669[10] = inst_34639;
                    return statearr_34669;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_34664__$1, 7, inst_34640);
                } else {
                  if (state_val_34665 === 6) {
                    var inst_34651 = state_34664[2];
                    var state_34664__$1 = state_34664;
                    var statearr_34670_34687 = state_34664__$1;
                    statearr_34670_34687[2] = inst_34651;
                    statearr_34670_34687[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_34665 === 3) {
                      var inst_34653 = state_34664[2];
                      var inst_34654 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, 2);
                      var inst_34655 = cljs.core.async.timeout.call(null, 220);
                      var state_34664__$1 = function() {
                        var statearr_34671 = state_34664;
                        statearr_34671[11] = inst_34654;
                        statearr_34671[12] = inst_34653;
                        return statearr_34671;
                      }();
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_34664__$1, 9, inst_34655);
                    } else {
                      if (state_val_34665 === 2) {
                        var inst_34635 = state_34664[9];
                        var inst_34637 = inst_34635 < 3;
                        var state_34664__$1 = state_34664;
                        if (cljs.core.truth_(inst_34637)) {
                          var statearr_34672_34688 = state_34664__$1;
                          statearr_34672_34688[1] = 4;
                        } else {
                          var statearr_34673_34689 = state_34664__$1;
                          statearr_34673_34689[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_34665 === 9) {
                          var inst_34657 = state_34664[2];
                          var inst_34658 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, 3);
                          var inst_34659 = cljs.core.async.timeout.call(null, 170);
                          var state_34664__$1 = function() {
                            var statearr_34674 = state_34664;
                            statearr_34674[13] = inst_34657;
                            statearr_34674[14] = inst_34658;
                            return statearr_34674;
                          }();
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_34664__$1, 10, inst_34659);
                        } else {
                          if (state_val_34665 === 5) {
                            var state_34664__$1 = state_34664;
                            var statearr_34675_34690 = state_34664__$1;
                            statearr_34675_34690[2] = null;
                            statearr_34675_34690[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_34665 === 10) {
                              var inst_34661 = state_34664[2];
                              var inst_34662 = cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, null);
                              var state_34664__$1 = function() {
                                var statearr_34676 = state_34664;
                                statearr_34676[15] = inst_34661;
                                return statearr_34676;
                              }();
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_34664__$1, inst_34662);
                            } else {
                              if (state_val_34665 === 8) {
                                var inst_34635 = state_34664[9];
                                var inst_34646 = state_34664[2];
                                var inst_34647 = inst_34635 + 1;
                                var inst_34635__$1 = inst_34647;
                                var state_34664__$1 = function() {
                                  var statearr_34677 = state_34664;
                                  statearr_34677[9] = inst_34635__$1;
                                  statearr_34677[16] = inst_34646;
                                  return statearr_34677;
                                }();
                                var statearr_34678_34691 = state_34664__$1;
                                statearr_34678_34691[2] = null;
                                statearr_34678_34691[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__12747__auto__, board, rows, cleared, collapsed);
        return function(switch__12682__auto__, c__12747__auto__, board, rows, cleared, collapsed) {
          return function() {
            var state_machine__12683__auto__ = null;
            var state_machine__12683__auto____0 = function() {
              var statearr_34682 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_34682[0] = state_machine__12683__auto__;
              statearr_34682[1] = 1;
              return statearr_34682;
            };
            var state_machine__12683__auto____1 = function(state_34664) {
              while (true) {
                var ret_value__12684__auto__ = function() {
                  try {
                    while (true) {
                      var result__12685__auto__ = switch__12682__auto__.call(null, state_34664);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__12685__auto__;
                      }
                      break;
                    }
                  } catch (e34683) {
                    if (e34683 instanceof Object) {
                      var ex__12686__auto__ = e34683;
                      var statearr_34684_34692 = state_34664;
                      statearr_34684_34692[5] = ex__12686__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_34664);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e34683;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__34693 = state_34664;
                  state_34664 = G__34693;
                  continue;
                } else {
                  return ret_value__12684__auto__;
                }
                break;
              }
            };
            state_machine__12683__auto__ = function(state_34664) {
              switch(arguments.length) {
                case 0:
                  return state_machine__12683__auto____0.call(this);
                case 1:
                  return state_machine__12683__auto____1.call(this, state_34664);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
            state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
            return state_machine__12683__auto__;
          }();
        }(switch__12682__auto__, c__12747__auto__, board, rows, cleared, collapsed);
      }();
      var state__12749__auto__ = function() {
        var statearr_34685 = f__12748__auto__.call(null);
        statearr_34685[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto__;
        return statearr_34685;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
    };
  }(c__12747__auto__, board, rows, cleared, collapsed));
  return c__12747__auto__;
};
t3tr0s_slides.slide14.spawn_piece_BANG_ = function spawn_piece_BANG_() {
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide14.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide14.pieces)));
};
t3tr0s_slides.slide14.hard_drop_BANG_ = function hard_drop_BANG_() {
  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
  if (cljs.core.truth_(temp__4126__auto__)) {
    var piece = temp__4126__auto__;
    var vec__34710 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var x = cljs.core.nth.call(null, vec__34710, 0, null);
    var y = cljs.core.nth.call(null, vec__34710, 1, null);
    var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var ny = t3tr0s_slides.slide14.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
    cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
    t3tr0s_slides.slide14.lock_piece_BANG_.call(null);
    var board__$1 = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state));
    var rows = t3tr0s_slides.slide14.filled_rows.call(null, board__$1);
    if (cljs.core.empty_QMARK_.call(null, rows)) {
      return t3tr0s_slides.slide14.spawn_piece_BANG_.call(null);
    } else {
      cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide14.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), null, new cljs.core.Keyword(null, "position", "position", -2011731912), null);
      var c__12747__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__12747__auto__, board__$1, rows, vec__34710, x, y, board, ny, piece, temp__4126__auto__) {
        return function() {
          var f__12748__auto__ = function() {
            var switch__12682__auto__ = function(c__12747__auto__, board__$1, rows, vec__34710, x, y, board, ny, piece, temp__4126__auto__) {
              return function(state_34716) {
                var state_val_34717 = state_34716[1];
                if (state_val_34717 === 2) {
                  var inst_34713 = state_34716[2];
                  var inst_34714 = t3tr0s_slides.slide14.spawn_piece_BANG_.call(null);
                  var state_34716__$1 = function() {
                    var statearr_34718 = state_34716;
                    statearr_34718[7] = inst_34713;
                    return statearr_34718;
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_34716__$1, inst_34714);
                } else {
                  if (state_val_34717 === 1) {
                    var inst_34711 = t3tr0s_slides.slide14.go_go_collapse_BANG_.call(null);
                    var state_34716__$1 = state_34716;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_34716__$1, 2, inst_34711);
                  } else {
                    return null;
                  }
                }
              };
            }(c__12747__auto__, board__$1, rows, vec__34710, x, y, board, ny, piece, temp__4126__auto__);
            return function(switch__12682__auto__, c__12747__auto__, board__$1, rows, vec__34710, x, y, board, ny, piece, temp__4126__auto__) {
              return function() {
                var state_machine__12683__auto__ = null;
                var state_machine__12683__auto____0 = function() {
                  var statearr_34722 = [null, null, null, null, null, null, null, null];
                  statearr_34722[0] = state_machine__12683__auto__;
                  statearr_34722[1] = 1;
                  return statearr_34722;
                };
                var state_machine__12683__auto____1 = function(state_34716) {
                  while (true) {
                    var ret_value__12684__auto__ = function() {
                      try {
                        while (true) {
                          var result__12685__auto__ = switch__12682__auto__.call(null, state_34716);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__12685__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__12685__auto__;
                          }
                          break;
                        }
                      } catch (e34723) {
                        if (e34723 instanceof Object) {
                          var ex__12686__auto__ = e34723;
                          var statearr_34724_34726 = state_34716;
                          statearr_34724_34726[5] = ex__12686__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_34716);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e34723;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__12684__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__34727 = state_34716;
                      state_34716 = G__34727;
                      continue;
                    } else {
                      return ret_value__12684__auto__;
                    }
                    break;
                  }
                };
                state_machine__12683__auto__ = function(state_34716) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__12683__auto____0.call(this);
                    case 1:
                      return state_machine__12683__auto____1.call(this, state_34716);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__12683__auto____0;
                state_machine__12683__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__12683__auto____1;
                return state_machine__12683__auto__;
              }();
            }(switch__12682__auto__, c__12747__auto__, board__$1, rows, vec__34710, x, y, board, ny, piece, temp__4126__auto__);
          }();
          var state__12749__auto__ = function() {
            var statearr_34725 = f__12748__auto__.call(null);
            statearr_34725[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__12747__auto__;
            return statearr_34725;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__12749__auto__);
        };
      }(c__12747__auto__, board__$1, rows, vec__34710, x, y, board, ny, piece, temp__4126__auto__));
      return c__12747__auto__;
    }
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.data_row = function data_row(index, content) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide14.anim_index), index) ? "active-row-534ed" : "", new cljs.core.Keyword(null, "onMouseEnter", "onMouseEnter", -1535281844), function() {
    if (cljs.core.truth_(cljs.core.deref.call(null, t3tr0s_slides.slide14.prev_filled))) {
      return cljs.core.reset_BANG_.call(null, t3tr0s_slides.slide14.anim_index, index);
    } else {
      return null;
    }
  }], null), content], null);
};
var ufv___34741 = schema.utils.use_fn_validation;
var output_schema34729_34742 = schema.core.Any;
var input_schema34730_34743 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker34731_34744 = schema.core.checker.call(null, input_schema34730_34743);
var output_checker34732_34745 = schema.core.checker.call(null, output_schema34729_34742);
t3tr0s_slides.slide14.code = function(ufv___34741, output_schema34729_34742, input_schema34730_34743, input_checker34731_34744, output_checker34732_34745) {
  return function code(G__34733, G__34734) {
    var validate__5821__auto__ = ufv___34741.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___34746 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__34733, G__34734], null);
      var temp__4126__auto___34747 = input_checker34731_34744.call(null, args__5822__auto___34746);
      if (cljs.core.truth_(temp__4126__auto___34747)) {
        var error__5823__auto___34748 = temp__4126__auto___34747;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___34748)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema34730_34743, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___34746, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___34748], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__34733;
      var owner = G__34734;
      while (true) {
        if (typeof t3tr0s_slides.slide14.t34738 !== "undefined") {
        } else {
          t3tr0s_slides.slide14.t34738 = function(owner, G__34733, validate__5821__auto__, input_schema34730, input_checker34731, output_checker34732, G__34734, app, ufv__, code, output_schema34729, meta34739) {
            this.owner = owner;
            this.G__34733 = G__34733;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema34730 = input_schema34730;
            this.input_checker34731 = input_checker34731;
            this.output_checker34732 = output_checker34732;
            this.G__34734 = G__34734;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.output_schema34729 = output_schema34729;
            this.meta34739 = meta34739;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide14.t34738.cljs$lang$type = true;
          t3tr0s_slides.slide14.t34738.cljs$lang$ctorStr = "t3tr0s-slides.slide14/t34738";
          t3tr0s_slides.slide14.t34738.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___34741, output_schema34729_34742, input_schema34730_34743, input_checker34731_34744, output_checker34732_34745) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide14/t34738");
            };
          }(validate__5821__auto__, ufv___34741, output_schema34729_34742, input_schema34730_34743, input_checker34731_34744, output_checker34732_34745);
          t3tr0s_slides.slide14.t34738.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide14.t34738.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___34741, output_schema34729_34742, input_schema34730_34743, input_checker34731_34744, output_checker34732_34745) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, React.DOM.code(null, "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " clear-rows\n", "  [board rows]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vec")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "map-indexed")), "\n", "   (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.core.call(null, "fn")), " [i row]\n", "     (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "if")), " (rows i) empty-row row)) board)))\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " go-go-collapse! []\n", "\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [board     (", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.lit.call(null, ":board")), " @game-state)\n", "        rows      (filled-rows board)\n", "        cleared   (clear-rows board rows)\n", "        collapsed (collapse-rows board rows)]\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: knock out some rows on the right,")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         then mouse over states below.")), 
              "\n", "\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "go")), "\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "dotimes")), " [_ ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "3")), "]\n", "\n", "        ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide14.data_row.call(null, 0, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " cleared)"), t3tr0s_slides.syntax_highlight.lit.call(null, ":board")), " "), t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), "\n", "        (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "\x3c!")), 
              " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "timeout")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "170")), "))\n", "\n", "        ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide14.data_row.call(null, 1, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
              cljs.core.List.EMPTY, " board)"), t3tr0s_slides.syntax_highlight.lit.call(null, ":board")), " "), t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), "\n", "        (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "\x3c!")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "timeout")), " ", sablono.interpreter.interpret.call(null, 
              t3tr0s_slides.syntax_highlight.lit.call(null, "170")), ")))\n", "\n", "      ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide14.data_row.call(null, 2, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " cleared)"), t3tr0s_slides.syntax_highlight.lit.call(null, ":board")), " "), t3tr0s_slides.syntax_highlight.core.call(null, 
              "assoc")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), "\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "\x3c!")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, "timeout")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.lit.call(null, "220")), "))\n", "\n", "      ", sablono.interpreter.interpret.call(null, t3tr0s_slides.slide14.data_row.call(null, 
              3, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " collapsed)"), t3tr0s_slides.syntax_highlight.lit.call(null, ":board")), " "), t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " game-state "), t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), "("))), ")))\n")));
            };
          }(validate__5821__auto__, ufv___34741, output_schema34729_34742, input_schema34730_34743, input_checker34731_34744, output_checker34732_34745);
          t3tr0s_slides.slide14.t34738.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___34741, output_schema34729_34742, input_schema34730_34743, input_checker34731_34744, output_checker34732_34745) {
            return function(_34740) {
              var self__ = this;
              var _34740__$1 = this;
              return self__.meta34739;
            };
          }(validate__5821__auto__, ufv___34741, output_schema34729_34742, input_schema34730_34743, input_checker34731_34744, output_checker34732_34745);
          t3tr0s_slides.slide14.t34738.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___34741, output_schema34729_34742, input_schema34730_34743, input_checker34731_34744, output_checker34732_34745) {
            return function(_34740, meta34739__$1) {
              var self__ = this;
              var _34740__$1 = this;
              return new t3tr0s_slides.slide14.t34738(self__.owner, self__.G__34733, self__.validate__5821__auto__, self__.input_schema34730, self__.input_checker34731, self__.output_checker34732, self__.G__34734, self__.app, self__.ufv__, self__.code, self__.output_schema34729, meta34739__$1);
            };
          }(validate__5821__auto__, ufv___34741, output_schema34729_34742, input_schema34730_34743, input_checker34731_34744, output_checker34732_34745);
          t3tr0s_slides.slide14.__GT_t34738 = function(validate__5821__auto__, ufv___34741, output_schema34729_34742, input_schema34730_34743, input_checker34731_34744, output_checker34732_34745) {
            return function __GT_t34738(owner__$1, G__34733__$1, validate__5821__auto____$1, input_schema34730__$1, input_checker34731__$1, output_checker34732__$1, G__34734__$1, app__$1, ufv____$1, code__$1, output_schema34729__$1, meta34739) {
              return new t3tr0s_slides.slide14.t34738(owner__$1, G__34733__$1, validate__5821__auto____$1, input_schema34730__$1, input_checker34731__$1, output_checker34732__$1, G__34734__$1, app__$1, ufv____$1, code__$1, output_schema34729__$1, meta34739);
            };
          }(validate__5821__auto__, ufv___34741, output_schema34729_34742, input_schema34730_34743, input_checker34731_34744, output_checker34732_34745);
        }
        return new t3tr0s_slides.slide14.t34738(owner, G__34733, validate__5821__auto__, input_schema34730_34743, input_checker34731_34744, output_checker34732_34745, G__34734, app, ufv___34741, code, output_schema34729_34742, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___34749 = output_checker34732_34745.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___34749)) {
        var error__5823__auto___34750 = temp__4126__auto___34749;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___34750)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema34729_34742, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___34750], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___34741, output_schema34729_34742, input_schema34730_34743, input_checker34731_34744, output_checker34732_34745);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide14.code), schema.core.make_fn_schema.call(null, output_schema34729_34742, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema34730_34743], null)));
t3tr0s_slides.slide14.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide14.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m34728) {
    return om.core.build.call(null, t3tr0s_slides.slide14.code, cursor__9685__auto__, m34728);
  };
  __GT_code = function(cursor__9685__auto__, m34728) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m34728);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide14.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide14.nrows);
t3tr0s_slides.slide14.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__34751, is_center) {
  var vec__34753 = p__34751;
  var x = cljs.core.nth.call(null, vec__34753, 0, null);
  var y = cljs.core.nth.call(null, vec__34753, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide14.cell_size * x;
  var ry = t3tr0s_slides.slide14.cell_size * y;
  var rs = t3tr0s_slides.slide14.cell_size;
  var cx = t3tr0s_slides.slide14.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide14.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide14.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.piece_abs_coords = function piece_abs_coords(piece, p__34754) {
  var vec__34758 = p__34754;
  var cx = cljs.core.nth.call(null, vec__34758, 0, null);
  var cy = cljs.core.nth.call(null, vec__34758, 1, null);
  return cljs.core.mapv.call(null, function(vec__34758, cx, cy) {
    return function(p__34759) {
      var vec__34760 = p__34759;
      var x = cljs.core.nth.call(null, vec__34760, 0, null);
      var y = cljs.core.nth.call(null, vec__34760, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__34758, cx, cy), piece);
};
t3tr0s_slides.slide14.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__34767 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide14.piece_abs_coords.call(null, piece, pos)));
  var chunk__34768 = null;
  var count__34769 = 0;
  var i__34770 = 0;
  while (true) {
    if (i__34770 < count__34769) {
      var vec__34771 = cljs.core._nth.call(null, chunk__34768, i__34770);
      var i = cljs.core.nth.call(null, vec__34771, 0, null);
      var c = cljs.core.nth.call(null, vec__34771, 1, null);
      t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__34773 = seq__34767;
      var G__34774 = chunk__34768;
      var G__34775 = count__34769;
      var G__34776 = i__34770 + 1;
      seq__34767 = G__34773;
      chunk__34768 = G__34774;
      count__34769 = G__34775;
      i__34770 = G__34776;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__34767);
      if (temp__4126__auto__) {
        var seq__34767__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__34767__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__34767__$1);
          var G__34777 = cljs.core.chunk_rest.call(null, seq__34767__$1);
          var G__34778 = c__4309__auto__;
          var G__34779 = cljs.core.count.call(null, c__4309__auto__);
          var G__34780 = 0;
          seq__34767 = G__34777;
          chunk__34768 = G__34778;
          count__34769 = G__34779;
          i__34770 = G__34780;
          continue;
        } else {
          var vec__34772 = cljs.core.first.call(null, seq__34767__$1);
          var i = cljs.core.nth.call(null, vec__34772, 0, null);
          var c = cljs.core.nth.call(null, vec__34772, 1, null);
          t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__34781 = cljs.core.next.call(null, seq__34767__$1);
          var G__34782 = null;
          var G__34783 = 0;
          var G__34784 = 0;
          seq__34767 = G__34781;
          chunk__34768 = G__34782;
          count__34769 = G__34783;
          i__34770 = G__34784;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide14.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var filled_QMARK_ = t3tr0s_slides.slide14.filled_rows.call(null, board);
  var seq__34797 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide14.nrows));
  var chunk__34802 = null;
  var count__34803 = 0;
  var i__34804 = 0;
  while (true) {
    if (i__34804 < count__34803) {
      var y = cljs.core._nth.call(null, chunk__34802, i__34804);
      var seq__34805_34809 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide14.ncols));
      var chunk__34806_34810 = null;
      var count__34807_34811 = 0;
      var i__34808_34812 = 0;
      while (true) {
        if (i__34808_34812 < count__34807_34811) {
          var x_34813 = cljs.core._nth.call(null, chunk__34806_34810, i__34808_34812);
          ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .3 : 1;
          var v_34814 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_34813], null));
          if (v_34814 === 0) {
          } else {
            t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_34813, y], null), false);
          }
          var G__34815 = seq__34805_34809;
          var G__34816 = chunk__34806_34810;
          var G__34817 = count__34807_34811;
          var G__34818 = i__34808_34812 + 1;
          seq__34805_34809 = G__34815;
          chunk__34806_34810 = G__34816;
          count__34807_34811 = G__34817;
          i__34808_34812 = G__34818;
          continue;
        } else {
          var temp__4126__auto___34819 = cljs.core.seq.call(null, seq__34805_34809);
          if (temp__4126__auto___34819) {
            var seq__34805_34820__$1 = temp__4126__auto___34819;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__34805_34820__$1)) {
              var c__4309__auto___34821 = cljs.core.chunk_first.call(null, seq__34805_34820__$1);
              var G__34822 = cljs.core.chunk_rest.call(null, seq__34805_34820__$1);
              var G__34823 = c__4309__auto___34821;
              var G__34824 = cljs.core.count.call(null, c__4309__auto___34821);
              var G__34825 = 0;
              seq__34805_34809 = G__34822;
              chunk__34806_34810 = G__34823;
              count__34807_34811 = G__34824;
              i__34808_34812 = G__34825;
              continue;
            } else {
              var x_34826 = cljs.core.first.call(null, seq__34805_34820__$1);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .3 : 1;
              var v_34827 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_34826], null));
              if (v_34827 === 0) {
              } else {
                t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_34826, y], null), false);
              }
              var G__34828 = cljs.core.next.call(null, seq__34805_34820__$1);
              var G__34829 = null;
              var G__34830 = 0;
              var G__34831 = 0;
              seq__34805_34809 = G__34828;
              chunk__34806_34810 = G__34829;
              count__34807_34811 = G__34830;
              i__34808_34812 = G__34831;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__34832 = seq__34797;
      var G__34833 = chunk__34802;
      var G__34834 = count__34803;
      var G__34835 = i__34804 + 1;
      seq__34797 = G__34832;
      chunk__34802 = G__34833;
      count__34803 = G__34834;
      i__34804 = G__34835;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__34797);
      if (temp__4126__auto__) {
        var seq__34797__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__34797__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__34797__$1);
          var G__34836 = cljs.core.chunk_rest.call(null, seq__34797__$1);
          var G__34837 = c__4309__auto__;
          var G__34838 = cljs.core.count.call(null, c__4309__auto__);
          var G__34839 = 0;
          seq__34797 = G__34836;
          chunk__34802 = G__34837;
          count__34803 = G__34838;
          i__34804 = G__34839;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__34797__$1);
          var seq__34798_34840 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide14.ncols));
          var chunk__34799_34841 = null;
          var count__34800_34842 = 0;
          var i__34801_34843 = 0;
          while (true) {
            if (i__34801_34843 < count__34800_34842) {
              var x_34844 = cljs.core._nth.call(null, chunk__34799_34841, i__34801_34843);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .3 : 1;
              var v_34845 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_34844], null));
              if (v_34845 === 0) {
              } else {
                t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_34844, y], null), false);
              }
              var G__34846 = seq__34798_34840;
              var G__34847 = chunk__34799_34841;
              var G__34848 = count__34800_34842;
              var G__34849 = i__34801_34843 + 1;
              seq__34798_34840 = G__34846;
              chunk__34799_34841 = G__34847;
              count__34800_34842 = G__34848;
              i__34801_34843 = G__34849;
              continue;
            } else {
              var temp__4126__auto___34850__$1 = cljs.core.seq.call(null, seq__34798_34840);
              if (temp__4126__auto___34850__$1) {
                var seq__34798_34851__$1 = temp__4126__auto___34850__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__34798_34851__$1)) {
                  var c__4309__auto___34852 = cljs.core.chunk_first.call(null, seq__34798_34851__$1);
                  var G__34853 = cljs.core.chunk_rest.call(null, seq__34798_34851__$1);
                  var G__34854 = c__4309__auto___34852;
                  var G__34855 = cljs.core.count.call(null, c__4309__auto___34852);
                  var G__34856 = 0;
                  seq__34798_34840 = G__34853;
                  chunk__34799_34841 = G__34854;
                  count__34800_34842 = G__34855;
                  i__34801_34843 = G__34856;
                  continue;
                } else {
                  var x_34857 = cljs.core.first.call(null, seq__34798_34851__$1);
                  ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .3 : 1;
                  var v_34858 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_34857], null));
                  if (v_34858 === 0) {
                  } else {
                    t3tr0s_slides.slide14.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_34857, y], null), false);
                  }
                  var G__34859 = cljs.core.next.call(null, seq__34798_34851__$1);
                  var G__34860 = null;
                  var G__34861 = 0;
                  var G__34862 = 0;
                  seq__34798_34840 = G__34859;
                  chunk__34799_34841 = G__34860;
                  count__34800_34842 = G__34861;
                  i__34801_34843 = G__34862;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__34863 = cljs.core.next.call(null, seq__34797__$1);
          var G__34864 = null;
          var G__34865 = 0;
          var G__34866 = 0;
          seq__34797 = G__34863;
          chunk__34802 = G__34864;
          count__34803 = G__34865;
          i__34804 = G__34866;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide14.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide14.cell_size * t3tr0s_slides.slide14.ncols, t3tr0s_slides.slide14.cell_size * t3tr0s_slides.slide14.nrows);
  ctx.fillStyle = t3tr0s_slides.slide14.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide14.light_green;
  t3tr0s_slides.slide14.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  ctx.globalAlpha = 1;
  var temp__4126__auto__ = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var piece = temp__4126__auto__;
    var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
    var drop_y = t3tr0s_slides.slide14.get_drop_pos.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide14.app_state)), piece, pos);
    var drop_pos = cljs.core.assoc.call(null, pos, 1, drop_y);
    var fits = t3tr0s_slides.slide14.app_piece_fits_QMARK_.call(null);
    if (cljs.core.truth_(function() {
      var and__3541__auto__ = piece;
      if (cljs.core.truth_(and__3541__auto__)) {
        return pos;
      } else {
        return and__3541__auto__;
      }
    }())) {
      ctx.fillStyle = "#333";
      ctx.strokeStyle = "#666";
      t3tr0s_slides.slide14.draw_piece_BANG_.call(null, ctx, piece, drop_pos);
      ctx.fillStyle = fits ? t3tr0s_slides.slide14.dark_purple : t3tr0s_slides.slide14.dark_red;
      ctx.strokeStyle = fits ? t3tr0s_slides.slide14.light_purple : t3tr0s_slides.slide14.light_red;
      return t3tr0s_slides.slide14.draw_piece_BANG_.call(null, ctx, piece, pos);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
t3tr0s_slides.slide14.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide14.key_name = function key_name(p1__34867_SHARP_) {
  return t3tr0s_slides.slide14.key_names.call(null, p1__34867_SHARP_.keyCode);
};
t3tr0s_slides.slide14.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide14.key_name.call(null, e);
  var G__34869_34870 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__34869_34870) {
    case "space":
      t3tr0s_slides.slide14.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide14.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide14.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide14.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___34889 = schema.utils.use_fn_validation;
var output_schema34873_34890 = schema.core.Any;
var input_schema34874_34891 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker34875_34892 = schema.core.checker.call(null, input_schema34874_34891);
var output_checker34876_34893 = schema.core.checker.call(null, output_schema34873_34890);
t3tr0s_slides.slide14.canvas = function(ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893) {
  return function canvas(G__34877, G__34878) {
    var validate__5821__auto__ = ufv___34889.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___34894 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__34877, G__34878], null);
      var temp__4126__auto___34895 = input_checker34875_34892.call(null, args__5822__auto___34894);
      if (cljs.core.truth_(temp__4126__auto___34895)) {
        var error__5823__auto___34896 = temp__4126__auto___34895;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___34896)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema34874_34891, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___34894, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___34896], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__34877;
      var owner = G__34878;
      while (true) {
        if (typeof t3tr0s_slides.slide14.t34884 !== "undefined") {
        } else {
          t3tr0s_slides.slide14.t34884 = function(G__34877, owner, output_schema34873, validate__5821__auto__, input_schema34874, output_checker34876, canvas, app, G__34878, ufv__, input_checker34875, meta34885) {
            this.G__34877 = G__34877;
            this.owner = owner;
            this.output_schema34873 = output_schema34873;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_schema34874 = input_schema34874;
            this.output_checker34876 = output_checker34876;
            this.canvas = canvas;
            this.app = app;
            this.G__34878 = G__34878;
            this.ufv__ = ufv__;
            this.input_checker34875 = input_checker34875;
            this.meta34885 = meta34885;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide14.t34884.cljs$lang$type = true;
          t3tr0s_slides.slide14.t34884.cljs$lang$ctorStr = "t3tr0s-slides.slide14/t34884";
          t3tr0s_slides.slide14.t34884.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide14/t34884");
            };
          }(validate__5821__auto__, ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893);
          t3tr0s_slides.slide14.t34884.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide14.t34884.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893);
          t3tr0s_slides.slide14.t34884.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide14.t34884.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide14.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893);
          t3tr0s_slides.slide14.t34884.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide14.t34884.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide14.ncols * t3tr0s_slides.slide14.cell_size;
              canvas__$2.height = t3tr0s_slides.slide14.nrows * t3tr0s_slides.slide14.cell_size;
              return t3tr0s_slides.slide14.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893);
          t3tr0s_slides.slide14.t34884.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893) {
            return function(_34886) {
              var self__ = this;
              var _34886__$1 = this;
              return self__.meta34885;
            };
          }(validate__5821__auto__, ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893);
          t3tr0s_slides.slide14.t34884.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893) {
            return function(_34886, meta34885__$1) {
              var self__ = this;
              var _34886__$1 = this;
              return new t3tr0s_slides.slide14.t34884(self__.G__34877, self__.owner, self__.output_schema34873, self__.validate__5821__auto__, self__.input_schema34874, self__.output_checker34876, self__.canvas, self__.app, self__.G__34878, self__.ufv__, self__.input_checker34875, meta34885__$1);
            };
          }(validate__5821__auto__, ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893);
          t3tr0s_slides.slide14.__GT_t34884 = function(validate__5821__auto__, ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893) {
            return function __GT_t34884(G__34877__$1, owner__$1, output_schema34873__$1, validate__5821__auto____$1, input_schema34874__$1, output_checker34876__$1, canvas__$1, app__$1, G__34878__$1, ufv____$1, input_checker34875__$1, meta34885) {
              return new t3tr0s_slides.slide14.t34884(G__34877__$1, owner__$1, output_schema34873__$1, validate__5821__auto____$1, input_schema34874__$1, output_checker34876__$1, canvas__$1, app__$1, G__34878__$1, ufv____$1, input_checker34875__$1, meta34885);
            };
          }(validate__5821__auto__, ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893);
        }
        return new t3tr0s_slides.slide14.t34884(G__34877, owner, output_schema34873_34890, validate__5821__auto__, input_schema34874_34891, output_checker34876_34893, canvas, app, G__34878, ufv___34889, input_checker34875_34892, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___34897 = output_checker34876_34893.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___34897)) {
        var error__5823__auto___34898 = temp__4126__auto___34897;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___34898)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema34873_34890, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___34898], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___34889, output_schema34873_34890, input_schema34874_34891, input_checker34875_34892, output_checker34876_34893);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide14.canvas), schema.core.make_fn_schema.call(null, output_schema34873_34890, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema34874_34891], null)));
t3tr0s_slides.slide14.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide14.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m34872) {
    return om.core.build.call(null, t3tr0s_slides.slide14.canvas, cursor__9685__auto__, m34872);
  };
  __GT_canvas = function(cursor__9685__auto__, m34872) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m34872);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___34916 = schema.utils.use_fn_validation;
var output_schema34900_34917 = schema.core.Any;
var input_schema34901_34918 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker34902_34919 = schema.core.checker.call(null, input_schema34901_34918);
var output_checker34903_34920 = schema.core.checker.call(null, output_schema34900_34917);
t3tr0s_slides.slide14.slide = function(ufv___34916, output_schema34900_34917, input_schema34901_34918, input_checker34902_34919, output_checker34903_34920) {
  return function slide(G__34904, G__34905) {
    var validate__5821__auto__ = ufv___34916.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___34921 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__34904, G__34905], null);
      var temp__4126__auto___34922 = input_checker34902_34919.call(null, args__5822__auto___34921);
      if (cljs.core.truth_(temp__4126__auto___34922)) {
        var error__5823__auto___34923 = temp__4126__auto___34922;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___34923)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema34901_34918, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___34921, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___34923], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__34904;
      var owner = G__34905;
      while (true) {
        if (typeof t3tr0s_slides.slide14.t34911 !== "undefined") {
        } else {
          t3tr0s_slides.slide14.t34911 = function(G__34904, owner, input_schema34901, validate__5821__auto__, input_checker34902, G__34905, output_schema34900, slide, app, ufv__, output_checker34903, meta34912) {
            this.G__34904 = G__34904;
            this.owner = owner;
            this.input_schema34901 = input_schema34901;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker34902 = input_checker34902;
            this.G__34905 = G__34905;
            this.output_schema34900 = output_schema34900;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.output_checker34903 = output_checker34903;
            this.meta34912 = meta34912;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide14.t34911.cljs$lang$type = true;
          t3tr0s_slides.slide14.t34911.cljs$lang$ctorStr = "t3tr0s-slides.slide14/t34911";
          t3tr0s_slides.slide14.t34911.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___34916, output_schema34900_34917, input_schema34901_34918, input_checker34902_34919, output_checker34903_34920) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide14/t34911");
            };
          }(validate__5821__auto__, ufv___34916, output_schema34900_34917, input_schema34901_34918, input_checker34902_34919, output_checker34903_34920);
          t3tr0s_slides.slide14.t34911.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide14.t34911.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___34916, output_schema34900_34917, input_schema34901_34918, input_checker34902_34919, output_checker34903_34920) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "14. Animate collapse."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide14.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide14.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___34916, output_schema34900_34917, input_schema34901_34918, input_checker34902_34919, output_checker34903_34920);
          t3tr0s_slides.slide14.t34911.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___34916, output_schema34900_34917, input_schema34901_34918, input_checker34902_34919, output_checker34903_34920) {
            return function(_34913) {
              var self__ = this;
              var _34913__$1 = this;
              return self__.meta34912;
            };
          }(validate__5821__auto__, ufv___34916, output_schema34900_34917, input_schema34901_34918, input_checker34902_34919, output_checker34903_34920);
          t3tr0s_slides.slide14.t34911.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___34916, output_schema34900_34917, input_schema34901_34918, input_checker34902_34919, output_checker34903_34920) {
            return function(_34913, meta34912__$1) {
              var self__ = this;
              var _34913__$1 = this;
              return new t3tr0s_slides.slide14.t34911(self__.G__34904, self__.owner, self__.input_schema34901, self__.validate__5821__auto__, self__.input_checker34902, self__.G__34905, self__.output_schema34900, self__.slide, self__.app, self__.ufv__, self__.output_checker34903, meta34912__$1);
            };
          }(validate__5821__auto__, ufv___34916, output_schema34900_34917, input_schema34901_34918, input_checker34902_34919, output_checker34903_34920);
          t3tr0s_slides.slide14.__GT_t34911 = function(validate__5821__auto__, ufv___34916, output_schema34900_34917, input_schema34901_34918, input_checker34902_34919, output_checker34903_34920) {
            return function __GT_t34911(G__34904__$1, owner__$1, input_schema34901__$1, validate__5821__auto____$1, input_checker34902__$1, G__34905__$1, output_schema34900__$1, slide__$1, app__$1, ufv____$1, output_checker34903__$1, meta34912) {
              return new t3tr0s_slides.slide14.t34911(G__34904__$1, owner__$1, input_schema34901__$1, validate__5821__auto____$1, input_checker34902__$1, G__34905__$1, output_schema34900__$1, slide__$1, app__$1, ufv____$1, output_checker34903__$1, meta34912);
            };
          }(validate__5821__auto__, ufv___34916, output_schema34900_34917, input_schema34901_34918, input_checker34902_34919, output_checker34903_34920);
        }
        return new t3tr0s_slides.slide14.t34911(G__34904, owner, input_schema34901_34918, validate__5821__auto__, input_checker34902_34919, G__34905, output_schema34900_34917, slide, app, ufv___34916, output_checker34903_34920, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___34924 = output_checker34903_34920.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___34924)) {
        var error__5823__auto___34925 = temp__4126__auto___34924;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___34925)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema34900_34917, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___34925], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___34916, output_schema34900_34917, input_schema34901_34918, input_checker34902_34919, output_checker34903_34920);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide14.slide), schema.core.make_fn_schema.call(null, output_schema34900_34917, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema34901_34918], null)));
t3tr0s_slides.slide14.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide14.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m34899) {
    return om.core.build.call(null, t3tr0s_slides.slide14.slide, cursor__9685__auto__, m34899);
  };
  __GT_slide = function(cursor__9685__auto__, m34899) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m34899);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide14.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide14.slide, t3tr0s_slides.slide14.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide14.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide14.key_down);
};
t3tr0s_slides.slide14.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide14.key_down);
};
goog.provide("t3tr0s_slides.slide15");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide15.dark_green = "#143";
t3tr0s_slides.slide15.light_green = "#175";
t3tr0s_slides.slide15.dark_purple = "#449";
t3tr0s_slides.slide15.light_purple = "#6ad";
t3tr0s_slides.slide15.dark_red = "#944";
t3tr0s_slides.slide15.light_red = "#f8c";
t3tr0s_slides.slide15.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide15.rotate_coord = function rotate_coord(p__18912) {
  var vec__18914 = p__18912;
  var x = cljs.core.nth.call(null, vec__18914, 0, null);
  var y = cljs.core.nth.call(null, vec__18914, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide15.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide15.rotate_coord, piece);
};
t3tr0s_slides.slide15.rows = 20;
t3tr0s_slides.slide15.cols = 10;
t3tr0s_slides.slide15.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide15.cols, 0));
t3tr0s_slides.slide15.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide15.rows, t3tr0s_slides.slide15.empty_row));
t3tr0s_slides.slide15.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 1, 0, 0, 1, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 1, 0, 0, 0, 0, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 1, 1, 1, 1, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 1, 0, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 1, 1, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 1, 1, 0, 1, 1, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide15.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide15.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide15.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.last.call(null, cljs.core.take.call(null, 4, cljs.core.iterate.call(null, t3tr0s_slides.slide15.rotate_piece, (new cljs.core.Keyword(null, "L", "L", -1038307519)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide15.pieces)))), new cljs.core.Keyword(null, 
"position", "position", -2011731912), t3tr0s_slides.slide15.initial_pos], null));
t3tr0s_slides.slide15.write_piece = function write_piece(board, coords, p__18915) {
  while (true) {
    var vec__18919 = p__18915;
    var cx = cljs.core.nth.call(null, vec__18919, 0, null);
    var cy = cljs.core.nth.call(null, vec__18919, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__18920 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__18920, 0, null);
      var y = cljs.core.nth.call(null, vec__18920, 1, null);
      var G__18922 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e18921) {
          if (e18921 instanceof Error) {
            var _ = e18921;
            return board;
          } else {
            throw e18921;
          }
        }
      }();
      var G__18923 = cljs.core.rest.call(null, coords);
      var G__18924 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__18922;
      coords = G__18923;
      p__18915 = G__18924;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide15.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__18926 = cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state);
  var map__18926__$1 = cljs.core.seq_QMARK_.call(null, map__18926) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18926) : map__18926;
  var position = cljs.core.get.call(null, map__18926__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__18926__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide15.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide15.write_piece, piece, position);
};
t3tr0s_slides.slide15.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__18927) {
  var vec__18931 = p__18927;
  var cx = cljs.core.nth.call(null, vec__18931, 0, null);
  var cy = cljs.core.nth.call(null, vec__18931, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__18931, cx, cy) {
    return function(p__18932) {
      var vec__18933 = p__18932;
      var x = cljs.core.nth.call(null, vec__18933, 0, null);
      var y = cljs.core.nth.call(null, vec__18933, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__18931, cx, cy), piece);
};
t3tr0s_slides.slide15.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide15.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide15.app_state))));
};
t3tr0s_slides.slide15.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__18938(s__18939) {
      return new cljs.core.LazySeq(null, function() {
        var s__18939__$1 = s__18939;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__18939__$1);
          if (temp__4126__auto__) {
            var s__18939__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__18939__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__18939__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__18941 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__18940 = 0;
                while (true) {
                  if (i__18940 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__18940);
                    cljs.core.chunk_append.call(null, b__18941, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))));
                    var G__18942 = i__18940 + 1;
                    i__18940 = G__18942;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18941), iter__18938.call(null, cljs.core.chunk_rest.call(null, s__18939__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18941), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__18939__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide15.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))), iter__18938.call(null, cljs.core.rest.call(null, s__18939__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide15.cols));
  }(), " ]"], null);
};
var ufv___18958 = schema.utils.use_fn_validation;
var output_schema18944_18959 = schema.core.Any;
var input_schema18945_18960 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker18946_18961 = schema.core.checker.call(null, input_schema18945_18960);
var output_checker18947_18962 = schema.core.checker.call(null, output_schema18944_18959);
t3tr0s_slides.slide15.code = function(ufv___18958, output_schema18944_18959, input_schema18945_18960, input_checker18946_18961, output_checker18947_18962) {
  return function code(G__18948, G__18949) {
    var validate__5821__auto__ = ufv___18958.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___18963 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__18948, G__18949], null);
      var temp__4126__auto___18964 = input_checker18946_18961.call(null, args__5822__auto___18963);
      if (cljs.core.truth_(temp__4126__auto___18964)) {
        var error__5823__auto___18965 = temp__4126__auto___18964;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___18965)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18945_18960, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___18963, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___18965], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__18948;
      var owner = G__18949;
      while (true) {
        if (typeof t3tr0s_slides.slide15.t18954 !== "undefined") {
        } else {
          t3tr0s_slides.slide15.t18954 = function(owner, G__18949, validate__5821__auto__, output_schema18944, input_schema18945, input_checker18946, output_checker18947, G__18948, app, ufv__, code, meta18955) {
            this.owner = owner;
            this.G__18949 = G__18949;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema18944 = output_schema18944;
            this.input_schema18945 = input_schema18945;
            this.input_checker18946 = input_checker18946;
            this.output_checker18947 = output_checker18947;
            this.G__18948 = G__18948;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta18955 = meta18955;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide15.t18954.cljs$lang$type = true;
          t3tr0s_slides.slide15.t18954.cljs$lang$ctorStr = "t3tr0s-slides.slide15/t18954";
          t3tr0s_slides.slide15.t18954.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___18958, output_schema18944_18959, input_schema18945_18960, input_checker18946_18961, output_checker18947_18962) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide15/t18954");
            };
          }(validate__5821__auto__, ufv___18958, output_schema18944_18959, input_schema18945_18960, input_checker18946_18961, output_checker18947_18962);
          t3tr0s_slides.slide15.t18954.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide15.t18954.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___18958, output_schema18944_18959, input_schema18945_18960, input_checker18946_18961, output_checker18947_18962) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs18957 = t3tr0s_slides.syntax_highlight.cmt.call(null, ";; You can probably guess how to implement the");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs18957) ? sablono.interpreter.attributes.call(null, attrs18957) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs18957) ? new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; rest of the features, like gravity and")), "\n", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.cmt.call(null, ";; the game over animation.")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Now go play some ", t3tr0s_slides.syntax_highlight.kw.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "https://github.com/imalooney/t3tr0s"], 
                null), "T3TR0S"], null)), "!")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Thanks to these cool people:")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Elaine Looney"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, 
                "Luis Gutierrez"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Chris Oakman"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Brett Darnell"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, 
                "Phil Gambling"))), "\n"], null) : new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs18957), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; rest of the features, like gravity and")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";; the game over animation.")), "\n", "\n", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.cmt.call(null, ";; Now go play some ", t3tr0s_slides.syntax_highlight.kw.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "https://github.com/imalooney/t3tr0s"], null), "T3TR0S"], null)), "!")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
                ";; Thanks to these cool people:")), "\n", "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Elaine Looney"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Luis Gutierrez"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", 
                t3tr0s_slides.syntax_highlight.lit.call(null, "Chris Oakman"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Brett Darnell"))), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";;  - ", t3tr0s_slides.syntax_highlight.lit.call(null, "Phil Gambling"))), "\n"], null)));
              }()));
            };
          }(validate__5821__auto__, ufv___18958, output_schema18944_18959, input_schema18945_18960, input_checker18946_18961, output_checker18947_18962);
          t3tr0s_slides.slide15.t18954.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___18958, output_schema18944_18959, input_schema18945_18960, input_checker18946_18961, output_checker18947_18962) {
            return function(_18956) {
              var self__ = this;
              var _18956__$1 = this;
              return self__.meta18955;
            };
          }(validate__5821__auto__, ufv___18958, output_schema18944_18959, input_schema18945_18960, input_checker18946_18961, output_checker18947_18962);
          t3tr0s_slides.slide15.t18954.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___18958, output_schema18944_18959, input_schema18945_18960, input_checker18946_18961, output_checker18947_18962) {
            return function(_18956, meta18955__$1) {
              var self__ = this;
              var _18956__$1 = this;
              return new t3tr0s_slides.slide15.t18954(self__.owner, self__.G__18949, self__.validate__5821__auto__, self__.output_schema18944, self__.input_schema18945, self__.input_checker18946, self__.output_checker18947, self__.G__18948, self__.app, self__.ufv__, self__.code, meta18955__$1);
            };
          }(validate__5821__auto__, ufv___18958, output_schema18944_18959, input_schema18945_18960, input_checker18946_18961, output_checker18947_18962);
          t3tr0s_slides.slide15.__GT_t18954 = function(validate__5821__auto__, ufv___18958, output_schema18944_18959, input_schema18945_18960, input_checker18946_18961, output_checker18947_18962) {
            return function __GT_t18954(owner__$1, G__18949__$1, validate__5821__auto____$1, output_schema18944__$1, input_schema18945__$1, input_checker18946__$1, output_checker18947__$1, G__18948__$1, app__$1, ufv____$1, code__$1, meta18955) {
              return new t3tr0s_slides.slide15.t18954(owner__$1, G__18949__$1, validate__5821__auto____$1, output_schema18944__$1, input_schema18945__$1, input_checker18946__$1, output_checker18947__$1, G__18948__$1, app__$1, ufv____$1, code__$1, meta18955);
            };
          }(validate__5821__auto__, ufv___18958, output_schema18944_18959, input_schema18945_18960, input_checker18946_18961, output_checker18947_18962);
        }
        return new t3tr0s_slides.slide15.t18954(owner, G__18949, validate__5821__auto__, output_schema18944_18959, input_schema18945_18960, input_checker18946_18961, output_checker18947_18962, G__18948, app, ufv___18958, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___18966 = output_checker18947_18962.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___18966)) {
        var error__5823__auto___18967 = temp__4126__auto___18966;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___18967)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18944_18959, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___18967], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___18958, output_schema18944_18959, input_schema18945_18960, input_checker18946_18961, output_checker18947_18962);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide15.code), schema.core.make_fn_schema.call(null, output_schema18944_18959, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18945_18960], null)));
t3tr0s_slides.slide15.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide15.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m18943) {
    return om.core.build.call(null, t3tr0s_slides.slide15.code, cursor__9685__auto__, m18943);
  };
  __GT_code = function(cursor__9685__auto__, m18943) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m18943);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide15.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide15.rows);
t3tr0s_slides.slide15.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__18968, is_center) {
  var vec__18970 = p__18968;
  var x = cljs.core.nth.call(null, vec__18970, 0, null);
  var y = cljs.core.nth.call(null, vec__18970, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide15.cell_size * x;
  var ry = t3tr0s_slides.slide15.cell_size * y;
  var rs = t3tr0s_slides.slide15.cell_size;
  var cx = t3tr0s_slides.slide15.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide15.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide15.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide15.piece_abs_coords = function piece_abs_coords(piece, p__18971) {
  var vec__18975 = p__18971;
  var cx = cljs.core.nth.call(null, vec__18975, 0, null);
  var cy = cljs.core.nth.call(null, vec__18975, 1, null);
  return cljs.core.mapv.call(null, function(vec__18975, cx, cy) {
    return function(p__18976) {
      var vec__18977 = p__18976;
      var x = cljs.core.nth.call(null, vec__18977, 0, null);
      var y = cljs.core.nth.call(null, vec__18977, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__18975, cx, cy), piece);
};
t3tr0s_slides.slide15.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__18984 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide15.piece_abs_coords.call(null, piece, pos)));
  var chunk__18985 = null;
  var count__18986 = 0;
  var i__18987 = 0;
  while (true) {
    if (i__18987 < count__18986) {
      var vec__18988 = cljs.core._nth.call(null, chunk__18985, i__18987);
      var i = cljs.core.nth.call(null, vec__18988, 0, null);
      var c = cljs.core.nth.call(null, vec__18988, 1, null);
      t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__18990 = seq__18984;
      var G__18991 = chunk__18985;
      var G__18992 = count__18986;
      var G__18993 = i__18987 + 1;
      seq__18984 = G__18990;
      chunk__18985 = G__18991;
      count__18986 = G__18992;
      i__18987 = G__18993;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__18984);
      if (temp__4126__auto__) {
        var seq__18984__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18984__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__18984__$1);
          var G__18994 = cljs.core.chunk_rest.call(null, seq__18984__$1);
          var G__18995 = c__4309__auto__;
          var G__18996 = cljs.core.count.call(null, c__4309__auto__);
          var G__18997 = 0;
          seq__18984 = G__18994;
          chunk__18985 = G__18995;
          count__18986 = G__18996;
          i__18987 = G__18997;
          continue;
        } else {
          var vec__18989 = cljs.core.first.call(null, seq__18984__$1);
          var i = cljs.core.nth.call(null, vec__18989, 0, null);
          var c = cljs.core.nth.call(null, vec__18989, 1, null);
          t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__18998 = cljs.core.next.call(null, seq__18984__$1);
          var G__18999 = null;
          var G__19000 = 0;
          var G__19001 = 0;
          seq__18984 = G__18998;
          chunk__18985 = G__18999;
          count__18986 = G__19000;
          i__18987 = G__19001;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide15.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__19014 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide15.rows));
  var chunk__19019 = null;
  var count__19020 = 0;
  var i__19021 = 0;
  while (true) {
    if (i__19021 < count__19020) {
      var y = cljs.core._nth.call(null, chunk__19019, i__19021);
      var seq__19022_19026 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide15.cols));
      var chunk__19023_19027 = null;
      var count__19024_19028 = 0;
      var i__19025_19029 = 0;
      while (true) {
        if (i__19025_19029 < count__19024_19028) {
          var x_19030 = cljs.core._nth.call(null, chunk__19023_19027, i__19025_19029);
          var v_19031 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_19030], null));
          if (v_19031 === 0) {
          } else {
            t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_19030, y], null), false);
          }
          var G__19032 = seq__19022_19026;
          var G__19033 = chunk__19023_19027;
          var G__19034 = count__19024_19028;
          var G__19035 = i__19025_19029 + 1;
          seq__19022_19026 = G__19032;
          chunk__19023_19027 = G__19033;
          count__19024_19028 = G__19034;
          i__19025_19029 = G__19035;
          continue;
        } else {
          var temp__4126__auto___19036 = cljs.core.seq.call(null, seq__19022_19026);
          if (temp__4126__auto___19036) {
            var seq__19022_19037__$1 = temp__4126__auto___19036;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__19022_19037__$1)) {
              var c__4309__auto___19038 = cljs.core.chunk_first.call(null, seq__19022_19037__$1);
              var G__19039 = cljs.core.chunk_rest.call(null, seq__19022_19037__$1);
              var G__19040 = c__4309__auto___19038;
              var G__19041 = cljs.core.count.call(null, c__4309__auto___19038);
              var G__19042 = 0;
              seq__19022_19026 = G__19039;
              chunk__19023_19027 = G__19040;
              count__19024_19028 = G__19041;
              i__19025_19029 = G__19042;
              continue;
            } else {
              var x_19043 = cljs.core.first.call(null, seq__19022_19037__$1);
              var v_19044 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_19043], null));
              if (v_19044 === 0) {
              } else {
                t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_19043, y], null), false);
              }
              var G__19045 = cljs.core.next.call(null, seq__19022_19037__$1);
              var G__19046 = null;
              var G__19047 = 0;
              var G__19048 = 0;
              seq__19022_19026 = G__19045;
              chunk__19023_19027 = G__19046;
              count__19024_19028 = G__19047;
              i__19025_19029 = G__19048;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__19049 = seq__19014;
      var G__19050 = chunk__19019;
      var G__19051 = count__19020;
      var G__19052 = i__19021 + 1;
      seq__19014 = G__19049;
      chunk__19019 = G__19050;
      count__19020 = G__19051;
      i__19021 = G__19052;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19014);
      if (temp__4126__auto__) {
        var seq__19014__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19014__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__19014__$1);
          var G__19053 = cljs.core.chunk_rest.call(null, seq__19014__$1);
          var G__19054 = c__4309__auto__;
          var G__19055 = cljs.core.count.call(null, c__4309__auto__);
          var G__19056 = 0;
          seq__19014 = G__19053;
          chunk__19019 = G__19054;
          count__19020 = G__19055;
          i__19021 = G__19056;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__19014__$1);
          var seq__19015_19057 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide15.cols));
          var chunk__19016_19058 = null;
          var count__19017_19059 = 0;
          var i__19018_19060 = 0;
          while (true) {
            if (i__19018_19060 < count__19017_19059) {
              var x_19061 = cljs.core._nth.call(null, chunk__19016_19058, i__19018_19060);
              var v_19062 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_19061], null));
              if (v_19062 === 0) {
              } else {
                t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_19061, y], null), false);
              }
              var G__19063 = seq__19015_19057;
              var G__19064 = chunk__19016_19058;
              var G__19065 = count__19017_19059;
              var G__19066 = i__19018_19060 + 1;
              seq__19015_19057 = G__19063;
              chunk__19016_19058 = G__19064;
              count__19017_19059 = G__19065;
              i__19018_19060 = G__19066;
              continue;
            } else {
              var temp__4126__auto___19067__$1 = cljs.core.seq.call(null, seq__19015_19057);
              if (temp__4126__auto___19067__$1) {
                var seq__19015_19068__$1 = temp__4126__auto___19067__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__19015_19068__$1)) {
                  var c__4309__auto___19069 = cljs.core.chunk_first.call(null, seq__19015_19068__$1);
                  var G__19070 = cljs.core.chunk_rest.call(null, seq__19015_19068__$1);
                  var G__19071 = c__4309__auto___19069;
                  var G__19072 = cljs.core.count.call(null, c__4309__auto___19069);
                  var G__19073 = 0;
                  seq__19015_19057 = G__19070;
                  chunk__19016_19058 = G__19071;
                  count__19017_19059 = G__19072;
                  i__19018_19060 = G__19073;
                  continue;
                } else {
                  var x_19074 = cljs.core.first.call(null, seq__19015_19068__$1);
                  var v_19075 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_19074], null));
                  if (v_19075 === 0) {
                  } else {
                    t3tr0s_slides.slide15.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_19074, y], null), false);
                  }
                  var G__19076 = cljs.core.next.call(null, seq__19015_19068__$1);
                  var G__19077 = null;
                  var G__19078 = 0;
                  var G__19079 = 0;
                  seq__19015_19057 = G__19076;
                  chunk__19016_19058 = G__19077;
                  count__19017_19059 = G__19078;
                  i__19018_19060 = G__19079;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__19080 = cljs.core.next.call(null, seq__19014__$1);
          var G__19081 = null;
          var G__19082 = 0;
          var G__19083 = 0;
          seq__19014 = G__19080;
          chunk__19019 = G__19081;
          count__19020 = G__19082;
          i__19021 = G__19083;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide15.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide15.cell_size * t3tr0s_slides.slide15.cols, t3tr0s_slides.slide15.cell_size * t3tr0s_slides.slide15.rows);
  ctx.fillStyle = t3tr0s_slides.slide15.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide15.light_green;
  return t3tr0s_slides.slide15.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
};
var ufv___19101 = schema.utils.use_fn_validation;
var output_schema19085_19102 = schema.core.Any;
var input_schema19086_19103 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker19087_19104 = schema.core.checker.call(null, input_schema19086_19103);
var output_checker19088_19105 = schema.core.checker.call(null, output_schema19085_19102);
t3tr0s_slides.slide15.canvas = function(ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105) {
  return function canvas(G__19089, G__19090) {
    var validate__5821__auto__ = ufv___19101.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___19106 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19089, G__19090], null);
      var temp__4126__auto___19107 = input_checker19087_19104.call(null, args__5822__auto___19106);
      if (cljs.core.truth_(temp__4126__auto___19107)) {
        var error__5823__auto___19108 = temp__4126__auto___19107;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___19108)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19086_19103, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___19106, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___19108], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__19089;
      var owner = G__19090;
      while (true) {
        if (typeof t3tr0s_slides.slide15.t19096 !== "undefined") {
        } else {
          t3tr0s_slides.slide15.t19096 = function(output_schema19085, G__19090, owner, output_checker19088, validate__5821__auto__, G__19089, input_schema19086, canvas, app, input_checker19087, ufv__, meta19097) {
            this.output_schema19085 = output_schema19085;
            this.G__19090 = G__19090;
            this.owner = owner;
            this.output_checker19088 = output_checker19088;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__19089 = G__19089;
            this.input_schema19086 = input_schema19086;
            this.canvas = canvas;
            this.app = app;
            this.input_checker19087 = input_checker19087;
            this.ufv__ = ufv__;
            this.meta19097 = meta19097;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide15.t19096.cljs$lang$type = true;
          t3tr0s_slides.slide15.t19096.cljs$lang$ctorStr = "t3tr0s-slides.slide15/t19096";
          t3tr0s_slides.slide15.t19096.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide15/t19096");
            };
          }(validate__5821__auto__, ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105);
          t3tr0s_slides.slide15.t19096.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide15.t19096.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas"}));
            };
          }(validate__5821__auto__, ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105);
          t3tr0s_slides.slide15.t19096.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide15.t19096.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide15.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105);
          t3tr0s_slides.slide15.t19096.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide15.t19096.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide15.cols * t3tr0s_slides.slide15.cell_size;
              canvas__$2.height = t3tr0s_slides.slide15.rows * t3tr0s_slides.slide15.cell_size;
              return t3tr0s_slides.slide15.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105);
          t3tr0s_slides.slide15.t19096.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105) {
            return function(_19098) {
              var self__ = this;
              var _19098__$1 = this;
              return self__.meta19097;
            };
          }(validate__5821__auto__, ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105);
          t3tr0s_slides.slide15.t19096.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105) {
            return function(_19098, meta19097__$1) {
              var self__ = this;
              var _19098__$1 = this;
              return new t3tr0s_slides.slide15.t19096(self__.output_schema19085, self__.G__19090, self__.owner, self__.output_checker19088, self__.validate__5821__auto__, self__.G__19089, self__.input_schema19086, self__.canvas, self__.app, self__.input_checker19087, self__.ufv__, meta19097__$1);
            };
          }(validate__5821__auto__, ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105);
          t3tr0s_slides.slide15.__GT_t19096 = function(validate__5821__auto__, ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105) {
            return function __GT_t19096(output_schema19085__$1, G__19090__$1, owner__$1, output_checker19088__$1, validate__5821__auto____$1, G__19089__$1, input_schema19086__$1, canvas__$1, app__$1, input_checker19087__$1, ufv____$1, meta19097) {
              return new t3tr0s_slides.slide15.t19096(output_schema19085__$1, G__19090__$1, owner__$1, output_checker19088__$1, validate__5821__auto____$1, G__19089__$1, input_schema19086__$1, canvas__$1, app__$1, input_checker19087__$1, ufv____$1, meta19097);
            };
          }(validate__5821__auto__, ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105);
        }
        return new t3tr0s_slides.slide15.t19096(output_schema19085_19102, G__19090, owner, output_checker19088_19105, validate__5821__auto__, G__19089, input_schema19086_19103, canvas, app, input_checker19087_19104, ufv___19101, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___19109 = output_checker19088_19105.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___19109)) {
        var error__5823__auto___19110 = temp__4126__auto___19109;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___19110)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19085_19102, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___19110], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___19101, output_schema19085_19102, input_schema19086_19103, input_checker19087_19104, output_checker19088_19105);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide15.canvas), schema.core.make_fn_schema.call(null, output_schema19085_19102, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19086_19103], null)));
t3tr0s_slides.slide15.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide15.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m19084) {
    return om.core.build.call(null, t3tr0s_slides.slide15.canvas, cursor__9685__auto__, m19084);
  };
  __GT_canvas = function(cursor__9685__auto__, m19084) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m19084);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___19128 = schema.utils.use_fn_validation;
var output_schema19112_19129 = schema.core.Any;
var input_schema19113_19130 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker19114_19131 = schema.core.checker.call(null, input_schema19113_19130);
var output_checker19115_19132 = schema.core.checker.call(null, output_schema19112_19129);
t3tr0s_slides.slide15.slide = function(ufv___19128, output_schema19112_19129, input_schema19113_19130, input_checker19114_19131, output_checker19115_19132) {
  return function slide(G__19116, G__19117) {
    var validate__5821__auto__ = ufv___19128.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___19133 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19116, G__19117], null);
      var temp__4126__auto___19134 = input_checker19114_19131.call(null, args__5822__auto___19133);
      if (cljs.core.truth_(temp__4126__auto___19134)) {
        var error__5823__auto___19135 = temp__4126__auto___19134;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___19135)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19113_19130, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___19133, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___19135], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__19116;
      var owner = G__19117;
      while (true) {
        if (typeof t3tr0s_slides.slide15.t19123 !== "undefined") {
        } else {
          t3tr0s_slides.slide15.t19123 = function(owner, output_checker19115, input_schema19113, validate__5821__auto__, G__19116, G__19117, output_schema19112, input_checker19114, slide, app, ufv__, meta19124) {
            this.owner = owner;
            this.output_checker19115 = output_checker19115;
            this.input_schema19113 = input_schema19113;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__19116 = G__19116;
            this.G__19117 = G__19117;
            this.output_schema19112 = output_schema19112;
            this.input_checker19114 = input_checker19114;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta19124 = meta19124;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide15.t19123.cljs$lang$type = true;
          t3tr0s_slides.slide15.t19123.cljs$lang$ctorStr = "t3tr0s-slides.slide15/t19123";
          t3tr0s_slides.slide15.t19123.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___19128, output_schema19112_19129, input_schema19113_19130, input_checker19114_19131, output_checker19115_19132) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide15/t19123");
            };
          }(validate__5821__auto__, ufv___19128, output_schema19112_19129, input_schema19113_19130, input_checker19114_19131, output_checker19115_19132);
          t3tr0s_slides.slide15.t19123.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide15.t19123.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___19128, output_schema19112_19129, input_schema19113_19130, input_checker19114_19131, output_checker19115_19132) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "That's all for now..."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide15.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide15.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___19128, output_schema19112_19129, input_schema19113_19130, input_checker19114_19131, output_checker19115_19132);
          t3tr0s_slides.slide15.t19123.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___19128, output_schema19112_19129, input_schema19113_19130, input_checker19114_19131, output_checker19115_19132) {
            return function(_19125) {
              var self__ = this;
              var _19125__$1 = this;
              return self__.meta19124;
            };
          }(validate__5821__auto__, ufv___19128, output_schema19112_19129, input_schema19113_19130, input_checker19114_19131, output_checker19115_19132);
          t3tr0s_slides.slide15.t19123.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___19128, output_schema19112_19129, input_schema19113_19130, input_checker19114_19131, output_checker19115_19132) {
            return function(_19125, meta19124__$1) {
              var self__ = this;
              var _19125__$1 = this;
              return new t3tr0s_slides.slide15.t19123(self__.owner, self__.output_checker19115, self__.input_schema19113, self__.validate__5821__auto__, self__.G__19116, self__.G__19117, self__.output_schema19112, self__.input_checker19114, self__.slide, self__.app, self__.ufv__, meta19124__$1);
            };
          }(validate__5821__auto__, ufv___19128, output_schema19112_19129, input_schema19113_19130, input_checker19114_19131, output_checker19115_19132);
          t3tr0s_slides.slide15.__GT_t19123 = function(validate__5821__auto__, ufv___19128, output_schema19112_19129, input_schema19113_19130, input_checker19114_19131, output_checker19115_19132) {
            return function __GT_t19123(owner__$1, output_checker19115__$1, input_schema19113__$1, validate__5821__auto____$1, G__19116__$1, G__19117__$1, output_schema19112__$1, input_checker19114__$1, slide__$1, app__$1, ufv____$1, meta19124) {
              return new t3tr0s_slides.slide15.t19123(owner__$1, output_checker19115__$1, input_schema19113__$1, validate__5821__auto____$1, G__19116__$1, G__19117__$1, output_schema19112__$1, input_checker19114__$1, slide__$1, app__$1, ufv____$1, meta19124);
            };
          }(validate__5821__auto__, ufv___19128, output_schema19112_19129, input_schema19113_19130, input_checker19114_19131, output_checker19115_19132);
        }
        return new t3tr0s_slides.slide15.t19123(owner, output_checker19115_19132, input_schema19113_19130, validate__5821__auto__, G__19116, G__19117, output_schema19112_19129, input_checker19114_19131, slide, app, ufv___19128, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___19136 = output_checker19115_19132.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___19136)) {
        var error__5823__auto___19137 = temp__4126__auto___19136;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___19137)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19112_19129, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___19137], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___19128, output_schema19112_19129, input_schema19113_19130, input_checker19114_19131, output_checker19115_19132);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide15.slide), schema.core.make_fn_schema.call(null, output_schema19112_19129, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19113_19130], null)));
t3tr0s_slides.slide15.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide15.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m19111) {
    return om.core.build.call(null, t3tr0s_slides.slide15.slide, cursor__9685__auto__, m19111);
  };
  __GT_slide = function(cursor__9685__auto__, m19111) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m19111);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide15.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide15.slide, t3tr0s_slides.slide15.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide15.resume = function resume() {
  return null;
};
t3tr0s_slides.slide15.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide08");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide08.dark_green = "#143";
t3tr0s_slides.slide08.light_green = "#175";
t3tr0s_slides.slide08.dark_purple = "#449";
t3tr0s_slides.slide08.light_purple = "#6ad";
t3tr0s_slides.slide08.dark_red = "#944";
t3tr0s_slides.slide08.light_red = "#f8c";
t3tr0s_slides.slide08.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide08.rotate_coord = function rotate_coord(p__29720) {
  var vec__29722 = p__29720;
  var x = cljs.core.nth.call(null, vec__29722, 0, null);
  var y = cljs.core.nth.call(null, vec__29722, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide08.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide08.rotate_coord, piece);
};
t3tr0s_slides.slide08.rows = 20;
t3tr0s_slides.slide08.cols = 10;
t3tr0s_slides.slide08.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide08.cols, 0));
t3tr0s_slides.slide08.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide08.rows, t3tr0s_slides.slide08.empty_row));
t3tr0s_slides.slide08.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 0, 0, 0, 0, 0, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 0, 0, 0, 1, 1, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0, 1, 0, 1, 0, 1, 1, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide08.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 6], null);
t3tr0s_slides.slide08.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide08.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide08.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide08.initial_pos], null));
t3tr0s_slides.slide08.write_piece = function write_piece(board, coords, p__29723) {
  while (true) {
    var vec__29727 = p__29723;
    var cx = cljs.core.nth.call(null, vec__29727, 0, null);
    var cy = cljs.core.nth.call(null, vec__29727, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__29728 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__29728, 0, null);
      var y = cljs.core.nth.call(null, vec__29728, 1, null);
      var G__29730 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e29729) {
          if (e29729 instanceof Error) {
            var _ = e29729;
            return board;
          } else {
            throw e29729;
          }
        }
      }();
      var G__29731 = cljs.core.rest.call(null, coords);
      var G__29732 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__29730;
      coords = G__29731;
      p__29723 = G__29732;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide08.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__29734 = cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state);
  var map__29734__$1 = cljs.core.seq_QMARK_.call(null, map__29734) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29734) : map__29734;
  var position = cljs.core.get.call(null, map__29734__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__29734__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide08.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide08.write_piece, piece, position);
};
t3tr0s_slides.slide08.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__29735) {
  var vec__29739 = p__29735;
  var cx = cljs.core.nth.call(null, vec__29739, 0, null);
  var cy = cljs.core.nth.call(null, vec__29739, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__29739, cx, cy) {
    return function(p__29740) {
      var vec__29741 = p__29740;
      var x = cljs.core.nth.call(null, vec__29741, 0, null);
      var y = cljs.core.nth.call(null, vec__29741, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__29739, cx, cy), piece);
};
t3tr0s_slides.slide08.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide08.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide08.app_state))));
};
t3tr0s_slides.slide08.data_row = function data_row(row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__29746(s__29747) {
      return new cljs.core.LazySeq(null, function() {
        var s__29747__$1 = s__29747;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__29747__$1);
          if (temp__4126__auto__) {
            var s__29747__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__29747__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__29747__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__29749 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__29748 = 0;
                while (true) {
                  if (i__29748 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__29748);
                    cljs.core.chunk_append.call(null, b__29749, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))));
                    var G__29750 = i__29748 + 1;
                    i__29748 = G__29750;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29749), iter__29746.call(null, cljs.core.chunk_rest.call(null, s__29747__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29749), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__29747__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), row, col], null))), iter__29746.call(null, cljs.core.rest.call(null, s__29747__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide08.cols));
  }(), " ]"], null);
};
var ufv___29770 = schema.utils.use_fn_validation;
var output_schema29752_29771 = schema.core.Any;
var input_schema29753_29772 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29754_29773 = schema.core.checker.call(null, input_schema29753_29772);
var output_checker29755_29774 = schema.core.checker.call(null, output_schema29752_29771);
t3tr0s_slides.slide08.code = function(ufv___29770, output_schema29752_29771, input_schema29753_29772, input_checker29754_29773, output_checker29755_29774) {
  return function code(G__29756, G__29757) {
    var validate__5821__auto__ = ufv___29770.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29775 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29756, G__29757], null);
      var temp__4126__auto___29776 = input_checker29754_29773.call(null, args__5822__auto___29775);
      if (cljs.core.truth_(temp__4126__auto___29776)) {
        var error__5823__auto___29777 = temp__4126__auto___29776;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___29777)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29753_29772, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29775, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29777], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29756;
      var owner = G__29757;
      while (true) {
        if (typeof t3tr0s_slides.slide08.t29764 !== "undefined") {
        } else {
          t3tr0s_slides.slide08.t29764 = function(owner, G__29756, G__29757, validate__5821__auto__, output_schema29752, input_checker29754, output_checker29755, app, ufv__, input_schema29753, code, meta29765) {
            this.owner = owner;
            this.G__29756 = G__29756;
            this.G__29757 = G__29757;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema29752 = output_schema29752;
            this.input_checker29754 = input_checker29754;
            this.output_checker29755 = output_checker29755;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_schema29753 = input_schema29753;
            this.code = code;
            this.meta29765 = meta29765;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide08.t29764.cljs$lang$type = true;
          t3tr0s_slides.slide08.t29764.cljs$lang$ctorStr = "t3tr0s-slides.slide08/t29764";
          t3tr0s_slides.slide08.t29764.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29770, output_schema29752_29771, input_schema29753_29772, input_checker29754_29773, output_checker29755_29774) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide08/t29764");
            };
          }(validate__5821__auto__, ufv___29770, output_schema29752_29771, input_schema29753_29772, input_checker29754_29773, output_checker29755_29774);
          t3tr0s_slides.slide08.t29764.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide08.t29764.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29770, output_schema29752_29771, input_schema29753_29772, input_checker29754_29773, output_checker29755_29774) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs29767 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: move the piece on the right");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs29767) ? sablono.interpreter.attributes.call(null, attrs29767) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs29767) ? cljs.core.PersistentVector.fromArray(["\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " piece-fits?\n", "  [board piece [cx cy]]\n", "  (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "every?")), "\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "fn")), " [[x y]]\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "zero?")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "get-in")), " board [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "+")), " y cy) (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x cx)])))\n", "    piece))\n", "\n\n", "\x3e (piece-fits? board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":T")), " pieces) ", sablono.interpreter.interpret.call(null, function() {
                  var vec__29768 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state));
                  var x = cljs.core.nth.call(null, vec__29768, 0, null);
                  var y = cljs.core.nth.call(null, vec__29768, 1, null);
                  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), t3tr0s_slides.syntax_highlight.lit.call(null, y)), " "), t3tr0s_slides.syntax_highlight.lit.call(null, x)), "[");
                }()), ")\n", "\n", "   ", sablono.interpreter.interpret.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide08.app_piece_fits_QMARK_.call(null))), "\n", "\n"], true) : cljs.core.PersistentVector.fromArray([sablono.interpreter.interpret.call(null, attrs29767), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " piece-fits?\n", "  [board piece [cx cy]]\n", "  (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "every?")), "\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "fn")), " [[x y]]\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "zero?")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "get-in")), " board [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "+")), " y cy) (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x cx)])))\n", "    piece))\n", "\n\n", "\x3e (piece-fits? board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":T")), " pieces) ", sablono.interpreter.interpret.call(null, function() {
                  var vec__29769 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide08.app_state));
                  var x = cljs.core.nth.call(null, vec__29769, 0, null);
                  var y = cljs.core.nth.call(null, vec__29769, 1, null);
                  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "]"), t3tr0s_slides.syntax_highlight.lit.call(null, y)), " "), t3tr0s_slides.syntax_highlight.lit.call(null, x)), "[");
                }()), ")\n", "\n", "   ", sablono.interpreter.interpret.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide08.app_piece_fits_QMARK_.call(null))), "\n", "\n"], true)));
              }()));
            };
          }(validate__5821__auto__, ufv___29770, output_schema29752_29771, input_schema29753_29772, input_checker29754_29773, output_checker29755_29774);
          t3tr0s_slides.slide08.t29764.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29770, output_schema29752_29771, input_schema29753_29772, input_checker29754_29773, output_checker29755_29774) {
            return function(_29766) {
              var self__ = this;
              var _29766__$1 = this;
              return self__.meta29765;
            };
          }(validate__5821__auto__, ufv___29770, output_schema29752_29771, input_schema29753_29772, input_checker29754_29773, output_checker29755_29774);
          t3tr0s_slides.slide08.t29764.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29770, output_schema29752_29771, input_schema29753_29772, input_checker29754_29773, output_checker29755_29774) {
            return function(_29766, meta29765__$1) {
              var self__ = this;
              var _29766__$1 = this;
              return new t3tr0s_slides.slide08.t29764(self__.owner, self__.G__29756, self__.G__29757, self__.validate__5821__auto__, self__.output_schema29752, self__.input_checker29754, self__.output_checker29755, self__.app, self__.ufv__, self__.input_schema29753, self__.code, meta29765__$1);
            };
          }(validate__5821__auto__, ufv___29770, output_schema29752_29771, input_schema29753_29772, input_checker29754_29773, output_checker29755_29774);
          t3tr0s_slides.slide08.__GT_t29764 = function(validate__5821__auto__, ufv___29770, output_schema29752_29771, input_schema29753_29772, input_checker29754_29773, output_checker29755_29774) {
            return function __GT_t29764(owner__$1, G__29756__$1, G__29757__$1, validate__5821__auto____$1, output_schema29752__$1, input_checker29754__$1, output_checker29755__$1, app__$1, ufv____$1, input_schema29753__$1, code__$1, meta29765) {
              return new t3tr0s_slides.slide08.t29764(owner__$1, G__29756__$1, G__29757__$1, validate__5821__auto____$1, output_schema29752__$1, input_checker29754__$1, output_checker29755__$1, app__$1, ufv____$1, input_schema29753__$1, code__$1, meta29765);
            };
          }(validate__5821__auto__, ufv___29770, output_schema29752_29771, input_schema29753_29772, input_checker29754_29773, output_checker29755_29774);
        }
        return new t3tr0s_slides.slide08.t29764(owner, G__29756, G__29757, validate__5821__auto__, output_schema29752_29771, input_checker29754_29773, output_checker29755_29774, app, ufv___29770, input_schema29753_29772, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29778 = output_checker29755_29774.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29778)) {
        var error__5823__auto___29779 = temp__4126__auto___29778;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___29779)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29752_29771, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29779], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29770, output_schema29752_29771, input_schema29753_29772, input_checker29754_29773, output_checker29755_29774);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide08.code), schema.core.make_fn_schema.call(null, output_schema29752_29771, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29753_29772], null)));
t3tr0s_slides.slide08.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide08.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m29751) {
    return om.core.build.call(null, t3tr0s_slides.slide08.code, cursor__9685__auto__, m29751);
  };
  __GT_code = function(cursor__9685__auto__, m29751) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m29751);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide08.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide08.rows);
t3tr0s_slides.slide08.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__29780, is_center) {
  var vec__29782 = p__29780;
  var x = cljs.core.nth.call(null, vec__29782, 0, null);
  var y = cljs.core.nth.call(null, vec__29782, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide08.cell_size * x;
  var ry = t3tr0s_slides.slide08.cell_size * y;
  var rs = t3tr0s_slides.slide08.cell_size;
  var cx = t3tr0s_slides.slide08.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide08.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide08.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide08.piece_abs_coords = function piece_abs_coords(piece, p__29783) {
  var vec__29787 = p__29783;
  var cx = cljs.core.nth.call(null, vec__29787, 0, null);
  var cy = cljs.core.nth.call(null, vec__29787, 1, null);
  return cljs.core.mapv.call(null, function(vec__29787, cx, cy) {
    return function(p__29788) {
      var vec__29789 = p__29788;
      var x = cljs.core.nth.call(null, vec__29789, 0, null);
      var y = cljs.core.nth.call(null, vec__29789, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__29787, cx, cy), piece);
};
t3tr0s_slides.slide08.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__29796 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide08.piece_abs_coords.call(null, piece, pos)));
  var chunk__29797 = null;
  var count__29798 = 0;
  var i__29799 = 0;
  while (true) {
    if (i__29799 < count__29798) {
      var vec__29800 = cljs.core._nth.call(null, chunk__29797, i__29799);
      var i = cljs.core.nth.call(null, vec__29800, 0, null);
      var c = cljs.core.nth.call(null, vec__29800, 1, null);
      t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__29802 = seq__29796;
      var G__29803 = chunk__29797;
      var G__29804 = count__29798;
      var G__29805 = i__29799 + 1;
      seq__29796 = G__29802;
      chunk__29797 = G__29803;
      count__29798 = G__29804;
      i__29799 = G__29805;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__29796);
      if (temp__4126__auto__) {
        var seq__29796__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__29796__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__29796__$1);
          var G__29806 = cljs.core.chunk_rest.call(null, seq__29796__$1);
          var G__29807 = c__4309__auto__;
          var G__29808 = cljs.core.count.call(null, c__4309__auto__);
          var G__29809 = 0;
          seq__29796 = G__29806;
          chunk__29797 = G__29807;
          count__29798 = G__29808;
          i__29799 = G__29809;
          continue;
        } else {
          var vec__29801 = cljs.core.first.call(null, seq__29796__$1);
          var i = cljs.core.nth.call(null, vec__29801, 0, null);
          var c = cljs.core.nth.call(null, vec__29801, 1, null);
          t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__29810 = cljs.core.next.call(null, seq__29796__$1);
          var G__29811 = null;
          var G__29812 = 0;
          var G__29813 = 0;
          seq__29796 = G__29810;
          chunk__29797 = G__29811;
          count__29798 = G__29812;
          i__29799 = G__29813;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide08.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__29826 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide08.rows));
  var chunk__29831 = null;
  var count__29832 = 0;
  var i__29833 = 0;
  while (true) {
    if (i__29833 < count__29832) {
      var y = cljs.core._nth.call(null, chunk__29831, i__29833);
      var seq__29834_29838 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide08.cols));
      var chunk__29835_29839 = null;
      var count__29836_29840 = 0;
      var i__29837_29841 = 0;
      while (true) {
        if (i__29837_29841 < count__29836_29840) {
          var x_29842 = cljs.core._nth.call(null, chunk__29835_29839, i__29837_29841);
          var v_29843 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_29842], null));
          if (v_29843 === 0) {
          } else {
            t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_29842, y], null), false);
          }
          var G__29844 = seq__29834_29838;
          var G__29845 = chunk__29835_29839;
          var G__29846 = count__29836_29840;
          var G__29847 = i__29837_29841 + 1;
          seq__29834_29838 = G__29844;
          chunk__29835_29839 = G__29845;
          count__29836_29840 = G__29846;
          i__29837_29841 = G__29847;
          continue;
        } else {
          var temp__4126__auto___29848 = cljs.core.seq.call(null, seq__29834_29838);
          if (temp__4126__auto___29848) {
            var seq__29834_29849__$1 = temp__4126__auto___29848;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__29834_29849__$1)) {
              var c__4309__auto___29850 = cljs.core.chunk_first.call(null, seq__29834_29849__$1);
              var G__29851 = cljs.core.chunk_rest.call(null, seq__29834_29849__$1);
              var G__29852 = c__4309__auto___29850;
              var G__29853 = cljs.core.count.call(null, c__4309__auto___29850);
              var G__29854 = 0;
              seq__29834_29838 = G__29851;
              chunk__29835_29839 = G__29852;
              count__29836_29840 = G__29853;
              i__29837_29841 = G__29854;
              continue;
            } else {
              var x_29855 = cljs.core.first.call(null, seq__29834_29849__$1);
              var v_29856 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_29855], null));
              if (v_29856 === 0) {
              } else {
                t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_29855, y], null), false);
              }
              var G__29857 = cljs.core.next.call(null, seq__29834_29849__$1);
              var G__29858 = null;
              var G__29859 = 0;
              var G__29860 = 0;
              seq__29834_29838 = G__29857;
              chunk__29835_29839 = G__29858;
              count__29836_29840 = G__29859;
              i__29837_29841 = G__29860;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__29861 = seq__29826;
      var G__29862 = chunk__29831;
      var G__29863 = count__29832;
      var G__29864 = i__29833 + 1;
      seq__29826 = G__29861;
      chunk__29831 = G__29862;
      count__29832 = G__29863;
      i__29833 = G__29864;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__29826);
      if (temp__4126__auto__) {
        var seq__29826__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__29826__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__29826__$1);
          var G__29865 = cljs.core.chunk_rest.call(null, seq__29826__$1);
          var G__29866 = c__4309__auto__;
          var G__29867 = cljs.core.count.call(null, c__4309__auto__);
          var G__29868 = 0;
          seq__29826 = G__29865;
          chunk__29831 = G__29866;
          count__29832 = G__29867;
          i__29833 = G__29868;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__29826__$1);
          var seq__29827_29869 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide08.cols));
          var chunk__29828_29870 = null;
          var count__29829_29871 = 0;
          var i__29830_29872 = 0;
          while (true) {
            if (i__29830_29872 < count__29829_29871) {
              var x_29873 = cljs.core._nth.call(null, chunk__29828_29870, i__29830_29872);
              var v_29874 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_29873], null));
              if (v_29874 === 0) {
              } else {
                t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_29873, y], null), false);
              }
              var G__29875 = seq__29827_29869;
              var G__29876 = chunk__29828_29870;
              var G__29877 = count__29829_29871;
              var G__29878 = i__29830_29872 + 1;
              seq__29827_29869 = G__29875;
              chunk__29828_29870 = G__29876;
              count__29829_29871 = G__29877;
              i__29830_29872 = G__29878;
              continue;
            } else {
              var temp__4126__auto___29879__$1 = cljs.core.seq.call(null, seq__29827_29869);
              if (temp__4126__auto___29879__$1) {
                var seq__29827_29880__$1 = temp__4126__auto___29879__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__29827_29880__$1)) {
                  var c__4309__auto___29881 = cljs.core.chunk_first.call(null, seq__29827_29880__$1);
                  var G__29882 = cljs.core.chunk_rest.call(null, seq__29827_29880__$1);
                  var G__29883 = c__4309__auto___29881;
                  var G__29884 = cljs.core.count.call(null, c__4309__auto___29881);
                  var G__29885 = 0;
                  seq__29827_29869 = G__29882;
                  chunk__29828_29870 = G__29883;
                  count__29829_29871 = G__29884;
                  i__29830_29872 = G__29885;
                  continue;
                } else {
                  var x_29886 = cljs.core.first.call(null, seq__29827_29880__$1);
                  var v_29887 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_29886], null));
                  if (v_29887 === 0) {
                  } else {
                    t3tr0s_slides.slide08.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_29886, y], null), false);
                  }
                  var G__29888 = cljs.core.next.call(null, seq__29827_29880__$1);
                  var G__29889 = null;
                  var G__29890 = 0;
                  var G__29891 = 0;
                  seq__29827_29869 = G__29888;
                  chunk__29828_29870 = G__29889;
                  count__29829_29871 = G__29890;
                  i__29830_29872 = G__29891;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__29892 = cljs.core.next.call(null, seq__29826__$1);
          var G__29893 = null;
          var G__29894 = 0;
          var G__29895 = 0;
          seq__29826 = G__29892;
          chunk__29831 = G__29893;
          count__29832 = G__29894;
          i__29833 = G__29895;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide08.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide08.cell_size * t3tr0s_slides.slide08.cols, t3tr0s_slides.slide08.cell_size * t3tr0s_slides.slide08.rows);
  ctx.fillStyle = t3tr0s_slides.slide08.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide08.light_green;
  t3tr0s_slides.slide08.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var fits = t3tr0s_slides.slide08.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = fits ? t3tr0s_slides.slide08.dark_purple : t3tr0s_slides.slide08.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide08.light_purple : t3tr0s_slides.slide08.light_red;
    return t3tr0s_slides.slide08.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide08.canvas_mouse = function canvas_mouse(app, owner, e) {
  var canvas = om.core.get_node.call(null, owner);
  var rect = canvas.getBoundingClientRect();
  var x = e.clientX - rect.left - 20;
  var y = e.clientY - rect.top - 20;
  var col = cljs.core.quot.call(null, x, t3tr0s_slides.slide08.cell_size);
  var row = cljs.core.quot.call(null, y, t3tr0s_slides.slide08.cell_size);
  return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [col, row], null));
};
var ufv___29910 = schema.utils.use_fn_validation;
var output_schema29898_29911 = schema.core.Any;
var input_schema29899_29912 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29900_29913 = schema.core.checker.call(null, input_schema29899_29912);
var output_checker29901_29914 = schema.core.checker.call(null, output_schema29898_29911);
t3tr0s_slides.slide08.canvas = function(ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914) {
  return function canvas(G__29902, G__29903) {
    var validate__5821__auto__ = ufv___29910.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29915 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29902, G__29903], null);
      var temp__4126__auto___29916 = input_checker29900_29913.call(null, args__5822__auto___29915);
      if (cljs.core.truth_(temp__4126__auto___29916)) {
        var error__5823__auto___29917 = temp__4126__auto___29916;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___29917)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29899_29912, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29915, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29917], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29902;
      var owner = G__29903;
      while (true) {
        if (typeof t3tr0s_slides.slide08.t29907 !== "undefined") {
        } else {
          t3tr0s_slides.slide08.t29907 = function(owner, input_checker29900, G__29902, validate__5821__auto__, output_schema29898, output_checker29901, G__29903, canvas, input_schema29899, app, ufv__, meta29908) {
            this.owner = owner;
            this.input_checker29900 = input_checker29900;
            this.G__29902 = G__29902;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema29898 = output_schema29898;
            this.output_checker29901 = output_checker29901;
            this.G__29903 = G__29903;
            this.canvas = canvas;
            this.input_schema29899 = input_schema29899;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta29908 = meta29908;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide08.t29907.cljs$lang$type = true;
          t3tr0s_slides.slide08.t29907.cljs$lang$ctorStr = "t3tr0s-slides.slide08/t29907";
          t3tr0s_slides.slide08.t29907.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide08/t29907");
            };
          }(validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914);
          t3tr0s_slides.slide08.t29907.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide08.t29907.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}, "onMouseDown":function(___$1, validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914) {
                return function() {
                  return om.core.transact_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "piece", "piece", 1396691784), t3tr0s_slides.slide08.rotate_piece);
                };
              }(___$1, validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914), "onMouseMove":function(___$1, validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914) {
                return function(p1__29896_SHARP_) {
                  return t3tr0s_slides.slide08.canvas_mouse.call(null, self__.app, self__.owner, p1__29896_SHARP_);
                };
              }(___$1, validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914)}));
            };
          }(validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914);
          t3tr0s_slides.slide08.t29907.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide08.t29907.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide08.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914);
          t3tr0s_slides.slide08.t29907.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide08.t29907.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide08.cols * t3tr0s_slides.slide08.cell_size;
              canvas__$2.height = t3tr0s_slides.slide08.rows * t3tr0s_slides.slide08.cell_size;
              return t3tr0s_slides.slide08.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914);
          t3tr0s_slides.slide08.t29907.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914) {
            return function(_29909) {
              var self__ = this;
              var _29909__$1 = this;
              return self__.meta29908;
            };
          }(validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914);
          t3tr0s_slides.slide08.t29907.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914) {
            return function(_29909, meta29908__$1) {
              var self__ = this;
              var _29909__$1 = this;
              return new t3tr0s_slides.slide08.t29907(self__.owner, self__.input_checker29900, self__.G__29902, self__.validate__5821__auto__, self__.output_schema29898, self__.output_checker29901, self__.G__29903, self__.canvas, self__.input_schema29899, self__.app, self__.ufv__, meta29908__$1);
            };
          }(validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914);
          t3tr0s_slides.slide08.__GT_t29907 = function(validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914) {
            return function __GT_t29907(owner__$1, input_checker29900__$1, G__29902__$1, validate__5821__auto____$1, output_schema29898__$1, output_checker29901__$1, G__29903__$1, canvas__$1, input_schema29899__$1, app__$1, ufv____$1, meta29908) {
              return new t3tr0s_slides.slide08.t29907(owner__$1, input_checker29900__$1, G__29902__$1, validate__5821__auto____$1, output_schema29898__$1, output_checker29901__$1, G__29903__$1, canvas__$1, input_schema29899__$1, app__$1, ufv____$1, meta29908);
            };
          }(validate__5821__auto__, ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914);
        }
        return new t3tr0s_slides.slide08.t29907(owner, input_checker29900_29913, G__29902, validate__5821__auto__, output_schema29898_29911, output_checker29901_29914, G__29903, canvas, input_schema29899_29912, app, ufv___29910, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29918 = output_checker29901_29914.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29918)) {
        var error__5823__auto___29919 = temp__4126__auto___29918;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___29919)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29898_29911, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29919], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29910, output_schema29898_29911, input_schema29899_29912, input_checker29900_29913, output_checker29901_29914);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide08.canvas), schema.core.make_fn_schema.call(null, output_schema29898_29911, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29899_29912], null)));
t3tr0s_slides.slide08.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide08.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m29897) {
    return om.core.build.call(null, t3tr0s_slides.slide08.canvas, cursor__9685__auto__, m29897);
  };
  __GT_canvas = function(cursor__9685__auto__, m29897) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m29897);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___29937 = schema.utils.use_fn_validation;
var output_schema29921_29938 = schema.core.Any;
var input_schema29922_29939 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29923_29940 = schema.core.checker.call(null, input_schema29922_29939);
var output_checker29924_29941 = schema.core.checker.call(null, output_schema29921_29938);
t3tr0s_slides.slide08.slide = function(ufv___29937, output_schema29921_29938, input_schema29922_29939, input_checker29923_29940, output_checker29924_29941) {
  return function slide(G__29925, G__29926) {
    var validate__5821__auto__ = ufv___29937.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29942 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29925, G__29926], null);
      var temp__4126__auto___29943 = input_checker29923_29940.call(null, args__5822__auto___29942);
      if (cljs.core.truth_(temp__4126__auto___29943)) {
        var error__5823__auto___29944 = temp__4126__auto___29943;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___29944)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29922_29939, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29942, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29944], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29925;
      var owner = G__29926;
      while (true) {
        if (typeof t3tr0s_slides.slide08.t29932 !== "undefined") {
        } else {
          t3tr0s_slides.slide08.t29932 = function(owner, G__29926, validate__5821__auto__, output_schema29921, input_schema29922, input_checker29923, output_checker29924, G__29925, slide, app, ufv__, meta29933) {
            this.owner = owner;
            this.G__29926 = G__29926;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema29921 = output_schema29921;
            this.input_schema29922 = input_schema29922;
            this.input_checker29923 = input_checker29923;
            this.output_checker29924 = output_checker29924;
            this.G__29925 = G__29925;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta29933 = meta29933;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide08.t29932.cljs$lang$type = true;
          t3tr0s_slides.slide08.t29932.cljs$lang$ctorStr = "t3tr0s-slides.slide08/t29932";
          t3tr0s_slides.slide08.t29932.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29937, output_schema29921_29938, input_schema29922_29939, input_checker29923_29940, output_checker29924_29941) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide08/t29932");
            };
          }(validate__5821__auto__, ufv___29937, output_schema29921_29938, input_schema29922_29939, input_checker29923_29940, output_checker29924_29941);
          t3tr0s_slides.slide08.t29932.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide08.t29932.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29937, output_schema29921_29938, input_schema29922_29939, input_checker29923_29940, output_checker29924_29941) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "8. Detect collision."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide08.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide08.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___29937, output_schema29921_29938, input_schema29922_29939, input_checker29923_29940, output_checker29924_29941);
          t3tr0s_slides.slide08.t29932.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29937, output_schema29921_29938, input_schema29922_29939, input_checker29923_29940, output_checker29924_29941) {
            return function(_29934) {
              var self__ = this;
              var _29934__$1 = this;
              return self__.meta29933;
            };
          }(validate__5821__auto__, ufv___29937, output_schema29921_29938, input_schema29922_29939, input_checker29923_29940, output_checker29924_29941);
          t3tr0s_slides.slide08.t29932.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29937, output_schema29921_29938, input_schema29922_29939, input_checker29923_29940, output_checker29924_29941) {
            return function(_29934, meta29933__$1) {
              var self__ = this;
              var _29934__$1 = this;
              return new t3tr0s_slides.slide08.t29932(self__.owner, self__.G__29926, self__.validate__5821__auto__, self__.output_schema29921, self__.input_schema29922, self__.input_checker29923, self__.output_checker29924, self__.G__29925, self__.slide, self__.app, self__.ufv__, meta29933__$1);
            };
          }(validate__5821__auto__, ufv___29937, output_schema29921_29938, input_schema29922_29939, input_checker29923_29940, output_checker29924_29941);
          t3tr0s_slides.slide08.__GT_t29932 = function(validate__5821__auto__, ufv___29937, output_schema29921_29938, input_schema29922_29939, input_checker29923_29940, output_checker29924_29941) {
            return function __GT_t29932(owner__$1, G__29926__$1, validate__5821__auto____$1, output_schema29921__$1, input_schema29922__$1, input_checker29923__$1, output_checker29924__$1, G__29925__$1, slide__$1, app__$1, ufv____$1, meta29933) {
              return new t3tr0s_slides.slide08.t29932(owner__$1, G__29926__$1, validate__5821__auto____$1, output_schema29921__$1, input_schema29922__$1, input_checker29923__$1, output_checker29924__$1, G__29925__$1, slide__$1, app__$1, ufv____$1, meta29933);
            };
          }(validate__5821__auto__, ufv___29937, output_schema29921_29938, input_schema29922_29939, input_checker29923_29940, output_checker29924_29941);
        }
        return new t3tr0s_slides.slide08.t29932(owner, G__29926, validate__5821__auto__, output_schema29921_29938, input_schema29922_29939, input_checker29923_29940, output_checker29924_29941, G__29925, slide, app, ufv___29937, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29945 = output_checker29924_29941.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29945)) {
        var error__5823__auto___29946 = temp__4126__auto___29945;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___29946)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29921_29938, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___29946], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29937, output_schema29921_29938, input_schema29922_29939, input_checker29923_29940, output_checker29924_29941);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide08.slide), schema.core.make_fn_schema.call(null, output_schema29921_29938, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29922_29939], null)));
t3tr0s_slides.slide08.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide08.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m29920) {
    return om.core.build.call(null, t3tr0s_slides.slide08.slide, cursor__9685__auto__, m29920);
  };
  __GT_slide = function(cursor__9685__auto__, m29920) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m29920);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide08.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide08.slide, t3tr0s_slides.slide08.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide08.resume = function resume() {
  return null;
};
t3tr0s_slides.slide08.stop = function stop() {
  return null;
};
goog.provide("t3tr0s_slides.slide12");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide12.dark_green = "#143";
t3tr0s_slides.slide12.light_green = "#175";
t3tr0s_slides.slide12.dark_purple = "#449";
t3tr0s_slides.slide12.light_purple = "#6ad";
t3tr0s_slides.slide12.dark_red = "#944";
t3tr0s_slides.slide12.light_red = "#f8c";
t3tr0s_slides.slide12.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide12.rotate_coord = function rotate_coord(p__31400) {
  var vec__31402 = p__31400;
  var x = cljs.core.nth.call(null, vec__31402, 0, null);
  var y = cljs.core.nth.call(null, vec__31402, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide12.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide12.rotate_coord, piece);
};
t3tr0s_slides.slide12.rows = 20;
t3tr0s_slides.slide12.cols = 10;
t3tr0s_slides.slide12.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide12.cols, 0));
t3tr0s_slides.slide12.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide12.rows, t3tr0s_slides.slide12.empty_row));
t3tr0s_slides.slide12.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 0, 0, 0, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 0, 1, 1, 1, 1], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], null)], null);
t3tr0s_slides.slide12.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null);
t3tr0s_slides.slide12.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide12.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide12.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide12.initial_pos], null));
t3tr0s_slides.slide12.write_piece = function write_piece(board, coords, p__31403, value) {
  while (true) {
    var vec__31407 = p__31403;
    var cx = cljs.core.nth.call(null, vec__31407, 0, null);
    var cy = cljs.core.nth.call(null, vec__31407, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__31408 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__31408, 0, null);
      var y = cljs.core.nth.call(null, vec__31408, 1, null);
      var G__31410 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), value);
        } catch (e31409) {
          if (e31409 instanceof Error) {
            var _ = e31409;
            return board;
          } else {
            throw e31409;
          }
        }
      }();
      var G__31411 = cljs.core.rest.call(null, coords);
      var G__31412 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      var G__31413 = value;
      board = G__31410;
      coords = G__31411;
      p__31403 = G__31412;
      value = G__31413;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide12.create_drawable_board = function create_drawable_board(board, piece, p__31414) {
  var vec__31416 = p__31414;
  var x = cljs.core.nth.call(null, vec__31416, 0, null);
  var y = cljs.core.nth.call(null, vec__31416, 1, null);
  var gy = t3tr0s_slides.slide12.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  var board1 = t3tr0s_slides.slide12.write_piece.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, gy], null), "G");
  var board2 = t3tr0s_slides.slide12.write_piece.call(null, board1, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null), "P");
  return board2;
};
t3tr0s_slides.slide12.app_drawable_board_BANG_ = function app_drawable_board_BANG_() {
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  return t3tr0s_slides.slide12.create_drawable_board.call(null, board, piece, pos);
};
t3tr0s_slides.slide12.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__31418 = cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state);
  var map__31418__$1 = cljs.core.seq_QMARK_.call(null, map__31418) ? cljs.core.apply.call(null, cljs.core.hash_map, map__31418) : map__31418;
  var position = cljs.core.get.call(null, map__31418__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__31418__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide12.write_piece, piece, position, 1);
};
t3tr0s_slides.slide12.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__31419) {
  var vec__31423 = p__31419;
  var cx = cljs.core.nth.call(null, vec__31423, 0, null);
  var cy = cljs.core.nth.call(null, vec__31423, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__31423, cx, cy) {
    return function(p__31424) {
      var vec__31425 = p__31424;
      var x = cljs.core.nth.call(null, vec__31425, 0, null);
      var y = cljs.core.nth.call(null, vec__31425, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__31423, cx, cy), piece);
};
t3tr0s_slides.slide12.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide12.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide12.app_state))));
};
t3tr0s_slides.slide12.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var vec__31427 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var x = cljs.core.nth.call(null, vec__31427, 0, null);
  var y = cljs.core.nth.call(null, vec__31427, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide12.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide12.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var new_piece = t3tr0s_slides.slide12.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide12.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide12.get_drop_pos = function get_drop_pos(board, piece, p__31428) {
  var vec__31430 = p__31428;
  var x = cljs.core.nth.call(null, vec__31430, 0, null);
  var y = cljs.core.nth.call(null, vec__31430, 1, null);
  var collide_QMARK_ = function(vec__31430, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide12.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__31430, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide12.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var vec__31432 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var x = cljs.core.nth.call(null, vec__31432, 0, null);
  var y = cljs.core.nth.call(null, vec__31432, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state));
  var ny = t3tr0s_slides.slide12.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  t3tr0s_slides.slide12.lock_piece_BANG_.call(null);
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide12.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide12.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide12.pieces)));
};
t3tr0s_slides.slide12.filled_rows = function filled_rows(board) {
  return cljs.core.apply.call(null, cljs.core.hash_set, cljs.core.map.call(null, cljs.core.first, cljs.core.filter.call(null, function(p__31435) {
    var vec__31436 = p__31435;
    var i = cljs.core.nth.call(null, vec__31436, 0, null);
    var row = cljs.core.nth.call(null, vec__31436, 1, null);
    return cljs.core.every_QMARK_.call(null, cljs.core.pos_QMARK_, row);
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board))));
};
t3tr0s_slides.slide12.collapse_rows = function collapse_rows(rows, board) {
  var cleared_board = cljs.core.map.call(null, cljs.core.second, cljs.core.remove.call(null, function(p1__31437_SHARP_) {
    return rows.call(null, cljs.core.first.call(null, p1__31437_SHARP_));
  }, cljs.core.map_indexed.call(null, cljs.core.vector, board)));
  var n = cljs.core.count.call(null, rows);
  var new_board = cljs.core.into.call(null, cljs.core.vec.call(null, cljs.core.repeat.call(null, n, t3tr0s_slides.slide12.empty_row)), cleared_board);
  return new_board;
};
t3tr0s_slides.slide12.data_row = function data_row(board, row, app) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "[", function() {
    var iter__4278__auto__ = function iter__31442(s__31443) {
      return new cljs.core.LazySeq(null, function() {
        var s__31443__$1 = s__31443;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__31443__$1);
          if (temp__4126__auto__) {
            var s__31443__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__31443__$2)) {
              var c__4276__auto__ = cljs.core.chunk_first.call(null, s__31443__$2);
              var size__4277__auto__ = cljs.core.count.call(null, c__4276__auto__);
              var b__31445 = cljs.core.chunk_buffer.call(null, size__4277__auto__);
              if (function() {
                var i__31444 = 0;
                while (true) {
                  if (i__31444 < size__4277__auto__) {
                    var col = cljs.core._nth.call(null, c__4276__auto__, i__31444);
                    cljs.core.chunk_append.call(null, b__31445, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null))));
                    var G__31446 = i__31444 + 1;
                    i__31444 = G__31446;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31445), iter__31442.call(null, cljs.core.chunk_rest.call(null, s__31443__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31445), null);
              }
            } else {
              var col = cljs.core.first.call(null, s__31443__$2);
              return cljs.core.cons.call(null, " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row, col], null))), iter__31442.call(null, cljs.core.rest.call(null, s__31443__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4278__auto__.call(null, cljs.core.range.call(null, t3tr0s_slides.slide12.cols));
  }(), " ]"], null);
};
var ufv___31462 = schema.utils.use_fn_validation;
var output_schema31448_31463 = schema.core.Any;
var input_schema31449_31464 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker31450_31465 = schema.core.checker.call(null, input_schema31449_31464);
var output_checker31451_31466 = schema.core.checker.call(null, output_schema31448_31463);
t3tr0s_slides.slide12.code = function(ufv___31462, output_schema31448_31463, input_schema31449_31464, input_checker31450_31465, output_checker31451_31466) {
  return function code(G__31452, G__31453) {
    var validate__5821__auto__ = ufv___31462.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___31467 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__31452, G__31453], null);
      var temp__4126__auto___31468 = input_checker31450_31465.call(null, args__5822__auto___31467);
      if (cljs.core.truth_(temp__4126__auto___31468)) {
        var error__5823__auto___31469 = temp__4126__auto___31468;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___31469)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema31449_31464, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___31467, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___31469], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__31452;
      var owner = G__31453;
      while (true) {
        if (typeof t3tr0s_slides.slide12.t31458 !== "undefined") {
        } else {
          t3tr0s_slides.slide12.t31458 = function(input_checker31450, owner, output_schema31448, validate__5821__auto__, G__31452, output_checker31451, input_schema31449, G__31453, app, ufv__, code, meta31459) {
            this.input_checker31450 = input_checker31450;
            this.owner = owner;
            this.output_schema31448 = output_schema31448;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__31452 = G__31452;
            this.output_checker31451 = output_checker31451;
            this.input_schema31449 = input_schema31449;
            this.G__31453 = G__31453;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta31459 = meta31459;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide12.t31458.cljs$lang$type = true;
          t3tr0s_slides.slide12.t31458.cljs$lang$ctorStr = "t3tr0s-slides.slide12/t31458";
          t3tr0s_slides.slide12.t31458.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___31462, output_schema31448_31463, input_schema31449_31464, input_checker31450_31465, output_checker31451_31466) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide12/t31458");
            };
          }(validate__5821__auto__, ufv___31462, output_schema31448_31463, input_schema31449_31464, input_checker31450_31465, output_checker31451_31466);
          t3tr0s_slides.slide12.t31458.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide12.t31458.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___31462, output_schema31448_31463, input_schema31449_31464, input_checker31450_31465, output_checker31451_31466) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs31461 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: press space to hard-drop.");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs31461) ? sablono.interpreter.attributes.call(null, attrs31461) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs31461) ? cljs.core.PersistentVector.fromArray(["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
                ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " filled-rows\n", "  [board]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "-\x3e\x3e")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "map-indexed")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "vector")), " board)\n", "       (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "filter")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "fn")), " [[i row]] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "every?")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "pos?")), " row)))\n", "       (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "map")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), ")\n", "       (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "apply")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "hash-set")), ")))\n", "\n\n", "\x3e (filled-rows (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
                ":board")), " @game-state))", "\n\n", "    ", sablono.interpreter.interpret.call(null, cljs.core.pr_str.call(null, t3tr0s_slides.slide12.filled_rows.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state))))), "\n"], true) : cljs.core.PersistentVector.fromArray([sablono.interpreter.interpret.call(null, attrs31461), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
                ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " filled-rows\n", "  [board]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "-\x3e\x3e")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "map-indexed")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "vector")), " board)\n", "       (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "filter")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "fn")), " [[i row]] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "every?")), " ", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "pos?")), " row)))\n", "       (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "map")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), ")\n", "       (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "apply")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "hash-set")), ")))\n", "\n\n", "\x3e (filled-rows (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " @game-state))", "\n\n", "    ", sablono.interpreter.interpret.call(null, cljs.core.pr_str.call(null, t3tr0s_slides.slide12.filled_rows.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state))))), "\n"], true)));
              }()));
            };
          }(validate__5821__auto__, ufv___31462, output_schema31448_31463, input_schema31449_31464, input_checker31450_31465, output_checker31451_31466);
          t3tr0s_slides.slide12.t31458.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___31462, output_schema31448_31463, input_schema31449_31464, input_checker31450_31465, output_checker31451_31466) {
            return function(_31460) {
              var self__ = this;
              var _31460__$1 = this;
              return self__.meta31459;
            };
          }(validate__5821__auto__, ufv___31462, output_schema31448_31463, input_schema31449_31464, input_checker31450_31465, output_checker31451_31466);
          t3tr0s_slides.slide12.t31458.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___31462, output_schema31448_31463, input_schema31449_31464, input_checker31450_31465, output_checker31451_31466) {
            return function(_31460, meta31459__$1) {
              var self__ = this;
              var _31460__$1 = this;
              return new t3tr0s_slides.slide12.t31458(self__.input_checker31450, self__.owner, self__.output_schema31448, self__.validate__5821__auto__, self__.G__31452, self__.output_checker31451, self__.input_schema31449, self__.G__31453, self__.app, self__.ufv__, self__.code, meta31459__$1);
            };
          }(validate__5821__auto__, ufv___31462, output_schema31448_31463, input_schema31449_31464, input_checker31450_31465, output_checker31451_31466);
          t3tr0s_slides.slide12.__GT_t31458 = function(validate__5821__auto__, ufv___31462, output_schema31448_31463, input_schema31449_31464, input_checker31450_31465, output_checker31451_31466) {
            return function __GT_t31458(input_checker31450__$1, owner__$1, output_schema31448__$1, validate__5821__auto____$1, G__31452__$1, output_checker31451__$1, input_schema31449__$1, G__31453__$1, app__$1, ufv____$1, code__$1, meta31459) {
              return new t3tr0s_slides.slide12.t31458(input_checker31450__$1, owner__$1, output_schema31448__$1, validate__5821__auto____$1, G__31452__$1, output_checker31451__$1, input_schema31449__$1, G__31453__$1, app__$1, ufv____$1, code__$1, meta31459);
            };
          }(validate__5821__auto__, ufv___31462, output_schema31448_31463, input_schema31449_31464, input_checker31450_31465, output_checker31451_31466);
        }
        return new t3tr0s_slides.slide12.t31458(input_checker31450_31465, owner, output_schema31448_31463, validate__5821__auto__, G__31452, output_checker31451_31466, input_schema31449_31464, G__31453, app, ufv___31462, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___31470 = output_checker31451_31466.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___31470)) {
        var error__5823__auto___31471 = temp__4126__auto___31470;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___31471)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema31448_31463, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___31471], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___31462, output_schema31448_31463, input_schema31449_31464, input_checker31450_31465, output_checker31451_31466);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide12.code), schema.core.make_fn_schema.call(null, output_schema31448_31463, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema31449_31464], null)));
t3tr0s_slides.slide12.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide12.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m31447) {
    return om.core.build.call(null, t3tr0s_slides.slide12.code, cursor__9685__auto__, m31447);
  };
  __GT_code = function(cursor__9685__auto__, m31447) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m31447);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide12.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide12.rows);
t3tr0s_slides.slide12.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__31472, is_center) {
  var vec__31474 = p__31472;
  var x = cljs.core.nth.call(null, vec__31474, 0, null);
  var y = cljs.core.nth.call(null, vec__31474, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide12.cell_size * x;
  var ry = t3tr0s_slides.slide12.cell_size * y;
  var rs = t3tr0s_slides.slide12.cell_size;
  var cx = t3tr0s_slides.slide12.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide12.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide12.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide12.piece_abs_coords = function piece_abs_coords(piece, p__31475) {
  var vec__31479 = p__31475;
  var cx = cljs.core.nth.call(null, vec__31479, 0, null);
  var cy = cljs.core.nth.call(null, vec__31479, 1, null);
  return cljs.core.mapv.call(null, function(vec__31479, cx, cy) {
    return function(p__31480) {
      var vec__31481 = p__31480;
      var x = cljs.core.nth.call(null, vec__31481, 0, null);
      var y = cljs.core.nth.call(null, vec__31481, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__31479, cx, cy), piece);
};
t3tr0s_slides.slide12.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__31488 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide12.piece_abs_coords.call(null, piece, pos)));
  var chunk__31489 = null;
  var count__31490 = 0;
  var i__31491 = 0;
  while (true) {
    if (i__31491 < count__31490) {
      var vec__31492 = cljs.core._nth.call(null, chunk__31489, i__31491);
      var i = cljs.core.nth.call(null, vec__31492, 0, null);
      var c = cljs.core.nth.call(null, vec__31492, 1, null);
      t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__31494 = seq__31488;
      var G__31495 = chunk__31489;
      var G__31496 = count__31490;
      var G__31497 = i__31491 + 1;
      seq__31488 = G__31494;
      chunk__31489 = G__31495;
      count__31490 = G__31496;
      i__31491 = G__31497;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__31488);
      if (temp__4126__auto__) {
        var seq__31488__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__31488__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__31488__$1);
          var G__31498 = cljs.core.chunk_rest.call(null, seq__31488__$1);
          var G__31499 = c__4309__auto__;
          var G__31500 = cljs.core.count.call(null, c__4309__auto__);
          var G__31501 = 0;
          seq__31488 = G__31498;
          chunk__31489 = G__31499;
          count__31490 = G__31500;
          i__31491 = G__31501;
          continue;
        } else {
          var vec__31493 = cljs.core.first.call(null, seq__31488__$1);
          var i = cljs.core.nth.call(null, vec__31493, 0, null);
          var c = cljs.core.nth.call(null, vec__31493, 1, null);
          t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__31502 = cljs.core.next.call(null, seq__31488__$1);
          var G__31503 = null;
          var G__31504 = 0;
          var G__31505 = 0;
          seq__31488 = G__31502;
          chunk__31489 = G__31503;
          count__31490 = G__31504;
          i__31491 = G__31505;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide12.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var filled_QMARK_ = t3tr0s_slides.slide12.filled_rows.call(null, board);
  var seq__31518 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide12.rows));
  var chunk__31523 = null;
  var count__31524 = 0;
  var i__31525 = 0;
  while (true) {
    if (i__31525 < count__31524) {
      var y = cljs.core._nth.call(null, chunk__31523, i__31525);
      var seq__31526_31530 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide12.cols));
      var chunk__31527_31531 = null;
      var count__31528_31532 = 0;
      var i__31529_31533 = 0;
      while (true) {
        if (i__31529_31533 < count__31528_31532) {
          var x_31534 = cljs.core._nth.call(null, chunk__31527_31531, i__31529_31533);
          ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
          var v_31535 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_31534], null));
          if (v_31535 === 0) {
          } else {
            t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_31534, y], null), false);
          }
          var G__31536 = seq__31526_31530;
          var G__31537 = chunk__31527_31531;
          var G__31538 = count__31528_31532;
          var G__31539 = i__31529_31533 + 1;
          seq__31526_31530 = G__31536;
          chunk__31527_31531 = G__31537;
          count__31528_31532 = G__31538;
          i__31529_31533 = G__31539;
          continue;
        } else {
          var temp__4126__auto___31540 = cljs.core.seq.call(null, seq__31526_31530);
          if (temp__4126__auto___31540) {
            var seq__31526_31541__$1 = temp__4126__auto___31540;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__31526_31541__$1)) {
              var c__4309__auto___31542 = cljs.core.chunk_first.call(null, seq__31526_31541__$1);
              var G__31543 = cljs.core.chunk_rest.call(null, seq__31526_31541__$1);
              var G__31544 = c__4309__auto___31542;
              var G__31545 = cljs.core.count.call(null, c__4309__auto___31542);
              var G__31546 = 0;
              seq__31526_31530 = G__31543;
              chunk__31527_31531 = G__31544;
              count__31528_31532 = G__31545;
              i__31529_31533 = G__31546;
              continue;
            } else {
              var x_31547 = cljs.core.first.call(null, seq__31526_31541__$1);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
              var v_31548 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_31547], null));
              if (v_31548 === 0) {
              } else {
                t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_31547, y], null), false);
              }
              var G__31549 = cljs.core.next.call(null, seq__31526_31541__$1);
              var G__31550 = null;
              var G__31551 = 0;
              var G__31552 = 0;
              seq__31526_31530 = G__31549;
              chunk__31527_31531 = G__31550;
              count__31528_31532 = G__31551;
              i__31529_31533 = G__31552;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__31553 = seq__31518;
      var G__31554 = chunk__31523;
      var G__31555 = count__31524;
      var G__31556 = i__31525 + 1;
      seq__31518 = G__31553;
      chunk__31523 = G__31554;
      count__31524 = G__31555;
      i__31525 = G__31556;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__31518);
      if (temp__4126__auto__) {
        var seq__31518__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__31518__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__31518__$1);
          var G__31557 = cljs.core.chunk_rest.call(null, seq__31518__$1);
          var G__31558 = c__4309__auto__;
          var G__31559 = cljs.core.count.call(null, c__4309__auto__);
          var G__31560 = 0;
          seq__31518 = G__31557;
          chunk__31523 = G__31558;
          count__31524 = G__31559;
          i__31525 = G__31560;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__31518__$1);
          var seq__31519_31561 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide12.cols));
          var chunk__31520_31562 = null;
          var count__31521_31563 = 0;
          var i__31522_31564 = 0;
          while (true) {
            if (i__31522_31564 < count__31521_31563) {
              var x_31565 = cljs.core._nth.call(null, chunk__31520_31562, i__31522_31564);
              ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
              var v_31566 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_31565], null));
              if (v_31566 === 0) {
              } else {
                t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_31565, y], null), false);
              }
              var G__31567 = seq__31519_31561;
              var G__31568 = chunk__31520_31562;
              var G__31569 = count__31521_31563;
              var G__31570 = i__31522_31564 + 1;
              seq__31519_31561 = G__31567;
              chunk__31520_31562 = G__31568;
              count__31521_31563 = G__31569;
              i__31522_31564 = G__31570;
              continue;
            } else {
              var temp__4126__auto___31571__$1 = cljs.core.seq.call(null, seq__31519_31561);
              if (temp__4126__auto___31571__$1) {
                var seq__31519_31572__$1 = temp__4126__auto___31571__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__31519_31572__$1)) {
                  var c__4309__auto___31573 = cljs.core.chunk_first.call(null, seq__31519_31572__$1);
                  var G__31574 = cljs.core.chunk_rest.call(null, seq__31519_31572__$1);
                  var G__31575 = c__4309__auto___31573;
                  var G__31576 = cljs.core.count.call(null, c__4309__auto___31573);
                  var G__31577 = 0;
                  seq__31519_31561 = G__31574;
                  chunk__31520_31562 = G__31575;
                  count__31521_31563 = G__31576;
                  i__31522_31564 = G__31577;
                  continue;
                } else {
                  var x_31578 = cljs.core.first.call(null, seq__31519_31572__$1);
                  ctx.globalAlpha = cljs.core.truth_(filled_QMARK_.call(null, y)) ? .25 : 1;
                  var v_31579 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_31578], null));
                  if (v_31579 === 0) {
                  } else {
                    t3tr0s_slides.slide12.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_31578, y], null), false);
                  }
                  var G__31580 = cljs.core.next.call(null, seq__31519_31572__$1);
                  var G__31581 = null;
                  var G__31582 = 0;
                  var G__31583 = 0;
                  seq__31519_31561 = G__31580;
                  chunk__31520_31562 = G__31581;
                  count__31521_31563 = G__31582;
                  i__31522_31564 = G__31583;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__31584 = cljs.core.next.call(null, seq__31518__$1);
          var G__31585 = null;
          var G__31586 = 0;
          var G__31587 = 0;
          seq__31518 = G__31584;
          chunk__31523 = G__31585;
          count__31524 = G__31586;
          i__31525 = G__31587;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide12.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide12.cell_size * t3tr0s_slides.slide12.cols, t3tr0s_slides.slide12.cell_size * t3tr0s_slides.slide12.rows);
  ctx.fillStyle = t3tr0s_slides.slide12.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide12.light_green;
  t3tr0s_slides.slide12.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  ctx.globalAlpha = 1;
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var drop_y = t3tr0s_slides.slide12.get_drop_pos.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide12.app_state)), piece, pos);
  var drop_pos = cljs.core.assoc.call(null, pos, 1, drop_y);
  var fits = t3tr0s_slides.slide12.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = "#333";
    ctx.strokeStyle = "#666";
    t3tr0s_slides.slide12.draw_piece_BANG_.call(null, ctx, piece, drop_pos);
    ctx.fillStyle = fits ? t3tr0s_slides.slide12.dark_purple : t3tr0s_slides.slide12.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide12.light_purple : t3tr0s_slides.slide12.light_red;
    return t3tr0s_slides.slide12.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide12.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide12.key_name = function key_name(p1__31588_SHARP_) {
  return t3tr0s_slides.slide12.key_names.call(null, p1__31588_SHARP_.keyCode);
};
t3tr0s_slides.slide12.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide12.key_name.call(null, e);
  var G__31590_31591 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__31590_31591) {
    case "space":
      t3tr0s_slides.slide12.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide12.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide12.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide12.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___31610 = schema.utils.use_fn_validation;
var output_schema31594_31611 = schema.core.Any;
var input_schema31595_31612 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker31596_31613 = schema.core.checker.call(null, input_schema31595_31612);
var output_checker31597_31614 = schema.core.checker.call(null, output_schema31594_31611);
t3tr0s_slides.slide12.canvas = function(ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614) {
  return function canvas(G__31598, G__31599) {
    var validate__5821__auto__ = ufv___31610.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___31615 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__31598, G__31599], null);
      var temp__4126__auto___31616 = input_checker31596_31613.call(null, args__5822__auto___31615);
      if (cljs.core.truth_(temp__4126__auto___31616)) {
        var error__5823__auto___31617 = temp__4126__auto___31616;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___31617)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema31595_31612, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___31615, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___31617], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__31598;
      var owner = G__31599;
      while (true) {
        if (typeof t3tr0s_slides.slide12.t31605 !== "undefined") {
        } else {
          t3tr0s_slides.slide12.t31605 = function(output_checker31597, owner, input_checker31596, validate__5821__auto__, output_schema31594, input_schema31595, canvas, app, G__31599, ufv__, G__31598, meta31606) {
            this.output_checker31597 = output_checker31597;
            this.owner = owner;
            this.input_checker31596 = input_checker31596;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_schema31594 = output_schema31594;
            this.input_schema31595 = input_schema31595;
            this.canvas = canvas;
            this.app = app;
            this.G__31599 = G__31599;
            this.ufv__ = ufv__;
            this.G__31598 = G__31598;
            this.meta31606 = meta31606;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide12.t31605.cljs$lang$type = true;
          t3tr0s_slides.slide12.t31605.cljs$lang$ctorStr = "t3tr0s-slides.slide12/t31605";
          t3tr0s_slides.slide12.t31605.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide12/t31605");
            };
          }(validate__5821__auto__, ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614);
          t3tr0s_slides.slide12.t31605.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide12.t31605.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614);
          t3tr0s_slides.slide12.t31605.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide12.t31605.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide12.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614);
          t3tr0s_slides.slide12.t31605.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide12.t31605.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide12.cols * t3tr0s_slides.slide12.cell_size;
              canvas__$2.height = t3tr0s_slides.slide12.rows * t3tr0s_slides.slide12.cell_size;
              return t3tr0s_slides.slide12.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614);
          t3tr0s_slides.slide12.t31605.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614) {
            return function(_31607) {
              var self__ = this;
              var _31607__$1 = this;
              return self__.meta31606;
            };
          }(validate__5821__auto__, ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614);
          t3tr0s_slides.slide12.t31605.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614) {
            return function(_31607, meta31606__$1) {
              var self__ = this;
              var _31607__$1 = this;
              return new t3tr0s_slides.slide12.t31605(self__.output_checker31597, self__.owner, self__.input_checker31596, self__.validate__5821__auto__, self__.output_schema31594, self__.input_schema31595, self__.canvas, self__.app, self__.G__31599, self__.ufv__, self__.G__31598, meta31606__$1);
            };
          }(validate__5821__auto__, ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614);
          t3tr0s_slides.slide12.__GT_t31605 = function(validate__5821__auto__, ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614) {
            return function __GT_t31605(output_checker31597__$1, owner__$1, input_checker31596__$1, validate__5821__auto____$1, output_schema31594__$1, input_schema31595__$1, canvas__$1, app__$1, G__31599__$1, ufv____$1, G__31598__$1, meta31606) {
              return new t3tr0s_slides.slide12.t31605(output_checker31597__$1, owner__$1, input_checker31596__$1, validate__5821__auto____$1, output_schema31594__$1, input_schema31595__$1, canvas__$1, app__$1, G__31599__$1, ufv____$1, G__31598__$1, meta31606);
            };
          }(validate__5821__auto__, ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614);
        }
        return new t3tr0s_slides.slide12.t31605(output_checker31597_31614, owner, input_checker31596_31613, validate__5821__auto__, output_schema31594_31611, input_schema31595_31612, canvas, app, G__31599, ufv___31610, G__31598, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___31618 = output_checker31597_31614.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___31618)) {
        var error__5823__auto___31619 = temp__4126__auto___31618;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___31619)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema31594_31611, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___31619], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___31610, output_schema31594_31611, input_schema31595_31612, input_checker31596_31613, output_checker31597_31614);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide12.canvas), schema.core.make_fn_schema.call(null, output_schema31594_31611, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema31595_31612], null)));
t3tr0s_slides.slide12.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide12.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m31593) {
    return om.core.build.call(null, t3tr0s_slides.slide12.canvas, cursor__9685__auto__, m31593);
  };
  __GT_canvas = function(cursor__9685__auto__, m31593) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m31593);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___31637 = schema.utils.use_fn_validation;
var output_schema31621_31638 = schema.core.Any;
var input_schema31622_31639 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker31623_31640 = schema.core.checker.call(null, input_schema31622_31639);
var output_checker31624_31641 = schema.core.checker.call(null, output_schema31621_31638);
t3tr0s_slides.slide12.slide = function(ufv___31637, output_schema31621_31638, input_schema31622_31639, input_checker31623_31640, output_checker31624_31641) {
  return function slide(G__31625, G__31626) {
    var validate__5821__auto__ = ufv___31637.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___31642 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__31625, G__31626], null);
      var temp__4126__auto___31643 = input_checker31623_31640.call(null, args__5822__auto___31642);
      if (cljs.core.truth_(temp__4126__auto___31643)) {
        var error__5823__auto___31644 = temp__4126__auto___31643;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___31644)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema31622_31639, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___31642, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___31644], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__31625;
      var owner = G__31626;
      while (true) {
        if (typeof t3tr0s_slides.slide12.t31632 !== "undefined") {
        } else {
          t3tr0s_slides.slide12.t31632 = function(G__31625, owner, validate__5821__auto__, G__31626, input_checker31623, output_checker31624, slide, app, ufv__, input_schema31622, output_schema31621, meta31633) {
            this.G__31625 = G__31625;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__31626 = G__31626;
            this.input_checker31623 = input_checker31623;
            this.output_checker31624 = output_checker31624;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_schema31622 = input_schema31622;
            this.output_schema31621 = output_schema31621;
            this.meta31633 = meta31633;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide12.t31632.cljs$lang$type = true;
          t3tr0s_slides.slide12.t31632.cljs$lang$ctorStr = "t3tr0s-slides.slide12/t31632";
          t3tr0s_slides.slide12.t31632.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___31637, output_schema31621_31638, input_schema31622_31639, input_checker31623_31640, output_checker31624_31641) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide12/t31632");
            };
          }(validate__5821__auto__, ufv___31637, output_schema31621_31638, input_schema31622_31639, input_checker31623_31640, output_checker31624_31641);
          t3tr0s_slides.slide12.t31632.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide12.t31632.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___31637, output_schema31621_31638, input_schema31622_31639, input_checker31623_31640, output_checker31624_31641) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "12. Detect filled rows."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide12.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide12.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___31637, output_schema31621_31638, input_schema31622_31639, input_checker31623_31640, output_checker31624_31641);
          t3tr0s_slides.slide12.t31632.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___31637, output_schema31621_31638, input_schema31622_31639, input_checker31623_31640, output_checker31624_31641) {
            return function(_31634) {
              var self__ = this;
              var _31634__$1 = this;
              return self__.meta31633;
            };
          }(validate__5821__auto__, ufv___31637, output_schema31621_31638, input_schema31622_31639, input_checker31623_31640, output_checker31624_31641);
          t3tr0s_slides.slide12.t31632.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___31637, output_schema31621_31638, input_schema31622_31639, input_checker31623_31640, output_checker31624_31641) {
            return function(_31634, meta31633__$1) {
              var self__ = this;
              var _31634__$1 = this;
              return new t3tr0s_slides.slide12.t31632(self__.G__31625, self__.owner, self__.validate__5821__auto__, self__.G__31626, self__.input_checker31623, self__.output_checker31624, self__.slide, self__.app, self__.ufv__, self__.input_schema31622, self__.output_schema31621, meta31633__$1);
            };
          }(validate__5821__auto__, ufv___31637, output_schema31621_31638, input_schema31622_31639, input_checker31623_31640, output_checker31624_31641);
          t3tr0s_slides.slide12.__GT_t31632 = function(validate__5821__auto__, ufv___31637, output_schema31621_31638, input_schema31622_31639, input_checker31623_31640, output_checker31624_31641) {
            return function __GT_t31632(G__31625__$1, owner__$1, validate__5821__auto____$1, G__31626__$1, input_checker31623__$1, output_checker31624__$1, slide__$1, app__$1, ufv____$1, input_schema31622__$1, output_schema31621__$1, meta31633) {
              return new t3tr0s_slides.slide12.t31632(G__31625__$1, owner__$1, validate__5821__auto____$1, G__31626__$1, input_checker31623__$1, output_checker31624__$1, slide__$1, app__$1, ufv____$1, input_schema31622__$1, output_schema31621__$1, meta31633);
            };
          }(validate__5821__auto__, ufv___31637, output_schema31621_31638, input_schema31622_31639, input_checker31623_31640, output_checker31624_31641);
        }
        return new t3tr0s_slides.slide12.t31632(G__31625, owner, validate__5821__auto__, G__31626, input_checker31623_31640, output_checker31624_31641, slide, app, ufv___31637, input_schema31622_31639, output_schema31621_31638, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___31645 = output_checker31624_31641.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___31645)) {
        var error__5823__auto___31646 = temp__4126__auto___31645;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___31646)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema31621_31638, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___31646], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___31637, output_schema31621_31638, input_schema31622_31639, input_checker31623_31640, output_checker31624_31641);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide12.slide), schema.core.make_fn_schema.call(null, output_schema31621_31638, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema31622_31639], null)));
t3tr0s_slides.slide12.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide12.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m31620) {
    return om.core.build.call(null, t3tr0s_slides.slide12.slide, cursor__9685__auto__, m31620);
  };
  __GT_slide = function(cursor__9685__auto__, m31620) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m31620);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide12.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide12.slide, t3tr0s_slides.slide12.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide12.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide12.key_down);
};
t3tr0s_slides.slide12.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide12.key_down);
};
goog.provide("t3tr0s_slides.slide09");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide09.dark_green = "#143";
t3tr0s_slides.slide09.light_green = "#175";
t3tr0s_slides.slide09.dark_purple = "#449";
t3tr0s_slides.slide09.light_purple = "#6ad";
t3tr0s_slides.slide09.dark_red = "#944";
t3tr0s_slides.slide09.light_red = "#f8c";
t3tr0s_slides.slide09.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide09.rotate_coord = function rotate_coord(p__29947) {
  var vec__29949 = p__29947;
  var x = cljs.core.nth.call(null, vec__29949, 0, null);
  var y = cljs.core.nth.call(null, vec__29949, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide09.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide09.rotate_coord, piece);
};
t3tr0s_slides.slide09.rows = 20;
t3tr0s_slides.slide09.cols = 10;
t3tr0s_slides.slide09.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide09.cols, 0));
t3tr0s_slides.slide09.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide09.rows, t3tr0s_slides.slide09.empty_row));
t3tr0s_slides.slide09.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide09.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null);
t3tr0s_slides.slide09.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide09.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide09.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide09.initial_pos], null));
t3tr0s_slides.slide09.write_piece = function write_piece(board, coords, p__29950) {
  while (true) {
    var vec__29954 = p__29950;
    var cx = cljs.core.nth.call(null, vec__29954, 0, null);
    var cy = cljs.core.nth.call(null, vec__29954, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__29955 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__29955, 0, null);
      var y = cljs.core.nth.call(null, vec__29955, 1, null);
      var G__29957 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e29956) {
          if (e29956 instanceof Error) {
            var _ = e29956;
            return board;
          } else {
            throw e29956;
          }
        }
      }();
      var G__29958 = cljs.core.rest.call(null, coords);
      var G__29959 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__29957;
      coords = G__29958;
      p__29950 = G__29959;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide09.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__29961 = cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state);
  var map__29961__$1 = cljs.core.seq_QMARK_.call(null, map__29961) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29961) : map__29961;
  var position = cljs.core.get.call(null, map__29961__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__29961__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide09.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide09.write_piece, piece, position);
};
t3tr0s_slides.slide09.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__29962) {
  var vec__29966 = p__29962;
  var cx = cljs.core.nth.call(null, vec__29966, 0, null);
  var cy = cljs.core.nth.call(null, vec__29966, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__29966, cx, cy) {
    return function(p__29967) {
      var vec__29968 = p__29967;
      var x = cljs.core.nth.call(null, vec__29968, 0, null);
      var y = cljs.core.nth.call(null, vec__29968, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__29966, cx, cy), piece);
};
t3tr0s_slides.slide09.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide09.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide09.app_state))));
};
t3tr0s_slides.slide09.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var vec__29970 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var x = cljs.core.nth.call(null, vec__29970, 0, null);
  var y = cljs.core.nth.call(null, vec__29970, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide09.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide09.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide09.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var new_piece = t3tr0s_slides.slide09.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide09.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide09.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide09.get_drop_pos = function get_drop_pos(board, piece, p__29971) {
  var vec__29973 = p__29971;
  var x = cljs.core.nth.call(null, vec__29973, 0, null);
  var y = cljs.core.nth.call(null, vec__29973, 1, null);
  var collide_QMARK_ = function(vec__29973, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide09.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__29973, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide09.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var vec__29975 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var x = cljs.core.nth.call(null, vec__29975, 0, null);
  var y = cljs.core.nth.call(null, vec__29975, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide09.app_state));
  var ny = t3tr0s_slides.slide09.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide09.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  return t3tr0s_slides.slide09.lock_piece_BANG_.call(null);
};
var ufv___29991 = schema.utils.use_fn_validation;
var output_schema29977_29992 = schema.core.Any;
var input_schema29978_29993 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker29979_29994 = schema.core.checker.call(null, input_schema29978_29993);
var output_checker29980_29995 = schema.core.checker.call(null, output_schema29977_29992);
t3tr0s_slides.slide09.code = function(ufv___29991, output_schema29977_29992, input_schema29978_29993, input_checker29979_29994, output_checker29980_29995) {
  return function code(G__29981, G__29982) {
    var validate__5821__auto__ = ufv___29991.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___29996 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__29981, G__29982], null);
      var temp__4126__auto___29997 = input_checker29979_29994.call(null, args__5822__auto___29996);
      if (cljs.core.truth_(temp__4126__auto___29997)) {
        var error__5823__auto___29998 = temp__4126__auto___29997;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___29998)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema29978_29993, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___29996, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___29998], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__29981;
      var owner = G__29982;
      while (true) {
        if (typeof t3tr0s_slides.slide09.t29987 !== "undefined") {
        } else {
          t3tr0s_slides.slide09.t29987 = function(input_schema29978, input_checker29979, owner, output_schema29977, validate__5821__auto__, G__29981, G__29982, output_checker29980, app, ufv__, code, meta29988) {
            this.input_schema29978 = input_schema29978;
            this.input_checker29979 = input_checker29979;
            this.owner = owner;
            this.output_schema29977 = output_schema29977;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__29981 = G__29981;
            this.G__29982 = G__29982;
            this.output_checker29980 = output_checker29980;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.meta29988 = meta29988;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide09.t29987.cljs$lang$type = true;
          t3tr0s_slides.slide09.t29987.cljs$lang$ctorStr = "t3tr0s-slides.slide09/t29987";
          t3tr0s_slides.slide09.t29987.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___29991, output_schema29977_29992, input_schema29978_29993, input_checker29979_29994, output_checker29980_29995) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide09/t29987");
            };
          }(validate__5821__auto__, ufv___29991, output_schema29977_29992, input_schema29978_29993, input_checker29979_29994, output_checker29980_29995);
          t3tr0s_slides.slide09.t29987.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide09.t29987.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___29991, output_schema29977_29992, input_schema29978_29993, input_checker29979_29994, output_checker29980_29995) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs29990 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: press left/right to move.");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs29990) ? sablono.interpreter.attributes.call(null, attrs29990) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs29990) ? cljs.core.PersistentVector.fromArray(["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "defn")), " try-shift! [dx]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @game-state)\n", "        [x y] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " @game-state)\n", "        board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
                ":board")), " @game-state)\n", "        new-pos [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x dx) y]]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "when")), " (piece-fits? board piece new-pos)\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state assoc ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
                ":position")), " new-pos))))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " try-rotate! []\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @game-state)\n", "        pos (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
                ":position")), " @game-state)\n", "        board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " @game-state)\n", "        new-piece (rotate-piece piece)]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "when")), " (piece-fits? board new-piece pos)\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state assoc ", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " new-piece))))\n", "\n\n"], true) : cljs.core.PersistentVector.fromArray([sablono.interpreter.interpret.call(null, attrs29990), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " try-shift! [dx]\n", 
                "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @game-state)\n", "        [x y] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " @game-state)\n", "        board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), 
                " @game-state)\n", "        new-pos [(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "+")), " x dx) y]]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "when")), " (piece-fits? board piece new-pos)\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state assoc ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
                ":position")), " new-pos))))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " try-rotate! []\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @game-state)\n", "        pos (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
                ":position")), " @game-state)\n", "        board (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":board")), " @game-state)\n", "        new-piece (rotate-piece piece)]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "when")), " (piece-fits? board new-piece pos)\n", "      (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " game-state assoc ", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " new-piece))))\n", "\n\n"], true)));
              }()));
            };
          }(validate__5821__auto__, ufv___29991, output_schema29977_29992, input_schema29978_29993, input_checker29979_29994, output_checker29980_29995);
          t3tr0s_slides.slide09.t29987.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___29991, output_schema29977_29992, input_schema29978_29993, input_checker29979_29994, output_checker29980_29995) {
            return function(_29989) {
              var self__ = this;
              var _29989__$1 = this;
              return self__.meta29988;
            };
          }(validate__5821__auto__, ufv___29991, output_schema29977_29992, input_schema29978_29993, input_checker29979_29994, output_checker29980_29995);
          t3tr0s_slides.slide09.t29987.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___29991, output_schema29977_29992, input_schema29978_29993, input_checker29979_29994, output_checker29980_29995) {
            return function(_29989, meta29988__$1) {
              var self__ = this;
              var _29989__$1 = this;
              return new t3tr0s_slides.slide09.t29987(self__.input_schema29978, self__.input_checker29979, self__.owner, self__.output_schema29977, self__.validate__5821__auto__, self__.G__29981, self__.G__29982, self__.output_checker29980, self__.app, self__.ufv__, self__.code, meta29988__$1);
            };
          }(validate__5821__auto__, ufv___29991, output_schema29977_29992, input_schema29978_29993, input_checker29979_29994, output_checker29980_29995);
          t3tr0s_slides.slide09.__GT_t29987 = function(validate__5821__auto__, ufv___29991, output_schema29977_29992, input_schema29978_29993, input_checker29979_29994, output_checker29980_29995) {
            return function __GT_t29987(input_schema29978__$1, input_checker29979__$1, owner__$1, output_schema29977__$1, validate__5821__auto____$1, G__29981__$1, G__29982__$1, output_checker29980__$1, app__$1, ufv____$1, code__$1, meta29988) {
              return new t3tr0s_slides.slide09.t29987(input_schema29978__$1, input_checker29979__$1, owner__$1, output_schema29977__$1, validate__5821__auto____$1, G__29981__$1, G__29982__$1, output_checker29980__$1, app__$1, ufv____$1, code__$1, meta29988);
            };
          }(validate__5821__auto__, ufv___29991, output_schema29977_29992, input_schema29978_29993, input_checker29979_29994, output_checker29980_29995);
        }
        return new t3tr0s_slides.slide09.t29987(input_schema29978_29993, input_checker29979_29994, owner, output_schema29977_29992, validate__5821__auto__, G__29981, G__29982, output_checker29980_29995, app, ufv___29991, code, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___29999 = output_checker29980_29995.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___29999)) {
        var error__5823__auto___30000 = temp__4126__auto___29999;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___30000)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema29977_29992, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___30000], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___29991, output_schema29977_29992, input_schema29978_29993, input_checker29979_29994, output_checker29980_29995);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide09.code), schema.core.make_fn_schema.call(null, output_schema29977_29992, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema29978_29993], null)));
t3tr0s_slides.slide09.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide09.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m29976) {
    return om.core.build.call(null, t3tr0s_slides.slide09.code, cursor__9685__auto__, m29976);
  };
  __GT_code = function(cursor__9685__auto__, m29976) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m29976);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide09.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide09.rows);
t3tr0s_slides.slide09.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__30001, is_center) {
  var vec__30003 = p__30001;
  var x = cljs.core.nth.call(null, vec__30003, 0, null);
  var y = cljs.core.nth.call(null, vec__30003, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide09.cell_size * x;
  var ry = t3tr0s_slides.slide09.cell_size * y;
  var rs = t3tr0s_slides.slide09.cell_size;
  var cx = t3tr0s_slides.slide09.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide09.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide09.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide09.piece_abs_coords = function piece_abs_coords(piece, p__30004) {
  var vec__30008 = p__30004;
  var cx = cljs.core.nth.call(null, vec__30008, 0, null);
  var cy = cljs.core.nth.call(null, vec__30008, 1, null);
  return cljs.core.mapv.call(null, function(vec__30008, cx, cy) {
    return function(p__30009) {
      var vec__30010 = p__30009;
      var x = cljs.core.nth.call(null, vec__30010, 0, null);
      var y = cljs.core.nth.call(null, vec__30010, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__30008, cx, cy), piece);
};
t3tr0s_slides.slide09.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__30017 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide09.piece_abs_coords.call(null, piece, pos)));
  var chunk__30018 = null;
  var count__30019 = 0;
  var i__30020 = 0;
  while (true) {
    if (i__30020 < count__30019) {
      var vec__30021 = cljs.core._nth.call(null, chunk__30018, i__30020);
      var i = cljs.core.nth.call(null, vec__30021, 0, null);
      var c = cljs.core.nth.call(null, vec__30021, 1, null);
      t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__30023 = seq__30017;
      var G__30024 = chunk__30018;
      var G__30025 = count__30019;
      var G__30026 = i__30020 + 1;
      seq__30017 = G__30023;
      chunk__30018 = G__30024;
      count__30019 = G__30025;
      i__30020 = G__30026;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__30017);
      if (temp__4126__auto__) {
        var seq__30017__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__30017__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__30017__$1);
          var G__30027 = cljs.core.chunk_rest.call(null, seq__30017__$1);
          var G__30028 = c__4309__auto__;
          var G__30029 = cljs.core.count.call(null, c__4309__auto__);
          var G__30030 = 0;
          seq__30017 = G__30027;
          chunk__30018 = G__30028;
          count__30019 = G__30029;
          i__30020 = G__30030;
          continue;
        } else {
          var vec__30022 = cljs.core.first.call(null, seq__30017__$1);
          var i = cljs.core.nth.call(null, vec__30022, 0, null);
          var c = cljs.core.nth.call(null, vec__30022, 1, null);
          t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__30031 = cljs.core.next.call(null, seq__30017__$1);
          var G__30032 = null;
          var G__30033 = 0;
          var G__30034 = 0;
          seq__30017 = G__30031;
          chunk__30018 = G__30032;
          count__30019 = G__30033;
          i__30020 = G__30034;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide09.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__30047 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide09.rows));
  var chunk__30052 = null;
  var count__30053 = 0;
  var i__30054 = 0;
  while (true) {
    if (i__30054 < count__30053) {
      var y = cljs.core._nth.call(null, chunk__30052, i__30054);
      var seq__30055_30059 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide09.cols));
      var chunk__30056_30060 = null;
      var count__30057_30061 = 0;
      var i__30058_30062 = 0;
      while (true) {
        if (i__30058_30062 < count__30057_30061) {
          var x_30063 = cljs.core._nth.call(null, chunk__30056_30060, i__30058_30062);
          var v_30064 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_30063], null));
          if (v_30064 === 0) {
          } else {
            t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_30063, y], null), false);
          }
          var G__30065 = seq__30055_30059;
          var G__30066 = chunk__30056_30060;
          var G__30067 = count__30057_30061;
          var G__30068 = i__30058_30062 + 1;
          seq__30055_30059 = G__30065;
          chunk__30056_30060 = G__30066;
          count__30057_30061 = G__30067;
          i__30058_30062 = G__30068;
          continue;
        } else {
          var temp__4126__auto___30069 = cljs.core.seq.call(null, seq__30055_30059);
          if (temp__4126__auto___30069) {
            var seq__30055_30070__$1 = temp__4126__auto___30069;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__30055_30070__$1)) {
              var c__4309__auto___30071 = cljs.core.chunk_first.call(null, seq__30055_30070__$1);
              var G__30072 = cljs.core.chunk_rest.call(null, seq__30055_30070__$1);
              var G__30073 = c__4309__auto___30071;
              var G__30074 = cljs.core.count.call(null, c__4309__auto___30071);
              var G__30075 = 0;
              seq__30055_30059 = G__30072;
              chunk__30056_30060 = G__30073;
              count__30057_30061 = G__30074;
              i__30058_30062 = G__30075;
              continue;
            } else {
              var x_30076 = cljs.core.first.call(null, seq__30055_30070__$1);
              var v_30077 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_30076], null));
              if (v_30077 === 0) {
              } else {
                t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_30076, y], null), false);
              }
              var G__30078 = cljs.core.next.call(null, seq__30055_30070__$1);
              var G__30079 = null;
              var G__30080 = 0;
              var G__30081 = 0;
              seq__30055_30059 = G__30078;
              chunk__30056_30060 = G__30079;
              count__30057_30061 = G__30080;
              i__30058_30062 = G__30081;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__30082 = seq__30047;
      var G__30083 = chunk__30052;
      var G__30084 = count__30053;
      var G__30085 = i__30054 + 1;
      seq__30047 = G__30082;
      chunk__30052 = G__30083;
      count__30053 = G__30084;
      i__30054 = G__30085;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__30047);
      if (temp__4126__auto__) {
        var seq__30047__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__30047__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__30047__$1);
          var G__30086 = cljs.core.chunk_rest.call(null, seq__30047__$1);
          var G__30087 = c__4309__auto__;
          var G__30088 = cljs.core.count.call(null, c__4309__auto__);
          var G__30089 = 0;
          seq__30047 = G__30086;
          chunk__30052 = G__30087;
          count__30053 = G__30088;
          i__30054 = G__30089;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__30047__$1);
          var seq__30048_30090 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide09.cols));
          var chunk__30049_30091 = null;
          var count__30050_30092 = 0;
          var i__30051_30093 = 0;
          while (true) {
            if (i__30051_30093 < count__30050_30092) {
              var x_30094 = cljs.core._nth.call(null, chunk__30049_30091, i__30051_30093);
              var v_30095 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_30094], null));
              if (v_30095 === 0) {
              } else {
                t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_30094, y], null), false);
              }
              var G__30096 = seq__30048_30090;
              var G__30097 = chunk__30049_30091;
              var G__30098 = count__30050_30092;
              var G__30099 = i__30051_30093 + 1;
              seq__30048_30090 = G__30096;
              chunk__30049_30091 = G__30097;
              count__30050_30092 = G__30098;
              i__30051_30093 = G__30099;
              continue;
            } else {
              var temp__4126__auto___30100__$1 = cljs.core.seq.call(null, seq__30048_30090);
              if (temp__4126__auto___30100__$1) {
                var seq__30048_30101__$1 = temp__4126__auto___30100__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__30048_30101__$1)) {
                  var c__4309__auto___30102 = cljs.core.chunk_first.call(null, seq__30048_30101__$1);
                  var G__30103 = cljs.core.chunk_rest.call(null, seq__30048_30101__$1);
                  var G__30104 = c__4309__auto___30102;
                  var G__30105 = cljs.core.count.call(null, c__4309__auto___30102);
                  var G__30106 = 0;
                  seq__30048_30090 = G__30103;
                  chunk__30049_30091 = G__30104;
                  count__30050_30092 = G__30105;
                  i__30051_30093 = G__30106;
                  continue;
                } else {
                  var x_30107 = cljs.core.first.call(null, seq__30048_30101__$1);
                  var v_30108 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_30107], null));
                  if (v_30108 === 0) {
                  } else {
                    t3tr0s_slides.slide09.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_30107, y], null), false);
                  }
                  var G__30109 = cljs.core.next.call(null, seq__30048_30101__$1);
                  var G__30110 = null;
                  var G__30111 = 0;
                  var G__30112 = 0;
                  seq__30048_30090 = G__30109;
                  chunk__30049_30091 = G__30110;
                  count__30050_30092 = G__30111;
                  i__30051_30093 = G__30112;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__30113 = cljs.core.next.call(null, seq__30047__$1);
          var G__30114 = null;
          var G__30115 = 0;
          var G__30116 = 0;
          seq__30047 = G__30113;
          chunk__30052 = G__30114;
          count__30053 = G__30115;
          i__30054 = G__30116;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide09.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide09.cell_size * t3tr0s_slides.slide09.cols, t3tr0s_slides.slide09.cell_size * t3tr0s_slides.slide09.rows);
  ctx.fillStyle = t3tr0s_slides.slide09.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide09.light_green;
  t3tr0s_slides.slide09.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var fits = t3tr0s_slides.slide09.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = fits ? t3tr0s_slides.slide09.dark_purple : t3tr0s_slides.slide09.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide09.light_purple : t3tr0s_slides.slide09.light_red;
    return t3tr0s_slides.slide09.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide09.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide09.key_name = function key_name(p1__30117_SHARP_) {
  return t3tr0s_slides.slide09.key_names.call(null, p1__30117_SHARP_.keyCode);
};
t3tr0s_slides.slide09.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide09.key_name.call(null, e);
  var G__30119_30120 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__30119_30120) {
    case "up":
      t3tr0s_slides.slide09.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide09.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide09.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___30139 = schema.utils.use_fn_validation;
var output_schema30123_30140 = schema.core.Any;
var input_schema30124_30141 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker30125_30142 = schema.core.checker.call(null, input_schema30124_30141);
var output_checker30126_30143 = schema.core.checker.call(null, output_schema30123_30140);
t3tr0s_slides.slide09.canvas = function(ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143) {
  return function canvas(G__30127, G__30128) {
    var validate__5821__auto__ = ufv___30139.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___30144 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__30127, G__30128], null);
      var temp__4126__auto___30145 = input_checker30125_30142.call(null, args__5822__auto___30144);
      if (cljs.core.truth_(temp__4126__auto___30145)) {
        var error__5823__auto___30146 = temp__4126__auto___30145;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___30146)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema30124_30141, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___30144, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___30146], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__30127;
      var owner = G__30128;
      while (true) {
        if (typeof t3tr0s_slides.slide09.t30134 !== "undefined") {
        } else {
          t3tr0s_slides.slide09.t30134 = function(output_schema30123, owner, output_checker30126, G__30127, validate__5821__auto__, G__30128, canvas, app, ufv__, input_schema30124, input_checker30125, meta30135) {
            this.output_schema30123 = output_schema30123;
            this.owner = owner;
            this.output_checker30126 = output_checker30126;
            this.G__30127 = G__30127;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__30128 = G__30128;
            this.canvas = canvas;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_schema30124 = input_schema30124;
            this.input_checker30125 = input_checker30125;
            this.meta30135 = meta30135;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide09.t30134.cljs$lang$type = true;
          t3tr0s_slides.slide09.t30134.cljs$lang$ctorStr = "t3tr0s-slides.slide09/t30134";
          t3tr0s_slides.slide09.t30134.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide09/t30134");
            };
          }(validate__5821__auto__, ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143);
          t3tr0s_slides.slide09.t30134.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide09.t30134.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143);
          t3tr0s_slides.slide09.t30134.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide09.t30134.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide09.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143);
          t3tr0s_slides.slide09.t30134.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide09.t30134.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide09.cols * t3tr0s_slides.slide09.cell_size;
              canvas__$2.height = t3tr0s_slides.slide09.rows * t3tr0s_slides.slide09.cell_size;
              return t3tr0s_slides.slide09.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143);
          t3tr0s_slides.slide09.t30134.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143) {
            return function(_30136) {
              var self__ = this;
              var _30136__$1 = this;
              return self__.meta30135;
            };
          }(validate__5821__auto__, ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143);
          t3tr0s_slides.slide09.t30134.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143) {
            return function(_30136, meta30135__$1) {
              var self__ = this;
              var _30136__$1 = this;
              return new t3tr0s_slides.slide09.t30134(self__.output_schema30123, self__.owner, self__.output_checker30126, self__.G__30127, self__.validate__5821__auto__, self__.G__30128, self__.canvas, self__.app, self__.ufv__, self__.input_schema30124, self__.input_checker30125, meta30135__$1);
            };
          }(validate__5821__auto__, ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143);
          t3tr0s_slides.slide09.__GT_t30134 = function(validate__5821__auto__, ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143) {
            return function __GT_t30134(output_schema30123__$1, owner__$1, output_checker30126__$1, G__30127__$1, validate__5821__auto____$1, G__30128__$1, canvas__$1, app__$1, ufv____$1, input_schema30124__$1, input_checker30125__$1, meta30135) {
              return new t3tr0s_slides.slide09.t30134(output_schema30123__$1, owner__$1, output_checker30126__$1, G__30127__$1, validate__5821__auto____$1, G__30128__$1, canvas__$1, app__$1, ufv____$1, input_schema30124__$1, input_checker30125__$1, meta30135);
            };
          }(validate__5821__auto__, ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143);
        }
        return new t3tr0s_slides.slide09.t30134(output_schema30123_30140, owner, output_checker30126_30143, G__30127, validate__5821__auto__, G__30128, canvas, app, ufv___30139, input_schema30124_30141, input_checker30125_30142, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___30147 = output_checker30126_30143.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___30147)) {
        var error__5823__auto___30148 = temp__4126__auto___30147;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___30148)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema30123_30140, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___30148], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___30139, output_schema30123_30140, input_schema30124_30141, input_checker30125_30142, output_checker30126_30143);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide09.canvas), schema.core.make_fn_schema.call(null, output_schema30123_30140, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema30124_30141], null)));
t3tr0s_slides.slide09.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide09.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m30122) {
    return om.core.build.call(null, t3tr0s_slides.slide09.canvas, cursor__9685__auto__, m30122);
  };
  __GT_canvas = function(cursor__9685__auto__, m30122) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m30122);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___30166 = schema.utils.use_fn_validation;
var output_schema30150_30167 = schema.core.Any;
var input_schema30151_30168 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker30152_30169 = schema.core.checker.call(null, input_schema30151_30168);
var output_checker30153_30170 = schema.core.checker.call(null, output_schema30150_30167);
t3tr0s_slides.slide09.slide = function(ufv___30166, output_schema30150_30167, input_schema30151_30168, input_checker30152_30169, output_checker30153_30170) {
  return function slide(G__30154, G__30155) {
    var validate__5821__auto__ = ufv___30166.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___30171 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__30154, G__30155], null);
      var temp__4126__auto___30172 = input_checker30152_30169.call(null, args__5822__auto___30171);
      if (cljs.core.truth_(temp__4126__auto___30172)) {
        var error__5823__auto___30173 = temp__4126__auto___30172;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___30173)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema30151_30168, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___30171, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___30173], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__30154;
      var owner = G__30155;
      while (true) {
        if (typeof t3tr0s_slides.slide09.t30161 !== "undefined") {
        } else {
          t3tr0s_slides.slide09.t30161 = function(owner, output_schema30150, input_checker30152, validate__5821__auto__, G__30155, output_checker30153, input_schema30151, G__30154, slide, app, ufv__, meta30162) {
            this.owner = owner;
            this.output_schema30150 = output_schema30150;
            this.input_checker30152 = input_checker30152;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.G__30155 = G__30155;
            this.output_checker30153 = output_checker30153;
            this.input_schema30151 = input_schema30151;
            this.G__30154 = G__30154;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta30162 = meta30162;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide09.t30161.cljs$lang$type = true;
          t3tr0s_slides.slide09.t30161.cljs$lang$ctorStr = "t3tr0s-slides.slide09/t30161";
          t3tr0s_slides.slide09.t30161.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___30166, output_schema30150_30167, input_schema30151_30168, input_checker30152_30169, output_checker30153_30170) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide09/t30161");
            };
          }(validate__5821__auto__, ufv___30166, output_schema30150_30167, input_schema30151_30168, input_checker30152_30169, output_checker30153_30170);
          t3tr0s_slides.slide09.t30161.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide09.t30161.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___30166, output_schema30150_30167, input_schema30151_30168, input_checker30152_30169, output_checker30153_30170) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "9. Constrain controls."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide09.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide09.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___30166, output_schema30150_30167, input_schema30151_30168, input_checker30152_30169, output_checker30153_30170);
          t3tr0s_slides.slide09.t30161.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___30166, output_schema30150_30167, input_schema30151_30168, input_checker30152_30169, output_checker30153_30170) {
            return function(_30163) {
              var self__ = this;
              var _30163__$1 = this;
              return self__.meta30162;
            };
          }(validate__5821__auto__, ufv___30166, output_schema30150_30167, input_schema30151_30168, input_checker30152_30169, output_checker30153_30170);
          t3tr0s_slides.slide09.t30161.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___30166, output_schema30150_30167, input_schema30151_30168, input_checker30152_30169, output_checker30153_30170) {
            return function(_30163, meta30162__$1) {
              var self__ = this;
              var _30163__$1 = this;
              return new t3tr0s_slides.slide09.t30161(self__.owner, self__.output_schema30150, self__.input_checker30152, self__.validate__5821__auto__, self__.G__30155, self__.output_checker30153, self__.input_schema30151, self__.G__30154, self__.slide, self__.app, self__.ufv__, meta30162__$1);
            };
          }(validate__5821__auto__, ufv___30166, output_schema30150_30167, input_schema30151_30168, input_checker30152_30169, output_checker30153_30170);
          t3tr0s_slides.slide09.__GT_t30161 = function(validate__5821__auto__, ufv___30166, output_schema30150_30167, input_schema30151_30168, input_checker30152_30169, output_checker30153_30170) {
            return function __GT_t30161(owner__$1, output_schema30150__$1, input_checker30152__$1, validate__5821__auto____$1, G__30155__$1, output_checker30153__$1, input_schema30151__$1, G__30154__$1, slide__$1, app__$1, ufv____$1, meta30162) {
              return new t3tr0s_slides.slide09.t30161(owner__$1, output_schema30150__$1, input_checker30152__$1, validate__5821__auto____$1, G__30155__$1, output_checker30153__$1, input_schema30151__$1, G__30154__$1, slide__$1, app__$1, ufv____$1, meta30162);
            };
          }(validate__5821__auto__, ufv___30166, output_schema30150_30167, input_schema30151_30168, input_checker30152_30169, output_checker30153_30170);
        }
        return new t3tr0s_slides.slide09.t30161(owner, output_schema30150_30167, input_checker30152_30169, validate__5821__auto__, G__30155, output_checker30153_30170, input_schema30151_30168, G__30154, slide, app, ufv___30166, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___30174 = output_checker30153_30170.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___30174)) {
        var error__5823__auto___30175 = temp__4126__auto___30174;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___30175)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema30150_30167, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___30175], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___30166, output_schema30150_30167, input_schema30151_30168, input_checker30152_30169, output_checker30153_30170);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide09.slide), schema.core.make_fn_schema.call(null, output_schema30150_30167, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema30151_30168], null)));
t3tr0s_slides.slide09.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide09.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m30149) {
    return om.core.build.call(null, t3tr0s_slides.slide09.slide, cursor__9685__auto__, m30149);
  };
  __GT_slide = function(cursor__9685__auto__, m30149) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m30149);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide09.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide09.slide, t3tr0s_slides.slide09.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide09.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide09.key_down);
};
t3tr0s_slides.slide09.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide09.key_down);
};
goog.provide("t3tr0s_slides.slide10");
goog.require("cljs.core");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("t3tr0s_slides.syntax_highlight");
goog.require("sablono.core");
goog.require("om_tools.core");
goog.require("om.core");
goog.require("om.core");
t3tr0s_slides.slide10.dark_green = "#143";
t3tr0s_slides.slide10.light_green = "#175";
t3tr0s_slides.slide10.dark_purple = "#449";
t3tr0s_slides.slide10.light_purple = "#6ad";
t3tr0s_slides.slide10.dark_red = "#944";
t3tr0s_slides.slide10.light_red = "#f8c";
t3tr0s_slides.slide10.pieces = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "I", "I", 1827140963), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null)], null), new cljs.core.Keyword(null, "L", "L", -1038307519), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "J", "J", 1394734828), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "S", "S", 1267293308), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "Z", "Z", 459124588), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "O", "O", 795252742), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null), new cljs.core.Keyword(null, "T", "T", 175240877), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null)], null);
t3tr0s_slides.slide10.rotate_coord = function rotate_coord(p__30863) {
  var vec__30865 = p__30863;
  var x = cljs.core.nth.call(null, vec__30865, 0, null);
  var y = cljs.core.nth.call(null, vec__30865, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-y, x], null);
};
t3tr0s_slides.slide10.rotate_piece = function rotate_piece(piece) {
  return cljs.core.mapv.call(null, t3tr0s_slides.slide10.rotate_coord, piece);
};
t3tr0s_slides.slide10.rows = 20;
t3tr0s_slides.slide10.cols = 10;
t3tr0s_slides.slide10.empty_row = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide10.cols, 0));
t3tr0s_slides.slide10.empty_board = cljs.core.vec.call(null, cljs.core.repeat.call(null, t3tr0s_slides.slide10.rows, t3tr0s_slides.slide10.empty_row));
t3tr0s_slides.slide10.filled_board = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 
0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 1, 0, 0, 0, 0, 0, 0, 
0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 0, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 0, 0, 0, 1, 0], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], null)], null);
t3tr0s_slides.slide10.initial_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [4, 2], null);
t3tr0s_slides.slide10.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "board", "board", -1907017633), t3tr0s_slides.slide10.filled_board, new cljs.core.Keyword(null, "piece", "piece", 1396691784), (new cljs.core.Keyword(null, "T", "T", 175240877)).cljs$core$IFn$_invoke$arity$1(t3tr0s_slides.slide10.pieces), new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide10.initial_pos], null));
t3tr0s_slides.slide10.write_piece = function write_piece(board, coords, p__30866) {
  while (true) {
    var vec__30870 = p__30866;
    var cx = cljs.core.nth.call(null, vec__30870, 0, null);
    var cy = cljs.core.nth.call(null, vec__30870, 1, null);
    var temp__4124__auto__ = cljs.core.first.call(null, coords);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__30871 = temp__4124__auto__;
      var x = cljs.core.nth.call(null, vec__30871, 0, null);
      var y = cljs.core.nth.call(null, vec__30871, 1, null);
      var G__30873 = function() {
        try {
          return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null), 1);
        } catch (e30872) {
          if (e30872 instanceof Error) {
            var _ = e30872;
            return board;
          } else {
            throw e30872;
          }
        }
      }();
      var G__30874 = cljs.core.rest.call(null, coords);
      var G__30875 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx, cy], null);
      board = G__30873;
      coords = G__30874;
      p__30866 = G__30875;
      continue;
    } else {
      return board;
    }
    break;
  }
};
t3tr0s_slides.slide10.lock_piece_BANG_ = function lock_piece_BANG_() {
  var map__30877 = cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state);
  var map__30877__$1 = cljs.core.seq_QMARK_.call(null, map__30877) ? cljs.core.apply.call(null, cljs.core.hash_map, map__30877) : map__30877;
  var position = cljs.core.get.call(null, map__30877__$1, new cljs.core.Keyword(null, "position", "position", -2011731912));
  var piece = cljs.core.get.call(null, map__30877__$1, new cljs.core.Keyword(null, "piece", "piece", 1396691784));
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633)], null), t3tr0s_slides.slide10.write_piece, piece, position);
};
t3tr0s_slides.slide10.piece_fits_QMARK_ = function piece_fits_QMARK_(board, piece, p__30878) {
  var vec__30882 = p__30878;
  var cx = cljs.core.nth.call(null, vec__30882, 0, null);
  var cy = cljs.core.nth.call(null, vec__30882, 1, null);
  return cljs.core.every_QMARK_.call(null, function(vec__30882, cx, cy) {
    return function(p__30883) {
      var vec__30884 = p__30883;
      var x = cljs.core.nth.call(null, vec__30884, 0, null);
      var y = cljs.core.nth.call(null, vec__30884, 1, null);
      return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y + cy, x + cx], null)) === 0;
    };
  }(vec__30882, cx, cy), piece);
};
t3tr0s_slides.slide10.app_piece_fits_QMARK_ = function app_piece_fits_QMARK_() {
  return cljs.core.boolean$.call(null, t3tr0s_slides.slide10.piece_fits_QMARK_.call(null, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state)), (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state)), (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  t3tr0s_slides.slide10.app_state))));
};
t3tr0s_slides.slide10.try_shift_BANG_ = function try_shift_BANG_(dx) {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var vec__30886 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var x = cljs.core.nth.call(null, vec__30886, 0, null);
  var y = cljs.core.nth.call(null, vec__30886, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var new_pos = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + dx, y], null);
  if (t3tr0s_slides.slide10.piece_fits_QMARK_.call(null, board, piece, new_pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new_pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide10.try_rotate_BANG_ = function try_rotate_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var new_piece = t3tr0s_slides.slide10.rotate_piece.call(null, piece);
  if (t3tr0s_slides.slide10.piece_fits_QMARK_.call(null, board, new_piece, pos)) {
    return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "piece", "piece", 1396691784), new_piece);
  } else {
    return null;
  }
};
t3tr0s_slides.slide10.get_drop_pos = function get_drop_pos(board, piece, p__30887) {
  var vec__30889 = p__30887;
  var x = cljs.core.nth.call(null, vec__30889, 0, null);
  var y = cljs.core.nth.call(null, vec__30889, 1, null);
  var collide_QMARK_ = function(vec__30889, x, y) {
    return function(cy) {
      return!t3tr0s_slides.slide10.piece_fits_QMARK_.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cy], null));
    };
  }(vec__30889, x, y);
  var cy = cljs.core.first.call(null, cljs.core.filter.call(null, collide_QMARK_, cljs.core.iterate.call(null, cljs.core.inc, y)));
  var x__3860__auto__ = y;
  var y__3861__auto__ = cy - 1;
  return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
};
t3tr0s_slides.slide10.hard_drop_BANG_ = function hard_drop_BANG_() {
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var vec__30891 = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var x = cljs.core.nth.call(null, vec__30891, 0, null);
  var y = cljs.core.nth.call(null, vec__30891, 1, null);
  var board = (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, t3tr0s_slides.slide10.app_state));
  var ny = t3tr0s_slides.slide10.get_drop_pos.call(null, board, piece, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
  cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, ny], null));
  t3tr0s_slides.slide10.lock_piece_BANG_.call(null);
  return cljs.core.swap_BANG_.call(null, t3tr0s_slides.slide10.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "position", "position", -2011731912), t3tr0s_slides.slide10.initial_pos, new cljs.core.Keyword(null, "piece", "piece", 1396691784), cljs.core.rand_nth.call(null, cljs.core.vals.call(null, t3tr0s_slides.slide10.pieces)));
};
var ufv___30907 = schema.utils.use_fn_validation;
var output_schema30893_30908 = schema.core.Any;
var input_schema30894_30909 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker30895_30910 = schema.core.checker.call(null, input_schema30894_30909);
var output_checker30896_30911 = schema.core.checker.call(null, output_schema30893_30908);
t3tr0s_slides.slide10.code = function(ufv___30907, output_schema30893_30908, input_schema30894_30909, input_checker30895_30910, output_checker30896_30911) {
  return function code(G__30897, G__30898) {
    var validate__5821__auto__ = ufv___30907.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___30912 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__30897, G__30898], null);
      var temp__4126__auto___30913 = input_checker30895_30910.call(null, args__5822__auto___30912);
      if (cljs.core.truth_(temp__4126__auto___30913)) {
        var error__5823__auto___30914 = temp__4126__auto___30913;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___30914)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema30894_30909, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___30912, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___30914], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__30897;
      var owner = G__30898;
      while (true) {
        if (typeof t3tr0s_slides.slide10.t30903 !== "undefined") {
        } else {
          t3tr0s_slides.slide10.t30903 = function(owner, G__30897, input_schema30894, G__30898, validate__5821__auto__, output_checker30896, output_schema30893, app, ufv__, code, input_checker30895, meta30904) {
            this.owner = owner;
            this.G__30897 = G__30897;
            this.input_schema30894 = input_schema30894;
            this.G__30898 = G__30898;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.output_checker30896 = output_checker30896;
            this.output_schema30893 = output_schema30893;
            this.app = app;
            this.ufv__ = ufv__;
            this.code = code;
            this.input_checker30895 = input_checker30895;
            this.meta30904 = meta30904;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide10.t30903.cljs$lang$type = true;
          t3tr0s_slides.slide10.t30903.cljs$lang$ctorStr = "t3tr0s-slides.slide10/t30903";
          t3tr0s_slides.slide10.t30903.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___30907, output_schema30893_30908, input_schema30894_30909, input_checker30895_30910, output_checker30896_30911) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide10/t30903");
            };
          }(validate__5821__auto__, ufv___30907, output_schema30893_30908, input_schema30894_30909, input_checker30895_30910, output_checker30896_30911);
          t3tr0s_slides.slide10.t30903.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide10.t30903.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___30907, output_schema30893_30908, input_schema30894_30909, input_checker30895_30910, output_checker30896_30911) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"code-cb62a"}, React.DOM.pre(null, function() {
                var attrs30906 = t3tr0s_slides.syntax_highlight.cmt.call(null, "; TRY IT: press space to hard-drop.");
                return cljs.core.apply.call(null, React.DOM.code, cljs.core.map_QMARK_.call(null, attrs30906) ? sablono.interpreter.attributes.call(null, attrs30906) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs30906) ? cljs.core.PersistentVector.fromArray(["\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, 
                ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " get-drop-pos\n", "  [board piece [x y]]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [clear? #(piece-fits? board piece [x %]))\n", "        cy (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), " (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "remove")), " clear? (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "iterate")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "inc")), " y)))]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "max")), " y (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "dec")), " cy))))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " hard-drop! []\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @app-state)\n", "        [x y] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, 
                ":position")), " @app-state)\n", "        board (:board @app-state)\n", "        ny (get-drop-pos board piece [x y])]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " app-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " [x ny])\n", "    (lock-piece!)))\n", 
                "\n\n"], true) : cljs.core.PersistentVector.fromArray([sablono.interpreter.interpret.call(null, attrs30906), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press left/right to move.")), "\n", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.cmt.call(null, ";         press up to rotate.")), "\n", "\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), 
                " get-drop-pos\n", "  [board piece [x y]]\n", "  (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [clear? #(piece-fits? board piece [x %]))\n", "        cy (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "first")), " (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "remove")), " clear? (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, 
                "iterate")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "inc")), " y)))]\n", "    (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "max")), " y (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "dec")), " cy))))\n", "\n\n", "(", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "defn")), " hard-drop! []\n", "  (", 
                sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "let")), " [piece (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":piece")), " @app-state)\n", "        [x y] (", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " @app-state)\n", "        board (:board @app-state)\n", "        ny (get-drop-pos board piece [x y])]\n", "    (", sablono.interpreter.interpret.call(null, 
                t3tr0s_slides.syntax_highlight.core.call(null, "swap!")), " app-state ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.core.call(null, "assoc")), " ", sablono.interpreter.interpret.call(null, t3tr0s_slides.syntax_highlight.kw.call(null, ":position")), " [x ny])\n", "    (lock-piece!)))\n", "\n\n"], true)));
              }()));
            };
          }(validate__5821__auto__, ufv___30907, output_schema30893_30908, input_schema30894_30909, input_checker30895_30910, output_checker30896_30911);
          t3tr0s_slides.slide10.t30903.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___30907, output_schema30893_30908, input_schema30894_30909, input_checker30895_30910, output_checker30896_30911) {
            return function(_30905) {
              var self__ = this;
              var _30905__$1 = this;
              return self__.meta30904;
            };
          }(validate__5821__auto__, ufv___30907, output_schema30893_30908, input_schema30894_30909, input_checker30895_30910, output_checker30896_30911);
          t3tr0s_slides.slide10.t30903.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___30907, output_schema30893_30908, input_schema30894_30909, input_checker30895_30910, output_checker30896_30911) {
            return function(_30905, meta30904__$1) {
              var self__ = this;
              var _30905__$1 = this;
              return new t3tr0s_slides.slide10.t30903(self__.owner, self__.G__30897, self__.input_schema30894, self__.G__30898, self__.validate__5821__auto__, self__.output_checker30896, self__.output_schema30893, self__.app, self__.ufv__, self__.code, self__.input_checker30895, meta30904__$1);
            };
          }(validate__5821__auto__, ufv___30907, output_schema30893_30908, input_schema30894_30909, input_checker30895_30910, output_checker30896_30911);
          t3tr0s_slides.slide10.__GT_t30903 = function(validate__5821__auto__, ufv___30907, output_schema30893_30908, input_schema30894_30909, input_checker30895_30910, output_checker30896_30911) {
            return function __GT_t30903(owner__$1, G__30897__$1, input_schema30894__$1, G__30898__$1, validate__5821__auto____$1, output_checker30896__$1, output_schema30893__$1, app__$1, ufv____$1, code__$1, input_checker30895__$1, meta30904) {
              return new t3tr0s_slides.slide10.t30903(owner__$1, G__30897__$1, input_schema30894__$1, G__30898__$1, validate__5821__auto____$1, output_checker30896__$1, output_schema30893__$1, app__$1, ufv____$1, code__$1, input_checker30895__$1, meta30904);
            };
          }(validate__5821__auto__, ufv___30907, output_schema30893_30908, input_schema30894_30909, input_checker30895_30910, output_checker30896_30911);
        }
        return new t3tr0s_slides.slide10.t30903(owner, G__30897, input_schema30894_30909, G__30898, validate__5821__auto__, output_checker30896_30911, output_schema30893_30908, app, ufv___30907, code, input_checker30895_30910, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___30915 = output_checker30896_30911.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___30915)) {
        var error__5823__auto___30916 = temp__4126__auto___30915;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "code", "code", -1068142627, null), cljs.core.pr_str.call(null, error__5823__auto___30916)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema30893_30908, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___30916], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___30907, output_schema30893_30908, input_schema30894_30909, input_checker30895_30910, output_checker30896_30911);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide10.code), schema.core.make_fn_schema.call(null, output_schema30893_30908, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema30894_30909], null)));
t3tr0s_slides.slide10.__GT_code = function() {
  var __GT_code = null;
  var __GT_code__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide10.code, cursor__9685__auto__);
  };
  var __GT_code__2 = function(cursor__9685__auto__, m30892) {
    return om.core.build.call(null, t3tr0s_slides.slide10.code, cursor__9685__auto__, m30892);
  };
  __GT_code = function(cursor__9685__auto__, m30892) {
    switch(arguments.length) {
      case 1:
        return __GT_code__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_code__2.call(this, cursor__9685__auto__, m30892);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_code.cljs$core$IFn$_invoke$arity$1 = __GT_code__1;
  __GT_code.cljs$core$IFn$_invoke$arity$2 = __GT_code__2;
  return __GT_code;
}();
t3tr0s_slides.slide10.cell_size = cljs.core.quot.call(null, 600, t3tr0s_slides.slide10.rows);
t3tr0s_slides.slide10.draw_cell_BANG_ = function draw_cell_BANG_(ctx, p__30917, is_center) {
  var vec__30919 = p__30917;
  var x = cljs.core.nth.call(null, vec__30919, 0, null);
  var y = cljs.core.nth.call(null, vec__30919, 1, null);
  ctx.lineWidth = 2;
  var rx = t3tr0s_slides.slide10.cell_size * x;
  var ry = t3tr0s_slides.slide10.cell_size * y;
  var rs = t3tr0s_slides.slide10.cell_size;
  var cx = t3tr0s_slides.slide10.cell_size * (x + .5);
  var cy = t3tr0s_slides.slide10.cell_size * (y + .5);
  var cr = t3tr0s_slides.slide10.cell_size / 4;
  ctx.fillRect(rx, ry, rs, rs);
  ctx.strokeRect(rx, ry, rs, rs);
  if (cljs.core.truth_(is_center)) {
    ctx.beginPath();
    ctx.arc(cx, cy, cr, 0, 2 * Math.PI);
    ctx.fill();
    return ctx.stroke();
  } else {
    return null;
  }
};
t3tr0s_slides.slide10.piece_abs_coords = function piece_abs_coords(piece, p__30920) {
  var vec__30924 = p__30920;
  var cx = cljs.core.nth.call(null, vec__30924, 0, null);
  var cy = cljs.core.nth.call(null, vec__30924, 1, null);
  return cljs.core.mapv.call(null, function(vec__30924, cx, cy) {
    return function(p__30925) {
      var vec__30926 = p__30925;
      var x = cljs.core.nth.call(null, vec__30926, 0, null);
      var y = cljs.core.nth.call(null, vec__30926, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cx + x, cy + y], null);
    };
  }(vec__30924, cx, cy), piece);
};
t3tr0s_slides.slide10.draw_piece_BANG_ = function draw_piece_BANG_(ctx, piece, pos) {
  var seq__30933 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.slide10.piece_abs_coords.call(null, piece, pos)));
  var chunk__30934 = null;
  var count__30935 = 0;
  var i__30936 = 0;
  while (true) {
    if (i__30936 < count__30935) {
      var vec__30937 = cljs.core._nth.call(null, chunk__30934, i__30936);
      var i = cljs.core.nth.call(null, vec__30937, 0, null);
      var c = cljs.core.nth.call(null, vec__30937, 1, null);
      t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
      var G__30939 = seq__30933;
      var G__30940 = chunk__30934;
      var G__30941 = count__30935;
      var G__30942 = i__30936 + 1;
      seq__30933 = G__30939;
      chunk__30934 = G__30940;
      count__30935 = G__30941;
      i__30936 = G__30942;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__30933);
      if (temp__4126__auto__) {
        var seq__30933__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__30933__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__30933__$1);
          var G__30943 = cljs.core.chunk_rest.call(null, seq__30933__$1);
          var G__30944 = c__4309__auto__;
          var G__30945 = cljs.core.count.call(null, c__4309__auto__);
          var G__30946 = 0;
          seq__30933 = G__30943;
          chunk__30934 = G__30944;
          count__30935 = G__30945;
          i__30936 = G__30946;
          continue;
        } else {
          var vec__30938 = cljs.core.first.call(null, seq__30933__$1);
          var i = cljs.core.nth.call(null, vec__30938, 0, null);
          var c = cljs.core.nth.call(null, vec__30938, 1, null);
          t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, c, cljs.core._EQ_.call(null, c, pos));
          var G__30947 = cljs.core.next.call(null, seq__30933__$1);
          var G__30948 = null;
          var G__30949 = 0;
          var G__30950 = 0;
          seq__30933 = G__30947;
          chunk__30934 = G__30948;
          count__30935 = G__30949;
          i__30936 = G__30950;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide10.draw_board_BANG_ = function draw_board_BANG_(ctx, board) {
  var seq__30963 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide10.rows));
  var chunk__30968 = null;
  var count__30969 = 0;
  var i__30970 = 0;
  while (true) {
    if (i__30970 < count__30969) {
      var y = cljs.core._nth.call(null, chunk__30968, i__30970);
      var seq__30971_30975 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide10.cols));
      var chunk__30972_30976 = null;
      var count__30973_30977 = 0;
      var i__30974_30978 = 0;
      while (true) {
        if (i__30974_30978 < count__30973_30977) {
          var x_30979 = cljs.core._nth.call(null, chunk__30972_30976, i__30974_30978);
          var v_30980 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_30979], null));
          if (v_30980 === 0) {
          } else {
            t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_30979, y], null), false);
          }
          var G__30981 = seq__30971_30975;
          var G__30982 = chunk__30972_30976;
          var G__30983 = count__30973_30977;
          var G__30984 = i__30974_30978 + 1;
          seq__30971_30975 = G__30981;
          chunk__30972_30976 = G__30982;
          count__30973_30977 = G__30983;
          i__30974_30978 = G__30984;
          continue;
        } else {
          var temp__4126__auto___30985 = cljs.core.seq.call(null, seq__30971_30975);
          if (temp__4126__auto___30985) {
            var seq__30971_30986__$1 = temp__4126__auto___30985;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__30971_30986__$1)) {
              var c__4309__auto___30987 = cljs.core.chunk_first.call(null, seq__30971_30986__$1);
              var G__30988 = cljs.core.chunk_rest.call(null, seq__30971_30986__$1);
              var G__30989 = c__4309__auto___30987;
              var G__30990 = cljs.core.count.call(null, c__4309__auto___30987);
              var G__30991 = 0;
              seq__30971_30975 = G__30988;
              chunk__30972_30976 = G__30989;
              count__30973_30977 = G__30990;
              i__30974_30978 = G__30991;
              continue;
            } else {
              var x_30992 = cljs.core.first.call(null, seq__30971_30986__$1);
              var v_30993 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_30992], null));
              if (v_30993 === 0) {
              } else {
                t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_30992, y], null), false);
              }
              var G__30994 = cljs.core.next.call(null, seq__30971_30986__$1);
              var G__30995 = null;
              var G__30996 = 0;
              var G__30997 = 0;
              seq__30971_30975 = G__30994;
              chunk__30972_30976 = G__30995;
              count__30973_30977 = G__30996;
              i__30974_30978 = G__30997;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__30998 = seq__30963;
      var G__30999 = chunk__30968;
      var G__31000 = count__30969;
      var G__31001 = i__30970 + 1;
      seq__30963 = G__30998;
      chunk__30968 = G__30999;
      count__30969 = G__31000;
      i__30970 = G__31001;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__30963);
      if (temp__4126__auto__) {
        var seq__30963__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__30963__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__30963__$1);
          var G__31002 = cljs.core.chunk_rest.call(null, seq__30963__$1);
          var G__31003 = c__4309__auto__;
          var G__31004 = cljs.core.count.call(null, c__4309__auto__);
          var G__31005 = 0;
          seq__30963 = G__31002;
          chunk__30968 = G__31003;
          count__30969 = G__31004;
          i__30970 = G__31005;
          continue;
        } else {
          var y = cljs.core.first.call(null, seq__30963__$1);
          var seq__30964_31006 = cljs.core.seq.call(null, cljs.core.range.call(null, t3tr0s_slides.slide10.cols));
          var chunk__30965_31007 = null;
          var count__30966_31008 = 0;
          var i__30967_31009 = 0;
          while (true) {
            if (i__30967_31009 < count__30966_31008) {
              var x_31010 = cljs.core._nth.call(null, chunk__30965_31007, i__30967_31009);
              var v_31011 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_31010], null));
              if (v_31011 === 0) {
              } else {
                t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_31010, y], null), false);
              }
              var G__31012 = seq__30964_31006;
              var G__31013 = chunk__30965_31007;
              var G__31014 = count__30966_31008;
              var G__31015 = i__30967_31009 + 1;
              seq__30964_31006 = G__31012;
              chunk__30965_31007 = G__31013;
              count__30966_31008 = G__31014;
              i__30967_31009 = G__31015;
              continue;
            } else {
              var temp__4126__auto___31016__$1 = cljs.core.seq.call(null, seq__30964_31006);
              if (temp__4126__auto___31016__$1) {
                var seq__30964_31017__$1 = temp__4126__auto___31016__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__30964_31017__$1)) {
                  var c__4309__auto___31018 = cljs.core.chunk_first.call(null, seq__30964_31017__$1);
                  var G__31019 = cljs.core.chunk_rest.call(null, seq__30964_31017__$1);
                  var G__31020 = c__4309__auto___31018;
                  var G__31021 = cljs.core.count.call(null, c__4309__auto___31018);
                  var G__31022 = 0;
                  seq__30964_31006 = G__31019;
                  chunk__30965_31007 = G__31020;
                  count__30966_31008 = G__31021;
                  i__30967_31009 = G__31022;
                  continue;
                } else {
                  var x_31023 = cljs.core.first.call(null, seq__30964_31017__$1);
                  var v_31024 = cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y, x_31023], null));
                  if (v_31024 === 0) {
                  } else {
                    t3tr0s_slides.slide10.draw_cell_BANG_.call(null, ctx, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x_31023, y], null), false);
                  }
                  var G__31025 = cljs.core.next.call(null, seq__30964_31017__$1);
                  var G__31026 = null;
                  var G__31027 = 0;
                  var G__31028 = 0;
                  seq__30964_31006 = G__31025;
                  chunk__30965_31007 = G__31026;
                  count__30966_31008 = G__31027;
                  i__30967_31009 = G__31028;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__31029 = cljs.core.next.call(null, seq__30963__$1);
          var G__31030 = null;
          var G__31031 = 0;
          var G__31032 = 0;
          seq__30963 = G__31029;
          chunk__30968 = G__31030;
          count__30969 = G__31031;
          i__30970 = G__31032;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.slide10.draw_canvas_BANG_ = function draw_canvas_BANG_(app, canvas) {
  var ctx = canvas.getContext("2d");
  ctx.fillStyle = "#222";
  ctx.fillRect(0, 0, t3tr0s_slides.slide10.cell_size * t3tr0s_slides.slide10.cols, t3tr0s_slides.slide10.cell_size * t3tr0s_slides.slide10.rows);
  ctx.fillStyle = t3tr0s_slides.slide10.dark_green;
  ctx.strokeStyle = t3tr0s_slides.slide10.light_green;
  t3tr0s_slides.slide10.draw_board_BANG_.call(null, ctx, (new cljs.core.Keyword(null, "board", "board", -1907017633)).cljs$core$IFn$_invoke$arity$1(app));
  var piece = (new cljs.core.Keyword(null, "piece", "piece", 1396691784)).cljs$core$IFn$_invoke$arity$1(app);
  var pos = (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(app);
  var fits = t3tr0s_slides.slide10.app_piece_fits_QMARK_.call(null);
  if (cljs.core.truth_(function() {
    var and__3541__auto__ = piece;
    if (cljs.core.truth_(and__3541__auto__)) {
      return pos;
    } else {
      return and__3541__auto__;
    }
  }())) {
    ctx.fillStyle = fits ? t3tr0s_slides.slide10.dark_purple : t3tr0s_slides.slide10.dark_red;
    ctx.strokeStyle = fits ? t3tr0s_slides.slide10.light_purple : t3tr0s_slides.slide10.light_red;
    return t3tr0s_slides.slide10.draw_piece_BANG_.call(null, ctx, piece, pos);
  } else {
    return null;
  }
};
t3tr0s_slides.slide10.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.slide10.key_name = function key_name(p1__31033_SHARP_) {
  return t3tr0s_slides.slide10.key_names.call(null, p1__31033_SHARP_.keyCode);
};
t3tr0s_slides.slide10.key_down = function key_down(e) {
  var kname = t3tr0s_slides.slide10.key_name.call(null, e);
  var G__31035_31036 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__31035_31036) {
    case "space":
      t3tr0s_slides.slide10.hard_drop_BANG_.call(null);
      break;
    case "up":
      t3tr0s_slides.slide10.try_rotate_BANG_.call(null);
      break;
    case "right":
      t3tr0s_slides.slide10.try_shift_BANG_.call(null, 1);
      break;
    case "left":
      t3tr0s_slides.slide10.try_shift_BANG_.call(null, -1);
      break;
    default:
    ;
  }
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "down", "down", 1565245570), null, new cljs.core.Keyword(null, "space", "space", 348133475), null, new cljs.core.Keyword(null, "up", "up", -269712113), null, new cljs.core.Keyword(null, "right", "right", -452581833), null, new cljs.core.Keyword(null, "left", "left", -399115937), null], null), null)).call(null, kname))) {
    return e.preventDefault();
  } else {
    return null;
  }
};
var ufv___31055 = schema.utils.use_fn_validation;
var output_schema31039_31056 = schema.core.Any;
var input_schema31040_31057 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker31041_31058 = schema.core.checker.call(null, input_schema31040_31057);
var output_checker31042_31059 = schema.core.checker.call(null, output_schema31039_31056);
t3tr0s_slides.slide10.canvas = function(ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059) {
  return function canvas(G__31043, G__31044) {
    var validate__5821__auto__ = ufv___31055.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___31060 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__31043, G__31044], null);
      var temp__4126__auto___31061 = input_checker31041_31058.call(null, args__5822__auto___31060);
      if (cljs.core.truth_(temp__4126__auto___31061)) {
        var error__5823__auto___31062 = temp__4126__auto___31061;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___31062)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema31040_31057, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___31060, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___31062], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__31043;
      var owner = G__31044;
      while (true) {
        if (typeof t3tr0s_slides.slide10.t31050 !== "undefined") {
        } else {
          t3tr0s_slides.slide10.t31050 = function(owner, G__31043, validate__5821__auto__, input_checker31041, canvas, output_schema31039, output_checker31042, G__31044, app, ufv__, input_schema31040, meta31051) {
            this.owner = owner;
            this.G__31043 = G__31043;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker31041 = input_checker31041;
            this.canvas = canvas;
            this.output_schema31039 = output_schema31039;
            this.output_checker31042 = output_checker31042;
            this.G__31044 = G__31044;
            this.app = app;
            this.ufv__ = ufv__;
            this.input_schema31040 = input_schema31040;
            this.meta31051 = meta31051;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide10.t31050.cljs$lang$type = true;
          t3tr0s_slides.slide10.t31050.cljs$lang$ctorStr = "t3tr0s-slides.slide10/t31050";
          t3tr0s_slides.slide10.t31050.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide10/t31050");
            };
          }(validate__5821__auto__, ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059);
          t3tr0s_slides.slide10.t31050.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide10.t31050.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"canvas-2a4d7"}, React.DOM.canvas({"ref":"canvas", "style":{"position":"relative"}}));
            };
          }(validate__5821__auto__, ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059);
          t3tr0s_slides.slide10.t31050.prototype.om$core$IDidUpdate$ = true;
          t3tr0s_slides.slide10.t31050.prototype.om$core$IDidUpdate$did_update$arity$3 = function(validate__5821__auto__, ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059) {
            return function(_, ___$1, ___$2) {
              var self__ = this;
              var ___$3 = this;
              return t3tr0s_slides.slide10.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059);
          t3tr0s_slides.slide10.t31050.prototype.om$core$IDidMount$ = true;
          t3tr0s_slides.slide10.t31050.prototype.om$core$IDidMount$did_mount$arity$1 = function(validate__5821__auto__, ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var canvas__$2 = om.core.get_node.call(null, self__.owner, "canvas");
              canvas__$2.width = t3tr0s_slides.slide10.cols * t3tr0s_slides.slide10.cell_size;
              canvas__$2.height = t3tr0s_slides.slide10.rows * t3tr0s_slides.slide10.cell_size;
              return t3tr0s_slides.slide10.draw_canvas_BANG_.call(null, self__.app, om.core.get_node.call(null, self__.owner, "canvas"));
            };
          }(validate__5821__auto__, ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059);
          t3tr0s_slides.slide10.t31050.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059) {
            return function(_31052) {
              var self__ = this;
              var _31052__$1 = this;
              return self__.meta31051;
            };
          }(validate__5821__auto__, ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059);
          t3tr0s_slides.slide10.t31050.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059) {
            return function(_31052, meta31051__$1) {
              var self__ = this;
              var _31052__$1 = this;
              return new t3tr0s_slides.slide10.t31050(self__.owner, self__.G__31043, self__.validate__5821__auto__, self__.input_checker31041, self__.canvas, self__.output_schema31039, self__.output_checker31042, self__.G__31044, self__.app, self__.ufv__, self__.input_schema31040, meta31051__$1);
            };
          }(validate__5821__auto__, ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059);
          t3tr0s_slides.slide10.__GT_t31050 = function(validate__5821__auto__, ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059) {
            return function __GT_t31050(owner__$1, G__31043__$1, validate__5821__auto____$1, input_checker31041__$1, canvas__$1, output_schema31039__$1, output_checker31042__$1, G__31044__$1, app__$1, ufv____$1, input_schema31040__$1, meta31051) {
              return new t3tr0s_slides.slide10.t31050(owner__$1, G__31043__$1, validate__5821__auto____$1, input_checker31041__$1, canvas__$1, output_schema31039__$1, output_checker31042__$1, G__31044__$1, app__$1, ufv____$1, input_schema31040__$1, meta31051);
            };
          }(validate__5821__auto__, ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059);
        }
        return new t3tr0s_slides.slide10.t31050(owner, G__31043, validate__5821__auto__, input_checker31041_31058, canvas, output_schema31039_31056, output_checker31042_31059, G__31044, app, ufv___31055, input_schema31040_31057, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___31063 = output_checker31042_31059.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___31063)) {
        var error__5823__auto___31064 = temp__4126__auto___31063;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "canvas", "canvas", -158285962, null), cljs.core.pr_str.call(null, error__5823__auto___31064)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema31039_31056, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___31064], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___31055, output_schema31039_31056, input_schema31040_31057, input_checker31041_31058, output_checker31042_31059);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide10.canvas), schema.core.make_fn_schema.call(null, output_schema31039_31056, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema31040_31057], null)));
t3tr0s_slides.slide10.__GT_canvas = function() {
  var __GT_canvas = null;
  var __GT_canvas__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide10.canvas, cursor__9685__auto__);
  };
  var __GT_canvas__2 = function(cursor__9685__auto__, m31038) {
    return om.core.build.call(null, t3tr0s_slides.slide10.canvas, cursor__9685__auto__, m31038);
  };
  __GT_canvas = function(cursor__9685__auto__, m31038) {
    switch(arguments.length) {
      case 1:
        return __GT_canvas__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_canvas__2.call(this, cursor__9685__auto__, m31038);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_canvas.cljs$core$IFn$_invoke$arity$1 = __GT_canvas__1;
  __GT_canvas.cljs$core$IFn$_invoke$arity$2 = __GT_canvas__2;
  return __GT_canvas;
}();
var ufv___31082 = schema.utils.use_fn_validation;
var output_schema31066_31083 = schema.core.Any;
var input_schema31067_31084 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "app", "app", 1079569820, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))], null);
var input_checker31068_31085 = schema.core.checker.call(null, input_schema31067_31084);
var output_checker31069_31086 = schema.core.checker.call(null, output_schema31066_31083);
t3tr0s_slides.slide10.slide = function(ufv___31082, output_schema31066_31083, input_schema31067_31084, input_checker31068_31085, output_checker31069_31086) {
  return function slide(G__31070, G__31071) {
    var validate__5821__auto__ = ufv___31082.get_cell();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var args__5822__auto___31087 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__31070, G__31071], null);
      var temp__4126__auto___31088 = input_checker31068_31085.call(null, args__5822__auto___31087);
      if (cljs.core.truth_(temp__4126__auto___31088)) {
        var error__5823__auto___31089 = temp__4126__auto___31088;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___31089)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema31067_31084, new cljs.core.Keyword(null, "value", "value", 305978217), args__5822__auto___31087, new cljs.core.Keyword(null, "error", "error", 
        -978969032), error__5823__auto___31089], null));
      } else {
      }
    } else {
    }
    var o__5824__auto__ = function() {
      var app = G__31070;
      var owner = G__31071;
      while (true) {
        if (typeof t3tr0s_slides.slide10.t31077 !== "undefined") {
        } else {
          t3tr0s_slides.slide10.t31077 = function(input_schema31067, G__31071, G__31070, owner, validate__5821__auto__, input_checker31068, output_schema31066, output_checker31069, slide, app, ufv__, meta31078) {
            this.input_schema31067 = input_schema31067;
            this.G__31071 = G__31071;
            this.G__31070 = G__31070;
            this.owner = owner;
            this.validate__5821__auto__ = validate__5821__auto__;
            this.input_checker31068 = input_checker31068;
            this.output_schema31066 = output_schema31066;
            this.output_checker31069 = output_checker31069;
            this.slide = slide;
            this.app = app;
            this.ufv__ = ufv__;
            this.meta31078 = meta31078;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          t3tr0s_slides.slide10.t31077.cljs$lang$type = true;
          t3tr0s_slides.slide10.t31077.cljs$lang$ctorStr = "t3tr0s-slides.slide10/t31077";
          t3tr0s_slides.slide10.t31077.cljs$lang$ctorPrWriter = function(validate__5821__auto__, ufv___31082, output_schema31066_31083, input_schema31067_31084, input_checker31068_31085, output_checker31069_31086) {
            return function(this__4120__auto__, writer__4121__auto__, opt__4122__auto__) {
              return cljs.core._write.call(null, writer__4121__auto__, "t3tr0s-slides.slide10/t31077");
            };
          }(validate__5821__auto__, ufv___31082, output_schema31066_31083, input_schema31067_31084, input_checker31068_31085, output_checker31069_31086);
          t3tr0s_slides.slide10.t31077.prototype.om$core$IRender$ = true;
          t3tr0s_slides.slide10.t31077.prototype.om$core$IRender$render$arity$1 = function(validate__5821__auto__, ufv___31082, output_schema31066_31083, input_schema31067_31084, input_checker31068_31085, output_checker31069_31086) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div(null, React.DOM.h1(null, "10. Add hard-drop."), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide10.code, self__.app)), sablono.interpreter.interpret.call(null, om.core.build.call(null, t3tr0s_slides.slide10.canvas, self__.app)));
            };
          }(validate__5821__auto__, ufv___31082, output_schema31066_31083, input_schema31067_31084, input_checker31068_31085, output_checker31069_31086);
          t3tr0s_slides.slide10.t31077.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__5821__auto__, ufv___31082, output_schema31066_31083, input_schema31067_31084, input_checker31068_31085, output_checker31069_31086) {
            return function(_31079) {
              var self__ = this;
              var _31079__$1 = this;
              return self__.meta31078;
            };
          }(validate__5821__auto__, ufv___31082, output_schema31066_31083, input_schema31067_31084, input_checker31068_31085, output_checker31069_31086);
          t3tr0s_slides.slide10.t31077.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__5821__auto__, ufv___31082, output_schema31066_31083, input_schema31067_31084, input_checker31068_31085, output_checker31069_31086) {
            return function(_31079, meta31078__$1) {
              var self__ = this;
              var _31079__$1 = this;
              return new t3tr0s_slides.slide10.t31077(self__.input_schema31067, self__.G__31071, self__.G__31070, self__.owner, self__.validate__5821__auto__, self__.input_checker31068, self__.output_schema31066, self__.output_checker31069, self__.slide, self__.app, self__.ufv__, meta31078__$1);
            };
          }(validate__5821__auto__, ufv___31082, output_schema31066_31083, input_schema31067_31084, input_checker31068_31085, output_checker31069_31086);
          t3tr0s_slides.slide10.__GT_t31077 = function(validate__5821__auto__, ufv___31082, output_schema31066_31083, input_schema31067_31084, input_checker31068_31085, output_checker31069_31086) {
            return function __GT_t31077(input_schema31067__$1, G__31071__$1, G__31070__$1, owner__$1, validate__5821__auto____$1, input_checker31068__$1, output_schema31066__$1, output_checker31069__$1, slide__$1, app__$1, ufv____$1, meta31078) {
              return new t3tr0s_slides.slide10.t31077(input_schema31067__$1, G__31071__$1, G__31070__$1, owner__$1, validate__5821__auto____$1, input_checker31068__$1, output_schema31066__$1, output_checker31069__$1, slide__$1, app__$1, ufv____$1, meta31078);
            };
          }(validate__5821__auto__, ufv___31082, output_schema31066_31083, input_schema31067_31084, input_checker31068_31085, output_checker31069_31086);
        }
        return new t3tr0s_slides.slide10.t31077(input_schema31067_31084, G__31071, G__31070, owner, validate__5821__auto__, input_checker31068_31085, output_schema31066_31083, output_checker31069_31086, slide, app, ufv___31082, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__5821__auto__)) {
      var temp__4126__auto___31090 = output_checker31069_31086.call(null, o__5824__auto__);
      if (cljs.core.truth_(temp__4126__auto___31090)) {
        var error__5823__auto___31091 = temp__4126__auto___31090;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "slide", "slide", 1783023419, null), cljs.core.pr_str.call(null, error__5823__auto___31091)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema31066_31083, new cljs.core.Keyword(null, "value", "value", 305978217), o__5824__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), 
        error__5823__auto___31091], null));
      } else {
      }
    } else {
    }
    return o__5824__auto__;
  };
}(ufv___31082, output_schema31066_31083, input_schema31067_31084, input_checker31068_31085, output_checker31069_31086);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, t3tr0s_slides.slide10.slide), schema.core.make_fn_schema.call(null, output_schema31066_31083, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema31067_31084], null)));
t3tr0s_slides.slide10.__GT_slide = function() {
  var __GT_slide = null;
  var __GT_slide__1 = function(cursor__9685__auto__) {
    return om.core.build.call(null, t3tr0s_slides.slide10.slide, cursor__9685__auto__);
  };
  var __GT_slide__2 = function(cursor__9685__auto__, m31065) {
    return om.core.build.call(null, t3tr0s_slides.slide10.slide, cursor__9685__auto__, m31065);
  };
  __GT_slide = function(cursor__9685__auto__, m31065) {
    switch(arguments.length) {
      case 1:
        return __GT_slide__1.call(this, cursor__9685__auto__);
      case 2:
        return __GT_slide__2.call(this, cursor__9685__auto__, m31065);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_slide.cljs$core$IFn$_invoke$arity$1 = __GT_slide__1;
  __GT_slide.cljs$core$IFn$_invoke$arity$2 = __GT_slide__2;
  return __GT_slide;
}();
t3tr0s_slides.slide10.init = function init(id) {
  return om.core.root.call(null, t3tr0s_slides.slide10.slide, t3tr0s_slides.slide10.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(id)], null));
};
t3tr0s_slides.slide10.resume = function resume() {
  return window.addEventListener("keydown", t3tr0s_slides.slide10.key_down);
};
t3tr0s_slides.slide10.stop = function stop() {
  return window.removeEventListener("keydown", t3tr0s_slides.slide10.key_down);
};
goog.provide("t3tr0s_slides.core");
goog.require("cljs.core");
goog.require("t3tr0s_slides.slide10");
goog.require("t3tr0s_slides.slide04");
goog.require("t3tr0s_slides.slide03");
goog.require("t3tr0s_slides.slide10");
goog.require("t3tr0s_slides.slide00");
goog.require("t3tr0s_slides.slide08");
goog.require("t3tr0s_slides.slide08");
goog.require("t3tr0s_slides.slide03");
goog.require("t3tr0s_slides.slide06");
goog.require("t3tr0s_slides.slide11");
goog.require("t3tr0s_slides.slide07");
goog.require("t3tr0s_slides.slide12");
goog.require("t3tr0s_slides.slide09");
goog.require("t3tr0s_slides.slide12");
goog.require("t3tr0s_slides.slide01");
goog.require("t3tr0s_slides.slide11");
goog.require("t3tr0s_slides.slide05");
goog.require("t3tr0s_slides.slide09");
goog.require("t3tr0s_slides.slide01");
goog.require("t3tr0s_slides.slide04");
goog.require("t3tr0s_slides.slide13");
goog.require("t3tr0s_slides.slide13");
goog.require("t3tr0s_slides.slide00");
goog.require("t3tr0s_slides.slide02");
goog.require("t3tr0s_slides.slide14");
goog.require("t3tr0s_slides.slide02");
goog.require("t3tr0s_slides.slide15");
goog.require("t3tr0s_slides.slide07");
goog.require("t3tr0s_slides.slide15");
goog.require("t3tr0s_slides.slide06");
goog.require("t3tr0s_slides.slide14");
goog.require("t3tr0s_slides.slide05");
cljs.core.enable_console_print_BANG_.call(null);
t3tr0s_slides.core.slides = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide00", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide00.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide00.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide00.stop], null), new cljs.core.PersistentArrayMap(null, 
4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide01", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide01.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide01.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide01.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide02", new cljs.core.Keyword(null, "init", "init", -1875481434), 
t3tr0s_slides.slide02.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide02.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide02.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide03", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide03.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide03.resume, new cljs.core.Keyword(null, 
"stop", "stop", -2140911342), t3tr0s_slides.slide03.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide04", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide04.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide04.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide04.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"id", "id", -1388402092), "slide05", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide05.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide05.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide05.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide06", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide06.init, 
new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide06.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide06.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide07", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide07.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide07.resume, new cljs.core.Keyword(null, "stop", 
"stop", -2140911342), t3tr0s_slides.slide07.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide08", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide08.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide08.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide08.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"id", "id", -1388402092), "slide09", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide09.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide09.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide09.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide10", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide10.init, 
new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide10.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide10.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide11", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide11.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide11.resume, new cljs.core.Keyword(null, "stop", 
"stop", -2140911342), t3tr0s_slides.slide11.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide12", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide12.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide12.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide12.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"id", "id", -1388402092), "slide13", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide13.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide13.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide13.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide14", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide14.init, 
new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide14.resume, new cljs.core.Keyword(null, "stop", "stop", -2140911342), t3tr0s_slides.slide14.stop], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "slide15", new cljs.core.Keyword(null, "init", "init", -1875481434), t3tr0s_slides.slide15.init, new cljs.core.Keyword(null, "resume", "resume", -118572261), t3tr0s_slides.slide15.resume, new cljs.core.Keyword(null, "stop", 
"stop", -2140911342), t3tr0s_slides.slide15.stop], null)], null);
t3tr0s_slides.core.current_slide = cljs.core.atom.call(null, null);
t3tr0s_slides.core.on_slide_change = function on_slide_change(_, ___$1, i_prev, i) {
  if (cljs.core._EQ_.call(null, i_prev, i)) {
    return null;
  } else {
    var seq__15494_15500 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, t3tr0s_slides.core.slides));
    var chunk__15495_15501 = null;
    var count__15496_15502 = 0;
    var i__15497_15503 = 0;
    while (true) {
      if (i__15497_15503 < count__15496_15502) {
        var vec__15498_15504 = cljs.core._nth.call(null, chunk__15495_15501, i__15497_15503);
        var j_15505 = cljs.core.nth.call(null, vec__15498_15504, 0, null);
        var slide_15506 = cljs.core.nth.call(null, vec__15498_15504, 1, null);
        var pos_15507 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((j_15505 - i) * 100 + 50) + "%";
        var elm_15508 = document.getElementById((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(slide_15506));
        if (i_prev == null) {
          $(elm_15508).css({"left":pos_15507});
        } else {
          $(elm_15508).velocity({"left":pos_15507});
        }
        var G__15509 = seq__15494_15500;
        var G__15510 = chunk__15495_15501;
        var G__15511 = count__15496_15502;
        var G__15512 = i__15497_15503 + 1;
        seq__15494_15500 = G__15509;
        chunk__15495_15501 = G__15510;
        count__15496_15502 = G__15511;
        i__15497_15503 = G__15512;
        continue;
      } else {
        var temp__4126__auto___15513 = cljs.core.seq.call(null, seq__15494_15500);
        if (temp__4126__auto___15513) {
          var seq__15494_15514__$1 = temp__4126__auto___15513;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__15494_15514__$1)) {
            var c__4309__auto___15515 = cljs.core.chunk_first.call(null, seq__15494_15514__$1);
            var G__15516 = cljs.core.chunk_rest.call(null, seq__15494_15514__$1);
            var G__15517 = c__4309__auto___15515;
            var G__15518 = cljs.core.count.call(null, c__4309__auto___15515);
            var G__15519 = 0;
            seq__15494_15500 = G__15516;
            chunk__15495_15501 = G__15517;
            count__15496_15502 = G__15518;
            i__15497_15503 = G__15519;
            continue;
          } else {
            var vec__15499_15520 = cljs.core.first.call(null, seq__15494_15514__$1);
            var j_15521 = cljs.core.nth.call(null, vec__15499_15520, 0, null);
            var slide_15522 = cljs.core.nth.call(null, vec__15499_15520, 1, null);
            var pos_15523 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((j_15521 - i) * 100 + 50) + "%";
            var elm_15524 = document.getElementById((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(slide_15522));
            if (i_prev == null) {
              $(elm_15524).css({"left":pos_15523});
            } else {
              $(elm_15524).velocity({"left":pos_15523});
            }
            var G__15525 = cljs.core.next.call(null, seq__15494_15514__$1);
            var G__15526 = null;
            var G__15527 = 0;
            var G__15528 = 0;
            seq__15494_15500 = G__15525;
            chunk__15495_15501 = G__15526;
            count__15496_15502 = G__15527;
            i__15497_15503 = G__15528;
            continue;
          }
        } else {
        }
      }
      break;
    }
    var stop_15529 = (new cljs.core.Keyword(null, "stop", "stop", -2140911342)).cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, t3tr0s_slides.core.slides, i_prev));
    var resume_15530 = (new cljs.core.Keyword(null, "resume", "resume", -118572261)).cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, t3tr0s_slides.core.slides, i));
    if (cljs.core.truth_(stop_15529)) {
      stop_15529.call(null);
    } else {
    }
    if (cljs.core.truth_(resume_15530)) {
      resume_15530.call(null);
    } else {
    }
    return document["location"]["hash"] = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i);
  }
};
cljs.core.add_watch.call(null, t3tr0s_slides.core.current_slide, new cljs.core.Keyword(null, "slide", "slide", 142491892), t3tr0s_slides.core.on_slide_change);
t3tr0s_slides.core.key_names = new cljs.core.PersistentArrayMap(null, 5, [37, new cljs.core.Keyword(null, "left", "left", -399115937), 38, new cljs.core.Keyword(null, "up", "up", -269712113), 39, new cljs.core.Keyword(null, "right", "right", -452581833), 40, new cljs.core.Keyword(null, "down", "down", 1565245570), 32, new cljs.core.Keyword(null, "space", "space", 348133475)], null);
t3tr0s_slides.core.key_name = function key_name(p1__15531_SHARP_) {
  return t3tr0s_slides.core.key_names.call(null, p1__15531_SHARP_.keyCode);
};
t3tr0s_slides.core.key_down = function key_down(e) {
  var kname = t3tr0s_slides.core.key_name.call(null, e);
  var shift = e.shiftKey;
  var G__15535 = kname instanceof cljs.core.Keyword ? kname.fqn : null;
  switch(G__15535) {
    case "right":
      if (cljs.core.truth_(shift)) {
        cljs.core.swap_BANG_.call(null, t3tr0s_slides.core.current_slide, function(G__15535, kname, shift) {
          return function(p1__15533_SHARP_) {
            var x__3867__auto__ = cljs.core.count.call(null, t3tr0s_slides.core.slides) - 1;
            var y__3868__auto__ = p1__15533_SHARP_ + 1;
            return x__3867__auto__ < y__3868__auto__ ? x__3867__auto__ : y__3868__auto__;
          };
        }(G__15535, kname, shift));
        return e.preventDefault();
      } else {
        return null;
      }
      break;
    case "left":
      if (cljs.core.truth_(shift)) {
        cljs.core.swap_BANG_.call(null, t3tr0s_slides.core.current_slide, function(G__15535, kname, shift) {
          return function(p1__15532_SHARP_) {
            var x__3860__auto__ = 0;
            var y__3861__auto__ = p1__15532_SHARP_ - 1;
            return x__3860__auto__ > y__3861__auto__ ? x__3860__auto__ : y__3861__auto__;
          };
        }(G__15535, kname, shift));
        return e.preventDefault();
      } else {
        return null;
      }
      break;
    default:
      return null;
  }
};
t3tr0s_slides.core.on_hash_change = function on_hash_change() {
  var hash_ = document["location"]["hash"].replace(/^#/, "");
  if (cljs.core._EQ_.call(null, hash_, "")) {
    document["location"]["hash"] = "0";
  } else {
  }
  var slide_number = parseInt(hash_);
  var slide = cljs.core.get.call(null, t3tr0s_slides.core.slides, slide_number);
  if (cljs.core.truth_(slide)) {
    return cljs.core.reset_BANG_.call(null, t3tr0s_slides.core.current_slide, slide_number);
  } else {
    return null;
  }
};
t3tr0s_slides.core.init_slides_BANG_ = function init_slides_BANG_() {
  var seq__15543 = cljs.core.seq.call(null, t3tr0s_slides.core.slides);
  var chunk__15544 = null;
  var count__15545 = 0;
  var i__15546 = 0;
  while (true) {
    if (i__15546 < count__15545) {
      var map__15547 = cljs.core._nth.call(null, chunk__15544, i__15546);
      var map__15547__$1 = cljs.core.seq_QMARK_.call(null, map__15547) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15547) : map__15547;
      var init = cljs.core.get.call(null, map__15547__$1, new cljs.core.Keyword(null, "init", "init", -1875481434));
      var id = cljs.core.get.call(null, map__15547__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
      init.call(null, id);
      var G__15549 = seq__15543;
      var G__15550 = chunk__15544;
      var G__15551 = count__15545;
      var G__15552 = i__15546 + 1;
      seq__15543 = G__15549;
      chunk__15544 = G__15550;
      count__15545 = G__15551;
      i__15546 = G__15552;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__15543);
      if (temp__4126__auto__) {
        var seq__15543__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15543__$1)) {
          var c__4309__auto__ = cljs.core.chunk_first.call(null, seq__15543__$1);
          var G__15553 = cljs.core.chunk_rest.call(null, seq__15543__$1);
          var G__15554 = c__4309__auto__;
          var G__15555 = cljs.core.count.call(null, c__4309__auto__);
          var G__15556 = 0;
          seq__15543 = G__15553;
          chunk__15544 = G__15554;
          count__15545 = G__15555;
          i__15546 = G__15556;
          continue;
        } else {
          var map__15548 = cljs.core.first.call(null, seq__15543__$1);
          var map__15548__$1 = cljs.core.seq_QMARK_.call(null, map__15548) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15548) : map__15548;
          var init = cljs.core.get.call(null, map__15548__$1, new cljs.core.Keyword(null, "init", "init", -1875481434));
          var id = cljs.core.get.call(null, map__15548__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
          init.call(null, id);
          var G__15557 = cljs.core.next.call(null, seq__15543__$1);
          var G__15558 = null;
          var G__15559 = 0;
          var G__15560 = 0;
          seq__15543 = G__15557;
          chunk__15544 = G__15558;
          count__15545 = G__15559;
          i__15546 = G__15560;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
t3tr0s_slides.core.init = function init() {
  t3tr0s_slides.core.init_slides_BANG_.call(null);
  window.addEventListener("keydown", t3tr0s_slides.core.key_down);
  window["onhashchange"] = t3tr0s_slides.core.on_hash_change;
  return t3tr0s_slides.core.on_hash_change.call(null);
};
window.addEventListener("load", t3tr0s_slides.core.init);
